{
 "kwant": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      20,
      27
     ]
    },
    "exec": {
     "line number": [
      37,
      46
     ]
    },
    "kwant.__all__": {
     "line number": [
      33,
      38,
      47,
      57,
      63
     ]
    },
    "kwant.available": {
     "line number": [
      45
     ]
    },
    "kwant.inspect": {
     "line number": [
      22
     ]
    },
    "kwant.msg": {
     "line number": [
      27
     ]
    },
    "kwant.test": {
     "line number": [
      74
     ]
    },
    "lazy_import": {
     "line number": [
      62,
      64
     ]
    },
    "len": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "kwant.__version__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "kwant._colormaps": {
  "data": {
   "symbols_in_volume": {
    "kwant._colormaps.kr_data": {
     "line number": [
      274
     ]
    },
    "matplotlib.colors.ListedColormap": {
     "line number": [
      274
     ]
    },
    "numpy.array": {
     "line number": [
      271
     ]
    },
    "numpy.clip": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant._colormaps.ListedColormap": {
  "data": {
   "shadows": "matplotlib.colors.ListedColormap"
  },
  "type": "import"
 },
 "kwant._colormaps.kr_data": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "kwant._colormaps.kwant_red": {
  "data": {
   "lineno": 274
  },
  "type": "constant"
 },
 "kwant._colormaps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant._common": {
  "data": {},
  "type": "module"
 },
 "kwant._common.KwantDeprecationWarning": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "Warning": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant._common.UserCodeError": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant._common.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "kwant._common.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "kwant._common.ensure_isinstance": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      67
     ]
    },
    "isinstance": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._common.ensure_rng": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      84
     ]
    },
    "all": {
     "line number": [
      81
     ]
    },
    "hasattr": {
     "line number": [
      81
     ]
    },
    "isinstance": {
     "line number": [
      79
     ]
    },
    "kwant._common.numbers": {
     "line number": [
      79
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      80
     ]
    },
    "numpy.random.mtrand._rand": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._common.get_parameters": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "error": {
     "line number": [
      124,
      127,
      129
     ]
    },
    "kwant._common.inspect": {
     "line number": [
      116,
      117
     ]
    },
    "tuple": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._common.get_parameters.error": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      111
     ]
    },
    "ValueError": {
     "line number": [
      113
     ]
    },
    "kwant._common.inspect": {
     "line number": [
      108,
      110
     ]
    },
    "repr": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._common.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "kwant._common.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "kwant._common.interleave": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      58
     ]
    },
    "zip": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._common.lazy_import": {
  "data": {
   "lineno": 133
  },
  "type": "class"
 },
 "kwant._common.lazy_import.__getattr__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      152
     ]
    },
    "kwant._common.KwantDeprecationWarning": {
     "line number": [
      146
     ]
    },
    "kwant._common.importlib": {
     "line number": [
      148
     ]
    },
    "kwant._common.sys": {
     "line number": [
      150
     ]
    },
    "kwant._common.warnings": {
     "line number": [
      146
     ]
    },
    "setattr": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._common.lazy_import.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant._common.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "kwant._common.reraise_warnings": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      88
     ]
    },
    "kwant._common.warnings": {
     "line number": [
      90,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "kwant._common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "kwant._kwant_version": {
  "data": {},
  "type": "module"
 },
 "kwant._kwant_version.version": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "kwant._plotter": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      33,
      36
     ]
    },
    "RuntimeWarning": {
     "line number": [
      34,
      38
     ]
    },
    "kwant._plotter.corners": {
     "line number": [
      142,
      142,
      143,
      143,
      144,
      144
     ]
    },
    "kwant._plotter.has3d": {
     "line number": [
      112
     ]
    },
    "kwant._plotter.mpl_available": {
     "line number": [
      55
     ]
    },
    "kwant._plotter.phi": {
     "line number": [
      121,
      121,
      121
     ]
    },
    "kwant._plotter.warnings": {
     "line number": [
      34,
      37
     ]
    },
    "kwant._plotter.xyz": {
     "line number": [
      122,
      122,
      122,
      122,
      123,
      123
     ]
    },
    "math.pi": {
     "line number": [
      120
     ]
    },
    "numpy.asarray": {
     "line number": [
      124
     ]
    },
    "numpy.bmat": {
     "line number": [
      122
     ]
    },
    "numpy.c_.T.reshape": {
     "line number": [
      121
     ]
    },
    "numpy.cos": {
     "line number": [
      121
     ]
    },
    "numpy.float_": {
     "line number": [
      141
     ]
    },
    "numpy.linspace": {
     "line number": [
      120
     ]
    },
    "numpy.sin": {
     "line number": [
      121
     ]
    },
    "numpy.zeros": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant._plotter.Figure": {
  "data": {
   "shadows": "matplotlib.figure.Figure"
  },
  "type": "import"
 },
 "kwant._plotter.Line3DCollection": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "mpl_toolkits.mplot3d.art3d.Line3DCollection": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant._plotter.Line3DCollection.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "super": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.Line3DCollection.do_3d_projection": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "super": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.Line3DCollection.draw": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "kwant._plotter.projected_length": {
     "line number": [
      167
     ]
    },
    "super": {
     "line number": [
      179,
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.Line3DCollection.set_linewidths": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "kwant._plotter.nparray_if_array": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.LineCollection": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "matplotlib.collections.LineCollection": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant._plotter.LineCollection.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "super": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.LineCollection.draw": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "super": {
     "line number": [
      73,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.LineCollection.set_linewidths": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "kwant._plotter.nparray_if_array": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.Path3DCollection": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "mpl_toolkits.mplot3d.art3d.Patch3DCollection": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant._plotter.Path3DCollection.__init__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "Affine2D": {
     "line number": [
      207,
      209
     ]
    },
    "kwant._plotter.matplotlib": {
     "line number": [
      187,
      207
     ]
    },
    "kwant._plotter.nparray_if_array": {
     "line number": [
      201,
      203,
      204,
      205
     ]
    },
    "numpy.array": {
     "line number": [
      200,
      208
     ]
    },
    "super": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.Path3DCollection.do_3d_projection": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      266
     ]
    },
    "kwant._plotter.Path3DCollection": {
     "line number": [
      275
     ]
    },
    "kwant._plotter.corners": {
     "line number": [
      307
     ]
    },
    "kwant._plotter.sort3d": {
     "line number": [
      253
     ]
    },
    "len": {
     "line number": [
      247,
      258,
      262,
      266
     ]
    },
    "list": {
     "line number": [
      280,
      287,
      307
     ]
    },
    "mpl_toolkits.mplot3d.proj3d.proj_transform_clip": {
     "line number": [
      250,
      306
     ]
    },
    "numpy.array": {
     "line number": [
      251
     ]
    },
    "numpy.asarray": {
     "line number": [
      304
     ]
    },
    "numpy.dot": {
     "line number": [
      307
     ]
    },
    "numpy.ndarray": {
     "line number": [
      266
     ]
    },
    "numpy.resize": {
     "line number": [
      259,
      267,
      283,
      290
     ]
    },
    "proj": {
     "line number": [
      251,
      306,
      307
     ]
    },
    "super": {
     "line number": [
      275,
      282,
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.Path3DCollection.draw": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "kwant._plotter.projected_length": {
     "line number": [
      313
     ]
    },
    "super": {
     "line number": [
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.Path3DCollection.get_transform": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "Affine2D": {
     "line number": [
      232,
      239,
      241
     ]
    },
    "kwant._plotter.matplotlib": {
     "line number": [
      232
     ]
    },
    "kwant._plotter.projected_length": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.Path3DCollection.get_transforms": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "kwant._plotter.Path3DCollection.set_array": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "kwant._plotter.nparray_if_array": {
     "line number": [
      213
     ]
    },
    "super": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.Path3DCollection.set_color": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "kwant._plotter.nparray_if_array": {
     "line number": [
      217
     ]
    },
    "super": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.Path3DCollection.set_edgecolors": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "kwant._plotter.matplotlib": {
     "line number": [
      222
     ]
    },
    "kwant._plotter.nparray_if_array": {
     "line number": [
      223
     ]
    },
    "super": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.PathCollection": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "matplotlib.collections.PathCollection": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant._plotter.PathCollection.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "kwant._plotter.matplotlib": {
     "line number": [
      86
     ]
    },
    "kwant._plotter.nparray_if_array": {
     "line number": [
      83
     ]
    },
    "numpy.array": {
     "line number": [
      85
     ]
    },
    "super": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.PathCollection.draw": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "matplotlib.collections.Collection.draw": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.PathCollection.get_transform": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "Affine2D": {
     "line number": [
      98,
      100
     ]
    },
    "kwant._plotter.matplotlib": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.PathCollection.get_transforms": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "kwant._plotter.collections": {
  "data": {
   "shadows": "matplotlib.collections"
  },
  "type": "import"
 },
 "kwant._plotter.corners": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "kwant._plotter.has3d": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "kwant._plotter.isarray": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      45
     ]
    },
    "isinstance": {
     "line number": [
      45
     ]
    },
    "str": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "kwant._plotter.matplotlib.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "kwant._plotter.matplotlib.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "kwant._plotter.mpl_available": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "kwant._plotter.mplot3d": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d"
  },
  "type": "import"
 },
 "kwant._plotter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant._plotter.nparray_if_array": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "kwant._plotter.isarray": {
     "line number": [
      52
     ]
    },
    "numpy.asarray": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.phi": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "kwant._plotter.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "kwant._plotter.projected_length": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "kwant._plotter.unit_sphere": {
     "line number": [
      130
     ]
    },
    "len": {
     "line number": [
      136
     ]
    },
    "list": {
     "line number": [
      133,
      134
     ]
    },
    "math.sqrt": {
     "line number": [
      137
     ]
    },
    "mpl_toolkits.mplot3d.proj3d.proj_transform": {
     "line number": [
      132
     ]
    },
    "numpy.apply_along_axis": {
     "line number": [
      128
     ]
    },
    "numpy.array": {
     "line number": [
      127
     ]
    },
    "numpy.asarray": {
     "line number": [
      133
     ]
    },
    "numpy.repeat": {
     "line number": [
      136
     ]
    },
    "numpy.sum": {
     "line number": [
      128,
      137
     ]
    },
    "transform": {
     "line number": [
      133,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._plotter.sort3d": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "kwant._plotter.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "kwant._plotter.unit_sphere": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "kwant._plotter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "kwant._plotter.xyz": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "kwant._system": {
  "data": {
   "symbols_in_volume": {
    "kwant._system.__bootstrap__": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant._system.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": {
    "__loader__": {
     "line number": [
      5,
      5
     ]
    },
    "__name__": {
     "line number": [
      4,
      6
     ]
    },
    "kwant._system.imp": {
     "line number": [
      6
     ]
    },
    "kwant._system.pkg_resources": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant._system.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "kwant._system.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "kwant._system.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "kwant.available": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "kwant.continuum": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      13,
      16
     ]
    },
    "kwant.continuum.msg": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.continuum.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "kwant.continuum._common": {
  "data": {
   "symbols_in_volume": {
    "kwant.continuum._common.extra_ns": {
     "line number": [
      35,
      36,
      37,
      39,
      43,
      44
     ]
    },
    "kwant.continuum._common.momentum_operators": {
     "line number": [
      35
     ]
    },
    "kwant.continuum._common.pauli": {
     "line number": [
      39
     ]
    },
    "kwant.continuum._common.position_operators": {
     "line number": [
      36
     ]
    },
    "kwant.continuum._common.sympy": {
     "line number": [
      27,
      29,
      30,
      32,
      34,
      37,
      38,
      38
     ]
    },
    "set": {
     "line number": [
      27
     ]
    },
    "sympy.core.core.all_classes": {
     "line number": [
      27,
      27
     ]
    },
    "sympy.physics.matrices.msigma": {
     "line number": [
      32,
      32,
      32
     ]
    },
    "zip": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.continuum._common.AppliedUndef": {
  "data": {
   "shadows": "sympy.core.function.AppliedUndef"
  },
  "type": "import"
 },
 "kwant.continuum._common._expression_monomials": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "collections.defaultdict": {
     "line number": [
      274
     ]
    },
    "dict": {
     "line number": [
      286
     ]
    },
    "kwant.continuum._common.sympy": {
     "line number": [
      273,
      274,
      284,
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum._common._msigma": {
  "data": {
   "shadows": "sympy.physics.matrices.msigma"
  },
  "type": "import"
 },
 "kwant.continuum._common.converter": {
  "data": {
   "shadows": "sympy.core.sympify.converter"
  },
  "type": "import"
 },
 "kwant.continuum._common.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "kwant.continuum._common.extra_ns": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "kwant.continuum._common.gcd": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      307
     ]
    },
    "len": {
     "line number": [
      292,
      297,
      298,
      299,
      300
     ]
    },
    "list": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum._common.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "kwant.continuum._common.lambdify": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "kwant.continuum._common.sympify": {
     "line number": [
      79
     ]
    },
    "kwant.continuum._common.sympy": {
     "line number": [
      81,
      82,
      84
     ]
    },
    "locals": {
     "line number": [
      79
     ]
    },
    "reraise_warnings": {
     "line number": [
      78
     ]
    },
    "sorted": {
     "line number": [
      84
     ]
    },
    "str": {
     "line number": [
      82
     ]
    },
    "sympy.core.function.AppliedUndef": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum._common.make_commutative": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "kwant.continuum._common.sympy": {
     "line number": [
      217,
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum._common.momentum_operators": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "kwant.continuum._common.monomials": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "collections.defaultdict": {
     "line number": [
      251
     ]
    },
    "dict": {
     "line number": [
      256
     ]
    },
    "isinstance": {
     "line number": [
      248
     ]
    },
    "kwant.continuum._common._expression_monomials": {
     "line number": [
      249,
      253
     ]
    },
    "kwant.continuum._common.sympify": {
     "line number": [
      246
     ]
    },
    "kwant.continuum._common.sympy": {
     "line number": [
      244,
      248,
      251
     ]
    },
    "numpy.ndenumerate": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum._common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.continuum._common.pauli": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "kwant.continuum._common.position_operators": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "kwant.continuum._common.sympify": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      159
     ]
    },
    "ValueError": {
     "line number": [
      170
     ]
    },
    "isinstance": {
     "line number": [
      155,
      168
     ]
    },
    "kwant.continuum._common.extra_ns": {
     "line number": [
      176
     ]
    },
    "kwant.continuum._common.keyword": {
     "line number": [
      169
     ]
    },
    "kwant.continuum._common.sympy": {
     "line number": [
      180,
      181,
      185,
      196,
      197
     ]
    },
    "kwant.continuum._common.warnings": {
     "line number": [
      157
     ]
    },
    "list": {
     "line number": [
      179,
      180,
      188,
      190
     ]
    },
    "locals": {
     "line number": [
      156,
      164,
      165,
      167,
      175,
      181
     ]
    },
    "locals.items": {
     "line number": [
      175
     ]
    },
    "locals.setdefault": {
     "line number": [
      177
     ]
    },
    "repr": {
     "line number": [
      172
     ]
    },
    "str": {
     "line number": [
      168,
      196
     ]
    },
    "sympy.core.core.all_classes": {
     "line number": [
      155
     ]
    },
    "sympy.core.sympify.converter": {
     "line number": [
      180,
      188,
      190
     ]
    },
    "sympy.core.sympify.converter.pop": {
     "line number": [
      179
     ]
    },
    "tuple": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum._common.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "kwant.continuum._common.sympy.abc": {
  "data": {
   "shadows": "sympy.abc"
  },
  "type": "import"
 },
 "kwant.continuum._common.sympy.physics.quantum": {
  "data": {
   "shadows": "sympy.physics.quantum"
  },
  "type": "import"
 },
 "kwant.continuum._common.sympy_classes": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "kwant.continuum._common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "kwant.continuum.discretizer": {
  "data": {
   "symbols_in_volume": {
    "kwant.continuum.discretizer.sympy": {
     "line number": [
      33,
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.continuum.discretizer.AppliedUndef": {
  "data": {
   "shadows": "sympy.core.function.AppliedUndef"
  },
  "type": "import"
 },
 "kwant.continuum.discretizer.LambdaPrinter": {
  "data": {
   "shadows": "sympy.printing.lambdarepr.LambdaPrinter"
  },
  "type": "import"
 },
 "kwant.continuum.discretizer._DiscretizedBuilder": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "kwant.continuum.discretizer._DiscretizedBuilder.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "super": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._DiscretizedBuilder.__str__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      53,
      57
     ]
    },
    "any": {
     "line number": [
      56
     ]
    },
    "callable": {
     "line number": [
      74
     ]
    },
    "isinstance": {
     "line number": [
      66
     ]
    },
    "kwant.continuum.discretizer.itertools": {
     "line number": [
      64
     ]
    },
    "len": {
     "line number": [
      52
     ]
    },
    "list": {
     "line number": [
      51
     ]
    },
    "repr": {
     "line number": [
      74
     ]
    },
    "str": {
     "line number": [
      72
     ]
    },
    "tuple": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._DiscretizedBuilder._repr_html_": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._NumericPrinter": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": {
    "sympy.printing.lambdarepr.LambdaPrinter": {
     "line number": [
      502
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant.continuum.discretizer._NumericPrinter.__init__": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": {
    "sympy.printing.lambdarepr.LambdaPrinter.__init__": {
     "line number": [
      505
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._NumericPrinter._print_ImaginaryUnit": {
  "data": {
   "lineno": 509
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._NumericPrinter._print_Pow": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": {
    "kwant.continuum.discretizer.sympy": {
     "line number": [
      518
     ]
    },
    "sympy.printing.precedence.precedence": {
     "line number": [
      516
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "kwant.continuum.discretizer._assign_symbols": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": {
    "kwant.continuum.discretizer._print_sympy": {
     "line number": [
      609
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._builder_value": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      654
     ]
    },
    "complex": {
     "line number": [
      664,
      666
     ]
    },
    "enumerate": {
     "line number": [
      637
     ]
    },
    "exec": {
     "line number": [
      689
     ]
    },
    "isinstance": {
     "line number": [
      663
     ]
    },
    "keyword.iskeyword": {
     "line number": [
      653
     ]
    },
    "kwant.continuum.discretizer._assign_symbols": {
     "line number": [
      668
     ]
    },
    "kwant.continuum.discretizer._displacements": {
     "line number": [
      636
     ]
    },
    "kwant.continuum.discretizer._return_string": {
     "line number": [
      638
     ]
    },
    "kwant.continuum.discretizer.sympy": {
     "line number": [
      642,
      663
     ]
    },
    "list": {
     "line number": [
      679
     ]
    },
    "numpy.array": {
     "line number": [
      686
     ]
    },
    "numpy.pi": {
     "line number": [
      681
     ]
    },
    "repr": {
     "line number": [
      686
     ]
    },
    "set": {
     "line number": [
      643
     ]
    },
    "set.union": {
     "line number": [
      648
     ]
    },
    "sorted": {
     "line number": [
      659
     ]
    },
    "str": {
     "line number": [
      649
     ]
    },
    "tinyarray.array": {
     "line number": [
      664
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._differentiate": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "kwant.continuum.discretizer._displacements": {
     "line number": [
      385
     ]
    },
    "kwant.continuum.discretizer._position_operators": {
     "line number": [
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._discretize_expression": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "_extract_hoppings": {
     "line number": [
      493
     ]
    },
    "collections.defaultdict": {
     "line number": [
      490
     ]
    },
    "dict": {
     "line number": [
      497
     ]
    },
    "int": {
     "line number": [
      490
     ]
    },
    "kwant.continuum.discretizer._discretize_summand": {
     "line number": [
      492
     ]
    },
    "kwant.continuum.discretizer._momentum_operators": {
     "line number": [
      479
     ]
    },
    "kwant.continuum.discretizer._position_operators": {
     "line number": [
      487
     ]
    },
    "kwant.continuum.discretizer._wf": {
     "line number": [
      488
     ]
    },
    "kwant.continuum.discretizer.sympy": {
     "line number": [
      478
     ]
    },
    "len": {
     "line number": [
      480
     ]
    },
    "set": {
     "line number": [
      479,
      479
     ]
    },
    "tuple": {
     "line number": [
      487
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._discretize_expression._extract_hoppings": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": {
    "_read_offset": {
     "line number": [
      458
     ]
    },
    "collections.defaultdict": {
     "line number": [
      472
     ]
    },
    "dict": {
     "line number": [
      475
     ]
    },
    "enumerate": {
     "line number": [
      465,
      473
     ]
    },
    "gcd": {
     "line number": [
      466
     ]
    },
    "int": {
     "line number": [
      460,
      466
     ]
    },
    "kwant.continuum.discretizer._displacements": {
     "line number": [
      470,
      470
     ]
    },
    "kwant.continuum.discretizer.sympy": {
     "line number": [
      455,
      459,
      472
     ]
    },
    "numpy.array": {
     "line number": [
      460
     ]
    },
    "tuple": {
     "line number": [
      474
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._discretize_expression._read_offset": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "kwant.continuum.discretizer._displacements": {
     "line number": [
      449
     ]
    },
    "kwant.continuum.discretizer._position_operators": {
     "line number": [
      447
     ]
    },
    "kwant.continuum.discretizer._wf": {
     "line number": [
      442
     ]
    },
    "tuple": {
     "line number": [
      451
     ]
    },
    "zip": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._discretize_summand": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      406,
      413
     ]
    },
    "kwant.continuum.discretizer._differentiate": {
     "line number": [
      417
     ]
    },
    "kwant.continuum.discretizer.sympy": {
     "line number": [
      406,
      413,
      417
     ]
    },
    "range": {
     "line number": [
      414
     ]
    },
    "reversed": {
     "line number": [
      409
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._displacements": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "kwant.continuum.discretizer._momentum_operators": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "kwant.continuum.discretizer._position_operators": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "kwant.continuum.discretizer._print_sympy": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "kwant.continuum.discretizer._NumericPrinter": {
     "line number": [
      530
     ]
    },
    "len": {
     "line number": [
      530
     ]
    },
    "sympy.utilities.lambdify.lambdastr": {
     "line number": [
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._return_string": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "cache": {
     "line number": [
      574
     ]
    },
    "enumerate": {
     "line number": [
      566
     ]
    },
    "isinstance": {
     "line number": [
      570
     ]
    },
    "kwant.continuum.discretizer._print_sympy": {
     "line number": [
      575,
      575,
      579
     ]
    },
    "kwant.continuum.discretizer.sympy": {
     "line number": [
      558,
      564,
      565,
      570,
      573
     ]
    },
    "monomials": {
     "line number": [
      573
     ]
    },
    "set": {
     "line number": [
      557
     ]
    },
    "sympy.core.function.AppliedUndef": {
     "line number": [
      564
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._return_string.cache": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      554
     ]
    },
    "kwant.continuum.discretizer.sympy": {
     "line number": [
      553
     ]
    },
    "len": {
     "line number": [
      553
     ]
    },
    "str": {
     "line number": [
      554
     ]
    },
    "tinyarray.array": {
     "line number": [
      554
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer._wf": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "kwant.continuum.discretizer.build_discretized": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      294,
      304,
      310,
      331,
      335
     ]
    },
    "all": {
     "line number": [
      343
     ]
    },
    "enumerate": {
     "line number": [
      342
     ]
    },
    "is_diagonal": {
     "line number": [
      330
     ]
    },
    "isinstance": {
     "line number": [
      319
     ]
    },
    "iter": {
     "line number": [
      318
     ]
    },
    "kwant.continuum.discretizer._DiscretizedBuilder": {
     "line number": [
      359
     ]
    },
    "kwant.continuum.discretizer._builder_value": {
     "line number": [
      350
     ]
    },
    "kwant.continuum.discretizer.sympy": {
     "line number": [
      319
     ]
    },
    "kwant.continuum.discretizer.warnings": {
     "line number": [
      297
     ]
    },
    "lat": {
     "line number": [
      362
     ]
    },
    "len": {
     "line number": [
      293,
      307
     ]
    },
    "list": {
     "line number": [
      306
     ]
    },
    "locals": {
     "line number": [
      315
     ]
    },
    "next": {
     "line number": [
      318
     ]
    },
    "numpy.allclose": {
     "line number": [
      328
     ]
    },
    "numpy.diag": {
     "line number": [
      328,
      350
     ]
    },
    "numpy.diagonal": {
     "line number": [
      328
     ]
    },
    "numpy.eye": {
     "line number": [
      323
     ]
    },
    "numpy.isscalar": {
     "line number": [
      322
     ]
    },
    "reraise_warnings": {
     "line number": [
      313
     ]
    },
    "sorted": {
     "line number": [
      309
     ]
    },
    "sympify": {
     "line number": [
      315
     ]
    },
    "tuple": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "kwant.continuum.discretizer.discretize": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "kwant.continuum.discretizer.build_discretized": {
     "line number": [
      142
     ]
    },
    "kwant.continuum.discretizer.discretize_symbolic": {
     "line number": [
      141
     ]
    },
    "locals": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer.discretize_symbolic": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      188
     ]
    },
    "ValueError": {
     "line number": [
      199,
      201,
      207
     ]
    },
    "any": {
     "line number": [
      187,
      200
     ]
    },
    "collections.defaultdict": {
     "line number": [
      221
     ]
    },
    "isinstance": {
     "line number": [
      214
     ]
    },
    "kwant.continuum.discretizer._discretize_expression": {
     "line number": [
      225
     ]
    },
    "kwant.continuum.discretizer._momentum_operators": {
     "line number": [
      194
     ]
    },
    "kwant.continuum.discretizer.sympy": {
     "line number": [
      186,
      192,
      214,
      215,
      221,
      222
     ]
    },
    "len": {
     "line number": [
      206,
      212,
      231
     ]
    },
    "list": {
     "line number": [
      197,
      231,
      231
     ]
    },
    "locals": {
     "line number": [
      184
     ]
    },
    "numpy.ndenumerate": {
     "line number": [
      224
     ]
    },
    "reraise_warnings": {
     "line number": [
      183
     ]
    },
    "set": {
     "line number": [
      194,
      194
     ]
    },
    "sorted": {
     "line number": [
      198,
      204,
      231
     ]
    },
    "sympify": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.discretizer.iskeyword": {
  "data": {
   "shadows": "keyword.iskeyword"
  },
  "type": "import"
 },
 "kwant.continuum.discretizer.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "kwant.continuum.discretizer.lambdastr": {
  "data": {
   "shadows": "sympy.utilities.lambdify.lambdastr"
  },
  "type": "import"
 },
 "kwant.continuum.discretizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.continuum.discretizer.precedence": {
  "data": {
   "shadows": "sympy.printing.precedence.precedence"
  },
  "type": "import"
 },
 "kwant.continuum.discretizer.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "kwant.continuum.discretizer.ta": {
  "data": {
   "shadows": "tinyarray"
  },
  "type": "import"
 },
 "kwant.continuum.discretizer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "kwant.continuum.msg": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "kwant.continuum.tests": {
  "data": {},
  "type": "module"
 },
 "kwant.continuum.tests.test_common": {
  "data": {
   "symbols_in_volume": {
    "kwant.continuum._common.momentum_operators": {
     "line number": [
      24
     ]
    },
    "kwant.continuum._common.position_operators": {
     "line number": [
      23,
      103
     ]
    },
    "kwant.continuum._common.sympify": {
     "line number": [
      102
     ]
    },
    "kwant.continuum.tests.test_common.expr1": {
     "line number": [
      91,
      91,
      91
     ]
    },
    "kwant.continuum.tests.test_common.sympy": {
     "line number": [
      22,
      86,
      87,
      91,
      92,
      104
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.continuum.tests.test_common.TensorProduct": {
  "data": {
   "shadows": "sympy.physics.quantum.TensorProduct"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_common.expr1": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "kwant.continuum.tests.test_common.lambdify": {
  "data": {
   "shadows": "kwant.continuum._common.lambdify"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_common.make_commutative": {
  "data": {
   "shadows": "kwant.continuum._common.make_commutative"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_common.matr_com": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "kwant.continuum.tests.test_common.matr_monomials": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "kwant.continuum.tests.test_common.momentum_operators": {
  "data": {
   "shadows": "kwant.continuum._common.momentum_operators"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_common.monomials": {
  "data": {
   "shadows": "kwant.continuum._common.monomials"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_common.msigma": {
  "data": {
   "shadows": "sympy.physics.matrices.msigma"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_common.position_operators": {
  "data": {
   "shadows": "kwant.continuum._common.position_operators"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_common.res_mat": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "kwant.continuum.tests.test_common.sympify": {
  "data": {
   "shadows": "kwant.continuum._common.sympify"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_common.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_common.ta": {
  "data": {
   "shadows": "tinyarray"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_common.test_lambdify": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      139,
      140,
      141,
      142,
      143
     ]
    },
    "e": {
     "line number": [
      147
     ]
    },
    "f": {
     "line number": [
      141,
      142,
      143
     ]
    },
    "kwant.continuum._common.lambdify": {
     "line number": [
      146
     ]
    },
    "kwant.continuum._common.sympify": {
     "line number": [
      142
     ]
    },
    "kwant.continuum.tests.test_common.pytest": {
     "line number": [
      138
     ]
    },
    "should_be": {
     "line number": [
      147
     ]
    },
    "tinyarray.array": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_common.test_lambdify_substitutions": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      161
     ]
    },
    "dict": {
     "line number": [
      151,
      152
     ]
    },
    "e": {
     "line number": [
      158,
      162,
      162,
      164,
      164,
      166
     ]
    },
    "isinstance": {
     "line number": [
      158
     ]
    },
    "kwant.continuum._common.lambdify": {
     "line number": [
      162,
      164
     ]
    },
    "kwant.continuum._common.sympify": {
     "line number": [
      152
     ]
    },
    "kwant.continuum.tests.test_common.pytest": {
     "line number": [
      161,
      150
     ]
    },
    "should_be": {
     "line number": [
      155,
      166
     ]
    },
    "str": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_common.test_make_commutative": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "kwant.continuum._common.make_commutative": {
     "line number": [
      97,
      97,
      98,
      99
     ]
    },
    "kwant.continuum.tests.test_common.expr1": {
     "line number": [
      97,
      97,
      98
     ]
    },
    "kwant.continuum.tests.test_common.matr_com": {
     "line number": [
      99
     ]
    },
    "kwant.continuum.tests.test_common.res_mat": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_common.test_monomials": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "a": {
     "line number": [
      107,
      107,
      107,
      107,
      108,
      108,
      108,
      108,
      112,
      112,
      113,
      113,
      115,
      115,
      119,
      125,
      129
     ]
    },
    "kwant.continuum._common.monomials": {
     "line number": [
      134
     ]
    },
    "kwant.continuum.tests.test_common.matr_monomials": {
     "line number": [
      116,
      122,
      127
     ]
    },
    "kwant.continuum.tests.test_common.pytest": {
     "line number": [
      106
     ]
    },
    "kwant.continuum.tests.test_common.sympy": {
     "line number": [
      117,
      118,
      119,
      120,
      123,
      124,
      125,
      128,
      129,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_common.test_sympify": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "com_A": {
     "line number": [
      28,
      29,
      32
     ]
    },
    "com_B": {
     "line number": [
      32,
      33
     ]
    },
    "kwant.continuum._common.sympify": {
     "line number": [
      41,
      42,
      42
     ]
    },
    "kwant.continuum.tests.test_common.pytest": {
     "line number": [
      27
     ]
    },
    "kwant.continuum.tests.test_common.sympy": {
     "line number": [
      29,
      32,
      35,
      36
     ]
    },
    "sympy.physics.matrices.msigma": {
     "line number": [
      30,
      30,
      34,
      34,
      38,
      38,
      38
     ]
    },
    "sympy.physics.quantum.TensorProduct": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_common.test_sympify_invalid_substitutions": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      66
     ]
    },
    "kwant.continuum._common.sympify": {
     "line number": [
      67
     ]
    },
    "kwant.continuum.tests.test_common.pytest": {
     "line number": [
      66,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_common.test_sympify_mix_symbol_and_matrx": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "kwant.continuum._common.sympify": {
     "line number": [
      80,
      82,
      83
     ]
    },
    "kwant.continuum.tests.test_common.pytest": {
     "line number": [
      70
     ]
    },
    "kwant.continuum.tests.test_common.sympy": {
     "line number": [
      72,
      75
     ]
    },
    "sympy.physics.matrices.msigma": {
     "line number": [
      72,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_common.test_sympify_substitutions": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "com_A": {
     "line number": [
      48,
      49
     ]
    },
    "com_B": {
     "line number": [
      48,
      49
     ]
    },
    "kwant.continuum._common.sympify": {
     "line number": [
      53,
      55,
      56
     ]
    },
    "kwant.continuum.tests.test_common.pytest": {
     "line number": [
      45
     ]
    },
    "sympy.physics.matrices.msigma": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer": {
  "data": {
   "symbols_in_volume": {
    "kwant.continuum.tests.test_discretizer.sympy": {
     "line number": [
      45,
      46,
      47,
      48,
      49,
      53
     ]
    },
    "kwant.continuum.tests.test_discretizer.wf": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.continuum.tests.test_discretizer.I": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "kwant.continuum.tests.test_discretizer.Psi": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "kwant.continuum.tests.test_discretizer.a": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "kwant.continuum.tests.test_discretizer.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_discretizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_discretizer.ns": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "kwant.continuum.tests.test_discretizer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_discretizer.swallows_extra_kwargs": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "any": {
     "line number": [
      29
     ]
    },
    "kwant.continuum.tests.test_discretizer.inspect": {
     "line number": [
      27,
      29,
      33,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.swallows_extra_kwargs.wrapped": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "f": {
     "line number": [
      40,
      36
     ]
    },
    "functools.wraps": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_discretizer.test_check_symbol_names": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      597
     ]
    },
    "discretize": {
     "line number": [
      598
     ]
    },
    "kwant.continuum.tests.test_discretizer.pytest": {
     "line number": [
      597,
      595
     ]
    },
    "kwant.continuum.tests.test_discretizer.sympy": {
     "line number": [
      598
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_different_discrete_coordinates": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "discretize_symbolic": {
     "line number": [
      282,
      294
     ]
    },
    "kwant.continuum.tests.test_discretizer.sympy": {
     "line number": [
      290,
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_grid": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": {
    "Monatomic": {
     "line number": [
      529,
      530,
      531,
      532
     ]
    },
    "discretize": {
     "line number": [
      537,
      538,
      539
     ]
    },
    "kwant.continuum.tests.test_discretizer.pytest": {
     "line number": [
      528
     ]
    },
    "kwant.continuum.tests.test_discretizer.warnings": {
     "line number": [
      535,
      536
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_grid_constraints": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": {
    "Monatomic": {
     "line number": [
      584,
      585,
      586,
      587,
      588
     ]
    },
    "ValueError": {
     "line number": [
      591
     ]
    },
    "discretize": {
     "line number": [
      592
     ]
    },
    "kwant.continuum.tests.test_discretizer.pytest": {
     "line number": [
      591,
      583
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_grid_input": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": {
    "Monatomic": {
     "line number": [
      559
     ]
    },
    "build_discretized": {
     "line number": [
      566
     ]
    },
    "discretize": {
     "line number": [
      561
     ]
    },
    "discretize_symbolic": {
     "line number": [
      565
     ]
    },
    "int": {
     "line number": [
      555
     ]
    },
    "isinstance": {
     "line number": [
      555
     ]
    },
    "kwant.continuum.tests.test_discretizer.pytest": {
     "line number": [
      543
     ]
    },
    "len": {
     "line number": [
      558
     ]
    },
    "numpy.allclose": {
     "line number": [
      562,
      569
     ]
    },
    "numpy.eye": {
     "line number": [
      558
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_grid_offset_passed_to_functions": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": {
    "Monatomic": {
     "line number": [
      575
     ]
    },
    "V": {
     "line number": [
      578
     ]
    },
    "all": {
     "line number": [
      580
     ]
    },
    "discretize": {
     "line number": [
      576
     ]
    },
    "numpy.allclose": {
     "line number": [
      578
     ]
    },
    "onsite": {
     "line number": [
      577,
      578
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_integer_float_input": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "discretize_symbolic": {
     "line number": [
      214,
      217,
      229,
      232
     ]
    },
    "float": {
     "line number": [
      217,
      232
     ]
    },
    "int": {
     "line number": [
      214,
      229
     ]
    },
    "kwant.continuum.tests.test_discretizer.sympy": {
     "line number": [
      225,
      229,
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_matrix_with_zeros": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "A": {
     "line number": [
      311,
      311,
      311,
      311,
      312,
      312
     ]
    },
    "Matrix": {
     "line number": [
      311,
      312
     ]
    },
    "discretize_symbolic": {
     "line number": [
      309
     ]
    },
    "kwant.continuum.tests.test_discretizer.sympy": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_non_expended_input": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "A": {
     "line number": [
      299,
      302
     ]
    },
    "discretize_symbolic": {
     "line number": [
      299
     ]
    },
    "kwant.continuum.tests.test_discretizer.I": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_numeric_function_coords_from_site": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "build_discretized": {
     "line number": [
      342
     ]
    },
    "iter": {
     "line number": [
      344
     ]
    },
    "kwant.continuum.tests.test_discretizer.pytest": {
     "line number": [
      339
     ]
    },
    "kwant.continuum.tests.test_discretizer.sympy": {
     "line number": [
      341
     ]
    },
    "lat": {
     "line number": [
      344,
      345,
      346,
      346
     ]
    },
    "next": {
     "line number": [
      344
     ]
    },
    "onsite": {
     "line number": [
      346,
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_numeric_functions_advance": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "A": {
     "line number": [
      425,
      426,
      427,
      427,
      427,
      427
     ]
    },
    "B": {
     "line number": [
      427,
      428,
      430,
      431,
      432,
      445,
      460
     ]
    },
    "build_discretized": {
     "line number": [
      439
     ]
    },
    "callable": {
     "line number": [
      449,
      464
     ]
    },
    "dict": {
     "line number": [
      442
     ]
    },
    "discretize_symbolic": {
     "line number": [
      438
     ]
    },
    "f_num": {
     "line number": [
      452,
      455,
      462,
      464,
      465,
      465,
      468,
      473
     ]
    },
    "f_sym": {
     "line number": [
      452,
      455,
      461,
      467,
      472
     ]
    },
    "iter": {
     "line number": [
      440
     ]
    },
    "kwant.continuum.tests.test_discretizer.a": {
     "line number": [
      436,
      439,
      445,
      452,
      455,
      460,
      467,
      472
     ]
    },
    "kwant.continuum.tests.test_discretizer.swallows_extra_kwargs": {
     "line number": [
      450,
      465
     ]
    },
    "kwant.continuum.tests.test_discretizer.sympy": {
     "line number": [
      427,
      432,
      445,
      446,
      460,
      461
     ]
    },
    "lat": {
     "line number": [
      440,
      447,
      452,
      462,
      462,
      468,
      468
     ]
    },
    "next": {
     "line number": [
      440
     ]
    },
    "numpy.allclose": {
     "line number": [
      452,
      455,
      469,
      474
     ]
    },
    "numpy.sin": {
     "line number": [
      442
     ]
    },
    "range": {
     "line number": [
      451,
      454,
      466,
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_numeric_functions_basic_string": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "build_discretized": {
     "line number": [
      382,
      388,
      394
     ]
    },
    "dict": {
     "line number": [
      379
     ]
    },
    "discretize": {
     "line number": [
      375
     ]
    },
    "iter": {
     "line number": [
      376,
      383,
      389,
      395
     ]
    },
    "lat": {
     "line number": [
      376,
      377,
      383,
      384,
      385,
      385,
      389,
      390,
      390,
      391,
      391,
      395,
      396,
      396,
      397,
      397
     ]
    },
    "next": {
     "line number": [
      376,
      383,
      389,
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_numeric_functions_basic_symbolic": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "build_discretized": {
     "line number": [
      327,
      333
     ]
    },
    "dict": {
     "line number": [
      324
     ]
    },
    "discretize": {
     "line number": [
      319
     ]
    },
    "iter": {
     "line number": [
      320,
      328,
      334
     ]
    },
    "kwant.continuum.tests.test_discretizer.sympy": {
     "line number": [
      326,
      326,
      332,
      332
     ]
    },
    "lat": {
     "line number": [
      322,
      328,
      329,
      330,
      330,
      334,
      335,
      335,
      336,
      336
     ]
    },
    "next": {
     "line number": [
      320,
      328,
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_numeric_functions_not_discrete_coords": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "discretize": {
     "line number": [
      350
     ]
    },
    "iter": {
     "line number": [
      351
     ]
    },
    "lat": {
     "line number": [
      351,
      352
     ]
    },
    "next": {
     "line number": [
      351
     ]
    },
    "onsite": {
     "line number": [
      352,
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_numeric_functions_with_parameter": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "A": {
     "line number": [
      479
     ]
    },
    "B": {
     "line number": [
      479,
      490,
      507
     ]
    },
    "build_discretized": {
     "line number": [
      484
     ]
    },
    "callable": {
     "line number": [
      494,
      500,
      511,
      519
     ]
    },
    "dict": {
     "line number": [
      487
     ]
    },
    "discretize_symbolic": {
     "line number": [
      483
     ]
    },
    "f_num": {
     "line number": [
      493,
      494,
      495,
      495,
      500,
      501,
      503,
      509,
      511,
      512,
      512,
      519,
      520,
      522
     ]
    },
    "f_sym": {
     "line number": [
      491,
      501,
      503,
      508,
      518
     ]
    },
    "iter": {
     "line number": [
      485
     ]
    },
    "kwant.continuum.tests.test_discretizer.a": {
     "line number": [
      481,
      484,
      490,
      499,
      507,
      516
     ]
    },
    "kwant.continuum.tests.test_discretizer.swallows_extra_kwargs": {
     "line number": [
      495,
      512
     ]
    },
    "kwant.continuum.tests.test_discretizer.sympy": {
     "line number": [
      490,
      491,
      507,
      508
     ]
    },
    "lat": {
     "line number": [
      485,
      493,
      498,
      509,
      509,
      515,
      520,
      520
     ]
    },
    "next": {
     "line number": [
      485
     ]
    },
    "numpy.allclose": {
     "line number": [
      501,
      503,
      524
     ]
    },
    "range": {
     "line number": [
      497,
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_numeric_functions_with_pi": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "discretize": {
     "line number": [
      361,
      367
     ]
    },
    "iter": {
     "line number": [
      362,
      368
     ]
    },
    "lat": {
     "line number": [
      362,
      363,
      368,
      369
     ]
    },
    "next": {
     "line number": [
      362,
      368
     ]
    },
    "numpy.pi": {
     "line number": [
      364,
      370
     ]
    },
    "onsite": {
     "line number": [
      363,
      364,
      369,
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_numeric_functions_with_subs": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "discretize": {
     "line number": [
      405,
      406
     ]
    },
    "iter": {
     "line number": [
      408
     ]
    },
    "kwant.continuum.tests.test_discretizer.pytest": {
     "line number": [
      400
     ]
    },
    "lat": {
     "line number": [
      408,
      409,
      409,
      411,
      411,
      412,
      412
     ]
    },
    "next": {
     "line number": [
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_onsite_hopping_function_name": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": {
    "discretize": {
     "line number": [
      417
     ]
    },
    "str": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_reading_coordinates": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "A": {
     "line number": [
      68
     ]
    },
    "B": {
     "line number": [
      69
     ]
    },
    "discretize_symbolic": {
     "line number": [
      72
     ]
    },
    "kwant.continuum.tests.test_discretizer.pytest": {
     "line number": [
      58
     ]
    },
    "kwant.continuum.tests.test_discretizer.sympy": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_reading_coordinates_matrix": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "A": {
     "line number": [
      84
     ]
    },
    "B": {
     "line number": [
      85
     ]
    },
    "discretize_symbolic": {
     "line number": [
      88
     ]
    },
    "kwant.continuum.tests.test_discretizer.sympy": {
     "line number": [
      78,
      78,
      79,
      80,
      81,
      82,
      83,
      84,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_reading_different_matrix_types": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "discretize_symbolic": {
     "line number": [
      100
     ]
    },
    "kwant.continuum.tests.test_discretizer.sympy": {
     "line number": [
      94,
      95,
      96,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_rectangular_grid": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "Monatomic": {
     "line number": [
      602
     ]
    },
    "discretize": {
     "line number": [
      604,
      608
     ]
    },
    "lat": {
     "line number": [
      602,
      604,
      605,
      605,
      606,
      606,
      608,
      609,
      609,
      610,
      610
     ]
    },
    "numpy.allclose": {
     "line number": [
      605,
      606,
      609,
      610
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_simple_derivations": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "A": {
     "line number": [
      124,
      128,
      129,
      130,
      132,
      124,
      125,
      125,
      128,
      129,
      130,
      133
     ]
    },
    "B": {
     "line number": [
      126,
      130,
      132,
      126,
      130,
      133
     ]
    },
    "discretize_symbolic": {
     "line number": [
      140,
      144
     ]
    },
    "kwant.continuum.tests.test_discretizer.I": {
     "line number": [
      126,
      128,
      129,
      130,
      131,
      133,
      133
     ]
    },
    "kwant.continuum.tests.test_discretizer.ns": {
     "line number": [
      144
     ]
    },
    "kwant.continuum.tests.test_discretizer.pytest": {
     "line number": [
      105
     ]
    },
    "kwant.continuum.tests.test_discretizer.sympy": {
     "line number": [
      107
     ]
    },
    "str": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_simple_derivations_matrix": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "A": {
     "line number": [
      173,
      177,
      178,
      179,
      181,
      173,
      174,
      174,
      177,
      178,
      179,
      182
     ]
    },
    "B": {
     "line number": [
      175,
      179,
      181,
      175,
      179,
      182
     ]
    },
    "discretize_symbolic": {
     "line number": [
      193,
      197,
      201
     ]
    },
    "kwant.continuum.tests.test_discretizer.I": {
     "line number": [
      175,
      177,
      178,
      179,
      180,
      182,
      182
     ]
    },
    "kwant.continuum.tests.test_discretizer.ns": {
     "line number": [
      197,
      201
     ]
    },
    "kwant.continuum.tests.test_discretizer.sympy": {
     "line number": [
      189,
      190
     ]
    },
    "str": {
     "line number": [
      197,
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.test_simple_derivations_with_subs": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "discretize_symbolic": {
     "line number": [
      156,
      157
     ]
    },
    "kwant.continuum.tests.test_discretizer.pytest": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.continuum.tests.test_discretizer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "kwant.continuum.tests.test_discretizer.wf": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "kwant.continuum.tests.test_discretizer.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "kwant.digest": {
  "data": {
   "symbols_in_volume": {
    "kwant.digest.BPF": {
     "line number": [
      32
     ]
    },
    "math.pi": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.digest.BPF": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "kwant.digest.BPF_MASK": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "kwant.digest.RECIP_BPF": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "kwant.digest.TWOPI": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "kwant.digest.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "kwant.digest.array": {
  "data": {
   "shadows": "tinyarray.array"
  },
  "type": "import"
 },
 "kwant.digest.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "kwant.digest.gauss": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "input": {
     "line number": [
      71
     ]
    },
    "kwant.digest.TWOPI": {
     "line number": [
      72
     ]
    },
    "kwant.digest.uniform2": {
     "line number": [
      71
     ]
    },
    "math.cos": {
     "line number": [
      72
     ]
    },
    "math.log": {
     "line number": [
      72
     ]
    },
    "math.sqrt": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.digest.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "kwant.digest.md5": {
  "data": {
   "shadows": "hashlib.md5"
  },
  "type": "import"
 },
 "kwant.digest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "kwant.digest.pack": {
  "data": {
   "shadows": "struct.pack"
  },
  "type": "import"
 },
 "kwant.digest.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "kwant.digest.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "kwant.digest.str_to_bytes": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.digest.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "kwant.digest.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "kwant.digest.test": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "int": {
     "line number": [
      91
     ]
    },
    "kwant.digest.os": {
     "line number": [
      96
     ]
    },
    "kwant.digest.subprocess": {
     "line number": [
      94
     ]
    },
    "kwant.digest.tempfile": {
     "line number": [
      86
     ]
    },
    "kwant.digest.uniform": {
     "line number": [
      91
     ]
    },
    "range": {
     "line number": [
      88,
      89
     ]
    },
    "struct.pack": {
     "line number": [
      92
     ]
    },
    "tinyarray.array": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.digest.uniform": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "input": {
     "line number": [
      59
     ]
    },
    "kwant.digest.uniform2": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.digest.uniform2": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "hashlib.md5": {
     "line number": [
      47
     ]
    },
    "input": {
     "line number": [
      44,
      44,
      46,
      46,
      47
     ]
    },
    "kwant.digest.BPF_MASK": {
     "line number": [
      48,
      49
     ]
    },
    "kwant.digest.RECIP_BPF": {
     "line number": [
      50,
      50
     ]
    },
    "kwant.digest.str_to_bytes": {
     "line number": [
      44,
      45
     ]
    },
    "memoryview": {
     "line number": [
      46
     ]
    },
    "struct.unpack": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.digest.unpack": {
  "data": {
   "shadows": "struct.unpack"
  },
  "type": "import"
 },
 "kwant.graph": {
  "data": {
   "symbols_in_volume": {
    "exec": {
     "line number": [
      14,
      15,
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.graph.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "kwant.graph.core": {
  "data": {
   "symbols_in_volume": {
    "kwant.graph.core.__bootstrap__": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.graph.core.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": {
    "__loader__": {
     "line number": [
      5,
      5
     ]
    },
    "__name__": {
     "line number": [
      4,
      6
     ]
    },
    "kwant.graph.core.imp": {
     "line number": [
      6
     ]
    },
    "kwant.graph.core.pkg_resources": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.graph.core.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "kwant.graph.core.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "kwant.graph.core.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "kwant.graph.defs": {
  "data": {
   "symbols_in_volume": {
    "numpy.int32": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.graph.defs.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "kwant.graph.defs.gint_dtype": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "kwant.graph.defs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.graph.tests": {
  "data": {},
  "type": "module"
 },
 "kwant.graph.tests.test_core": {
  "data": {},
  "type": "module"
 },
 "kwant.graph.tests.test_core.DisabledFeatureError": {
  "data": {
   "shadows": "kwant.graph.core.DisabledFeatureError"
  },
  "type": "import"
 },
 "kwant.graph.tests.test_core.EdgeDoesNotExistError": {
  "data": {
   "shadows": "kwant.graph.core.EdgeDoesNotExistError"
  },
  "type": "import"
 },
 "kwant.graph.tests.test_core.Graph": {
  "data": {
   "shadows": "kwant.graph.core.Graph"
  },
  "type": "import"
 },
 "kwant.graph.tests.test_core.NodeDoesNotExistError": {
  "data": {
   "shadows": "kwant.graph.core.NodeDoesNotExistError"
  },
  "type": "import"
 },
 "kwant.graph.tests.test_core.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "kwant.graph.tests.test_core.check_dot": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "io.StringIO": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.graph.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.graph.tests.test_core.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "kwant.graph.tests.test_core.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "kwant.graph.tests.test_core.test_add_edges": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "fill": {
     "line number": [
      141
     ]
    },
    "io.StringIO": {
     "line number": [
      143
     ]
    },
    "kwant.graph.core.Graph": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.graph.tests.test_core.test_add_edges.fill0": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "kwant.graph.tests.test_core.test_add_edges.fill1": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "kwant.graph.tests.test_core.test_add_edges.fill2": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.graph.tests.test_core.test_edge_ids": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      153,
      163,
      169,
      176
     ]
    },
    "kwant.graph.core.EdgeDoesNotExistError": {
     "line number": [
      182
     ]
    },
    "kwant.graph.core.Graph": {
     "line number": [
      151
     ]
    },
    "pytest.raises": {
     "line number": [
      182
     ]
    },
    "sorted": {
     "line number": [
      159,
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.graph.tests.test_core.test_empty": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "kwant.graph.core.DisabledFeatureError": {
     "line number": [
      24
     ]
    },
    "kwant.graph.core.EdgeDoesNotExistError": {
     "line number": [
      31
     ]
    },
    "kwant.graph.core.Graph": {
     "line number": [
      18
     ]
    },
    "kwant.graph.core.NodeDoesNotExistError": {
     "line number": [
      22,
      23,
      28,
      29,
      30
     ]
    },
    "pytest.raises": {
     "line number": [
      22,
      23,
      24,
      28,
      29,
      30,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.graph.tests.test_core.test_large": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "kwant.graph.core.Graph": {
     "line number": [
      44
     ]
    },
    "range": {
     "line number": [
      45,
      50
     ]
    },
    "tuple": {
     "line number": [
      51,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.graph.tests.test_core.test_negative_node_ids": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      105,
      110,
      111
     ]
    },
    "kwant.graph.core.DisabledFeatureError": {
     "line number": [
      116
     ]
    },
    "kwant.graph.core.Graph": {
     "line number": [
      104,
      107
     ]
    },
    "pytest.raises": {
     "line number": [
      105,
      110,
      111,
      116
     ]
    },
    "tuple": {
     "line number": [
      117,
      123,
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.graph.tests.test_core.test_num_nodes": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      38
     ]
    },
    "kwant.graph.core.Graph": {
     "line number": [
      34
     ]
    },
    "pytest.raises": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.graph.tests.test_core.test_pickle": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "io.StringIO": {
     "line number": [
      191,
      193,
      202,
      204
     ]
    },
    "kwant.graph.core.Graph": {
     "line number": [
      186,
      198
     ]
    },
    "kwant.graph.tests.test_core.pickle": {
     "line number": [
      190,
      190,
      201,
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.graph.tests.test_core.test_small": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      100
     ]
    },
    "itertools.zip_longest": {
     "line number": [
      75
     ]
    },
    "kwant.graph.core.Graph": {
     "line number": [
      61
     ]
    },
    "kwant.graph.tests.test_core.check_dot": {
     "line number": [
      72,
      101
     ]
    },
    "pytest.raises": {
     "line number": [
      100
     ]
    },
    "tuple": {
     "line number": [
      82,
      83,
      84,
      85,
      87,
      88,
      89,
      90,
      92,
      93,
      94,
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.graph.tests.test_core.zip_longest": {
  "data": {
   "shadows": "itertools.zip_longest"
  },
  "type": "import"
 },
 "kwant.graph.tests.test_scotch": {
  "data": {},
  "type": "module"
 },
 "kwant.graph.tests.test_scotch.Graph": {
  "data": {
   "shadows": "kwant.graph.Graph"
  },
  "type": "import"
 },
 "kwant.graph.tests.test_scotch._DISABLED_test_bisect": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "bisect": {
     "line number": [
      30
     ]
    },
    "kwant.graph.Graph": {
     "line number": [
      17
     ]
    },
    "range": {
     "line number": [
      19,
      21,
      25,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.graph.tests.test_scotch._DISABLED_test_reset": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "bisect": {
     "line number": [
      51,
      53
     ]
    },
    "kwant.graph.Graph": {
     "line number": [
      36
     ]
    },
    "range": {
     "line number": [
      38,
      40,
      44
     ]
    },
    "reset": {
     "line number": [
      50,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "kwant.linalg": {
  "data": {
   "symbols_in_volume": {
    "exec": {
     "line number": [
      14,
      15,
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.linalg.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "kwant.linalg._mumps": {
  "data": {
   "symbols_in_volume": {
    "kwant.linalg._mumps.__bootstrap__": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.linalg._mumps.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": {
    "__loader__": {
     "line number": [
      5,
      5
     ]
    },
    "__name__": {
     "line number": [
      4,
      6
     ]
    },
    "kwant.linalg._mumps.imp": {
     "line number": [
      6
     ]
    },
    "kwant.linalg._mumps.pkg_resources": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg._mumps.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "kwant.linalg._mumps.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "kwant.linalg._mumps.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "kwant.linalg.cmumps": {
  "data": {
   "symbols_in_volume": {
    "numpy.int32": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.linalg.cmumps.int_dtype": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "kwant.linalg.cmumps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.linalg.decomp_ev": {
  "data": {},
  "type": "module"
 },
 "kwant.linalg.decomp_ev.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "kwant.linalg.decomp_ev.gen_eig": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "kwant.linalg.decomp_lu": {
  "data": {},
  "type": "module"
 },
 "kwant.linalg.decomp_lu.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "kwant.linalg.decomp_lu.lu_factor": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "kwant.linalg.decomp_lu.lu_solve": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      70
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      75
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.decomp_lu.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.linalg.decomp_lu.rcond_from_lu": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "kwant.linalg.decomp_schur": {
  "data": {},
  "type": "module"
 },
 "kwant.linalg.decomp_schur.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "kwant.linalg.decomp_schur.convert_r2c_gen_schur": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      500,
      508
     ]
    },
    "kwant.linalg.decomp_schur.gen_schur": {
     "line number": [
      533
     ]
    },
    "kwant.linalg.decomp_schur.order_gen_schur": {
     "line number": [
      538
     ]
    },
    "numpy.array": {
     "line number": [
      520,
      521,
      523,
      525
     ]
    },
    "numpy.common_type": {
     "line number": [
      520,
      521,
      523,
      525
     ]
    },
    "numpy.complex64": {
     "line number": [
      520,
      521,
      523,
      525
     ]
    },
    "numpy.diagonal": {
     "line number": [
      511
     ]
    },
    "numpy.dot": {
     "line number": [
      544,
      545,
      546,
      547,
      550,
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.decomp_schur.convert_r2c_schur": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "math.sqrt": {
     "line number": [
      119,
      121
     ]
    },
    "numpy.array": {
     "line number": [
      103,
      104,
      123
     ]
    },
    "numpy.common_type": {
     "line number": [
      103,
      104
     ]
    },
    "numpy.complex64": {
     "line number": [
      103,
      104
     ]
    },
    "numpy.conj": {
     "line number": [
      131
     ]
    },
    "numpy.diagonal": {
     "line number": [
      97
     ]
    },
    "numpy.dot": {
     "line number": [
      130,
      131,
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.decomp_schur.evecs_from_gen_schur": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      617,
      620,
      636
     ]
    },
    "numpy.arange": {
     "line number": [
      642
     ]
    },
    "numpy.array": {
     "line number": [
      639,
      642
     ]
    },
    "numpy.vectorize": {
     "line number": [
      642
     ]
    },
    "select": {
     "line number": [
      623,
      626,
      631,
      639,
      642
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.decomp_schur.evecs_from_schur": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      274
     ]
    },
    "numpy.arange": {
     "line number": [
      280
     ]
    },
    "numpy.array": {
     "line number": [
      277,
      280
     ]
    },
    "numpy.vectorize": {
     "line number": [
      280
     ]
    },
    "select": {
     "line number": [
      261,
      264,
      269,
      277,
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.decomp_schur.gen_schur": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "kwant.linalg.decomp_schur.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.linalg.decomp_schur.order_gen_schur": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      426
     ]
    },
    "bool": {
     "line number": [
      437,
      437
     ]
    },
    "kwant.linalg.decomp_schur.convert_r2c_gen_schur": {
     "line number": [
      440,
      442,
      444,
      446
     ]
    },
    "numpy.arange": {
     "line number": [
      430
     ]
    },
    "numpy.array": {
     "line number": [
      428,
      430
     ]
    },
    "numpy.diagonal": {
     "line number": [
      436
     ]
    },
    "numpy.vectorize": {
     "line number": [
      430
     ]
    },
    "select": {
     "line number": [
      417,
      421,
      428,
      428,
      430,
      430,
      437,
      437,
      448,
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.decomp_schur.order_schur": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      199
     ]
    },
    "bool": {
     "line number": [
      210,
      210
     ]
    },
    "kwant.linalg.decomp_schur.convert_r2c_schur": {
     "line number": [
      211
     ]
    },
    "numpy.arange": {
     "line number": [
      203
     ]
    },
    "numpy.array": {
     "line number": [
      201,
      203
     ]
    },
    "numpy.diagonal": {
     "line number": [
      209
     ]
    },
    "numpy.vectorize": {
     "line number": [
      203
     ]
    },
    "select": {
     "line number": [
      190,
      194,
      201,
      201,
      203,
      203,
      210,
      210,
      212,
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.decomp_schur.schur": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "kwant.linalg.decomp_schur.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "kwant.linalg.fortran_helpers": {
  "data": {},
  "type": "module"
 },
 "kwant.linalg.fortran_helpers.assert_fortran_mat": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.fortran_helpers.assert_fortran_matvec": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      113,
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.fortran_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.linalg.fortran_helpers.prepare_for_fortran": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      64
     ]
    },
    "ValueError": {
     "line number": [
      43,
      87
     ]
    },
    "len": {
     "line number": [
      38,
      39
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      41
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      81
     ]
    },
    "numpy.asfortranarray": {
     "line number": [
      72,
      78,
      85
     ]
    },
    "numpy.common_type": {
     "line number": [
      53
     ]
    },
    "numpy.complex128": {
     "line number": [
      61
     ]
    },
    "numpy.complex64": {
     "line number": [
      59
     ]
    },
    "numpy.float32": {
     "line number": [
      55
     ]
    },
    "numpy.float64": {
     "line number": [
      57
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      42
     ]
    },
    "numpy.number": {
     "line number": [
      42
     ]
    },
    "range": {
     "line number": [
      39
     ]
    },
    "tuple": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.lapack": {
  "data": {
   "symbols_in_volume": {
    "kwant.linalg.lapack.__bootstrap__": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.linalg.lapack.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": {
    "__loader__": {
     "line number": [
      5,
      5
     ]
    },
    "__name__": {
     "line number": [
      4,
      6
     ]
    },
    "kwant.linalg.lapack.imp": {
     "line number": [
      6
     ]
    },
    "kwant.linalg.lapack.pkg_resources": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.lapack.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "kwant.linalg.lapack.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "kwant.linalg.lapack.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "kwant.linalg.lll": {
  "data": {},
  "type": "module"
 },
 "kwant.linalg.lll.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "kwant.linalg.lll.cvp": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      143
     ]
    },
    "int": {
     "line number": [
      147,
      167
     ]
    },
    "len": {
     "line number": [
      155
     ]
    },
    "numpy.argsort": {
     "line number": [
      161
     ]
    },
    "numpy.array": {
     "line number": [
      147,
      167
     ]
    },
    "numpy.asarray": {
     "line number": [
      141,
      144
     ]
    },
    "numpy.dot": {
     "line number": [
      158
     ]
    },
    "numpy.inf": {
     "line number": [
      150
     ]
    },
    "numpy.linalg.cond": {
     "line number": [
      152
     ]
    },
    "numpy.linalg.lstsq": {
     "line number": [
      146
     ]
    },
    "numpy.mgrid": {
     "line number": [
      153
     ]
    },
    "numpy.round": {
     "line number": [
      147,
      152
     ]
    },
    "numpy.sqrt": {
     "line number": [
      160
     ]
    },
    "numpy.sum": {
     "line number": [
      160
     ]
    },
    "slice": {
     "line number": [
      153
     ]
    },
    "tuple": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.lll.gs": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "kwant.linalg.lll.gs_coefficient": {
     "line number": [
      25
     ]
    },
    "len": {
     "line number": [
      23
     ]
    },
    "numpy.copy": {
     "line number": [
      22
     ]
    },
    "range": {
     "line number": [
      23,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.lll.gs_coefficient": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      17
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.lll.is_c_reduced": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "kwant.linalg.lll.gs": {
     "line number": [
      31
     ]
    },
    "numpy.all": {
     "line number": [
      33
     ]
    },
    "numpy.apply_along_axis": {
     "line number": [
      32
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.lll.lll": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      106,
      108
     ]
    },
    "ValueError": {
     "line number": [
      61,
      63
     ]
    },
    "abs": {
     "line number": [
      100
     ]
    },
    "float": {
     "line number": [
      59
     ]
    },
    "int": {
     "line number": [
      109
     ]
    },
    "kwant.linalg.lll.gs_coefficient": {
     "line number": [
      77,
      90,
      98,
      99
     ]
    },
    "kwant.linalg.lll.is_c_reduced": {
     "line number": [
      107
     ]
    },
    "ll_reduce": {
     "line number": [
      79,
      101
     ]
    },
    "max": {
     "line number": [
      102
     ]
    },
    "numpy.allclose": {
     "line number": [
      105
     ]
    },
    "numpy.array": {
     "line number": [
      109
     ]
    },
    "numpy.asarray": {
     "line number": [
      59
     ]
    },
    "numpy.identity": {
     "line number": [
      68
     ]
    },
    "numpy.linalg.lstsq": {
     "line number": [
      104
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      84,
      85
     ]
    },
    "numpy.round": {
     "line number": [
      105,
      109
     ]
    },
    "range": {
     "line number": [
      75,
      76,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.lll.lll.ll_reduce": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "numpy.round": {
     "line number": [
      71,
      72
     ]
    },
    "range": {
     "line number": [
      70
     ]
    },
    "reversed": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.lll.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.linalg.lll.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "kwant.linalg.lll.voronoi": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      192
     ]
    },
    "int": {
     "line number": [
      196
     ]
    },
    "itertools.product": {
     "line number": [
      193
     ]
    },
    "kwant.linalg.lll.cvp": {
     "line number": [
      194
     ]
    },
    "len": {
     "line number": [
      193,
      197
     ]
    },
    "list": {
     "line number": [
      193
     ]
    },
    "numpy.any": {
     "line number": [
      198
     ]
    },
    "numpy.array": {
     "line number": [
      194,
      196,
      199
     ]
    },
    "numpy.asarray": {
     "line number": [
      190
     ]
    },
    "numpy.concatenate": {
     "line number": [
      200
     ]
    },
    "numpy.dot": {
     "line number": [
      194
     ]
    },
    "numpy.round": {
     "line number": [
      196
     ]
    },
    "range": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests": {
  "data": {},
  "type": "module"
 },
 "kwant.linalg.tests._test_utils": {
  "data": {},
  "type": "module"
 },
 "kwant.linalg.tests._test_utils._Random": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "kwant.linalg.tests._test_utils._Random.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "kwant.linalg.tests._test_utils._Random._randf": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "float": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests._test_utils._Random._randi": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "kwant.linalg.tests._test_utils._Random._set_seed": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "kwant.linalg.tests._test_utils._Random.randmat": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      45,
      49,
      53
     ]
    },
    "numpy.complexfloating": {
     "line number": [
      45
     ]
    },
    "numpy.empty": {
     "line number": [
      43
     ]
    },
    "numpy.floating": {
     "line number": [
      49
     ]
    },
    "numpy.integer": {
     "line number": [
      53
     ]
    },
    "range": {
     "line number": [
      46,
      47,
      50,
      51,
      54,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests._test_utils._Random.randvec": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      63,
      66,
      69
     ]
    },
    "numpy.complexfloating": {
     "line number": [
      63
     ]
    },
    "numpy.empty": {
     "line number": [
      61
     ]
    },
    "numpy.floating": {
     "line number": [
      66
     ]
    },
    "numpy.integer": {
     "line number": [
      69
     ]
    },
    "range": {
     "line number": [
      64,
      67,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests._test_utils.assert_array_almost_equal": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "numpy.complex64": {
     "line number": [
      79
     ]
    },
    "numpy.float32": {
     "line number": [
      79
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests._test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_linalg": {
  "data": {},
  "type": "module"
 },
 "kwant.linalg.tests.test_linalg.convert_r2c_gen_schur": {
  "data": {
   "shadows": "kwant.linalg.convert_r2c_gen_schur"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_linalg.convert_r2c_schur": {
  "data": {
   "shadows": "kwant.linalg.convert_r2c_schur"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_linalg.evecs_from_gen_schur": {
  "data": {
   "shadows": "kwant.linalg.evecs_from_gen_schur"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_linalg.evecs_from_schur": {
  "data": {
   "shadows": "kwant.linalg.evecs_from_schur"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_linalg.gen_eig": {
  "data": {
   "shadows": "kwant.linalg.gen_eig"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_linalg.gen_schur": {
  "data": {
   "shadows": "kwant.linalg.gen_schur"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_linalg.lu_factor": {
  "data": {
   "shadows": "kwant.linalg.lu_factor"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_linalg.lu_solve": {
  "data": {
   "shadows": "kwant.linalg.lu_solve"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_linalg.order_gen_schur": {
  "data": {
   "shadows": "kwant.linalg.order_gen_schur"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_linalg.order_schur": {
  "data": {
   "shadows": "kwant.linalg.order_schur"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_linalg.rcond_from_lu": {
  "data": {
   "shadows": "kwant.linalg.rcond_from_lu"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_linalg.schur": {
  "data": {
   "shadows": "kwant.linalg.schur"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_linalg.test_convert_r2c_gen_schur": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "_test_convert_r2c_gen_schur": {
     "line number": [
      233,
      234,
      236,
      237,
      239
     ]
    },
    "numpy.complex128": {
     "line number": [
      237
     ]
    },
    "numpy.complex64": {
     "line number": [
      236
     ]
    },
    "numpy.float32": {
     "line number": [
      233
     ]
    },
    "numpy.float64": {
     "line number": [
      234
     ]
    },
    "numpy.int32": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_convert_r2c_gen_schur._test_convert_r2c_gen_schur": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "_Random": {
     "line number": [
      219
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      226,
      227,
      228,
      230
     ]
    },
    "kwant.linalg.convert_r2c_gen_schur": {
     "line number": [
      224
     ]
    },
    "kwant.linalg.gen_schur": {
     "line number": [
      223
     ]
    },
    "numpy.dot": {
     "line number": [
      226,
      226,
      227,
      227,
      228,
      228,
      230,
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_convert_r2c_schur": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "_test_convert_r2c_schur": {
     "line number": [
      119,
      120,
      122,
      123,
      125
     ]
    },
    "numpy.complex128": {
     "line number": [
      123
     ]
    },
    "numpy.complex64": {
     "line number": [
      122
     ]
    },
    "numpy.float32": {
     "line number": [
      119
     ]
    },
    "numpy.float64": {
     "line number": [
      120
     ]
    },
    "numpy.int32": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_convert_r2c_schur._test_convert_r2c_schur": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "_Random": {
     "line number": [
      109
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      115,
      116
     ]
    },
    "kwant.linalg.convert_r2c_schur": {
     "line number": [
      113
     ]
    },
    "kwant.linalg.schur": {
     "line number": [
      112
     ]
    },
    "numpy.conj": {
     "line number": [
      115,
      116
     ]
    },
    "numpy.dot": {
     "line number": [
      115,
      115,
      116,
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_evecs_from_gen_schur": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "_test_evecs_from_gen_schur": {
     "line number": [
      353,
      354,
      355,
      356,
      358
     ]
    },
    "numpy.complex128": {
     "line number": [
      356
     ]
    },
    "numpy.complex64": {
     "line number": [
      355
     ]
    },
    "numpy.float32": {
     "line number": [
      353
     ]
    },
    "numpy.float64": {
     "line number": [
      354
     ]
    },
    "numpy.int32": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_evecs_from_gen_schur._test_evecs_from_gen_schur": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "_Random": {
     "line number": [
      298
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      307,
      309,
      322,
      327,
      340,
      345
     ]
    },
    "bool": {
     "line number": [
      315
     ]
    },
    "kwant.linalg.evecs_from_gen_schur": {
     "line number": [
      304,
      317,
      335
     ]
    },
    "kwant.linalg.gen_schur": {
     "line number": [
      302
     ]
    },
    "numpy.array": {
     "line number": [
      315
     ]
    },
    "numpy.diag": {
     "line number": [
      307,
      308,
      310,
      312,
      324,
      326,
      328,
      331,
      342,
      344,
      346,
      349
     ]
    },
    "numpy.dot": {
     "line number": [
      307,
      307,
      308,
      308,
      310,
      310,
      312,
      312,
      323,
      323,
      325,
      325,
      328,
      328,
      331,
      331,
      341,
      341,
      343,
      343,
      346,
      346,
      349,
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_evecs_from_schur": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "_test_evecs_from_schur": {
     "line number": [
      192,
      193,
      194,
      195,
      197
     ]
    },
    "numpy.complex128": {
     "line number": [
      195
     ]
    },
    "numpy.complex64": {
     "line number": [
      194
     ]
    },
    "numpy.float32": {
     "line number": [
      192
     ]
    },
    "numpy.float64": {
     "line number": [
      193
     ]
    },
    "numpy.int32": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_evecs_from_schur._test_evecs_from_schur": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "_Random": {
     "line number": [
      159
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      166,
      168,
      178,
      180,
      187,
      189
     ]
    },
    "bool": {
     "line number": [
      172
     ]
    },
    "kwant.linalg.evecs_from_schur": {
     "line number": [
      164,
      174,
      183
     ]
    },
    "kwant.linalg.schur": {
     "line number": [
      162
     ]
    },
    "numpy.array": {
     "line number": [
      172
     ]
    },
    "numpy.conj": {
     "line number": [
      168,
      169
     ]
    },
    "numpy.diag": {
     "line number": [
      166,
      169,
      179,
      181,
      188,
      190
     ]
    },
    "numpy.dot": {
     "line number": [
      166,
      166,
      168,
      169,
      178,
      179,
      180,
      181,
      187,
      188,
      189,
      190
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      167,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_gen_eig": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "_test_gen_eig": {
     "line number": [
      30,
      31,
      32,
      33,
      35
     ]
    },
    "numpy.complex128": {
     "line number": [
      33
     ]
    },
    "numpy.complex64": {
     "line number": [
      32
     ]
    },
    "numpy.float32": {
     "line number": [
      30
     ]
    },
    "numpy.float64": {
     "line number": [
      31
     ]
    },
    "numpy.int32": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_gen_eig._test_gen_eig": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "_Random": {
     "line number": [
      18
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      24,
      26
     ]
    },
    "kwant.linalg.gen_eig": {
     "line number": [
      22
     ]
    },
    "numpy.conj": {
     "line number": [
      27,
      28
     ]
    },
    "numpy.dot": {
     "line number": [
      24,
      24,
      25,
      25,
      27,
      27,
      28,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_gen_schur": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "_test_gen_schur": {
     "line number": [
      210,
      211,
      212,
      213,
      215
     ]
    },
    "numpy.complex128": {
     "line number": [
      213
     ]
    },
    "numpy.complex64": {
     "line number": [
      212
     ]
    },
    "numpy.float32": {
     "line number": [
      210
     ]
    },
    "numpy.float64": {
     "line number": [
      211
     ]
    },
    "numpy.int32": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_gen_schur._test_gen_schur": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "_Random": {
     "line number": [
      201
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      207,
      208
     ]
    },
    "kwant.linalg.gen_schur": {
     "line number": [
      205
     ]
    },
    "numpy.dot": {
     "line number": [
      207,
      207,
      208,
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_lu": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "_test_lu": {
     "line number": [
      51,
      52,
      53,
      54,
      56
     ]
    },
    "numpy.complex128": {
     "line number": [
      54
     ]
    },
    "numpy.complex64": {
     "line number": [
      53
     ]
    },
    "numpy.float32": {
     "line number": [
      51
     ]
    },
    "numpy.float64": {
     "line number": [
      52
     ]
    },
    "numpy.int32": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_lu._test_lu": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "_Random": {
     "line number": [
      39
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      48,
      49
     ]
    },
    "kwant.linalg.lu_factor": {
     "line number": [
      44
     ]
    },
    "kwant.linalg.lu_solve": {
     "line number": [
      45,
      46
     ]
    },
    "numpy.dot": {
     "line number": [
      48,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_order_gen_schur": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "_test_order_gen_schur": {
     "line number": [
      288,
      289,
      290,
      291,
      293
     ]
    },
    "numpy.complex128": {
     "line number": [
      291
     ]
    },
    "numpy.complex64": {
     "line number": [
      290
     ]
    },
    "numpy.float32": {
     "line number": [
      288
     ]
    },
    "numpy.float64": {
     "line number": [
      289
     ]
    },
    "numpy.int32": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_order_gen_schur._test_order_gen_schur": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "_Random": {
     "line number": [
      243
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      252,
      253,
      254,
      256,
      267,
      269,
      271,
      273,
      279,
      281,
      283,
      284,
      285,
      286
     ]
    },
    "kwant.linalg.gen_schur": {
     "line number": [
      247
     ]
    },
    "kwant.linalg.order_gen_schur": {
     "line number": [
      249,
      278
     ]
    },
    "numpy.dot": {
     "line number": [
      252,
      252,
      253,
      253,
      254,
      254,
      256,
      256,
      279,
      279,
      281,
      281
     ]
    },
    "numpy.sort": {
     "line number": [
      267,
      268,
      269,
      270,
      271,
      272,
      273,
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_order_schur": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "_test_order_schur": {
     "line number": [
      150,
      151,
      152,
      153,
      155
     ]
    },
    "numpy.complex128": {
     "line number": [
      153
     ]
    },
    "numpy.complex64": {
     "line number": [
      152
     ]
    },
    "numpy.float32": {
     "line number": [
      150
     ]
    },
    "numpy.float64": {
     "line number": [
      151
     ]
    },
    "numpy.int32": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_order_schur._test_order_schur": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "_Random": {
     "line number": [
      129
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      136,
      137,
      139,
      140,
      145,
      147,
      148
     ]
    },
    "kwant.linalg.order_schur": {
     "line number": [
      134,
      144
     ]
    },
    "kwant.linalg.schur": {
     "line number": [
      132
     ]
    },
    "numpy.conj": {
     "line number": [
      136,
      137,
      145
     ]
    },
    "numpy.dot": {
     "line number": [
      136,
      136,
      137,
      137,
      145,
      145
     ]
    },
    "numpy.sort": {
     "line number": [
      139,
      139,
      140,
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_rcond_from_lu": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "_test_rcond_from_lu": {
     "line number": [
      84,
      85,
      86,
      87,
      89
     ]
    },
    "numpy.complex128": {
     "line number": [
      87
     ]
    },
    "numpy.complex64": {
     "line number": [
      86
     ]
    },
    "numpy.float32": {
     "line number": [
      84
     ]
    },
    "numpy.float64": {
     "line number": [
      85
     ]
    },
    "numpy.int32": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_rcond_from_lu._test_rcond_from_lu": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "_Random": {
     "line number": [
      60
     ]
    },
    "abs": {
     "line number": [
      71,
      73
     ]
    },
    "kwant.linalg.lu_factor": {
     "line number": [
      66
     ]
    },
    "kwant.linalg.rcond_from_lu": {
     "line number": [
      68,
      69
     ]
    },
    "numpy.inf": {
     "line number": [
      64,
      74
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      72,
      74
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      63,
      64,
      72,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_schur": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "_test_schur": {
     "line number": [
      100,
      101,
      102,
      103,
      105
     ]
    },
    "numpy.complex128": {
     "line number": [
      103
     ]
    },
    "numpy.complex64": {
     "line number": [
      102
     ]
    },
    "numpy.float32": {
     "line number": [
      100
     ]
    },
    "numpy.float64": {
     "line number": [
      101
     ]
    },
    "numpy.int32": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_linalg.test_schur._test_schur": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "_Random": {
     "line number": [
      93
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      98
     ]
    },
    "kwant.linalg.schur": {
     "line number": [
      96
     ]
    },
    "numpy.conj": {
     "line number": [
      98
     ]
    },
    "numpy.dot": {
     "line number": [
      98,
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_lll": {
  "data": {},
  "type": "module"
 },
 "kwant.linalg.tests.test_lll.ensure_rng": {
  "data": {
   "shadows": "kwant._common.ensure_rng"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_lll.lll": {
  "data": {
   "shadows": "kwant.linalg.lll"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_lll.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_lll.test_cvp": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "kwant._common.ensure_rng": {
     "line number": [
      26
     ]
    },
    "kwant.linalg.lll.cvp": {
     "line number": [
      33,
      34
     ]
    },
    "kwant.linalg.lll.lll": {
     "line number": [
      30
     ]
    },
    "numpy.array_equal": {
     "line number": [
      33
     ]
    },
    "range": {
     "line number": [
      27,
      28,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_lll.test_lll": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "kwant._common.ensure_rng": {
     "line number": [
      15
     ]
    },
    "kwant.linalg.lll.is_c_reduced": {
     "line number": [
      21
     ]
    },
    "kwant.linalg.lll.lll": {
     "line number": [
      20
     ]
    },
    "numpy.allclose": {
     "line number": [
      22
     ]
    },
    "numpy.dot": {
     "line number": [
      22
     ]
    },
    "range": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_mumps": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      12
     ]
    },
    "kwant.linalg.tests.test_mumps.no_mumps": {
     "line number": [
      23
     ]
    },
    "kwant.linalg.tests.test_mumps.pytest": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.linalg.tests.test_mumps.Builder": {
  "data": {
   "shadows": "kwant.builder.Builder"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_mumps.HoppingKind": {
  "data": {
   "shadows": "kwant.builder.HoppingKind"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_mumps.MUMPSContext": {
  "data": {
   "shadows": "kwant.linalg.mumps.MUMPSContext"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_mumps.honeycomb": {
  "data": {
   "shadows": "kwant.lattice.honeycomb"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_mumps.no_mumps": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "kwant.linalg.tests.test_mumps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_mumps.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_mumps.pytestmark": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "kwant.linalg.tests.test_mumps.schur_complement": {
  "data": {
   "shadows": "kwant.linalg.mumps.schur_complement"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_mumps.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "kwant.linalg.tests.test_mumps.test_error_minus_9": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "kwant.builder.Builder": {
     "line number": [
      75
     ]
    },
    "kwant.builder.HoppingKind": {
     "line number": [
      78
     ]
    },
    "kwant.lattice.honeycomb": {
     "line number": [
      68
     ]
    },
    "kwant.linalg.mumps.MUMPSContext": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_mumps.test_error_minus_9.circle": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_mumps.test_factor_warning": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      89
     ]
    },
    "complex": {
     "line number": [
      88
     ]
    },
    "kwant.linalg.mumps.MUMPSContext": {
     "line number": [
      90
     ]
    },
    "kwant.linalg.tests.test_mumps.pytest": {
     "line number": [
      89
     ]
    },
    "scipy.sparse.identity": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_mumps.test_lu_with_dense": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "_test_lu_with_dense": {
     "line number": [
      51
     ]
    },
    "numpy.complex128": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_mumps.test_lu_with_dense._test_lu_with_dense": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "_Random": {
     "line number": [
      28
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      39,
      40,
      47,
      48
     ]
    },
    "kwant.linalg.mumps.MUMPSContext": {
     "line number": [
      33
     ]
    },
    "numpy.dot": {
     "line number": [
      39,
      40,
      47,
      48
     ]
    },
    "scipy.sparse.coo_matrix": {
     "line number": [
      34
     ]
    },
    "scipy.sparse.csc_matrix": {
     "line number": [
      44,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_mumps.test_schur_complement_with_dense": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "_test_schur_complement_with_dense": {
     "line number": [
      62
     ]
    },
    "numpy.complex128": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.linalg.tests.test_mumps.test_schur_complement_with_dense._test_schur_complement_with_dense": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "_Random": {
     "line number": [
      56
     ]
    },
    "assert_array_almost_equal": {
     "line number": [
      59
     ]
    },
    "kwant.linalg.mumps.schur_complement": {
     "line number": [
      58
     ]
    },
    "list": {
     "line number": [
      58
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      59,
      60
     ]
    },
    "range": {
     "line number": [
      58
     ]
    },
    "scipy.sparse.coo_matrix": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.main": {
  "data": {
   "shadows": "pytest.main"
  },
  "type": "import"
 },
 "kwant.msg": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "kwant.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.operator": {
  "data": {
   "symbols_in_volume": {
    "kwant.operator.__bootstrap__": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.operator.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": {
    "__loader__": {
     "line number": [
      5,
      5
     ]
    },
    "__name__": {
     "line number": [
      4,
      6
     ]
    },
    "kwant.operator.imp": {
     "line number": [
      6
     ]
    },
    "kwant.operator.pkg_resources": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.operator.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "kwant.operator.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "kwant.operator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "kwant.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "kwant.physics": {
  "data": {
   "symbols_in_volume": {
    "exec": {
     "line number": [
      14,
      15,
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.physics.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "kwant.physics.dispersion": {
  "data": {},
  "type": "module"
 },
 "kwant.physics.dispersion.Bands": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "kwant.physics.dispersion.Bands.__call__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      63
     ]
    },
    "kwant.physics.dispersion.math": {
     "line number": [
      63,
      63
     ]
    },
    "numpy.linalg.eigvalsh": {
     "line number": [
      65
     ]
    },
    "numpy.sort": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.dispersion.Bands.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      54
     ]
    },
    "complex": {
     "line number": [
      56
     ]
    },
    "ensure_isinstance": {
     "line number": [
      51
     ]
    },
    "numpy.allclose": {
     "line number": [
      53
     ]
    },
    "numpy.empty": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.dispersion.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "kwant.physics.dispersion.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "kwant.physics.dispersion.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.physics.leads": {
  "data": {
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      31
     ]
    },
    "collections.namedtuple": {
     "line number": [
      92
     ]
    },
    "kwant.physics.leads.bdiag_broken": {
     "line number": [
      33
     ]
    },
    "numpy.dot": {
     "line number": [
      22
     ]
    },
    "numpy.zeros": {
     "line number": [
      30,
      30
     ]
    },
    "scipy.linalg.block_diag": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.physics.leads.Linsys": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "kwant.physics.leads.PropagatingModes": {
  "data": {
   "lineno": 95
  },
  "type": "class"
 },
 "kwant.physics.leads.PropagatingModes.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "locals": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.StabilizedModes": {
  "data": {
   "lineno": 145
  },
  "type": "class"
 },
 "kwant.physics.leads.StabilizedModes.__init__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "locals": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.StabilizedModes.selfenergy": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "kwant.physics.leads.dot": {
     "line number": [
      200,
      200
     ]
    },
    "scipy.linalg.solve": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "kwant.physics.leads.bdiag_broken": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "kwant.physics.leads.block_diag": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "numpy.sum": {
     "line number": [
      38
     ]
    },
    "numpy.zeros": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.combinations_with_replacement": {
  "data": {
   "shadows": "itertools.combinations_with_replacement"
  },
  "type": "import"
 },
 "kwant.physics.leads.compute_block_modes": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": {
    "extract": {
     "line number": [
      883,
      905
     ]
    },
    "kwant.physics.leads.make_proper_modes": {
     "line number": [
      904
     ]
    },
    "kwant.physics.leads.setup_linsys": {
     "line number": [
      883
     ]
    },
    "kwant.physics.leads.unified_eigenproblem": {
     "line number": [
      884
     ]
    },
    "numpy.c_": {
     "line number": [
      908,
      909
     ]
    },
    "numpy.sum": {
     "line number": [
      892
     ]
    },
    "ord_schur": {
     "line number": [
      894
     ]
    },
    "vec_gen": {
     "line number": [
      897
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.copysign": {
  "data": {
   "shadows": "math.copysign"
  },
  "type": "import"
 },
 "kwant.physics.leads.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "kwant.physics.leads.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "kwant.physics.leads.dot": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "kwant.physics.leads.group_halves": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "numpy.r_": {
     "line number": [
      88
     ]
    },
    "numpy.split": {
     "line number": [
      86
     ]
    },
    "tuple": {
     "line number": [
      88
     ]
    },
    "zip": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.kla": {
  "data": {
   "shadows": "linalg"
  },
  "type": "import"
 },
 "kwant.physics.leads.la": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "kwant.physics.leads.lstsq": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "numpy.common_type": {
     "line number": [
      53
     ]
    },
    "numpy.empty": {
     "line number": [
      53
     ]
    },
    "scipy.linalg.lstsq": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.make_proper_modes": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      802,
      804
     ]
    },
    "abs": {
     "line number": [
      801,
      870
     ]
    },
    "enumerate": {
     "line number": [
      757
     ]
    },
    "extract": {
     "line number": [
      637
     ]
    },
    "float": {
     "line number": [
      631
     ]
    },
    "int": {
     "line number": [
      634
     ]
    },
    "kwant.physics.leads.PropagatingModes": {
     "line number": [
      874
     ]
    },
    "kwant.physics.leads.dot": {
     "line number": [
      705,
      717,
      718
     ]
    },
    "kwant.physics.leads.lstsq": {
     "line number": [
      839,
      854,
      866
     ]
    },
    "kwant.physics.leads.phs_symmetrization": {
     "line number": [
      773
     ]
    },
    "len": {
     "line number": [
      628,
      651,
      656,
      657,
      660,
      731,
      759,
      794,
      795,
      798,
      799,
      799,
      803
     ]
    },
    "numpy.abs": {
     "line number": [
      652,
      730,
      730,
      733,
      758
     ]
    },
    "numpy.angle": {
     "line number": [
      650,
      808
     ]
    },
    "numpy.any": {
     "line number": [
      801
     ]
    },
    "numpy.argsort": {
     "line number": [
      651
     ]
    },
    "numpy.argwhere": {
     "line number": [
      652
     ]
    },
    "numpy.array": {
     "line number": [
      657
     ]
    },
    "numpy.common_type": {
     "line number": [
      643,
      644,
      686,
      687,
      688,
      689,
      712,
      713,
      714,
      715
     ]
    },
    "numpy.diff": {
     "line number": [
      652
     ]
    },
    "numpy.empty": {
     "line number": [
      631
     ]
    },
    "numpy.finfo": {
     "line number": [
      625,
      649
     ]
    },
    "numpy.hstack": {
     "line number": [
      779,
      783
     ]
    },
    "numpy.lexsort": {
     "line number": [
      811
     ]
    },
    "numpy.pi": {
     "line number": [
      830,
      845
     ]
    },
    "numpy.resize": {
     "line number": [
      651
     ]
    },
    "numpy.sign": {
     "line number": [
      812,
      812
     ]
    },
    "numpy.sqrt": {
     "line number": [
      870
     ]
    },
    "numpy.sum": {
     "line number": [
      803
     ]
    },
    "numpy.zeros": {
     "line number": [
      634
     ]
    },
    "scipy.linalg.eigh": {
     "line number": [
      707
     ]
    },
    "scipy.linalg.qr": {
     "line number": [
      682
     ]
    },
    "scipy.linalg.solve": {
     "line number": [
      692
     ]
    },
    "slice": {
     "line number": [
      771
     ]
    },
    "zip": {
     "line number": [
      659,
      760
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.modes": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1058
     ]
    },
    "any": {
     "line number": [
      1140
     ]
    },
    "basis_change": {
     "line number": [
      1105,
      1106,
      1107,
      1108,
      1109
     ]
    },
    "enumerate": {
     "line number": [
      1113
     ]
    },
    "itertools.combinations_with_replacement": {
     "line number": [
      1113
     ]
    },
    "kwant.physics.leads.PropagatingModes": {
     "line number": [
      1065,
      1150
     ]
    },
    "kwant.physics.leads.StabilizedModes": {
     "line number": [
      1065,
      1170
     ]
    },
    "kwant.physics.leads.compute_block_modes": {
     "line number": [
      1125
     ]
    },
    "kwant.physics.leads.group_halves": {
     "line number": [
      1147,
      1150,
      1151
     ]
    },
    "kwant.physics.leads.nonzero_symm_projection": {
     "line number": [
      1119
     ]
    },
    "kwant.physics.leads.transform_modes": {
     "line number": [
      1141
     ]
    },
    "len": {
     "line number": [
      1112,
      1152
     ]
    },
    "map": {
     "line number": [
      1086
     ]
    },
    "numpy.allclose": {
     "line number": [
      1135,
      1136
     ]
    },
    "numpy.any": {
     "line number": [
      1060
     ]
    },
    "numpy.cumsum": {
     "line number": [
      1090
     ]
    },
    "numpy.empty_like": {
     "line number": [
      1070
     ]
    },
    "numpy.hstack": {
     "line number": [
      1161,
      1165,
      1167
     ]
    },
    "numpy.mgrid": {
     "line number": [
      1131,
      1131
     ]
    },
    "numpy.vstack": {
     "line number": [
      1091
     ]
    },
    "numpy.zeros": {
     "line number": [
      1061,
      1062,
      1063,
      1064
     ]
    },
    "scipy.linalg.block_diag": {
     "line number": [
      1161,
      1165
     ]
    },
    "scipy.sparse.hstack": {
     "line number": [
      1092
     ]
    },
    "scipy.sparse.identity": {
     "line number": [
      1076,
      1137
     ]
    },
    "slice": {
     "line number": [
      1091
     ]
    },
    "sum": {
     "line number": [
      1170
     ]
    },
    "tuple": {
     "line number": [
      1131,
      1131
     ]
    },
    "zip": {
     "line number": [
      1144,
      1148,
      1159,
      1160,
      1163,
      1164,
      1168
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.modes.basis_change": {
  "data": {
   "lineno": 1094
  },
  "type": "function"
 },
 "kwant.physics.leads.modes.to_dense_or_csr": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      1083
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      1080
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "kwant.physics.leads.nonzero_symm_projection": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      74
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      76
     ]
    },
    "numpy.ndarray": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.physics.leads.npl": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "kwant.physics.leads.phs_symmetrization": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": {
    "Pdot": {
     "line number": [
      515,
      567,
      580,
      604,
      609
     ]
    },
    "ValueError": {
     "line number": [
      519,
      526
     ]
    },
    "int": {
     "line number": [
      553
     ]
    },
    "len": {
     "line number": [
      607
     ]
    },
    "numpy.allclose": {
     "line number": [
      518,
      521,
      523,
      531,
      535,
      548,
      605,
      609,
      612
     ]
    },
    "numpy.angle": {
     "line number": [
      540
     ]
    },
    "numpy.append": {
     "line number": [
      541
     ]
    },
    "numpy.arange": {
     "line number": [
      611
     ]
    },
    "numpy.argmax": {
     "line number": [
      542
     ]
    },
    "numpy.diag": {
     "line number": [
      535,
      535,
      536,
      546
     ]
    },
    "numpy.diff": {
     "line number": [
      541
     ]
    },
    "numpy.exp": {
     "line number": [
      545,
      545
     ]
    },
    "numpy.eye": {
     "line number": [
      518,
      521,
      523,
      606,
      612
     ]
    },
    "numpy.hstack": {
     "line number": [
      607
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      607
     ]
    },
    "numpy.outer": {
     "line number": [
      588
     ]
    },
    "numpy.pi": {
     "line number": [
      541,
      543
     ]
    },
    "numpy.sort": {
     "line number": [
      540
     ]
    },
    "numpy.sqrt": {
     "line number": [
      545
     ]
    },
    "numpy.zeros": {
     "line number": [
      553
     ]
    },
    "range": {
     "line number": [
      573
     ]
    },
    "scipy.linalg.qr": {
     "line number": [
      593
     ]
    },
    "scipy.linalg.schur": {
     "line number": [
      533
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.phs_symmetrization.Pdot": {
  "data": {
   "lineno": 510
  },
  "type": "function"
 },
 "kwant.physics.leads.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "kwant.physics.leads.selfenergy": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": {
    "kwant.physics.leads.modes": {
     "line number": [
      1202
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.setup_linsys": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      341
     ]
    },
    "ValueError": {
     "line number": [
      252
     ]
    },
    "issubclass": {
     "line number": [
      314
     ]
    },
    "kwant.physics.leads.Linsys": {
     "line number": [
      404
     ]
    },
    "kwant.physics.leads.dot": {
     "line number": [
      279,
      332,
      332,
      363,
      367,
      374,
      378
     ]
    },
    "list": {
     "line number": [
      247
     ]
    },
    "math.sqrt": {
     "line number": [
      272
     ]
    },
    "numpy.any": {
     "line number": [
      249,
      255,
      255
     ]
    },
    "numpy.common_type": {
     "line number": [
      259,
      278,
      314,
      356,
      357
     ]
    },
    "numpy.eye": {
     "line number": [
      287
     ]
    },
    "numpy.finfo": {
     "line number": [
      259
     ]
    },
    "numpy.floating": {
     "line number": [
      314
     ]
    },
    "numpy.identity": {
     "line number": [
      361,
      372
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      272,
      321,
      336,
      395
     ]
    },
    "numpy.sqrt": {
     "line number": [
      299,
      303
     ]
    },
    "numpy.sum": {
     "line number": [
      267
     ]
    },
    "numpy.zeros": {
     "line number": [
      278,
      301,
      356,
      357
     ]
    },
    "scipy.linalg.inv": {
     "line number": [
      276
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      265
     ]
    },
    "slice": {
     "line number": [
      359,
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.setup_linsys.extract_wf": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "kwant.physics.leads.dot": {
     "line number": [
      348,
      348,
      350,
      351
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "kwant.physics.leads.sp_hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "kwant.physics.leads.sp_identity": {
  "data": {
   "shadows": "scipy.sparse.identity"
  },
  "type": "import"
 },
 "kwant.physics.leads.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "kwant.physics.leads.square_selfenergy": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      1239,
      1246
     ]
    },
    "f": {
     "line number": [
      1243
     ]
    },
    "math.cos": {
     "line number": [
      1241
     ]
    },
    "math.pi": {
     "line number": [
      1227
     ]
    },
    "math.sin": {
     "line number": [
      1231
     ]
    },
    "math.sqrt": {
     "line number": [
      1228
     ]
    },
    "numpy.empty": {
     "line number": [
      1226,
      1239,
      1246
     ]
    },
    "range": {
     "line number": [
      1229,
      1230,
      1240,
      1247,
      1248
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.square_selfenergy.f": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      1235
     ]
    },
    "math.copysign": {
     "line number": [
      1238
     ]
    },
    "math.sqrt": {
     "line number": [
      1236,
      1238
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.transform_modes": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      967
     ]
    },
    "numpy.arange": {
     "line number": [
      946,
      951,
      956,
      957,
      962,
      963
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.leads.unified_eigenproblem": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      448,
      450,
      450,
      460,
      460,
      462,
      462,
      462,
      462
     ]
    },
    "numpy.common_type": {
     "line number": [
      456
     ]
    },
    "numpy.errstate": {
     "line number": [
      464
     ]
    },
    "numpy.finfo": {
     "line number": [
      444,
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.noise": {
  "data": {},
  "type": "module"
 },
 "kwant.physics.noise.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "kwant.physics.noise.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.physics.noise.two_terminal_shotnoise": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      33
     ]
    },
    "ValueError": {
     "line number": [
      37
     ]
    },
    "isinstance": {
     "line number": [
      32
     ]
    },
    "len": {
     "line number": [
      36
     ]
    },
    "numpy.dot": {
     "line number": [
      40,
      41
     ]
    },
    "numpy.trace": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.symmetry": {
  "data": {},
  "type": "module"
 },
 "kwant.physics.symmetry.DiscreteSymmetry": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "kwant.physics.symmetry.DiscreteSymmetry.__getitem__": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "kwant.physics.symmetry.DiscreteSymmetry.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      66,
      74
     ]
    },
    "TypeError": {
     "line number": [
      67,
      75
     ]
    },
    "ValueError": {
     "line number": [
      80,
      99,
      104,
      113,
      128
     ]
    },
    "abs": {
     "line number": [
      109,
      124
     ]
    },
    "kwant.physics.symmetry._conj": {
     "line number": [
      95,
      118
     ]
    },
    "kwant.physics.symmetry._names": {
     "line number": [
      95,
      118
     ]
    },
    "kwant.physics.symmetry.almost_identity": {
     "line number": [
      79,
      98,
      102,
      103,
      111
     ]
    },
    "kwant.physics.symmetry.cond_conj": {
     "line number": [
      101,
      125
     ]
    },
    "numpy.any": {
     "line number": [
      124
     ]
    },
    "numpy.asarray": {
     "line number": [
      109
     ]
    },
    "range": {
     "line number": [
      95
     ]
    },
    "sum": {
     "line number": [
      111,
      123
     ]
    },
    "zip": {
     "line number": [
      95,
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.symmetry.DiscreteSymmetry.validate": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      153
     ]
    },
    "kwant.physics.symmetry._conj": {
     "line number": [
      166
     ]
    },
    "kwant.physics.symmetry._names": {
     "line number": [
      166
     ]
    },
    "kwant.physics.symmetry._signs": {
     "line number": [
      166
     ]
    },
    "kwant.physics.symmetry.cond_conj": {
     "line number": [
      170
     ]
    },
    "numpy.empty": {
     "line number": [
      154
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      164,
      171
     ]
    },
    "numpy.ndarray": {
     "line number": [
      153
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      159
     ]
    },
    "scipy.sparse.hstack": {
     "line number": [
      159
     ]
    },
    "zip": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.symmetry.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "kwant.physics.symmetry._conj": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "kwant.physics.symmetry._names": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "kwant.physics.symmetry._signs": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "kwant.physics.symmetry.almost_identity": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      16
     ]
    },
    "numpy.all": {
     "line number": [
      16
     ]
    },
    "scipy.sparse.identity": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.symmetry.cond_conj": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "kwant.physics.symmetry.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "kwant.physics.symmetry.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "kwant.physics.symmetry.identity": {
  "data": {
   "shadows": "scipy.sparse.identity"
  },
  "type": "import"
 },
 "kwant.physics.symmetry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.physics.tests": {
  "data": {},
  "type": "module"
 },
 "kwant.physics.tests.test_dispersion": {
  "data": {},
  "type": "module"
 },
 "kwant.physics.tests.test_dispersion.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_dispersion.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_dispersion.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_dispersion.kwant": {
  "data": {
   "shadows": "kwant"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_dispersion.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_dispersion.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_dispersion.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_dispersion.test_band_energies": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "band_energies": {
     "line number": [
      25
     ]
    },
    "kwant.physics.tests.test_dispersion.kwant": {
     "line number": [
      16,
      16,
      17,
      22
     ]
    },
    "lat": {
     "line number": [
      18,
      18,
      19,
      19,
      20,
      20
     ]
    },
    "math.cos": {
     "line number": [
      27,
      27
     ]
    },
    "math.pi": {
     "line number": [
      24
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      26
     ]
    },
    "range": {
     "line number": [
      20,
      23
     ]
    },
    "sorted": {
     "line number": [
      26,
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_dispersion.test_raise_nonhermitian": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      48
     ]
    },
    "complex": {
     "line number": [
      46
     ]
    },
    "kwant.physics.tests.test_dispersion.kwant": {
     "line number": [
      43,
      43,
      44,
      48
     ]
    },
    "lat": {
     "line number": [
      44,
      45,
      46,
      46
     ]
    },
    "math.cos": {
     "line number": [
      46
     ]
    },
    "math.sin": {
     "line number": [
      46
     ]
    },
    "pytest.raises": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_dispersion.test_same_as_lead": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "bands": {
     "line number": [
      40
     ]
    },
    "complex": {
     "line number": [
      33
     ]
    },
    "kwant.physics.tests.test_dispersion.kwant": {
     "line number": [
      30,
      30,
      31,
      37
     ]
    },
    "lat": {
     "line number": [
      31,
      32,
      33,
      33
     ]
    },
    "math.cos": {
     "line number": [
      33
     ]
    },
    "math.sin": {
     "line number": [
      33
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads": {
  "data": {
   "symbols_in_volume": {
    "kwant.physics.leads.selfenergy": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.physics.tests.test_leads.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_leads.check_PHS": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      446
     ]
    },
    "len": {
     "line number": [
      448
     ]
    },
    "numpy.abs": {
     "line number": [
      447
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      442,
      452,
      453
     ]
    },
    "slice": {
     "line number": [
      451,
      452,
      452
     ]
    },
    "zip": {
     "line number": [
      449
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.check_bdiag_modes": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      795
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      799
     ]
    },
    "numpy.zeros": {
     "line number": [
      798
     ]
    },
    "zip": {
     "line number": [
      790
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.check_equivalence": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "kwant.physics.leads.modes": {
     "line number": [
      290
     ]
    },
    "kwant.physics.tests.test_leads.current_conserving": {
     "line number": [
      293
     ]
    },
    "max": {
     "line number": [
      324
     ]
    },
    "numpy.abs": {
     "line number": [
      313,
      324
     ]
    },
    "numpy.c_": {
     "line number": [
      319
     ]
    },
    "numpy.dot": {
     "line number": [
      298,
      301
     ]
    },
    "numpy.finfo": {
     "line number": [
      324
     ]
    },
    "numpy.linalg.matrix_rank": {
     "line number": [
      325
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      302,
      303,
      321
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      284
     ]
    },
    "numpy.r_": {
     "line number": [
      304
     ]
    },
    "numpy.sqrt": {
     "line number": [
      285,
      285,
      302,
      303,
      324
     ]
    },
    "numpy.sum": {
     "line number": [
      313
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      313
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      299
     ]
    },
    "zip": {
     "line number": [
      310,
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.check_identical_modes": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      898
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.check_symm_ham": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      1030,
      1032,
      1040
     ]
    },
    "numpy.eye": {
     "line number": [
      1031,
      1032,
      1039,
      1040
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1026,
      1028,
      1035,
      1037,
      1039
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.current_conserving": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      29
     ]
    },
    "numpy.allclose": {
     "line number": [
      28
     ]
    },
    "numpy.diag": {
     "line number": [
      27
     ]
    },
    "numpy.round": {
     "line number": [
      29
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.ensure_rng": {
  "data": {
   "shadows": "kwant._common.ensure_rng"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_leads.h_cell_s_func": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "numpy.identity": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.kwant": {
  "data": {
   "shadows": "kwant"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_leads.la": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_leads.leads": {
  "data": {
   "shadows": "kwant.physics.leads"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_leads.make_clean_lead": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": {
    "kwant.physics.tests.test_leads.kwant": {
     "line number": [
      419,
      419,
      420
     ]
    },
    "lat": {
     "line number": [
      421
     ]
    },
    "lat.neighbors": {
     "line number": [
      422
     ]
    },
    "range": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.modes_se": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "kwant.physics.tests.test_leads.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_leads.random_onsite_hop": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": {
    "kwant._common.ensure_rng": {
     "line number": [
      712
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_leads.test_PHS_TRIM": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": {
    "kwant._common.ensure_rng": {
     "line number": [
      629
     ]
    },
    "kwant.physics.leads.phs_symmetrization": {
     "line number": [
      651,
      676,
      700
     ]
    },
    "kwant.physics.tests.test_leads.kwant": {
     "line number": [
      631,
      632,
      633,
      641,
      647,
      665,
      672,
      694
     ]
    },
    "len": {
     "line number": [
      634,
      687
     ]
    },
    "numpy.allclose": {
     "line number": [
      635
     ]
    },
    "numpy.array": {
     "line number": [
      633,
      686
     ]
    },
    "numpy.eye": {
     "line number": [
      636,
      657,
      682,
      706
     ]
    },
    "numpy.hstack": {
     "line number": [
      697
     ]
    },
    "numpy.identity": {
     "line number": [
      634,
      687
     ]
    },
    "numpy.kron": {
     "line number": [
      634,
      687
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      652,
      656,
      677,
      681,
      701,
      705
     ]
    },
    "numpy.vstack": {
     "line number": [
      695
     ]
    },
    "numpy.zeros": {
     "line number": [
      695
     ]
    },
    "scipy.linalg.qr": {
     "line number": [
      645,
      670
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_PHS_TRIM_degenerate_ordering": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      479,
      502
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      472
     ]
    },
    "kwant.physics.leads.modes": {
     "line number": [
      480,
      503
     ]
    },
    "kwant.physics.tests.test_leads.check_PHS": {
     "line number": [
      517,
      518,
      521,
      522
     ]
    },
    "kwant.physics.tests.test_leads.current_conserving": {
     "line number": [
      481,
      504
     ]
    },
    "numpy.all": {
     "line number": [
      482,
      484,
      506
     ]
    },
    "numpy.allclose": {
     "line number": [
      484
     ]
    },
    "numpy.any": {
     "line number": [
      482,
      506
     ]
    },
    "numpy.array": {
     "line number": [
      468,
      469,
      482,
      506
     ]
    },
    "numpy.eye": {
     "line number": [
      476,
      478,
      491,
      496,
      498
     ]
    },
    "numpy.kron": {
     "line number": [
      491,
      496,
      496
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      500
     ]
    },
    "numpy.pi": {
     "line number": [
      482,
      506,
      518,
      522
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      498,
      500
     ]
    },
    "numpy.zeros": {
     "line number": [
      479,
      502
     ]
    },
    "scipy.linalg.block_diag": {
     "line number": [
      476,
      495
     ]
    },
    "sum": {
     "line number": [
      478,
      496
     ]
    },
    "zip": {
     "line number": [
      476,
      493
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_analytic_numeric": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "kwant.physics.leads.square_selfenergy": {
     "line number": [
      44
     ]
    },
    "kwant.physics.tests.test_leads.h_cell_s_func": {
     "line number": [
      45
     ]
    },
    "kwant.physics.tests.test_leads.modes_se": {
     "line number": [
      45
     ]
    },
    "numpy.identity": {
     "line number": [
      45
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_block_relations_cons_PHS": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": {
    "kwant._common.ensure_rng": {
     "line number": [
      912
     ]
    },
    "kwant.physics.tests.test_leads.check_identical_modes": {
     "line number": [
      968,
      979
     ]
    },
    "kwant.physics.tests.test_leads.current_conserving": {
     "line number": [
      950
     ]
    },
    "kwant.physics.tests.test_leads.kwant": {
     "line number": [
      915,
      916,
      917,
      947
     ]
    },
    "kwant.physics.tests.test_leads.random_onsite_hop": {
     "line number": [
      920
     ]
    },
    "len": {
     "line number": [
      918
     ]
    },
    "numpy.arange": {
     "line number": [
      1003,
      1004
     ]
    },
    "numpy.array": {
     "line number": [
      917,
      931
     ]
    },
    "numpy.cumsum": {
     "line number": [
      962,
      975,
      987
     ]
    },
    "numpy.eye": {
     "line number": [
      937,
      940
     ]
    },
    "numpy.hstack": {
     "line number": [
      1011,
      1013
     ]
    },
    "numpy.identity": {
     "line number": [
      918
     ]
    },
    "numpy.kron": {
     "line number": [
      918,
      933
     ]
    },
    "numpy.split": {
     "line number": [
      940
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      934,
      935,
      936,
      937,
      1019
     ]
    },
    "numpy.vstack": {
     "line number": [
      963,
      976,
      988
     ]
    },
    "scipy.linalg.block_diag": {
     "line number": [
      922,
      924,
      929,
      933
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      942
     ]
    },
    "slice": {
     "line number": [
      956,
      956,
      957,
      957,
      963,
      976,
      988
     ]
    },
    "zip": {
     "line number": [
      974
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_blocks_symm_complex_projectors": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1068
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      1049
     ]
    },
    "kwant.physics.tests.test_leads.check_symm_ham": {
     "line number": [
      1085,
      1096
     ]
    },
    "kwant.physics.tests.test_leads.current_conserving": {
     "line number": [
      1121
     ]
    },
    "kwant.physics.tests.test_leads.kwant": {
     "line number": [
      1060,
      1063,
      1087,
      1110,
      1114,
      1118
     ]
    },
    "kwant.physics.tests.test_leads.random_onsite_hop": {
     "line number": [
      1057
     ]
    },
    "len": {
     "line number": [
      1061,
      1064
     ]
    },
    "numpy.arange": {
     "line number": [
      1139,
      1141,
      1142,
      1144,
      1145
     ]
    },
    "numpy.array": {
     "line number": [
      1060,
      1063,
      1082,
      1101
     ]
    },
    "numpy.cumsum": {
     "line number": [
      1133
     ]
    },
    "numpy.diag": {
     "line number": [
      1066,
      1095
     ]
    },
    "numpy.eye": {
     "line number": [
      1106
     ]
    },
    "numpy.hstack": {
     "line number": [
      1161,
      1163
     ]
    },
    "numpy.identity": {
     "line number": [
      1061,
      1064,
      1066
     ]
    },
    "numpy.kron": {
     "line number": [
      1061,
      1064,
      1066,
      1084
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      1099
     ]
    },
    "numpy.reshape": {
     "line number": [
      1102,
      1103
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1101,
      1105,
      1170,
      1172
     ]
    },
    "numpy.vstack": {
     "line number": [
      1134
     ]
    },
    "scipy.linalg.block_diag": {
     "line number": [
      1072,
      1074,
      1078,
      1080
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      1107
     ]
    },
    "slice": {
     "line number": [
      1127,
      1127,
      1134
     ]
    },
    "sum": {
     "line number": [
      1105
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_chiral_symm": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": {
    "kwant.physics.tests.test_leads.current_conserving": {
     "line number": [
      620
     ]
    },
    "kwant.physics.tests.test_leads.kwant": {
     "line number": [
      618
     ]
    },
    "kwant.physics.tests.test_leads.random_onsite_hop": {
     "line number": [
      609
     ]
    },
    "numpy.array": {
     "line number": [
      611
     ]
    },
    "numpy.diag": {
     "line number": [
      610
     ]
    },
    "numpy.eye": {
     "line number": [
      615
     ]
    },
    "numpy.identity": {
     "line number": [
      610
     ]
    },
    "numpy.kron": {
     "line number": [
      610,
      612
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      615,
      616,
      617,
      623
     ]
    },
    "scipy.linalg.block_diag": {
     "line number": [
      613,
      614
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_cons_blocks_sizes": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": {
    "kwant.physics.leads.modes": {
     "line number": [
      845,
      848
     ]
    },
    "kwant.physics.tests.test_leads.check_bdiag_modes": {
     "line number": [
      880,
      890
     ]
    },
    "kwant.physics.tests.test_leads.current_conserving": {
     "line number": [
      846,
      849
     ]
    },
    "kwant.physics.tests.test_leads.kwant": {
     "line number": [
      820
     ]
    },
    "kwant.physics.tests.test_leads.random_onsite_hop": {
     "line number": [
      808
     ]
    },
    "numpy.array": {
     "line number": [
      830
     ]
    },
    "numpy.cumsum": {
     "line number": [
      876,
      887
     ]
    },
    "numpy.diag": {
     "line number": [
      806
     ]
    },
    "numpy.hstack": {
     "line number": [
      838
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      828
     ]
    },
    "numpy.reshape": {
     "line number": [
      834,
      835,
      836
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      813,
      818,
      824,
      825,
      830,
      838,
      850,
      857,
      858,
      859
     ]
    },
    "numpy.vstack": {
     "line number": [
      877,
      888
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      843
     ]
    },
    "slice": {
     "line number": [
      873,
      873,
      873,
      877,
      888
     ]
    },
    "sum": {
     "line number": [
      857,
      858,
      859
     ]
    },
    "zip": {
     "line number": [
      886
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_cons_rectangular_hopping": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": {
    "kwant.physics.tests.test_leads.current_conserving": {
     "line number": [
      780,
      783
     ]
    },
    "kwant.physics.tests.test_leads.kwant": {
     "line number": [
      779,
      782
     ]
    },
    "kwant.physics.tests.test_leads.random_onsite_hop": {
     "line number": [
      765,
      766
     ]
    },
    "numpy.eye": {
     "line number": [
      774
     ]
    },
    "numpy.reshape": {
     "line number": [
      775
     ]
    },
    "numpy.split": {
     "line number": [
      774
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      784
     ]
    },
    "scipy.linalg.block_diag": {
     "line number": [
      768,
      769
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      777
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_cons_singular_hopping": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": {
    "kwant.physics.tests.test_leads.current_conserving": {
     "line number": [
      755,
      759
     ]
    },
    "kwant.physics.tests.test_leads.kwant": {
     "line number": [
      734,
      754,
      757
     ]
    },
    "kwant.physics.tests.test_leads.random_onsite_hop": {
     "line number": [
      721,
      722
     ]
    },
    "numpy.array": {
     "line number": [
      743
     ]
    },
    "numpy.diag": {
     "line number": [
      730
     ]
    },
    "numpy.hstack": {
     "line number": [
      750
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      741
     ]
    },
    "numpy.reshape": {
     "line number": [
      747,
      748
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      731,
      732,
      738,
      739,
      743,
      750,
      760
     ]
    },
    "scipy.linalg.block_diag": {
     "line number": [
      726,
      727
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      752
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_dtype_linsys": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "kwant.physics.tests.test_leads.kwant": {
     "line number": [
      380,
      384,
      391,
      397
     ]
    },
    "numpy.array": {
     "line number": [
      377,
      378,
      396
     ]
    },
    "numpy.complex128": {
     "line number": [
      384,
      386,
      393,
      396,
      399
     ]
    },
    "numpy.eye": {
     "line number": [
      380,
      385,
      391,
      397
     ]
    },
    "numpy.float64": {
     "line number": [
      377,
      378,
      382,
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_for_all_evs_equal": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      365,
      366
     ]
    },
    "kwant.physics.leads.modes": {
     "line number": [
      368
     ]
    },
    "kwant.physics.tests.test_leads.current_conserving": {
     "line number": [
      369
     ]
    },
    "numpy.array": {
     "line number": [
      365,
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_modes": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "kwant.physics.leads.modes": {
     "line number": [
      257
     ]
    },
    "kwant.physics.tests.test_leads.current_conserving": {
     "line number": [
      258
     ]
    },
    "numpy.arccos": {
     "line number": [
      255
     ]
    },
    "numpy.array": {
     "line number": [
      257,
      257
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      260
     ]
    },
    "numpy.sin": {
     "line number": [
      256
     ]
    },
    "numpy.sqrt": {
     "line number": [
      260
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      261,
      262,
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_modes_bearded_ribbon": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "kwant.physics.leads.modes": {
     "line number": [
      278
     ]
    },
    "kwant.physics.tests.test_leads.kwant": {
     "line number": [
      270,
      271,
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_modes_symmetries": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": {
    "kwant._common.ensure_rng": {
     "line number": [
      527
     ]
    },
    "kwant.physics.leads.modes": {
     "line number": [
      553
     ]
    },
    "kwant.physics.tests.test_leads.current_conserving": {
     "line number": [
      557
     ]
    },
    "kwant.physics.tests.test_leads.kwant": {
     "line number": [
      529,
      531,
      534,
      536,
      537,
      542,
      543,
      548
     ]
    },
    "len": {
     "line number": [
      538,
      544
     ]
    },
    "numpy.array": {
     "line number": [
      537,
      543
     ]
    },
    "numpy.diag": {
     "line number": [
      549
     ]
    },
    "numpy.identity": {
     "line number": [
      538,
      544,
      549
     ]
    },
    "numpy.kron": {
     "line number": [
      538,
      544,
      549
     ]
    },
    "numpy.pi": {
     "line number": [
      577,
      578,
      591,
      592
     ]
    },
    "numpy.sign": {
     "line number": [
      590
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      563,
      568,
      582,
      585,
      594,
      597
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_momenta": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "kwant.physics.tests.test_leads.make_clean_lead": {
     "line number": [
      429
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_regular_degenerate_with_crossing": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      115
     ]
    },
    "kwant.physics.leads.square_selfenergy": {
     "line number": [
      116,
      117
     ]
    },
    "kwant.physics.tests.test_leads.h_cell_s_func": {
     "line number": [
      105
     ]
    },
    "kwant.physics.tests.test_leads.modes_se": {
     "line number": [
      119
     ]
    },
    "numpy.conj": {
     "line number": [
      117
     ]
    },
    "numpy.identity": {
     "line number": [
      104
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      119
     ]
    },
    "numpy.zeros": {
     "line number": [
      107,
      111,
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_regular_fully_degenerate": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      66
     ]
    },
    "kwant.physics.leads.modes": {
     "line number": [
      75,
      80,
      87
     ]
    },
    "kwant.physics.leads.square_selfenergy": {
     "line number": [
      67,
      68
     ]
    },
    "kwant.physics.tests.test_leads.current_conserving": {
     "line number": [
      76,
      82,
      89
     ]
    },
    "kwant.physics.tests.test_leads.h_cell_s_func": {
     "line number": [
      56
     ]
    },
    "kwant.physics.tests.test_leads.modes_se": {
     "line number": [
      70
     ]
    },
    "numpy.eye": {
     "line number": [
      85,
      85
     ]
    },
    "numpy.identity": {
     "line number": [
      55,
      72
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      70,
      77,
      83,
      90
     ]
    },
    "numpy.zeros": {
     "line number": [
      58,
      62,
      66
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      73
     ]
    },
    "scipy.sparse.identity": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_singular": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "kwant.physics.leads.square_selfenergy": {
     "line number": [
      143
     ]
    },
    "kwant.physics.tests.test_leads.h_cell_s_func": {
     "line number": [
      133
     ]
    },
    "kwant.physics.tests.test_leads.modes_se": {
     "line number": [
      145
     ]
    },
    "numpy.identity": {
     "line number": [
      132
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      145
     ]
    },
    "numpy.zeros": {
     "line number": [
      135,
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_singular_but_square": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      170
     ]
    },
    "kwant.physics.leads.square_selfenergy": {
     "line number": [
      171
     ]
    },
    "kwant.physics.tests.test_leads.h_cell_s_func": {
     "line number": [
      159
     ]
    },
    "kwant.physics.tests.test_leads.modes_se": {
     "line number": [
      172
     ]
    },
    "numpy.identity": {
     "line number": [
      158
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      172
     ]
    },
    "numpy.zeros": {
     "line number": [
      161,
      164,
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_singular_degenerate_with_crossing": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      237
     ]
    },
    "kwant.physics.leads.square_selfenergy": {
     "line number": [
      238,
      239
     ]
    },
    "kwant.physics.tests.test_leads.h_cell_s_func": {
     "line number": [
      221
     ]
    },
    "kwant.physics.tests.test_leads.modes_se": {
     "line number": [
      241
     ]
    },
    "numpy.conj": {
     "line number": [
      239
     ]
    },
    "numpy.identity": {
     "line number": [
      220
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      241
     ]
    },
    "numpy.zeros": {
     "line number": [
      223,
      227,
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_singular_fully_degenerate": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      202
     ]
    },
    "kwant.physics.leads.square_selfenergy": {
     "line number": [
      203,
      204
     ]
    },
    "kwant.physics.tests.test_leads.h_cell_s_func": {
     "line number": [
      186
     ]
    },
    "kwant.physics.tests.test_leads.modes_se": {
     "line number": [
      206
     ]
    },
    "numpy.identity": {
     "line number": [
      185
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      206
     ]
    },
    "numpy.zeros": {
     "line number": [
      188,
      192,
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_singular_h_and_t": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "kwant.physics.tests.test_leads.modes_se": {
     "line number": [
      247
     ]
    },
    "numpy.eye": {
     "line number": [
      246
     ]
    },
    "numpy.identity": {
     "line number": [
      245
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      250
     ]
    },
    "numpy.zeros": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_symm_algorithm_equivalence": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "kwant._common.ensure_rng": {
     "line number": [
      332
     ]
    },
    "kwant.physics.tests.test_leads.check_equivalence": {
     "line number": [
      358
     ]
    },
    "kwant.physics.tests.test_leads.kwant": {
     "line number": [
      334,
      336,
      339,
      341,
      342,
      347,
      348,
      353
     ]
    },
    "len": {
     "line number": [
      343,
      349
     ]
    },
    "numpy.array": {
     "line number": [
      342,
      348
     ]
    },
    "numpy.diag": {
     "line number": [
      354
     ]
    },
    "numpy.identity": {
     "line number": [
      343,
      349,
      354
     ]
    },
    "numpy.kron": {
     "line number": [
      343,
      349,
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_leads.test_zero_hopping": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "all": {
     "line number": [
      410,
      413
     ]
    },
    "getattr": {
     "line number": [
      410,
      411,
      413,
      414
     ]
    },
    "kwant.physics.leads.PropagatingModes": {
     "line number": [
      405
     ]
    },
    "kwant.physics.leads.StabilizedModes": {
     "line number": [
      407
     ]
    },
    "kwant.physics.leads.modes": {
     "line number": [
      409
     ]
    },
    "numpy.alltrue": {
     "line number": [
      410,
      413
     ]
    },
    "numpy.identity": {
     "line number": [
      403
     ]
    },
    "numpy.zeros": {
     "line number": [
      404,
      405,
      405,
      406,
      407,
      407,
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_noise": {
  "data": {
   "symbols_in_volume": {
    "kwant.physics.tests.test_noise.kwant": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.physics.tests.test_noise.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_noise.chain": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "kwant.physics.tests.test_noise.ensure_rng": {
  "data": {
   "shadows": "kwant._common.ensure_rng"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_noise.kwant": {
  "data": {
   "shadows": "kwant"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_noise.n": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "kwant.physics.tests.test_noise.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_noise.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_noise.test_multiterminal_input": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      41
     ]
    },
    "kwant.physics.tests.test_noise.kwant": {
     "line number": [
      40
     ]
    },
    "kwant.physics.tests.test_noise.twoterminal_system": {
     "line number": [
      38
     ]
    },
    "kwant.physics.two_terminal_shotnoise": {
     "line number": [
      41
     ]
    },
    "pytest.raises": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_noise.test_twoterminal": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "kwant.physics.tests.test_noise.kwant": {
     "line number": [
      49
     ]
    },
    "kwant.physics.tests.test_noise.twoterminal_system": {
     "line number": [
      47
     ]
    },
    "kwant.physics.two_terminal_shotnoise": {
     "line number": [
      54
     ]
    },
    "numpy.dot": {
     "line number": [
      51
     ]
    },
    "numpy.linalg.eigvalsh": {
     "line number": [
      51
     ]
    },
    "numpy.sum": {
     "line number": [
      52
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_noise.two_terminal_shotnoise": {
  "data": {
   "shadows": "kwant.physics.two_terminal_shotnoise"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_noise.twoterminal_system": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "kwant._common.ensure_rng": {
     "line number": [
      20
     ]
    },
    "kwant.physics.tests.test_noise.chain": {
     "line number": [
      27,
      28,
      29,
      29
     ]
    },
    "kwant.physics.tests.test_noise.kwant": {
     "line number": [
      21,
      22,
      22
     ]
    },
    "kwant.physics.tests.test_noise.n": {
     "line number": [
      23,
      23,
      23,
      23,
      26,
      26,
      26,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_symmetry": {
  "data": {},
  "type": "module"
 },
 "kwant.physics.tests.test_symmetry.DiscreteSymmetry": {
  "data": {
   "shadows": "kwant.physics.DiscreteSymmetry"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_symmetry.csr": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_symmetry.ensure_rng": {
  "data": {
   "shadows": "kwant._common.ensure_rng"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_symmetry.kwant": {
  "data": {
   "shadows": "kwant"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_symmetry.la": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_symmetry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_symmetry.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_symmetry.random_onsite_hop": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "kwant._common.ensure_rng": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_symmetry.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "kwant.physics.tests.test_symmetry.test_projectors": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      36
     ]
    },
    "ValueError": {
     "line number": [
      46
     ]
    },
    "kwant.physics.DiscreteSymmetry": {
     "line number": [
      36,
      39,
      46,
      53
     ]
    },
    "kwant.physics.tests.test_symmetry.kwant": {
     "line number": [
      22
     ]
    },
    "numpy.allclose": {
     "line number": [
      27,
      32,
      43,
      57,
      58
     ]
    },
    "numpy.array": {
     "line number": [
      27
     ]
    },
    "numpy.diag": {
     "line number": [
      23
     ]
    },
    "numpy.eye": {
     "line number": [
      33,
      44,
      48,
      50
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      25
     ]
    },
    "numpy.reshape": {
     "line number": [
      28,
      29,
      30
     ]
    },
    "pytest.raises": {
     "line number": [
      36,
      46
     ]
    },
    "scipy.sparse.coo_matrix": {
     "line number": [
      38,
      52,
      52
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      45
     ]
    },
    "sum": {
     "line number": [
      32,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_symmetry.test_projectors_and_symmetry": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      146
     ]
    },
    "kwant.physics.DiscreteSymmetry": {
     "line number": [
      140,
      146
     ]
    },
    "kwant.physics.tests.test_symmetry.kwant": {
     "line number": [
      125,
      136
     ]
    },
    "len": {
     "line number": [
      126,
      127
     ]
    },
    "numpy.allclose": {
     "line number": [
      124,
      129
     ]
    },
    "numpy.array": {
     "line number": [
      122,
      125
     ]
    },
    "numpy.diag": {
     "line number": [
      120,
      121
     ]
    },
    "numpy.eye": {
     "line number": [
      124,
      129,
      131
     ]
    },
    "numpy.identity": {
     "line number": [
      120,
      121,
      126,
      127
     ]
    },
    "numpy.kron": {
     "line number": [
      120,
      121,
      123,
      126,
      127,
      128
     ]
    },
    "pytest.raises": {
     "line number": [
      146
     ]
    },
    "scipy.linalg.block_diag": {
     "line number": [
      123,
      128
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      133,
      136,
      138,
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_symmetry.test_set_discrete_symm": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      75
     ]
    },
    "ValueError": {
     "line number": [
      87,
      99,
      101,
      102
     ]
    },
    "kwant.physics.DiscreteSymmetry": {
     "line number": [
      75,
      81,
      87,
      94,
      99,
      101,
      102,
      105,
      107,
      109
     ]
    },
    "kwant.physics.tests.test_symmetry.kwant": {
     "line number": [
      64,
      66,
      83
     ]
    },
    "len": {
     "line number": [
      65,
      67
     ]
    },
    "numpy.allclose": {
     "line number": [
      106,
      108,
      110
     ]
    },
    "numpy.array": {
     "line number": [
      64,
      66
     ]
    },
    "numpy.identity": {
     "line number": [
      65,
      67
     ]
    },
    "numpy.kron": {
     "line number": [
      65,
      67
     ]
    },
    "pytest.raises": {
     "line number": [
      75,
      87,
      99,
      101,
      102
     ]
    },
    "scipy.sparse.coo_matrix": {
     "line number": [
      78
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      83,
      91,
      92,
      93
     ]
    },
    "scipy.sparse.eye": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_symmetry.test_validate": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "kwant.physics.DiscreteSymmetry": {
     "line number": [
      152,
      159,
      163,
      167
     ]
    },
    "numpy.array": {
     "line number": [
      152,
      153,
      154,
      155
     ]
    },
    "numpy.diag": {
     "line number": [
      167
     ]
    },
    "numpy.eye": {
     "line number": [
      156,
      157,
      168,
      169
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      151,
      151,
      152,
      153,
      154,
      167
     ]
    },
    "scipy.sparse.identity": {
     "line number": [
      159,
      160,
      161,
      163,
      164,
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.physics.tests.test_symmetry.test_validate_commutator": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "kwant.physics.DiscreteSymmetry": {
     "line number": [
      201
     ]
    },
    "kwant.physics.tests.test_symmetry.kwant": {
     "line number": [
      186,
      187,
      188,
      192,
      193,
      197
     ]
    },
    "kwant.physics.tests.test_symmetry.random_onsite_hop": {
     "line number": [
      205
     ]
    },
    "len": {
     "line number": [
      189,
      194
     ]
    },
    "numpy.array": {
     "line number": [
      188,
      193
     ]
    },
    "numpy.diag": {
     "line number": [
      198
     ]
    },
    "numpy.identity": {
     "line number": [
      189,
      194,
      198
     ]
    },
    "numpy.kron": {
     "line number": [
      189,
      194,
      198
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      189,
      194,
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter": {
  "data": {
   "symbols_in_volume": {
    "float": {
     "line number": [
      1868,
      1879
     ]
    },
    "numpy.pi": {
     "line number": [
      1573,
      1573
     ]
    },
    "numpy.vectorize": {
     "line number": [
      1868,
      1879
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.plotter.FigureCanvasAgg": {
  "data": {
   "shadows": "matplotlib.backends.backend_agg.FigureCanvasAgg"
  },
  "type": "import"
 },
 "kwant.plotter.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "kwant.plotter._bump": {
  "data": {
   "lineno": 1543
  },
  "type": "function"
 },
 "kwant.plotter._create_field": {
  "data": {
   "lineno": 1597,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1598,
      1601
     ]
    },
    "numpy.zeros": {
     "line number": [
      1598,
      1604
     ]
    },
    "range": {
     "line number": [
      1600
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter._gamma_compress": {
  "data": {
   "lineno": 1868
  },
  "type": "constant"
 },
 "kwant.plotter._gamma_expand": {
  "data": {
   "lineno": 1879
  },
  "type": "constant"
 },
 "kwant.plotter._interpolate_field": {
  "data": {
   "lineno": 1622,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1656
     ]
    },
    "kernel": {
     "line number": [
      1681,
      1681
     ]
    },
    "kwant.plotter._smoothing_cross_sections": {
     "line number": [
      1686
     ]
    },
    "kwant.plotter.current_kernel": {
     "line number": [
      1643
     ]
    },
    "kwant.plotter.density_kernel": {
     "line number": [
      1646
     ]
    },
    "len": {
     "line number": [
      1633,
      1656,
      1665
     ]
    },
    "numpy.array": {
     "line number": [
      1625
     ]
    },
    "numpy.ceil": {
     "line number": [
      1663
     ]
    },
    "numpy.diff": {
     "line number": [
      1667
     ]
    },
    "numpy.empty": {
     "line number": [
      1656
     ]
    },
    "numpy.floor": {
     "line number": [
      1662
     ]
    },
    "numpy.linspace": {
     "line number": [
      1648
     ]
    },
    "numpy.max": {
     "line number": [
      1659
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      1675
     ]
    },
    "numpy.min": {
     "line number": [
      1658
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1637
     ]
    },
    "numpy.sum": {
     "line number": [
      1637
     ]
    },
    "range": {
     "line number": [
      1651,
      1665,
      1671,
      1675
     ]
    },
    "slice": {
     "line number": [
      1671
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter._linear_cmap": {
  "data": {
   "lineno": 1882,
   "symbols_in_volume": {
    "kwant.plotter._gamma_compress": {
     "line number": [
      1892
     ]
    },
    "kwant.plotter._gamma_expand": {
     "line number": [
      1886,
      1887
     ]
    },
    "kwant.plotter._p": {
     "line number": [
      1884,
      1885,
      1893
     ]
    },
    "numpy.linspace": {
     "line number": [
      1889
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter._make_figure": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      58
     ]
    },
    "kwant.plotter._p": {
     "line number": [
      69
     ]
    },
    "kwant.plotter.sys": {
     "line number": [
      52
     ]
    },
    "kwant.plotter.warnings": {
     "line number": [
      53
     ]
    },
    "matplotlib.backends.backend_agg.FigureCanvasAgg": {
     "line number": [
      70
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter._mask": {
  "data": {
   "lineno": 2167,
   "symbols_in_volume": {
    "len": {
     "line number": [
      2173
     ]
    },
    "mask": {
     "line number": [
      2173,
      2175,
      2175,
      2176
     ]
    },
    "numpy.inf": {
     "line number": [
      2175
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      2176
     ]
    },
    "numpy.mgrid.reshape": {
     "line number": [
      2173
     ]
    },
    "scipy.spatial.cKDTree": {
     "line number": [
      2168
     ]
    },
    "slice": {
     "line number": [
      2171
     ]
    },
    "tuple": {
     "line number": [
      2171
     ]
    },
    "zip": {
     "line number": [
      2172
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter._maybe_output_fig": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "matplotlib.pyplot.show": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter._optimal_width": {
  "data": {
   "lineno": 1578,
   "symbols_in_volume": {
    "numpy.max": {
     "line number": [
      1588
     ]
    },
    "numpy.unique": {
     "line number": [
      1581
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter._p": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "kwant.plotter._sample_array": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "len": {
     "line number": [
      45
     ]
    },
    "min": {
     "line number": [
      46
     ]
    },
    "range": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter._smoothing": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": {
    "numpy.clip": {
     "line number": [
      1558
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1557
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter._smoothing_cross_sections": {
  "data": {
   "lineno": 1573
  },
  "type": "constant"
 },
 "kwant.plotter.bands": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1388
     ]
    },
    "ValueError": {
     "line number": [
      1402
     ]
    },
    "complex": {
     "line number": [
      1404
     ]
    },
    "kwant.plotter._p": {
     "line number": [
      1387
     ]
    },
    "kwant.plotter.spectrum": {
     "line number": [
      1414
     ]
    },
    "kwant.plotter.sys": {
     "line number": [
      1391
     ]
    },
    "numpy.allclose": {
     "line number": [
      1401
     ]
    },
    "numpy.array": {
     "line number": [
      1394
     ]
    },
    "numpy.empty": {
     "line number": [
      1404
     ]
    },
    "numpy.linspace": {
     "line number": [
      1396
     ]
    },
    "numpy.pi": {
     "line number": [
      1396,
      1396
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.bands.h_k": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": {
    "kwant.plotter.cmath": {
     "line number": [
      1410
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.cmath": {
  "data": {
   "shadows": "cmath"
  },
  "type": "import"
 },
 "kwant.plotter.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "kwant.plotter.current": {
  "data": {
   "lineno": 2119,
   "symbols_in_volume": {
    "kwant.plotter.interpolate_current": {
     "line number": [
      2163
     ]
    },
    "kwant.plotter.streamplot": {
     "line number": [
      2163
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.current_kernel": {
  "data": {
   "lineno": 1614,
   "symbols_in_volume": {
    "kwant.plotter._smoothing": {
     "line number": [
      1617,
      1617
     ]
    },
    "numpy.abs": {
     "line number": [
      1616
     ]
    },
    "numpy.dot": {
     "line number": [
      1615
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1616
     ]
    },
    "numpy.sum": {
     "line number": [
      1616
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "kwant.plotter.defaults": {
  "data": {
   "lineno": 661
  },
  "type": "constant"
 },
 "kwant.plotter.density": {
  "data": {
   "lineno": 2179,
   "symbols_in_volume": {
    "kwant.plotter.interpolate_density": {
     "line number": [
      2227
     ]
    },
    "kwant.plotter.scalarplot": {
     "line number": [
      2227
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.density_kernel": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": {
    "kwant.plotter._bump": {
     "line number": [
      1611
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1610
     ]
    },
    "numpy.sum": {
     "line number": [
      1610
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "kwant.plotter.get_symbol": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      214
     ]
    },
    "hasattr": {
     "line number": [
      184,
      198
     ]
    },
    "isinstance": {
     "line number": [
      196
     ]
    },
    "kwant.plotter._p": {
     "line number": [
      196,
      210,
      216
     ]
    },
    "kwant.plotter.symbol_dict": {
     "line number": [
      191,
      191
     ]
    },
    "len": {
     "line number": [
      186,
      198
     ]
    },
    "math.cos": {
     "line number": [
      203
     ]
    },
    "math.pi": {
     "line number": [
      203,
      207,
      207,
      209
     ]
    },
    "math.sin": {
     "line number": [
      207
     ]
    },
    "math.sqrt": {
     "line number": [
      207
     ]
    },
    "str": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "kwant.plotter.interpolate_current": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1731
     ]
    },
    "ValueError": {
     "line number": [
      1734
     ]
    },
    "dict": {
     "line number": [
      1742
     ]
    },
    "enumerate": {
     "line number": [
      1744
     ]
    },
    "isinstance": {
     "line number": [
      1730
     ]
    },
    "kwant.plotter._create_field": {
     "line number": [
      1769
     ]
    },
    "kwant.plotter._interpolate_field": {
     "line number": [
      1772
     ]
    },
    "kwant.plotter._optimal_width": {
     "line number": [
      1766
     ]
    },
    "len": {
     "line number": [
      1733,
      1738
     ]
    },
    "numpy.empty": {
     "line number": [
      1739,
      1741
     ]
    },
    "numpy.max": {
     "line number": [
      1756,
      1758
     ]
    },
    "numpy.min": {
     "line number": [
      1755,
      1757
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1764
     ]
    },
    "numpy.sum": {
     "line number": [
      1764
     ]
    },
    "range": {
     "line number": [
      1771
     ]
    },
    "tuple": {
     "line number": [
      1770
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.interpolate_density": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1824
     ]
    },
    "ValueError": {
     "line number": [
      1827
     ]
    },
    "isinstance": {
     "line number": [
      1823
     ]
    },
    "kwant.plotter._create_field": {
     "line number": [
      1843
     ]
    },
    "kwant.plotter._interpolate_field": {
     "line number": [
      1846
     ]
    },
    "kwant.plotter._mask": {
     "line number": [
      1852
     ]
    },
    "kwant.plotter._optimal_width": {
     "line number": [
      1841
     ]
    },
    "len": {
     "line number": [
      1826,
      1826,
      1830
     ]
    },
    "mask": {
     "line number": [
      1849
     ]
    },
    "numpy.array": {
     "line number": [
      1831,
      1838,
      1854
     ]
    },
    "numpy.max": {
     "line number": [
      1834
     ]
    },
    "numpy.min": {
     "line number": [
      1833
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1840
     ]
    },
    "numpy.sum": {
     "line number": [
      1840
     ]
    },
    "range": {
     "line number": [
      1845
     ]
    },
    "tuple": {
     "line number": [
      1844
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "kwant.plotter.lines": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "Collection": {
     "line number": [
      351,
      353,
      357,
      368
     ]
    },
    "ValueError": {
     "line number": [
      346
     ]
    },
    "kwant.plotter._p": {
     "line number": [
      351,
      353
     ]
    },
    "kwant.plotter.set_colors": {
     "line number": [
      370
     ]
    },
    "len": {
     "line number": [
      355
     ]
    },
    "numpy.c_.reshape": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.map": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1262
     ]
    },
    "RuntimeWarning": {
     "line number": [
      1313
     ]
    },
    "ValueError": {
     "line number": [
      1273,
      1279
     ]
    },
    "callable": {
     "line number": [
      1275
     ]
    },
    "isinstance": {
     "line number": [
      1278
     ]
    },
    "kwant.plotter._make_figure": {
     "line number": [
      1288
     ]
    },
    "kwant.plotter._maybe_output_fig": {
     "line number": [
      1339
     ]
    },
    "kwant.plotter._p": {
     "line number": [
      1261,
      1294
     ]
    },
    "kwant.plotter.mask_interpolate": {
     "line number": [
      1283
     ]
    },
    "kwant.plotter.percentile_bound": {
     "line number": [
      1299
     ]
    },
    "kwant.plotter.plot": {
     "line number": [
      1322
     ]
    },
    "kwant.plotter.sys": {
     "line number": [
      1265
     ]
    },
    "kwant.plotter.sys_leads_pos": {
     "line number": [
      1267
     ]
    },
    "kwant.plotter.sys_leads_sites": {
     "line number": [
      1266
     ]
    },
    "kwant.plotter.warnings": {
     "line number": [
      1313
     ]
    },
    "len": {
     "line number": [
      1300,
      1301
     ]
    },
    "max": {
     "line number": [
      1283,
      1284,
      1286,
      1318,
      1318
     ]
    },
    "min": {
     "line number": [
      1283,
      1284,
      1285,
      1318,
      1318
     ]
    },
    "numpy.apply_along_axis": {
     "line number": [
      1270
     ]
    },
    "numpy.array": {
     "line number": [
      1281
     ]
    },
    "numpy.asarray": {
     "line number": [
      1284
     ]
    },
    "numpy.sum": {
     "line number": [
      1300,
      1301
     ]
    },
    "value": {
     "line number": [
      1276,
      1281,
      1281,
      1283
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.mask_interpolate": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      1154
     ]
    },
    "ValueError": {
     "line number": [
      1160,
      1163
     ]
    },
    "kwant.plotter._sample_array": {
     "line number": [
      1149
     ]
    },
    "kwant.plotter.warnings": {
     "line number": [
      1152
     ]
    },
    "len": {
     "line number": [
      1162,
      1162,
      1171,
      1174
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      1151,
      1159
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      1182
     ]
    },
    "numpy.mgrid.reshape": {
     "line number": [
      1174
     ]
    },
    "numpy.min": {
     "line number": [
      1150
     ]
    },
    "numpy.ogrid": {
     "line number": [
      1172
     ]
    },
    "range": {
     "line number": [
      1171
     ]
    },
    "scipy.interpolate.griddata": {
     "line number": [
      1173
     ]
    },
    "scipy.spatial.cKDTree": {
     "line number": [
      1146
     ]
    },
    "slice": {
     "line number": [
      1170
     ]
    },
    "tuple": {
     "line number": [
      1170,
      1172
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.plotter.percentile_bound": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "max": {
     "line number": [
      173
     ]
    },
    "min": {
     "line number": [
      174
     ]
    },
    "numpy.percentile": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "kwant.plotter.plot": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      820,
      870
     ]
    },
    "TypeError": {
     "line number": [
      1017
     ]
    },
    "ValueError": {
     "line number": [
      904
     ]
    },
    "check_length": {
     "line number": [
      860
     ]
    },
    "cmap_from_list": {
     "line number": [
      1054
     ]
    },
    "collections.defaultdict": {
     "line number": [
      935
     ]
    },
    "dict": {
     "line number": [
      951,
      956
     ]
    },
    "enumerate": {
     "line number": [
      936
     ]
    },
    "float": {
     "line number": [
      902,
      986,
      1058,
      1068
     ]
    },
    "isinstance": {
     "line number": [
      948,
      954,
      1014
     ]
    },
    "kwant.plotter._make_figure": {
     "line number": [
      1022
     ]
    },
    "kwant.plotter._maybe_output_fig": {
     "line number": [
      1098
     ]
    },
    "kwant.plotter._p": {
     "line number": [
      819,
      869,
      933,
      947,
      987,
      994,
      997,
      1001,
      1004,
      1007,
      1010,
      1036,
      1037,
      1038,
      1040,
      1052,
      1053
     ]
    },
    "kwant.plotter._sample_array": {
     "line number": [
      887
     ]
    },
    "kwant.plotter.defaults": {
     "line number": [
      930,
      961,
      972,
      974,
      975,
      977,
      978,
      995,
      998,
      1000,
      1005,
      1008,
      1011
     ]
    },
    "kwant.plotter.lines": {
     "line number": [
      1048,
      1074
     ]
    },
    "kwant.plotter.symbol_dict": {
     "line number": [
      935,
      937,
      939
     ]
    },
    "kwant.plotter.symbols": {
     "line number": [
      1042,
      1063
     ]
    },
    "kwant.plotter.sys": {
     "line number": [
      823
     ]
    },
    "kwant.plotter.sys_leads_hopping_pos": {
     "line number": [
      830
     ]
    },
    "kwant.plotter.sys_leads_hoppings": {
     "line number": [
      828
     ]
    },
    "kwant.plotter.sys_leads_pos": {
     "line number": [
      827
     ]
    },
    "kwant.plotter.sys_leads_sites": {
     "line number": [
      825
     ]
    },
    "kwant.plotter.warnings": {
     "line number": [
      1028,
      1030
     ]
    },
    "len": {
     "line number": [
      934,
      983,
      985
     ]
    },
    "list": {
     "line number": [
      935
     ]
    },
    "locals": {
     "line number": [
      842
     ]
    },
    "make_proper_hop_spec": {
     "line number": [
      968,
      969
     ]
    },
    "make_proper_site_spec": {
     "line number": [
      929,
      963,
      964,
      965,
      966
     ]
    },
    "math.sqrt": {
     "line number": [
      897
     ]
    },
    "numpy.apply_along_axis": {
     "line number": [
      864,
      865,
      866
     ]
    },
    "numpy.array": {
     "line number": [
      940,
      1057,
      1068
     ]
    },
    "numpy.asarray": {
     "line number": [
      986
     ]
    },
    "numpy.max": {
     "line number": [
      1078,
      1081,
      1089
     ]
    },
    "numpy.min": {
     "line number": [
      1077
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      896
     ]
    },
    "numpy.sort": {
     "line number": [
      890
     ]
    },
    "numpy.sum": {
     "line number": [
      890
     ]
    },
    "resize_to_dim": {
     "line number": [
      871,
      872,
      873
     ]
    },
    "slice": {
     "line number": [
      943
     ]
    },
    "sorted": {
     "line number": [
      950,
      955
     ]
    },
    "str": {
     "line number": [
      1014
     ]
    },
    "sum": {
     "line number": [
      826,
      829
     ]
    },
    "zip": {
     "line number": [
      951,
      956,
      1056
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.plot.check_length": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      847,
      855
     ]
    },
    "ValueError": {
     "line number": [
      853
     ]
    },
    "isinstance": {
     "line number": [
      846,
      849
     ]
    },
    "len": {
     "line number": [
      852
     ]
    },
    "str": {
     "line number": [
      849
     ]
    },
    "tuple": {
     "line number": [
      846,
      849
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.plot.make_proper_hop_spec": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      919
     ]
    },
    "isinstance": {
     "line number": [
      922
     ]
    },
    "kwant.plotter._p": {
     "line number": [
      921
     ]
    },
    "numpy.asarray": {
     "line number": [
      924,
      926
     ]
    },
    "numpy.ndarray": {
     "line number": [
      922
     ]
    },
    "spec": {
     "line number": [
      919,
      920,
      920,
      921,
      922,
      924,
      924,
      926,
      926,
      927
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.plot.make_proper_site_spec": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      908
     ]
    },
    "isinstance": {
     "line number": [
      911
     ]
    },
    "kwant.plotter._p": {
     "line number": [
      910
     ]
    },
    "numpy.asarray": {
     "line number": [
      913,
      915
     ]
    },
    "numpy.ndarray": {
     "line number": [
      911
     ]
    },
    "spec": {
     "line number": [
      909,
      910,
      911,
      913,
      913,
      915,
      915,
      916
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.plot.resize_to_dim": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": {
    "float": {
     "line number": [
      835
     ]
    },
    "len": {
     "line number": [
      835
     ]
    },
    "min": {
     "line number": [
      836,
      837
     ]
    },
    "numpy.zeros": {
     "line number": [
      835
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.plot.site_color": {
  "data": {
   "lineno": 957
  },
  "type": "function"
 },
 "kwant.plotter.pyplot": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "kwant.plotter.scalarplot": {
  "data": {
   "lineno": 2030,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      2076
     ]
    },
    "ValueError": {
     "line number": [
      2085
     ]
    },
    "cmap": {
     "line number": [
      2087,
      2088,
      2089,
      2089,
      2102,
      2111
     ]
    },
    "kwant.plotter._make_figure": {
     "line number": [
      2092
     ]
    },
    "kwant.plotter._maybe_output_fig": {
     "line number": [
      2114
     ]
    },
    "kwant.plotter._p": {
     "line number": [
      2075,
      2088,
      2089
     ]
    },
    "numpy.max": {
     "line number": [
      2100
     ]
    },
    "numpy.min": {
     "line number": [
      2098
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.set_colors": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      144
     ]
    },
    "ValueError": {
     "line number": [
      144
     ]
    },
    "float": {
     "line number": [
      137
     ]
    },
    "isinstance": {
     "line number": [
      128,
      131
     ]
    },
    "kwant.plotter._p": {
     "line number": [
      131,
      131,
      134,
      147
     ]
    },
    "len": {
     "line number": [
      125,
      125,
      132,
      134
     ]
    },
    "max": {
     "line number": [
      125
     ]
    },
    "numpy.asarray": {
     "line number": [
      137
     ]
    },
    "numpy.dtype": {
     "line number": [
      128
     ]
    },
    "numpy.ndarray": {
     "line number": [
      128
     ]
    },
    "tuple": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "kwant.plotter.spatial": {
  "data": {
   "shadows": "scipy.spatial"
  },
  "type": "import"
 },
 "kwant.plotter.spectrum": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1463,
      1466
     ]
    },
    "TypeError": {
     "line number": [
      1474,
      1526
     ]
    },
    "bound_ham": {
     "line number": [
      1489
     ]
    },
    "callable": {
     "line number": [
      1471
     ]
    },
    "dict": {
     "line number": [
      1477,
      1485
     ]
    },
    "filter": {
     "line number": [
      1492
     ]
    },
    "hasattr": {
     "line number": [
      1523
     ]
    },
    "isinstance": {
     "line number": [
      1468
     ]
    },
    "kwant.plotter._make_figure": {
     "line number": [
      1501
     ]
    },
    "kwant.plotter._maybe_output_fig": {
     "line number": [
      1534
     ]
    },
    "kwant.plotter._p": {
     "line number": [
      1462,
      1465
     ]
    },
    "kwant.plotter.functools": {
     "line number": [
      1483
     ]
    },
    "kwant.plotter.itertools": {
     "line number": [
      1484
     ]
    },
    "kwant.plotter.warnings": {
     "line number": [
      1505,
      1508
     ]
    },
    "len": {
     "line number": [
      1492,
      1496
     ]
    },
    "mask": {
     "line number": [
      1486
     ]
    },
    "next": {
     "line number": [
      1492
     ]
    },
    "numpy.array": {
     "line number": [
      1497
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      1489
     ]
    },
    "numpy.linalg.eigvalsh": {
     "line number": [
      1490
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      1529
     ]
    },
    "numpy.nan": {
     "line number": [
      1493
     ]
    },
    "range": {
     "line number": [
      1530
     ]
    },
    "spec": {
     "line number": [
      1531,
      1532
     ]
    },
    "zip": {
     "line number": [
      1485
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.spectrum.ham": {
  "data": {
   "lineno": 1469
  },
  "type": "function"
 },
 "kwant.plotter.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "kwant.plotter.streamplot": {
  "data": {
   "lineno": 1896,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      1963
     ]
    },
    "ValueError": {
     "line number": [
      1974,
      1982
     ]
    },
    "cmap": {
     "line number": [
      1980,
      1981,
      1998,
      2001,
      2022
     ]
    },
    "int": {
     "line number": [
      1967
     ]
    },
    "kwant.plotter._linear_cmap": {
     "line number": [
      2012
     ]
    },
    "kwant.plotter._make_figure": {
     "line number": [
      1986
     ]
    },
    "kwant.plotter._maybe_output_fig": {
     "line number": [
      2025
     ]
    },
    "kwant.plotter._p": {
     "line number": [
      1962,
      1978,
      1979,
      2017
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      1994
     ]
    },
    "numpy.linspace": {
     "line number": [
      1991,
      1992
     ]
    },
    "numpy.max": {
     "line number": [
      1996
     ]
    },
    "tinyarray.array": {
     "line number": [
      1967
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.symbol_dict": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "kwant.plotter.symbols": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "Collection": {
     "line number": [
      287
     ]
    },
    "TypeError": {
     "line number": [
      273
     ]
    },
    "kwant.plotter._p": {
     "line number": [
      277,
      279
     ]
    },
    "kwant.plotter.get_symbol": {
     "line number": [
      285
     ]
    },
    "kwant.plotter.set_colors": {
     "line number": [
      290
     ]
    },
    "len": {
     "line number": [
      281
     ]
    },
    "numpy.all": {
     "line number": [
      281,
      281
     ]
    },
    "numpy.empty": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "kwant.plotter.sys_leads_hopping_pos": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      627
     ]
    },
    "dict": {
     "line number": [
      651
     ]
    },
    "get_vec_domain": {
     "line number": [
      651
     ]
    },
    "isinstance": {
     "line number": [
      611
     ]
    },
    "kwant.plotter.sys": {
     "line number": [
      610
     ]
    },
    "len": {
     "line number": [
      612,
      651
     ]
    },
    "numpy.array": {
     "line number": [
      616,
      625
     ]
    },
    "numpy.copy": {
     "line number": [
      656,
      656
     ]
    },
    "numpy.empty": {
     "line number": [
      613,
      613
     ]
    },
    "numpy.zeros": {
     "line number": [
      652
     ]
    },
    "object": {
     "line number": [
      626
     ]
    },
    "range": {
     "line number": [
      651,
      654
     ]
    },
    "syst_from_lead": {
     "line number": [
      620,
      622,
      623
     ]
    },
    "tinyarray.array": {
     "line number": [
      616,
      616,
      622,
      622
     ]
    },
    "tuple": {
     "line number": [
      616,
      617,
      622,
      623
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.sys_leads_hopping_pos.get_vec_domain": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      644
     ]
    },
    "IndexError": {
     "line number": [
      638,
      644
     ]
    },
    "numpy.array": {
     "line number": [
      648
     ]
    },
    "numpy.r_": {
     "line number": [
      649
     ]
    },
    "numpy.zeros": {
     "line number": [
      633
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.sys_leads_hoppings": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      582
     ]
    },
    "enumerate": {
     "line number": [
      558,
      573
     ]
    },
    "hasattr": {
     "line number": [
      560,
      576,
      576
     ]
    },
    "isinstance": {
     "line number": [
      542,
      565
     ]
    },
    "kwant.plotter.sys": {
     "line number": [
      539
     ]
    },
    "lead_hoppings": {
     "line number": [
      562
     ]
    },
    "len": {
     "line number": [
      559,
      560,
      564,
      574,
      577,
      580
     ]
    },
    "ll_hoppings": {
     "line number": [
      572,
      578
     ]
    },
    "range": {
     "line number": [
      563,
      579
     ]
    },
    "slice": {
     "line number": [
      564,
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.sys_leads_hoppings.lead_hoppings": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": {
    "max": {
     "line number": [
      555
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.sys_leads_hoppings.ll_hoppings": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "range": {
     "line number": [
      567
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.sys_leads_pos": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      477
     ]
    },
    "dict": {
     "line number": [
      501
     ]
    },
    "get_vec_domain": {
     "line number": [
      501
     ]
    },
    "isinstance": {
     "line number": [
      467
     ]
    },
    "kwant.plotter.sys": {
     "line number": [
      466
     ]
    },
    "len": {
     "line number": [
      501
     ]
    },
    "numpy.array": {
     "line number": [
      470,
      474
     ]
    },
    "numpy.zeros": {
     "line number": [
      502
     ]
    },
    "object": {
     "line number": [
      476
     ]
    },
    "range": {
     "line number": [
      501,
      504
     ]
    },
    "syst_from_lead": {
     "line number": [
      474
     ]
    },
    "tinyarray.array": {
     "line number": [
      470,
      474
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.sys_leads_pos.get_vec_domain": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      494
     ]
    },
    "IndexError": {
     "line number": [
      488,
      494
     ]
    },
    "numpy.array": {
     "line number": [
      499
     ]
    },
    "numpy.zeros": {
     "line number": [
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.sys_leads_sites": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      435
     ]
    },
    "enumerate": {
     "line number": [
      416,
      425
     ]
    },
    "hasattr": {
     "line number": [
      418,
      428,
      428
     ]
    },
    "isinstance": {
     "line number": [
      414,
      423
     ]
    },
    "kwant.plotter.sys": {
     "line number": [
      412
     ]
    },
    "len": {
     "line number": [
      417,
      418,
      422,
      426,
      429,
      433
     ]
    },
    "range": {
     "line number": [
      421,
      424,
      431,
      432
     ]
    },
    "slice": {
     "line number": [
      422,
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.plotter.ta": {
  "data": {
   "shadows": "tinyarray"
  },
  "type": "import"
 },
 "kwant.plotter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "kwant.rmt": {
  "data": {
   "symbols_in_volume": {
    "numpy.linalg.qr": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.rmt.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "kwant.rmt.c": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "kwant.rmt.p": {
     "line number": [
      45
     ]
    },
    "kwant.rmt.t": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.rmt.circular": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      240
     ]
    },
    "ValueError": {
     "line number": [
      217,
      219,
      248,
      278,
      287
     ]
    },
    "ensure_rng": {
     "line number": [
      213
     ]
    },
    "int": {
     "line number": [
      275,
      283
     ]
    },
    "kwant.rmt.p": {
     "line number": [
      218,
      223,
      226,
      239
     ]
    },
    "kwant.rmt.qr": {
     "line number": [
      238
     ]
    },
    "kwant.rmt.sym_list": {
     "line number": [
      216
     ]
    },
    "kwant.rmt.t": {
     "line number": [
      218
     ]
    },
    "numpy.abs": {
     "line number": [
      242
     ]
    },
    "numpy.allclose": {
     "line number": [
      239
     ]
    },
    "numpy.arange": {
     "line number": [
      232,
      253,
      263,
      267
     ]
    },
    "numpy.array": {
     "line number": [
      231,
      262,
      266,
      276,
      285
     ]
    },
    "numpy.diag": {
     "line number": [
      239,
      241
     ]
    },
    "numpy.dot": {
     "line number": [
      260,
      268,
      289
     ]
    },
    "numpy.linalg.det": {
     "line number": [
      249
     ]
    },
    "numpy.resize": {
     "line number": [
      282
     ]
    },
    "randn": {
     "line number": [
      214,
      224,
      227,
      227,
      230,
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.rmt.gaussian": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      110,
      113,
      120
     ]
    },
    "ensure_rng": {
     "line number": [
      125
     ]
    },
    "kwant.rmt.c": {
     "line number": [
      111,
      141
     ]
    },
    "kwant.rmt.p": {
     "line number": [
      111
     ]
    },
    "kwant.rmt.sym_list": {
     "line number": [
      109
     ]
    },
    "kwant.rmt.t": {
     "line number": [
      111
     ]
    },
    "numpy.arange": {
     "line number": [
      117,
      154
     ]
    },
    "numpy.array": {
     "line number": [
      116,
      153
     ]
    },
    "numpy.sqrt": {
     "line number": [
      122,
      148,
      151,
      157
     ]
    },
    "randn": {
     "line number": [
      130,
      132,
      134,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.rmt.h_p_matrix": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "kwant.rmt.h_t_matrix": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "kwant.rmt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.rmt.p": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      34
     ]
    },
    "kwant.rmt.sym_list": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.rmt.qr": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "kwant.rmt.sym_list": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "kwant.rmt.t": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      22
     ]
    },
    "kwant.rmt.sym_list": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers": {
  "data": {},
  "type": "module"
 },
 "kwant.solvers.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "kwant.solvers.common": {
  "data": {
   "symbols_in_volume": {
    "collections.namedtuple": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.solvers.common.BlockResult": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": {
    "kwant.solvers.common.abc": {
     "line number": [
      632
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant.solvers.common.BlockResult.__init__": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": {
    "int": {
     "line number": [
      645,
      647
     ]
    },
    "len": {
     "line number": [
      645,
      647
     ]
    },
    "list": {
     "line number": [
      641,
      642
     ]
    },
    "numpy.array": {
     "line number": [
      643
     ]
    },
    "numpy.cumsum": {
     "line number": [
      646,
      648
     ]
    },
    "numpy.zeros": {
     "line number": [
      645,
      647
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.BlockResult._transmission": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": {
    "kwant.solvers.common.abc": {
     "line number": [
      680
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.BlockResult.block_coords": {
  "data": {
   "lineno": 650
  },
  "type": "function"
 },
 "kwant.solvers.common.BlockResult.conductance_matrix": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": {
    "len": {
     "line number": [
      738
     ]
    },
    "numpy.array": {
     "line number": [
      740
     ]
    },
    "range": {
     "line number": [
      739
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.BlockResult.in_block_coords": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": {
    "slice": {
     "line number": [
      668
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.BlockResult.num_propagating": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": {
    "kwant.solvers.common.abc": {
     "line number": [
      675
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.BlockResult.out_block_coords": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": {
    "slice": {
     "line number": [
      660
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.BlockResult.submatrix": {
  "data": {
   "lineno": 671
  },
  "type": "function"
 },
 "kwant.solvers.common.BlockResult.transmission": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      725
     ]
    },
    "all": {
     "line number": [
      706,
      719
     ]
    },
    "int": {
     "line number": [
      705
     ]
    },
    "itertools.product": {
     "line number": [
      723
     ]
    },
    "len": {
     "line number": [
      710,
      716,
      719
     ]
    },
    "s_t": {
     "line number": [
      718,
      722
     ]
    },
    "sum": {
     "line number": [
      712,
      717,
      722
     ]
    },
    "zip": {
     "line number": [
      705
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.GreensFunction": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": {
    "kwant.solvers.common.BlockResult": {
     "line number": [
      878
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant.solvers.common.GreensFunction.__init__": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": {
    "super": {
     "line number": [
      910
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.GreensFunction.__repr__": {
  "data": {
   "lineno": 957
  },
  "type": "function"
 },
 "kwant.solvers.common.GreensFunction._a_ttdagger_a_inv": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": {
    "functools.reduce": {
     "line number": [
      934
     ]
    },
    "numpy.dot": {
     "line number": [
      934
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.GreensFunction._transmission": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      953
     ]
    },
    "numpy.finfo": {
     "line number": [
      949
     ]
    },
    "numpy.inf": {
     "line number": [
      951
     ]
    },
    "numpy.linalg.eigvalsh": {
     "line number": [
      950
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      951
     ]
    },
    "numpy.sum": {
     "line number": [
      950
     ]
    },
    "numpy.trace": {
     "line number": [
      938,
      953
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.GreensFunction.num_propagating": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": {
    "numpy.finfo": {
     "line number": [
      922
     ]
    },
    "numpy.inf": {
     "line number": [
      924
     ]
    },
    "numpy.linalg.eigvalsh": {
     "line number": [
      923
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      924
     ]
    },
    "numpy.sum": {
     "line number": [
      923
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "kwant.solvers.common.LinearSys": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "kwant.solvers.common.SMatrix": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": {
    "kwant.solvers.common.BlockResult": {
     "line number": [
      747
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant.solvers.common.SMatrix.__init__": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      801
     ]
    },
    "int": {
     "line number": [
      808
     ]
    },
    "len": {
     "line number": [
      785,
      808
     ]
    },
    "list": {
     "line number": [
      816,
      818
     ]
    },
    "numpy.array": {
     "line number": [
      816,
      818
     ]
    },
    "numpy.cumsum": {
     "line number": [
      809
     ]
    },
    "numpy.zeros": {
     "line number": [
      808
     ]
    },
    "super": {
     "line number": [
      786
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.SMatrix.__repr__": {
  "data": {
   "lineno": 873
  },
  "type": "function"
 },
 "kwant.solvers.common.SMatrix._transmission": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": {
    "numpy.linalg.norm": {
     "line number": [
      853
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.SMatrix.in_block_coords": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      840
     ]
    },
    "numbers.Integral": {
     "line number": [
      840
     ]
    },
    "slice": {
     "line number": [
      842,
      847
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.SMatrix.num_propagating": {
  "data": {
   "lineno": 869
  },
  "type": "function"
 },
 "kwant.solvers.common.SMatrix.out_block_coords": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      824
     ]
    },
    "numbers.Integral": {
     "line number": [
      824
     ]
    },
    "slice": {
     "line number": [
      826,
      831
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.SMatrix.transmission": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      864,
      864
     ]
    },
    "numbers.Integral": {
     "line number": [
      864,
      864
     ]
    },
    "super": {
     "line number": [
      865
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.SparseSolver": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "kwant.solvers.common.abc": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant.solvers.common.SparseSolver._factorized": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "kwant.solvers.common.abc": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.SparseSolver._make_linear_sys": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      295
     ]
    },
    "ValueError": {
     "line number": [
      161,
      174,
      218,
      259
     ]
    },
    "ensure_isinstance": {
     "line number": [
      155
     ]
    },
    "enumerate": {
     "line number": [
      188,
      272
     ]
    },
    "getattr": {
     "line number": [
      157,
      158,
      165
     ]
    },
    "int": {
     "line number": [
      178
     ]
    },
    "isinstance": {
     "line number": [
      273
     ]
    },
    "kwant.solvers.common.LinearSys": {
     "line number": [
      297
     ]
    },
    "len": {
     "line number": [
      169,
      198,
      215,
      220,
      221,
      274
     ]
    },
    "numpy.abs": {
     "line number": [
      172,
      173
     ]
    },
    "numpy.any": {
     "line number": [
      173
     ]
    },
    "numpy.arange": {
     "line number": [
      202,
      220,
      277
     ]
    },
    "numpy.asarray": {
     "line number": [
      250
     ]
    },
    "numpy.cumsum": {
     "line number": [
      180
     ]
    },
    "numpy.dot": {
     "line number": [
      227,
      240
     ]
    },
    "numpy.empty": {
     "line number": [
      178
     ]
    },
    "numpy.max": {
     "line number": [
      172
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      261
     ]
    },
    "numpy.ones": {
     "line number": [
      221,
      277
     ]
    },
    "numpy.r_": {
     "line number": [
      210,
      220,
      252
     ]
    },
    "numpy.zeros": {
     "line number": [
      293
     ]
    },
    "scipy.sparse": {
     "line number": [
      157,
      158
     ]
    },
    "scipy.sparse.bmat": {
     "line number": [
      234,
      290
     ]
    },
    "scipy.sparse.csc_matrix": {
     "line number": [
      221,
      225,
      227,
      231,
      239,
      242
     ]
    },
    "scipy.sparse.identity": {
     "line number": [
      166
     ]
    },
    "slice": {
     "line number": [
      210,
      252
     ]
    },
    "splhsmat": {
     "line number": [
      262
     ]
    },
    "sprhsmat": {
     "line number": [
      277,
      285
     ]
    },
    "tuple": {
     "line number": [
      210,
      252,
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.SparseSolver._solve_linear_sys": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "kwant.solvers.common.abc": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.SparseSolver.greens_function": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      462,
      465
     ]
    },
    "ensure_isinstance": {
     "line number": [
      450
     ]
    },
    "enumerate": {
     "line number": [
      472
     ]
    },
    "kwant.solvers.common.GreensFunction": {
     "line number": [
      479,
      488
     ]
    },
    "len": {
     "line number": [
      452,
      464,
      464,
      477
     ]
    },
    "list": {
     "line number": [
      454,
      456,
      458,
      460
     ]
    },
    "numpy.any": {
     "line number": [
      461,
      461
     ]
    },
    "numpy.concatenate": {
     "line number": [
      471
     ]
    },
    "numpy.diff": {
     "line number": [
      461,
      461
     ]
    },
    "numpy.zeros": {
     "line number": [
      479
     ]
    },
    "range": {
     "line number": [
      454,
      458
     ]
    },
    "scipy.sparse.bmat": {
     "line number": [
      483
     ]
    },
    "sum": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.SparseSolver.ldos": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      524,
      530
     ]
    },
    "abs": {
     "line number": [
      552
     ]
    },
    "ensure_isinstance": {
     "line number": [
      522
     ]
    },
    "float": {
     "line number": [
      537
     ]
    },
    "hasattr": {
     "line number": [
      528,
      528
     ]
    },
    "len": {
     "line number": [
      533
     ]
    },
    "min": {
     "line number": [
      549
     ]
    },
    "numpy.pi": {
     "line number": [
      554
     ]
    },
    "numpy.square": {
     "line number": [
      552
     ]
    },
    "numpy.sum": {
     "line number": [
      552
     ]
    },
    "numpy.zeros": {
     "line number": [
      537
     ]
    },
    "range": {
     "line number": [
      533,
      548
     ]
    },
    "scipy.sparse.bmat": {
     "line number": [
      546
     ]
    },
    "slice": {
     "line number": [
      551
     ]
    },
    "sum": {
     "line number": [
      540
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.SparseSolver.smatrix": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      365,
      368
     ]
    },
    "ensure_isinstance": {
     "line number": [
      353
     ]
    },
    "enumerate": {
     "line number": [
      375
     ]
    },
    "kwant.solvers.common.SMatrix": {
     "line number": [
      382,
      391
     ]
    },
    "len": {
     "line number": [
      355,
      367,
      367,
      380
     ]
    },
    "list": {
     "line number": [
      357,
      359,
      361,
      363
     ]
    },
    "numpy.any": {
     "line number": [
      364,
      364
     ]
    },
    "numpy.concatenate": {
     "line number": [
      374
     ]
    },
    "numpy.diff": {
     "line number": [
      364,
      364
     ]
    },
    "numpy.zeros": {
     "line number": [
      382
     ]
    },
    "range": {
     "line number": [
      357,
      361
     ]
    },
    "scipy.sparse.bmat": {
     "line number": [
      386
     ]
    },
    "sum": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.SparseSolver.wave_function": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": {
    "kwant.solvers.common.WaveFunction": {
     "line number": [
      605
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.WaveFunction": {
  "data": {
   "lineno": 608
  },
  "type": "class"
 },
 "kwant.solvers.common.WaveFunction.__call__": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "slice": {
     "line number": [
      628
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.WaveFunction.__init__": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      617
     ]
    },
    "ensure_isinstance": {
     "line number": [
      611
     ]
    },
    "hasattr": {
     "line number": [
      613
     ]
    },
    "len": {
     "line number": [
      618
     ]
    },
    "range": {
     "line number": [
      618
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.common.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "kwant.solvers.common.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "kwant.solvers.common.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "kwant.solvers.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.solvers.common.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "kwant.solvers.common.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "kwant.solvers.common.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "kwant.solvers.default": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      15
     ]
    },
    "RuntimeWarning": {
     "line number": [
      18
     ]
    },
    "kwant.solvers.default.hidden_instance": {
     "line number": [
      23,
      24,
      25,
      26
     ]
    },
    "kwant.solvers.default.warnings": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.solvers.default.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "kwant.solvers.default.greens_function": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "kwant.solvers.default.hidden_instance": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "kwant.solvers.default.ldos": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "kwant.solvers.default.smatrix": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "kwant.solvers.default.smodule": {
  "data": {
   "shadows": "sparse"
  },
  "type": "import"
 },
 "kwant.solvers.default.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "kwant.solvers.default.wave_function": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "kwant.solvers.mumps": {
  "data": {
   "symbols_in_volume": {
    "kwant.solvers.mumps.Solver": {
     "line number": [
      124
     ]
    },
    "kwant.solvers.mumps.default_solver": {
     "line number": [
      126,
      127,
      128,
      129,
      130,
      131
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.solvers.mumps.Solver": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "kwant.solvers.mumps.Solver.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "kwant.solvers.mumps.Solver._factorized": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "kwant.solvers.mumps.Solver._solve_linear_sys": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "min": {
     "line number": [
      115
     ]
    },
    "numpy.concatenate": {
     "line number": [
      121
     ]
    },
    "range": {
     "line number": [
      114
     ]
    },
    "solve": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.mumps.Solver.options": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      82,
      94
     ]
    },
    "bool": {
     "line number": [
      98
     ]
    },
    "int": {
     "line number": [
      81,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.mumps.Solver.reset_options": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "kwant.solvers.mumps.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "kwant.solvers.mumps.default_solver": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "kwant.solvers.mumps.greens_function": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "kwant.solvers.mumps.ldos": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "kwant.solvers.mumps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.solvers.mumps.options": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "kwant.solvers.mumps.reset_options": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "kwant.solvers.mumps.smatrix": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "kwant.solvers.mumps.wave_function": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "kwant.solvers.sparse": {
  "data": {
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      23
     ]
    },
    "kwant.solvers.sparse.Solver": {
     "line number": [
      110
     ]
    },
    "kwant.solvers.sparse.default_solver": {
     "line number": [
      112,
      113,
      114,
      115
     ]
    },
    "kwant.solvers.sparse.uses_umfpack": {
     "line number": [
      26,
      29
     ]
    },
    "scipy.sparse.linalg.dsolve.linsolve.factorized": {
     "line number": [
      84
     ]
    },
    "scipy.sparse.linalg.dsolve.linsolve.isUmfpack": {
     "line number": [
      22
     ]
    },
    "scipy.sparse.linalg.dsolve.linsolve.umfpack": {
     "line number": [
      27
     ]
    },
    "scipy.sparse.linalg.dsolve.linsolve.useUmfpack": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.solvers.sparse.Solver": {
  "data": {
   "lineno": 87
  },
  "type": "class"
 },
 "kwant.solvers.sparse.Solver._factorized": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "kwant.solvers.sparse.factorized": {
     "line number": [
      95
     ]
    },
    "scipy.sparse.csc_matrix": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.sparse.Solver._solve_linear_sys": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      102
     ]
    },
    "factorized_a": {
     "line number": [
      105
     ]
    },
    "numpy.asarray": {
     "line number": [
      107
     ]
    },
    "numpy.empty": {
     "line number": [
      102
     ]
    },
    "range": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.sparse.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "kwant.solvers.sparse.default_solver": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "kwant.solvers.sparse.factorized": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "kwant.solvers.sparse.factorized.solve": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "kwant.solvers.sparse.umfpack": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.sparse.greens_function": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "kwant.solvers.sparse.ldos": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "kwant.solvers.sparse.linsolve": {
  "data": {
   "shadows": "scipy.sparse.linalg.dsolve.linsolve"
  },
  "type": "import"
 },
 "kwant.solvers.sparse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.solvers.sparse.smatrix": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "kwant.solvers.sparse.sp": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "kwant.solvers.sparse.umfpack": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "kwant.solvers.sparse.uses_umfpack": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "kwant.solvers.sparse.wave_function": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "kwant.solvers.tests": {
  "data": {},
  "type": "module"
 },
 "kwant.solvers.tests._test_sparse": {
  "data": {
   "symbols_in_volume": {
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      18,
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.solvers.tests._test_sparse.LeadWithOnlySelfEnergy": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "kwant.solvers.tests._test_sparse.LeadWithOnlySelfEnergy.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.LeadWithOnlySelfEnergy.selfenergy": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "kwant.solvers.tests._test_sparse.assert_modes_equal": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      36
     ]
    },
    "numpy.sum": {
     "line number": [
      36
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      33,
      34,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.chain": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "kwant.solvers.tests._test_sparse.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "kwant.solvers.tests._test_sparse.ensure_rng": {
  "data": {
   "shadows": "kwant._common.ensure_rng"
  },
  "type": "import"
 },
 "kwant.solvers.tests._test_sparse.kwant": {
  "data": {
   "shadows": "kwant"
  },
  "type": "import"
 },
 "kwant.solvers.tests._test_sparse.n": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "kwant.solvers.tests._test_sparse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.solvers.tests._test_sparse.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "kwant.solvers.tests._test_sparse.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "kwant.solvers.tests._test_sparse.test_arg_passing": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      532
     ]
    },
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      517,
      521,
      521
     ]
    },
    "ldos": {
     "line number": [
      537,
      538
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      533,
      536,
      539
     ]
    },
    "range": {
     "line number": [
      518,
      518,
      522
     ]
    },
    "smatrix": {
     "line number": [
      540,
      541
     ]
    },
    "square": {
     "line number": [
      518,
      522
     ]
    },
    "square.neighbors": {
     "line number": [
      519,
      523
     ]
    },
    "wave_function": {
     "line number": [
      534,
      535
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_arg_passing.hopping": {
  "data": {
   "lineno": 511
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_arg_passing.onsite": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_graph_system": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      223
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      198
     ]
    },
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      199,
      200,
      200
     ]
    },
    "kwant.solvers.tests._test_sparse.n": {
     "line number": [
      201,
      201,
      201,
      201,
      204,
      204,
      204,
      204,
      205,
      205,
      205,
      205
     ]
    },
    "len": {
     "line number": [
      220,
      221
     ]
    },
    "numpy.asarray": {
     "line number": [
      223
     ]
    },
    "numpy.dot": {
     "line number": [
      218
     ]
    },
    "numpy.identity": {
     "line number": [
      219
     ]
    },
    "numpy.sort": {
     "line number": [
      223
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      218,
      222,
      226
     ]
    },
    "smatrix": {
     "line number": [
      216
     ]
    },
    "sq": {
     "line number": [
      206,
      206,
      206,
      207,
      207,
      207,
      209,
      209,
      210,
      210,
      211,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_ldos": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      459
     ]
    },
    "ValueError": {
     "line number": [
      457
     ]
    },
    "kwant.solvers.tests._test_sparse.LeadWithOnlySelfEnergy": {
     "line number": [
      458
     ]
    },
    "kwant.solvers.tests._test_sparse.chain": {
     "line number": [
      445,
      446,
      447,
      447,
      447,
      448,
      448,
      448,
      448
     ]
    },
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      444,
      445,
      446,
      446
     ]
    },
    "ldos": {
     "line number": [
      455,
      457,
      459
     ]
    },
    "numpy.array": {
     "line number": [
      456
     ]
    },
    "numpy.pi": {
     "line number": [
      456
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      455
     ]
    },
    "pytest.raises": {
     "line number": [
      457,
      459
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_many_leads": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      344
     ]
    },
    "f": {
     "line number": [
      334
     ]
    },
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      306,
      311,
      311
     ]
    },
    "len": {
     "line number": [
      335,
      337,
      345,
      345
     ]
    },
    "list": {
     "line number": [
      318
     ]
    },
    "numpy.array": {
     "line number": [
      320
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      322,
      323,
      326,
      342,
      346
     ]
    },
    "pytest.raises": {
     "line number": [
      344
     ]
    },
    "range": {
     "line number": [
      307,
      307,
      310,
      310,
      318
     ]
    },
    "sq": {
     "line number": [
      307,
      312
     ]
    },
    "sq.neighbors": {
     "line number": [
      309,
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_many_leads.phase": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      303
     ]
    },
    "math.cos": {
     "line number": [
      303
     ]
    },
    "math.sin": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_one_lead": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      108
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      87
     ]
    },
    "kwant.solvers.tests._test_sparse.chain": {
     "line number": [
      90,
      90,
      91,
      91,
      95,
      95,
      96,
      96,
      97,
      97
     ]
    },
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      88,
      89,
      89
     ]
    },
    "kwant.solvers.tests._test_sparse.n": {
     "line number": [
      92,
      92,
      92,
      92,
      98,
      98,
      99,
      99
     ]
    },
    "numpy.dot": {
     "line number": [
      105
     ]
    },
    "numpy.identity": {
     "line number": [
      106
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      105
     ]
    },
    "pytest.raises": {
     "line number": [
      108
     ]
    },
    "smatrix": {
     "line number": [
      104,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_output": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      73
     ]
    },
    "abs": {
     "line number": [
      70,
      70
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      44
     ]
    },
    "kwant.solvers.tests._test_sparse.assert_modes_equal": {
     "line number": [
      81,
      82
     ]
    },
    "kwant.solvers.tests._test_sparse.chain": {
     "line number": [
      48,
      48,
      49,
      49,
      53,
      53,
      54,
      54,
      55,
      55
     ]
    },
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      45,
      46,
      46,
      47,
      47,
      77,
      80
     ]
    },
    "kwant.solvers.tests._test_sparse.n": {
     "line number": [
      50,
      50,
      50,
      50,
      56,
      56,
      57,
      57
     ]
    },
    "len": {
     "line number": [
      64,
      68,
      69
     ]
    },
    "numpy.dot": {
     "line number": [
      71
     ]
    },
    "numpy.identity": {
     "line number": [
      72
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      70,
      71
     ]
    },
    "pytest.raises": {
     "line number": [
      73
     ]
    },
    "smatrix": {
     "line number": [
      62,
      66,
      73,
      74
     ]
    },
    "sum": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_selfenergy": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      394
     ]
    },
    "check_fsyst": {
     "line number": [
      385,
      388,
      393,
      394
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      352
     ]
    },
    "kwant.solvers.tests._test_sparse.LeadWithOnlySelfEnergy": {
     "line number": [
      384,
      387
     ]
    },
    "kwant.solvers.tests._test_sparse.chain": {
     "line number": [
      356,
      356,
      357,
      357,
      361,
      361,
      362,
      362,
      363,
      363
     ]
    },
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      353,
      354,
      354,
      355,
      355
     ]
    },
    "kwant.solvers.tests._test_sparse.n": {
     "line number": [
      358,
      358,
      358,
      358,
      364,
      364,
      365,
      365
     ]
    },
    "len": {
     "line number": [
      372
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      371
     ]
    },
    "pytest.raises": {
     "line number": [
      394
     ]
    },
    "smatrix": {
     "line number": [
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_selfenergy.check_fsyst": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "greens_function": {
     "line number": [
      375
     ]
    },
    "numpy.linalg.eigvals": {
     "line number": [
      377
     ]
    },
    "numpy.sort": {
     "line number": [
      380,
      381
     ]
    },
    "numpy.sum": {
     "line number": [
      378
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      379,
      380,
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_selfenergy_reflection": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      424
     ]
    },
    "greens_function": {
     "line number": [
      416,
      422,
      424
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      398
     ]
    },
    "kwant.solvers.tests._test_sparse.LeadWithOnlySelfEnergy": {
     "line number": [
      415
     ]
    },
    "kwant.solvers.tests._test_sparse.chain": {
     "line number": [
      401,
      401,
      402,
      406,
      406,
      407,
      407
     ]
    },
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      399,
      400,
      400
     ]
    },
    "kwant.solvers.tests._test_sparse.n": {
     "line number": [
      403,
      403,
      403,
      403,
      408,
      408,
      409,
      409
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      417,
      423
     ]
    },
    "pytest.raises": {
     "line number": [
      424
     ]
    },
    "smatrix": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_singular_graph_system": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      256
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      231
     ]
    },
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      233,
      234,
      234
     ]
    },
    "kwant.solvers.tests._test_sparse.n": {
     "line number": [
      235,
      235,
      235,
      235,
      238,
      238,
      238,
      238,
      239,
      239,
      239,
      239
     ]
    },
    "len": {
     "line number": [
      253,
      254
     ]
    },
    "numpy.asarray": {
     "line number": [
      256
     ]
    },
    "numpy.dot": {
     "line number": [
      251
     ]
    },
    "numpy.identity": {
     "line number": [
      252
     ]
    },
    "numpy.sort": {
     "line number": [
      256
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      251,
      255,
      259
     ]
    },
    "smatrix": {
     "line number": [
      249
     ]
    },
    "sq": {
     "line number": [
      240,
      240,
      240,
      241,
      241,
      241,
      243,
      243,
      244,
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_smatrix_shape": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "kwant.solvers.tests._test_sparse.chain": {
     "line number": [
      116,
      116,
      117,
      119,
      120,
      122,
      122,
      123,
      123,
      124,
      124,
      125,
      125
     ]
    },
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      113,
      114,
      114,
      115,
      115
     ]
    },
    "smatrix": {
     "line number": [
      133,
      138,
      143,
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_tricky_singular_hopping": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      266,
      267,
      267,
      285
     ]
    },
    "kwant.solvers.tests._test_sparse.n": {
     "line number": [
      270,
      276,
      280
     ]
    },
    "numpy.dot": {
     "line number": [
      289
     ]
    },
    "numpy.identity": {
     "line number": [
      290
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      289
     ]
    },
    "range": {
     "line number": [
      270,
      274,
      276,
      278,
      280,
      281
     ]
    },
    "smatrix": {
     "line number": [
      288
     ]
    },
    "sq": {
     "line number": [
      271,
      275,
      277,
      277,
      279,
      279,
      282,
      282,
      283,
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_two_equal_leads": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      182,
      193
     ]
    },
    "check_fsyst": {
     "line number": [
      181,
      182,
      192,
      193
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      168
     ]
    },
    "kwant.solvers.tests._test_sparse.chain": {
     "line number": [
      175,
      175,
      176,
      176,
      186,
      186,
      187,
      187
     ]
    },
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      169,
      170,
      170,
      185
     ]
    },
    "kwant.solvers.tests._test_sparse.n": {
     "line number": [
      171,
      171,
      171,
      171,
      174,
      174,
      174,
      174
     ]
    },
    "pytest.raises": {
     "line number": [
      182,
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_two_equal_leads.check_fsyst": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      163
     ]
    },
    "len": {
     "line number": [
      160,
      161
     ]
    },
    "numpy.asarray": {
     "line number": [
      163
     ]
    },
    "numpy.dot": {
     "line number": [
      158
     ]
    },
    "numpy.identity": {
     "line number": [
      159
     ]
    },
    "numpy.sort": {
     "line number": [
      163
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      158,
      162,
      166,
      167
     ]
    },
    "smatrix": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_very_singular_leads": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": {
    "kwant.solvers.tests._test_sparse.chain": {
     "line number": [
      430,
      433,
      433,
      433,
      434,
      434,
      435,
      435
     ]
    },
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      429,
      430,
      431,
      431,
      432,
      432
     ]
    },
    "len": {
     "line number": [
      440
     ]
    },
    "numpy.identity": {
     "line number": [
      433,
      435
     ]
    },
    "numpy.zeros": {
     "line number": [
      434
     ]
    },
    "smatrix": {
     "line number": [
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_wavefunc_ldos_consistency": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      503
     ]
    },
    "ValueError": {
     "line number": [
      501
     ]
    },
    "check": {
     "line number": [
      500,
      501,
      503
     ]
    },
    "hopping_kind": {
     "line number": [
      479
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      466
     ]
    },
    "kwant.solvers.tests._test_sparse.LeadWithOnlySelfEnergy": {
     "line number": [
      502
     ]
    },
    "kwant.solvers.tests._test_sparse.kwant": {
     "line number": [
      467,
      468,
      468,
      469,
      469
     ]
    },
    "kwant.solvers.tests._test_sparse.n": {
     "line number": [
      475,
      475,
      475,
      475,
      480,
      480,
      481,
      481
     ]
    },
    "pytest.raises": {
     "line number": [
      501,
      503
     ]
    },
    "range": {
     "line number": [
      471,
      471,
      472,
      473
     ]
    },
    "square": {
     "line number": [
      470,
      472,
      473
     ]
    },
    "square.neighbors": {
     "line number": [
      478
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests._test_sparse.test_wavefunc_ldos_consistency.check": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      491
     ]
    },
    "float": {
     "line number": [
      489
     ]
    },
    "ldos": {
     "line number": [
      496
     ]
    },
    "len": {
     "line number": [
      490
     ]
    },
    "numpy.pi": {
     "line number": [
      494
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      496
     ]
    },
    "numpy.zeros": {
     "line number": [
      489
     ]
    },
    "range": {
     "line number": [
      490
     ]
    },
    "wave_function": {
     "line number": [
      488
     ]
    },
    "wf": {
     "line number": [
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      15
     ]
    },
    "kwant.solvers.tests.test_mumps.no_mumps": {
     "line number": [
      18
     ]
    },
    "kwant.solvers.tests.test_mumps.pytest": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.solvers.tests.test_mumps.greens_function": {
  "data": {
   "shadows": "kwant.solvers.mumps.greens_function"
  },
  "type": "import"
 },
 "kwant.solvers.tests.test_mumps.ldos": {
  "data": {
   "shadows": "kwant.solvers.mumps.ldos"
  },
  "type": "import"
 },
 "kwant.solvers.tests.test_mumps.no_mumps": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "kwant.solvers.tests.test_mumps.opt_list": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "kwant.solvers.tests.test_mumps.options": {
  "data": {
   "shadows": "kwant.solvers.mumps.options"
  },
  "type": "import"
 },
 "kwant.solvers.tests.test_mumps.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "kwant.solvers.tests.test_mumps.pytestmark": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "kwant.solvers.tests.test_mumps.reset_options": {
  "data": {
   "shadows": "kwant.solvers.mumps.reset_options"
  },
  "type": "import"
 },
 "kwant.solvers.tests.test_mumps.smatrix": {
  "data": {
   "shadows": "kwant.solvers.mumps.smatrix"
  },
  "type": "import"
 },
 "kwant.solvers.tests.test_mumps.test_arg_passing": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "kwant.solvers.mumps.ldos": {
     "line number": [
      118
     ]
    },
    "kwant.solvers.mumps.smatrix": {
     "line number": [
      118
     ]
    },
    "kwant.solvers.mumps.wave_function": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps.test_graph_system": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "kwant.solvers.mumps.options": {
     "line number": [
      58
     ]
    },
    "kwant.solvers.mumps.reset_options": {
     "line number": [
      57
     ]
    },
    "kwant.solvers.mumps.smatrix": {
     "line number": [
      59
     ]
    },
    "kwant.solvers.tests.test_mumps.opt_list": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps.test_ldos": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "kwant.solvers.mumps.ldos": {
     "line number": [
      108
     ]
    },
    "kwant.solvers.mumps.options": {
     "line number": [
      107
     ]
    },
    "kwant.solvers.mumps.reset_options": {
     "line number": [
      106
     ]
    },
    "kwant.solvers.tests.test_mumps.opt_list": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps.test_many_leads": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "kwant.solvers.mumps.greens_function": {
     "line number": [
      80
     ]
    },
    "kwant.solvers.mumps.options": {
     "line number": [
      79
     ]
    },
    "kwant.solvers.mumps.reset_options": {
     "line number": [
      78
     ]
    },
    "kwant.solvers.mumps.smatrix": {
     "line number": [
      80
     ]
    },
    "kwant.solvers.tests.test_mumps.opt_list": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps.test_one_lead": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "kwant.solvers.mumps.options": {
     "line number": [
      38
     ]
    },
    "kwant.solvers.mumps.reset_options": {
     "line number": [
      37
     ]
    },
    "kwant.solvers.mumps.smatrix": {
     "line number": [
      39
     ]
    },
    "kwant.solvers.tests.test_mumps.opt_list": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps.test_output": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "kwant.solvers.mumps.options": {
     "line number": [
      31
     ]
    },
    "kwant.solvers.mumps.reset_options": {
     "line number": [
      30
     ]
    },
    "kwant.solvers.mumps.smatrix": {
     "line number": [
      32
     ]
    },
    "kwant.solvers.tests.test_mumps.opt_list": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps.test_selfenergy": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "kwant.solvers.mumps.greens_function": {
     "line number": [
      87
     ]
    },
    "kwant.solvers.mumps.options": {
     "line number": [
      86
     ]
    },
    "kwant.solvers.mumps.reset_options": {
     "line number": [
      85
     ]
    },
    "kwant.solvers.mumps.smatrix": {
     "line number": [
      87
     ]
    },
    "kwant.solvers.tests.test_mumps.opt_list": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps.test_selfenergy_reflection": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "kwant.solvers.mumps.greens_function": {
     "line number": [
      94
     ]
    },
    "kwant.solvers.mumps.options": {
     "line number": [
      93
     ]
    },
    "kwant.solvers.mumps.reset_options": {
     "line number": [
      92
     ]
    },
    "kwant.solvers.mumps.smatrix": {
     "line number": [
      94
     ]
    },
    "kwant.solvers.tests.test_mumps.opt_list": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps.test_singular_graph_system": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "kwant.solvers.mumps.options": {
     "line number": [
      65
     ]
    },
    "kwant.solvers.mumps.reset_options": {
     "line number": [
      64
     ]
    },
    "kwant.solvers.mumps.smatrix": {
     "line number": [
      66
     ]
    },
    "kwant.solvers.tests.test_mumps.opt_list": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps.test_smatrix_shape": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "kwant.solvers.mumps.options": {
     "line number": [
      45
     ]
    },
    "kwant.solvers.mumps.reset_options": {
     "line number": [
      44
     ]
    },
    "kwant.solvers.mumps.smatrix": {
     "line number": [
      46
     ]
    },
    "kwant.solvers.tests.test_mumps.opt_list": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps.test_tricky_singular_hopping": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "kwant.solvers.mumps.options": {
     "line number": [
      72
     ]
    },
    "kwant.solvers.mumps.reset_options": {
     "line number": [
      71
     ]
    },
    "kwant.solvers.mumps.smatrix": {
     "line number": [
      73
     ]
    },
    "kwant.solvers.tests.test_mumps.opt_list": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps.test_two_equal_leads": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "kwant.solvers.mumps.options": {
     "line number": [
      52
     ]
    },
    "kwant.solvers.mumps.reset_options": {
     "line number": [
      51
     ]
    },
    "kwant.solvers.mumps.smatrix": {
     "line number": [
      53
     ]
    },
    "kwant.solvers.tests.test_mumps.opt_list": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps.test_very_singular_leads": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "kwant.solvers.mumps.options": {
     "line number": [
      100
     ]
    },
    "kwant.solvers.mumps.reset_options": {
     "line number": [
      99
     ]
    },
    "kwant.solvers.mumps.smatrix": {
     "line number": [
      101
     ]
    },
    "kwant.solvers.tests.test_mumps.opt_list": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps.test_wavefunc_ldos_consistency": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "kwant.solvers.mumps.ldos": {
     "line number": [
      114
     ]
    },
    "kwant.solvers.mumps.options": {
     "line number": [
      113
     ]
    },
    "kwant.solvers.mumps.wave_function": {
     "line number": [
      114
     ]
    },
    "kwant.solvers.tests.test_mumps.opt_list": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_mumps.wave_function": {
  "data": {
   "shadows": "kwant.solvers.mumps.wave_function"
  },
  "type": "import"
 },
 "kwant.solvers.tests.test_sparse": {
  "data": {},
  "type": "module"
 },
 "kwant.solvers.tests.test_sparse.greens_function": {
  "data": {
   "shadows": "kwant.solvers.sparse.greens_function"
  },
  "type": "import"
 },
 "kwant.solvers.tests.test_sparse.ldos": {
  "data": {
   "shadows": "kwant.solvers.sparse.ldos"
  },
  "type": "import"
 },
 "kwant.solvers.tests.test_sparse.smatrix": {
  "data": {
   "shadows": "kwant.solvers.sparse.smatrix"
  },
  "type": "import"
 },
 "kwant.solvers.tests.test_sparse.test_arg_passing": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "kwant.solvers.sparse.ldos": {
     "line number": [
      64
     ]
    },
    "kwant.solvers.sparse.smatrix": {
     "line number": [
      64
     ]
    },
    "kwant.solvers.sparse.wave_function": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_sparse.test_graph_system": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "kwant.solvers.sparse.smatrix": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_sparse.test_ldos": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "kwant.solvers.sparse.ldos": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_sparse.test_many_leads": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "kwant.solvers.sparse.greens_function": {
     "line number": [
      41
     ]
    },
    "kwant.solvers.sparse.smatrix": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_sparse.test_one_lead": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "kwant.solvers.sparse.smatrix": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_sparse.test_output": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "kwant.solvers.sparse.smatrix": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_sparse.test_selfenergy": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "kwant.solvers.sparse.greens_function": {
     "line number": [
      45
     ]
    },
    "kwant.solvers.sparse.smatrix": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_sparse.test_selfenergy_reflection": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "kwant.solvers.sparse.greens_function": {
     "line number": [
      49
     ]
    },
    "kwant.solvers.sparse.smatrix": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_sparse.test_singular_graph_system": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "kwant.solvers.sparse.smatrix": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_sparse.test_smatrix_shape": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "kwant.solvers.sparse.smatrix": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_sparse.test_tricky_singular_hopping": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "kwant.solvers.sparse.smatrix": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_sparse.test_two_equal_leads": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "kwant.solvers.sparse.smatrix": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_sparse.test_very_singular_leads": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "kwant.solvers.sparse.smatrix": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_sparse.test_wavefunc_ldos_consistency": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "kwant.solvers.sparse.ldos": {
     "line number": [
      61
     ]
    },
    "kwant.solvers.sparse.wave_function": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.solvers.tests.test_sparse.wave_function": {
  "data": {
   "shadows": "kwant.solvers.sparse.wave_function"
  },
  "type": "import"
 },
 "kwant.system": {
  "data": {
   "symbols_in_volume": {
    "kwant.system.System": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.system.FiniteSystem": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "kwant.system.System": {
     "line number": [
      73
     ]
    },
    "kwant.system.abc": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant.system.FiniteSystem.precalculate": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      143
     ]
    },
    "copy.copy": {
     "line number": [
      146
     ]
    },
    "enumerate": {
     "line number": [
      150
     ]
    },
    "kwant.system.PrecalculatedLead": {
     "line number": [
      162
     ]
    },
    "len": {
     "line number": [
      148
     ]
    },
    "list": {
     "line number": [
      148
     ]
    },
    "range": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.system.InfiniteSystem": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "kwant.system.System": {
     "line number": [
      167
     ]
    },
    "kwant.system.abc": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant.system.InfiniteSystem.cell_hamiltonian": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "range": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.system.InfiniteSystem.inter_cell_hopping": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "range": {
     "line number": [
      217,
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.system.InfiniteSystem.modes": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      240,
      243
     ]
    },
    "len": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.system.InfiniteSystem.selfenergy": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "len": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.system.PrecalculatedLead": {
  "data": {
   "lineno": 273
  },
  "type": "class"
 },
 "kwant.system.PrecalculatedLead.__init__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.system.PrecalculatedLead.modes": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.system.PrecalculatedLead.selfenergy": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.system.System": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "kwant.system.abc": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant.system.System.discrete_symmetry": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "DiscreteSymmetry": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.system.System.hamiltonian": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "kwant.system.abc": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.system.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "kwant.system.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "kwant.system.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "kwant.test": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "pytest.main": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests": {
  "data": {},
  "type": "module"
 },
 "kwant.tests.test_builder": {
  "data": {},
  "type": "module"
 },
 "kwant.tests.test_builder.Random": {
  "data": {
   "shadows": "random.Random"
  },
  "type": "import"
 },
 "kwant.tests.test_builder.VerySimpleSymmetry": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "kwant.builder.Symmetry": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "class"
 },
 "kwant.tests.test_builder.VerySimpleSymmetry.__init__": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "kwant.tests.test_builder.VerySimpleSymmetry.act": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "len": {
     "line number": [
      153
     ]
    },
    "shifted": {
     "line number": [
      155,
      157,
      157
     ]
    },
    "tinyarray.add": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.VerySimpleSymmetry.has_subgroup": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      133,
      135
     ]
    },
    "kwant.builder.NoSymmetry": {
     "line number": [
      133
     ]
    },
    "kwant.tests.test_builder.VerySimpleSymmetry": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.VerySimpleSymmetry.num_directions": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "property": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.VerySimpleSymmetry.subgroup": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      144
     ]
    },
    "int": {
     "line number": [
      143
     ]
    },
    "kwant.tests.test_builder.VerySimpleSymmetry": {
     "line number": [
      146
     ]
    },
    "tinyarray.array": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.VerySimpleSymmetry.which": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "int": {
     "line number": [
      149
     ]
    },
    "tinyarray.array": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "kwant.tests.test_builder.builder": {
  "data": {
   "shadows": "kwant.builder"
  },
  "type": "import"
 },
 "kwant.tests.test_builder.check_construction_and_indexing": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      175
     ]
    },
    "fam": {
     "line number": [
      164,
      177,
      177,
      178,
      179
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      165
     ]
    },
    "kwant.builder.SimpleSiteFamily": {
     "line number": [
      164
     ]
    },
    "list": {
     "line number": [
      195
     ]
    },
    "pytest.raises": {
     "line number": [
      175
     ]
    },
    "sorted": {
     "line number": [
      191,
      192,
      199,
      199,
      200,
      201,
      203,
      205,
      206,
      208
     ]
    },
    "tuple": {
     "line number": [
      199,
      203,
      205,
      206,
      206,
      208,
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.check_hoppings": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      309
     ]
    },
    "kwant.builder.Other": {
     "line number": [
      314
     ]
    },
    "len": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.check_id_by_site": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.check_onsite": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "range": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.ensure_rng": {
  "data": {
   "shadows": "kwant._common.ensure_rng"
  },
  "type": "import"
 },
 "kwant.tests.test_builder.ft": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "kwant.tests.test_builder.inside_disc": {
  "data": {
   "lineno": 916
  },
  "type": "function"
 },
 "kwant.tests.test_builder.inside_disc.shape": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": {
    "tinyarray.dot": {
     "line number": [
      919
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "kwant.tests.test_builder.kwant": {
  "data": {
   "shadows": "kwant"
  },
  "type": "import"
 },
 "kwant.tests.test_builder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.tests.test_builder.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "kwant.tests.test_builder.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "kwant.tests.test_builder.random_hopping_integral": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.random_onsite_hamiltonian": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "kwant.tests.test_builder.ta": {
  "data": {
   "shadows": "tinyarray"
  },
  "type": "import"
 },
 "kwant.tests.test_builder.test_HoppingKind": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": {
    "g": {
     "line number": [
      999,
      1003,
      1005,
      1006,
      1007,
      1009,
      1029,
      1030,
      1031
     ]
    },
    "hash": {
     "line number": [
      1033,
      1033,
      1035,
      1035
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      1002
     ]
    },
    "kwant.builder.HoppingKind": {
     "line number": [
      1010,
      1017,
      1029,
      1030,
      1031
     ]
    },
    "kwant.tests.test_builder.kwant": {
     "line number": [
      999,
      1000,
      1001
     ]
    },
    "len": {
     "line number": [
      1011,
      1013,
      1018,
      1036
     ]
    },
    "list": {
     "line number": [
      1010,
      1015
     ]
    },
    "max": {
     "line number": [
      1003
     ]
    },
    "range": {
     "line number": [
      1004,
      1004,
      1004
     ]
    },
    "set": {
     "line number": [
      1012,
      1019
     ]
    },
    "tinyarray.identity": {
     "line number": [
      999,
      1000
     ]
    },
    "tinyarray.negative": {
     "line number": [
      1017
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_ModesLead_and_SelfEnergyLead": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": {
    "kwant.builder.Builder": {
     "line number": [
      1063,
      1070,
      1077
     ]
    },
    "kwant.builder.HoppingKind": {
     "line number": [
      1056,
      1057
     ]
    },
    "kwant.builder.ModesLead": {
     "line number": [
      1091,
      1098
     ]
    },
    "kwant.builder.SelfEnergyLead": {
     "line number": [
      1105,
      1112,
      1121
     ]
    },
    "kwant.builder.SimpleSiteFamily": {
     "line number": [
      1055
     ]
    },
    "kwant.tests.test_builder.VerySimpleSymmetry": {
     "line number": [
      1070,
      1077
     ]
    },
    "kwant.tests.test_builder.kwant": {
     "line number": [
      1084,
      1093,
      1101,
      1107,
      1115,
      1124
     ]
    },
    "lat": {
     "line number": [
      1055,
      1056,
      1057,
      1066,
      1072,
      1079,
      1088
     ]
    },
    "list": {
     "line number": [
      1122
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1094,
      1102,
      1108,
      1116,
      1125
     ]
    },
    "random.Random": {
     "line number": [
      1058
     ]
    },
    "range": {
     "line number": [
      1064,
      1065,
      1071,
      1078,
      1088
     ]
    },
    "tinyarray.zeros": {
     "line number": [
      1122
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_argument_passing": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1220,
      1222,
      1226
     ]
    },
    "chain": {
     "line number": [
      1262,
      1263,
      1263
     ]
    },
    "dict": {
     "line number": [
      1217,
      1221,
      1223,
      1227,
      1252,
      1271
     ]
    },
    "expected_hamiltonian": {
     "line number": [
      1274
     ]
    },
    "fill_syst": {
     "line number": [
      1204,
      1205,
      1237,
      1239,
      1240
     ]
    },
    "functools.partial": {
     "line number": [
      1202,
      1237
     ]
    },
    "kwant.tests.test_builder.kwant": {
     "line number": [
      1188,
      1204,
      1205,
      1205,
      1239,
      1240,
      1240,
      1261
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1216,
      1251,
      1272
     ]
    },
    "pytest.raises": {
     "line number": [
      1220,
      1222,
      1226
     ]
    },
    "range": {
     "line number": [
      1262,
      1263
     ]
    },
    "test": {
     "line number": [
      1217,
      1217,
      1250,
      1252,
      1252
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_argument_passing.expected_hamiltonian": {
  "data": {
   "lineno": 1266
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_argument_passing.gen_fill_syst": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": {
    "chain": {
     "line number": [
      1198
     ]
    },
    "chain.neighbors": {
     "line number": [
      1199
     ]
    },
    "range": {
     "line number": [
      1198
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_argument_passing.hopping": {
  "data": {
   "lineno": 1234
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_argument_passing.hopping2": {
  "data": {
   "lineno": 1258
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_argument_passing.onsite": {
  "data": {
   "lineno": 1231
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_argument_passing.onsite2": {
  "data": {
   "lineno": 1255
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_attach_lead": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      851,
      854,
      857
     ]
    },
    "fam": {
     "line number": [
      845,
      849,
      853,
      855,
      857,
      865,
      866,
      867,
      867,
      867,
      867,
      870,
      870,
      871,
      871,
      873,
      873,
      875,
      876,
      876,
      881,
      883,
      883
     ]
    },
    "fam_noncommensurate": {
     "line number": [
      864
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      848,
      850,
      859,
      880
     ]
    },
    "kwant.builder.SimpleSiteFamily": {
     "line number": [
      845,
      846
     ]
    },
    "kwant.tests.test_builder.VerySimpleSymmetry": {
     "line number": [
      850,
      880
     ]
    },
    "len": {
     "line number": [
      869,
      874,
      887
     ]
    },
    "list": {
     "line number": [
      869,
      874,
      887
     ]
    },
    "pytest.raises": {
     "line number": [
      851,
      854,
      857
     ]
    },
    "range": {
     "line number": [
      882
     ]
    },
    "set": {
     "line number": [
      870,
      870,
      873,
      873,
      876,
      876
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_attach_lead_incomplete_unit_cell": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": {
    "kwant.tests.test_builder.kwant": {
     "line number": [
      894,
      895,
      896,
      896
     ]
    },
    "lat": {
     "line number": [
      894,
      897,
      897,
      897
     ]
    },
    "lat.neighbors": {
     "line number": [
      898
     ]
    },
    "len": {
     "line number": [
      899
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_bad_keys": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      92
     ]
    },
    "IndexError": {
     "line number": [
      40,
      59
     ]
    },
    "KeyError": {
     "line number": [
      47,
      62,
      69,
      82
     ]
    },
    "TypeError": {
     "line number": [
      36,
      52,
      75
     ]
    },
    "ValueError": {
     "line number": [
      42,
      60
     ]
    },
    "fam": {
     "line number": [
      38,
      39,
      40,
      41,
      41,
      41,
      42,
      42,
      43,
      43,
      47,
      47,
      47,
      47,
      48,
      48,
      52,
      52,
      53,
      53,
      54,
      54,
      54,
      55,
      55,
      56,
      56,
      56,
      57,
      57,
      57,
      58,
      58,
      58,
      59,
      59,
      59,
      60,
      60,
      60,
      60,
      61,
      61,
      61,
      61,
      62,
      62,
      62,
      62,
      63,
      63,
      63,
      63,
      64,
      64,
      64,
      64,
      69,
      70,
      70,
      71,
      71,
      78,
      78,
      79,
      79,
      80,
      80,
      81,
      81,
      82,
      88,
      88,
      89,
      89
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      31
     ]
    },
    "kwant.builder.SimpleSiteFamily": {
     "line number": [
      30
     ]
    },
    "list": {
     "line number": [
      74
     ]
    },
    "print": {
     "line number": [
      93
     ]
    },
    "pytest.raises": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_bad_keys.setitem": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_builder_with_symmetry": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": {
    "g": {
     "line number": [
      603,
      603,
      604,
      604,
      605,
      605,
      606,
      606,
      607,
      607,
      608,
      608,
      609,
      609,
      610,
      610,
      611,
      611,
      612,
      612,
      635,
      635,
      636,
      636,
      638
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      600
     ]
    },
    "kwant.tests.test_builder.kwant": {
     "line number": [
      598,
      599
     ]
    },
    "list": {
     "line number": [
      639
     ]
    },
    "set": {
     "line number": [
      619
     ]
    },
    "sorted": {
     "line number": [
      618,
      619,
      626,
      627
     ]
    },
    "tinyarray.identity": {
     "line number": [
      598
     ]
    },
    "tuple": {
     "line number": [
      618,
      619,
      626,
      626,
      627,
      627
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_closest": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": {
    "kwant._common.ensure_rng": {
     "line number": [
      925
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      936,
      950
     ]
    },
    "kwant.tests.test_builder.inside_disc": {
     "line number": [
      951
     ]
    },
    "kwant.tests.test_builder.kwant": {
     "line number": [
      928,
      936
     ]
    },
    "lat": {
     "line number": [
      928,
      941
     ]
    },
    "list": {
     "line number": [
      940
     ]
    },
    "numpy.dot": {
     "line number": [
      933
     ]
    },
    "numpy.linalg.det": {
     "line number": [
      933
     ]
    },
    "range": {
     "line number": [
      926,
      927
     ]
    },
    "tinyarray.dot": {
     "line number": [
      949,
      955
     ]
    },
    "tinyarray.identity": {
     "line number": [
      928
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_construction_and_indexing": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "fam": {
     "line number": [
      214,
      215,
      215,
      215,
      216,
      216,
      217,
      217,
      218,
      218,
      219,
      219,
      220,
      220,
      225,
      225,
      225,
      225,
      226,
      226,
      226,
      226,
      227,
      227,
      228,
      228,
      229,
      229,
      230,
      230,
      231,
      231,
      232,
      232,
      233,
      233,
      234,
      234,
      235,
      235,
      235,
      235,
      236,
      236,
      236,
      236,
      237,
      237,
      237,
      237
     ]
    },
    "kwant.builder.SimpleSiteFamily": {
     "line number": [
      214
     ]
    },
    "kwant.tests.test_builder.VerySimpleSymmetry": {
     "line number": [
      238
     ]
    },
    "kwant.tests.test_builder.check_construction_and_indexing": {
     "line number": [
      221,
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_dangling": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "list": {
     "line number": [
      586
     ]
    },
    "make_system": {
     "line number": [
      579,
      584
     ]
    },
    "sorted": {
     "line number": [
      580,
      581,
      591,
      592,
      593,
      594
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_dangling.make_system": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": {
    "fam": {
     "line number": [
      572,
      573,
      574,
      574,
      574,
      574,
      574,
      574,
      575,
      575,
      575,
      575,
      575,
      575,
      576,
      576
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      571
     ]
    },
    "kwant.builder.SimpleSiteFamily": {
     "line number": [
      572
     ]
    },
    "range": {
     "line number": [
      573
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_discrete_symmetries": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1181
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      1139,
      1154,
      1160,
      1179
     ]
    },
    "kwant.builder.SimpleSiteFamily": {
     "line number": [
      1134,
      1135,
      1136
     ]
    },
    "kwant.tests.test_builder.kwant": {
     "line number": [
      1166
     ]
    },
    "lat": {
     "line number": [
      1134,
      1138,
      1142,
      1155
     ]
    },
    "lat2": {
     "line number": [
      1143,
      1161,
      1180
     ]
    },
    "lat3": {
     "line number": [
      1168
     ]
    },
    "numpy.allclose": {
     "line number": [
      1147,
      1148,
      1152,
      1158,
      1164,
      1173,
      1176,
      1183
     ]
    },
    "numpy.diag": {
     "line number": [
      1138,
      1154,
      1166
     ]
    },
    "numpy.exp": {
     "line number": [
      1140
     ]
    },
    "numpy.eye": {
     "line number": [
      1168
     ]
    },
    "numpy.identity": {
     "line number": [
      1141,
      1142,
      1146,
      1148,
      1151,
      1155,
      1157
     ]
    },
    "numpy.zeros": {
     "line number": [
      1171,
      1174
     ]
    },
    "zip": {
     "line number": [
      1146,
      1151,
      1157
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_fill": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      712
     ]
    },
    "RuntimeWarning": {
     "line number": [
      690,
      719,
      781,
      794,
      803
     ]
    },
    "ValueError": {
     "line number": [
      707
     ]
    },
    "enumerate": {
     "line number": [
      665,
      669,
      673
     ]
    },
    "g": {
     "line number": [
      644,
      649,
      696,
      696,
      708,
      713,
      716,
      720,
      726,
      729,
      737,
      739,
      744,
      747,
      749,
      760,
      763,
      765
     ]
    },
    "g.neighbors": {
     "line number": [
      650,
      730,
      738,
      748,
      764
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      648,
      688,
      697,
      705,
      711,
      715,
      725,
      728,
      736,
      743,
      746,
      759,
      762,
      772,
      776,
      792,
      793,
      799,
      802
     ]
    },
    "kwant.builder.HoppingKind": {
     "line number": [
      739,
      749,
      765
     ]
    },
    "kwant.builder.NoSymmetry": {
     "line number": [
      658
     ]
    },
    "kwant.tests.test_builder.kwant": {
     "line number": [
      644,
      645,
      646,
      656,
      660,
      663,
      679,
      695,
      724,
      742,
      771,
      772,
      776,
      792,
      798,
      799
     ]
    },
    "lat": {
     "line number": [
      773,
      777,
      782,
      785,
      786,
      787,
      787,
      789,
      795,
      798,
      800,
      805,
      805
     ]
    },
    "lat.neighbors": {
     "line number": [
      774,
      801
     ]
    },
    "len": {
     "line number": [
      700,
      701,
      710,
      717,
      788
     ]
    },
    "list": {
     "line number": [
      701,
      710
     ]
    },
    "numpy.diag": {
     "line number": [
      656
     ]
    },
    "pytest.raises": {
     "line number": [
      707,
      712
     ]
    },
    "pytest.warns": {
     "line number": [
      690,
      719,
      781,
      794,
      803
     ]
    },
    "range": {
     "line number": [
      729,
      747,
      747,
      763,
      763
     ]
    },
    "set": {
     "line number": [
      683,
      683,
      684,
      685,
      702,
      702
     ]
    },
    "sorted": {
     "line number": [
      732,
      732,
      733,
      733,
      751,
      751,
      752,
      752,
      767,
      767,
      768,
      768
     ]
    },
    "tinyarray.dot": {
     "line number": [
      659
     ]
    },
    "tinyarray.identity": {
     "line number": [
      660
     ]
    },
    "to_target_fd": {
     "line number": [
      789,
      789
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_fill.line_200": {
  "data": {
   "lineno": 652
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_fill.square_shape": {
  "data": {
   "lineno": 755
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_fill_sticky": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": {
    "disk": {
     "line number": [
      835,
      836
     ]
    },
    "enumerate": {
     "line number": [
      816,
      819
     ]
    },
    "halfplane": {
     "line number": [
      835,
      836
     ]
    },
    "kwant.tests.test_builder.kwant": {
     "line number": [
      813,
      814,
      814,
      830,
      834
     ]
    },
    "lat": {
     "line number": [
      813
     ]
    },
    "lat.neighbors": {
     "line number": [
      819
     ]
    },
    "lat.sublattices": {
     "line number": [
      816
     ]
    },
    "lat.vec": {
     "line number": [
      815,
      815
     ]
    },
    "range": {
     "line number": [
      818
     ]
    },
    "set": {
     "line number": [
      839,
      839,
      840,
      841
     ]
    },
    "sl": {
     "line number": [
      817
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_fill_sticky.disk": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": {
    "tinyarray.dot": {
     "line number": [
      824
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_fill_sticky.halfplane": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": {
    "tinyarray.dot": {
     "line number": [
      827
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_finalization": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      402
     ]
    },
    "ValueError": {
     "line number": [
      419,
      424,
      435,
      456
     ]
    },
    "fam": {
     "line number": [
      380,
      382,
      384,
      384,
      390,
      397,
      408,
      408,
      423,
      428,
      436,
      438,
      444,
      455,
      455
     ]
    },
    "issubclass": {
     "line number": [
      402
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      379,
      393
     ]
    },
    "kwant.builder.BuilderLead": {
     "line number": [
      418,
      422,
      427,
      443
     ]
    },
    "kwant.builder.InfiniteSystem": {
     "line number": [
      435,
      438
     ]
    },
    "kwant.builder.Site": {
     "line number": [
      423,
      428,
      436,
      438,
      444
     ]
    },
    "kwant.tests.test_builder.check_hoppings": {
     "line number": [
      388,
      415
     ]
    },
    "kwant.tests.test_builder.check_id_by_site": {
     "line number": [
      386,
      412
     ]
    },
    "kwant.tests.test_builder.check_onsite": {
     "line number": [
      387,
      413,
      414
     ]
    },
    "kwant.tests.test_builder.kwant": {
     "line number": [
      380,
      393
     ]
    },
    "kwant.tests.test_builder.random_hopping_integral": {
     "line number": [
      359,
      375,
      455
     ]
    },
    "kwant.tests.test_builder.warnings": {
     "line number": [
      398,
      399
     ]
    },
    "len": {
     "line number": [
      401,
      430,
      446
     ]
    },
    "list": {
     "line number": [
      356,
      363,
      410
     ]
    },
    "pytest.raises": {
     "line number": [
      419,
      424,
      435,
      456
     ]
    },
    "random.Random": {
     "line number": [
      344
     ]
    },
    "range": {
     "line number": [
      365
     ]
    },
    "reversed": {
     "line number": [
      436
     ]
    },
    "set": {
     "line number": [
      364
     ]
    },
    "set_hops": {
     "line number": [
      353,
      362
     ]
    },
    "set_sites": {
     "line number": [
      351,
      360
     ]
    },
    "sorted": {
     "line number": [
      376,
      390
     ]
    },
    "str": {
     "line number": [
      403
     ]
    },
    "tinyarray.identity": {
     "line number": [
      380
     ]
    },
    "tuple": {
     "line number": [
      390,
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_finalization.set_hops": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "kwant.tests.test_builder.random_hopping_integral": {
     "line number": [
      342
     ]
    },
    "len": {
     "line number": [
      339
     ]
    },
    "list": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_finalization.set_sites": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "kwant.tests.test_builder.random_onsite_hamiltonian": {
     "line number": [
      336
     ]
    },
    "len": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_hamiltonian_evaluation": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": {
    "fam": {
     "line number": [
      508,
      509,
      510,
      511,
      511,
      550,
      550
     ]
    },
    "itertools.chain": {
     "line number": [
      559
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      507
     ]
    },
    "kwant.builder.SimpleSiteFamily": {
     "line number": [
      508
     ]
    },
    "kwant.tests.test_builder.VerySimpleSymmetry": {
     "line number": [
      558
     ]
    },
    "kwant.tests.test_builder.kwant": {
     "line number": [
      558
     ]
    },
    "len": {
     "line number": [
      514,
      515,
      517
     ]
    },
    "map": {
     "line number": [
      554,
      562
     ]
    },
    "range": {
     "line number": [
      517
     ]
    },
    "test_raising": {
     "line number": [
      555,
      563
     ]
    },
    "tuple": {
     "line number": [
      554,
      562
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_hamiltonian_evaluation.f_hopping": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_hamiltonian_evaluation.f_onsite": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_hamiltonian_evaluation.hopping_raises": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      532
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_hamiltonian_evaluation.onsite_raises": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      529
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_hamiltonian_evaluation.test_raising": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "kwant.tests.test_builder.kwant": {
     "line number": [
      537,
      543
     ]
    },
    "pytest.raises": {
     "line number": [
      537,
      543
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_hermitian_conjugation": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "fam": {
     "line number": [
      252,
      253,
      253,
      255,
      255,
      256,
      256,
      257,
      257,
      258,
      258,
      258,
      258,
      259,
      259,
      259,
      259,
      260,
      260,
      260,
      260,
      261,
      261,
      262,
      262
     ]
    },
    "isinstance": {
     "line number": [
      257,
      261
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      251
     ]
    },
    "kwant.builder.HermConjOfFunc": {
     "line number": [
      257,
      261
     ]
    },
    "kwant.builder.SimpleSiteFamily": {
     "line number": [
      252
     ]
    },
    "tinyarray.identity": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_hermitian_conjugation.f": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      249
     ]
    },
    "tinyarray.array": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_invalid_HoppingKind": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1046,
      1050
     ]
    },
    "g": {
     "line number": [
      1040,
      1047
     ]
    },
    "kwant.builder.HoppingKind": {
     "line number": [
      1047,
      1051
     ]
    },
    "kwant.tests.test_builder.kwant": {
     "line number": [
      1040,
      1041
     ]
    },
    "numpy.identity": {
     "line number": [
      1041
     ]
    },
    "pytest.raises": {
     "line number": [
      1046,
      1050
     ]
    },
    "tinyarray.identity": {
     "line number": [
      1040
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_neighbors_not_in_single_domain": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      913
     ]
    },
    "fam": {
     "line number": [
      905,
      906,
      907,
      908,
      909,
      910,
      910,
      911,
      911,
      912
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      903,
      904
     ]
    },
    "kwant.builder.BuilderLead": {
     "line number": [
      912
     ]
    },
    "kwant.builder.HoppingKind": {
     "line number": [
      907,
      908
     ]
    },
    "kwant.builder.SimpleSiteFamily": {
     "line number": [
      905
     ]
    },
    "kwant.tests.test_builder.VerySimpleSymmetry": {
     "line number": [
      904
     ]
    },
    "pytest.raises": {
     "line number": [
      913
     ]
    },
    "range": {
     "line number": [
      906,
      906,
      909,
      910,
      911,
      912
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_parameter_substitution": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1286
     ]
    },
    "dict": {
     "line number": [
      1286,
      1289,
      1293,
      1299,
      1303,
      1304
     ]
    },
    "f": {
     "line number": [
      1290,
      1294,
      1296,
      1299,
      1300,
      1303,
      1304,
      1305
     ]
    },
    "g": {
     "line number": [
      1289,
      1290,
      1293,
      1299,
      1300,
      1303,
      1305
     ]
    },
    "h": {
     "line number": [
      1294,
      1304,
      1305
     ]
    },
    "h.func": {
     "line number": [
      1296
     ]
    },
    "kwant.builder._substitute_params": {
     "line number": [
      1280
     ]
    },
    "len": {
     "line number": [
      1305
     ]
    },
    "pytest.raises": {
     "line number": [
      1286
     ]
    },
    "set": {
     "line number": [
      1305
     ]
    },
    "subs": {
     "line number": [
      1289,
      1293,
      1299,
      1303,
      1304
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_parameter_substitution.f": {
  "data": {
   "lineno": 1282
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_site_families": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      110
     ]
    },
    "fam": {
     "line number": [
      99,
      103,
      104,
      106,
      106,
      107,
      108,
      113,
      114,
      115,
      116
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      98
     ]
    },
    "kwant.builder.SimpleSiteFamily": {
     "line number": [
      99,
      100,
      101,
      119,
      120
     ]
    },
    "len": {
     "line number": [
      106
     ]
    },
    "ofam": {
     "line number": [
      106,
      109,
      113
     ]
    },
    "pytest.raises": {
     "line number": [
      110
     ]
    },
    "set": {
     "line number": [
      106
     ]
    },
    "yafam": {
     "line number": [
      110,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_site_pickle": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": {
    "kwant.tests.test_builder.kwant": {
     "line number": [
      1129
     ]
    },
    "kwant.tests.test_builder.pickle": {
     "line number": [
      1130,
      1130
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_site_ranges": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": {
    "itertools.chain": {
     "line number": [
      473,
      477
     ]
    },
    "kwant.builder._site_ranges": {
     "line number": [
      463
     ]
    },
    "kwant.tests.test_builder.kwant": {
     "line number": [
      460,
      461,
      462,
      485,
      491
     ]
    },
    "list": {
     "line number": [
      467,
      484
     ]
    },
    "map": {
     "line number": [
      467,
      473,
      473,
      474,
      477,
      477,
      478,
      484
     ]
    },
    "numpy.eye": {
     "line number": [
      486
     ]
    },
    "range": {
     "line number": [
      467,
      473,
      473,
      474,
      477,
      477,
      478,
      484
     ]
    },
    "site_ranges": {
     "line number": [
      468,
      476,
      480
     ]
    },
    "tuple": {
     "line number": [
      476,
      480
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_subs": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      1333
     ]
    },
    "ValueError": {
     "line number": [
      1335,
      1336,
      1337,
      1338,
      1345
     ]
    },
    "hamiltonian": {
     "line number": [
      1349,
      1352,
      1355,
      1359
     ]
    },
    "kwant.tests.test_builder.kwant": {
     "line number": [
      1320,
      1343
     ]
    },
    "lat": {
     "line number": [
      1320
     ]
    },
    "make_system": {
     "line number": [
      1331,
      1342,
      1343,
      1348
     ]
    },
    "numpy.allclose": {
     "line number": [
      1352,
      1355,
      1359
     ]
    },
    "pytest.raises": {
     "line number": [
      1335,
      1336,
      1337,
      1338,
      1345
     ]
    },
    "pytest.warns": {
     "line number": [
      1333
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_subs.hamiltonian": {
  "data": {
   "lineno": 1328
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_subs.hopping": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": {
    "kwant.tests.test_builder.kwant": {
     "line number": [
      1318
     ]
    },
    "str": {
     "line number": [
      1317,
      1317
     ]
    },
    "tinyarray.array": {
     "line number": [
      1318
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_subs.make_system": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": {
    "kwant.tests.test_builder.kwant": {
     "line number": [
      1322,
      1323
     ]
    },
    "lat": {
     "line number": [
      1324
     ]
    },
    "lat.neighbors": {
     "line number": [
      1325
     ]
    },
    "range": {
     "line number": [
      1324
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_subs.onsite": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": {
    "kwant.tests.test_builder.kwant": {
     "line number": [
      1314
     ]
    },
    "str": {
     "line number": [
      1313,
      1313
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_update": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": {
    "kwant.builder.Builder": {
     "line number": [
      962,
      966,
      970,
      976
     ]
    },
    "kwant.builder.BuilderLead": {
     "line number": [
      973,
      979
     ]
    },
    "kwant.builder.SimpleSiteFamily": {
     "line number": [
      960
     ]
    },
    "kwant.tests.test_builder.VerySimpleSymmetry": {
     "line number": [
      970,
      976
     ]
    },
    "lat": {
     "line number": [
      960,
      963,
      963,
      964,
      964,
      967,
      967,
      968,
      968,
      971,
      972,
      972,
      973,
      977,
      978,
      978,
      979
     ]
    },
    "sorted": {
     "line number": [
      984,
      985,
      986,
      987
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.test_value_equality_and_identity": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "fam": {
     "line number": [
      268,
      270,
      271,
      272,
      274,
      274,
      275,
      275,
      276,
      276,
      278,
      278,
      279,
      279,
      280,
      280
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      267
     ]
    },
    "kwant.builder.SimpleSiteFamily": {
     "line number": [
      268
     ]
    },
    "tinyarray.array": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_builder.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "kwant.tests.test_builder.warns": {
  "data": {
   "shadows": "pytest.warns"
  },
  "type": "import"
 },
 "kwant.tests.test_comprehensive": {
  "data": {},
  "type": "module"
 },
 "kwant.tests.test_comprehensive.exp": {
  "data": {
   "shadows": "cmath.exp"
  },
  "type": "import"
 },
 "kwant.tests.test_comprehensive.hopping": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "cmath.exp": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_comprehensive.kwant": {
  "data": {
   "shadows": "kwant"
  },
  "type": "import"
 },
 "kwant.tests.test_comprehensive.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "kwant.tests.test_comprehensive.onsite": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "kwant.tests.test_comprehensive.kwant": {
     "line number": [
      13
     ]
    },
    "repr": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_comprehensive.test_qhe": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      55
     ]
    },
    "kwant.tests.test_comprehensive.hopping": {
     "line number": [
      25,
      29
     ]
    },
    "kwant.tests.test_comprehensive.kwant": {
     "line number": [
      21,
      22,
      27,
      27,
      53,
      54
     ]
    },
    "kwant.tests.test_comprehensive.onsite": {
     "line number": [
      24
     ]
    },
    "lat": {
     "line number": [
      28
     ]
    },
    "lat.neighbors": {
     "line number": [
      29
     ]
    },
    "range": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_comprehensive.test_qhe.central_region": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      19
     ]
    },
    "kwant.tests.test_comprehensive.math": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm": {
  "data": {
   "symbols_in_volume": {
    "kwant.tests.test_kpm.dim": {
     "line number": [
      29
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      21,
      29
     ]
    },
    "types.SimpleNamespace": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.tests.test_kpm.SimpleNamespace": {
  "data": {
   "shadows": "types.SimpleNamespace"
  },
  "type": "import"
 },
 "kwant.tests.test_kpm.SpectralDensity": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "kwant.tests.test_kpm.TOL": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "kwant.tests.test_kpm.TOL_SP": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "kwant.tests.test_kpm.TOL_WEAK": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "kwant.tests.test_kpm.assert_allclose": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.TOL": {
     "line number": [
      38
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.assert_allclose_sp": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.TOL_SP": {
     "line number": [
      42
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "kwant.tests.test_kpm.deviation_from_eigenvalues": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      132
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      127
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      127,
      128,
      131,
      138,
      139
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      127
     ]
    },
    "kwant.tests.test_kpm.make_spectrum_and_peaks": {
     "line number": [
      128
     ]
    },
    "len": {
     "line number": [
      139
     ]
    },
    "numpy.abs": {
     "line number": [
      130,
      137
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      131,
      138
     ]
    },
    "numpy.max": {
     "line number": [
      130,
      136
     ]
    },
    "numpy.min": {
     "line number": [
      137
     ]
    },
    "range": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.dim": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "kwant.tests.test_kpm.find_peaks_in_an_array": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "numpy.diff": {
     "line number": [
      147
     ]
    },
    "numpy.gradient": {
     "line number": [
      144,
      145
     ]
    },
    "numpy.max": {
     "line number": [
      148
     ]
    },
    "numpy.sign": {
     "line number": [
      147
     ]
    },
    "numpy.where": {
     "line number": [
      147,
      150,
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.ham": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "kwant.tests.test_kpm.kpm_derivative": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      80
     ]
    },
    "numpy.arange": {
     "line number": [
      84
     ]
    },
    "numpy.asarray": {
     "line number": [
      80
     ]
    },
    "numpy.cos": {
     "line number": [
      86
     ]
    },
    "numpy.pi": {
     "line number": [
      82,
      86,
      87,
      88
     ]
    },
    "numpy.polynomial.chebyshev.chebder": {
     "line number": [
      100
     ]
    },
    "numpy.polynomial.chebyshev.chebval": {
     "line number": [
      102
     ]
    },
    "numpy.real": {
     "line number": [
      102
     ]
    },
    "numpy.sin": {
     "line number": [
      87
     ]
    },
    "numpy.sqrt": {
     "line number": [
      82,
      82
     ]
    },
    "numpy.sum": {
     "line number": [
      91
     ]
    },
    "numpy.tan": {
     "line number": [
      88
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.kwant": {
  "data": {
   "shadows": "kwant"
  },
  "type": "import"
 },
 "kwant.tests.test_kpm.make_chain": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.dim": {
     "line number": [
      58
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      59,
      60
     ]
    },
    "lat": {
     "line number": [
      62
     ]
    },
    "lat.neighbors": {
     "line number": [
      63
     ]
    },
    "range": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.make_chain_with_params": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      68,
      69
     ]
    },
    "lat": {
     "line number": [
      69,
      73
     ]
    },
    "lat.neighbors": {
     "line number": [
      74
     ]
    },
    "range": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.make_spectrum": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.SpectralDensity": {
     "line number": [
      47
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      48
     ]
    },
    "kwant.tests.test_kpm.p": {
     "line number": [
      51,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.make_spectrum_and_peaks": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.ham": {
     "line number": [
      108
     ]
    },
    "kwant.tests.test_kpm.kpm_derivative": {
     "line number": [
      109,
      110
     ]
    },
    "kwant.tests.test_kpm.make_spectrum": {
     "line number": [
      108
     ]
    },
    "numpy.diff": {
     "line number": [
      113
     ]
    },
    "numpy.max": {
     "line number": [
      114
     ]
    },
    "numpy.sign": {
     "line number": [
      113
     ]
    },
    "numpy.where": {
     "line number": [
      113,
      117,
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.tests.test_kpm.p": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "kwant.tests.test_kpm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "kwant.tests.test_kpm.simps": {
  "data": {
   "shadows": "scipy.integrate.simps"
  },
  "type": "import"
 },
 "kwant.tests.test_kpm.sla": {
  "data": {
   "shadows": "scipy.sparse.linalg"
  },
  "type": "import"
 },
 "kwant.tests.test_kpm.test_api_ham": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      162
     ]
    },
    "kwant.tests.test_kpm.SpectralDensity": {
     "line number": [
      163
     ]
    },
    "kwant.tests.test_kpm.pytest": {
     "line number": [
      162
     ]
    },
    "str": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_api_operator": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      168
     ]
    },
    "kwant.tests.test_kpm.SpectralDensity": {
     "line number": [
      169
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      169
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      169
     ]
    },
    "kwant.tests.test_kpm.pytest": {
     "line number": [
      168
     ]
    },
    "str": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_api_single_eigenvalue_error": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      174
     ]
    },
    "complex": {
     "line number": [
      175
     ]
    },
    "kwant.tests.test_kpm.SpectralDensity": {
     "line number": [
      175
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      175
     ]
    },
    "kwant.tests.test_kpm.pytest": {
     "line number": [
      174
     ]
    },
    "numpy.identity": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_bounds": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "ensure_rng": {
     "line number": [
      217,
      220
     ]
    },
    "float": {
     "line number": [
      222,
      224
     ]
    },
    "kwant.tests.test_kpm.SpectralDensity": {
     "line number": [
      218,
      226
     ]
    },
    "kwant.tests.test_kpm.assert_allclose_sp": {
     "line number": [
      229
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      214,
      221
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      214,
      218,
      223,
      225,
      226
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      214
     ]
    },
    "numpy.exp": {
     "line number": [
      221
     ]
    },
    "numpy.pi": {
     "line number": [
      221
     ]
    },
    "scipy.sparse.linalg.eigsh": {
     "line number": [
      222,
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_call": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.assert_allclose_sp": {
     "line number": [
      514
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      509
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      509,
      510
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      509
     ]
    },
    "kwant.tests.test_kpm.make_spectrum": {
     "line number": [
      510
     ]
    },
    "kwant.tests.test_kpm.p": {
     "line number": [
      510
     ]
    },
    "numpy.array": {
     "line number": [
      511
     ]
    },
    "spectrum": {
     "line number": [
      510,
      511
     ]
    },
    "spectrum.densities": {
     "line number": [
      514
     ]
    },
    "spectrum.energies": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_call_no_argument": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.assert_allclose_sp": {
     "line number": [
      504,
      505
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      499
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      499,
      500
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      499
     ]
    },
    "kwant.tests.test_kpm.make_spectrum": {
     "line number": [
      500
     ]
    },
    "kwant.tests.test_kpm.p": {
     "line number": [
      500
     ]
    },
    "spectrum": {
     "line number": [
      501
     ]
    },
    "spectrum.densities": {
     "line number": [
      505
     ]
    },
    "spectrum.energies": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_check_convergence_decreasing_values": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.TOL_WEAK": {
     "line number": [
      444
     ]
    },
    "kwant.tests.test_kpm.deviation_from_eigenvalues": {
     "line number": [
      439
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      431,
      431,
      432,
      439
     ]
    },
    "numpy.all": {
     "line number": [
      443
     ]
    },
    "numpy.diff": {
     "line number": [
      443
     ]
    },
    "numpy.random.seed": {
     "line number": [
      435
     ]
    },
    "numpy.sum": {
     "line number": [
      443,
      444
     ]
    },
    "range": {
     "line number": [
      429,
      438
     ]
    },
    "types.SimpleNamespace": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_convergence_custom_vector_factory": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "deviation": {
     "line number": [
      486
     ]
    },
    "ensure_rng": {
     "line number": [
      450
     ]
    },
    "kwant.tests.test_kpm.TOL_WEAK": {
     "line number": [
      491
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      476,
      476,
      477,
      483
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      483,
      484,
      486
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      483
     ]
    },
    "kwant.tests.test_kpm.make_spectrum": {
     "line number": [
      484
     ]
    },
    "numpy.all": {
     "line number": [
      490
     ]
    },
    "numpy.diff": {
     "line number": [
      490
     ]
    },
    "numpy.sum": {
     "line number": [
      490,
      491
     ]
    },
    "range": {
     "line number": [
      474,
      482
     ]
    },
    "types.SimpleNamespace": {
     "line number": [
      475
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_convergence_custom_vector_factory.deviation": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      461
     ]
    },
    "kwant.tests.test_kpm.find_peaks_in_an_array": {
     "line number": [
      457
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      460,
      468,
      469
     ]
    },
    "len": {
     "line number": [
      469
     ]
    },
    "numpy.abs": {
     "line number": [
      459,
      467
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      460,
      468
     ]
    },
    "numpy.max": {
     "line number": [
      459,
      466
     ]
    },
    "numpy.min": {
     "line number": [
      467
     ]
    },
    "range": {
     "line number": [
      469
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_convergence_custom_vector_factory.random_binary_vectors": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.dim": {
     "line number": [
      453
     ]
    },
    "numpy.rint": {
     "line number": [
      453
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_energy_resolution": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.SpectralDensity": {
     "line number": [
      186,
      190
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      182
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      182,
      186,
      190
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      182
     ]
    },
    "numpy.all": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_increase_energy_resolution": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.ham": {
     "line number": [
      533
     ]
    },
    "kwant.tests.test_kpm.make_spectrum_and_peaks": {
     "line number": [
      533
     ]
    },
    "kwant.tests.test_kpm.p": {
     "line number": [
      533
     ]
    },
    "numpy.abs": {
     "line number": [
      536,
      542
     ]
    },
    "numpy.diff": {
     "line number": [
      536,
      542
     ]
    },
    "numpy.max": {
     "line number": [
      536,
      542
     ]
    },
    "spectrum": {
     "line number": [
      533
     ]
    },
    "spectrum.add_moments": {
     "line number": [
      538
     ]
    },
    "spectrum.energies": {
     "line number": [
      536,
      542
     ]
    },
    "spectrum.num_moments": {
     "line number": [
      535,
      539
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_increase_num_moments": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "copy.copy": {
     "line number": [
      337,
      349
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      336,
      340,
      351,
      356
     ]
    },
    "kwant.tests.test_kpm.make_spectrum": {
     "line number": [
      336,
      340,
      351,
      356
     ]
    },
    "kwant.tests.test_kpm.p": {
     "line number": [
      336,
      337,
      338,
      341,
      349,
      350,
      356
     ]
    },
    "numpy.all": {
     "line number": [
      344,
      353,
      358
     ]
    },
    "numpy.array": {
     "line number": [
      344,
      345,
      358,
      359
     ]
    },
    "numpy.asarray": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_increase_num_moments_op": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.assert_allclose_sp": {
     "line number": [
      375
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      365,
      366
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      365,
      368,
      369
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      365
     ]
    },
    "kwant.tests.test_kpm.make_spectrum": {
     "line number": [
      368,
      369
     ]
    },
    "kwant.tests.test_kpm.p": {
     "line number": [
      368,
      369
     ]
    },
    "numpy.identity": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_increase_num_vectors": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "copy.copy": {
     "line number": [
      381
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      384,
      385
     ]
    },
    "kwant.tests.test_kpm.make_spectrum": {
     "line number": [
      384,
      385
     ]
    },
    "kwant.tests.test_kpm.p": {
     "line number": [
      381,
      382,
      385,
      386
     ]
    },
    "numpy.all": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_integrate": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.TOL": {
     "line number": [
      527
     ]
    },
    "kwant.tests.test_kpm.TOL_SP": {
     "line number": [
      525
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      520
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      520,
      521
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      520
     ]
    },
    "kwant.tests.test_kpm.make_spectrum": {
     "line number": [
      521
     ]
    },
    "kwant.tests.test_kpm.p": {
     "line number": [
      521
     ]
    },
    "numpy.abs": {
     "line number": [
      523,
      526
     ]
    },
    "numpy.ones_like": {
     "line number": [
      522
     ]
    },
    "scipy.integrate.simps": {
     "line number": [
      524
     ]
    },
    "spectrum": {
     "line number": [
      521
     ]
    },
    "spectrum.densities": {
     "line number": [
      524
     ]
    },
    "spectrum.energies": {
     "line number": [
      524
     ]
    },
    "spectrum.integrate": {
     "line number": [
      524,
      525,
      526,
      526
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_invalid_input": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      394,
      398
     ]
    },
    "ValueError": {
     "line number": [
      403,
      406,
      408,
      412,
      415,
      418
     ]
    },
    "kwant.tests.test_kpm.SpectralDensity": {
     "line number": [
      395,
      397,
      404,
      405,
      413,
      414
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      395,
      397,
      404,
      405,
      413,
      414
     ]
    },
    "kwant.tests.test_kpm.p": {
     "line number": [
      402,
      404
     ]
    },
    "kwant.tests.test_kpm.pytest": {
     "line number": [
      394,
      398,
      403,
      406,
      408,
      412,
      415,
      418
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_kwant_op": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.assert_allclose": {
     "line number": [
      279
     ]
    },
    "kwant.tests.test_kpm.assert_allclose_sp": {
     "line number": [
      283
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      274
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      273,
      275,
      277
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      270
     ]
    },
    "kwant.tests.test_kpm.make_chain": {
     "line number": [
      269
     ]
    },
    "kwant.tests.test_kpm.make_spectrum": {
     "line number": [
      271,
      275
     ]
    },
    "kwant.tests.test_kpm.p": {
     "line number": [
      271,
      275
     ]
    },
    "numpy.identity": {
     "line number": [
      274
     ]
    },
    "numpy.sum": {
     "line number": [
      279
     ]
    },
    "spectrum_syst": {
     "line number": [
      283
     ]
    },
    "spectrum_syst.densities": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_kwant_op_current": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.assert_allclose": {
     "line number": [
      308
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      290
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      301,
      305
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      295
     ]
    },
    "kwant.tests.test_kpm.make_chain_with_params": {
     "line number": [
      294
     ]
    },
    "kwant.tests.test_kpm.make_spectrum": {
     "line number": [
      297,
      305
     ]
    },
    "kwant.tests.test_kpm.p": {
     "line number": [
      297,
      305
     ]
    },
    "spectrum_syst": {
     "line number": [
      297
     ]
    },
    "spectrum_syst.densities": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_kwant_op_current.my_current": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "current": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_kwant_op_integrate": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.assert_allclose": {
     "line number": [
      326
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      320
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      319,
      321,
      324
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      316
     ]
    },
    "kwant.tests.test_kpm.make_chain": {
     "line number": [
      315
     ]
    },
    "kwant.tests.test_kpm.make_spectrum": {
     "line number": [
      317,
      321
     ]
    },
    "kwant.tests.test_kpm.p": {
     "line number": [
      317,
      321
     ]
    },
    "numpy.identity": {
     "line number": [
      320
     ]
    },
    "numpy.ones_like": {
     "line number": [
      322
     ]
    },
    "numpy.sum": {
     "line number": [
      326
     ]
    },
    "spectrum_syst": {
     "line number": [
      317
     ]
    },
    "spectrum_syst.densities.shape": {
     "line number": [
      324
     ]
    },
    "spectrum_syst.integrate": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_kwant_syst": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.assert_allclose": {
     "line number": [
      261,
      262
     ]
    },
    "kwant.tests.test_kpm.make_chain": {
     "line number": [
      252
     ]
    },
    "kwant.tests.test_kpm.make_spectrum": {
     "line number": [
      253,
      257,
      258
     ]
    },
    "kwant.tests.test_kpm.p": {
     "line number": [
      253,
      257,
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_operator_none": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.SpectralDensity": {
     "line number": [
      203,
      204
     ]
    },
    "kwant.tests.test_kpm.assert_allclose_sp": {
     "line number": [
      207
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      200,
      201
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      200,
      203,
      204
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      200
     ]
    },
    "numpy.identity": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_operator_user": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "kwant.tests.test_kpm.SpectralDensity": {
     "line number": [
      240,
      241
     ]
    },
    "kwant.tests.test_kpm.assert_allclose_sp": {
     "line number": [
      244
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      236,
      237
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      236,
      240,
      241
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      236
     ]
    },
    "numpy.dot": {
     "line number": [
      238
     ]
    },
    "numpy.identity": {
     "line number": [
      237
     ]
    },
    "numpy.vdot": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_kpm.test_rescale": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": {
    "_rescale": {
     "line number": [
      552
     ]
    },
    "kwant.tests.test_kpm.TOL": {
     "line number": [
      564
     ]
    },
    "kwant.tests.test_kpm.dim": {
     "line number": [
      549
     ]
    },
    "kwant.tests.test_kpm.ham": {
     "line number": [
      549,
      550,
      552,
      554,
      554,
      563
     ]
    },
    "kwant.tests.test_kpm.kwant": {
     "line number": [
      549
     ]
    },
    "kwant.tests.test_kpm.make_spectrum_and_peaks": {
     "line number": [
      550
     ]
    },
    "kwant.tests.test_kpm.p": {
     "line number": [
      550
     ]
    },
    "len": {
     "line number": [
      554
     ]
    },
    "numpy.abs": {
     "line number": [
      564
     ]
    },
    "numpy.all": {
     "line number": [
      556,
      556,
      564
     ]
    },
    "numpy.identity": {
     "line number": [
      554
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      553,
      563
     ]
    },
    "numpy.vdot": {
     "line number": [
      564
     ]
    },
    "spectrum": {
     "line number": [
      550
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_lattice": {
  "data": {},
  "type": "module"
 },
 "kwant.tests.test_lattice.builder": {
  "data": {
   "shadows": "kwant.builder"
  },
  "type": "import"
 },
 "kwant.tests.test_lattice.ensure_rng": {
  "data": {
   "shadows": "kwant._common.ensure_rng"
  },
  "type": "import"
 },
 "kwant.tests.test_lattice.lattice": {
  "data": {
   "shadows": "kwant.lattice"
  },
  "type": "import"
 },
 "kwant.tests.test_lattice.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.tests.test_lattice.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "kwant.tests.test_lattice.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "kwant.tests.test_lattice.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "kwant.tests.test_lattice.ta": {
  "data": {
   "shadows": "tinyarray"
  },
  "type": "import"
 },
 "kwant.tests.test_lattice.test_closest": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "kwant._common.ensure_rng": {
     "line number": [
      19
     ]
    },
    "kwant.lattice.general": {
     "line number": [
      20,
      25
     ]
    },
    "lat": {
     "line number": [
      23,
      25,
      28
     ]
    },
    "lat.closest": {
     "line number": [
      23,
      28
     ]
    },
    "math.sqrt": {
     "line number": [
      20,
      24
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      24
     ]
    },
    "range": {
     "line number": [
      21,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_lattice.test_general": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      43
     ]
    },
    "kwant.lattice.general": {
     "line number": [
      32,
      33,
      41
     ]
    },
    "lat": {
     "line number": [
      32,
      41,
      42,
      43
     ]
    },
    "lat.sublattices": {
     "line number": [
      35
     ]
    },
    "math.sqrt": {
     "line number": [
      33,
      34
     ]
    },
    "pytest.raises": {
     "line number": [
      43
     ]
    },
    "sl": {
     "line number": [
      37
     ]
    },
    "sl.closest": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_lattice.test_lattice_constraints": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      212
     ]
    },
    "kwant.lattice.general": {
     "line number": [
      213
     ]
    },
    "kwant.tests.test_lattice.pytest": {
     "line number": [
      212,
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_lattice.test_monatomic_lattice": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "kwant.lattice.general": {
     "line number": [
      198
     ]
    },
    "kwant.lattice.square": {
     "line number": [
      197,
      199
     ]
    },
    "lat": {
     "line number": [
      197,
      200,
      200
     ]
    },
    "lat2": {
     "line number": [
      200
     ]
    },
    "lat3": {
     "line number": [
      200
     ]
    },
    "len": {
     "line number": [
      200
     ]
    },
    "numpy.identity": {
     "line number": [
      198
     ]
    },
    "set": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_lattice.test_neighbors": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "kwant.lattice.chain": {
     "line number": [
      53
     ]
    },
    "kwant.lattice.general": {
     "line number": [
      50
     ]
    },
    "kwant.lattice.honeycomb": {
     "line number": [
      47
     ]
    },
    "lat": {
     "line number": [
      47,
      50,
      53
     ]
    },
    "lat.neighbors": {
     "line number": [
      48,
      51,
      54
     ]
    },
    "len": {
     "line number": [
      48,
      51,
      54
     ]
    },
    "range": {
     "line number": [
      48,
      51,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_lattice.test_norbs": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      235
     ]
    },
    "ValueError": {
     "line number": [
      232,
      233,
      237,
      238,
      239
     ]
    },
    "kwant.lattice.general": {
     "line number": [
      219,
      220,
      222,
      225,
      228,
      232,
      233,
      235,
      237,
      238,
      239,
      241,
      242,
      243
     ]
    },
    "lat": {
     "line number": [
      222,
      225,
      228,
      241,
      244,
      245
     ]
    },
    "lat.sublattices": {
     "line number": [
      223,
      226,
      229
     ]
    },
    "lat2": {
     "line number": [
      243,
      245,
      246
     ]
    },
    "numpy.identity": {
     "line number": [
      217
     ]
    },
    "pytest.raises": {
     "line number": [
      232,
      233,
      235,
      237,
      238,
      239
     ]
    },
    "zip": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_lattice.test_shape": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      74
     ]
    },
    "in_circle": {
     "line number": [
      70,
      74
     ]
    },
    "kwant.lattice.TranslationalSymmetry": {
     "line number": [
      79
     ]
    },
    "kwant.lattice.honeycomb": {
     "line number": [
      62
     ]
    },
    "lat": {
     "line number": [
      62
     ]
    },
    "lat.shape": {
     "line number": [
      63,
      74,
      82
     ]
    },
    "lat.sublattices": {
     "line number": [
      65
     ]
    },
    "lat.vec": {
     "line number": [
      78
     ]
    },
    "len": {
     "line number": [
      72,
      72,
      83
     ]
    },
    "list": {
     "line number": [
      63,
      64,
      82
     ]
    },
    "pytest.raises": {
     "line number": [
      74
     ]
    },
    "range": {
     "line number": [
      66,
      67
     ]
    },
    "set": {
     "line number": [
      73,
      73
     ]
    },
    "sl0": {
     "line number": [
      69
     ]
    },
    "sl1": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_lattice.test_shape.in_circle": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "kwant.tests.test_lattice.test_shape.shape": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_lattice.test_symmetry_act": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      262,
      264
     ]
    },
    "all": {
     "line number": [
      259
     ]
    },
    "int": {
     "line number": [
      257,
      258,
      259
     ]
    },
    "kwant.lattice.TranslationalSymmetry": {
     "line number": [
      251
     ]
    },
    "kwant.lattice.square": {
     "line number": [
      250
     ]
    },
    "lat": {
     "line number": [
      250,
      252,
      253,
      253
     ]
    },
    "pytest.raises": {
     "line number": [
      262,
      264
     ]
    },
    "tinyarray.array": {
     "line number": [
      257,
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_lattice.test_symmetry_has_subgroup": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      287,
      291
     ]
    },
    "kwant.builder.NoSymmetry": {
     "line number": [
      273
     ]
    },
    "kwant.lattice.TranslationalSymmetry": {
     "line number": [
      272,
      277,
      279
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      269
     ]
    },
    "pytest.raises": {
     "line number": [
      287,
      291
     ]
    },
    "range": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_lattice.test_translational_symmetry": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      110,
      112,
      119
     ]
    },
    "f2": {
     "line number": [
      134,
      134,
      134,
      134,
      134,
      155,
      155,
      156,
      156
     ]
    },
    "f2p": {
     "line number": [
      155,
      155,
      156,
      156
     ]
    },
    "int": {
     "line number": [
      129
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      161
     ]
    },
    "kwant.lattice.TranslationalSymmetry": {
     "line number": [
      105
     ]
    },
    "kwant.lattice.general": {
     "line number": [
      106,
      107,
      115,
      153,
      163
     ]
    },
    "lat": {
     "line number": [
      163,
      173
     ]
    },
    "numpy.array": {
     "line number": [
      129
     ]
    },
    "numpy.dot": {
     "line number": [
      140,
      171
     ]
    },
    "numpy.identity": {
     "line number": [
      106,
      107,
      153,
      154
     ]
    },
    "numpy.linalg.matrix_rank": {
     "line number": [
      168
     ]
    },
    "pytest.raises": {
     "line number": [
      110,
      112,
      119
     ]
    },
    "range": {
     "line number": [
      165,
      166
     ]
    },
    "shifted": {
     "line number": [
      140,
      149,
      150
     ]
    },
    "tinyarray.add": {
     "line number": [
      108
     ]
    },
    "ts": {
     "line number": [
      111,
      116,
      118,
      122,
      125,
      130,
      132,
      154,
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_lattice.test_translational_symmetry_reversed": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      192
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      178
     ]
    },
    "kwant.lattice.TranslationalSymmetry": {
     "line number": [
      185
     ]
    },
    "kwant.lattice.general": {
     "line number": [
      179
     ]
    },
    "lat": {
     "line number": [
      179,
      180
     ]
    },
    "numpy.array": {
     "line number": [
      190
     ]
    },
    "numpy.identity": {
     "line number": [
      179
     ]
    },
    "range": {
     "line number": [
      180,
      180,
      181,
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_lattice.test_wire": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "kwant._common.ensure_rng": {
     "line number": [
      87
     ]
    },
    "kwant.builder.Builder": {
     "line number": [
      92,
      98
     ]
    },
    "kwant.lattice.TranslationalSymmetry": {
     "line number": [
      92,
      98
     ]
    },
    "kwant.lattice.general": {
     "line number": [
      91
     ]
    },
    "lat": {
     "line number": [
      91
     ]
    },
    "lat.shape": {
     "line number": [
      96
     ]
    },
    "lat.wire": {
     "line number": [
      99
     ]
    },
    "set": {
     "line number": [
      97,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_lattice.test_wire.wire_shape": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      94
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator": {
  "data": {
   "symbols_in_volume": {
    "kwant.operator.Current": {
     "line number": [
      30
     ]
    },
    "kwant.operator.Density": {
     "line number": [
      30
     ]
    },
    "kwant.operator.Source": {
     "line number": [
      30
     ]
    },
    "numpy.array": {
     "line number": [
      25,
      26,
      27,
      28
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.tests.test_operator._perfect_lead": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "kwant.tests.test_operator.kwant": {
     "line number": [
      49,
      50,
      50
     ]
    },
    "lat": {
     "line number": [
      49,
      51,
      53
     ]
    },
    "lat.neighbors": {
     "line number": [
      52
     ]
    },
    "range": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator._random_square_system": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "kwant.tests.test_operator.kwant": {
     "line number": [
      41,
      42
     ]
    },
    "lat": {
     "line number": [
      43,
      45
     ]
    },
    "lat.neighbors": {
     "line number": [
      44
     ]
    },
    "range": {
     "line number": [
      43,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator._random_square_system.random_hopping": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "kwant.tests.test_operator.kwant": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator._random_square_system.random_onsite": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "kwant.tests.test_operator.kwant": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator._test": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "A": {
     "line number": [
      162,
      170,
      175
     ]
    },
    "A.act": {
     "line number": [
      169
     ]
    },
    "A.bind": {
     "line number": [
      165
     ]
    },
    "A.sum": {
     "line number": [
      173,
      174,
      178
     ]
    },
    "numpy.allclose": {
     "line number": [
      163,
      166
     ]
    },
    "numpy.dot": {
     "line number": [
      169
     ]
    },
    "numpy.isclose": {
     "line number": [
      180,
      181,
      183
     ]
    },
    "numpy.sum": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "kwant.tests.test_operator.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "kwant.tests.test_operator.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "kwant.tests.test_operator.f_sigmay": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": {
    "kwant.tests.test_operator.sigma0": {
     "line number": [
      515
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.ft": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "kwant.tests.test_operator.kwant": {
  "data": {
   "shadows": "kwant"
  },
  "type": "import"
 },
 "kwant.tests.test_operator.la": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "kwant.tests.test_operator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.tests.test_operator.ops": {
  "data": {
   "shadows": "kwant.operator"
  },
  "type": "import"
 },
 "kwant.tests.test_operator.opservables": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "kwant.tests.test_operator.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "kwant.tests.test_operator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "kwant.tests.test_operator.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "kwant.tests.test_operator.random_hopping": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "kwant.tests.test_operator.kwant": {
     "line number": [
      511
     ]
    },
    "kwant.tests.test_operator.sigmay": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.random_onsite": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "kwant.tests.test_operator.kwant": {
     "line number": [
      507
     ]
    },
    "kwant.tests.test_operator.sigmaz": {
     "line number": [
      507
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.sigma0": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "kwant.tests.test_operator.sigmax": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "kwant.tests.test_operator.sigmay": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "kwant.tests.test_operator.sigmaz": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "kwant.tests.test_operator.ta": {
  "data": {
   "shadows": "tinyarray"
  },
  "type": "import"
 },
 "kwant.tests.test_operator.test_arg_passing": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "A": {
     "line number": [
      424,
      437,
      481
     ]
    },
    "TypeError": {
     "line number": [
      426,
      428,
      430,
      433,
      446,
      449,
      452,
      456
     ]
    },
    "a": {
     "line number": [
      417,
      418
     ]
    },
    "dict": {
     "line number": [
      425,
      439
     ]
    },
    "hasattr": {
     "line number": [
      432,
      442
     ]
    },
    "kwant.tests.test_operator.kwant": {
     "line number": [
      414,
      416
     ]
    },
    "kwant.tests.test_operator.opservables": {
     "line number": [
      412
     ]
    },
    "kwant.tests.test_operator.pytest": {
     "line number": [
      412
     ]
    },
    "lat1": {
     "line number": [
      414,
      417,
      417
     ]
    },
    "lat1.neighbors": {
     "line number": [
      418
     ]
    },
    "len": {
     "line number": [
      421
     ]
    },
    "numpy.ones": {
     "line number": [
      421
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      460,
      462,
      465,
      469,
      471,
      474,
      488,
      490,
      493,
      497,
      499,
      502
     ]
    },
    "onsite": {
     "line number": [
      481
     ]
    },
    "op": {
     "line number": [
      427,
      432,
      437,
      440,
      442,
      447,
      461,
      481,
      489
     ]
    },
    "op.act": {
     "line number": [
      429,
      441,
      450,
      463,
      491
     ]
    },
    "op.bind": {
     "line number": [
      431,
      453,
      468,
      496
     ]
    },
    "op.tocoo": {
     "line number": [
      434,
      444,
      457,
      466,
      494
     ]
    },
    "op2": {
     "line number": [
      470,
      496,
      498
     ]
    },
    "op2.act": {
     "line number": [
      472,
      500
     ]
    },
    "op2.tocoo": {
     "line number": [
      475,
      503
     ]
    },
    "pytest.raises": {
     "line number": [
      426,
      428,
      430,
      433,
      446,
      449,
      452,
      456
     ]
    },
    "str": {
     "line number": [
      448,
      451,
      454,
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.test_arg_passing.onsite": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "kwant.tests.test_operator.test_operator_construction": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "A": {
     "line number": [
      74,
      83,
      84,
      88,
      89,
      90,
      101,
      102,
      103,
      112,
      113,
      118,
      119,
      123,
      124,
      130,
      136,
      143,
      152,
      156,
      157
     ]
    },
    "A.onsite": {
     "line number": [
      104
     ]
    },
    "A.where": {
     "line number": [
      131,
      137,
      153
     ]
    },
    "A.where.shape": {
     "line number": [
      145
     ]
    },
    "A.where.tag": {
     "line number": [
      144
     ]
    },
    "ValueError": {
     "line number": [
      65,
      70,
      77,
      78,
      79,
      80,
      84,
      102
     ]
    },
    "a": {
     "line number": [
      91,
      92,
      113,
      134,
      135,
      148,
      149,
      153,
      153
     ]
    },
    "a.onsite": {
     "line number": [
      115
     ]
    },
    "a.where": {
     "line number": [
      114
     ]
    },
    "a_nonherm": {
     "line number": [
      93,
      94
     ]
    },
    "all": {
     "line number": [
      115,
      120,
      125,
      144,
      153
     ]
    },
    "kwant.operator.Current": {
     "line number": [
      83,
      88,
      108,
      136,
      152
     ]
    },
    "kwant.operator.Density": {
     "line number": [
      83,
      88,
      107,
      130,
      143
     ]
    },
    "kwant.operator.Source": {
     "line number": [
      83,
      88,
      109
     ]
    },
    "kwant.tests.test_operator._random_square_system": {
     "line number": [
      57
     ]
    },
    "kwant.tests.test_operator.kwant": {
     "line number": [
      62,
      97,
      147
     ]
    },
    "kwant.tests.test_operator.opservables": {
     "line number": [
      64,
      69,
      73,
      101,
      118,
      123,
      156
     ]
    },
    "lat": {
     "line number": [
      57,
      119,
      128,
      128,
      133,
      133,
      133,
      133,
      147
     ]
    },
    "lat2": {
     "line number": [
      98
     ]
    },
    "latnone": {
     "line number": [
      63,
      66
     ]
    },
    "len": {
     "line number": [
      59,
      87
     ]
    },
    "list": {
     "line number": [
      75,
      108
     ]
    },
    "map": {
     "line number": [
      75
     ]
    },
    "numpy.all": {
     "line number": [
      114,
      131,
      137
     ]
    },
    "numpy.arange": {
     "line number": [
      107,
      109
     ]
    },
    "numpy.array": {
     "line number": [
      108
     ]
    },
    "numpy.asarray": {
     "line number": [
      114,
      131,
      134,
      137
     ]
    },
    "numpy.complex128": {
     "line number": [
      91,
      93,
      94
     ]
    },
    "numpy.eye": {
     "line number": [
      70,
      99,
      102,
      104
     ]
    },
    "numpy.float64": {
     "line number": [
      92
     ]
    },
    "numpy.ones": {
     "line number": [
      75,
      87
     ]
    },
    "pytest.raises": {
     "line number": [
      65,
      70,
      77,
      78,
      79,
      80,
      84,
      102
     ]
    },
    "range": {
     "line number": [
      98,
      115,
      120,
      125,
      145
     ]
    },
    "set": {
     "line number": [
      147,
      148
     ]
    },
    "tinyarray.identity": {
     "line number": [
      107,
      108,
      109
     ]
    },
    "tinyarray.matrix": {
     "line number": [
      100
     ]
    },
    "tuple": {
     "line number": [
      129
     ]
    },
    "zip": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.test_operator_construction.where": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "a": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.test_opservables_finite": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      196
     ]
    },
    "kwant.operator.Current": {
     "line number": [
      193,
      222
     ]
    },
    "kwant.operator.Density": {
     "line number": [
      191,
      192,
      208,
      220,
      221
     ]
    },
    "kwant.operator.Source": {
     "line number": [
      194,
      223
     ]
    },
    "kwant.tests.test_operator._random_square_system": {
     "line number": [
      187
     ]
    },
    "kwant.tests.test_operator._test": {
     "line number": [
      198,
      199,
      200,
      201,
      205,
      227,
      228,
      229,
      230
     ]
    },
    "kwant.tests.test_operator.kwant": {
     "line number": [
      213
     ]
    },
    "lat": {
     "line number": [
      187
     ]
    },
    "lat2": {
     "line number": [
      213,
      214
     ]
    },
    "len": {
     "line number": [
      214
     ]
    },
    "numpy.allclose": {
     "line number": [
      197,
      210,
      226
     ]
    },
    "numpy.eye": {
     "line number": [
      215
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      189,
      218
     ]
    },
    "range": {
     "line number": [
      214
     ]
    },
    "tinyarray.matrix": {
     "line number": [
      216
     ]
    },
    "zip": {
     "line number": [
      204,
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.test_opservables_gauged": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "a": {
     "line number": [
      351,
      353
     ]
    },
    "a.tag": {
     "line number": [
      352
     ]
    },
    "collections.deque": {
     "line number": [
      337
     ]
    },
    "enumerate": {
     "line number": [
      348
     ]
    },
    "functools.reduce": {
     "line number": [
      349,
      353
     ]
    },
    "kwant.operator.Current": {
     "line number": [
      370,
      375
     ]
    },
    "kwant.tests.test_operator._test": {
     "line number": [
      371,
      372,
      376,
      377
     ]
    },
    "kwant.tests.test_operator.kwant": {
     "line number": [
      337,
      345,
      346,
      351,
      356,
      356,
      362,
      369,
      374
     ]
    },
    "kwant.tests.test_operator.sigmaz": {
     "line number": [
      342
     ]
    },
    "lat": {
     "line number": [
      345,
      349,
      351,
      357,
      369,
      374
     ]
    },
    "lat.neighbors": {
     "line number": [
      358
     ]
    },
    "minus_x_hoppings": {
     "line number": [
      375
     ]
    },
    "numpy.dot": {
     "line number": [
      349,
      353
     ]
    },
    "numpy.eye": {
     "line number": [
      339,
      340,
      342,
      343
     ]
    },
    "range": {
     "line number": [
      337
     ]
    },
    "save_random_state": {
     "line number": [
      336
     ]
    },
    "x_hoppings": {
     "line number": [
      369,
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.test_opservables_gauged.M_a": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "functools.reduce": {
     "line number": [
      366
     ]
    },
    "kwant.tests.test_operator.sigmaz": {
     "line number": [
      367
     ]
    },
    "numpy.dot": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.test_opservables_gauged.save_random_state": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      329
     ]
    },
    "numpy.random.get_state": {
     "line number": [
      331
     ]
    },
    "numpy.random.set_state": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.test_opservables_infinite": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      239
     ]
    },
    "kwant.operator.Current": {
     "line number": [
      239,
      243
     ]
    },
    "kwant.tests.test_operator._perfect_lead": {
     "line number": [
      234
     ]
    },
    "kwant.tests.test_operator._test": {
     "line number": [
      247
     ]
    },
    "kwant.tests.test_operator.kwant": {
     "line number": [
      242
     ]
    },
    "lat": {
     "line number": [
      234,
      239,
      239,
      242
     ]
    },
    "list": {
     "line number": [
      243
     ]
    },
    "pytest.raises": {
     "line number": [
      239
     ]
    },
    "range": {
     "line number": [
      240
     ]
    },
    "transverse_kind": {
     "line number": [
      243
     ]
    },
    "zip": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.test_opservables_scattering": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "kwant.operator.Current": {
     "line number": [
      272,
      273,
      274,
      275
     ]
    },
    "kwant.tests.test_operator._perfect_lead": {
     "line number": [
      264
     ]
    },
    "kwant.tests.test_operator._random_square_system": {
     "line number": [
      257
     ]
    },
    "kwant.tests.test_operator._test": {
     "line number": [
      282,
      283,
      284,
      285
     ]
    },
    "kwant.tests.test_operator.kwant": {
     "line number": [
      277,
      280
     ]
    },
    "lat": {
     "line number": [
      257,
      260,
      261,
      261,
      262,
      262,
      264,
      270,
      270,
      271,
      271
     ]
    },
    "numpy.abs": {
     "line number": [
      282,
      283,
      284,
      285
     ]
    },
    "numpy.sum": {
     "line number": [
      282,
      283,
      284,
      285
     ]
    },
    "range": {
     "line number": [
      260,
      261,
      262,
      270,
      271
     ]
    },
    "zip": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.test_opservables_spin": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "functools.reduce": {
     "line number": [
      318
     ]
    },
    "kwant.operator.Current": {
     "line number": [
      308
     ]
    },
    "kwant.operator.Source": {
     "line number": [
      313
     ]
    },
    "kwant.tests.test_operator._test": {
     "line number": [
      309,
      310,
      319
     ]
    },
    "kwant.tests.test_operator.kwant": {
     "line number": [
      294,
      295,
      298,
      298,
      305,
      307
     ]
    },
    "kwant.tests.test_operator.sigmax": {
     "line number": [
      313,
      317,
      317
     ]
    },
    "kwant.tests.test_operator.sigmaz": {
     "line number": [
      308
     ]
    },
    "lat": {
     "line number": [
      294,
      296,
      299,
      307,
      313,
      314
     ]
    },
    "lat.neighbors": {
     "line number": [
      297,
      300
     ]
    },
    "numpy.dot": {
     "line number": [
      317,
      317,
      318
     ]
    },
    "numpy.eye": {
     "line number": [
      297,
      300
     ]
    },
    "onsite": {
     "line number": [
      316
     ]
    },
    "range": {
     "line number": [
      296
     ]
    },
    "x_hoppings": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.test_opservables_spin.onsite": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "kwant.tests.test_operator.sigmaz": {
     "line number": [
      291
     ]
    },
    "numpy.eye": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.test_pickling": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "A": {
     "line number": [
      535,
      536,
      537,
      538,
      539,
      540
     ]
    },
    "kwant.operator": {
     "line number": [
      534,
      542,
      542,
      544
     ]
    },
    "kwant.tests.test_operator.f_sigmay": {
     "line number": [
      536,
      540
     ]
    },
    "kwant.tests.test_operator.kwant": {
     "line number": [
      521,
      522
     ]
    },
    "kwant.tests.test_operator.opservables": {
     "line number": [
      518
     ]
    },
    "kwant.tests.test_operator.pickle": {
     "line number": [
      545,
      545
     ]
    },
    "kwant.tests.test_operator.pytest": {
     "line number": [
      518
     ]
    },
    "kwant.tests.test_operator.random_hopping": {
     "line number": [
      524
     ]
    },
    "kwant.tests.test_operator.random_onsite": {
     "line number": [
      523
     ]
    },
    "kwant.tests.test_operator.sigmaz": {
     "line number": [
      537,
      539
     ]
    },
    "lat": {
     "line number": [
      521,
      523
     ]
    },
    "lat.neighbors": {
     "line number": [
      524
     ]
    },
    "len": {
     "line number": [
      527
     ]
    },
    "loaded_op": {
     "line number": [
      546
     ]
    },
    "numpy.all": {
     "line number": [
      546
     ]
    },
    "numpy.random.rand": {
     "line number": [
      527
     ]
    },
    "op": {
     "line number": [
      542,
      544,
      545,
      546
     ]
    },
    "op.bind": {
     "line number": [
      542
     ]
    },
    "range": {
     "line number": [
      523,
      523
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.test_pickling.all_equal": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "all": {
     "line number": [
      532
     ]
    },
    "iter": {
     "line number": [
      530
     ]
    },
    "next": {
     "line number": [
      531
     ]
    },
    "numpy.all": {
     "line number": [
      532
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_operator.test_tocoo": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      409
     ]
    },
    "isinstance": {
     "line number": [
      387
     ]
    },
    "kwant.operator.Density": {
     "line number": [
      386,
      391,
      395,
      403,
      406
     ]
    },
    "kwant.tests.test_operator.kwant": {
     "line number": [
      381,
      382,
      399,
      400
     ]
    },
    "lat1": {
     "line number": [
      383,
      383,
      395
     ]
    },
    "lat2": {
     "line number": [
      400,
      401
     ]
    },
    "numpy.all": {
     "line number": [
      390,
      392,
      396,
      404
     ]
    },
    "numpy.eye": {
     "line number": [
      390,
      392,
      401
     ]
    },
    "pytest.raises": {
     "line number": [
      409
     ]
    },
    "scipy.sparse.coo_matrix": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      35
     ]
    },
    "kwant.tests.test_plotter.matplotlib": {
     "line number": [
      32
     ]
    },
    "kwant.tests.test_plotter.matplotlib_backend_chosen": {
     "line number": [
      31
     ]
    },
    "kwant.tests.test_plotter.sys": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.tests.test_plotter._border_is_0": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "all": {
     "line number": [
      343
     ]
    },
    "numpy.allclose": {
     "line number": [
      343
     ]
    },
    "slice": {
     "line number": [
      341,
      341,
      342,
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter._plotter": {
  "data": {
   "shadows": "kwant._plotter"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter._test_border_0": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "interpolator": {
     "line number": [
      359,
      362
     ]
    },
    "kwant.tests.test_plotter._border_is_0": {
     "line number": [
      360,
      363
     ]
    },
    "kwant.tests.test_plotter.itertools": {
     "line number": [
      358,
      361
     ]
    },
    "kwant.tests.test_plotter.kwant": {
     "line number": [
      348,
      349
     ]
    },
    "lat": {
     "line number": [
      349,
      350,
      350,
      351,
      351
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.bad_transform": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.div": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "len": {
     "line number": [
      293,
      294
     ]
    },
    "numpy.gradient": {
     "line number": [
      295
     ]
    },
    "range": {
     "line number": [
      295
     ]
    },
    "sum": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.ensure_rng": {
  "data": {
   "shadows": "kwant._common.ensure_rng"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.good_transform": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.kwant": {
  "data": {
   "shadows": "kwant"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.matplotlib_backend_chosen": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "kwant.tests.test_plotter.mplot3d": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.plotter": {
  "data": {
   "shadows": "kwant.plotter"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.pyplot": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.rotational_currents": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      309
     ]
    },
    "enumerate": {
     "line number": [
      313
     ]
    },
    "frozenset": {
     "line number": [
      314
     ]
    },
    "int": {
     "line number": [
      310,
      311
     ]
    },
    "len": {
     "line number": [
      335
     ]
    },
    "max": {
     "line number": [
      331
     ]
    },
    "numpy.finfo": {
     "line number": [
      331
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      330
     ]
    },
    "numpy.zeros": {
     "line number": [
      308,
      310,
      311
     ]
    },
    "sum": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.scipy.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.syst_2d": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "kwant.tests.test_plotter.kwant": {
     "line number": [
      69,
      70,
      79,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.syst_2d.ring": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.syst_3d": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      105
     ]
    },
    "kwant.tests.test_plotter.kwant": {
     "line number": [
      93,
      94,
      102,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.syst_3d.ring": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.syst_rect": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "kwant.tests.test_plotter.kwant": {
     "line number": [
      268,
      280,
      281
     ]
    },
    "lat": {
     "line number": [
      276,
      282
     ]
    },
    "lat.neighbors": {
     "line number": [
      278,
      283
     ]
    },
    "lat.vec": {
     "line number": [
      280
     ]
    },
    "range": {
     "line number": [
      276,
      277,
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.syst_rect.onsite": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "kwant.tests.test_plotter.kwant": {
     "line number": [
      274
     ]
    },
    "repr": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.ta": {
  "data": {
   "shadows": "tinyarray"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "kwant.tests.test_plotter.test_bands": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "kwant._plotter.mpl_available": {
     "line number": [
      201
     ]
    },
    "kwant.plotter.bands": {
     "line number": [
      207,
      208,
      209,
      213
     ]
    },
    "kwant.tests.test_plotter.pytest": {
     "line number": [
      201
     ]
    },
    "kwant.tests.test_plotter.syst_2d": {
     "line number": [
      204
     ]
    },
    "kwant.tests.test_plotter.tempfile": {
     "line number": [
      206
     ]
    },
    "matplotlib.pyplot.Figure": {
     "line number": [
      211
     ]
    },
    "numpy.linspace": {
     "line number": [
      209
     ]
    },
    "numpy.pi": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_current": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": {
    "J": {
     "line number": [
      517,
      518
     ]
    },
    "kwant._plotter.mpl_available": {
     "line number": [
      514
     ]
    },
    "kwant.plotter.current": {
     "line number": [
      522,
      526
     ]
    },
    "kwant.tests.test_plotter.kwant": {
     "line number": [
      517,
      518
     ]
    },
    "kwant.tests.test_plotter.pytest": {
     "line number": [
      514
     ]
    },
    "kwant.tests.test_plotter.syst_2d": {
     "line number": [
      516
     ]
    },
    "kwant.tests.test_plotter.tempfile": {
     "line number": [
      521
     ]
    },
    "matplotlib.pyplot.Figure": {
     "line number": [
      524
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_current_interpolation": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "J": {
     "line number": [
      460
     ]
    },
    "J_cut": {
     "line number": [
      456
     ]
    },
    "TypeError": {
     "line number": [
      428
     ]
    },
    "abs": {
     "line number": [
      467
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      484
     ]
    },
    "kwant.plotter.interpolate_current": {
     "line number": [
      428,
      438,
      460,
      494,
      495,
      498,
      505
     ]
    },
    "kwant.tests.test_plotter._test_border_0": {
     "line number": [
      438
     ]
    },
    "kwant.tests.test_plotter.div": {
     "line number": [
      507
     ]
    },
    "kwant.tests.test_plotter.itertools": {
     "line number": [
      478
     ]
    },
    "kwant.tests.test_plotter.kwant": {
     "line number": [
      449,
      454,
      455,
      474,
      475
     ]
    },
    "kwant.tests.test_plotter.pytest": {
     "line number": [
      428
     ]
    },
    "kwant.tests.test_plotter.rotational_currents": {
     "line number": [
      483
     ]
    },
    "kwant.tests.test_plotter.syst_2d": {
     "line number": [
      428
     ]
    },
    "kwant.tests.test_plotter.syst_rect": {
     "line number": [
      448
     ]
    },
    "lat": {
     "line number": [
      447,
      448,
      474,
      476,
      476,
      476,
      476,
      479,
      479
     ]
    },
    "len": {
     "line number": [
      485,
      486,
      489
     ]
    },
    "make_lattice": {
     "line number": [
      447
     ]
    },
    "numpy.abs": {
     "line number": [
      465,
      507
     ]
    },
    "numpy.allclose": {
     "line number": [
      492,
      499
     ]
    },
    "numpy.argmin": {
     "line number": [
      465
     ]
    },
    "numpy.linspace": {
     "line number": [
      462
     ]
    },
    "numpy.log": {
     "line number": [
      469,
      511
     ]
    },
    "numpy.max": {
     "line number": [
      507
     ]
    },
    "numpy.sqrt": {
     "line number": [
      474
     ]
    },
    "numpy.zeros": {
     "line number": [
      489
     ]
    },
    "slice": {
     "line number": [
      465
     ]
    },
    "sum": {
     "line number": [
      485,
      486
     ]
    },
    "zip": {
     "line number": [
      463,
      490,
      506
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_current_interpolation.R": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "math.cos": {
     "line number": [
      431,
      431
     ]
    },
    "math.sin": {
     "line number": [
      431,
      431
     ]
    },
    "tinyarray.array": {
     "line number": [
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_current_interpolation.cut": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_current_interpolation.make_lattice": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "R": {
     "line number": [
      434,
      435
     ]
    },
    "kwant.tests.test_plotter.kwant": {
     "line number": [
      436
     ]
    },
    "tinyarray.dot": {
     "line number": [
      434,
      435
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_density_interpolation": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      368
     ]
    },
    "abs": {
     "line number": [
      406
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      412
     ]
    },
    "kwant.plotter.interpolate_density": {
     "line number": [
      368,
      400,
      418,
      419,
      421
     ]
    },
    "kwant.tests.test_plotter._test_border_0": {
     "line number": [
      372
     ]
    },
    "kwant.tests.test_plotter.itertools": {
     "line number": [
      388
     ]
    },
    "kwant.tests.test_plotter.kwant": {
     "line number": [
      372,
      392,
      393
     ]
    },
    "kwant.tests.test_plotter.pytest": {
     "line number": [
      368
     ]
    },
    "kwant.tests.test_plotter.syst_2d": {
     "line number": [
      368
     ]
    },
    "kwant.tests.test_plotter.syst_rect": {
     "line number": [
      390,
      414
     ]
    },
    "lat": {
     "line number": [
      389,
      390,
      413,
      414
     ]
    },
    "len": {
     "line number": [
      415,
      416
     ]
    },
    "make_lattice": {
     "line number": [
      389,
      413
     ]
    },
    "numpy.allclose": {
     "line number": [
      422
     ]
    },
    "numpy.log": {
     "line number": [
      407
     ]
    },
    "numpy.sum": {
     "line number": [
      405
     ]
    },
    "sum": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_density_interpolation.R": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "math.cos": {
     "line number": [
      375,
      375
     ]
    },
    "math.sin": {
     "line number": [
      375,
      375
     ]
    },
    "tinyarray.array": {
     "line number": [
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_density_interpolation.make_lattice": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "R": {
     "line number": [
      381,
      382
     ]
    },
    "kwant.tests.test_plotter.kwant": {
     "line number": [
      379,
      380,
      383
     ]
    },
    "numpy.pi": {
     "line number": [
      379,
      380
     ]
    },
    "tinyarray.dot": {
     "line number": [
      381,
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_importable_without_matplotlib": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      62
     ]
    },
    "exec": {
     "line number": [
      60
     ]
    },
    "issubclass": {
     "line number": [
      62
     ]
    },
    "kwant._plotter.__file__.rpartition": {
     "line number": [
      48
     ]
    },
    "kwant.tests.test_plotter.warnings": {
     "line number": [
      58,
      59
     ]
    },
    "len": {
     "line number": [
      61
     ]
    },
    "open": {
     "line number": [
      53
     ]
    },
    "str": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_map": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      171,
      178
     ]
    },
    "kwant._plotter.mpl_available": {
     "line number": [
      165
     ]
    },
    "kwant.plotter.map": {
     "line number": [
      169,
      171,
      176,
      178
     ]
    },
    "kwant.tests.test_plotter.bad_transform": {
     "line number": [
      173
     ]
    },
    "kwant.tests.test_plotter.good_transform": {
     "line number": [
      169
     ]
    },
    "kwant.tests.test_plotter.pytest": {
     "line number": [
      171,
      178,
      165
     ]
    },
    "kwant.tests.test_plotter.syst_2d": {
     "line number": [
      167
     ]
    },
    "kwant.tests.test_plotter.tempfile": {
     "line number": [
      168
     ]
    },
    "kwant.tests.test_plotter.warnings": {
     "line number": [
      174,
      175
     ]
    },
    "len": {
     "line number": [
      176,
      179
     ]
    },
    "range": {
     "line number": [
      176,
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_mask_interpolate": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      190
     ]
    },
    "ValueError": {
     "line number": [
      195,
      197
     ]
    },
    "issubclass": {
     "line number": [
      190
     ]
    },
    "kwant.plotter.mask_interpolate": {
     "line number": [
      188,
      195,
      197
     ]
    },
    "kwant.tests.test_plotter.pytest": {
     "line number": [
      195,
      197
     ]
    },
    "kwant.tests.test_plotter.warnings": {
     "line number": [
      186,
      187,
      193,
      194
     ]
    },
    "len": {
     "line number": [
      188,
      189,
      196,
      198
     ]
    },
    "numpy.array": {
     "line number": [
      184
     ]
    },
    "numpy.ones": {
     "line number": [
      188,
      196,
      198
     ]
    },
    "str": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_matplotlib_backend_unset": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "kwant.tests.test_plotter.matplotlib_backend_chosen": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_plot": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      121,
      122,
      132,
      133
     ]
    },
    "color": {
     "line number": [
      128,
      134,
      136,
      138,
      138
     ]
    },
    "float": {
     "line number": [
      128,
      139
     ]
    },
    "isinstance": {
     "line number": [
      128,
      138,
      142
     ]
    },
    "iter": {
     "line number": [
      128,
      138
     ]
    },
    "kwant._plotter.mpl_available": {
     "line number": [
      115
     ]
    },
    "kwant.plotter.plot": {
     "line number": [
      117
     ]
    },
    "kwant.tests.test_plotter.pytest": {
     "line number": [
      115
     ]
    },
    "kwant.tests.test_plotter.syst_2d": {
     "line number": [
      118
     ]
    },
    "kwant.tests.test_plotter.syst_3d": {
     "line number": [
      119
     ]
    },
    "kwant.tests.test_plotter.tempfile": {
     "line number": [
      123
     ]
    },
    "kwant.tests.test_plotter.warnings": {
     "line number": [
      150,
      151
     ]
    },
    "len": {
     "line number": [
      130
     ]
    },
    "list": {
     "line number": [
      146
     ]
    },
    "mpl_toolkits.mplot3d.axes3d.Axes3D": {
     "line number": [
      142
     ]
    },
    "next": {
     "line number": [
      128,
      138
     ]
    },
    "plot": {
     "line number": [
      126,
      136,
      142,
      145,
      147,
      149,
      152,
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_spectrum": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      255
     ]
    },
    "dict": {
     "line number": [
      236,
      238,
      243,
      246,
      252,
      257,
      263
     ]
    },
    "kwant._plotter.mpl_available": {
     "line number": [
      216
     ]
    },
    "kwant.plotter.spectrum": {
     "line number": [
      236,
      238,
      242,
      245,
      251,
      256,
      263
     ]
    },
    "kwant.tests.test_plotter.kwant": {
     "line number": [
      225,
      226
     ]
    },
    "kwant.tests.test_plotter.pytest": {
     "line number": [
      255,
      216
     ]
    },
    "kwant.tests.test_plotter.tempfile": {
     "line number": [
      233,
      262
     ]
    },
    "lat": {
     "line number": [
      227
     ]
    },
    "lat.neighbors": {
     "line number": [
      228
     ]
    },
    "matplotlib.pyplot.Figure": {
     "line number": [
      249
     ]
    },
    "numpy.linspace": {
     "line number": [
      231
     ]
    },
    "range": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_spectrum.ham_1d": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_spectrum.ham_2d": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "numpy.eye": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.test_spectrum.mask": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "kwant.tests.test_plotter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "kwant.tests.test_rmt": {
  "data": {
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.tests.test_rmt.assert_allclose": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "kwant.tests.test_rmt.ensure_rng": {
  "data": {
   "shadows": "kwant._common.ensure_rng"
  },
  "type": "import"
 },
 "kwant.tests.test_rmt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.tests.test_rmt.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "kwant.tests.test_rmt.rmt": {
  "data": {
   "shadows": "kwant.rmt"
  },
  "type": "import"
 },
 "kwant.tests.test_rmt.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "kwant.tests.test_rmt.test_circular": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      57
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      52
     ]
    },
    "kwant.rmt.c": {
     "line number": [
      72
     ]
    },
    "kwant.rmt.circular": {
     "line number": [
      57,
      58,
      80,
      92
     ]
    },
    "kwant.rmt.p": {
     "line number": [
      56,
      62,
      64,
      66,
      67
     ]
    },
    "kwant.rmt.sym_list": {
     "line number": [
      55
     ]
    },
    "kwant.rmt.t": {
     "line number": [
      56,
      61,
      64
     ]
    },
    "kwant.tests.test_rmt.assert_allclose": {
     "line number": [
      59,
      65,
      71,
      73
     ]
    },
    "numpy.apply_along_axis": {
     "line number": [
      79,
      91
     ]
    },
    "numpy.array": {
     "line number": [
      80,
      92
     ]
    },
    "numpy.copy": {
     "line number": [
      62,
      67
     ]
    },
    "numpy.dot": {
     "line number": [
      59,
      63,
      63,
      68,
      68
     ]
    },
    "numpy.identity": {
     "line number": [
      54,
      59
     ]
    },
    "numpy.kron": {
     "line number": [
      54
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      77
     ]
    },
    "pytest.raises": {
     "line number": [
      57
     ]
    },
    "range": {
     "line number": [
      81,
      92
     ]
    },
    "scipy.stats.ks_2samp": {
     "line number": [
      82,
      84,
      86,
      88,
      93,
      95
     ]
    },
    "str": {
     "line number": [
      94,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_rmt.test_gaussian_distributions": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "kwant._common.ensure_rng": {
     "line number": [
      42
     ]
    },
    "kwant.rmt.gaussian": {
     "line number": [
      45
     ]
    },
    "kwant.rmt.sym_list": {
     "line number": [
      44
     ]
    },
    "numpy.array": {
     "line number": [
      45
     ]
    },
    "range": {
     "line number": [
      45
     ]
    },
    "scipy.stats.kstest": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_rmt.test_gaussian_symmetries": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      22
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      18
     ]
    },
    "kwant.rmt.c": {
     "line number": [
      35
     ]
    },
    "kwant.rmt.gaussian": {
     "line number": [
      22,
      24
     ]
    },
    "kwant.rmt.h_p_matrix": {
     "line number": [
      31
     ]
    },
    "kwant.rmt.h_t_matrix": {
     "line number": [
      26
     ]
    },
    "kwant.rmt.p": {
     "line number": [
      30
     ]
    },
    "kwant.rmt.sym_list": {
     "line number": [
      20
     ]
    },
    "kwant.rmt.t": {
     "line number": [
      25
     ]
    },
    "kwant.tests.test_rmt.assert_allclose": {
     "line number": [
      28,
      33,
      37
     ]
    },
    "len": {
     "line number": [
      27,
      32
     ]
    },
    "numpy.array": {
     "line number": [
      26,
      31
     ]
    },
    "numpy.diag": {
     "line number": [
      36
     ]
    },
    "numpy.dot": {
     "line number": [
      28,
      28,
      33,
      33,
      37,
      37
     ]
    },
    "numpy.identity": {
     "line number": [
      27,
      32,
      36
     ]
    },
    "numpy.kron": {
     "line number": [
      27,
      32,
      36
     ]
    },
    "pytest.raises": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_system": {
  "data": {},
  "type": "module"
 },
 "kwant.tests.test_system.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "kwant.tests.test_system.ensure_rng": {
  "data": {
   "shadows": "kwant._common.ensure_rng"
  },
  "type": "import"
 },
 "kwant.tests.test_system.kwant": {
  "data": {
   "shadows": "kwant"
  },
  "type": "import"
 },
 "kwant.tests.test_system.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.tests.test_system.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "kwant.tests.test_system.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "kwant.tests.test_system.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "kwant.tests.test_system.test_hamiltonian_submatrix": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      74,
      79,
      80,
      83,
      84
     ]
    },
    "chain": {
     "line number": [
      22,
      24,
      24,
      53,
      54,
      55,
      56,
      56,
      57,
      57,
      66,
      67,
      67,
      77,
      77,
      81,
      81
     ]
    },
    "kwant._common.ensure_rng": {
     "line number": [
      64
     ]
    },
    "kwant.tests.test_system.kwant": {
     "line number": [
      19,
      20,
      52,
      65,
      65,
      70,
      72,
      74
     ]
    },
    "numpy.argsort": {
     "line number": [
      30
     ]
    },
    "numpy.array": {
     "line number": [
      31,
      53,
      54,
      55,
      56,
      57,
      77
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      73
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      35,
      42,
      45,
      49,
      61
     ]
    },
    "numpy.zeros": {
     "line number": [
      66
     ]
    },
    "pytest.raises": {
     "line number": [
      74,
      79,
      80,
      83,
      84
     ]
    },
    "range": {
     "line number": [
      21,
      23
     ]
    },
    "scipy.sparse.isspmatrix_coo": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_system.test_pickling": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "kwant.tests.test_system.copy": {
     "line number": [
      97,
      100
     ]
    },
    "kwant.tests.test_system.kwant": {
     "line number": [
      88,
      89,
      89,
      90,
      102,
      104
     ]
    },
    "kwant.tests.test_system.pickle": {
     "line number": [
      98,
      98,
      101,
      101
     ]
    },
    "lat": {
     "line number": [
      91,
      91,
      92,
      92,
      93,
      93,
      94,
      94
     ]
    },
    "numpy.all": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_wraparound": {
  "data": {
   "symbols_in_volume": {
    "kwant._plotter.mpl_available": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.tests.test_wraparound._plotter": {
  "data": {
   "shadows": "kwant._plotter"
  },
  "type": "import"
 },
 "kwant.tests.test_wraparound._simple_syst": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "kwant.tests.test_wraparound.kwant": {
     "line number": [
      28,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_wraparound.get_parameters": {
  "data": {
   "shadows": "kwant._common.get_parameters"
  },
  "type": "import"
 },
 "kwant.tests.test_wraparound.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "kwant.tests.test_wraparound.kwant": {
  "data": {
   "shadows": "kwant"
  },
  "type": "import"
 },
 "kwant.tests.test_wraparound.mplot3d": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d"
  },
  "type": "import"
 },
 "kwant.tests.test_wraparound.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.tests.test_wraparound.plot_2d_bands": {
  "data": {
   "shadows": "kwant.wraparound.plot_2d_bands"
  },
  "type": "import"
 },
 "kwant.tests.test_wraparound.pyplot": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "kwant.tests.test_wraparound.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "kwant.tests.test_wraparound.ta": {
  "data": {
   "shadows": "tinyarray"
  },
  "type": "import"
 },
 "kwant.tests.test_wraparound.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "kwant.tests.test_wraparound.test_consistence_with_bands": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "bands": {
     "line number": [
      45
     ]
    },
    "kwant.tests.test_wraparound._simple_syst": {
     "line number": [
      40
     ]
    },
    "kwant.tests.test_wraparound.kwant": {
     "line number": [
      39,
      39,
      44
     ]
    },
    "kwant.wraparound.wraparound": {
     "line number": [
      41,
      42
     ]
    },
    "numpy.linalg.eigvalsh": {
     "line number": [
      50
     ]
    },
    "numpy.linspace": {
     "line number": [
      38
     ]
    },
    "numpy.pi": {
     "line number": [
      38,
      38
     ]
    },
    "numpy.sort": {
     "line number": [
      50
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_wraparound.test_fd_mismatch": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "all": {
     "line number": [
      293,
      304,
      318,
      328
     ]
    },
    "kwant.tests.test_wraparound.kwant": {
     "line number": [
      241,
      242,
      244,
      248,
      253,
      264,
      267,
      268,
      271,
      272,
      273,
      296,
      297,
      298,
      308,
      310,
      311,
      320,
      321,
      335,
      337,
      338,
      345,
      346,
      354,
      355,
      363,
      364
     ]
    },
    "kwant.wraparound.wraparound": {
     "line number": [
      258,
      259,
      260
     ]
    },
    "l": {
     "line number": [
      269,
      270
     ]
    },
    "lat": {
     "line number": [
      241,
      245,
      245,
      246,
      246,
      249,
      249,
      250,
      250,
      264,
      296,
      308,
      312,
      313,
      322,
      323,
      335,
      339,
      340,
      343,
      343,
      356,
      357,
      358,
      359,
      362,
      362
     ]
    },
    "lat.neighbors": {
     "line number": [
      300,
      314,
      324
     ]
    },
    "lat.shape": {
     "line number": [
      299
     ]
    },
    "lat.sublattices": {
     "line number": [
      266
     ]
    },
    "numpy.allclose": {
     "line number": [
      293,
      304,
      318,
      328,
      372
     ]
    },
    "numpy.array": {
     "line number": [
      292,
      303,
      317,
      327,
      360,
      361
     ]
    },
    "numpy.eye": {
     "line number": [
      296,
      308,
      335
     ]
    },
    "numpy.linalg.eigvalsh": {
     "line number": [
      350,
      369
     ]
    },
    "numpy.linspace": {
     "line number": [
      351,
      370
     ]
    },
    "numpy.pi": {
     "line number": [
      351,
      351,
      370,
      370
     ]
    },
    "numpy.sqrt": {
     "line number": [
      240
     ]
    },
    "numpy.zeros": {
     "line number": [
      347,
      366
     ]
    },
    "range": {
     "line number": [
      269,
      269
     ]
    },
    "spec": {
     "line number": [
      292,
      292,
      303,
      303,
      317,
      317,
      327,
      327
     ]
    },
    "spectrum": {
     "line number": [
      289,
      302,
      316,
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_wraparound.test_fd_mismatch.shape": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_wraparound.test_fd_mismatch.spectrum": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "kwant.wraparound.wraparound": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_wraparound.test_fd_mismatch.spectrum._": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "B": {
     "line number": [
      286
     ]
    },
    "kwant.tests.test_wraparound.kwant": {
     "line number": [
      285
     ]
    },
    "list": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_wraparound.test_opposite_hoppings": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "kwant.tests.test_wraparound.kwant": {
     "line number": [
      57,
      60,
      60
     ]
    },
    "kwant.wraparound.wraparound": {
     "line number": [
      65
     ]
    },
    "lat": {
     "line number": [
      61,
      62,
      62,
      63,
      63
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_wraparound.test_plot_2d_bands": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      210,
      213
     ]
    },
    "ValueError": {
     "line number": [
      216,
      218
     ]
    },
    "chain": {
     "line number": [
      192
     ]
    },
    "chain.neighbors": {
     "line number": [
      193
     ]
    },
    "cube": {
     "line number": [
      199
     ]
    },
    "cube.neighbors": {
     "line number": [
      200
     ]
    },
    "kwant._plotter.mpl_available": {
     "line number": [
      184
     ]
    },
    "kwant.tests.test_wraparound._simple_syst": {
     "line number": [
      195,
      196
     ]
    },
    "kwant.tests.test_wraparound.kwant": {
     "line number": [
      186,
      187,
      188,
      189,
      191,
      191,
      198,
      198
     ]
    },
    "kwant.tests.test_wraparound.pytest": {
     "line number": [
      210,
      213,
      216,
      218,
      184
     ]
    },
    "kwant.tests.test_wraparound.tempfile": {
     "line number": [
      203,
      222
     ]
    },
    "kwant.wraparound.plot_2d_bands": {
     "line number": [
      205,
      206,
      211,
      214,
      217,
      219,
      224,
      225,
      226,
      230,
      232
     ]
    },
    "kwant.wraparound.wraparound": {
     "line number": [
      205,
      206,
      214,
      217,
      219,
      223,
      228
     ]
    },
    "numpy.linspace": {
     "line number": [
      225,
      226
     ]
    },
    "numpy.pi": {
     "line number": [
      225,
      225,
      226,
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_wraparound.test_signatures": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "kwant._common.get_parameters": {
     "line number": [
      144,
      154
     ]
    },
    "kwant.tests.test_wraparound.kwant": {
     "line number": [
      109,
      110,
      110
     ]
    },
    "kwant.wraparound.wraparound": {
     "line number": [
      131
     ]
    },
    "lat": {
     "line number": [
      109,
      112,
      113,
      113,
      115,
      116,
      116,
      118,
      119,
      119,
      122,
      122,
      123,
      123,
      125,
      125,
      126,
      126,
      128,
      128,
      129,
      129,
      138,
      139,
      140,
      148,
      148,
      149,
      149,
      150,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_wraparound.test_symmetry": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      176
     ]
    },
    "getattr": {
     "line number": [
      174,
      175
     ]
    },
    "kwant._common.get_parameters": {
     "line number": [
      177
     ]
    },
    "kwant.tests.test_wraparound._simple_syst": {
     "line number": [
      159
     ]
    },
    "kwant.tests.test_wraparound.kwant": {
     "line number": [
      159
     ]
    },
    "kwant.wraparound.wraparound": {
     "line number": [
      169
     ]
    },
    "new": {
     "line number": [
      179,
      181
     ]
    },
    "numpy.all": {
     "line number": [
      179,
      181
     ]
    },
    "numpy.random.rand": {
     "line number": [
      161
     ]
    },
    "orig": {
     "line number": [
      179,
      181
     ]
    },
    "range": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_wraparound.test_value_types": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      101
     ]
    },
    "float": {
     "line number": [
      79,
      79,
      80,
      80,
      81,
      81
     ]
    },
    "kwant.tests.test_wraparound._simple_syst": {
     "line number": [
      77,
      86,
      103
     ]
    },
    "kwant.tests.test_wraparound.itertools": {
     "line number": [
      74,
      102
     ]
    },
    "kwant.tests.test_wraparound.kwant": {
     "line number": [
      71,
      71,
      73
     ]
    },
    "kwant.wraparound.wraparound": {
     "line number": [
      77,
      86,
      103
     ]
    },
    "lat": {
     "line number": [
      73,
      74,
      76,
      77,
      86,
      103
     ]
    },
    "lat.vec": {
     "line number": [
      73,
      73
     ]
    },
    "numpy.array": {
     "line number": [
      80,
      80
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      88,
      105
     ]
    },
    "tinyarray.array": {
     "line number": [
      81,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.tests.test_wraparound.wraparound": {
  "data": {
   "shadows": "kwant.wraparound.wraparound"
  },
  "type": "import"
 },
 "kwant.version": {
  "data": {
   "symbols_in_volume": {
    "kwant.version.init": {
     "line number": [
      128
     ]
    },
    "kwant.version.os": {
     "line number": [
      19,
      19,
      20
     ]
    },
    "kwant.version.package_root": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "kwant.version.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "kwant.version.distr_root": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "kwant.version.ensure_python": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "kwant.version.sys": {
     "line number": [
      23,
      29,
      30
     ]
    },
    "print": {
     "line number": [
      29
     ]
    },
    "str": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.version.get_version_from_git": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      38,
      56,
      73
     ]
    },
    "kwant.version.distr_root": {
     "line number": [
      36,
      43,
      54,
      72
     ]
    },
    "kwant.version.os": {
     "line number": [
      42
     ]
    },
    "kwant.version.subprocess": {
     "line number": [
      35,
      37,
      37,
      53,
      55,
      55,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.version.get_version_from_git_archive": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      95
     ]
    },
    "len": {
     "line number": [
      106
     ]
    },
    "set": {
     "line number": [
      105,
      106
     ]
    },
    "sorted": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.version.init": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "exec": {
     "line number": [
      118
     ]
    },
    "kwant.version.get_version_from_git": {
     "line number": [
      122
     ]
    },
    "kwant.version.get_version_from_git_archive": {
     "line number": [
      124
     ]
    },
    "kwant.version.os": {
     "line number": [
      117
     ]
    },
    "kwant.version.package_root": {
     "line number": [
      117
     ]
    },
    "open": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "kwant.version.package_root": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "kwant.version.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "kwant.version.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "kwant.version.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "kwant.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "kwant.wraparound": {
  "data": {},
  "type": "module"
 },
 "kwant.wraparound.WrappedBuilder": {
  "data": {
   "lineno": 72
  },
  "type": "class"
 },
 "kwant.wraparound.WrappedBuilder.finalized": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "super": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "kwant.wraparound._hashable": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      30
     ]
    },
    "kwant.wraparound.collections": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound._memoize": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "kwant.wraparound._memoize.lookup": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "f": {
     "line number": [
      47
     ]
    },
    "id": {
     "line number": [
      44
     ]
    },
    "kwant.wraparound._hashable": {
     "line number": [
      44
     ]
    },
    "tuple": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound._set_signature": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "kwant.wraparound.inspect": {
     "line number": [
      63,
      63,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound.cmath": {
  "data": {
   "shadows": "cmath"
  },
  "type": "import"
 },
 "kwant.wraparound.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "kwant.wraparound.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "kwant.wraparound.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "kwant.wraparound.plot_2d_bands": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      384,
      389
     ]
    },
    "ValueError": {
     "line number": [
      395,
      397
     ]
    },
    "hasattr": {
     "line number": [
      383
     ]
    },
    "isinstance": {
     "line number": [
      386
     ]
    },
    "numpy.abs": {
     "line number": [
      419
     ]
    },
    "numpy.array": {
     "line number": [
      400,
      424
     ]
    },
    "numpy.concatenate": {
     "line number": [
      410
     ]
    },
    "numpy.dot": {
     "line number": [
      413
     ]
    },
    "numpy.linalg.pinv": {
     "line number": [
      402
     ]
    },
    "numpy.linspace": {
     "line number": [
      428
     ]
    },
    "numpy.max": {
     "line number": [
      419
     ]
    },
    "numpy.pi": {
     "line number": [
      413
     ]
    },
    "tinyarray.dot": {
     "line number": [
      408
     ]
    },
    "zip": {
     "line number": [
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound.plot_2d_bands.ham": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      445
     ]
    },
    "momentum_to_lattice": {
     "line number": [
      444
     ]
    },
    "zip": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound.plot_2d_bands.momentum_to_lattice": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      438
     ]
    },
    "abs": {
     "line number": [
      437
     ]
    },
    "numpy.any": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound.plot_2d_bands.outside_bz": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": {
    "numpy.argmin": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "kwant.wraparound.scipy.spatial": {
  "data": {
   "shadows": "scipy.spatial"
  },
  "type": "import"
 },
 "kwant.wraparound.ta": {
  "data": {
   "shadows": "tinyarray"
  },
  "type": "import"
 },
 "kwant.wraparound.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "kwant.wraparound.wraparound": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "HermConjOfFunc": {
     "line number": [
      291
     ]
    },
    "IndexError": {
     "line number": [
      210
     ]
    },
    "RuntimeWarning": {
     "line number": [
      242
     ]
    },
    "TranslationalSymmetry": {
     "line number": [
      219,
      220
     ]
    },
    "ValueError": {
     "line number": [
      211
     ]
    },
    "any": {
     "line number": [
      280
     ]
    },
    "bind_hopping": {
     "line number": [
      282
     ]
    },
    "bind_hopping_as_site": {
     "line number": [
      277
     ]
    },
    "bind_site": {
     "line number": [
      233,
      235,
      256
     ]
    },
    "bind_sum": {
     "line number": [
      302,
      305
     ]
    },
    "callable": {
     "line number": [
      233,
      235,
      256,
      280,
      289
     ]
    },
    "enumerate": {
     "line number": [
      266
     ]
    },
    "herm_conj": {
     "line number": [
      293
     ]
    },
    "isinstance": {
     "line number": [
      290
     ]
    },
    "kwant.wraparound.WrappedBuilder": {
     "line number": [
      215,
      219
     ]
    },
    "kwant.wraparound.collections": {
     "line number": [
      247
     ]
    },
    "kwant.wraparound.warnings": {
     "line number": [
      238
     ]
    },
    "len": {
     "line number": [
      209,
      223,
      302,
      305
     ]
    },
    "list": {
     "line number": [
      218,
      247
     ]
    },
    "range": {
     "line number": [
      209
     ]
    },
    "tinyarray.array": {
     "line number": [
      266
     ]
    },
    "tuple": {
     "line number": [
      222
     ]
    },
    "val": {
     "line number": [
      251,
      256,
      256,
      256,
      258,
      277,
      280,
      282,
      282,
      289,
      290,
      291,
      291,
      293,
      293,
      295,
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound.wraparound.bind_hopping": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      140
     ]
    },
    "f": {
     "line number": [
      142,
      143
     ]
    },
    "get_parameters": {
     "line number": [
      141
     ]
    },
    "kwant.wraparound._memoize": {
     "line number": [
      131
     ]
    },
    "kwant.wraparound._set_signature": {
     "line number": [
      142
     ]
    },
    "val": {
     "line number": [
      140,
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound.wraparound.bind_hopping.f": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      136
     ]
    },
    "kwant.wraparound.cmath": {
     "line number": [
      135
     ]
    },
    "tinyarray.dot": {
     "line number": [
      135
     ]
    },
    "val": {
     "line number": [
      136,
      136,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound.wraparound.bind_hopping_as_site": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      126
     ]
    },
    "f": {
     "line number": [
      128,
      129
     ]
    },
    "get_parameters": {
     "line number": [
      127
     ]
    },
    "kwant.wraparound._memoize": {
     "line number": [
      116
     ]
    },
    "kwant.wraparound._set_signature": {
     "line number": [
      128
     ]
    },
    "val": {
     "line number": [
      126,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound.wraparound.bind_hopping_as_site.f": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      121
     ]
    },
    "herm_conj": {
     "line number": [
      123
     ]
    },
    "kwant.wraparound.cmath": {
     "line number": [
      120
     ]
    },
    "tinyarray.dot": {
     "line number": [
      120
     ]
    },
    "val": {
     "line number": [
      121,
      121,
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound.wraparound.bind_site": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      112
     ]
    },
    "f": {
     "line number": [
      113,
      114
     ]
    },
    "get_parameters": {
     "line number": [
      113
     ]
    },
    "kwant.wraparound._memoize": {
     "line number": [
      106
     ]
    },
    "kwant.wraparound._set_signature": {
     "line number": [
      113
     ]
    },
    "val": {
     "line number": [
      112,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound.wraparound.bind_site.f": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "val": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound.wraparound.bind_sum": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      171
     ]
    },
    "f": {
     "line number": [
      205
     ]
    },
    "f.__signature__": {
     "line number": [
      204
     ]
    },
    "get_parameters": {
     "line number": [
      174
     ]
    },
    "kwant.wraparound._memoize": {
     "line number": [
      145
     ]
    },
    "kwant.wraparound.collections": {
     "line number": [
      160
     ]
    },
    "kwant.wraparound.inspect": {
     "line number": [
      165,
      166,
      181,
      182,
      186,
      187,
      204
     ]
    },
    "len": {
     "line number": [
      194
     ]
    },
    "list": {
     "line number": [
      191
     ]
    },
    "range": {
     "line number": [
      163,
      194
     ]
    },
    "sorted": {
     "line number": [
      194
     ]
    },
    "tuple": {
     "line number": [
      198
     ]
    },
    "val": {
     "line number": [
      170,
      171,
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "kwant.wraparound.wraparound.bind_sum.f": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      154
     ]
    },
    "tuple": {
     "line number": [
      153
     ]
    },
    "val": {
     "line number": [
      151,
      154,
      155,
      157
     ]
    }
   }
  },
  "type": "function"
 }
}