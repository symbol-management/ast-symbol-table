{
 "dolfin_adjoint": {
  "lineno": null,
  "symbols_in_volume": [
   "pyadjoint.__version__"
  ],
  "type": "module"
 },
 "fenics_adjoint": {
  "lineno": null,
  "symbols_in_volume": [
   "fenics",
   "pyadjoint.__version__",
   "sys.modules"
  ],
  "type": "module"
 },
 "fenics_adjoint.assembly": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fenics_adjoint.assembly.AssembleBlock": {
  "lineno": 61,
  "symbols_in_volume": [
   "pyadjoint.block.Block"
  ],
  "type": "class"
 },
 "fenics_adjoint.assembly.AssembleBlock.__init__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.assembly.AssembleBlock.__str__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.assembly.AssembleBlock.evaluate_adj_component": {
  "lineno": 82,
  "symbols_in_volume": [
   "backend.Constant",
   "backend.Function",
   "backend.TestFunction",
   "backend.derivative"
  ],
  "type": "function"
 },
 "fenics_adjoint.assembly.AssembleBlock.evaluate_hessian_component": {
  "lineno": 128,
  "symbols_in_volume": [
   "backend.Constant",
   "backend.Expression",
   "backend.Function",
   "backend.TestFunction",
   "backend.derivative"
  ],
  "type": "function"
 },
 "fenics_adjoint.assembly.AssembleBlock.evaluate_tlm_component": {
  "lineno": 112,
  "symbols_in_volume": [
   "backend.derivative"
  ],
  "type": "function"
 },
 "fenics_adjoint.assembly.AssembleBlock.prepare_evaluate_adj": {
  "lineno": 71,
  "symbols_in_volume": [
   "ufl.replace"
  ],
  "type": "function"
 },
 "fenics_adjoint.assembly.AssembleBlock.prepare_evaluate_hessian": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.assembly.AssembleBlock.prepare_evaluate_tlm": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.assembly.AssembleBlock.prepare_recompute_component": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.assembly.AssembleBlock.recompute_component": {
  "lineno": 171,
  "symbols_in_volume": [
   "backend.assemble",
   "pyadjoint.overloaded_type.create_overloaded_object"
  ],
  "type": "function"
 },
 "fenics_adjoint.assembly.assemble": {
  "lineno": 9,
  "symbols_in_volume": [
   "backend.assemble",
   "pyadjoint.overloaded_type.create_overloaded_object",
   "pyadjoint.tape.annotate_tape",
   "pyadjoint.tape.get_working_tape",
   "pyadjoint.tape.stop_annotating"
  ],
  "type": "function"
 },
 "fenics_adjoint.assembly.assemble_system": {
  "lineno": 36,
  "symbols_in_volume": [
   "backend.assemble_system"
  ],
  "type": "function"
 },
 "fenics_adjoint.interpolation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fenics_adjoint.interpolation.interpolate": {
  "lineno": 5,
  "symbols_in_volume": [
   "backend.interpolate",
   "pyadjoint.overloaded_type.create_overloaded_object"
  ],
  "type": "function"
 },
 "fenics_adjoint.lusolver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fenics_adjoint.lusolver.LUSolver": {
  "lineno": 6,
  "symbols_in_volume": [
   "backend.LUSolver"
  ],
  "type": "class"
 },
 "fenics_adjoint.lusolver.LUSolver.__init__": {
  "lineno": 9,
  "symbols_in_volume": [
   "backend.LUSolver.__init__"
  ],
  "type": "function"
 },
 "fenics_adjoint.lusolver.LUSolver.set_operator": {
  "lineno": 17,
  "symbols_in_volume": [
   "backend.LUSolver.set_operator"
  ],
  "type": "function"
 },
 "fenics_adjoint.lusolver.LUSolver.solve": {
  "lineno": 21,
  "symbols_in_volume": [
   "backend.LUSolver.solve",
   "pyadjoint.tape.annotate_tape",
   "pyadjoint.tape.get_working_tape"
  ],
  "type": "function"
 },
 "fenics_adjoint.newton_solver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fenics_adjoint.newton_solver.NewtonSolver": {
  "lineno": 6,
  "symbols_in_volume": [
   "backend.NewtonSolver"
  ],
  "type": "class"
 },
 "fenics_adjoint.newton_solver.NewtonSolver.solve": {
  "lineno": 7,
  "symbols_in_volume": [
   "backend.NewtonSolver.solve",
   "backend.as_backend_type",
   "pyadjoint.tape.annotate_tape",
   "pyadjoint.tape.get_working_tape"
  ],
  "type": "function"
 },
 "fenics_adjoint.projection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fenics_adjoint.projection.ProjectBlock": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fenics_adjoint.projection.ProjectBlock.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "backend.TestFunction",
   "backend.TrialFunction",
   "backend.dx",
   "backend.inner"
  ],
  "type": "function"
 },
 "fenics_adjoint.projection.project": {
  "lineno": 8,
  "symbols_in_volume": [
   "backend.project",
   "pyadjoint.overloaded_type.create_overloaded_object",
   "pyadjoint.tape.annotate_tape",
   "pyadjoint.tape.get_working_tape",
   "pyadjoint.tape.stop_annotating"
  ],
  "type": "function"
 },
 "fenics_adjoint.solving": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fenics_adjoint.solving.Form": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "class"
 },
 "fenics_adjoint.solving.Form.__init__": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.solving.Form.__mul__": {
  "lineno": 564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.solving.Form.apply_boundary_conditions": {
  "lineno": 529,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.intc"
  ],
  "type": "function"
 },
 "fenics_adjoint.solving.Form.compute": {
  "lineno": 543,
  "symbols_in_volume": [
   "backend.as_backend_type",
   "backend.assemble"
  ],
  "type": "function"
 },
 "fenics_adjoint.solving.Form.data": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.solving.Form.derivative": {
  "lineno": 490,
  "symbols_in_volume": [
   "backend.Constant",
   "backend.Expression",
   "backend.TrialFunction",
   "backend.derivative",
   "ufl.algorithms.expand_derivatives"
  ],
  "type": "function"
 },
 "fenics_adjoint.solving.Form.set_boundary_conditions": {
  "lineno": 517,
  "symbols_in_volume": [
   "backend.DirichletBC"
  ],
  "type": "function"
 },
 "fenics_adjoint.solving.Form.transpose": {
  "lineno": 513,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.solving.SolveBlock": {
  "lineno": 43,
  "symbols_in_volume": [
   "pyadjoint.block.Block"
  ],
  "type": "class"
 },
 "fenics_adjoint.solving.SolveBlock.__init__": {
  "lineno": 44,
  "symbols_in_volume": [
   "backend.adjoint",
   "ufl.Form",
   "ufl.equation.Equation"
  ],
  "type": "function"
 },
 "fenics_adjoint.solving.SolveBlock.__str__": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.solving.SolveBlock.evaluate_adj_component": {
  "lineno": 163,
  "symbols_in_volume": [
   "backend.Constant",
   "backend.DirichletBC",
   "backend.Function",
   "backend.TrialFunction",
   "backend.adjoint",
   "backend.derivative"
  ],
  "type": "function"
 },
 "fenics_adjoint.solving.SolveBlock.evaluate_hessian_component": {
  "lineno": 358,
  "symbols_in_volume": [
   "backend.Constant",
   "backend.DirichletBC",
   "backend.Expression",
   "backend.TrialFunction",
   "backend.action",
   "backend.adjoint",
   "backend.derivative",
   "ufl.algorithms.expand_derivatives"
  ],
  "type": "function"
 },
 "fenics_adjoint.solving.SolveBlock.evaluate_tlm_component": {
  "lineno": 227,
  "symbols_in_volume": [
   "backend.DirichletBC",
   "backend.Function",
   "backend.derivative"
  ],
  "type": "function"
 },
 "fenics_adjoint.solving.SolveBlock.prepare_evaluate_adj": {
  "lineno": 114,
  "symbols_in_volume": [
   "backend.DirichletBC",
   "backend.TrialFunction",
   "backend.action",
   "backend.adjoint",
   "backend.derivative",
   "ufl.replace"
  ],
  "type": "function"
 },
 "fenics_adjoint.solving.SolveBlock.prepare_evaluate_hessian": {
  "lineno": 265,
  "symbols_in_volume": [
   "backend.DirichletBC",
   "backend.Function",
   "backend.action",
   "backend.adjoint",
   "backend.assemble",
   "backend.derivative",
   "ufl.algorithms.expand_derivatives",
   "ufl.replace"
  ],
  "type": "function"
 },
 "fenics_adjoint.solving.SolveBlock.prepare_evaluate_tlm": {
  "lineno": 196,
  "symbols_in_volume": [
   "backend.TrialFunction",
   "backend.action",
   "backend.assemble",
   "backend.derivative",
   "ufl.replace"
  ],
  "type": "function"
 },
 "fenics_adjoint.solving.SolveBlock.prepare_recompute_component": {
  "lineno": 439,
  "symbols_in_volume": [
   "backend.DirichletBC",
   "backend.Function",
   "backend.Function.assign",
   "ufl.replace"
  ],
  "type": "function"
 },
 "fenics_adjoint.solving.SolveBlock.recompute_component": {
  "lineno": 468,
  "symbols_in_volume": [
   "backend.solve"
  ],
  "type": "function"
 },
 "fenics_adjoint.solving.solve": {
  "lineno": 13,
  "symbols_in_volume": [
   "backend.solve",
   "pyadjoint.tape.annotate_tape",
   "pyadjoint.tape.get_working_tape",
   "pyadjoint.tape.stop_annotating"
  ],
  "type": "function"
 },
 "fenics_adjoint.types": {
  "lineno": null,
  "symbols_in_volume": [
   "backend.__name__",
   "numpy.float64",
   "pyadjoint.adjfloat.AdjFloat",
   "pyadjoint.overloaded_type.register_overloaded_type"
  ],
  "type": "module"
 },
 "fenics_adjoint.types.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "fenics_adjoint.backend.Expression",
   "fenics_adjoint.backend.Function",
   "fenics_adjoint.backend.FunctionSpace",
   "fenics_adjoint.backend.FunctionSpace.sub",
   "fenics_adjoint.backend.__name__",
   "fenics_adjoint.backend.assemble",
   "fenics_adjoint.backend.cpp.function.Function",
   "fenics_adjoint.backend.cpp.function.FunctionSpace",
   "fenics_adjoint.backend.cpp.la.GenericMatrix",
   "fenics_adjoint.backend.cpp.la.GenericVector",
   "fenics_adjoint.backend.cpp.la.Matrix",
   "fenics_adjoint.backend.function.expression.BaseExpression",
   "fenics_adjoint.backend.functionspaceimpl.FunctionSpace",
   "fenics_adjoint.backend.functionspaceimpl.FunctionSpace._ad_parent_space",
   "fenics_adjoint.backend.functionspaceimpl.MixedFunctionSpace",
   "fenics_adjoint.backend.functionspaceimpl.WithGeometry",
   "fenics_adjoint.backend.functionspaceimpl.WithGeometry._ad_parent_space",
   "fenics_adjoint.backend.matrix.MatrixBase",
   "fenics_adjoint.backend.solve",
   "fenics_adjoint.backend.vector.Vector"
  ],
  "type": "module"
 },
 "fenics_adjoint.types.compat._fs_sub": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.compat.assemble_adjoint_value": {
  "lineno": 112,
  "symbols_in_volume": [
   "fenics_adjoint.backend.Function",
   "fenics_adjoint.backend.assemble"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.compat.constant_function_firedrake_compat": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.compat.create_bc": {
  "lineno": 147,
  "symbols_in_volume": [
   "fenics_adjoint.backend.DirichletBC",
   "fenics_adjoint.backend.FunctionSpace"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.compat.extract_bc_subvector": {
  "lineno": 200,
  "symbols_in_volume": [
   "fenics_adjoint.backend.Function",
   "fenics_adjoint.backend.FunctionAssigner",
   "fenics_adjoint.backend.FunctionSpace"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.compat.extract_mesh_from_form": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.compat.extract_subfunction": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.compat.function_from_vector": {
  "lineno": 175,
  "symbols_in_volume": [
   "fenics_adjoint.backend.Function",
   "fenics_adjoint.backend.Vector",
   "fenics_adjoint.backend.cpp.la.PETScVector",
   "fenics_adjoint.backend.cpp.la.Vector"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.compat.gather": {
  "lineno": 232,
  "symbols_in_volume": [
   "fenics_adjoint.backend.cpp.function.Function",
   "fenics_adjoint.backend.cpp.la.GenericVector",
   "numpy.arange"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.compat.inner": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.compat.linalg_solve": {
  "lineno": 246,
  "symbols_in_volume": [
   "fenics_adjoint.backend.solve"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.constant": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fenics_adjoint.types.constant.AssignBlock": {
  "lineno": 127,
  "symbols_in_volume": [
   "pyadjoint.block.Block"
  ],
  "type": "class"
 },
 "fenics_adjoint.types.constant.AssignBlock.__init__": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.AssignBlock.evaluate_adj_component": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.AssignBlock.evaluate_hessian_component": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.AssignBlock.evaluate_tlm_component": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.AssignBlock.recompute_component": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant": {
  "lineno": 10,
  "symbols_in_volume": [
   "backend.Constant",
   "pyadjoint.overloaded_type.OverloadedType",
   "pyadjoint.overloaded_type.register_overloaded_type"
  ],
  "type": "class"
 },
 "fenics_adjoint.types.constant.Constant.__init__": {
  "lineno": 12,
  "symbols_in_volume": [
   "backend.Constant.__init__"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._ad_add": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._ad_assign_numpy": {
  "lineno": 64,
  "symbols_in_volume": [
   "backend.Constant",
   "numpy.reshape"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._ad_convert_type": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._ad_copy": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._ad_create_checkpoint": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._ad_dim": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._ad_dot": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._ad_function_space": {
  "lineno": 44,
  "symbols_in_volume": [
   "backend.FunctionSpace"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._ad_mul": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._ad_restore_at_checkpoint": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._ad_to_list": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._applyBinary": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._applyUnary": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._constant_from_values": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.reshape"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._iadd": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._imul": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant._reduce": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant.adj_update_value": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant.assign": {
  "lineno": 16,
  "symbols_in_volume": [
   "backend.Constant.assign",
   "pyadjoint.overloaded_type.OverloadedType",
   "pyadjoint.overloaded_type.create_overloaded_object",
   "pyadjoint.tape.get_working_tape"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.constant.Constant.get_derivative": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.dirichletbc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fenics_adjoint.types.dirichletbc.DirichletBC": {
  "lineno": 19,
  "symbols_in_volume": [
   "backend.DirichletBC",
   "pyadjoint.overloaded_type.FloatingType"
  ],
  "type": "class"
 },
 "fenics_adjoint.types.dirichletbc.DirichletBC.__init__": {
  "lineno": 20,
  "symbols_in_volume": [
   "backend.DirichletBC.__init__",
   "pyadjoint.overloaded_type.FloatingType.__init__"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.dirichletbc.DirichletBC._ad_create_checkpoint": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.dirichletbc.DirichletBC._ad_restore_at_checkpoint": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.dirichletbc.DirichletBC.apply": {
  "lineno": 38,
  "symbols_in_volume": [
   "backend.DirichletBC.apply",
   "pyadjoint.tape.no_annotations"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.dirichletbc.DirichletBCBlock": {
  "lineno": 81,
  "symbols_in_volume": [
   "pyadjoint.block.Block"
  ],
  "type": "class"
 },
 "fenics_adjoint.types.dirichletbc.DirichletBCBlock.__init__": {
  "lineno": 82,
  "symbols_in_volume": [
   "pyadjoint.block.Block.__init__",
   "pyadjoint.overloaded_type.OverloadedType"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.dirichletbc.DirichletBCBlock.__str__": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.dirichletbc.DirichletBCBlock.evaluate_adj_component": {
  "lineno": 105,
  "symbols_in_volume": [
   "backend.Expression",
   "backend.Function",
   "backend.MPI.comm_world",
   "backend.cpp.la.Vector"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.dirichletbc.DirichletBCBlock.evaluate_hessian_component": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.dirichletbc.DirichletBCBlock.evaluate_tlm_component": {
  "lineno": 155,
  "symbols_in_volume": [
   "backend.project",
   "ufl.Coefficient"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.dirichletbc.DirichletBCBlock.recompute": {
  "lineno": 177,
  "symbols_in_volume": [
   "pyadjoint.tape.no_annotations"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.dirichletbc._build_subindices": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.dirichletbc._extract_subindices": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.expression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fenics_adjoint.types.expression.BaseExpression": {
  "lineno": 16,
  "symbols_in_volume": [
   "pyadjoint.overloaded_type.FloatingType"
  ],
  "type": "class"
 },
 "fenics_adjoint.types.expression.BaseExpression.__init__": {
  "lineno": 17,
  "symbols_in_volume": [
   "pyadjoint.overloaded_type.FloatingType.__init__",
   "pyadjoint.tape.annotate_tape"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.expression.BaseExpression.__setattr__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.expression.BaseExpression._ad_backend_setattr_": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.expression.BaseExpression._ad_create_checkpoint": {
  "lineno": 39,
  "symbols_in_volume": [
   "pyadjoint.overloaded_type.OverloadedType"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.expression.BaseExpression._ad_function_space": {
  "lineno": 31,
  "symbols_in_volume": [
   "backend.FunctionSpace"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.expression.BaseExpression._ad_restore_at_checkpoint": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.expression.BaseExpression.save_attribute": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.expression.CompiledExpression": {
  "lineno": 69,
  "symbols_in_volume": [
   "backend.CompiledExpression"
  ],
  "type": "class"
 },
 "fenics_adjoint.types.expression.CompiledExpression.__init__": {
  "lineno": 70,
  "symbols_in_volume": [
   "backend.CompiledExpression.__init__",
   "pyadjoint.overloaded_type.OverloadedType",
   "pyadjoint.tape.annotate_tape"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.expression.CompiledExpression._ad_backend_setattr_": {
  "lineno": 86,
  "symbols_in_volume": [
   "backend.CompiledExpression.__setattr__",
   "pyadjoint.overloaded_type.OverloadedType"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.expression.Expression": {
  "lineno": 106,
  "symbols_in_volume": [
   "backend.Expression"
  ],
  "type": "class"
 },
 "fenics_adjoint.types.expression.Expression.__init__": {
  "lineno": 107,
  "symbols_in_volume": [
   "backend.Expression.__init__",
   "pyadjoint.tape.annotate_tape"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.expression.Expression._ad_backend_setattr_": {
  "lineno": 116,
  "symbols_in_volume": [
   "backend.Expression.__setattr__"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.expression.ExpressionBlock": {
  "lineno": 120,
  "symbols_in_volume": [
   "pyadjoint.block.Block"
  ],
  "type": "class"
 },
 "fenics_adjoint.types.expression.ExpressionBlock.__init__": {
  "lineno": 121,
  "symbols_in_volume": [
   "pyadjoint.overloaded_type.OverloadedType"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.expression.ExpressionBlock.__str__": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.expression.ExpressionBlock.evaluate_adj_component": {
  "lineno": 132,
  "symbols_in_volume": [
   "backend.Constant",
   "backend.Function",
   "backend.interpolate",
   "pyadjoint.adjfloat.AdjFloat"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.expression.ExpressionBlock.evaluate_hessian_component": {
  "lineno": 190,
  "symbols_in_volume": [
   "backend.Constant",
   "backend.Function",
   "backend.interpolate",
   "backend.project",
   "pyadjoint.adjfloat.AdjFloat"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.expression.ExpressionBlock.evaluate_tlm_component": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.expression.ExpressionBlock.recompute_component": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.expression.UserExpression": {
  "lineno": 93,
  "symbols_in_volume": [
   "backend.UserExpression"
  ],
  "type": "class"
 },
 "fenics_adjoint.types.expression.UserExpression.__init__": {
  "lineno": 94,
  "symbols_in_volume": [
   "backend.UserExpression.__init__",
   "pyadjoint.tape.annotate_tape"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.expression.UserExpression._ad_backend_setattr_": {
  "lineno": 102,
  "symbols_in_volume": [
   "backend.UserExpression.__setattr__"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fenics_adjoint.types.function.AssignBlock": {
  "lineno": 236,
  "symbols_in_volume": [
   "pyadjoint.block.Block"
  ],
  "type": "class"
 },
 "fenics_adjoint.types.function.AssignBlock.__init__": {
  "lineno": 237,
  "symbols_in_volume": [
   "pyadjoint.overloaded_type.OverloadedType"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.AssignBlock.evaluate_adj_component": {
  "lineno": 265,
  "symbols_in_volume": [
   "backend.Constant",
   "backend.Function",
   "pyadjoint.adjfloat.AdjFloat",
   "ufl.algorithms.expand_derivatives",
   "ufl.derivative"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.AssignBlock.evaluate_hessian_component": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.AssignBlock.evaluate_tlm_component": {
  "lineno": 296,
  "symbols_in_volume": [
   "backend.Function",
   "backend.Function.assign"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.AssignBlock.prepare_evaluate_adj": {
  "lineno": 251,
  "symbols_in_volume": [
   "ufl.replace"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.AssignBlock.prepare_evaluate_hessian": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.AssignBlock.prepare_evaluate_tlm": {
  "lineno": 283,
  "symbols_in_volume": [
   "backend.Function",
   "ufl.replace"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.AssignBlock.prepare_recompute_component": {
  "lineno": 315,
  "symbols_in_volume": [
   "ufl.replace"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.AssignBlock.recompute_component": {
  "lineno": 324,
  "symbols_in_volume": [
   "backend.Function",
   "backend.Function.assign"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function": {
  "lineno": 13,
  "symbols_in_volume": [
   "backend.Function",
   "pyadjoint.overloaded_type.FloatingType",
   "pyadjoint.overloaded_type.register_overloaded_type"
  ],
  "type": "class"
 },
 "fenics_adjoint.types.function.Function.__init__": {
  "lineno": 15,
  "symbols_in_volume": [
   "backend.Function.__init__"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._ad_add": {
  "lineno": 146,
  "symbols_in_volume": [
   "backend.Function",
   "backend.Function.assign",
   "pyadjoint.overloaded_type.get_overloaded_class",
   "pyadjoint.tape.no_annotations"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._ad_assign_numpy": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._ad_convert_type": {
  "lineno": 93,
  "symbols_in_volume": [
   "backend.GenericVector",
   "backend.TestFunction",
   "backend.TrialFunction",
   "backend.assemble",
   "backend.dx",
   "backend.grad",
   "backend.inner",
   "backend.solve",
   "pyadjoint.tape.no_annotations"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._ad_copy": {
  "lineno": 183,
  "symbols_in_volume": [
   "backend.Function",
   "backend.Function.assign",
   "pyadjoint.overloaded_type.get_overloaded_class"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._ad_create_checkpoint": {
  "lineno": 124,
  "symbols_in_volume": [
   "backend.Function.sub"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._ad_dim": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._ad_dot": {
  "lineno": 152,
  "symbols_in_volume": [
   "backend.assemble",
   "backend.dx",
   "backend.grad",
   "backend.inner"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._ad_init_object": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._ad_mul": {
  "lineno": 140,
  "symbols_in_volume": [
   "backend.Function",
   "backend.Function.assign",
   "pyadjoint.overloaded_type.get_overloaded_class",
   "pyadjoint.tape.no_annotations"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._ad_restore_at_checkpoint": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._ad_to_list": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._applyBinary": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._applyUnary": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._iadd": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._imul": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function._reduce": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function.adj_update_value": {
  "lineno": 136,
  "symbols_in_volume": [
   "pyadjoint.tape.no_annotations"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function.assign": {
  "lineno": 50,
  "symbols_in_volume": [
   "pyadjoint.overloaded_type.create_overloaded_object",
   "pyadjoint.tape.annotate_tape",
   "pyadjoint.tape.get_working_tape",
   "pyadjoint.tape.stop_annotating",
   "ufl.core.operator.Operator"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function.copy": {
  "lineno": 33,
  "symbols_in_volume": [
   "backend.Function.copy",
   "pyadjoint.overloaded_type.create_overloaded_object",
   "pyadjoint.tape.annotate_tape",
   "pyadjoint.tape.get_working_tape"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function.split": {
  "lineno": 70,
  "symbols_in_volume": [
   "backend.Function.function_space",
   "backend.Function.split",
   "pyadjoint.tape.annotate_tape"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.Function.vector": {
  "lineno": 88,
  "symbols_in_volume": [
   "backend.Function.vector"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.MergeBlock": {
  "lineno": 353,
  "symbols_in_volume": [
   "pyadjoint.block.Block"
  ],
  "type": "class"
 },
 "fenics_adjoint.types.function.MergeBlock.__init__": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.MergeBlock.evaluate_adj_component": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.MergeBlock.evaluate_hessian_component": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.MergeBlock.evaluate_tlm": {
  "lineno": 362,
  "symbols_in_volume": [
   "backend.Function",
   "backend.assign"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.MergeBlock.recompute": {
  "lineno": 377,
  "symbols_in_volume": [
   "backend.Function.sub",
   "backend.assign"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.SplitBlock": {
  "lineno": 332,
  "symbols_in_volume": [
   "pyadjoint.block.Block"
  ],
  "type": "class"
 },
 "fenics_adjoint.types.function.SplitBlock.__init__": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.SplitBlock.evaluate_adj_component": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.SplitBlock.evaluate_hessian_component": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.function.SplitBlock.evaluate_tlm_component": {
  "lineno": 341,
  "symbols_in_volume": [
   "backend.Function.sub"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function.SplitBlock.recompute_component": {
  "lineno": 348,
  "symbols_in_volume": [
   "backend.Function.sub"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function._extract_functions_from_lincom": {
  "lineno": 225,
  "symbols_in_volume": [
   "backend.Function"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.function_space": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fenics_adjoint.types.genericmatrix": {
  "lineno": null,
  "symbols_in_volume": [
   "backend.cpp.la.GenericMatrix.__mul__"
  ],
  "type": "module"
 },
 "fenics_adjoint.types.genericmatrix.adjoint_genericmatrix_mul": {
  "lineno": 6,
  "symbols_in_volume": [
   "backend.action",
   "backend.cpp.la.GenericVector"
  ],
  "type": "function"
 },
 "fenics_adjoint.types.genericvector": {
  "lineno": null,
  "symbols_in_volume": [
   "backend.GenericVector._ad_to_list"
  ],
  "type": "module"
 },
 "fenics_adjoint.types.genericvector._ad_to_list": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.types.io": {
  "lineno": null,
  "symbols_in_volume": [
   "backend.HDF5File.read"
  ],
  "type": "module"
 },
 "fenics_adjoint.types.io.HDF5File_read": {
  "lineno": 8,
  "symbols_in_volume": [
   "pyadjoint.tape.annotate_tape"
  ],
  "type": "function"
 },
 "fenics_adjoint.ufl_constraints": {
  "lineno": null,
  "symbols_in_volume": [
   "backend.__name__"
  ],
  "type": "module"
 },
 "fenics_adjoint.ufl_constraints.UFLConstraint": {
  "lineno": 36,
  "symbols_in_volume": [
   "pyadjoint.optimization.constraints.Constraint"
  ],
  "type": "class"
 },
 "fenics_adjoint.ufl_constraints.UFLConstraint.__init__": {
  "lineno": 42,
  "symbols_in_volume": [
   "backend.Function",
   "backend.TestFunction",
   "backend.TrialFunction",
   "backend.derivative",
   "firedrake_adjoint.types.Function",
   "ufl.algorithms.expand_derivatives",
   "ufl.algorithms.extract_arguments",
   "ufl.replace"
  ],
  "type": "function"
 },
 "fenics_adjoint.ufl_constraints.UFLConstraint._get_constraint_dim": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "fenics_adjoint.ufl_constraints.UFLConstraint.function": {
  "lineno": 81,
  "symbols_in_volume": [
   "backend.assemble",
   "fenics_adjoint.types.Constant"
  ],
  "type": "function"
 },
 "fenics_adjoint.ufl_constraints.UFLConstraint.hessian_action": {
  "lineno": 124,
  "symbols_in_volume": [
   "backend.Function",
   "backend.__name__",
   "backend.assemble",
   "ufl.replace"
  ],
  "type": "function"
 },
 "fenics_adjoint.ufl_constraints.UFLConstraint.jacobian": {
  "lineno": 86,
  "symbols_in_volume": [
   "backend.assemble"
  ],
  "type": "function"
 },
 "fenics_adjoint.ufl_constraints.UFLConstraint.jacobian_action": {
  "lineno": 95,
  "symbols_in_volume": [
   "backend.action",
   "backend.assemble"
  ],
  "type": "function"
 },
 "fenics_adjoint.ufl_constraints.UFLConstraint.jacobian_adjoint_action": {
  "lineno": 106,
  "symbols_in_volume": [
   "backend.Function",
   "backend.__name__",
   "backend.assemble",
   "ufl.replace"
  ],
  "type": "function"
 },
 "fenics_adjoint.ufl_constraints.UFLConstraint.output_workspace": {
  "lineno": 148,
  "symbols_in_volume": [
   "backend.assemble",
   "fenics_adjoint.types.Constant"
  ],
  "type": "function"
 },
 "fenics_adjoint.ufl_constraints.UFLConstraint.update_control": {
  "lineno": 71,
  "symbols_in_volume": [
   "backend.Function"
  ],
  "type": "function"
 },
 "fenics_adjoint.ufl_constraints.UFLEqualityConstraint": {
  "lineno": 157,
  "symbols_in_volume": [
   "pyadjoint.optimization.constraints.EqualityConstraint"
  ],
  "type": "class"
 },
 "fenics_adjoint.ufl_constraints.UFLInequalityConstraint": {
  "lineno": 160,
  "symbols_in_volume": [
   "pyadjoint.optimization.constraints.InequalityConstraint"
  ],
  "type": "class"
 },
 "fenics_adjoint.ufl_constraints.as_vec": {
  "lineno": 16,
  "symbols_in_volume": [
   "backend.Function",
   "backend.__name__",
   "fenics_adjoint.types.Constant",
   "firedrake_adjoint.types.Constant",
   "numpy.array"
  ],
  "type": "function"
 },
 "fenics_adjoint.ui": {
  "lineno": null,
  "symbols_in_volume": [
   "backend.__name__",
   "pyadjoint.Tape",
   "pyadjoint.set_working_tape"
  ],
  "type": "module"
 },
 "fenics_adjoint.variational_solver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fenics_adjoint.variational_solver.LinearVariationalProblem": {
  "lineno": 58,
  "symbols_in_volume": [
   "backend.LinearVariationalProblem"
  ],
  "type": "class"
 },
 "fenics_adjoint.variational_solver.LinearVariationalProblem.__init__": {
  "lineno": 61,
  "symbols_in_volume": [
   "pyadjoint.tape.no_annotations"
  ],
  "type": "function"
 },
 "fenics_adjoint.variational_solver.LinearVariationalSolver": {
  "lineno": 73,
  "symbols_in_volume": [
   "backend.LinearVariationalSolver"
  ],
  "type": "class"
 },
 "fenics_adjoint.variational_solver.LinearVariationalSolver.__init__": {
  "lineno": 76,
  "symbols_in_volume": [
   "pyadjoint.tape.no_annotations"
  ],
  "type": "function"
 },
 "fenics_adjoint.variational_solver.LinearVariationalSolver.solve": {
  "lineno": 83,
  "symbols_in_volume": [
   "pyadjoint.tape.annotate_tape",
   "pyadjoint.tape.get_working_tape",
   "pyadjoint.tape.stop_annotating"
  ],
  "type": "function"
 },
 "fenics_adjoint.variational_solver.NonlinearVariationalProblem": {
  "lineno": 6,
  "symbols_in_volume": [
   "backend.NonlinearVariationalProblem"
  ],
  "type": "class"
 },
 "fenics_adjoint.variational_solver.NonlinearVariationalProblem.__init__": {
  "lineno": 9,
  "symbols_in_volume": [
   "pyadjoint.tape.no_annotations"
  ],
  "type": "function"
 },
 "fenics_adjoint.variational_solver.NonlinearVariationalSolver": {
  "lineno": 21,
  "symbols_in_volume": [
   "backend.NonlinearVariationalSolver"
  ],
  "type": "class"
 },
 "fenics_adjoint.variational_solver.NonlinearVariationalSolver.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "pyadjoint.tape.no_annotations"
  ],
  "type": "function"
 },
 "fenics_adjoint.variational_solver.NonlinearVariationalSolver.solve": {
  "lineno": 31,
  "symbols_in_volume": [
   "pyadjoint.tape.annotate_tape",
   "pyadjoint.tape.get_working_tape",
   "pyadjoint.tape.stop_annotating"
  ],
  "type": "function"
 },
 "firedrake_adjoint": {
  "lineno": null,
  "symbols_in_volume": [
   "firedrake",
   "pyadjoint.__version__",
   "sys.modules"
  ],
  "type": "module"
 },
 "firedrake_adjoint.types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "firedrake_adjoint.types.expression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "firedrake_adjoint.types.expression.Expression": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "function"
 },
 "firedrake_adjoint.types.function": {
  "lineno": null,
  "symbols_in_volume": [
   "backend.Function",
   "pyadjoint.overloaded_type.register_overloaded_type"
  ],
  "type": "module"
 },
 "firedrake_adjoint.types.function.Function": {
  "lineno": 8,
  "symbols_in_volume": [
   "fenics_adjoint.types.function.Function"
  ],
  "type": "class"
 },
 "firedrake_adjoint.types.function.Function.project": {
  "lineno": 10,
  "symbols_in_volume": [
   "fenics_adjoint.projection.ProjectBlock",
   "pyadjoint.overloaded_type.create_overloaded_object",
   "pyadjoint.tape.annotate_tape",
   "pyadjoint.tape.get_working_tape",
   "pyadjoint.tape.stop_annotating"
  ],
  "type": "function"
 },
 "firedrake_adjoint.types.function.Function.split": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "firedrake_adjoint.ui": {
  "lineno": null,
  "symbols_in_volume": [
   "pyadjoint.tape.Tape",
   "pyadjoint.tape.set_working_tape"
  ],
  "type": "module"
 },
 "pyadjoint": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.adjfloat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.adjfloat.AddBlock": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.adjfloat.AddBlock.evaluate_adj_component": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AddBlock.evaluate_hessian_component": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AddBlock.evaluate_tlm_component": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.adjfloat.AdjFloat.__add__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat.__div__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat.__init__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat.__mul__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat.__neg__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat.__new__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat.__pow__": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat.__radd__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat.__rmul__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat.__rsub__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat.__sub__": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat.__truediv__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat._ad_add": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat._ad_assign_numpy": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat._ad_convert_type": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat._ad_copy": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat._ad_create_checkpoint": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat._ad_dot": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat._ad_mul": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat._ad_restore_at_checkpoint": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat._ad_to_list": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.AdjFloat.adj_update_value": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.DivBlock": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.adjfloat.DivBlock.evaluate_adj_component": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.DivBlock.evaluate_hessian": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.DivBlock.evaluate_tlm": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.FloatOperatorBlock": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.adjfloat.FloatOperatorBlock.__init__": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.FloatOperatorBlock.recompute_component": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.MulBlock": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.adjfloat.MulBlock.evaluate_adj_component": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.MulBlock.evaluate_hessian_component": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.MulBlock.evaluate_tlm_component": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.NegBlock": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.adjfloat.NegBlock.evaluate_adj_component": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.NegBlock.evaluate_hessian": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.NegBlock.evaluate_tlm_component": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.PowBlock": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.adjfloat.PowBlock.evaluate_adj_component": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "pyadjoint.adjfloat.PowBlock.evaluate_hessian": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "pyadjoint.adjfloat.PowBlock.evaluate_tlm": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "pyadjoint.adjfloat.SubBlock": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.adjfloat.SubBlock.evaluate_adj_component": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.SubBlock.evaluate_hessian": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.SubBlock.evaluate_tlm": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.annotate_operator": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.adjfloat.annotate_operator.annotated_operator": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.block.Block": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.block.Block.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.add_dependency": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.add_output": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.evaluate_adj": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.evaluate_adj_component": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.evaluate_hessian": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.evaluate_hessian_component": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.evaluate_tlm": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.evaluate_tlm_component": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.get_dependencies": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.get_outputs": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.prepare_evaluate_adj": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.prepare_evaluate_hessian": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.prepare_evaluate_tlm": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.prepare_recompute_component": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.recompute": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.recompute_component": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block.Block.reset_variables": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block_variable": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.block_variable.BlockVariable": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.block_variable.BlockVariable.__init__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block_variable.BlockVariable.__str__": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block_variable.BlockVariable.add_adj_output": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block_variable.BlockVariable.add_hessian_output": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block_variable.BlockVariable.add_tlm_output": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block_variable.BlockVariable.checkpoint": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block_variable.BlockVariable.reset_variables": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block_variable.BlockVariable.save_output": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block_variable.BlockVariable.saved_output": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block_variable.BlockVariable.will_add_as_dependency": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.block_variable.BlockVariable.will_add_as_output": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.control": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.control.Control": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.control.Control.__getattr__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.control.Control.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.control.Control.assign_numpy": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.control.Control.copy_data": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.control.Control.data": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.control.Control.fetch_numpy": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.control.Control.get_derivative": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.control.Control.get_hessian": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.control.Control.mark_as_control": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.control.Control.tape_value": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.control.Control.tlm_value": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.control.Control.unmark_as_control": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.control.Control.update": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.control.Control.update_numpy": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.drivers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.drivers.compute_gradient": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.drivers.compute_hessian": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.enlisting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.enlisting.Enlist": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.enlisting.Enlist.__init__": {
  "lineno": 2,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.enlisting.Enlist.delist": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.optimization.constraints": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "pyadjoint.optimization.constraints.Constraint": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.optimization.constraints.Constraint._get_constraint_dim": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.Constraint.function": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.Constraint.hessian_action": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.Constraint.jacobian": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.Constraint.jacobian_action": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.Constraint.jacobian_adjoint_action": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.Constraint.output_workspace": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.EqualityConstraint": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.optimization.constraints.InequalityConstraint": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.optimization.constraints.MergedConstraints": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.optimization.constraints.MergedConstraints.__init__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.MergedConstraints.__iter__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.MergedConstraints._get_constraint_dim": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.MergedConstraints.equality_constraints": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.MergedConstraints.function": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.MergedConstraints.hessian_action": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.MergedConstraints.inequality_constraints": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.MergedConstraints.jacobian": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.MergedConstraints.jacobian_action": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.MergedConstraints.jacobian_adjoint_action": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.MergedConstraints.output_workspace": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.constraints.canonicalise": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.ipopt_solver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.optimization.ipopt_solver.IPOPTSolver": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.optimization.ipopt_solver.IPOPTSolver.__build_pyipopt_problem": {
  "lineno": 27,
  "symbols_in_volume": [
   "functools.partial",
   "pyipopt.create",
   "pyipopt.set_loglevel"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.ipopt_solver.IPOPTSolver.__get_bounds": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.double",
   "numpy.finfo"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.ipopt_solver.IPOPTSolver.__get_constraints": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.ipopt_solver.IPOPTSolver.__get_constraints.constraint_ub": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.ipopt_solver.IPOPTSolver.__get_constraints.fun_g": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.ipopt_solver.IPOPTSolver.__get_constraints.jac_g": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.ipopt_solver.IPOPTSolver.__init__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.ipopt_solver.IPOPTSolver.__set_parameters": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.ipopt_solver.IPOPTSolver.solve": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.moola_problem": {
  "lineno": null,
  "symbols_in_volume": [
   "moola.BFGS.solve",
   "moola.HybridCG.solve",
   "moola.NewtonCG.solve",
   "moola.NonLinearCG.solve",
   "moola.SteepestDescent.solve",
   "moola.TrustRegionNewtonCG.solve"
  ],
  "type": "module"
 },
 "pyadjoint.optimization.moola_problem.MoolaOptimizationProblem": {
  "lineno": 17,
  "symbols_in_volume": [
   "moola.Problem"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.moola_problem.MoolaOptimizationProblem.Functional": {
  "lineno": 29,
  "symbols_in_volume": [
   "moola.Functional"
  ],
  "type": "class"
 },
 "pyadjoint.optimization.moola_problem.MoolaOptimizationProblem.Functional.__call__": {
  "lineno": 35,
  "symbols_in_volume": [
   "moola.events.increment"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.moola_problem.MoolaOptimizationProblem.Functional.derivative": {
  "lineno": 59,
  "symbols_in_volume": [
   "moola.convert_to_moola_dual_vector",
   "moola.events.increment"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.moola_problem.MoolaOptimizationProblem.Functional.hessian": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.moola_problem.MoolaOptimizationProblem.Functional.hessian.moola_hessian": {
  "lineno": 99,
  "symbols_in_volume": [
   "moola.convert_to_moola_dual_vector",
   "moola.events.increment"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.optimization": {
  "lineno": null,
  "symbols_in_volume": [
   "scipy.optimize.minimize"
  ],
  "type": "module"
 },
 "pyadjoint.optimization.optimization.maximize": {
  "lineno": 235,
  "symbols_in_volume": [
   "scipy.optimize.minimize"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.optimization.minimize": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.optimization.minimize_custom": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.optimization.minimize_scipy_generic": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.array",
   "scipy.__file__",
   "scipy.__version__",
   "scipy.optimize.basinhopping",
   "scipy.optimize.minimize"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.optimization.minimize_scipy_generic.jac": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.optimization.print_optimization_methods": {
  "lineno": 178,
  "symbols_in_volume": [
   "six.iteritems"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.optimization.serialise_bounds": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.ones"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.optimization_problem": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.optimization.optimization_problem.MaximizationProblem": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.optimization.optimization_problem.MinimizationProblem": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.optimization.optimization_problem.OptimizationProblem": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.optimization.optimization_problem.OptimizationProblem.__check_arguments": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.optimization_problem.OptimizationProblem.__init__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.optimization_problem.OptimizationProblem.enlist": {
  "lineno": 58,
  "symbols_in_volume": [
   "collections.Iterable"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.optimization_solver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.optimization.optimization_solver.OptimizationSolver": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.optimization.optimization_solver.OptimizationSolver.__check_arguments": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.optimization_solver.OptimizationSolver.__init__": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.optimization_solver.OptimizationSolver.solve": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.optimization.rol_solver.ROLConstraint": {
  "lineno": 92,
  "symbols_in_volume": [
   "ROL.Constraint"
  ],
  "type": "class"
 },
 "pyadjoint.optimization.rol_solver.ROLConstraint.__init__": {
  "lineno": 94,
  "symbols_in_volume": [
   "ROL.Constraint.__init__"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLConstraint.applyAdjointHessian": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLConstraint.applyAdjointJacobian": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLConstraint.applyJacobian": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLConstraint.value": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLObjective": {
  "lineno": 12,
  "symbols_in_volume": [
   "ROL.Objective"
  ],
  "type": "class"
 },
 "pyadjoint.optimization.rol_solver.ROLObjective.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLObjective.gradient": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLObjective.hessVec": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLObjective.update": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLObjective.value": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLSolver": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.optimization.rol_solver.ROLSolver.__get_bounds": {
  "lineno": 135,
  "symbols_in_volume": [
   "ROL.Bounds"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLSolver.__get_constraints": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLSolver.__init__": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLSolver.checkGradient": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLSolver.solve": {
  "lineno": 191,
  "symbols_in_volume": [
   "ROL.Bounds",
   "ROL.OptimizationProblem",
   "ROL.OptimizationSolver",
   "ROL.ParameterList"
  ],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLVector": {
  "lineno": 36,
  "symbols_in_volume": [
   "ROL.Vector"
  ],
  "type": "class"
 },
 "pyadjoint.optimization.rol_solver.ROLVector.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLVector.applyBinary": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLVector.applyUnary": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLVector.clone": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLVector.dimension": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLVector.dot": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLVector.norm": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLVector.plus": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLVector.reduce": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLVector.riesz_map": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.optimization.rol_solver.ROLVector.scale": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.overloaded_type.FloatingType": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.overloaded_type.FloatingType.__init__": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.FloatingType._ad_annotate_block": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.FloatingType._ad_annotate_output_block": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.FloatingType._ad_will_add_as_dependency": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.FloatingType._ad_will_add_as_output": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.FloatingType.create_block_variable": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.FloatingType.stop_floating": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.overloaded_type.FloatingType.stop_floating.__enter__": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.FloatingType.stop_floating.__exit__": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.FloatingType.stop_floating.__init__": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.overloaded_type.OverloadedType.__init__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType._ad_add": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType._ad_assign_numpy": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType._ad_convert_type": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType._ad_copy": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType._ad_create_checkpoint": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType._ad_dim": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType._ad_dot": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType._ad_init_object": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType._ad_mul": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType._ad_restore_at_checkpoint": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType._ad_to_list": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType._ad_will_add_as_dependency": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType._ad_will_add_as_output": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType.adj_update_value": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType.adj_value": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType.create_block_variable": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.OverloadedType.tlm_value": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.create_overloaded_object": {
  "lineno": 12,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyadjoint.overloaded_type.get_overloaded_class": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.overloaded_type.register_overloaded_type": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.placeholder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.placeholder.Placeholder": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.placeholder.Placeholder.__init__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.placeholder.Placeholder.save_output": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.placeholder.Placeholder.saved_output": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.placeholder.Placeholder.set_value": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.placeholder.Placeholder.will_add_as_dependency": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.placeholder.Placeholder.will_add_as_output": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.reduced_functional.ReducedFunctional": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.reduced_functional.ReducedFunctional.__call__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional.ReducedFunctional.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional.ReducedFunctional.derivative": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional.ReducedFunctional.hessian": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional.ReducedFunctional.marked_controls": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional.ReducedFunctional.optimize_tape": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional.marked_controls": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.reduced_functional.marked_controls.__enter__": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional.marked_controls.__exit__": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional.marked_controls.__init__": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.reduced_functional_numpy.ReducedFunctionalNumPy": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.reduced_functional_numpy.ReducedFunctionalNumPy.__call__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy.ReducedFunctionalNumPy.__getattr__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy.ReducedFunctionalNumPy.__init__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy.ReducedFunctionalNumPy.derivative": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy.ReducedFunctionalNumPy.get_controls": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy.ReducedFunctionalNumPy.get_global": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy.ReducedFunctionalNumPy.hessian": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy.ReducedFunctionalNumPy.obj_to_array": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy.ReducedFunctionalNumPy.pyopt_problem": {
  "lineno": 113,
  "symbols_in_volume": [
   "pyOpt.Optimization"
  ],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy.ReducedFunctionalNumPy.pyopt_problem.grad": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy.ReducedFunctionalNumPy.pyopt_problem.obj": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy.ReducedFunctionalNumPy.set_controls": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy.ReducedFunctionalNumPy.set_local": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy.gather": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.reduced_functional_numpy.set_local": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.tape.Tape": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.tape.Tape.__init__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape._get_tf_scope_name": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape._tf_add_blocks": {
  "lineno": 270,
  "symbols_in_volume": [
   "tensorflow.float64",
   "tensorflow.name_scope",
   "tensorflow.py_func"
  ],
  "type": "function"
 },
 "pyadjoint.tape.Tape._tf_rebuild_registered_blocks": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape._tf_register_blocks": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape._valid_tf_scope_name": {
  "lineno": 218,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "pyadjoint.tape.Tape.add_block": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape.clear_tape": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape.copy": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape.evaluate_adj": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape.evaluate_hessian": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape.evaluate_tlm": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape.get_blocks": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape.marked_nodes": {
  "lineno": 209,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "pyadjoint.tape.Tape.name_scope": {
  "lineno": 309,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "pyadjoint.tape.Tape.optimize": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape.optimize_for_controls": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape.optimize_for_functionals": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape.reset_hessian_values": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape.reset_tlm_values": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape.reset_variables": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.Tape.visualise": {
  "lineno": 320,
  "symbols_in_volume": [
   "tensorflow.Session",
   "tensorflow.reset_default_graph",
   "tensorflow.summary.FileWriter",
   "threading.Thread",
   "webbrowser.open_new_tab"
  ],
  "type": "function"
 },
 "pyadjoint.tape.Tape.visualise.launchTensorBoard": {
  "lineno": 344,
  "symbols_in_volume": [
   "os.system"
  ],
  "type": "function"
 },
 "pyadjoint.tape._find_relevant_nodes": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.annotate_tape": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.continue_annotation": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.get_working_tape": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.no_annotations": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.no_annotations.wrapper": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.pause_annotation": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.set_working_tape": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.stop_annotating": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyadjoint.tape.stop_annotating.__enter__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.tape.stop_annotating.__exit__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyadjoint.verification": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyadjoint.verification.convergence_rates": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.log"
  ],
  "type": "function"
 },
 "pyadjoint.verification.taylor_test": {
  "lineno": 6,
  "symbols_in_volume": [
   "logging.warning"
  ],
  "type": "function"
 },
 "pyadjoint.verification.taylor_test.perturbe": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 }
}