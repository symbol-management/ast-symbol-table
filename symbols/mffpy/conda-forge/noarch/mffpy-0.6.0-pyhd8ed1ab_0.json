{
 "mffpy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.bin_files": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.bin_files.BinFile": {
  "lineno": 23,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "class"
 },
 "mffpy.bin_files.BinFile.__init__": {
  "lineno": 40,
  "symbols_in_volume": [
   "typing.IO"
  ],
  "type": "function"
 },
 "mffpy.bin_files.BinFile.calibration": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones"
  ],
  "type": "function"
 },
 "mffpy.bin_files.BinFile.calibrations": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.bin_files.BinFile.get_physical_samples": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ndarray",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "mffpy.bin_files.BinFile.scale": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.bin_files.BinFile.unit": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.bin_writer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.bin_writer.BinWriter": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.bin_writer.BinWriter.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "io.BytesIO",
   "io.FileIO",
   "typing.IO",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "mffpy.bin_writer.BinWriter._add_block_to_epochs": {
  "lineno": 65,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "mffpy.bin_writer.BinWriter.add_block": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.ndarray",
   "typing.Union"
  ],
  "type": "function"
 },
 "mffpy.bin_writer.BinWriter.append": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.bin_writer.BinWriter.check_compatibility": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.bin_writer.BinWriter.get_info_kwargs": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.bin_writer.BinWriter.sampling_rate": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.bin_writer.BinWriter.write": {
  "lineno": 145,
  "symbols_in_volume": [
   "os.SEEK_SET"
  ],
  "type": "function"
 },
 "mffpy.bin_writer.StreamingBinWriter": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.bin_writer.StreamingBinWriter.__init__": {
  "lineno": 177,
  "symbols_in_volume": [
   "io.FileIO",
   "os.path.join"
  ],
  "type": "function"
 },
 "mffpy.bin_writer.StreamingBinWriter.write": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.cached_property": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.cached_property.cached_property": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.cached_property.cached_property._cached_property": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.cached_property.drop_cache": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.cached_property.get_cached_property_name": {
  "lineno": 18,
  "symbols_in_volume": [
   "types.FunctionType"
  ],
  "type": "function"
 },
 "mffpy.devices": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "module"
 },
 "mffpy.devices.coordinates_and_sensor_layout": {
  "lineno": 22,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "mffpy.dict2xml": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.dict2xml.add2el": {
  "lineno": 52,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union",
   "xml.etree.ElementTree.Element"
  ],
  "type": "function"
 },
 "mffpy.dict2xml.dict2el": {
  "lineno": 36,
  "symbols_in_volume": [
   "xml.etree.ElementTree.Element",
   "xml.etree.ElementTree.SubElement"
  ],
  "type": "function"
 },
 "mffpy.dict2xml.dict2xml": {
  "lineno": 64,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List",
   "typing.Union",
   "xml.etree.ElementTree.Element",
   "xml.etree.ElementTree.ElementTree"
  ],
  "type": "function"
 },
 "mffpy.dict2xml.register_namespace": {
  "lineno": 25,
  "symbols_in_volume": [
   "xml.etree.ElementTree.register_namespace"
  ],
  "type": "function"
 },
 "mffpy.epoch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.epoch.Epoch": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.epoch.Epoch.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.epoch.Epoch.__str__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.epoch.Epoch.add_block": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.epoch.Epoch.block_slice": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.epoch.Epoch.content": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.epoch.Epoch.dt": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.epoch.Epoch.t0": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.epoch.Epoch.t1": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.header_block": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "numpy.array",
   "numpy.uint8"
  ],
  "type": "module"
 },
 "mffpy.header_block.compute_header_byte_size": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.header_block.decode_rate_depth": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.header_block.encode_rate_depth": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.header_block.read_header_block": {
  "lineno": 101,
  "symbols_in_volume": [
   "typing.IO"
  ],
  "type": "function"
 },
 "mffpy.header_block.read_header_block.read": {
  "lineno": 104,
  "symbols_in_volume": [
   "struct.calcsize",
   "struct.unpack"
  ],
  "type": "function"
 },
 "mffpy.header_block.read_header_block.skip": {
  "lineno": 110,
  "symbols_in_volume": [
   "os.SEEK_CUR"
  ],
  "type": "function"
 },
 "mffpy.header_block.write_header_block": {
  "lineno": 144,
  "symbols_in_volume": [
   "io.FileIO",
   "numpy.arange",
   "numpy.int32",
   "numpy.ones",
   "numpy.uint8",
   "numpy.zeros",
   "struct.pack",
   "typing.IO",
   "typing.Union"
  ],
  "type": "function"
 },
 "mffpy.mffdir": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "typing.IO",
   "typing.Tuple"
  ],
  "type": "module"
 },
 "mffpy.mffdir.MFFDirBase": {
  "lineno": 28,
  "symbols_in_volume": [
   "re.compile",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "mffpy.mffdir.MFFDirBase.__contains__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase.__str__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase._check": {
  "lineno": 90,
  "symbols_in_volume": [
   "os.path.splitext"
  ],
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase._find_files_by_type": {
  "lineno": 61,
  "symbols_in_volume": [
   "collections.defaultdict",
   "os.path.splitext",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase.filename": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase.filepointer": {
  "lineno": 55,
  "symbols_in_volume": [
   "typing.IO"
  ],
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase.info": {
  "lineno": 70,
  "symbols_in_volume": [
   "typing.IO"
  ],
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase.listdir": {
  "lineno": 49,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase.signals_with_info": {
  "lineno": 78,
  "symbols_in_volume": [
   "os.path.basename",
   "typing.List"
  ],
  "type": "function"
 },
 "mffpy.mffdir.MFFDirectory": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.mffdir.MFFDirectory.__contains__": {
  "lineno": 136,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "mffpy.mffdir.MFFDirectory.filename": {
  "lineno": 128,
  "symbols_in_volume": [
   "os.path.basename",
   "os.path.join"
  ],
  "type": "function"
 },
 "mffpy.mffdir.MFFDirectory.filepointer": {
  "lineno": 125,
  "symbols_in_volume": [
   "os.path.basename",
   "typing.IO"
  ],
  "type": "function"
 },
 "mffpy.mffdir.MFFDirectory.listdir": {
  "lineno": 122,
  "symbols_in_volume": [
   "os.listdir",
   "typing.List"
  ],
  "type": "function"
 },
 "mffpy.mffdir.ZippedMFFDirectory": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.mffdir.ZippedMFFDirectory.__contains__": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.mffdir.ZippedMFFDirectory.__del__": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.mffdir.ZippedMFFDirectory.__init__": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.mffdir.ZippedMFFDirectory.filename": {
  "lineno": 164,
  "symbols_in_volume": [
   "os.path.basename"
  ],
  "type": "function"
 },
 "mffpy.mffdir.ZippedMFFDirectory.filepointer": {
  "lineno": 160,
  "symbols_in_volume": [
   "os.path.basename",
   "typing.IO"
  ],
  "type": "function"
 },
 "mffpy.mffdir.ZippedMFFDirectory.listdir": {
  "lineno": 157,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "mffpy.mffdir.get_directory": {
  "lineno": 176,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.isdir"
  ],
  "type": "function"
 },
 "mffpy.raw_bin_files": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "mffpy.raw_bin_files.RawBinFile": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.raw_bin_files.RawBinFile.__del__": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "typing.IO"
  ],
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile._read_blocks": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.frombuffer",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile._skip_over": {
  "lineno": 171,
  "symbols_in_volume": [
   "os.SEEK_CUR"
  ],
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.block_start_idx": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.cumsum",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.bytes_in_file": {
  "lineno": 207,
  "symbols_in_volume": [
   "os.SEEK_END",
   "os.SEEK_SET"
  ],
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.close": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.duration": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.num_channels": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.num_samples": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.read_raw_samples": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.round",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.sampling_rate": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.seek": {
  "lineno": 202,
  "symbols_in_volume": [
   "os.SEEK_END",
   "os.SEEK_SET"
  ],
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.signal_blocks": {
  "lineno": 102,
  "symbols_in_volume": [
   "itertools.count",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.tell": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.reader": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.reader.Reader": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.reader.Reader.__init__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.reader.Reader._blobs": {
  "lineno": 206,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "mffpy.reader.Reader.categories": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.reader.Reader.durations": {
  "lineno": 143,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "mffpy.reader.Reader.epochs": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.reader.Reader.flavor": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.reader.Reader.get_mff_content": {
  "lineno": 313,
  "symbols_in_volume": [
   "base64.b64encode"
  ],
  "type": "function"
 },
 "mffpy.reader.Reader.get_physical_samples": {
  "lineno": 244,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Dict",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "mffpy.reader.Reader.get_physical_samples_from_epoch": {
  "lineno": 260,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Dict",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "mffpy.reader.Reader.num_channels": {
  "lineno": 191,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "mffpy.reader.Reader.sampling_rates": {
  "lineno": 127,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "mffpy.reader.Reader.set_calibration": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.reader.Reader.set_unit": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.reader.Reader.startdatetime": {
  "lineno": 159,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "mffpy.reader.Reader.units": {
  "lineno": 176,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "mffpy.reader.object_to_bytes": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.tests.test_cached_property": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.tests.test_cached_property.dummy": {
  "lineno": 23,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_cached_property.dummy.Dummy": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.tests.test_cached_property.dummy.Dummy.takes_some_time": {
  "lineno": 26,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "mffpy.tests.test_cached_property.test_cached_property": {
  "lineno": 34,
  "symbols_in_volume": [
   "pytest.approx",
   "time.time"
  ],
  "type": "function"
 },
 "mffpy.tests.test_cached_property.test_drop_cache": {
  "lineno": 51,
  "symbols_in_volume": [
   "pytest.approx",
   "pytest.raises",
   "time.time"
  ],
  "type": "function"
 },
 "mffpy.tests.test_devices": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.tests.test_devices.test_devices": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "numpy.load",
   "os.path.basename",
   "os.path.exists",
   "os.path.join",
   "os.path.splitext",
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_dict2xml": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.tests.test_dict2xml.test_dict2xml": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_header_block": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.tests.test_header_block.dummy_header": {
  "lineno": 26,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_header_block.example_header_bytes": {
  "lineno": 43,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_header_block.test_written_header": {
  "lineno": 54,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "mffpy.tests.test_header_block.test_written_header_bytes": {
  "lineno": 66,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "mffpy.tests.test_mffdir": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "module"
 },
 "mffpy.tests.test_mffdir.mff": {
  "lineno": 26,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_mffdir.test_listdir": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_mffdir.test_read_asset": {
  "lineno": 54,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_mffdir.test_signal_with_info": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_mffdir.zippedmff": {
  "lineno": 34,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_raw_bin_files": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "module"
 },
 "mffpy.tests.test_raw_bin_files.rawbin": {
  "lineno": 26,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_raw_bin_files.test_close": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_raw_bin_files.test_property": {
  "lineno": 53,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_raw_bin_files.test_read_raw_samples": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "pytest.approx"
  ],
  "type": "function"
 },
 "mffpy.tests.test_raw_bin_files.test_seek": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_raw_bin_files.test_signal_blocks": {
  "lineno": 63,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_raw_bin_files.test_tell": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_reader": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.tests.test_reader.examples_dir": {
  "lineno": 24,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.isdir",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_reader.json_example_2": {
  "lineno": 79,
  "symbols_in_volume": [
   "json.load",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_reader.mffpath": {
  "lineno": 31,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_reader.mffpath_2": {
  "lineno": 37,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_reader.mffpath_3": {
  "lineno": 43,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_reader.mffpath_4": {
  "lineno": 49,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_reader.mfzpath": {
  "lineno": 67,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_reader.reader": {
  "lineno": 73,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_reader.signals_3": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.genfromtxt",
   "os.path.dirname",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_reader.test_categories": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_reader.test_epochs_averaged": {
  "lineno": 202,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_reader.test_epochs_segmented": {
  "lineno": 177,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_reader.test_flavor": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_reader.test_get_mff_content": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_reader.test_get_physical_samples": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float32",
   "pytest.approx",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_reader.test_get_physical_samples_full_range": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_reader.test_get_physical_samples_multiple_bin_files": {
  "lineno": 140,
  "symbols_in_volume": [
   "pytest.approx"
  ],
  "type": "function"
 },
 "mffpy.tests.test_reader.test_index_epochs_by_name_segmented": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_reader.test_property": {
  "lineno": 86,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "datetime.timezone",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_reader.test_startdatetime": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_writer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.tests.test_writer.test_streaming_writer_receives_bad_init_data": {
  "lineno": 217,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.join",
   "pytest.raises",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "mffpy.tests.test_writer.test_streaming_writer_writes": {
  "lineno": 228,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "numpy.float32",
   "numpy.random.randn",
   "os.path.join",
   "pytest.approx",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "mffpy.tests.test_writer.test_write_multiple_blocks": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.random.randn",
   "pytest.raises"
  ],
  "type": "function"
 },
 "mffpy.tests.test_writer.test_writer_doesnt_overwrite": {
  "lineno": 41,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.join",
   "os.rmdir",
   "pytest.raises"
  ],
  "type": "function"
 },
 "mffpy.tests.test_writer.test_writer_exports_JSON": {
  "lineno": 190,
  "symbols_in_volume": [
   "json.load",
   "os.remove"
  ],
  "type": "function"
 },
 "mffpy.tests.test_writer.test_writer_is_compatible_with_egi": {
  "lineno": 173,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.raises"
  ],
  "type": "function"
 },
 "mffpy.tests.test_writer.test_writer_receives_bad_init_data": {
  "lineno": 33,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "mffpy.tests.test_writer.test_writer_writes": {
  "lineno": 52,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "numpy.float32",
   "numpy.random.randn",
   "os.path.join",
   "os.remove",
   "os.rmdir",
   "pytest.approx"
  ],
  "type": "function"
 },
 "mffpy.tests.test_writer.test_writer_writes_multple_bins": {
  "lineno": 97,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "numpy.float32",
   "numpy.random.randn",
   "os.path.join",
   "os.remove",
   "os.rmdir",
   "pytest.approx"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.basicConfig",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "module"
 },
 "mffpy.tests.test_xml_files.categories": {
  "lineno": 97,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.coordinates": {
  "lineno": 76,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.data_info": {
  "lineno": 47,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.data_info2": {
  "lineno": 55,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.dipoleSet": {
  "lineno": 104,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.epochs": {
  "lineno": 83,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.event_track": {
  "lineno": 90,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.file_info": {
  "lineno": 39,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.history": {
  "lineno": 111,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.patient": {
  "lineno": 62,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.sensor_layout": {
  "lineno": 69,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_Categories": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_Categories_to_xml": {
  "lineno": 400,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_Coordinates": {
  "lineno": 232,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "numpy.float32"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_DataInfo2_generalInfo": {
  "lineno": 151,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_DataInfo_calibrations_GCAL": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.float32",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_DataInfo_filters1": {
  "lineno": 161,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_DataInfo_generalInfo": {
  "lineno": 140,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_Epochs": {
  "lineno": 260,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_EventTrack": {
  "lineno": 273,
  "symbols_in_volume": [
   "datetime.datetime.strptime",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_EventTrack_to_xml": {
  "lineno": 303,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_FileInfo": {
  "lineno": 123,
  "symbols_in_volume": [
   "datetime.datetime.strptime"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_SensorLayout": {
  "lineno": 199,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_SensorLayout.it": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_dipoleSet": {
  "lineno": 451,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "pytest.approx"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_dipoleSet_w_different_order": {
  "lineno": 475,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "pytest.approx"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_fileInfo_fails": {
  "lineno": 133,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pytest.raises",
   "pytz.utc"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_history": {
  "lineno": 485,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_history_to_xml": {
  "lineno": 503,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_sort_categories_by_starttime": {
  "lineno": 392,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_subject": {
  "lineno": 190,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "mffpy.tests.test_zipfile": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "module"
 },
 "mffpy.tests.test_zipfile.mymff": {
  "lineno": 32,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.fixture",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "mffpy.tests.test_zipfile.stlmff": {
  "lineno": 25,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.fixture",
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "mffpy.tests.test_zipfile.test_close": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_zipfile.test_enter": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_zipfile.test_seek_tell": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.tests.test_zipfile.test_wrong_whence": {
  "lineno": 67,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "mffpy.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.writer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.writer.Writer": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.writer.Writer.__init__": {
  "lineno": 33,
  "symbols_in_volume": [
   "os.path.splitext",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "mffpy.writer.Writer.add_coordinates_and_sensor_layout": {
  "lineno": 106,
  "symbols_in_volume": [
   "xml.etree.ElementTree.ElementTree"
  ],
  "type": "function"
 },
 "mffpy.writer.Writer.addbin": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.writer.Writer.addxml": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.writer.Writer.create_directory": {
  "lineno": 41,
  "symbols_in_volume": [
   "os.makedirs"
  ],
  "type": "function"
 },
 "mffpy.writer.Writer.export_to_json": {
  "lineno": 64,
  "symbols_in_volume": [
   "json.dump"
  ],
  "type": "function"
 },
 "mffpy.writer.Writer.filename": {
  "lineno": 122,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "mffpy.writer.Writer.write": {
  "lineno": 47,
  "symbols_in_volume": [
   "os.path.join",
   "os.path.splitext",
   "subprocess.check_output",
   "xml.etree.ElementTree.register_namespace"
  ],
  "type": "function"
 },
 "mffpy.xml_files": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.IO",
   "typing.Union"
  ],
  "type": "module"
 },
 "mffpy.xml_files.Categories": {
  "lineno": 842,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.xml_files.Categories.__contains__": {
  "lineno": 906,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Categories.__getitem__": {
  "lineno": 903,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Categories.__init__": {
  "lineno": 880,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Categories.__len__": {
  "lineno": 909,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Categories._parse_cat": {
  "lineno": 912,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "mffpy.xml_files.Categories._parse_channel_status": {
  "lineno": 924,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Categories._parse_channel_status.parse_channel_element": {
  "lineno": 929,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Categories._parse_faults": {
  "lineno": 943,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Categories._parse_keys": {
  "lineno": 950,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Categories._parse_segment": {
  "lineno": 964,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Categories.categories": {
  "lineno": 899,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Categories.content": {
  "lineno": 1006,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Categories.get_content": {
  "lineno": 984,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Categories.get_serializable_content": {
  "lineno": 990,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "mffpy.xml_files.Categories.serialize_category": {
  "lineno": 1062,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Categories.serialize_segment": {
  "lineno": 1075,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Categories.sort_categories_by_starttime": {
  "lineno": 995,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "mffpy.xml_files.Coordinates": {
  "lineno": 527,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "class"
 },
 "mffpy.xml_files.Coordinates._parse_sensor": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Coordinates.acqMethod": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Coordinates.acqTime": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Coordinates.defaultSubject": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Coordinates.get_content": {
  "lineno": 578,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Coordinates.get_serializable_content": {
  "lineno": 589,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "mffpy.xml_files.Coordinates.name": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Coordinates.sensors": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.DataInfo": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.xml_files.DataInfo._parse_calibration": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "function"
 },
 "mffpy.xml_files.DataInfo._parse_filter": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.DataInfo.calibrations": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.DataInfo.content": {
  "lineno": 292,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "mffpy.xml_files.DataInfo.filters": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.DataInfo.generalInformation": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.DataInfo.get_content": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.DataInfo.get_serializable_content": {
  "lineno": 361,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet": {
  "lineno": 1145,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.xml_files.DipoleSet.__len__": {
  "lineno": 1185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.computationCoordinate": {
  "lineno": 1170,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.dipoles": {
  "lineno": 1199,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.array",
   "numpy.float32",
   "numpy.ndarray",
   "typing.Dict"
  ],
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.get_content": {
  "lineno": 1227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.get_serializable_content": {
  "lineno": 1236,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.name": {
  "lineno": 1189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.orientationVector": {
  "lineno": 1180,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.type": {
  "lineno": 1194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.visualizationCoordinate": {
  "lineno": 1175,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "mffpy.xml_files.Epochs": {
  "lineno": 607,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.xml_files.Epochs.__getitem__": {
  "lineno": 619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Epochs.__len__": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Epochs._parse_epoch": {
  "lineno": 642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Epochs._parse_epoch.elem2KeyVal": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Epochs.associate_categories": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Epochs.content": {
  "lineno": 654,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "mffpy.xml_files.Epochs.epochs": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Epochs.get_content": {
  "lineno": 663,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Epochs.get_serializable_content": {
  "lineno": 676,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "mffpy.xml_files.EventTrack": {
  "lineno": 707,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.xml_files.EventTrack.__init__": {
  "lineno": 723,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.int64"
  ],
  "type": "function"
 },
 "mffpy.xml_files.EventTrack._parse_event": {
  "lineno": 758,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.EventTrack._parse_key": {
  "lineno": 770,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.EventTrack._parse_keys": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.EventTrack.content": {
  "lineno": 786,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "mffpy.xml_files.EventTrack.events": {
  "lineno": 751,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.EventTrack.get_content": {
  "lineno": 824,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.EventTrack.get_serializable_content": {
  "lineno": 833,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "mffpy.xml_files.EventTrack.name": {
  "lineno": 743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.EventTrack.trackType": {
  "lineno": 747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.FileInfo": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.xml_files.FileInfo.acquisitionVersion": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.FileInfo.ampType": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.FileInfo.content": {
  "lineno": 185,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "mffpy.xml_files.FileInfo.get_content": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.FileInfo.get_serializable_content": {
  "lineno": 233,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "mffpy.xml_files.FileInfo.mffVersion": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.FileInfo.recordTime": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.FileInfo.version": {
  "lineno": 161,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "mffpy.xml_files.History": {
  "lineno": 1248,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.xml_files.History.__getitem__": {
  "lineno": 1307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.History.__init__": {
  "lineno": 1290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.History.__len__": {
  "lineno": 1310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.History._parse_entry": {
  "lineno": 1317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.History.content": {
  "lineno": 1326,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "mffpy.xml_files.History.entries": {
  "lineno": 1313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.History.get_content": {
  "lineno": 1372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.History.get_serializable_content": {
  "lineno": 1381,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "mffpy.xml_files.History.mff_flavor": {
  "lineno": 1385,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Patient": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.xml_files.Patient.content": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Patient.fields": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Patient.get_content": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.Patient.get_serializable_content": {
  "lineno": 418,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.float32"
  ],
  "type": "class"
 },
 "mffpy.xml_files.SensorLayout._parse_sensor": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.get_content": {
  "lineno": 497,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.get_serializable_content": {
  "lineno": 508,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.mappings": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.name": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.neighbors": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.sensors": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.threads": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.tilingSets": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.XML": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.xml_files.XML.__init__": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.XML._dump_datetime": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.XML._parse_time_str": {
  "lineno": 112,
  "symbols_in_volume": [
   "datetime.datetime.strptime"
  ],
  "type": "function"
 },
 "mffpy.xml_files.XML.content": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.XML.find": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.XML.findall": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.XML.nsstrip": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.XML.xml_root_tag": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.XMLType": {
  "lineno": 33,
  "symbols_in_volume": [
   "logging.getLogger",
   "typing.Any",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "mffpy.xml_files.XMLType.__new__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.XMLType.from_file": {
  "lineno": 67,
  "symbols_in_volume": [
   "xml.etree.ElementTree.parse"
  ],
  "type": "function"
 },
 "mffpy.xml_files.XMLType.register": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.xml_files.XMLType.todict": {
  "lineno": 78,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "mffpy.xml_files.XMLType.xml_root_tags": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.zipfile": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "mffpy.zipfile.FilePart": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "mffpy.zipfile.FilePart.__del__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.zipfile.FilePart.__enter__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.zipfile.FilePart.__exit__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.zipfile.FilePart.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.zipfile.FilePart.close": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.zipfile.FilePart.closed": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.zipfile.FilePart.read": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.zipfile.FilePart.seek": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.zipfile.FilePart.tell": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.zipfile.ZipFile": {
  "lineno": 79,
  "symbols_in_volume": [
   "zipfile.ZipFile"
  ],
  "type": "class"
 },
 "mffpy.zipfile.ZipFile.__init__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "mffpy.zipfile.ZipFile.open": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 }
}