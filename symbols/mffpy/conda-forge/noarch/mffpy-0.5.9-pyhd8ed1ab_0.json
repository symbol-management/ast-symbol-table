{
 "mffpy": {
  "data": {},
  "type": "module"
 },
 "mffpy.bin_files": {
  "data": {},
  "type": "module"
 },
 "mffpy.bin_files.BinFile": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "float",
    "str",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "mffpy.bin_files.BinFile.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "bytes",
    "str",
    "super",
    "typing.IO"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_files.BinFile.calibration": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "list",
    "numpy.float64",
    "numpy.ones",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_files.BinFile.calibrations": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_files.BinFile.get_physical_samples": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "float",
    "numpy.float32",
    "numpy.ndarray",
    "slice",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_files.BinFile.scale": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_files.BinFile.unit": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_files.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mffpy.bin_files.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "mffpy.bin_files.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mffpy.bin_files.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mffpy.bin_writer": {
  "data": {},
  "type": "module"
 },
 "mffpy.bin_writer.BinWriter": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mffpy.bin_writer.BinWriter.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bytes",
    "int",
    "io.BytesIO",
    "io.FileIO",
    "str",
    "typing.IO",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_writer.BinWriter._add_block_to_epochs": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Epoch",
    "int",
    "isinstance",
    "len",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_writer.BinWriter.add_block": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "HeaderBlock",
    "ValueError",
    "compute_header_byte_size",
    "int",
    "numpy.float32",
    "numpy.ndarray",
    "typing.Union",
    "write_header_block"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_writer.BinWriter.append": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "bytes",
    "len"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_writer.BinWriter.check_compatibility": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_writer.BinWriter.get_info_kwargs": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "mffpy.bin_writer.BinWriter.sampling_rate": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_writer.BinWriter.write": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "len",
    "open",
    "os.SEEK_SET",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_writer.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mffpy.bin_writer.FileIO": {
  "data": {
   "shadows": "io.FileIO"
  },
  "type": "import"
 },
 "mffpy.bin_writer.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "mffpy.bin_writer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mffpy.bin_writer.SEEK_SET": {
  "data": {
   "shadows": "os.SEEK_SET"
  },
  "type": "import"
 },
 "mffpy.bin_writer.StreamingBinWriter": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "mffpy.bin_writer.BinWriter"
   ]
  },
  "type": "class"
 },
 "mffpy.bin_writer.StreamingBinWriter.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "int",
    "io.FileIO",
    "os.path.join",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_writer.StreamingBinWriter.write": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.bin_writer.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mffpy.bin_writer.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mffpy.bin_writer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mffpy.cached_property": {
  "data": {},
  "type": "module"
 },
 "mffpy.cached_property.cached_property": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "fn.__doc__",
    "mffpy.cached_property.get_cached_property_name"
   ]
  },
  "type": "function"
 },
 "mffpy.cached_property.cached_property._cached_property": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "AttributeError",
    "fn",
    "getattr",
    "property",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mffpy.cached_property.drop_cache": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "delattr",
    "hasattr",
    "mffpy.cached_property.get_cached_property_name"
   ]
  },
  "type": "function"
 },
 "mffpy.cached_property.get_cached_property_name": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "mffpy.cached_property.types",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.cached_property.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "mffpy.devices": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mffpy.devices.coordinates_and_sensor_layout": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mffpy.devices.resources_dir",
    "os.path.exists",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.devices.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "mffpy.devices.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "mffpy.devices.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mffpy.devices.resources_dir": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mffpy.dict2xml": {
  "data": {},
  "type": "module"
 },
 "mffpy.dict2xml.ATTR": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mffpy.dict2xml.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mffpy.dict2xml.ET": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "mffpy.dict2xml.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mffpy.dict2xml.TEXT": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mffpy.dict2xml.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mffpy.dict2xml.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mffpy.dict2xml.add2el": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "AttributeError",
    "dict",
    "isinstance",
    "list",
    "mffpy.dict2xml.dict2el",
    "str",
    "typing.List",
    "typing.Union",
    "xml.etree.ElementTree.Element"
   ]
  },
  "type": "function"
 },
 "mffpy.dict2xml.dict2el": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "AttributeError",
    "dict",
    "isinstance",
    "mffpy.dict2xml.ATTR",
    "mffpy.dict2xml.TEXT",
    "mffpy.dict2xml.add2el",
    "str",
    "xml.etree.ElementTree.Element",
    "xml.etree.ElementTree.SubElement"
   ]
  },
  "type": "function"
 },
 "mffpy.dict2xml.dict2xml": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mffpy.dict2xml.add2el",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union",
    "xml.etree.ElementTree.Element",
    "xml.etree.ElementTree.ElementTree"
   ]
  },
  "type": "function"
 },
 "mffpy.dict2xml.register_namespace": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "xml.etree.ElementTree.register_namespace"
   ]
  },
  "type": "function"
 },
 "mffpy.epoch": {
  "data": {},
  "type": "module"
 },
 "mffpy.epoch.Epoch": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "mffpy.epoch.Epoch.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "mffpy.epoch.Epoch.__str__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "mffpy.epoch.Epoch.add_block": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "mffpy.epoch.Epoch.block_slice": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "property",
    "slice"
   ]
  },
  "type": "function"
 },
 "mffpy.epoch.Epoch.content": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.epoch.Epoch.dt": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.epoch.Epoch.t0": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.epoch.Epoch.t1": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.header_block": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "numpy.array",
    "numpy.uint8"
   ]
  },
  "type": "module"
 },
 "mffpy.header_block.FileIO": {
  "data": {
   "shadows": "io.FileIO"
  },
  "type": "import"
 },
 "mffpy.header_block.HeaderBlock": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mffpy.header_block.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "mffpy.header_block.PADDING": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mffpy.header_block.SEEK_CUR": {
  "data": {
   "shadows": "os.SEEK_CUR"
  },
  "type": "import"
 },
 "mffpy.header_block.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mffpy.header_block.__all__": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mffpy.header_block.compute_header_byte_size": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "len",
    "mffpy.header_block.PADDING"
   ]
  },
  "type": "function"
 },
 "mffpy.header_block.decode_rate_depth": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mffpy.header_block.encode_rate_depth": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mffpy.header_block.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mffpy.header_block.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mffpy.header_block.read_header_block": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "bytes",
    "mffpy.header_block.HeaderBlock",
    "mffpy.header_block.decode_rate_depth",
    "read",
    "skip",
    "typing.IO"
   ]
  },
  "type": "function"
 },
 "mffpy.header_block.read_header_block.read": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len",
    "mffpy.header_block.struct",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.header_block.read_header_block.skip": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "int",
    "os.SEEK_CUR"
   ]
  },
  "type": "function"
 },
 "mffpy.header_block.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mffpy.header_block.write_header_block": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "bytes",
    "io.FileIO",
    "len",
    "mffpy.header_block.HeaderBlock",
    "mffpy.header_block.PADDING",
    "mffpy.header_block.encode_rate_depth",
    "mffpy.header_block.struct",
    "numpy.arange",
    "numpy.int32",
    "numpy.ones",
    "numpy.uint8",
    "numpy.zeros",
    "typing.IO",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir": {
  "data": {
   "symbols_in_volume": [
    "bytes",
    "collections.namedtuple",
    "str",
    "typing.IO",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "mffpy.mffdir.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mffpy.mffdir.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "mffpy.mffdir.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mffpy.mffdir.MFFDirBase": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mffpy.mffdir.re",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "mffpy.mffdir.MFFDirBase.__contains__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase.__str__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase._check": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "int",
    "os.path.splitext",
    "super"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase._find_files_by_type": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "os.path.splitext",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase.filename": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase.filepointer": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "NotImplementedError",
    "bytes",
    "str",
    "typing.IO"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase.info": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bytes",
    "int",
    "str",
    "typing.IO"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase.listdir": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.MFFDirBase.signals_with_info": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "SignalAndInfo",
    "int",
    "os.path.basename",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.MFFDirectory": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mffpy.mffdir.MFFDirBase"
   ]
  },
  "type": "class"
 },
 "mffpy.mffdir.MFFDirectory.__contains__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "bool",
    "os.path.exists",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.MFFDirectory.filename": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "os.path.basename",
    "os.path.join",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.MFFDirectory.filepointer": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "bytes",
    "open",
    "os.path.basename",
    "str",
    "typing.IO"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.MFFDirectory.listdir": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "os.listdir",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mffpy.mffdir.ZippedMFFDirectory": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "mffpy.mffdir.MFFDirBase"
   ]
  },
  "type": "class"
 },
 "mffpy.mffdir.ZippedMFFDirectory.__contains__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.ZippedMFFDirectory.__del__": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "mffpy.mffdir.ZippedMFFDirectory.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.ZippedMFFDirectory.filename": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "os.path.basename",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.ZippedMFFDirectory.filepointer": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "bytes",
    "os.path.basename",
    "str",
    "typing.IO"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.ZippedMFFDirectory.listdir": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "mffpy.mffdir.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mffpy.mffdir.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "mffpy.mffdir.get_directory": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ValueError",
    "mffpy.mffdir.MFFDirBase",
    "mffpy.mffdir.MFFDirectory",
    "mffpy.mffdir.ZippedMFFDirectory",
    "os.path.exists",
    "os.path.isdir",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.mffdir.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "mffpy.mffdir.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mffpy.mffdir.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "mffpy.mffdir.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mffpy.mffdir.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mffpy.mffdir.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "mffpy.raw_bin_files": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "mffpy.raw_bin_files.DataBlock": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mffpy.raw_bin_files.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mffpy.raw_bin_files.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "mffpy.raw_bin_files.RawBinFile": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "mffpy.raw_bin_files.RawBinFile.__del__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "typing.IO"
   ]
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile._read_blocks": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "int",
    "numpy.concatenate",
    "numpy.frombuffer",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile._skip_over": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "int",
    "os.SEEK_CUR"
   ]
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.block_start_idx": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.cumsum",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.bytes_in_file": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "os.SEEK_END",
    "os.SEEK_SET"
   ]
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.close": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.duration": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.num_channels": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.num_samples": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.read_raw_samples": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.ndarray",
    "numpy.round",
    "slice",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.sampling_rate": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.seek": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "os.SEEK_END",
    "os.SEEK_SET"
   ]
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.signal_blocks": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "all",
    "float",
    "int",
    "len",
    "list",
    "mffpy.raw_bin_files.DataBlock",
    "mffpy.raw_bin_files.itertools",
    "read_header_block",
    "str",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.RawBinFile.tell": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mffpy.raw_bin_files.SEEK_CUR": {
  "data": {
   "shadows": "os.SEEK_CUR"
  },
  "type": "import"
 },
 "mffpy.raw_bin_files.SEEK_END": {
  "data": {
   "shadows": "os.SEEK_END"
  },
  "type": "import"
 },
 "mffpy.raw_bin_files.SEEK_SET": {
  "data": {
   "shadows": "os.SEEK_SET"
  },
  "type": "import"
 },
 "mffpy.raw_bin_files.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mffpy.raw_bin_files.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mffpy.raw_bin_files.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mffpy.raw_bin_files.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mffpy.raw_bin_files.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mffpy.reader": {
  "data": {},
  "type": "module"
 },
 "mffpy.reader.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mffpy.reader.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mffpy.reader.Reader": {
  "data": {
   "lineno": 41
  },
  "type": "class"
 },
 "mffpy.reader.Reader.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "get_directory",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Reader._blobs": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Reader.categories": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Reader.durations": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "float",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Reader.epochs": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "isinstance",
    "print",
    "type"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Reader.flavor": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Reader.get_mff_content": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "KeyError",
    "base64.b64encode",
    "mffpy.reader.object_to_bytes",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Reader.get_physical_samples": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "float",
    "list",
    "numpy.ndarray",
    "slice",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Reader.get_physical_samples_from_epoch": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numpy.ndarray",
    "str",
    "type",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Reader.num_channels": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Reader.sampling_rates": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "float",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Reader.set_calibration": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Reader.set_unit": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Reader.startdatetime": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Reader.units": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mffpy.reader.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mffpy.reader.b64encode": {
  "data": {
   "shadows": "base64.b64encode"
  },
  "type": "import"
 },
 "mffpy.reader.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mffpy.reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mffpy.reader.object_to_bytes": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bytes",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.tests": {
  "data": {},
  "type": "module"
 },
 "mffpy.tests.test_cached_property": {
  "data": {},
  "type": "module"
 },
 "mffpy.tests.test_cached_property.dummy": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Dummy",
    "mffpy.tests.test_cached_property.pytest"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_cached_property.dummy.Dummy": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "mffpy.tests.test_cached_property.dummy.Dummy.takes_some_time": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mffpy.tests.test_cached_property.sleep_time",
    "mffpy.tests.test_cached_property.time"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_cached_property.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mffpy.tests.test_cached_property.sleep_time": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mffpy.tests.test_cached_property.test_cached_property": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "mffpy.tests.test_cached_property.dummy",
    "mffpy.tests.test_cached_property.pytest",
    "mffpy.tests.test_cached_property.sleep_time",
    "mffpy.tests.test_cached_property.time",
    "type"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_cached_property.test_drop_cache": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "drop_cache",
    "mffpy.tests.test_cached_property.dummy",
    "mffpy.tests.test_cached_property.pytest",
    "mffpy.tests.test_cached_property.sleep_time",
    "mffpy.tests.test_cached_property.time"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_cached_property.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mffpy.tests.test_devices": {
  "data": {},
  "type": "module"
 },
 "mffpy.tests.test_devices.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "mffpy.tests.test_devices.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "mffpy.tests.test_devices.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mffpy.tests.test_devices.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mffpy.tests.test_devices.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mffpy.tests.test_devices.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "mffpy.tests.test_devices.test_devices": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "coordinates_and_sensor_layout",
    "enumerate",
    "mffpy.tests.test_devices.pytest",
    "numpy.array",
    "numpy.float",
    "numpy.load",
    "os.path.basename",
    "os.path.exists",
    "os.path.join",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_dict2xml": {
  "data": {},
  "type": "module"
 },
 "mffpy.tests.test_dict2xml.test_dict2xml": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dict2xml",
    "enumerate",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_header_block": {
  "data": {},
  "type": "module"
 },
 "mffpy.tests.test_header_block.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mffpy.tests.test_header_block.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "mffpy.tests.test_header_block.dummy_header": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "HeaderBlock",
    "mffpy.tests.test_header_block.pytest"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_header_block.example_header_bytes": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mffpy.tests.test_header_block.pytest",
    "open",
    "os.path.dirname",
    "os.path.join",
    "read_header_block"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_header_block.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mffpy.tests.test_header_block.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mffpy.tests.test_header_block.test_written_header": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "io.BytesIO",
    "mffpy.tests.test_header_block.dummy_header",
    "mffpy.tests.test_header_block.example_header_bytes",
    "read_header_block",
    "write_header_block"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_header_block.test_written_header_bytes": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "mffpy.tests.test_header_block.example_header_bytes",
    "print",
    "write_header_block"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_mffdir": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mffpy.tests.test_mffdir.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "mffpy.tests.test_mffdir.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mffpy.tests.test_mffdir.mff": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "get_directory",
    "isinstance",
    "mffpy.tests.test_mffdir.mff_path",
    "mffpy.tests.test_mffdir.pytest"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_mffdir.mff_path": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mffpy.tests.test_mffdir.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mffpy.tests.test_mffdir.test_listdir": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mffpy.tests.test_mffdir.mff",
    "mffpy.tests.test_mffdir.zippedmff",
    "set"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_mffdir.test_read_asset": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "mffpy.tests.test_mffdir.mff",
    "mffpy.tests.test_mffdir.pytest",
    "mffpy.tests.test_mffdir.zippedmff"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_mffdir.test_signal_with_info": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "mffpy.tests.test_mffdir.mff",
    "mffpy.tests.test_mffdir.zippedmff"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_mffdir.zipped_mff_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mffpy.tests.test_mffdir.zippedmff": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "get_directory",
    "isinstance",
    "mffpy.tests.test_mffdir.pytest",
    "mffpy.tests.test_mffdir.zipped_mff_path"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_raw_bin_files": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mffpy.tests.test_raw_bin_files.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "mffpy.tests.test_raw_bin_files.examples_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mffpy.tests.test_raw_bin_files.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "mffpy.tests.test_raw_bin_files.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mffpy.tests.test_raw_bin_files.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mffpy.tests.test_raw_bin_files.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mffpy.tests.test_raw_bin_files.rawbin": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "RawBinFile",
    "mffpy.tests.test_raw_bin_files.examples_path",
    "mffpy.tests.test_raw_bin_files.pytest",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_raw_bin_files.test_close": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mffpy.tests.test_raw_bin_files.rawbin"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_raw_bin_files.test_property": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "getattr",
    "mffpy.tests.test_raw_bin_files.pytest",
    "mffpy.tests.test_raw_bin_files.rawbin"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_raw_bin_files.test_read_raw_samples": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mffpy.tests.test_raw_bin_files.pytest",
    "mffpy.tests.test_raw_bin_files.rawbin",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_raw_bin_files.test_seek": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "mffpy.tests.test_raw_bin_files.rawbin"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_raw_bin_files.test_signal_blocks": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mffpy.tests.test_raw_bin_files.pytest",
    "mffpy.tests.test_raw_bin_files.rawbin"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_raw_bin_files.test_tell": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mffpy.tests.test_raw_bin_files.rawbin"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader": {
  "data": {},
  "type": "module"
 },
 "mffpy.tests.test_reader.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mffpy.tests.test_reader.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "mffpy.tests.test_reader.examples_dir": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "mffpy.tests.test_reader.pytest",
    "os.path.dirname",
    "os.path.isdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "mffpy.tests.test_reader.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mffpy.tests.test_reader.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mffpy.tests.test_reader.json_example_2": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "mffpy.tests.test_reader.examples_dir",
    "mffpy.tests.test_reader.json",
    "mffpy.tests.test_reader.pytest",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.mffpath": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mffpy.tests.test_reader.examples_dir",
    "mffpy.tests.test_reader.pytest",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.mffpath_2": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "mffpy.tests.test_reader.examples_dir",
    "mffpy.tests.test_reader.pytest",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.mffpath_3": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mffpy.tests.test_reader.examples_dir",
    "mffpy.tests.test_reader.pytest",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.mffpath_4": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "mffpy.tests.test_reader.examples_dir",
    "mffpy.tests.test_reader.pytest",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.mfzpath": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mffpy.tests.test_reader.examples_dir",
    "mffpy.tests.test_reader.pytest",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mffpy.tests.test_reader.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mffpy.tests.test_reader.reader": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Reader",
    "mffpy.tests.test_reader.mffpath",
    "mffpy.tests.test_reader.pytest"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.signals_3": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mffpy.tests.test_reader.pytest",
    "numpy.genfromtxt",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.test_categories": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "all",
    "len",
    "mffpy.tests.test_reader.reader"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.test_epochs_averaged": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "Reader",
    "getattr",
    "mffpy.tests.test_reader.mffpath_4",
    "mffpy.tests.test_reader.pytest"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.test_epochs_segmented": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "getattr",
    "mffpy.tests.test_reader.pytest",
    "mffpy.tests.test_reader.reader"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.test_flavor": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "Reader",
    "mffpy.tests.test_reader.mffpath",
    "mffpy.tests.test_reader.mffpath_2",
    "mffpy.tests.test_reader.mffpath_3",
    "mffpy.tests.test_reader.mffpath_4"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.test_get_mff_content": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "Reader",
    "mffpy.tests.test_reader.json_example_2",
    "mffpy.tests.test_reader.mffpath_2"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.test_get_physical_samples": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "mffpy.tests.test_reader.pytest",
    "mffpy.tests.test_reader.reader",
    "numpy.asarray",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.test_get_physical_samples_full_range": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mffpy.tests.test_reader.reader"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.test_get_physical_samples_multiple_bin_files": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "Reader",
    "mffpy.tests.test_reader.mffpath_3",
    "mffpy.tests.test_reader.pytest",
    "mffpy.tests.test_reader.signals_3"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.test_index_epochs_by_name_segmented": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "len",
    "mffpy.tests.test_reader.reader"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.test_property": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "datetime.timezone",
    "getattr",
    "mffpy.tests.test_reader.pytest",
    "mffpy.tests.test_reader.reader"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.test_startdatetime": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "Reader",
    "mffpy.tests.test_reader.mffpath",
    "mffpy.tests.test_reader.mfzpath"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_reader.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "mffpy.tests.test_reader.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "mffpy.tests.test_writer": {
  "data": {},
  "type": "module"
 },
 "mffpy.tests.test_writer.CACHE_DIR": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mffpy.tests.test_writer.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mffpy.tests.test_writer.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mffpy.tests.test_writer.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mffpy.tests.test_writer.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "mffpy.tests.test_writer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mffpy.tests.test_writer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mffpy.tests.test_writer.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "mffpy.tests.test_writer.rmdir": {
  "data": {
   "shadows": "os.rmdir"
  },
  "type": "import"
 },
 "mffpy.tests.test_writer.rmtree": {
  "data": {
   "shadows": "shutil.rmtree"
  },
  "type": "import"
 },
 "mffpy.tests.test_writer.test_streaming_writer_receives_bad_init_data": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "AssertionError",
    "StreamingBinWriter",
    "mffpy.tests.test_writer.CACHE_DIR",
    "mffpy.tests.test_writer.pytest",
    "os.makedirs",
    "os.path.join",
    "shutil.rmtree",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_writer.test_streaming_writer_writes": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "AssertionError",
    "BaseException",
    "Reader",
    "StreamingBinWriter",
    "Writer",
    "datetime.datetime.strptime",
    "mffpy.tests.test_writer.CACHE_DIR",
    "mffpy.tests.test_writer.pytest",
    "numpy.float32",
    "numpy.random.randn",
    "os.path.join",
    "shutil.rmtree"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_writer.test_write_multiple_blocks": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "BinWriter",
    "ValueError",
    "len",
    "mffpy.tests.test_writer.pytest",
    "numpy.float32",
    "numpy.random.randn",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_writer.test_writer_doesnt_overwrite": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "AssertionError",
    "Writer",
    "mffpy.tests.test_writer.CACHE_DIR",
    "mffpy.tests.test_writer.pytest",
    "os.makedirs",
    "os.path.join",
    "os.rmdir",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_writer.test_writer_exports_JSON": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "AssertionError",
    "BaseException",
    "Writer",
    "mffpy.tests.test_writer.json",
    "open",
    "os.remove"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_writer.test_writer_is_compatible_with_egi": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "BinWriter",
    "StreamingBinWriter",
    "ValueError",
    "Writer",
    "mffpy.tests.test_writer.pytest",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_writer.test_writer_receives_bad_init_data": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "AssertionError",
    "BinWriter",
    "mffpy.tests.test_writer.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_writer.test_writer_writes": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "AssertionError",
    "BaseException",
    "BinWriter",
    "Reader",
    "Writer",
    "datetime.datetime.strptime",
    "mffpy.tests.test_writer.CACHE_DIR",
    "mffpy.tests.test_writer.pytest",
    "numpy.float32",
    "numpy.random.randn",
    "os.path.join",
    "os.remove",
    "os.rmdir"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_writer.test_writer_writes_multple_bins": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "AssertionError",
    "BaseException",
    "BinWriter",
    "Reader",
    "Writer",
    "datetime.datetime.strptime",
    "mffpy.tests.test_writer.CACHE_DIR",
    "mffpy.tests.test_writer.pytest",
    "numpy.float32",
    "numpy.random.randn",
    "os.path.join",
    "os.remove",
    "os.rmdir"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files": {
  "data": {
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.examples_path",
    "mffpy.tests.test_xml_files.logging",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mffpy.tests.test_xml_files.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mffpy.tests.test_xml_files.categories": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.mff_path",
    "mffpy.tests.test_xml_files.pytest",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.coordinates": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.mff_path",
    "mffpy.tests.test_xml_files.pytest",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.data_info": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.mff_path",
    "mffpy.tests.test_xml_files.pytest",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.data_info2": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.examples_path",
    "mffpy.tests.test_xml_files.pytest",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mffpy.tests.test_xml_files.dipoleSet": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.mff_path",
    "mffpy.tests.test_xml_files.pytest",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "mffpy.tests.test_xml_files.epochs": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.mff_path",
    "mffpy.tests.test_xml_files.pytest",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.event_track": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.mff_path",
    "mffpy.tests.test_xml_files.pytest",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.examples_path": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mffpy.tests.test_xml_files.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "mffpy.tests.test_xml_files.file_info": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.mff_path",
    "mffpy.tests.test_xml_files.pytest",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.history": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.examples_path",
    "mffpy.tests.test_xml_files.pytest",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mffpy.tests.test_xml_files.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mffpy.tests.test_xml_files.mff_path": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mffpy.tests.test_xml_files.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mffpy.tests.test_xml_files.patient": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.mff_path",
    "mffpy.tests.test_xml_files.pytest",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mffpy.tests.test_xml_files.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "mffpy.tests.test_xml_files.sensor_layout": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.mff_path",
    "mffpy.tests.test_xml_files.pytest",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_Categories": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "all",
    "len",
    "mffpy.tests.test_xml_files.categories"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_Categories_to_xml": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "dict2xml",
    "io.BytesIO",
    "mffpy.tests.test_xml_files.categories",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_Coordinates": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "mffpy.tests.test_xml_files.coordinates",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_DataInfo2_generalInfo": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.data_info2",
    "mffpy.tests.test_xml_files.pytest"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_DataInfo_calibrations_GCAL": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mffpy.tests.test_xml_files.data_info",
    "mffpy.tests.test_xml_files.pytest",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_DataInfo_filters1": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.data_info",
    "mffpy.tests.test_xml_files.pytest"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_DataInfo_generalInfo": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.data_info",
    "mffpy.tests.test_xml_files.pytest"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_Epochs": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "getattr",
    "mffpy.tests.test_xml_files.epochs",
    "mffpy.tests.test_xml_files.pytest"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_EventTrack": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "mffpy.tests.test_xml_files.event_track",
    "mffpy.tests.test_xml_files.pytest"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_EventTrack_to_xml": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "dict2xml",
    "events",
    "io.BytesIO",
    "len",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_FileInfo": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "mffpy.tests.test_xml_files.file_info"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_SensorLayout": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "getattr",
    "int",
    "it",
    "list",
    "map",
    "mffpy.tests.test_xml_files.pytest",
    "mffpy.tests.test_xml_files.sensor_layout"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_SensorLayout.it": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_dipoleSet": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "len",
    "mffpy.tests.test_xml_files.dipoleSet",
    "mffpy.tests.test_xml_files.pytest",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_dipoleSet_w_different_order": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.dipoleSet",
    "mffpy.tests.test_xml_files.pytest",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_fileInfo_fails": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "AssertionError",
    "datetime.datetime.now",
    "mffpy.tests.test_xml_files.pytest",
    "mffpy.tests.test_xml_files.pytz"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_history": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "len",
    "mffpy.tests.test_xml_files.history",
    "mffpy.tests.test_xml_files.pytest"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_history_to_xml": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "dict2xml",
    "io.BytesIO",
    "len",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_sort_categories_by_starttime": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.categories",
    "mffpy.tests.test_xml_files.pytest"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_xml_files.test_subject": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "mffpy.tests.test_xml_files.patient",
    "mffpy.tests.test_xml_files.pytest"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_zipfile": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mffpy.tests.test_zipfile.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "mffpy.tests.test_zipfile.examples_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mffpy.tests.test_zipfile.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mffpy.tests.test_zipfile.mymff": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mffpy.tests.test_zipfile.examples_path",
    "mffpy.tests.test_zipfile.pytest",
    "os.path.join",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_zipfile.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mffpy.tests.test_zipfile.stlZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "mffpy.tests.test_zipfile.stlmff": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mffpy.tests.test_zipfile.examples_path",
    "mffpy.tests.test_zipfile.pytest",
    "os.path.join",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_zipfile.test_close": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mffpy.tests.test_zipfile.mymff"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_zipfile.test_enter": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mffpy.tests.test_zipfile.mymff",
    "mffpy.tests.test_zipfile.stlmff"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_zipfile.test_seek_tell": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mffpy.tests.test_zipfile.mymff"
   ]
  },
  "type": "function"
 },
 "mffpy.tests.test_zipfile.test_wrong_whence": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "mffpy.tests.test_zipfile.mymff",
    "mffpy.tests.test_zipfile.pytest"
   ]
  },
  "type": "function"
 },
 "mffpy.version": {
  "data": {},
  "type": "module"
 },
 "mffpy.version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "mffpy.writer": {
  "data": {},
  "type": "module"
 },
 "mffpy.writer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mffpy.writer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mffpy.writer.ET": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "mffpy.writer.Writer": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "mffpy.writer.Writer.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "os.path.splitext",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mffpy.writer.Writer.add_coordinates_and_sensor_layout": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "coordinates_and_sensor_layout",
    "str",
    "type",
    "xml.etree.ElementTree.ElementTree"
   ]
  },
  "type": "function"
 },
 "mffpy.writer.Writer.addbin": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "mffpy.writer.Writer.addxml": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "dict2xml",
    "type"
   ]
  },
  "type": "function"
 },
 "mffpy.writer.Writer.create_directory": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "os.makedirs"
   ]
  },
  "type": "function"
 },
 "mffpy.writer.Writer.export_to_json": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "mffpy.writer.json",
    "open"
   ]
  },
  "type": "function"
 },
 "mffpy.writer.Writer.filename": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "os.path.exists",
    "os.path.splitext",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.writer.Writer.write": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "os.path.join",
    "os.path.splitext",
    "subprocess.check_output",
    "xml.etree.ElementTree.register_namespace"
   ]
  },
  "type": "function"
 },
 "mffpy.writer.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mffpy.writer.check_output": {
  "data": {
   "shadows": "subprocess.check_output"
  },
  "type": "import"
 },
 "mffpy.writer.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "mffpy.writer.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mffpy.writer.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mffpy.writer.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "mffpy.writer.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "mffpy.xml_files": {
  "data": {
   "symbols_in_volume": [
    "bytes",
    "str",
    "typing.IO",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "mffpy.xml_files.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "mffpy.xml_files.Categories": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "int",
    "mffpy.xml_files.XML"
   ]
  },
  "type": "class"
 },
 "mffpy.xml_files.Categories.__contains__": {
  "data": {
   "lineno": 867
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories.__getitem__": {
  "data": {
   "lineno": 864
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories.__init__": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories.__len__": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories._parse_cat": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories._parse_channel_status": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories._parse_channel_status.parse_channel_element": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "converter",
    "int",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories._parse_faults": {
  "data": {
   "lineno": 904
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories._parse_keys": {
  "data": {
   "lineno": 911
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories._parse_segment": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "converter"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories.categories": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories.content": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories.get_content": {
  "data": {
   "lineno": 945
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories.get_serializable_content": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "mffpy.xml_files.copy"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories.serialize_category": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "classmethod",
    "list",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories.serialize_segment": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "int",
    "map",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Categories.sort_categories_by_starttime": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Coordinates": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "int",
    "mffpy.xml_files.XML",
    "numpy.float32",
    "str"
   ]
  },
  "type": "class"
 },
 "mffpy.xml_files.Coordinates._parse_sensor": {
  "data": {
   "lineno": 530
  },
  "type": "function"
 },
 "mffpy.xml_files.Coordinates.acqMethod": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "mffpy.xml_files.Coordinates.acqTime": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "mffpy.xml_files.Coordinates.defaultSubject": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Coordinates.get_content": {
  "data": {
   "lineno": 539
  },
  "type": "function"
 },
 "mffpy.xml_files.Coordinates.get_serializable_content": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "float",
    "mffpy.xml_files.XML",
    "mffpy.xml_files.copy",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Coordinates.name": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "mffpy.xml_files.Coordinates.sensors": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.DataInfo": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "mffpy.xml_files.XML"
   ]
  },
  "type": "class"
 },
 "mffpy.xml_files.DataInfo._parse_calibration": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.DataInfo._parse_filter": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "conv",
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.DataInfo.calibrations": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "mffpy.xml_files.DataInfo.content": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.DataInfo.filters": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "mffpy.xml_files.DataInfo.generalInformation": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "mffpy.xml_files.DataInfo.get_content": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "mffpy.xml_files.DataInfo.get_serializable_content": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "float",
    "mffpy.xml_files.copy"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "mffpy.xml_files.DipoleSet": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "mffpy.xml_files.XML"
   ]
  },
  "type": "class"
 },
 "mffpy.xml_files.DipoleSet.__len__": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.computationCoordinate": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "numpy.ndarray",
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.dipoles": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "all",
    "collections.defaultdict",
    "float",
    "len",
    "list",
    "map",
    "numpy.array",
    "numpy.float32",
    "numpy.ndarray",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.get_content": {
  "data": {
   "lineno": 1188
  },
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.get_serializable_content": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "mffpy.xml_files.copy"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.name": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.orientationVector": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "numpy.ndarray",
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.type": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.DipoleSet.visualizationCoordinate": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "numpy.ndarray",
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.ET": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "mffpy.xml_files.Epochs": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "int",
    "mffpy.xml_files.XML"
   ]
  },
  "type": "class"
 },
 "mffpy.xml_files.Epochs.__getitem__": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "ValueError",
    "filter",
    "int",
    "isinstance",
    "len",
    "list",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Epochs.__len__": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Epochs._parse_epoch": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "Epoch",
    "map"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Epochs._parse_epoch.elem2KeyVal": {
  "data": {
   "lineno": 607
  },
  "type": "function"
 },
 "mffpy.xml_files.Epochs.associate_categories": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "len",
    "print",
    "zip"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Epochs.content": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "Epoch",
    "classmethod",
    "dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Epochs.epochs": {
  "data": {
   "lineno": 596
  },
  "type": "function"
 },
 "mffpy.xml_files.Epochs.get_content": {
  "data": {
   "lineno": 624
  },
  "type": "function"
 },
 "mffpy.xml_files.Epochs.get_serializable_content": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "mffpy.xml_files.copy"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.EventTrack": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "mffpy.xml_files.XML",
    "str"
   ]
  },
  "type": "class"
 },
 "mffpy.xml_files.EventTrack.__init__": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "int",
    "numpy.int16",
    "numpy.int64",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.EventTrack._parse_event": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.EventTrack._parse_key": {
  "data": {
   "lineno": 731
  },
  "type": "function"
 },
 "mffpy.xml_files.EventTrack._parse_keys": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.EventTrack.content": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "events",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.EventTrack.events": {
  "data": {
   "lineno": 712
  },
  "type": "function"
 },
 "mffpy.xml_files.EventTrack.get_content": {
  "data": {
   "lineno": 785
  },
  "type": "function"
 },
 "mffpy.xml_files.EventTrack.get_serializable_content": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "mffpy.xml_files.XML",
    "mffpy.xml_files.copy"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.EventTrack.name": {
  "data": {
   "lineno": 704
  },
  "type": "function"
 },
 "mffpy.xml_files.EventTrack.trackType": {
  "data": {
   "lineno": 708
  },
  "type": "function"
 },
 "mffpy.xml_files.FileInfo": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "mffpy.xml_files.XML"
   ]
  },
  "type": "class"
 },
 "mffpy.xml_files.FileInfo.content": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.FileInfo.get_content": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "mffpy.xml_files.FileInfo.get_serializable_content": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "mffpy.xml_files.XML",
    "mffpy.xml_files.copy"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.FileInfo.recordTime": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "mffpy.xml_files.FileInfo.version": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "mffpy.xml_files.FilePointer": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mffpy.xml_files.History": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "mffpy.xml_files.XML",
    "str"
   ]
  },
  "type": "class"
 },
 "mffpy.xml_files.History.__getitem__": {
  "data": {
   "lineno": 1268
  },
  "type": "function"
 },
 "mffpy.xml_files.History.__init__": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.History.__len__": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.History._parse_entry": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.History.content": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "list",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.History.entries": {
  "data": {
   "lineno": 1274
  },
  "type": "function"
 },
 "mffpy.xml_files.History.get_content": {
  "data": {
   "lineno": 1333
  },
  "type": "function"
 },
 "mffpy.xml_files.History.get_serializable_content": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": [
    "mffpy.xml_files.copy"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.History.mff_flavor": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "mffpy.xml_files.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "mffpy.xml_files.Patient": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "mffpy.xml_files.XML",
    "str"
   ]
  },
  "type": "class"
 },
 "mffpy.xml_files.Patient.content": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Patient.fields": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "mffpy.xml_files.Patient.get_content": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "mffpy.xml_files.Patient.get_serializable_content": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "mffpy.xml_files.copy"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "int",
    "mffpy.xml_files.XML",
    "numpy.float32",
    "str"
   ]
  },
  "type": "class"
 },
 "mffpy.xml_files.SensorLayout._parse_sensor": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.get_content": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.get_serializable_content": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "float",
    "list",
    "map",
    "mffpy.xml_files.copy",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.mappings": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.name": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.neighbors": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "int",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.sensors": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.threads": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "int",
    "map",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.SensorLayout.tilingSets": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "int",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "mffpy.xml_files.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "mffpy.xml_files.XML": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "mffpy.xml_files.XMLType",
    "str"
   ]
  },
  "type": "class"
 },
 "mffpy.xml_files.XML.__init__": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "mffpy.xml_files.XML._dump_datetime": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.XML._parse_time_str": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime.strptime"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.XML.content": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.XML.find": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "mffpy.xml_files.XML.findall": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "mffpy.xml_files.XML.nsstrip": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.XML.xml_root_tag": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.XMLType": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mffpy.xml_files.logging",
    "str",
    "type",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "mffpy.xml_files.XMLType.__new__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.XMLType.from_file": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "classmethod",
    "mffpy.xml_files.FilePointer",
    "xml.etree.ElementTree.parse"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.XMLType.register": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.XMLType.todict": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.XMLType.xml_root_tags": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "classmethod",
    "list"
   ]
  },
  "type": "function"
 },
 "mffpy.xml_files.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mffpy.xml_files.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mffpy.xml_files.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mffpy.xml_files.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mffpy.xml_files.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mffpy.zipfile": {
  "data": {},
  "type": "module"
 },
 "mffpy.zipfile.FilePart": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "mffpy.zipfile.FilePart.__del__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "mffpy.zipfile.FilePart.__enter__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "mffpy.zipfile.FilePart.__exit__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "mffpy.zipfile.FilePart.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mffpy.zipfile.FilePart.close": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "mffpy.zipfile.FilePart.closed": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mffpy.zipfile.FilePart.read": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "bytes",
    "int",
    "min"
   ]
  },
  "type": "function"
 },
 "mffpy.zipfile.FilePart.seek": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "mffpy.zipfile.FilePart.tell": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mffpy.zipfile.ZipFile": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "zipfile.ZipFile"
   ]
  },
  "type": "class"
 },
 "mffpy.zipfile.ZipFile.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "getattr",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mffpy.zipfile.ZipFile.open": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "mffpy.zipfile.FilePart",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "mffpy.zipfile._ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "mffpy.zipfile.is_zipfile": {
  "data": {
   "shadows": "zipfile.is_zipfile"
  },
  "type": "import"
 }
}