{
 "SEIR": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "SEIR.cli": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname",
   "sys.exit"
  ],
  "type": "module"
 },
 "SEIR.cli.main": {
  "lineno": 14,
  "symbols_in_volume": [
   "SEIR.parser.config_file_parser.parse_config_ini",
   "SEIR.seir.SEIR",
   "SEIR.visualization.visualize_seir_computation",
   "click.Choice",
   "click.Path",
   "click.command",
   "click.option",
   "numpy.arange",
   "numpy.loadtxt",
   "os.path.basename"
  ],
  "type": "function"
 },
 "SEIR.parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "SEIR.parser.config_file_parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "SEIR.parser.config_file_parser.parse_config_ini": {
  "lineno": 6,
  "symbols_in_volume": [
   "SEIR.parser.restrictions_section_parser.parse_restriction_sections",
   "configparser.ConfigParser"
  ],
  "type": "function"
 },
 "SEIR.parser.restrictions_section_parser": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "SEIR.parser.restrictions_section_parser._get_infectivity_modifier_from_file": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.loadtxt",
   "numpy.ndarray",
   "pathlib.Path",
   "typing.Text"
  ],
  "type": "function"
 },
 "SEIR.parser.restrictions_section_parser._parse_compartments": {
  "lineno": 10,
  "symbols_in_volume": [
   "re.match",
   "typing.List",
   "typing.Text"
  ],
  "type": "function"
 },
 "SEIR.parser.restrictions_section_parser._parse_infectivity_modifier_matrix_definition_single_line": {
  "lineno": 104,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.array",
   "typing.List",
   "typing.Text",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "SEIR.parser.restrictions_section_parser._parse_infectivity_modifier_matrix_definition_string": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.ones",
   "typing.List",
   "typing.Text"
  ],
  "type": "function"
 },
 "SEIR.parser.restrictions_section_parser._parse_restriction_section": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Callable",
   "typing.Dict",
   "typing.List",
   "typing.Text",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "SEIR.parser.restrictions_section_parser._parse_restriction_section.restrictions_function": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Union"
  ],
  "type": "function"
 },
 "SEIR.parser.restrictions_section_parser.parse_restriction_sections": {
  "lineno": 271,
  "symbols_in_volume": [
   "configparser.ConfigParser",
   "numpy.ndarray",
   "typing.Callable",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Text",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "SEIR.parser.restrictions_section_parser.parse_restriction_sections.restrictions": {
  "lineno": 327,
  "symbols_in_volume": [
   "numpy.multiply"
  ],
  "type": "function"
 },
 "SEIR.seir": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "SEIR.seir.SEIR": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "SEIR.seir.SEIR.__call__": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.multiply",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "SEIR.seir.SEIR.__init__": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.ones",
   "typing.Any",
   "typing.Callable",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "SEIR.seir.SEIR._compute_infectivity_matrix": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "SEIR.seir.SEIR._fix_size": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.ones",
   "typing.Union"
  ],
  "type": "function"
 },
 "SEIR.seir.SEIR.evaluate_solution": {
  "lineno": 414,
  "symbols_in_volume": [
   "itertools.chain.from_iterable",
   "itertools.product",
   "numpy.arange",
   "numpy.concatenate",
   "numpy.convolve",
   "numpy.divide",
   "numpy.expand_dims",
   "numpy.fabs",
   "numpy.multiply",
   "numpy.nan",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.split",
   "numpy.stack",
   "numpy.sum",
   "numpy.vstack",
   "numpy.where",
   "pandas.DataFrame",
   "scipy.integrate.cumtrapz",
   "scipy.integrate.trapz"
  ],
  "type": "function"
 },
 "SEIR.seir.SEIR.set_initial_state": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.multiply",
   "numpy.ndarray",
   "numpy.zeros",
   "typing.Union"
  ],
  "type": "function"
 },
 "SEIR.seir.SEIR.simulate": {
  "lineno": 376,
  "symbols_in_volume": [
   "scipy.integrate.solve_ivp",
   "typing.Text",
   "typing.Union"
  ],
  "type": "function"
 },
 "SEIR.seir.SEIR.simulate.SEIR_solution": {
  "lineno": 399,
  "symbols_in_volume": [
   "numpy.expand_dims",
   "numpy.ndarray",
   "numpy.repeat",
   "numpy.sum",
   "numpy.swapaxes",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "SEIR.seir.SEIR.update_parameters": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Any",
   "typing.Callable",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "SEIR.visualization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "SEIR.visualization._plot_compartment_subplot": {
  "lineno": 11,
  "symbols_in_volume": [
   "matplotlib.cm.get_cmap",
   "matplotlib.ticker.EngFormatter",
   "numpy.unique"
  ],
  "type": "function"
 },
 "SEIR.visualization._plot_restrictions": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "SEIR.visualization.visualize_seir_computation": {
  "lineno": 44,
  "symbols_in_volume": [
   "matplotlib.gridspec.GridSpec",
   "matplotlib.gridspec.GridSpecFromSubplotSpec",
   "matplotlib.pyplot.figaspect",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.show",
   "matplotlib.ticker.EngFormatter",
   "pandas.DataFrame",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Text"
  ],
  "type": "function"
 }
}