{
 "pycocotools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycocotools.coco": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "pycocotools.coco.COCO": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycocotools.coco.COCO.__init__": {
  "lineno": 71,
  "symbols_in_volume": [
   "collections.defaultdict",
   "json.load",
   "time.time"
  ],
  "type": "function"
 },
 "pycocotools.coco.COCO.annToMask": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycocotools.coco.COCO.annToRLE": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycocotools.coco.COCO.createIndex": {
  "lineno": 91,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "pycocotools.coco.COCO.download": {
  "lineno": 368,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.exists",
   "os.path.join",
   "time.time",
   "urllib.request.urlretrieve"
  ],
  "type": "function"
 },
 "pycocotools.coco.COCO.getAnnIds": {
  "lineno": 130,
  "symbols_in_volume": [
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "pycocotools.coco.COCO.getCatIds": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycocotools.coco.COCO.getImgIds": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycocotools.coco.COCO.info": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycocotools.coco.COCO.loadAnns": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycocotools.coco.COCO.loadCats": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycocotools.coco.COCO.loadImgs": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycocotools.coco.COCO.loadNumpyAnnotations": {
  "lineno": 392,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pycocotools.coco.COCO.loadRes": {
  "lineno": 306,
  "symbols_in_volume": [
   "copy.deepcopy",
   "json.load",
   "numpy.max",
   "numpy.min",
   "numpy.ndarray",
   "time.time"
  ],
  "type": "function"
 },
 "pycocotools.coco.COCO.showAnns": {
  "lineno": 234,
  "symbols_in_volume": [
   "matplotlib.collections.PatchCollection",
   "matplotlib.patches.Polygon",
   "matplotlib.pyplot.gca",
   "matplotlib.pyplot.plot",
   "numpy.all",
   "numpy.array",
   "numpy.dstack",
   "numpy.ones",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "pycocotools.coco._isArrayLike": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycocotools.cocoeval": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycocotools.cocoeval.COCOeval": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycocotools.cocoeval.COCOeval.__init__": {
  "lineno": 60,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "pycocotools.cocoeval.COCOeval.__str__": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycocotools.cocoeval.COCOeval._prepare": {
  "lineno": 84,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "pycocotools.cocoeval.COCOeval._prepare._toMask": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycocotools.cocoeval.COCOeval.accumulate": {
  "lineno": 315,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "numpy.argsort",
   "numpy.array",
   "numpy.concatenate",
   "numpy.count_nonzero",
   "numpy.cumsum",
   "numpy.float",
   "numpy.logical_and",
   "numpy.logical_not",
   "numpy.ones",
   "numpy.searchsorted",
   "numpy.spacing",
   "numpy.zeros",
   "time.time"
  ],
  "type": "function"
 },
 "pycocotools.cocoeval.COCOeval.computeIoU": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.argsort"
  ],
  "type": "function"
 },
 "pycocotools.cocoeval.COCOeval.computeOks": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.exp",
   "numpy.max",
   "numpy.spacing",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pycocotools.cocoeval.COCOeval.evaluate": {
  "lineno": 121,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.unique",
   "time.time"
  ],
  "type": "function"
 },
 "pycocotools.cocoeval.COCOeval.evaluateImg": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "numpy.logical_and",
   "numpy.logical_or",
   "numpy.repeat",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pycocotools.cocoeval.COCOeval.summarize": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycocotools.cocoeval.COCOeval.summarize._summarize": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.where"
  ],
  "type": "function"
 },
 "pycocotools.cocoeval.COCOeval.summarize._summarizeDets": {
  "lineno": 458,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pycocotools.cocoeval.COCOeval.summarize._summarizeKps": {
  "lineno": 473,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pycocotools.cocoeval.Params": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycocotools.cocoeval.Params.__init__": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycocotools.cocoeval.Params.setDetParams": {
  "lineno": 502,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.round"
  ],
  "type": "function"
 },
 "pycocotools.cocoeval.Params.setKpParams": {
  "lineno": 513,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.linspace",
   "numpy.round"
  ],
  "type": "function"
 },
 "pycocotools.mask": {
  "lineno": null,
  "symbols_in_volume": [
   "pycocotools._mask.frPyObjects",
   "pycocotools._mask.iou",
   "pycocotools._mask.merge"
  ],
  "type": "module"
 },
 "pycocotools.mask.area": {
  "lineno": 93,
  "symbols_in_volume": [
   "pycocotools._mask.area"
  ],
  "type": "function"
 },
 "pycocotools.mask.decode": {
  "lineno": 87,
  "symbols_in_volume": [
   "pycocotools._mask.decode"
  ],
  "type": "function"
 },
 "pycocotools.mask.encode": {
  "lineno": 80,
  "symbols_in_volume": [
   "pycocotools._mask.encode"
  ],
  "type": "function"
 },
 "pycocotools.mask.toBbox": {
  "lineno": 99,
  "symbols_in_volume": [
   "pycocotools._mask.toBbox"
  ],
  "type": "function"
 }
}