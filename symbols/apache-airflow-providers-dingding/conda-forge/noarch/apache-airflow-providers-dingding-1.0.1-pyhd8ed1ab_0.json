{
 "airflow.providers.dingding": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.dingding.example_dags": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.dingding.example_dags.example_dingding": {
  "data": {
   "symbols_in_volume": [
    "airflow.DAG",
    "airflow.providers.dingding.example_dags.example_dingding.args",
    "airflow.providers.dingding.example_dags.example_dingding.failure_callback",
    "airflow.providers.dingding.example_dags.example_dingding.feed_card_msg",
    "airflow.providers.dingding.example_dags.example_dingding.link_msg",
    "airflow.providers.dingding.example_dags.example_dingding.markdown_msg",
    "airflow.providers.dingding.example_dags.example_dingding.msg_failure_callback",
    "airflow.providers.dingding.example_dags.example_dingding.multi_action_card_msg",
    "airflow.providers.dingding.example_dags.example_dingding.single_action_card_msg",
    "airflow.providers.dingding.example_dags.example_dingding.text_msg_remind_all",
    "airflow.providers.dingding.example_dags.example_dingding.text_msg_remind_include_invalid",
    "airflow.providers.dingding.example_dags.example_dingding.text_msg_remind_none",
    "airflow.providers.dingding.example_dags.example_dingding.text_msg_remind_specific",
    "airflow.providers.dingding.operators.dingding.DingdingOperator",
    "airflow.utils.dates.days_ago",
    "datetime.timedelta"
   ]
  },
  "type": "module"
 },
 "airflow.providers.dingding.example_dags.example_dingding.DAG": {
  "data": {
   "shadows": "airflow.DAG"
  },
  "type": "import"
 },
 "airflow.providers.dingding.example_dags.example_dingding.DingdingOperator": {
  "data": {
   "shadows": "airflow.providers.dingding.operators.dingding.DingdingOperator"
  },
  "type": "import"
 },
 "airflow.providers.dingding.example_dags.example_dingding.args": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "airflow.providers.dingding.example_dags.example_dingding.days_ago": {
  "data": {
   "shadows": "airflow.utils.dates.days_ago"
  },
  "type": "import"
 },
 "airflow.providers.dingding.example_dags.example_dingding.failure_callback": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "airflow.providers.dingding.operators.dingding.DingdingOperator"
   ]
  },
  "type": "function"
 },
 "airflow.providers.dingding.example_dags.example_dingding.feed_card_msg": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "airflow.providers.dingding.example_dags.example_dingding.link_msg": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "airflow.providers.dingding.example_dags.example_dingding.markdown_msg": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "airflow.providers.dingding.example_dags.example_dingding.msg_failure_callback": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "airflow.providers.dingding.example_dags.example_dingding.multi_action_card_msg": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "airflow.providers.dingding.example_dags.example_dingding.single_action_card_msg": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "airflow.providers.dingding.example_dags.example_dingding.text_msg_remind_all": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "airflow.providers.dingding.example_dags.example_dingding.text_msg_remind_include_invalid": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "airflow.providers.dingding.example_dags.example_dingding.text_msg_remind_none": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "airflow.providers.dingding.example_dags.example_dingding.text_msg_remind_specific": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "airflow.providers.dingding.example_dags.example_dingding.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "airflow.providers.dingding.get_provider_info": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.dingding.get_provider_info.get_provider_info": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "airflow.providers.dingding.hooks": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.dingding.hooks.dingding": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.dingding.hooks.dingding.AirflowException": {
  "data": {
   "shadows": "airflow.exceptions.AirflowException"
  },
  "type": "import"
 },
 "airflow.providers.dingding.hooks.dingding.DingdingHook": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "airflow.providers.http.hooks.http.HttpHook"
   ]
  },
  "type": "class"
 },
 "airflow.providers.dingding.hooks.dingding.DingdingHook.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "dict",
    "str",
    "super",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "airflow.providers.dingding.hooks.dingding.DingdingHook._build_message": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "airflow.providers.dingding.hooks.dingding.json",
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.dingding.hooks.dingding.DingdingHook._get_endpoint": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "str"
   ]
  },
  "type": "function"
 },
 "airflow.providers.dingding.hooks.dingding.DingdingHook.get_conn": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "airflow.providers.dingding.hooks.dingding.requests",
    "dict",
    "requests.Session",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "airflow.providers.dingding.hooks.dingding.DingdingHook.send": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "airflow.exceptions.AirflowException",
    "int"
   ]
  },
  "type": "function"
 },
 "airflow.providers.dingding.hooks.dingding.HttpHook": {
  "data": {
   "shadows": "airflow.providers.http.hooks.http.HttpHook"
  },
  "type": "import"
 },
 "airflow.providers.dingding.hooks.dingding.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "airflow.providers.dingding.hooks.dingding.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.dingding.hooks.dingding.Session": {
  "data": {
   "shadows": "requests.Session"
  },
  "type": "import"
 },
 "airflow.providers.dingding.hooks.dingding.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "airflow.providers.dingding.hooks.dingding.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "airflow.providers.dingding.hooks.dingding.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "airflow.providers.dingding.operators": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.dingding.operators.dingding": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.dingding.operators.dingding.BaseOperator": {
  "data": {
   "shadows": "airflow.models.BaseOperator"
  },
  "type": "import"
 },
 "airflow.providers.dingding.operators.dingding.DingdingHook": {
  "data": {
   "shadows": "airflow.providers.dingding.hooks.dingding.DingdingHook"
  },
  "type": "import"
 },
 "airflow.providers.dingding.operators.dingding.DingdingOperator": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "airflow.models.BaseOperator"
   ]
  },
  "type": "class"
 },
 "airflow.providers.dingding.operators.dingding.DingdingOperator.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "airflow.utils.decorators.apply_defaults",
    "bool",
    "dict",
    "str",
    "super",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "airflow.providers.dingding.operators.dingding.DingdingOperator.execute": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "airflow.providers.dingding.hooks.dingding.DingdingHook"
   ]
  },
  "type": "function"
 },
 "airflow.providers.dingding.operators.dingding.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "airflow.providers.dingding.operators.dingding.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "airflow.providers.dingding.operators.dingding.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "airflow.providers.dingding.operators.dingding.apply_defaults": {
  "data": {
   "shadows": "airflow.utils.decorators.apply_defaults"
  },
  "type": "import"
 }
}