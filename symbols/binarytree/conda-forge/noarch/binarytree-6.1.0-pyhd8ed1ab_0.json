{
 "binarytree": {
  "lineno": null,
  "symbols_in_volume": [
   "bool",
   "float",
   "int",
   "pkg_resources.get_distribution",
   "typing.Union"
  ],
  "type": "module"
 },
 "binarytree.Node": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "binarytree.Node.__delitem__": {
  "lineno": 384,
  "symbols_in_volume": [
   "binarytree.exceptions.NodeModifyError",
   "binarytree.exceptions.NodeNotFoundError",
   "getattr",
   "int",
   "setattr"
  ],
  "type": "function"
 },
 "binarytree.Node.__getitem__": {
  "lineno": 244,
  "symbols_in_volume": [
   "binarytree.exceptions.NodeIndexError",
   "binarytree.exceptions.NodeNotFoundError",
   "int",
   "isinstance",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree.Node.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "binarytree.exceptions.NodeTypeError",
   "binarytree.exceptions.NodeValueError",
   "float",
   "int",
   "isinstance",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree.Node.__iter__": {
  "lineno": 176,
  "symbols_in_volume": [
   "len",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "binarytree.Node.__len__": {
  "lineno": 220,
  "symbols_in_volume": [
   "int"
  ],
  "type": "function"
 },
 "binarytree.Node.__repr__": {
  "lineno": 70,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "binarytree.Node.__setattr__": {
  "lineno": 123,
  "symbols_in_volume": [
   "binarytree.exceptions.NodeTypeError",
   "binarytree.exceptions.NodeValueError",
   "float",
   "int",
   "isinstance",
   "object.__setattr__",
   "str",
   "typing.Any"
  ],
  "type": "function"
 },
 "binarytree.Node.__setitem__": {
  "lineno": 310,
  "symbols_in_volume": [
   "binarytree.exceptions.NodeModifyError",
   "binarytree.exceptions.NodeNotFoundError",
   "int",
   "setattr"
  ],
  "type": "function"
 },
 "binarytree.Node.__str__": {
  "lineno": 87,
  "symbols_in_volume": [
   "_build_tree_string",
   "str"
  ],
  "type": "function"
 },
 "binarytree.Node._repr_svg_": {
  "lineno": 446,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "binarytree.Node.graphviz": {
  "lineno": 454,
  "symbols_in_volume": [
   "graphviz.Digraph",
   "graphviz.nohtml",
   "id",
   "str",
   "typing.Any"
  ],
  "type": "function"
 },
 "binarytree.Node.height": {
  "lineno": 763,
  "symbols_in_volume": [
   "_get_tree_properties",
   "int",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.inorder": {
  "lineno": 1299,
  "symbols_in_volume": [
   "property",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree.Node.is_balanced": {
  "lineno": 851,
  "symbols_in_volume": [
   "_is_balanced",
   "bool",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.is_bst": {
  "lineno": 889,
  "symbols_in_volume": [
   "_is_bst",
   "bool",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.is_complete": {
  "lineno": 1089,
  "symbols_in_volume": [
   "_get_tree_properties",
   "bool",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.is_max_heap": {
  "lineno": 957,
  "symbols_in_volume": [
   "_get_tree_properties",
   "bool",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.is_min_heap": {
  "lineno": 987,
  "symbols_in_volume": [
   "_get_tree_properties",
   "bool",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.is_perfect": {
  "lineno": 1017,
  "symbols_in_volume": [
   "_get_tree_properties",
   "bool",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.is_strict": {
  "lineno": 1054,
  "symbols_in_volume": [
   "_get_tree_properties",
   "bool",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.is_symmetric": {
  "lineno": 919,
  "symbols_in_volume": [
   "_is_symmetric",
   "bool",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.leaf_count": {
  "lineno": 826,
  "symbols_in_volume": [
   "_get_tree_properties",
   "int",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.leaves": {
  "lineno": 672,
  "symbols_in_volume": [
   "len",
   "property",
   "typing.List"
  ],
  "type": "function"
 },
 "binarytree.Node.levelorder": {
  "lineno": 1440,
  "symbols_in_volume": [
   "len",
   "property",
   "typing.List"
  ],
  "type": "function"
 },
 "binarytree.Node.levels": {
  "lineno": 719,
  "symbols_in_volume": [
   "len",
   "property",
   "typing.List"
  ],
  "type": "function"
 },
 "binarytree.Node.max_leaf_depth": {
  "lineno": 1170,
  "symbols_in_volume": [
   "_get_tree_properties",
   "int",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.max_node_value": {
  "lineno": 1148,
  "symbols_in_volume": [
   "_get_tree_properties",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.min_leaf_depth": {
  "lineno": 1204,
  "symbols_in_volume": [
   "_get_tree_properties",
   "int",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.min_node_value": {
  "lineno": 1126,
  "symbols_in_volume": [
   "_get_tree_properties",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.postorder": {
  "lineno": 1394,
  "symbols_in_volume": [
   "property",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree.Node.pprint": {
  "lineno": 498,
  "symbols_in_volume": [
   "_build_tree_string",
   "bool",
   "print",
   "str"
  ],
  "type": "function"
 },
 "binarytree.Node.preorder": {
  "lineno": 1348,
  "symbols_in_volume": [
   "property",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree.Node.properties": {
  "lineno": 1238,
  "symbols_in_volume": [
   "_get_tree_properties",
   "_is_balanced",
   "_is_bst",
   "_is_symmetric",
   "property",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "binarytree.Node.size": {
  "lineno": 800,
  "symbols_in_volume": [
   "_get_tree_properties",
   "int",
   "property"
  ],
  "type": "function"
 },
 "binarytree.Node.validate": {
  "lineno": 546,
  "symbols_in_volume": [
   "binarytree.exceptions.NodeReferenceError",
   "binarytree.exceptions.NodeTypeError",
   "binarytree.exceptions.NodeValueError",
   "float",
   "int",
   "isinstance",
   "set",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree.Node.values": {
  "lineno": 613,
  "symbols_in_volume": [
   "property",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree._build_bst_from_sorted_values": {
  "lineno": 1582,
  "symbols_in_volume": [
   "Node",
   "_build_bst_from_sorted_values",
   "int",
   "len",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree._build_tree_string": {
  "lineno": 1630,
  "symbols_in_volume": [
   "Node",
   "_build_tree_string",
   "bool",
   "int",
   "len",
   "max",
   "range",
   "str",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "binarytree._generate_perfect_bst": {
  "lineno": 1569,
  "symbols_in_volume": [
   "_build_bst_from_sorted_values",
   "int",
   "list",
   "range",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree._generate_random_leaf_count": {
  "lineno": 1599,
  "symbols_in_volume": [
   "int",
   "random.randint"
  ],
  "type": "function"
 },
 "binarytree._generate_random_node_values": {
  "lineno": 1616,
  "symbols_in_volume": [
   "int",
   "list",
   "random.shuffle",
   "range",
   "typing.List"
  ],
  "type": "function"
 },
 "binarytree._get_tree_properties": {
  "lineno": 1720,
  "symbols_in_volume": [
   "Node",
   "len",
   "max",
   "min",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "binarytree._is_balanced": {
  "lineno": 1491,
  "symbols_in_volume": [
   "_is_balanced",
   "abs",
   "int",
   "max",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree._is_bst": {
  "lineno": 1510,
  "symbols_in_volume": [
   "bool",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree._is_symmetric": {
  "lineno": 1535,
  "symbols_in_volume": [
   "bool",
   "symmetric_helper",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree._is_symmetric.symmetric_helper": {
  "lineno": 1544,
  "symbols_in_volume": [
   "symmetric_helper"
  ],
  "type": "function"
 },
 "binarytree._validate_tree_height": {
  "lineno": 1558,
  "symbols_in_volume": [
   "binarytree.exceptions.TreeHeightError",
   "int",
   "type"
  ],
  "type": "function"
 },
 "binarytree.bst": {
  "lineno": 1983,
  "symbols_in_volume": [
   "Node",
   "_generate_perfect_bst",
   "_generate_random_leaf_count",
   "_generate_random_node_values",
   "_validate_tree_height",
   "bool",
   "getattr",
   "int",
   "len",
   "set",
   "setattr",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree.build": {
  "lineno": 1850,
  "symbols_in_volume": [
   "Node",
   "binarytree.exceptions.NodeNotFoundError",
   "len",
   "range",
   "setattr",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "binarytree.exceptions.BinaryTreeError": {
  "lineno": 1,
  "symbols_in_volume": [
   "Exception"
  ],
  "type": "class"
 },
 "binarytree.exceptions.NodeIndexError": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "binarytree.exceptions.NodeModifyError": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "binarytree.exceptions.NodeNotFoundError": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "binarytree.exceptions.NodeReferenceError": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "binarytree.exceptions.NodeTypeError": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "binarytree.exceptions.NodeValueError": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "binarytree.exceptions.TreeHeightError": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "binarytree.get_parent": {
  "lineno": 1798,
  "symbols_in_volume": [
   "Node",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree.heap": {
  "lineno": 2049,
  "symbols_in_volume": [
   "Node",
   "_generate_random_node_values",
   "_validate_tree_height",
   "bool",
   "build",
   "heapq.heapify",
   "int",
   "len",
   "random.randint",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree.tree": {
  "lineno": 1909,
  "symbols_in_volume": [
   "Node",
   "_generate_random_leaf_count",
   "_generate_random_node_values",
   "_validate_tree_height",
   "bool",
   "build",
   "getattr",
   "int",
   "len",
   "random.choice",
   "set",
   "setattr",
   "typing.Optional"
  ],
  "type": "function"
 },
 "binarytree.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 }
}