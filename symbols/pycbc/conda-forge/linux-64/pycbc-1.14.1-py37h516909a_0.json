{
 "*": {
  "data": {
   "imports": [
    "pycbc.waveform.bank",
    "pycbc.waveform.parameters",
    "pycbc.waveform.ringdown",
    "pycbc.waveform.utils",
    "pycbc.waveform.waveform"
   ]
  },
  "type": "star-import"
 },
 "pycbc": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      89,
      97,
      156
     ]
    },
    "OSError": {
     "line number": [
      90,
      146
     ]
    },
    "int": {
     "line number": [
      126
     ]
    },
    "print": {
     "line number": [
      142,
      148
     ]
    },
    "pycbc.WEAVE_FLAGS": {
     "line number": [
      166
     ]
    },
    "pycbc._cache_dir_name": {
     "line number": [
      132
     ]
    },
    "pycbc._cache_dir_path": {
     "line number": [
      143,
      145,
      148,
      150
     ]
    },
    "pycbc._python_name": {
     "line number": [
      131
     ]
    },
    "pycbc._tmp_dir": {
     "line number": [
      132
     ]
    },
    "pycbc.git_hash": {
     "line number": [
      139
     ]
    },
    "pycbc.loaded_modules": {
     "line number": [
      88
     ]
    },
    "pycbc.logging": {
     "line number": [
      125
     ]
    },
    "pycbc.os": {
     "line number": [
      124,
      126,
      131,
      132,
      138,
      139,
      140,
      141,
      145,
      147,
      150,
      162,
      163,
      164,
      166
     ]
    },
    "pycbc.subprocess": {
     "line number": [
      86,
      86
     ]
    },
    "pycbc.sys": {
     "line number": [
      102,
      129,
      143,
      149
     ]
    },
    "pycbc.tempfile": {
     "line number": [
      130
     ]
    },
    "pycbc.warnings": {
     "line number": [
      31,
      32
     ]
    },
    "repr": {
     "line number": [
      131
     ]
    },
    "tuple": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.DYN_RANGE_FAC": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "pycbc.HAVE_CUDA": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "pycbc.HAVE_MKL": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "pycbc.HAVE_OMP": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "pycbc.PYCBC_ALIGNMENT": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "pycbc.VARARGS_DELIM": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "pycbc.WEAVE_FLAGS": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "pycbc.__version__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pycbc._cache_dir_name": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "pycbc._cache_dir_path": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "pycbc._pycudadrv": {
  "data": {
   "shadows": "pycuda.driver"
  },
  "type": "import"
 },
 "pycbc._python_name": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "pycbc._tmp_dir": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "pycbc._version": {
  "data": {},
  "type": "module"
 },
 "pycbc._version.Version": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "pycbc._version.argparse": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc._version.Version.__call__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      66,
      78
     ]
    },
    "print": {
     "line number": [
      81
     ]
    },
    "pycbc._version.inspect": {
     "line number": [
      55,
      60,
      72
     ]
    },
    "pycbc._version.os": {
     "line number": [
      61,
      61,
      73,
      73
     ]
    },
    "pycbc._version.print_link": {
     "line number": [
      65,
      77
     ]
    },
    "pycbc._version.pycbc": {
     "line number": [
      54,
      55
     ]
    },
    "pycbc._version.sys": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc._version.Version.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "pycbc._version.Version": {
     "line number": [
      47
     ]
    },
    "super": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc._version.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "pycbc._version.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pycbc._version.lal.git_version": {
  "data": {
   "shadows": "lal.git_version"
  },
  "type": "import"
 },
 "pycbc._version.lalsimulation.git_version": {
  "data": {
   "shadows": "lalsimulation.git_version"
  },
  "type": "import"
 },
 "pycbc._version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc._version.print_link": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      33
     ]
    },
    "open": {
     "line number": [
      29
     ]
    },
    "pycbc._version.os": {
     "line number": [
      29
     ]
    },
    "pycbc._version.subprocess": {
     "line number": [
      31,
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc._version.pycbc": {
  "data": {
   "shadows": "pycbc"
  },
  "type": "import"
 },
 "pycbc._version.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pycbc._version.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pycbc._version_helper": {
  "data": {},
  "type": "module"
 },
 "pycbc._version_helper.GitInfo": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "object": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc._version_helper.GitInfo.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "pycbc._version_helper.GitInvocationError": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "LookupError": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc._version_helper.__author__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pycbc._version_helper.call": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "pycbc._version_helper.GitInvocationError": {
     "line number": [
      65
     ]
    },
    "pycbc._version_helper.subprocess": {
     "line number": [
      47,
      47,
      57,
      57,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc._version_helper.determine_latest_release_version": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "pycbc._version_helper.call": {
     "line number": [
      144,
      147
     ]
    },
    "pycbc._version_helper.re": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc._version_helper.distutils.version": {
  "data": {
   "shadows": "distutils.version"
  },
  "type": "import"
 },
 "pycbc._version_helper.generate_git_version_info": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "pycbc._version_helper.GitInfo": {
     "line number": [
      169
     ]
    },
    "pycbc._version_helper.call": {
     "line number": [
      170,
      198
     ]
    },
    "pycbc._version_helper.determine_latest_release_version": {
     "line number": [
      195
     ]
    },
    "pycbc._version_helper.get_build_date": {
     "line number": [
      174
     ]
    },
    "pycbc._version_helper.get_build_name": {
     "line number": [
      173
     ]
    },
    "pycbc._version_helper.get_git_branch": {
     "line number": [
      181
     ]
    },
    "pycbc._version_helper.get_git_status": {
     "line number": [
      201
     ]
    },
    "pycbc._version_helper.get_git_tag": {
     "line number": [
      184
     ]
    },
    "pycbc._version_helper.get_last_commit": {
     "line number": [
      178
     ]
    },
    "pycbc._version_helper.re": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc._version_helper.get_build_date": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "pycbc._version_helper.time": {
     "line number": [
      88,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc._version_helper.get_build_name": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "pycbc._version_helper.call": {
     "line number": [
      76,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc._version_helper.get_git_branch": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "pycbc._version_helper.call": {
     "line number": [
      109
     ]
    },
    "pycbc._version_helper.os": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc._version_helper.get_git_status": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "pycbc._version_helper.subprocess": {
     "line number": [
      129,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc._version_helper.get_git_tag": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "pycbc._version_helper.call": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc._version_helper.get_last_commit": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "float": {
     "line number": [
      100
     ]
    },
    "pycbc._version_helper.call": {
     "line number": [
      98
     ]
    },
    "pycbc._version_helper.time": {
     "line number": [
      100,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc._version_helper.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc._version_helper.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pycbc._version_helper.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pycbc._version_helper.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pycbc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.bin_utils": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      4
     ]
    },
    "float": {
     "line number": [
      6,
      7
     ]
    },
    "fpconst.NegInf": {
     "line number": [
      7
     ]
    },
    "fpconst.PosInf": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.bin_utils.BinnedArray": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "object": {
     "line number": [
      532
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.bin_utils.BinnedArray.__getitem__": {
  "data": {
   "lineno": 591
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedArray.__init__": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      587
     ]
    },
    "pycbc.bin_utils.numpy": {
     "line number": [
      584
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedArray.__len__": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": {
    "len": {
     "line number": [
      598
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedArray.__setitem__": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedArray.argmax": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": {
    "pycbc.bin_utils.numpy": {
     "line number": [
      631
     ]
    },
    "tuple": {
     "line number": [
      630
     ]
    },
    "zip": {
     "line number": [
      631
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedArray.argmin": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": {
    "pycbc.bin_utils.numpy": {
     "line number": [
      621
     ]
    },
    "tuple": {
     "line number": [
      620
     ]
    },
    "zip": {
     "line number": [
      621
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedArray.centres": {
  "data": {
   "lineno": 607
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedArray.copy": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": {
    "type": {
     "line number": [
      605
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedArray.logregularize": {
  "data": {
   "lineno": 634
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedRatios": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": {
    "object": {
     "line number": [
      644
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.bin_utils.BinnedRatios.__getitem__": {
  "data": {
   "lineno": 659
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedRatios.__init__": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": {
    "pycbc.bin_utils.BinnedArray": {
     "line number": [
      656,
      657
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedRatios.bins": {
  "data": {
   "lineno": 662
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedRatios.centres": {
  "data": {
   "lineno": 705
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedRatios.incdenominator": {
  "data": {
   "lineno": 671
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedRatios.incnumerator": {
  "data": {
   "lineno": 665
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedRatios.logregularize": {
  "data": {
   "lineno": 694
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedRatios.ratio": {
  "data": {
   "lineno": 677
  },
  "type": "function"
 },
 "pycbc.bin_utils.BinnedRatios.regularize": {
  "data": {
   "lineno": 683
  },
  "type": "function"
 },
 "pycbc.bin_utils.Bins": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "object": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.bin_utils.Bins.__getitem__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      57,
      61
     ]
    },
    "isinstance": {
     "line number": [
      55
     ]
    },
    "len": {
     "line number": [
      60
     ]
    },
    "repr": {
     "line number": [
      57
     ]
    },
    "slice": {
     "line number": [
      55,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.Bins.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      31
     ]
    },
    "ValueError": {
     "line number": [
      33,
      35
     ]
    },
    "int": {
     "line number": [
      30
     ]
    },
    "isinstance": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.Bins.__iter__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.Bins.__len__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "pycbc.bin_utils.Bins.centres": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.Bins.lower": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.Bins.upper": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.IrregularBins": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "pycbc.bin_utils.Bins": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.bin_utils.IrregularBins.__getitem__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      149
     ]
    },
    "bisect.bisect_right": {
     "line number": [
      145
     ]
    },
    "isinstance": {
     "line number": [
      142
     ]
    },
    "len": {
     "line number": [
      148
     ]
    },
    "pycbc.bin_utils.IrregularBins": {
     "line number": [
      143
     ]
    },
    "slice": {
     "line number": [
      142
     ]
    },
    "super": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.IrregularBins.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      131,
      134
     ]
    },
    "any": {
     "line number": [
      133
     ]
    },
    "len": {
     "line number": [
      130,
      137
     ]
    },
    "tuple": {
     "line number": [
      132
     ]
    },
    "zip": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.IrregularBins.centres": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "pycbc.bin_utils.IrregularBins.lower": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "pycbc.bin_utils.numpy": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.IrregularBins.upper": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "pycbc.bin_utils.numpy": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LinearBins": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "pycbc.bin_utils.Bins": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.bin_utils.LinearBins.__getitem__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      212
     ]
    },
    "int": {
     "line number": [
      208
     ]
    },
    "isinstance": {
     "line number": [
      205
     ]
    },
    "len": {
     "line number": [
      211
     ]
    },
    "pycbc.bin_utils.LinearBins": {
     "line number": [
      206
     ]
    },
    "pycbc.bin_utils.math": {
     "line number": [
      208
     ]
    },
    "slice": {
     "line number": [
      205
     ]
    },
    "super": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LinearBins.__init__": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "float": {
     "line number": [
      202
     ]
    },
    "pycbc.bin_utils.LinearBins": {
     "line number": [
      201
     ]
    },
    "super": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LinearBins.centres": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "len": {
     "line number": [
      219
     ]
    },
    "pycbc.bin_utils.numpy": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LinearBins.lower": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "len": {
     "line number": [
      215
     ]
    },
    "pycbc.bin_utils.numpy": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LinearBins.upper": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "len": {
     "line number": [
      222
     ]
    },
    "pycbc.bin_utils.numpy": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LinearPlusOverflowBins": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "pycbc.bin_utils.Bins": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.bin_utils.LinearPlusOverflowBins.__getitem__": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      282
     ]
    },
    "int": {
     "line number": [
      275
     ]
    },
    "isinstance": {
     "line number": [
      272
     ]
    },
    "len": {
     "line number": [
      278
     ]
    },
    "pycbc.bin_utils.LinearPlusOverflowBins": {
     "line number": [
      273
     ]
    },
    "pycbc.bin_utils.math": {
     "line number": [
      275
     ]
    },
    "slice": {
     "line number": [
      272
     ]
    },
    "super": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LinearPlusOverflowBins.__init__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      267
     ]
    },
    "float": {
     "line number": [
      269
     ]
    },
    "pycbc.bin_utils.LinearPlusOverflowBins": {
     "line number": [
      268
     ]
    },
    "super": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LinearPlusOverflowBins.centres": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "fpconst.NegInf": {
     "line number": [
      293
     ]
    },
    "fpconst.PosInf": {
     "line number": [
      295
     ]
    },
    "len": {
     "line number": [
      294
     ]
    },
    "pycbc.bin_utils.numpy": {
     "line number": [
      292,
      293,
      294,
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LinearPlusOverflowBins.lower": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "fpconst.NegInf": {
     "line number": [
      286
     ]
    },
    "len": {
     "line number": [
      287
     ]
    },
    "pycbc.bin_utils.numpy": {
     "line number": [
      285,
      286,
      287,
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LinearPlusOverflowBins.upper": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "fpconst.PosInf": {
     "line number": [
      302
     ]
    },
    "len": {
     "line number": [
      301
     ]
    },
    "pycbc.bin_utils.numpy": {
     "line number": [
      299,
      300,
      301,
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LogarithmicBins": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "pycbc.bin_utils.Bins": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.bin_utils.LogarithmicBins.__getitem__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      338
     ]
    },
    "int": {
     "line number": [
      333
     ]
    },
    "isinstance": {
     "line number": [
      330
     ]
    },
    "len": {
     "line number": [
      337
     ]
    },
    "pycbc.bin_utils.LogarithmicBins": {
     "line number": [
      331
     ]
    },
    "pycbc.bin_utils.math": {
     "line number": [
      333,
      333,
      333
     ]
    },
    "slice": {
     "line number": [
      330
     ]
    },
    "super": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LogarithmicBins.__init__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "pycbc.bin_utils.LogarithmicBins": {
     "line number": [
      326
     ]
    },
    "pycbc.bin_utils.math": {
     "line number": [
      327,
      327
     ]
    },
    "super": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LogarithmicBins.centres": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "len": {
     "line number": [
      349
     ]
    },
    "pycbc.bin_utils.math": {
     "line number": [
      348,
      348
     ]
    },
    "pycbc.bin_utils.numpy": {
     "line number": [
      347,
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LogarithmicBins.lower": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "len": {
     "line number": [
      343
     ]
    },
    "pycbc.bin_utils.math": {
     "line number": [
      342,
      342
     ]
    },
    "pycbc.bin_utils.numpy": {
     "line number": [
      341,
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LogarithmicBins.upper": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "len": {
     "line number": [
      355
     ]
    },
    "pycbc.bin_utils.math": {
     "line number": [
      354,
      355
     ]
    },
    "pycbc.bin_utils.numpy": {
     "line number": [
      353,
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LogarithmicPlusOverflowBins": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "pycbc.bin_utils.Bins": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.bin_utils.LogarithmicPlusOverflowBins.__getitem__": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      410
     ]
    },
    "int": {
     "line number": [
      402
     ]
    },
    "isinstance": {
     "line number": [
      399
     ]
    },
    "len": {
     "line number": [
      406
     ]
    },
    "pycbc.bin_utils.LogarithmicPlusOverflowBins": {
     "line number": [
      400
     ]
    },
    "pycbc.bin_utils.math": {
     "line number": [
      402,
      402,
      402
     ]
    },
    "slice": {
     "line number": [
      399
     ]
    },
    "super": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LogarithmicPlusOverflowBins.__init__": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      394
     ]
    },
    "pycbc.bin_utils.LogarithmicPlusOverflowBins": {
     "line number": [
      395
     ]
    },
    "pycbc.bin_utils.math": {
     "line number": [
      396,
      396
     ]
    },
    "super": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LogarithmicPlusOverflowBins.centres": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "fpconst.PosInf": {
     "line number": [
      425
     ]
    },
    "len": {
     "line number": [
      424
     ]
    },
    "pycbc.bin_utils.math": {
     "line number": [
      423,
      423
     ]
    },
    "pycbc.bin_utils.numpy": {
     "line number": [
      421,
      422,
      423,
      423,
      425
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LogarithmicPlusOverflowBins.lower": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "len": {
     "line number": [
      416
     ]
    },
    "pycbc.bin_utils.math": {
     "line number": [
      415,
      415
     ]
    },
    "pycbc.bin_utils.numpy": {
     "line number": [
      413,
      414,
      415,
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.LogarithmicPlusOverflowBins.upper": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "fpconst.PosInf": {
     "line number": [
      433
     ]
    },
    "len": {
     "line number": [
      432
     ]
    },
    "pycbc.bin_utils.math": {
     "line number": [
      431,
      431
     ]
    },
    "pycbc.bin_utils.numpy": {
     "line number": [
      430,
      431,
      431,
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.NDBins": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      438
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.bin_utils.NDBins.__getitem__": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      502
     ]
    },
    "isinstance": {
     "line number": [
      500
     ]
    },
    "len": {
     "line number": [
      501,
      501
     ]
    },
    "map": {
     "line number": [
      503
     ]
    },
    "tuple": {
     "line number": [
      500,
      503
     ]
    },
    "tuple.__getitem__": {
     "line number": [
      505
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.NDBins.__new__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": {
    "len": {
     "line number": [
      475
     ]
    },
    "tuple": {
     "line number": [
      473,
      474,
      475
     ]
    },
    "tuple.__new__": {
     "line number": [
      472
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.NDBins.centres": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.NDBins.lower": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      513
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.NDBins.upper": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      529
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.bin_utils.NegInf": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pycbc.bin_utils.PosInf": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pycbc.bin_utils.bisect_right": {
  "data": {
   "shadows": "bisect.bisect_right"
  },
  "type": "import"
 },
 "pycbc.bin_utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pycbc.bin_utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.boundaries": {
  "data": {
   "symbols_in_volume": {
    "pycbc.boundaries.ClosedBound": {
     "line number": [
      101,
      101
     ]
    },
    "pycbc.boundaries.OpenBound": {
     "line number": [
      100,
      100
     ]
    },
    "pycbc.boundaries.ReflectedBound": {
     "line number": [
      102,
      102
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.boundaries.Bounds": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "object": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.boundaries.Bounds.__contains__": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "pycbc.boundaries.Bounds.__getitem__": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.boundaries.Bounds.__init__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      302,
      306
     ]
    },
    "ValueError": {
     "line number": [
      294,
      297,
      303,
      307
     ]
    },
    "bool": {
     "line number": [
      309
     ]
    },
    "pycbc.boundaries._pass": {
     "line number": [
      319
     ]
    },
    "pycbc.boundaries.boundary_types": {
     "line number": [
      301,
      305
     ]
    },
    "pycbc.boundaries.numpy": {
     "line number": [
      290,
      290,
      296,
      296,
      313,
      315,
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.boundaries.Bounds.__repr__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "map": {
     "line number": [
      323
     ]
    },
    "str": {
     "line number": [
      322,
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.boundaries.Bounds._apply_cyclic": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "pycbc.boundaries.apply_cyclic": {
     "line number": [
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.boundaries.Bounds._reflect_well": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "pycbc.boundaries.reflect_well": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.boundaries.Bounds.apply_conditions": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      402
     ]
    },
    "float": {
     "line number": [
      403
     ]
    },
    "isinstance": {
     "line number": [
      399
     ]
    },
    "pycbc.boundaries.apply_cyclic": {
     "line number": [
      397
     ]
    },
    "pycbc.boundaries.numpy": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.boundaries.Bounds.contains_conditioned": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "pycbc.boundaries.Bounds.cyclic": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "property": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.boundaries.Bounds.max": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "property": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.boundaries.Bounds.min": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "property": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.boundaries.ClosedBound": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "pycbc.boundaries._Bound": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.boundaries.ClosedBound.larger": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pycbc.boundaries.ClosedBound.smaller": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pycbc.boundaries.OpenBound": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "pycbc.boundaries._Bound": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.boundaries.OpenBound.larger": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pycbc.boundaries.OpenBound.smaller": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pycbc.boundaries.ReflectedBound": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "pycbc.boundaries.ClosedBound": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.boundaries.ReflectedBound.reflect": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pycbc.boundaries.ReflectedBound.reflect_left": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "pycbc.boundaries.ReflectedBound.reflect_right": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "pycbc.boundaries._Bound": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "float": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.boundaries._Bound.larger": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.boundaries._Bound.smaller": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.boundaries._pass": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "pycbc.boundaries.apply_cyclic": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "pycbc.boundaries.boundary_types": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "pycbc.boundaries.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.boundaries.reflect_well": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "pycbc.catalog": {
  "data": {},
  "type": "module"
 },
 "pycbc.catalog.Catalog": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "object": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.catalog.Catalog.__delitem__": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "pycbc.catalog.Catalog.__getitem__": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "pycbc.catalog.Catalog.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "pycbc.catalog.Merger": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.catalog.Catalog.__iter__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.catalog.Catalog.__len__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "len": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.catalog.Catalog.__setitem__": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "pycbc.catalog.Catalog.median1d": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "pycbc.catalog.numpy": {
     "line number": [
      156,
      156,
      156,
      158
     ]
    },
    "zip": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.catalog.Merger": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "object": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.catalog.Merger.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.catalog.Merger.median1d": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pycbc.catalog.Merger.strain": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "astropy.utils.data.download_file": {
     "line number": [
      106
     ]
    },
    "pycbc.frame.read_frame": {
     "line number": [
      107
     ]
    },
    "str": {
     "line number": [
      107,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.catalog.catalog": {
  "data": {},
  "type": "module"
 },
 "pycbc.catalog.catalog.download_file": {
  "data": {
   "shadows": "astropy.utils.data.download_file"
  },
  "type": "import"
 },
 "pycbc.catalog.catalog.get_source": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      45
     ]
    },
    "astropy.utils.data.download_file": {
     "line number": [
      42
     ]
    },
    "open": {
     "line number": [
      43
     ]
    },
    "pycbc.catalog.catalog.gwtc1_url": {
     "line number": [
      42
     ]
    },
    "pycbc.catalog.catalog.json": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.catalog.catalog.gwtc1_url": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pycbc.catalog.catalog.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pycbc.catalog.download_file": {
  "data": {
   "shadows": "astropy.utils.data.download_file"
  },
  "type": "import"
 },
 "pycbc.catalog.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.catalog.read_frame": {
  "data": {
   "shadows": "pycbc.frame.read_frame"
  },
  "type": "import"
 },
 "pycbc.coordinates": {
  "data": {},
  "type": "module"
 },
 "pycbc.coordinates.__all__": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "pycbc.coordinates.cartesian_to_spherical": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "pycbc.coordinates.cartesian_to_spherical_azimuthal": {
     "line number": [
      107
     ]
    },
    "pycbc.coordinates.cartesian_to_spherical_polar": {
     "line number": [
      108
     ]
    },
    "pycbc.coordinates.cartesian_to_spherical_rho": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.coordinates.cartesian_to_spherical_azimuthal": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "float": {
     "line number": [
      59
     ]
    },
    "int": {
     "line number": [
      59
     ]
    },
    "isinstance": {
     "line number": [
      59
     ]
    },
    "pycbc.coordinates.numpy": {
     "line number": [
      60,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.coordinates.cartesian_to_spherical_polar": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "pycbc.coordinates.cartesian_to_spherical_rho": {
     "line number": [
      81
     ]
    },
    "pycbc.coordinates.numpy": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.coordinates.cartesian_to_spherical_rho": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "pycbc.coordinates.numpy": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.coordinates.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.coordinates.spherical_to_cartesian": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "pycbc.coordinates.numpy": {
     "line number": [
      134,
      134,
      135,
      135,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.cosmology": {
  "data": {
   "symbols_in_volume": {
    "pycbc.cosmology.DistToZ": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.cosmology.CosmologyError": {
  "data": {
   "shadows": "astropy.cosmology.core.CosmologyError"
  },
  "type": "import"
 },
 "pycbc.cosmology.DEFAULT_COSMOLOGY": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pycbc.cosmology.DistToZ": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "object": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.cosmology.DistToZ.__call__": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "pycbc.cosmology.DistToZ.__init__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "int": {
     "line number": [
      229
     ]
    },
    "pycbc.cosmology.get_cosmology": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.cosmology.DistToZ.get_redshift": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      260
     ]
    },
    "ValueError": {
     "line number": [
      275
     ]
    },
    "pycbc.cosmology._redshift": {
     "line number": [
      276
     ]
    },
    "pycbc.cosmology.numpy": {
     "line number": [
      266,
      269,
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.cosmology.DistToZ.setup_interpolant": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "pycbc.cosmology.numpy": {
     "line number": [
      241,
      246,
      246
     ]
    },
    "scipy.interpolate.interp1d": {
     "line number": [
      243,
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.cosmology.__all__": {
  "data": {
   "lineno": 395
  },
  "type": "constant"
 },
 "pycbc.cosmology._d2zs": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "pycbc.cosmology._redshift": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "astropy.units.Mpc": {
     "line number": [
      194
     ]
    },
    "pycbc.cosmology.get_cosmology": {
     "line number": [
      193
     ]
    },
    "pycbc.cosmology.z_at_value": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.cosmology.astropy.cosmology": {
  "data": {
   "shadows": "astropy.cosmology"
  },
  "type": "import"
 },
 "pycbc.cosmology.cosmological_quantity_from_redshift": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      389
     ]
    },
    "pycbc.cosmology.get_cosmology": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.cosmology.distance_from_comoving_volume": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "pycbc.cosmology.get_cosmology": {
     "line number": [
      358
     ]
    },
    "pycbc.cosmology.redshift_from_comoving_volume": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.cosmology.get_cosmology": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      89,
      100
     ]
    },
    "getattr": {
     "line number": [
      101
     ]
    },
    "isinstance": {
     "line number": [
      91
     ]
    },
    "pycbc.cosmology.DEFAULT_COSMOLOGY": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.cosmology.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "pycbc.cosmology.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.cosmology.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.cosmology.pycbc.conversions": {
  "data": {
   "shadows": "pycbc.conversions"
  },
  "type": "import"
 },
 "pycbc.cosmology.redshift": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      314
     ]
    },
    "pycbc.cosmology._d2zs": {
     "line number": [
      313
     ]
    },
    "pycbc.cosmology._redshift": {
     "line number": [
      316
     ]
    },
    "pycbc.cosmology.get_cosmology": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.cosmology.redshift_from_comoving_volume": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "astropy.units.Mpc": {
     "line number": [
      338
     ]
    },
    "pycbc.cosmology.get_cosmology": {
     "line number": [
      337
     ]
    },
    "pycbc.cosmology.z_at_value": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.cosmology.units": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "pycbc.cosmology.z_at_value": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "astropy.cosmology.core.CosmologyError": {
     "line number": [
      142,
      162
     ]
    },
    "enumerate": {
     "line number": [
      138
     ]
    },
    "float": {
     "line number": [
      137
     ]
    },
    "pycbc.cosmology.logging": {
     "line number": [
      168
     ]
    },
    "pycbc.cosmology.numpy": {
     "line number": [
      137,
      145,
      147,
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.detector": {
  "data": {},
  "type": "module"
 },
 "pycbc.detector.Detector": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "object": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.detector.Detector.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "astropy.units.si.sday.si.scale": {
     "line number": [
      93
     ]
    },
    "float": {
     "line number": [
      93
     ]
    },
    "pycbc.detector.gmst_accurate": {
     "line number": [
      94
     ]
    },
    "pycbc.detector.lalsimulation": {
     "line number": [
      85
     ]
    },
    "str": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.detector.Detector.antenna_pattern": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      161
     ]
    },
    "numpy.array": {
     "line number": [
      151,
      158
     ]
    },
    "numpy.cos": {
     "line number": [
      141,
      143,
      145
     ]
    },
    "numpy.sin": {
     "line number": [
      142,
      144,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.detector.Detector.gmst_estimate": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.pi": {
     "line number": [
      100,
      101
     ]
    },
    "pycbc.detector.gmst_accurate": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.detector.Detector.light_travel_time_to_detector": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "astropy.constants.c.value": {
     "line number": [
      118
     ]
    },
    "float": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.detector.Detector.optimal_orientation": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "numpy.pi": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.detector.Detector.project_wave": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      252,
      252,
      256
     ]
    },
    "pycbc.detector.lalsimulation": {
     "line number": [
      251
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.detector.Detector.time_delay_from_detector": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "pycbc.detector.Detector.time_delay_from_earth_center": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.detector.Detector.time_delay_from_location": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "astropy.constants.c.value": {
     "line number": [
      212
     ]
    },
    "numpy.array": {
     "line number": [
      210
     ]
    },
    "numpy.cos": {
     "line number": [
      204,
      206
     ]
    },
    "numpy.sin": {
     "line number": [
      207,
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.detector.Time": {
  "data": {
   "shadows": "astropy.time.Time"
  },
  "type": "import"
 },
 "pycbc.detector.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.detector.constants": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "pycbc.detector.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "pycbc.detector.effective_distance": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      311,
      311
     ]
    },
    "numpy.sqrt": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.detector.get_available_detectors": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "list": {
     "line number": [
      64
     ]
    },
    "pycbc.detector.lal": {
     "line number": [
      60
     ]
    },
    "zip": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.detector.gmst_accurate": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "astropy.time.Time": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.detector.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.detector.lalsimulation": {
  "data": {
   "shadows": "lalsimulation"
  },
  "type": "import"
 },
 "pycbc.detector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.detector.overhead_antenna_pattern": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      300,
      300,
      301,
      301,
      302,
      304,
      304,
      305,
      306,
      306
     ]
    },
    "numpy.pi": {
     "line number": [
      298
     ]
    },
    "numpy.sin": {
     "line number": [
      302,
      302,
      305,
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.detector.sday": {
  "data": {
   "shadows": "astropy.units.si.sday"
  },
  "type": "import"
 },
 "pycbc.detector.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "pycbc.distributions": {
  "data": {
   "symbols_in_volume": {
    "pycbc.distributions.angular.CosAngle": {
     "line number": [
      47
     ]
    },
    "pycbc.distributions.angular.CosAngle.name": {
     "line number": [
      47
     ]
    },
    "pycbc.distributions.angular.SinAngle": {
     "line number": [
      48
     ]
    },
    "pycbc.distributions.angular.SinAngle.name": {
     "line number": [
      48
     ]
    },
    "pycbc.distributions.angular.UniformAngle": {
     "line number": [
      46
     ]
    },
    "pycbc.distributions.angular.UniformAngle.name": {
     "line number": [
      46
     ]
    },
    "pycbc.distributions.angular.UniformSolidAngle": {
     "line number": [
      49
     ]
    },
    "pycbc.distributions.angular.UniformSolidAngle.name": {
     "line number": [
      49
     ]
    },
    "pycbc.distributions.arbitrary.Arbitrary": {
     "line number": [
      40
     ]
    },
    "pycbc.distributions.arbitrary.Arbitrary.name": {
     "line number": [
      40
     ]
    },
    "pycbc.distributions.arbitrary.FromFile": {
     "line number": [
      41
     ]
    },
    "pycbc.distributions.arbitrary.FromFile.name": {
     "line number": [
      41
     ]
    },
    "pycbc.distributions.gaussian.Gaussian": {
     "line number": [
      42
     ]
    },
    "pycbc.distributions.gaussian.Gaussian.name": {
     "line number": [
      42
     ]
    },
    "pycbc.distributions.power_law.UniformPowerLaw": {
     "line number": [
      43
     ]
    },
    "pycbc.distributions.power_law.UniformPowerLaw.name": {
     "line number": [
      43
     ]
    },
    "pycbc.distributions.power_law.UniformRadius": {
     "line number": [
      44
     ]
    },
    "pycbc.distributions.power_law.UniformRadius.name": {
     "line number": [
      44
     ]
    },
    "pycbc.distributions.qnm.UniformF0Tau": {
     "line number": [
      52
     ]
    },
    "pycbc.distributions.qnm.UniformF0Tau.name": {
     "line number": [
      52
     ]
    },
    "pycbc.distributions.sky_location.UniformSky": {
     "line number": [
      50
     ]
    },
    "pycbc.distributions.sky_location.UniformSky.name": {
     "line number": [
      50
     ]
    },
    "pycbc.distributions.spins.IndependentChiPChiEff": {
     "line number": [
      39
     ]
    },
    "pycbc.distributions.spins.IndependentChiPChiEff.name": {
     "line number": [
      39
     ]
    },
    "pycbc.distributions.uniform.Uniform": {
     "line number": [
      45
     ]
    },
    "pycbc.distributions.uniform.Uniform.name": {
     "line number": [
      45
     ]
    },
    "pycbc.distributions.uniform_log.UniformLog10": {
     "line number": [
      51
     ]
    },
    "pycbc.distributions.uniform_log.UniformLog10.name": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.distributions.Arbitrary": {
  "data": {
   "shadows": "pycbc.distributions.arbitrary.Arbitrary"
  },
  "type": "import"
 },
 "pycbc.distributions.CosAngle": {
  "data": {
   "shadows": "pycbc.distributions.angular.CosAngle"
  },
  "type": "import"
 },
 "pycbc.distributions.FromFile": {
  "data": {
   "shadows": "pycbc.distributions.arbitrary.FromFile"
  },
  "type": "import"
 },
 "pycbc.distributions.Gaussian": {
  "data": {
   "shadows": "pycbc.distributions.gaussian.Gaussian"
  },
  "type": "import"
 },
 "pycbc.distributions.IndependentChiPChiEff": {
  "data": {
   "shadows": "pycbc.distributions.spins.IndependentChiPChiEff"
  },
  "type": "import"
 },
 "pycbc.distributions.JointDistribution": {
  "data": {
   "shadows": "pycbc.distributions.joint.JointDistribution"
  },
  "type": "import"
 },
 "pycbc.distributions.SinAngle": {
  "data": {
   "shadows": "pycbc.distributions.angular.SinAngle"
  },
  "type": "import"
 },
 "pycbc.distributions.Uniform": {
  "data": {
   "shadows": "pycbc.distributions.uniform.Uniform"
  },
  "type": "import"
 },
 "pycbc.distributions.UniformAngle": {
  "data": {
   "shadows": "pycbc.distributions.angular.UniformAngle"
  },
  "type": "import"
 },
 "pycbc.distributions.UniformF0Tau": {
  "data": {
   "shadows": "pycbc.distributions.qnm.UniformF0Tau"
  },
  "type": "import"
 },
 "pycbc.distributions.UniformLog10": {
  "data": {
   "shadows": "pycbc.distributions.uniform_log.UniformLog10"
  },
  "type": "import"
 },
 "pycbc.distributions.UniformPowerLaw": {
  "data": {
   "shadows": "pycbc.distributions.power_law.UniformPowerLaw"
  },
  "type": "import"
 },
 "pycbc.distributions.UniformRadius": {
  "data": {
   "shadows": "pycbc.distributions.power_law.UniformRadius"
  },
  "type": "import"
 },
 "pycbc.distributions.UniformSky": {
  "data": {
   "shadows": "pycbc.distributions.sky_location.UniformSky"
  },
  "type": "import"
 },
 "pycbc.distributions.UniformSolidAngle": {
  "data": {
   "shadows": "pycbc.distributions.angular.UniformSolidAngle"
  },
  "type": "import"
 },
 "pycbc.distributions._ConfigParser": {
  "data": {
   "shadows": "pycbc.workflow.ConfigParser"
  },
  "type": "import"
 },
 "pycbc.distributions._VARARGS_DELIM": {
  "data": {
   "shadows": "pycbc.VARARGS_DELIM"
  },
  "type": "import"
 },
 "pycbc.distributions._convert_liststring_to_list": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "len": {
     "line number": [
      96
     ]
    },
    "range": {
     "line number": [
      96
     ]
    },
    "str": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular": {
  "data": {},
  "type": "module"
 },
 "pycbc.distributions.angular.CosAngle": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "pycbc.distributions.angular.SinAngle": {
     "line number": [
      292
     ]
    },
    "pycbc.distributions.angular.numpy": {
     "line number": [
      316,
      317,
      318,
      319,
      319
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.angular.CosAngle.cdfinv": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "pycbc.distributions.angular.numpy": {
     "line number": [
      324,
      324,
      325,
      325,
      325,
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.Error": {
  "data": {
   "shadows": "six.moves.configparser.Error"
  },
  "type": "import"
 },
 "pycbc.distributions.angular.SinAngle": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "pycbc.distributions.angular.UniformAngle": {
     "line number": [
      178
     ]
    },
    "pycbc.distributions.angular.numpy": {
     "line number": [
      212,
      213,
      214,
      215
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.angular.SinAngle.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      224
     ]
    },
    "pycbc.boundaries.Bounds": {
     "line number": [
      220
     ]
    },
    "pycbc.distributions.angular.SinAngle": {
     "line number": [
      218
     ]
    },
    "pycbc.distributions.angular.numpy": {
     "line number": [
      223,
      226
     ]
    },
    "sum": {
     "line number": [
      223
     ]
    },
    "super": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.SinAngle._logpdf": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "pycbc.distributions.angular.numpy": {
     "line number": [
      254,
      256,
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.SinAngle._pdf": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "pycbc.distributions.angular.numpy": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.SinAngle.cdfinv": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "pycbc.distributions.angular.numpy": {
     "line number": [
      231,
      232,
      233,
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.SinAngle.rvs": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "float": {
     "line number": [
      280,
      282
     ]
    },
    "pycbc.distributions.angular.numpy": {
     "line number": [
      283,
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.UniformAngle": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "pycbc.distributions.angular.numpy": {
     "line number": [
      68
     ]
    },
    "pycbc.distributions.uniform.Uniform": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.angular.UniformAngle.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      90
     ]
    },
    "isinstance": {
     "line number": [
      80
     ]
    },
    "pycbc.boundaries.Bounds": {
     "line number": [
      74,
      80,
      86
     ]
    },
    "pycbc.distributions.angular.UniformAngle": {
     "line number": [
      96
     ]
    },
    "pycbc.distributions.angular.numpy": {
     "line number": [
      82,
      83,
      87,
      87,
      91,
      92,
      92,
      93
     ]
    },
    "super": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.UniformAngle.apply_boundary_conditions": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      120
     ]
    },
    "pycbc.distributions.angular.UniformAngle": {
     "line number": [
      123
     ]
    },
    "super": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.UniformAngle.domain": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "property": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.UniformAngle.from_config": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      125
     ]
    },
    "pycbc.distributions.bounded.bounded_from_config": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.UniformSolidAngle": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "pycbc.distributions.angular.SinAngle": {
     "line number": [
      375
     ]
    },
    "pycbc.distributions.angular.UniformAngle": {
     "line number": [
      376
     ]
    },
    "pycbc.distributions.bounded.BoundedDist": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.angular.UniformSolidAngle.__init__": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "sorted": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.UniformSolidAngle._logpdf": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "pycbc.distributions.angular.UniformSolidAngle._pdf": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "pycbc.distributions.angular.UniformSolidAngle.apply_boundary_conditions": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "pycbc.distributions.angular.UniformSolidAngle.azimuthal_angle": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "property": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.UniformSolidAngle.cdfinv": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "pycbc.distributions.angular.UniformSolidAngle.from_config": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      515
     ]
    },
    "cls": {
     "line number": [
      607
     ]
    },
    "pycbc.VARARGS_DELIM": {
     "line number": [
      576
     ]
    },
    "pycbc.distributions.bounded.get_param_bounds_from_config": {
     "line number": [
      596,
      599
     ]
    },
    "six.moves.configparser.Error": {
     "line number": [
      581,
      585,
      589,
      592
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.UniformSolidAngle.polar_angle": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "property": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.UniformSolidAngle.rvs": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      512
     ]
    },
    "float": {
     "line number": [
      502,
      504
     ]
    },
    "pycbc.distributions.angular.numpy": {
     "line number": [
      505
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.angular.VARARGS_DELIM": {
  "data": {
   "shadows": "pycbc.VARARGS_DELIM"
  },
  "type": "import"
 },
 "pycbc.distributions.angular.__all__": {
  "data": {
   "lineno": 613
  },
  "type": "constant"
 },
 "pycbc.distributions.angular.boundaries": {
  "data": {
   "shadows": "pycbc.boundaries"
  },
  "type": "import"
 },
 "pycbc.distributions.angular.bounded": {
  "data": {
   "shadows": "pycbc.distributions.bounded"
  },
  "type": "import"
 },
 "pycbc.distributions.angular.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.distributions.angular.uniform": {
  "data": {
   "shadows": "pycbc.distributions.uniform"
  },
  "type": "import"
 },
 "pycbc.distributions.arbitrary": {
  "data": {},
  "type": "module"
 },
 "pycbc.distributions.arbitrary.Arbitrary": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "pycbc.distributions.bounded.BoundedDist": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.arbitrary.Arbitrary.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      51,
      71
     ]
    },
    "pycbc.distributions.arbitrary.Arbitrary": {
     "line number": [
      48
     ]
    },
    "pycbc.distributions.arbitrary.numpy": {
     "line number": [
      58,
      70,
      70
     ]
    },
    "set": {
     "line number": [
      50,
      50
     ]
    },
    "super": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.arbitrary.Arbitrary._logpdf": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "pycbc.distributions.arbitrary.numpy": {
     "line number": [
      130,
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.arbitrary.Arbitrary._pdf": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      92,
      101,
      107
     ]
    },
    "float": {
     "line number": [
      118
     ]
    },
    "len": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.arbitrary.Arbitrary.from_config": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      192
     ]
    },
    "classmethod": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.arbitrary.Arbitrary.get_kde_from_arrays": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "pycbc.distributions.arbitrary.numpy": {
     "line number": [
      185
     ]
    },
    "staticmethod": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.arbitrary.Arbitrary.kde": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "property": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.arbitrary.Arbitrary.params": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "property": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.arbitrary.Arbitrary.rvs": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      171
     ]
    },
    "enumerate": {
     "line number": [
      163
     ]
    },
    "float": {
     "line number": [
      157,
      159
     ]
    },
    "int": {
     "line number": [
      160
     ]
    },
    "pycbc.distributions.arbitrary.numpy": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.arbitrary.Arbitrary.set_bandwidth": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "pycbc.distributions.arbitrary.FromFile": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "pycbc.distributions.arbitrary.Arbitrary": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.arbitrary.FromFile.__init__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      234
     ]
    },
    "len": {
     "line number": [
      237
     ]
    },
    "pycbc.distributions.arbitrary.FromFile": {
     "line number": [
      242
     ]
    },
    "super": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.arbitrary.FromFile.filename": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "property": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.arbitrary.FromFile.from_config": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      288
     ]
    },
    "pycbc.distributions.bounded.bounded_from_config": {
     "line number": [
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.arbitrary.FromFile.get_arrays_from_file": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      282
     ]
    },
    "ValueError": {
     "line number": [
      269,
      275
     ]
    },
    "isinstance": {
     "line number": [
      271
     ]
    },
    "list": {
     "line number": [
      271
     ]
    },
    "pycbc.distributions.arbitrary.h5py": {
     "line number": [
      267
     ]
    },
    "staticmethod": {
     "line number": [
      249
     ]
    },
    "str": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.arbitrary.__all__": {
  "data": {
   "lineno": 328
  },
  "type": "constant"
 },
 "pycbc.distributions.arbitrary.bounded": {
  "data": {
   "shadows": "pycbc.distributions.bounded"
  },
  "type": "import"
 },
 "pycbc.distributions.arbitrary.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.distributions.arbitrary.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.distributions.arbitrary.pycbc.transforms": {
  "data": {
   "shadows": "pycbc.transforms"
  },
  "type": "import"
 },
 "pycbc.distributions.arbitrary.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "pycbc.distributions.bounded": {
  "data": {},
  "type": "module"
 },
 "pycbc.distributions.bounded.BoundedDist": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "object": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.bounded.BoundedDist.__contains__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      246
     ]
    },
    "ValueError": {
     "line number": [
      247
     ]
    },
    "all": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.bounded.BoundedDist.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      222,
      225
     ]
    },
    "list": {
     "line number": [
      232
     ]
    },
    "pycbc.boundaries.Bounds": {
     "line number": [
      221,
      222,
      223,
      225
     ]
    },
    "pycbc.distributions.bounded.warnings": {
     "line number": [
      228
     ]
    },
    "sorted": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.bounded.BoundedDist._logpdf": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.bounded.BoundedDist._pdf": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.bounded.BoundedDist.apply_boundary_conditions": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.bounded.BoundedDist.bounds": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "property": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.bounded.BoundedDist.from_config": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      305
     ]
    },
    "cls": {
     "line number": [
      334
     ]
    },
    "pycbc.distributions.bounded.bounded_from_config": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.bounded.BoundedDist.logpdf": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "pycbc.distributions.bounded.BoundedDist.params": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "property": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.bounded.BoundedDist.pdf": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "pycbc.distributions.bounded.Error": {
  "data": {
   "shadows": "six.moves.configparser.Error"
  },
  "type": "import"
 },
 "pycbc.distributions.bounded.VARARGS_DELIM": {
  "data": {
   "shadows": "pycbc.VARARGS_DELIM"
  },
  "type": "import"
 },
 "pycbc.distributions.bounded.boundaries": {
  "data": {
   "shadows": "pycbc.boundaries"
  },
  "type": "import"
 },
 "pycbc.distributions.bounded.bounded_from_config": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      171,
      186
     ]
    },
    "cls": {
     "line number": [
      195
     ]
    },
    "float": {
     "line number": [
      185
     ]
    },
    "list": {
     "line number": [
      164
     ]
    },
    "pycbc.VARARGS_DELIM": {
     "line number": [
      152
     ]
    },
    "pycbc.distributions.bounded.get_param_bounds_from_config": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.bounded.get_param_bounds_from_config": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      93
     ]
    },
    "float": {
     "line number": [
      83,
      87
     ]
    },
    "pycbc.boundaries.Bounds": {
     "line number": [
      111
     ]
    },
    "six.moves.configparser.Error": {
     "line number": [
      84,
      88,
      101,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.bounded.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pycbc.distributions.constraints": {
  "data": {
   "shadows": "pycbc.distributions.constraints"
  },
  "type": "import"
 },
 "pycbc.distributions.constraints.CartesianSpinSpace": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "pycbc.distributions.constraints.Constraint": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.constraints.CartesianSpinSpace._constraint": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "pycbc.distributions.constraints.Constraint": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "object": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.constraints.Constraint.__call__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "NameError": {
     "line number": [
      47
     ]
    },
    "ValueError": {
     "line number": [
      41
     ]
    },
    "dict": {
     "line number": [
      38
     ]
    },
    "isinstance": {
     "line number": [
      38,
      40,
      53
     ]
    },
    "pycbc.io.record.FieldArray": {
     "line number": [
      40,
      53
     ]
    },
    "pycbc.io.record.FieldArray.from_kwargs": {
     "line number": [
      39
     ]
    },
    "pycbc.transforms.apply_transforms": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.constraints.Constraint.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "pycbc.transforms": {
     "line number": [
      30
     ]
    },
    "setattr": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.constraints.Constraint._constraint": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pycbc.distributions.constraints.EffectiveSpinSpace": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "pycbc.distributions.constraints.Constraint": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.constraints.EffectiveSpinSpace._constraint": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "pycbc.distributions.constraints.MtotalLT": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "pycbc.distributions.constraints.Constraint": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.constraints.MtotalLT._constraint": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pycbc.distributions.constraints.constraints": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "pycbc.distributions.constraints.record": {
  "data": {
   "shadows": "pycbc.io.record"
  },
  "type": "import"
 },
 "pycbc.distributions.constraints.transforms": {
  "data": {
   "shadows": "pycbc.transforms"
  },
  "type": "import"
 },
 "pycbc.distributions.distribs": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pycbc.distributions.gaussian": {
  "data": {},
  "type": "module"
 },
 "pycbc.distributions.gaussian.Gaussian": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "pycbc.distributions.bounded.BoundedDist": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.gaussian.Gaussian.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      107,
      111
     ]
    },
    "any": {
     "line number": [
      106,
      110
     ]
    },
    "dict": {
     "line number": [
      99,
      100,
      114,
      116
     ]
    },
    "pycbc.distributions.gaussian.Gaussian": {
     "line number": [
      102
     ]
    },
    "pycbc.distributions.gaussian.numpy": {
     "line number": [
      126,
      126,
      128
     ]
    },
    "set": {
     "line number": [
      105,
      105,
      109,
      109
     ]
    },
    "super": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.gaussian.Gaussian._logpdf": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "pycbc.distributions.gaussian.numpy": {
     "line number": [
      175
     ]
    },
    "sum": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.gaussian.Gaussian._pdf": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "pycbc.distributions.gaussian.numpy": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.gaussian.Gaussian.cdfinv": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "pycbc.distributions.gaussian.numpy": {
     "line number": [
      147
     ]
    },
    "scipy.special.erf": {
     "line number": [
      148,
      149,
      152
     ]
    },
    "scipy.special.erfinv": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.gaussian.Gaussian.from_config": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      211
     ]
    },
    "pycbc.distributions.bounded.bounded_from_config": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.gaussian.Gaussian.mean": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "property": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.gaussian.Gaussian.rvs": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "float": {
     "line number": [
      198,
      200
     ]
    },
    "pycbc.distributions.gaussian.numpy": {
     "line number": [
      201,
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.gaussian.Gaussian.var": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "property": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.gaussian.__all__": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "pycbc.distributions.gaussian.bounded": {
  "data": {
   "shadows": "pycbc.distributions.bounded"
  },
  "type": "import"
 },
 "pycbc.distributions.gaussian.erf": {
  "data": {
   "shadows": "scipy.special.erf"
  },
  "type": "import"
 },
 "pycbc.distributions.gaussian.erfinv": {
  "data": {
   "shadows": "scipy.special.erfinv"
  },
  "type": "import"
 },
 "pycbc.distributions.gaussian.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.distributions.gaussian.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "pycbc.distributions.joint": {
  "data": {},
  "type": "module"
 },
 "pycbc.distributions.joint.JointDistribution": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "object": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.joint.JointDistribution.__call__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "constraint": {
     "line number": [
      157,
      158
     ]
    },
    "d": {
     "line number": [
      160,
      161
     ]
    },
    "pycbc.distributions.joint.numpy": {
     "line number": [
      159
     ]
    },
    "sum": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.joint.JointDistribution.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      94,
      99
     ]
    },
    "bool": {
     "line number": [
      119
     ]
    },
    "constraint": {
     "line number": [
      121
     ]
    },
    "float": {
     "line number": [
      125
     ]
    },
    "int": {
     "line number": [
      107
     ]
    },
    "len": {
     "line number": [
      119
     ]
    },
    "pycbc.distributions.joint.logging": {
     "line number": [
      109
     ]
    },
    "pycbc.distributions.joint.numpy": {
     "line number": [
      119,
      132
     ]
    },
    "set": {
     "line number": [
      87,
      89,
      91
     ]
    },
    "sum": {
     "line number": [
      125
     ]
    },
    "tuple": {
     "line number": [
      75,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.joint.JointDistribution.apply_boundary_conditions": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "pycbc.distributions.joint.JointDistribution.rvs": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      185
     ]
    },
    "float": {
     "line number": [
      168
     ]
    },
    "pycbc.distributions.joint.numpy": {
     "line number": [
      181,
      185
     ]
    },
    "pycbc.io.record.FieldArray": {
     "line number": [
      168
     ]
    },
    "self": {
     "line number": [
      185
     ]
    },
    "self.variable_args": {
     "line number": [
      185
     ]
    },
    "zip": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.joint.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.distributions.joint.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.distributions.joint.record": {
  "data": {
   "shadows": "pycbc.io.record"
  },
  "type": "import"
 },
 "pycbc.distributions.power_law": {
  "data": {},
  "type": "module"
 },
 "pycbc.distributions.power_law.UniformPowerLaw": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "pycbc.distributions.bounded.BoundedDist": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.power_law.UniformPowerLaw.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "pycbc.distributions.power_law.UniformPowerLaw": {
     "line number": [
      129
     ]
    },
    "pycbc.distributions.power_law.numpy": {
     "line number": [
      137
     ]
    },
    "super": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.power_law.UniformPowerLaw._logpdf": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      212
     ]
    },
    "pycbc.distributions.power_law.numpy": {
     "line number": [
      217,
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.power_law.UniformPowerLaw._pdf": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      195
     ]
    },
    "float": {
     "line number": [
      201
     ]
    },
    "pycbc.distributions.power_law.numpy": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.power_law.UniformPowerLaw.cdfinv": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "pycbc.distributions.power_law.UniformPowerLaw.from_config": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      222
     ]
    },
    "pycbc.distributions.power_law.UniformPowerLaw": {
     "line number": [
      245
     ]
    },
    "super": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.power_law.UniformPowerLaw.lognorm": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "property": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.power_law.UniformPowerLaw.norm": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "property": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.power_law.UniformPowerLaw.rvs": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "float": {
     "line number": [
      167,
      169
     ]
    },
    "pycbc.distributions.power_law.numpy": {
     "line number": [
      170,
      172,
      173,
      174,
      175,
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.power_law.UniformRadius": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "pycbc.distributions.power_law.UniformPowerLaw": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.power_law.UniformRadius.__init__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "pycbc.distributions.power_law.UniformRadius": {
     "line number": [
      258
     ]
    },
    "super": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.power_law.__all__": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "pycbc.distributions.power_law.bounded": {
  "data": {
   "shadows": "pycbc.distributions.bounded"
  },
  "type": "import"
 },
 "pycbc.distributions.power_law.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.distributions.qnm": {
  "data": {},
  "type": "module"
 },
 "pycbc.distributions.qnm.UniformF0Tau": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "pycbc.distributions.qnm.UniformF0Tau.__contains__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "pycbc.distributions.qnm.UniformF0Tau": {
     "line number": [
      142
     ]
    },
    "super": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.qnm.UniformF0Tau.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      108,
      110,
      136
     ]
    },
    "int": {
     "line number": [
      129
     ]
    },
    "pycbc.boundaries.Bounds": {
     "line number": [
      119,
      121
     ]
    },
    "pycbc.distributions.qnm.UniformF0Tau": {
     "line number": [
      114,
      130
     ]
    },
    "pycbc.distributions.qnm.numpy": {
     "line number": [
      116,
      127,
      128,
      132,
      138,
      138,
      139
     ]
    },
    "super": {
     "line number": [
      114,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.qnm.UniformF0Tau._constraints": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "int": {
     "line number": [
      153,
      153
     ]
    },
    "pycbc.conversions.final_mass_from_f0_tau": {
     "line number": [
      159
     ]
    },
    "pycbc.conversions.final_spin_from_f0_tau": {
     "line number": [
      160
     ]
    },
    "pycbc.distributions.qnm.numpy": {
     "line number": [
      158,
      163
     ]
    },
    "pycbc.distributions.qnm.re": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.qnm.UniformF0Tau.from_config": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      250
     ]
    },
    "classmethod": {
     "line number": [
      193
     ]
    },
    "cls": {
     "line number": [
      264
     ]
    },
    "float": {
     "line number": [
      259
     ]
    },
    "int": {
     "line number": [
      262
     ]
    },
    "pycbc.distributions.qnm.pycbc": {
     "line number": [
      235
     ]
    },
    "set": {
     "line number": [
      235,
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.qnm.UniformF0Tau.rvs": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "float": {
     "line number": [
      180
     ]
    },
    "int": {
     "line number": [
      179
     ]
    },
    "pycbc.distributions.qnm.UniformF0Tau": {
     "line number": [
      185
     ]
    },
    "pycbc.distributions.qnm.numpy": {
     "line number": [
      181
     ]
    },
    "super": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.qnm.boundaries": {
  "data": {
   "shadows": "pycbc.boundaries"
  },
  "type": "import"
 },
 "pycbc.distributions.qnm.conversions": {
  "data": {
   "shadows": "pycbc.conversions"
  },
  "type": "import"
 },
 "pycbc.distributions.qnm.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.distributions.qnm.pycbc": {
  "data": {
   "shadows": "pycbc"
  },
  "type": "import"
 },
 "pycbc.distributions.qnm.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pycbc.distributions.read_constraints_from_config": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      195
     ]
    },
    "float": {
     "line number": [
      194
     ]
    },
    "pycbc.VARARGS_DELIM": {
     "line number": [
      191
     ]
    },
    "pycbc.distributions.constraints.constraints": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.read_distributions_from_config": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      80
     ]
    },
    "pycbc.distributions.distribs": {
     "line number": [
      75
     ]
    },
    "set": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.read_params_from_config": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      131,
      137
     ]
    },
    "ValueError": {
     "line number": [
      153
     ]
    },
    "any": {
     "line number": [
      130,
      136
     ]
    },
    "dict": {
     "line number": [
      142
     ]
    },
    "float": {
     "line number": [
      152
     ]
    },
    "pycbc.distributions._convert_liststring_to_list": {
     "line number": [
      156
     ]
    },
    "pycbc.workflow.ConfigParser.NoSectionError": {
     "line number": [
      144
     ]
    },
    "set": {
     "line number": [
      128,
      129,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.sky_location": {
  "data": {},
  "type": "module"
 },
 "pycbc.distributions.sky_location.UniformSky": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "pycbc.distributions.angular.CosAngle": {
     "line number": [
      30
     ]
    },
    "pycbc.distributions.angular.UniformSolidAngle": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.sky_location.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pycbc.distributions.sky_location.angular": {
  "data": {
   "shadows": "pycbc.distributions.angular"
  },
  "type": "import"
 },
 "pycbc.distributions.spins": {
  "data": {},
  "type": "module"
 },
 "pycbc.distributions.spins.Arbitrary": {
  "data": {
   "shadows": "pycbc.distributions.arbitrary.Arbitrary"
  },
  "type": "import"
 },
 "pycbc.distributions.spins.BoundedDist": {
  "data": {
   "shadows": "pycbc.distributions.bounded.BoundedDist"
  },
  "type": "import"
 },
 "pycbc.distributions.spins.IndependentChiPChiEff": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "pycbc.distributions.arbitrary.Arbitrary": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.spins.IndependentChiPChiEff.__contains__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "all": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.spins.IndependentChiPChiEff.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      100
     ]
    },
    "dict": {
     "line number": [
      126
     ]
    },
    "int": {
     "line number": [
      123
     ]
    },
    "isinstance": {
     "line number": [
      74,
      78,
      83,
      89
     ]
    },
    "pycbc.distributions.angular.UniformAngle": {
     "line number": [
      104,
      105
     ]
    },
    "pycbc.distributions.bounded.BoundedDist": {
     "line number": [
      74,
      78,
      83,
      89
     ]
    },
    "pycbc.distributions.power_law.UniformPowerLaw": {
     "line number": [
      101,
      102
     ]
    },
    "pycbc.distributions.spins.IndependentChiPChiEff": {
     "line number": [
      128
     ]
    },
    "pycbc.distributions.spins.numpy": {
     "line number": [
      118,
      122,
      125
     ]
    },
    "pycbc.distributions.uniform.Uniform": {
     "line number": [
      77,
      81,
      88,
      94
     ]
    },
    "super": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.spins.IndependentChiPChiEff._constraints": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "pycbc.conversions.ensurearray": {
     "line number": [
      148
     ]
    },
    "pycbc.conversions.spin1x_from_xi1_phi_a_phi_s": {
     "line number": [
      152
     ]
    },
    "pycbc.conversions.spin1y_from_xi1_phi_a_phi_s": {
     "line number": [
      155
     ]
    },
    "pycbc.conversions.spin1z_from_mass1_mass2_chi_eff_chi_a": {
     "line number": [
      158
     ]
    },
    "pycbc.conversions.spin2x_from_mass1_mass2_xi2_phi_a_phi_s": {
     "line number": [
      153
     ]
    },
    "pycbc.conversions.spin2y_from_mass1_mass2_xi2_phi_a_phi_s": {
     "line number": [
      156
     ]
    },
    "pycbc.conversions.spin2z_from_mass1_mass2_chi_eff_chi_a": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.spins.IndependentChiPChiEff._draw": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      182,
      186,
      191,
      195,
      200,
      204,
      209,
      213
     ]
    },
    "float": {
     "line number": [
      215
     ]
    },
    "pycbc.distributions.spins.numpy": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.spins.IndependentChiPChiEff.apply_boundary_conditions": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "pycbc.distributions.spins.IndependentChiPChiEff.from_config": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      275
     ]
    },
    "classmethod": {
     "line number": [
      249
     ]
    },
    "cls": {
     "line number": [
      287
     ]
    },
    "int": {
     "line number": [
      284
     ]
    },
    "pycbc.distributions.bounded.VARARGS_DELIM": {
     "line number": [
      273
     ]
    },
    "pycbc.distributions.bounded.get_param_bounds_from_config": {
     "line number": [
      278,
      279,
      280,
      281,
      282
     ]
    },
    "set": {
     "line number": [
      274,
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.spins.IndependentChiPChiEff.rvs": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "float": {
     "line number": [
      235
     ]
    },
    "int": {
     "line number": [
      234
     ]
    },
    "pycbc.distributions.spins.numpy": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.spins.Uniform": {
  "data": {
   "shadows": "pycbc.distributions.uniform.Uniform"
  },
  "type": "import"
 },
 "pycbc.distributions.spins.UniformAngle": {
  "data": {
   "shadows": "pycbc.distributions.angular.UniformAngle"
  },
  "type": "import"
 },
 "pycbc.distributions.spins.UniformPowerLaw": {
  "data": {
   "shadows": "pycbc.distributions.power_law.UniformPowerLaw"
  },
  "type": "import"
 },
 "pycbc.distributions.spins.VARARGS_DELIM": {
  "data": {
   "shadows": "pycbc.distributions.bounded.VARARGS_DELIM"
  },
  "type": "import"
 },
 "pycbc.distributions.spins.conversions": {
  "data": {
   "shadows": "pycbc.conversions"
  },
  "type": "import"
 },
 "pycbc.distributions.spins.get_param_bounds_from_config": {
  "data": {
   "shadows": "pycbc.distributions.bounded.get_param_bounds_from_config"
  },
  "type": "import"
 },
 "pycbc.distributions.spins.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.distributions.uniform": {
  "data": {},
  "type": "module"
 },
 "pycbc.distributions.uniform.Uniform": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "pycbc.distributions.bounded.BoundedDist": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.uniform.Uniform.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      99
     ]
    },
    "pycbc.distributions.uniform.Uniform": {
     "line number": [
      95
     ]
    },
    "pycbc.distributions.uniform.numpy": {
     "line number": [
      98,
      99,
      101,
      102
     ]
    },
    "sum": {
     "line number": [
      99
     ]
    },
    "super": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.uniform.Uniform._logpdf": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "pycbc.distributions.uniform.numpy": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.uniform.Uniform._pdf": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "pycbc.distributions.uniform.Uniform.cdfinv": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "pycbc.distributions.uniform.Uniform.from_config": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      171
     ]
    },
    "pycbc.distributions.uniform.Uniform": {
     "line number": [
      194
     ]
    },
    "super": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.uniform.Uniform.lognorm": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "property": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.uniform.Uniform.norm": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "property": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.uniform.Uniform.rvs": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "float": {
     "line number": [
      161,
      163
     ]
    },
    "pycbc.distributions.uniform.numpy": {
     "line number": [
      164,
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.uniform.__all__": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "pycbc.distributions.uniform.bounded": {
  "data": {
   "shadows": "pycbc.distributions.bounded"
  },
  "type": "import"
 },
 "pycbc.distributions.uniform.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.distributions.uniform_log": {
  "data": {},
  "type": "module"
 },
 "pycbc.distributions.uniform_log.UniformLog10": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "pycbc.distributions.uniform.Uniform": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.distributions.uniform_log.UniformLog10.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "pycbc.distributions.uniform_log.UniformLog10": {
     "line number": [
      42
     ]
    },
    "pycbc.distributions.uniform_log.numpy": {
     "line number": [
      43,
      43,
      43,
      45
     ]
    },
    "super": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.uniform_log.UniformLog10._logpdf": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "pycbc.distributions.uniform_log.numpy": {
     "line number": [
      105,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.uniform_log.UniformLog10._pdf": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "pycbc.distributions.uniform_log.numpy": {
     "line number": [
      93,
      93,
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.uniform_log.UniformLog10.cdfinv": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "pycbc.distributions.uniform_log.numpy": {
     "line number": [
      50,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.uniform_log.UniformLog10.rvs": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "float": {
     "line number": [
      76,
      78
     ]
    },
    "pycbc.distributions.uniform_log.numpy": {
     "line number": [
      79,
      81,
      82,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.distributions.uniform_log.__all__": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "pycbc.distributions.uniform_log.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.distributions.uniform_log.uniform": {
  "data": {
   "shadows": "pycbc.distributions.uniform"
  },
  "type": "import"
 },
 "pycbc.dq": {
  "data": {},
  "type": "module"
 },
 "pycbc.dq.GWOSC_URL": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "pycbc.dq.download_file": {
  "data": {
   "shadows": "astropy.utils.data.download_file"
  },
  "type": "import"
 },
 "pycbc.dq.get_run": {
  "data": {
   "shadows": "pycbc.frame.losc.get_run"
  },
  "type": "import"
 },
 "pycbc.dq.h": {
  "data": {
   "shadows": "glue.ligolw.ligolw.LIGOLWContentHandler"
  },
  "type": "import"
 },
 "pycbc.dq.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pycbc.dq.ligolw_utils": {
  "data": {
   "shadows": "glue.ligolw.utils"
  },
  "type": "import"
 },
 "pycbc.dq.lsctables": {
  "data": {
   "shadows": "glue.ligolw.lsctables"
  },
  "type": "import"
 },
 "pycbc.dq.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.dq.parse_flag_str": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      348
     ]
    },
    "float": {
     "line number": [
      363,
      363
     ]
    },
    "int": {
     "line number": [
      370,
      370
     ]
    },
    "len": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.dq.parse_veto_definer": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "glue.ligolw.ligolw.LIGOLWContentHandler": {
     "line number": [
      55,
      65
     ]
    },
    "glue.ligolw.lsctables.use_in": {
     "line number": [
      55
     ]
    },
    "glue.ligolw.table.get_table": {
     "line number": [
      66
     ]
    },
    "glue.ligolw.utils.load_filename": {
     "line number": [
      64
     ]
    },
    "len": {
     "line number": [
      77
     ]
    },
    "pycbc.dq.numpy": {
     "line number": [
      70,
      71,
      72,
      73,
      74,
      75
     ]
    },
    "range": {
     "line number": [
      61,
      77
     ]
    },
    "str": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.dq.query": {
  "data": {
   "shadows": "dqsegdb2.query.query_segments"
  },
  "type": "import"
 },
 "pycbc.dq.query_cumulative_flags": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "ligo.segments.segment": {
     "line number": [
      298,
      303
     ]
    },
    "ligo.segments.segmentlist": {
     "line number": [
      283,
      296,
      303
     ]
    },
    "pycbc.dq.query_flag": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.dq.query_flag": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      166,
      223
     ]
    },
    "ImportError": {
     "line number": [
      183
     ]
    },
    "ValueError": {
     "line number": [
      169,
      184,
      234
     ]
    },
    "astropy.utils.data.download_file": {
     "line number": [
      161
     ]
    },
    "dqsegdb2.query.query_segments": {
     "line number": [
      197,
      218
     ]
    },
    "int": {
     "line number": [
      159,
      159,
      197,
      198,
      212,
      219,
      219,
      231,
      231
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      204,
      213,
      222,
      231
     ]
    },
    "ligo.segments.segmentlist": {
     "line number": [
      138,
      196,
      213,
      231,
      237
     ]
    },
    "open": {
     "line number": [
      162
     ]
    },
    "print": {
     "line number": [
      168,
      172,
      224
     ]
    },
    "pycbc.dq.GWOSC_URL": {
     "line number": [
      157
     ]
    },
    "pycbc.dq.json": {
     "line number": [
      162
     ]
    },
    "pycbc.dq.parse_veto_definer": {
     "line number": [
      190
     ]
    },
    "pycbc.frame.losc.get_run": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.dq.query_str": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      423
     ]
    },
    "len": {
     "line number": [
      422,
      422,
      422
     ]
    },
    "pycbc.dq.parse_flag_str": {
     "line number": [
      418
     ]
    },
    "pycbc.dq.query_cumulative_flags": {
     "line number": [
      424,
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.dq.segment": {
  "data": {
   "shadows": "ligo.segments.segment"
  },
  "type": "import"
 },
 "pycbc.dq.segmentlist": {
  "data": {
   "shadows": "ligo.segments.segmentlist"
  },
  "type": "import"
 },
 "pycbc.dq.table": {
  "data": {
   "shadows": "glue.ligolw.table"
  },
  "type": "import"
 },
 "pycbc.events": {
  "data": {},
  "type": "module"
 },
 "pycbc.events.coinc_rate": {
  "data": {},
  "type": "module"
 },
 "pycbc.events.coinc_rate.combination_noise_coinc_rate": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "list": {
     "line number": [
      85,
      87
     ]
    },
    "pycbc.events.coinc_rate.multiifo_noise_coincident_area": {
     "line number": [
      85
     ]
    },
    "pycbc.events.coinc_rate.numpy": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.coinc_rate.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pycbc.events.coinc_rate.multiifo_noise_coinc_rate": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "len": {
     "line number": [
      49,
      51
     ]
    },
    "list": {
     "line number": [
      41
     ]
    },
    "pycbc.events.coinc_rate.combination_noise_coinc_rate": {
     "line number": [
      45
     ]
    },
    "pycbc.events.coinc_rate.itertools": {
     "line number": [
      51
     ]
    },
    "sorted": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.coinc_rate.multiifo_noise_coincident_area": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      137
     ]
    },
    "enumerate": {
     "line number": [
      126,
      134
     ]
    },
    "int": {
     "line number": [
      127
     ]
    },
    "len": {
     "line number": [
      115
     ]
    },
    "pycbc.events.coinc_rate.numpy": {
     "line number": [
      121,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.coinc_rate.multiifo_signal_coincident_area": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      182
     ]
    },
    "enumerate": {
     "line number": [
      171
     ]
    },
    "int": {
     "line number": [
      172
     ]
    },
    "len": {
     "line number": [
      156
     ]
    },
    "pycbc.events.coinc_rate.numpy": {
     "line number": [
      164,
      172,
      178,
      180,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.coinc_rate.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.events.coinc_rate.pycbc.detector": {
  "data": {
   "shadows": "pycbc.detector"
  },
  "type": "import"
 },
 "pycbc.events.eventmgr": {
  "data": {},
  "type": "module"
 },
 "pycbc.events.eventmgr.Array": {
  "data": {
   "shadows": "pycbc.types.Array"
  },
  "type": "import"
 },
 "pycbc.events.eventmgr.Detector": {
  "data": {
   "shadows": "pycbc.detector.Detector"
  },
  "type": "import"
 },
 "pycbc.events.eventmgr.EventManager": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "object": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.eventmgr.EventManager.__init__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "int": {
     "line number": [
      182
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      186,
      190
     ]
    },
    "zip": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.add_template_events": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      300
     ]
    },
    "len": {
     "line number": [
      293
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      293,
      304
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      300
     ]
    },
    "zip": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.add_template_params": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.chisq_threshold": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      209
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.cluster_template_events": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "len": {
     "line number": [
      312
     ]
    },
    "pycbc.events.eventmgr.findchirp_cluster_over_window": {
     "line number": [
      314
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      312,
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.consolidate_events": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      353
     ]
    },
    "len": {
     "line number": [
      330,
      335,
      340,
      351,
      358
     ]
    },
    "pycbc.events.eventmgr.logging": {
     "line number": [
      330,
      332,
      335,
      338,
      340,
      343,
      351,
      354,
      358
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.finalize_events": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      363
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.finalize_template_events": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.from_multi_ifo_interface": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      193
     ]
    },
    "cls": {
     "line number": [
      205
     ]
    },
    "dict": {
     "line number": [
      203
     ]
    },
    "getattr": {
     "line number": [
      204
     ]
    },
    "isinstance": {
     "line number": [
      203
     ]
    },
    "pycbc.events.eventmgr.copy": {
     "line number": [
      200
     ]
    },
    "setattr": {
     "line number": [
      204
     ]
    },
    "vars": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.keep_loudest_in_interval": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      248
     ]
    },
    "len": {
     "line number": [
      241
     ]
    },
    "pycbc.conversions.mchirp_from_mass1_mass2": {
     "line number": [
      265
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      258,
      259,
      263,
      264,
      268,
      268,
      269,
      275,
      279,
      283
     ]
    },
    "pycbc.events.stat.sngl_statistic_dict": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.keep_near_injection": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "len": {
     "line number": [
      230
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      233,
      234
     ]
    },
    "pycbc.events.veto.indices_within_times": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.make_output_dir": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.new_template": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.newsnr_threshold": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      220
     ]
    },
    "abs": {
     "line number": [
      223
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      225,
      226
     ]
    },
    "pycbc.events.eventmgr.threshold": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.save_performance": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.write_events": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.write_to_hdf": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      420,
      445
     ]
    },
    "abs": {
     "line number": [
      414
     ]
    },
    "float": {
     "line number": [
      428,
      482,
      486,
      490,
      494,
      500,
      500,
      501,
      501,
      502,
      502,
      504,
      504,
      506,
      508,
      508,
      509,
      528
     ]
    },
    "fw": {
     "line number": [
      411
     ]
    },
    "len": {
     "line number": [
      413,
      465,
      470
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      408,
      422,
      432,
      434,
      436,
      438,
      447,
      449,
      454,
      455,
      465,
      470,
      481,
      484,
      489,
      492,
      499,
      504,
      506,
      508,
      509,
      528,
      530,
      532
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.write_to_hdf.fw": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "object": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.eventmgr.EventManager.write_to_hdf.fw.__init__": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "pycbc.events.eventmgr.h5py": {
     "line number": [
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManager.write_to_hdf.fw.__setitem__": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerCoherent": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": {
    "pycbc.events.eventmgr.EventManagerMultiDetBase": {
     "line number": [
      575
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.eventmgr.EventManagerCoherent.__init__": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": {
    "int": {
     "line number": [
      581,
      582,
      583
     ]
    },
    "pycbc.events.eventmgr.EventManagerCoherent": {
     "line number": [
      578
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      586,
      592
     ]
    },
    "super": {
     "line number": [
      578
     ]
    },
    "zip": {
     "line number": [
      584
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerCoherent.add_template_events_to_network": {
  "data": {
   "lineno": 614
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerCoherent.add_template_network_events": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      608
     ]
    },
    "len": {
     "line number": [
      600
     ]
    },
    "max": {
     "line number": [
      600
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      599,
      612
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      608
     ]
    },
    "zip": {
     "line number": [
      606
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerCoherent.finalize_template_events": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      784
     ]
    },
    "len": {
     "line number": [
      813,
      831
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      785,
      792,
      793,
      794,
      795,
      799,
      800,
      801,
      802,
      806,
      807,
      808,
      809,
      814,
      832,
      838,
      843,
      845,
      848
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerCoherent.write_to_hdf": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      672,
      699
     ]
    },
    "abs": {
     "line number": [
      665
     ]
    },
    "enumerate": {
     "line number": [
      658
     ]
    },
    "float": {
     "line number": [
      648,
      679,
      731,
      736,
      741,
      746,
      751,
      752,
      753,
      753,
      754,
      754,
      756,
      756,
      758,
      760,
      760,
      767
     ]
    },
    "fw": {
     "line number": [
      638
     ]
    },
    "len": {
     "line number": [
      663,
      724
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      636,
      641,
      661,
      673,
      684,
      686,
      689,
      691,
      701,
      703,
      708,
      709,
      724,
      729,
      730,
      733,
      735,
      739,
      740,
      743,
      745,
      751,
      756,
      758,
      760,
      766,
      768,
      770
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerCoherent.write_to_hdf.fw": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": {
    "object": {
     "line number": [
      623
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.eventmgr.EventManagerCoherent.write_to_hdf.fw.__init__": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": {
    "pycbc.events.eventmgr.h5py": {
     "line number": [
      626
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerCoherent.write_to_hdf.fw.__setitem__": {
  "data": {
   "lineno": 628
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerMultiDet": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": {
    "pycbc.events.eventmgr.EventManagerMultiDetBase": {
     "line number": [
      851
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.eventmgr.EventManagerMultiDet.__init__": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": {
    "pycbc.events.eventmgr.EventManagerMultiDet": {
     "line number": [
      853
     ]
    },
    "super": {
     "line number": [
      853
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerMultiDet.cluster_template_events_single_ifo": {
  "data": {
   "lineno": 857
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerMultiDet.finalize_template_events": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      880
     ]
    },
    "float": {
     "line number": [
      884,
      886
     ]
    },
    "len": {
     "line number": [
      871,
      878,
      892,
      892,
      896
     ]
    },
    "pycbc.detector.Detector": {
     "line number": [
      887,
      888
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      872,
      902,
      904
     ]
    },
    "zip": {
     "line number": [
      897
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerMultiDet.write_events": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      915
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerMultiDet.write_to_hdf": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      948,
      970
     ]
    },
    "abs": {
     "line number": [
      942
     ]
    },
    "float": {
     "line number": [
      955,
      1005,
      1010,
      1015,
      1020,
      1026,
      1026,
      1027,
      1027,
      1028,
      1028,
      1030,
      1030,
      1032,
      1034,
      1034,
      1041
     ]
    },
    "fw": {
     "line number": [
      934
     ]
    },
    "len": {
     "line number": [
      940,
      990,
      995
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      931,
      937,
      949,
      959,
      960,
      962,
      963,
      972,
      974,
      980,
      980,
      990,
      995,
      1003,
      1004,
      1007,
      1009,
      1013,
      1014,
      1017,
      1019,
      1025,
      1030,
      1032,
      1034,
      1040,
      1042,
      1044
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerMultiDet.write_to_hdf.fw": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": {
    "object": {
     "line number": [
      918
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.eventmgr.EventManagerMultiDet.write_to_hdf.fw.__init__": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": {
    "pycbc.events.eventmgr.h5py": {
     "line number": [
      921
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerMultiDet.write_to_hdf.fw.__setitem__": {
  "data": {
   "lineno": 923
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerMultiDetBase": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": {
    "pycbc.events.eventmgr.EventManager": {
     "line number": [
      535
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.eventmgr.EventManagerMultiDetBase.__init__": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      547
     ]
    },
    "int": {
     "line number": [
      551,
      551
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      555,
      564
     ]
    },
    "zip": {
     "line number": [
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.EventManagerMultiDetBase.add_template_events_to_ifo": {
  "data": {
   "lineno": 566
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.ThresholdCluster": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "object": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.eventmgr.ThresholdCluster.__new__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "pycbc.events.eventmgr._threshold_cluster_factory": {
     "line number": [
      88
     ]
    },
    "real_cls": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr._BaseThresholdCluster": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "object": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.eventmgr._BaseThresholdCluster.threshold_and_cluster": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.__all__": {
  "data": {
   "lineno": 1048
  },
  "type": "constant"
 },
 "pycbc.events.eventmgr._threshold_cluster_factory": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      75
     ]
    },
    "pycbc.scheme.schemed": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.events.eventmgr.cluster_reduce": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "pycbc.events.eventmgr.findchirp_cluster_over_window": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycbc.events.eventmgr.findchirp_cluster_over_window": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      146
     ]
    },
    "findchirp_cluster_over_window_cython": {
     "line number": [
      148
     ]
    },
    "len": {
     "line number": [
      144,
      145
     ]
    },
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      144,
      144,
      146,
      147,
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.events.eventmgr.indices_within_times": {
  "data": {
   "shadows": "pycbc.events.veto.indices_within_times"
  },
  "type": "import"
 },
 "pycbc.events.eventmgr.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.events.eventmgr.mchirp_from_mass1_mass2": {
  "data": {
   "shadows": "pycbc.conversions.mchirp_from_mass1_mass2"
  },
  "type": "import"
 },
 "pycbc.events.eventmgr.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.events.eventmgr.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycbc.events.eventmgr.schemed": {
  "data": {
   "shadows": "pycbc.scheme.schemed"
  },
  "type": "import"
 },
 "pycbc.events.eventmgr.stat": {
  "data": {
   "shadows": "pycbc.events.stat"
  },
  "type": "import"
 },
 "pycbc.events.eventmgr.threshold": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      45
     ]
    },
    "pycbc.scheme.schemed": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.threshold_and_cluster": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      69
     ]
    },
    "pycbc.scheme.schemed": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.threshold_only": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      54
     ]
    },
    "pycbc.scheme.schemed": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.eventmgr.threshold_real_numpy": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "pycbc.events.eventmgr.numpy": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.ranking": {
  "data": {},
  "type": "module"
 },
 "pycbc.events.ranking.effsnr": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      15
     ]
    },
    "pycbc.events.ranking.numpy": {
     "line number": [
      10,
      10,
      11,
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.ranking.get_newsnr": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "pycbc.events.ranking.newsnr": {
     "line number": [
      87
     ]
    },
    "pycbc.events.ranking.numpy": {
     "line number": [
      88,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.ranking.get_newsnr_sgveto": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "pycbc.events.ranking.newsnr_sgveto": {
     "line number": [
      107
     ]
    },
    "pycbc.events.ranking.numpy": {
     "line number": [
      110,
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.ranking.get_newsnr_sgveto_psdvar": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "pycbc.events.ranking.newsnr_sgveto_psdvar": {
     "line number": [
      131
     ]
    },
    "pycbc.events.ranking.numpy": {
     "line number": [
      134,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.ranking.newsnr": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      34
     ]
    },
    "pycbc.events.ranking.numpy": {
     "line number": [
      26,
      26,
      27,
      27,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.ranking.newsnr_sgveto": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      49
     ]
    },
    "len": {
     "line number": [
      45
     ]
    },
    "pycbc.events.ranking.newsnr": {
     "line number": [
      42
     ]
    },
    "pycbc.events.ranking.numpy": {
     "line number": [
      42,
      43,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.ranking.newsnr_sgveto_psdvar": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      65
     ]
    },
    "pycbc.events.ranking.newsnr_sgveto": {
     "line number": [
      58
     ]
    },
    "pycbc.events.ranking.numpy": {
     "line number": [
      58,
      59,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.ranking.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.events.simd_threshold": {
  "data": {
   "symbols_in_volume": {
    "numpy.complex64": {
     "line number": [
      771
     ]
    },
    "numpy.dtype": {
     "line number": [
      771
     ]
    },
    "pycbc.events.simd_threshold.tc_common_support": {
     "line number": [
      77
     ]
    },
    "pycbc.opt.omp_support": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.events.simd_threshold.MaxOnlyObject": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": {
    "object": {
     "line number": [
      696
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.simd_threshold.MaxOnlyObject.__init__": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": {
    "len": {
     "line number": [
      700
     ]
    },
    "numpy.array": {
     "line number": [
      698,
      704
     ]
    },
    "numpy.int64": {
     "line number": [
      699,
      701,
      706
     ]
    },
    "numpy.zeros": {
     "line number": [
      699,
      701,
      705,
      706
     ]
    },
    "pycbc.events.simd_threshold.max_only_code": {
     "line number": [
      707
     ]
    },
    "pycbc.events.simd_threshold.thresh_cluster_support": {
     "line number": [
      708
     ]
    },
    "pycbc.types.complex64": {
     "line number": [
      703
     ]
    },
    "pycbc.types.float32": {
     "line number": [
      698,
      704,
      705
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      703
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.simd_threshold.MaxOnlyObject.execute": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": {
    "pycbc.WEAVE_FLAGS": {
     "line number": [
      719
     ]
    },
    "pycbc.weave.inline": {
     "line number": [
      718
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.simd_threshold.ThreshClusterObject": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": {
    "object": {
     "line number": [
      776
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.simd_threshold.ThreshClusterObject.__init__": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": {
    "int": {
     "line number": [
      791
     ]
    },
    "len": {
     "line number": [
      790
     ]
    },
    "numpy.array": {
     "line number": [
      789
     ]
    },
    "numpy.uint32": {
     "line number": [
      796
     ]
    },
    "numpy.zeros": {
     "line number": [
      795,
      796
     ]
    },
    "pycbc.events.simd_threshold.default_segsize": {
     "line number": [
      788
     ]
    },
    "pycbc.events.simd_threshold.thresh_cluster_code": {
     "line number": [
      799
     ]
    },
    "pycbc.events.simd_threshold.thresh_cluster_support": {
     "line number": [
      800
     ]
    },
    "pycbc.types.complex64": {
     "line number": [
      795
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.simd_threshold.ThreshClusterObject.execute": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      819,
      819
     ]
    },
    "numpy.uint32": {
     "line number": [
      819
     ]
    },
    "pycbc.WEAVE_FLAGS": {
     "line number": [
      811
     ]
    },
    "pycbc.opt.omp_flags": {
     "line number": [
      811
     ]
    },
    "pycbc.opt.omp_libs": {
     "line number": [
      814
     ]
    },
    "pycbc.types.complex64": {
     "line number": [
      819
     ]
    },
    "pycbc.weave.inline": {
     "line number": [
      810
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.simd_threshold.WEAVE_FLAGS": {
  "data": {
   "shadows": "pycbc.WEAVE_FLAGS"
  },
  "type": "import"
 },
 "pycbc.events.simd_threshold.WindowedMaxObject": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": {
    "object": {
     "line number": [
      729
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.simd_threshold.WindowedMaxObject.__init__": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": {
    "int": {
     "line number": [
      735
     ]
    },
    "len": {
     "line number": [
      733,
      735,
      736
     ]
    },
    "numpy.array": {
     "line number": [
      731
     ]
    },
    "numpy.int64": {
     "line number": [
      732,
      741,
      742,
      744
     ]
    },
    "numpy.zeros": {
     "line number": [
      732,
      739,
      740,
      741,
      742,
      744
     ]
    },
    "pycbc.events.simd_threshold.thresh_cluster_support": {
     "line number": [
      746
     ]
    },
    "pycbc.events.simd_threshold.windowed_max_code": {
     "line number": [
      745
     ]
    },
    "pycbc.types.complex64": {
     "line number": [
      739
     ]
    },
    "pycbc.types.float32": {
     "line number": [
      740
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.simd_threshold.WindowedMaxObject.execute": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": {
    "pycbc.WEAVE_FLAGS": {
     "line number": [
      758
     ]
    },
    "pycbc.weave.inline": {
     "line number": [
      757
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.simd_threshold._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.events.simd_threshold.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.events.simd_threshold.complex64": {
  "data": {
   "shadows": "pycbc.types.complex64"
  },
  "type": "import"
 },
 "pycbc.events.simd_threshold.default_segsize": {
  "data": {
   "lineno": 774
  },
  "type": "constant"
 },
 "pycbc.events.simd_threshold.float32": {
  "data": {
   "shadows": "pycbc.types.float32"
  },
  "type": "import"
 },
 "pycbc.events.simd_threshold.inline": {
  "data": {
   "shadows": "pycbc.weave.inline"
  },
  "type": "import"
 },
 "pycbc.events.simd_threshold.max_only_code": {
  "data": {
   "lineno": 692
  },
  "type": "constant"
 },
 "pycbc.events.simd_threshold.omp_flags": {
  "data": {
   "shadows": "pycbc.opt.omp_flags"
  },
  "type": "import"
 },
 "pycbc.events.simd_threshold.omp_libs": {
  "data": {
   "shadows": "pycbc.opt.omp_libs"
  },
  "type": "import"
 },
 "pycbc.events.simd_threshold.omp_support": {
  "data": {
   "shadows": "pycbc.opt.omp_support"
  },
  "type": "import"
 },
 "pycbc.events.simd_threshold.pycbc.opt": {
  "data": {
   "shadows": "pycbc.opt"
  },
  "type": "import"
 },
 "pycbc.events.simd_threshold.tc_common_support": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pycbc.events.simd_threshold.thresh_cluster_code": {
  "data": {
   "lineno": 765
  },
  "type": "constant"
 },
 "pycbc.events.simd_threshold.thresh_cluster_support": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "pycbc.events.simd_threshold.windowed_max_code": {
  "data": {
   "lineno": 724
  },
  "type": "constant"
 },
 "pycbc.events.simd_threshold.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.events.single": {
  "data": {},
  "type": "module"
 },
 "pycbc.events.single.LiveSingleFarThreshold": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "object": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.single.LiveSingleFarThreshold.__init__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "pycbc.events.single.LiveSingleFarThreshold.check": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "len": {
     "line number": [
      42
     ]
    },
    "pycbc.events.ranking.newsnr": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.single.LiveSingleFarThreshold.from_cli": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      29
     ]
    },
    "cls": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.single.LiveSingleFarThreshold.insert_args": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "float": {
     "line number": [
      21,
      23,
      25,
      27
     ]
    },
    "pycbc.types.MultiDetOptionAction": {
     "line number": [
      21,
      23,
      25,
      27
     ]
    },
    "staticmethod": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.single.MultiDetOptionAction": {
  "data": {
   "shadows": "pycbc.types.MultiDetOptionAction"
  },
  "type": "import"
 },
 "pycbc.events.single.ranking": {
  "data": {
   "shadows": "pycbc.events.ranking"
  },
  "type": "import"
 },
 "pycbc.events.stat": {
  "data": {
   "symbols_in_volume": {
    "pycbc.events.stat.ExpFitCombinedSNR": {
     "line number": [
      618,
      635
     ]
    },
    "pycbc.events.stat.ExpFitSGCoincRateStatistic": {
     "line number": [
      627
     ]
    },
    "pycbc.events.stat.ExpFitSGCombinedSNR": {
     "line number": [
      619,
      636
     ]
    },
    "pycbc.events.stat.ExpFitSGPSDCombinedSNR": {
     "line number": [
      620,
      640
     ]
    },
    "pycbc.events.stat.ExpFitStatistic": {
     "line number": [
      617
     ]
    },
    "pycbc.events.stat.MaxContTradNewSNRStatistic": {
     "line number": [
      622,
      637
     ]
    },
    "pycbc.events.stat.NetworkSNRStatistic": {
     "line number": [
      613,
      633
     ]
    },
    "pycbc.events.stat.NewSNRCutStatistic": {
     "line number": [
      614,
      634
     ]
    },
    "pycbc.events.stat.NewSNRSGPSDStatistic": {
     "line number": [
      625,
      639
     ]
    },
    "pycbc.events.stat.NewSNRSGStatistic": {
     "line number": [
      624,
      638
     ]
    },
    "pycbc.events.stat.NewSNRStatistic": {
     "line number": [
      612,
      631,
      632
     ]
    },
    "pycbc.events.stat.PhaseTDExpFitSGPSDStatistic": {
     "line number": [
      626
     ]
    },
    "pycbc.events.stat.PhaseTDExpFitSGStatistic": {
     "line number": [
      623
     ]
    },
    "pycbc.events.stat.PhaseTDExpFitStatistic": {
     "line number": [
      621
     ]
    },
    "pycbc.events.stat.PhaseTDSGStatistic": {
     "line number": [
      616
     ]
    },
    "pycbc.events.stat.PhaseTDStatistic": {
     "line number": [
      615
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.events.stat.ExpFitCombinedSNR": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "pycbc.events.stat.ExpFitStatistic": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.ExpFitCombinedSNR.__init__": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "pycbc.events.stat.ExpFitStatistic": {
     "line number": [
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitCombinedSNR.coinc": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitCombinedSNR.coinc_multiifo": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "len": {
     "line number": [
      464
     ]
    },
    "sum": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitCombinedSNR.single": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": {
    "pycbc.events.stat.numpy": {
     "line number": [
      452,
      455,
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitCombinedSNR.use_alphamax": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "len": {
     "line number": [
      446
     ]
    },
    "sum": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitSGCoincRateStatistic": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": {
    "pycbc.events.stat.ExpFitStatistic": {
     "line number": [
      572
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.ExpFitSGCoincRateStatistic.__init__": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": {
    "pycbc.events.stat.ExpFitSGCoincRateStatistic": {
     "line number": [
      582
     ]
    },
    "super": {
     "line number": [
      582
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitSGCoincRateStatistic.coinc_multiifo": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": {
    "pycbc.events.stat.numpy": {
     "line number": [
      603,
      605
     ]
    },
    "zip": {
     "line number": [
      604
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitSGCoincRateStatistic.reassign_rate": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": {
    "float": {
     "line number": [
      598
     ]
    },
    "pycbc.events.stat.numpy": {
     "line number": [
      595
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitSGCombinedSNR": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "pycbc.events.stat.ExpFitCombinedSNR": {
     "line number": [
      467
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.ExpFitSGCombinedSNR.__init__": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": {
    "pycbc.events.stat.ExpFitCombinedSNR": {
     "line number": [
      475
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitSGPSDCombinedSNR": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": {
    "pycbc.events.stat.ExpFitCombinedSNR": {
     "line number": [
      479
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.ExpFitSGPSDCombinedSNR.__init__": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": {
    "pycbc.events.stat.ExpFitCombinedSNR": {
     "line number": [
      487
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitStatistic": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "pycbc.events.stat.NewSNRStatistic": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.ExpFitStatistic.__init__": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      348,
      355
     ]
    },
    "len": {
     "line number": [
      347,
      353,
      354
     ]
    },
    "pycbc.events.stat.NewSNRStatistic": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitStatistic.assign_fits": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": {
    "pycbc.events.stat.numpy": {
     "line number": [
      372
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitStatistic.coinc": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      424
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitStatistic.find_fits": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      384
     ]
    },
    "len": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitStatistic.get_ref_vals": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitStatistic.lognoiserate": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "pycbc.events.stat.numpy": {
     "line number": [
      409,
      410,
      411,
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.ExpFitStatistic.single": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "pycbc.events.stat.MaxContTradNewSNRStatistic": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "pycbc.events.stat.NewSNRStatistic": {
     "line number": [
      546
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.MaxContTradNewSNRStatistic.single": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": {
    "pycbc.events.stat.numpy": {
     "line number": [
      568,
      568,
      569
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.NetworkSNRStatistic": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "pycbc.events.stat.NewSNRStatistic": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.NetworkSNRStatistic.single": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "pycbc.events.stat.NewSNRCutStatistic": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "pycbc.events.stat.NewSNRStatistic": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.NewSNRCutStatistic.coinc": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "pycbc.events.stat.NewSNRCutStatistic.single": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "pycbc.events.stat.numpy": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.NewSNRSGPSDStatistic": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "pycbc.events.stat.NewSNRSGStatistic": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.NewSNRSGPSDStatistic.single": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "pycbc.events.stat.NewSNRSGStatistic": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "pycbc.events.stat.NewSNRStatistic": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.NewSNRSGStatistic.single": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "pycbc.events.stat.NewSNRStatistic": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "pycbc.events.stat.Stat": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.NewSNRStatistic.coinc": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pycbc.events.stat.NewSNRStatistic.coinc_multiifo": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.NewSNRStatistic.single": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pycbc.events.stat.PhaseTDExpFitSGPSDStatistic": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "pycbc.events.stat.PhaseTDExpFitSGStatistic": {
     "line number": [
      534
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.PhaseTDExpFitSGPSDStatistic.__init__": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "pycbc.events.stat.PhaseTDExpFitSGStatistic": {
     "line number": [
      542
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.PhaseTDExpFitSGStatistic": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": {
    "pycbc.events.stat.PhaseTDExpFitStatistic": {
     "line number": [
      523
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.PhaseTDExpFitSGStatistic.__init__": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "pycbc.events.stat.PhaseTDExpFitStatistic": {
     "line number": [
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.PhaseTDExpFitStatistic": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "pycbc.events.stat.ExpFitCombinedSNR": {
     "line number": [
      491
     ]
    },
    "pycbc.events.stat.PhaseTDStatistic": {
     "line number": [
      491
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.PhaseTDExpFitStatistic.__init__": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "pycbc.events.stat.ExpFitCombinedSNR": {
     "line number": [
      497
     ]
    },
    "pycbc.events.stat.PhaseTDStatistic": {
     "line number": [
      499
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.PhaseTDExpFitStatistic.coinc": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "pycbc.events.stat.PhaseTDExpFitStatistic.single": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": {
    "len": {
     "line number": [
      504
     ]
    },
    "pycbc.events.stat.ExpFitCombinedSNR": {
     "line number": [
      503
     ]
    },
    "pycbc.events.stat.numpy": {
     "line number": [
      504,
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.PhaseTDSGStatistic": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "pycbc.events.stat.PhaseTDStatistic": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.PhaseTDSGStatistic.__init__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "pycbc.events.stat.PhaseTDStatistic": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.PhaseTDStatistic": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "pycbc.events.stat.NewSNRStatistic": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.PhaseTDStatistic.__init__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "float": {
     "line number": [
      219
     ]
    },
    "pycbc.events.stat.NewSNRStatistic": {
     "line number": [
      215
     ]
    },
    "pycbc.events.stat.numpy": {
     "line number": [
      220,
      228,
      229,
      230,
      231,
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.PhaseTDStatistic.coinc": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "pycbc.events.stat.PhaseTDStatistic.logsignalrate": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "len": {
     "line number": [
      288,
      288,
      290,
      290,
      292,
      292,
      294,
      294,
      296,
      296
     ]
    },
    "pycbc.events.stat.numpy": {
     "line number": [
      264,
      265,
      266,
      267,
      268,
      269,
      279,
      280,
      281,
      282,
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.PhaseTDStatistic.single": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "len": {
     "line number": [
      254
     ]
    },
    "pycbc.events.stat.numpy": {
     "line number": [
      254,
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.Stat": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "object": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.events.stat.Stat.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pycbc.events.stat.h5py": {
     "line number": [
      49
     ]
    },
    "pycbc.events.stat.numpy": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.get_sngl_statistic": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      688
     ]
    },
    "RuntimeError": {
     "line number": [
      689
     ]
    },
    "pycbc.events.stat.sngl_statistic_dict": {
     "line number": [
      687
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.get_statistic": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      664
     ]
    },
    "RuntimeError": {
     "line number": [
      665
     ]
    },
    "pycbc.events.stat.statistic_dict": {
     "line number": [
      663
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.stat.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.events.stat.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.events.stat.sngl_statistic_dict": {
  "data": {
   "lineno": 630
  },
  "type": "constant"
 },
 "pycbc.events.stat.statistic_dict": {
  "data": {
   "lineno": 611
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cpu": {
  "data": {
   "symbols_in_volume": {
    "pycbc.events.threshold_cpu.threshold_inline": {
     "line number": [
      101
     ]
    },
    "pycbc.events.threshold_cpu.threshold_numpy": {
     "line number": [
      40,
      99
     ]
    },
    "six.PY3": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.events.threshold_cpu.CPUThresholdCluster": {
  "data": {
   "lineno": 103
  },
  "type": "class"
 },
 "pycbc.events.threshold_cpu.CPUThresholdCluster.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "len": {
     "line number": [
      107
     ]
    },
    "pycbc.events.threshold_cpu.numpy": {
     "line number": [
      105,
      108,
      108,
      109,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.threshold_cpu.CPUThresholdCluster.threshold_and_cluster": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "pycbc.events.threshold_cpu.threshold": {
     "line number": [
      137,
      141,
      141
     ]
    },
    "scipy.signal.find_peaks": {
     "line number": [
      143
     ]
    },
    "six.PY3": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.threshold_cpu.CPUThresholdCluster.threshold_and_cluster_weave": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "pycbc.WEAVE_FLAGS": {
     "line number": [
      124
     ]
    },
    "pycbc.events.threshold_cpu.numpy": {
     "line number": [
      132,
      132,
      132,
      132
     ]
    },
    "pycbc.opt.omp_flags": {
     "line number": [
      124
     ]
    },
    "pycbc.opt.omp_libs": {
     "line number": [
      127
     ]
    },
    "pycbc.weave.inline": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.threshold_cpu.PY3": {
  "data": {
   "shadows": "six.PY3"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cpu.WEAVE_FLAGS": {
  "data": {
   "shadows": "pycbc.WEAVE_FLAGS"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cpu._threshold_cluster_factory": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "pycbc.events.threshold_cpu.CPUThresholdCluster": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.threshold_cpu.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cpu.count": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cpu.find_peaks": {
  "data": {
   "shadows": "scipy.signal.find_peaks"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cpu.inline": {
  "data": {
   "shadows": "pycbc.weave.inline"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cpu.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cpu.omp_flags": {
  "data": {
   "shadows": "pycbc.opt.omp_flags"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cpu.omp_libs": {
  "data": {
   "shadows": "pycbc.opt.omp_libs"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cpu.outl": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cpu.outv": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cpu.threshold": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cpu.threshold_inline": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "len": {
     "line number": [
      48,
      48,
      49,
      50,
      53
     ]
    },
    "pycbc.WEAVE_FLAGS": {
     "line number": [
      88
     ]
    },
    "pycbc.events.threshold_cpu.count": {
     "line number": [
      51,
      91
     ]
    },
    "pycbc.events.threshold_cpu.numpy": {
     "line number": [
      46,
      46,
      49,
      49,
      50,
      50,
      51,
      51,
      95,
      95,
      95,
      95
     ]
    },
    "pycbc.events.threshold_cpu.outl": {
     "line number": [
      48,
      48,
      49,
      93
     ]
    },
    "pycbc.events.threshold_cpu.outv": {
     "line number": [
      50,
      93
     ]
    },
    "pycbc.opt.omp_flags": {
     "line number": [
      88
     ]
    },
    "pycbc.opt.omp_libs": {
     "line number": [
      89
     ]
    },
    "pycbc.weave.inline": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.threshold_cpu.threshold_numpy": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "pycbc.events.threshold_cpu.numpy": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.threshold_cpu.threshold_only": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cuda": {
  "data": {
   "symbols_in_volume": {
    "pycbc.events.threshold_cuda.T": {
     "line number": [
      68,
      69,
      70
     ]
    },
    "pycbc.events.threshold_cuda.loc": {
     "line number": [
      63
     ]
    },
    "pycbc.events.threshold_cuda.lptr": {
     "line number": [
      73
     ]
    },
    "pycbc.events.threshold_cuda.n": {
     "line number": [
      57,
      74
     ]
    },
    "pycbc.events.threshold_cuda.nptr": {
     "line number": [
      71
     ]
    },
    "pycbc.events.threshold_cuda.numpy": {
     "line number": [
      46,
      47,
      48,
      49,
      50,
      56,
      57,
      59,
      60,
      62,
      63
     ]
    },
    "pycbc.events.threshold_cuda.threshold_op": {
     "line number": [
      52
     ]
    },
    "pycbc.events.threshold_cuda.tl": {
     "line number": [
      73,
      74
     ]
    },
    "pycbc.events.threshold_cuda.tn": {
     "line number": [
      71,
      74
     ]
    },
    "pycbc.events.threshold_cuda.tv": {
     "line number": [
      72,
      74
     ]
    },
    "pycbc.events.threshold_cuda.val": {
     "line number": [
      60
     ]
    },
    "pycbc.events.threshold_cuda.vptr": {
     "line number": [
      72
     ]
    },
    "pycuda.driver.host_alloc_flags.DEVICEMAP": {
     "line number": [
      56,
      59,
      62
     ]
    },
    "pycuda.driver.pagelocked_empty": {
     "line number": [
      56,
      59,
      62
     ]
    },
    "pycuda.elementwise.ElementwiseKernel": {
     "line number": [
      44
     ]
    },
    "pycuda.tools.dtype_to_ctype": {
     "line number": [
      46,
      47,
      48,
      49,
      50
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.events.threshold_cuda.CUDAThresholdCluster": {
  "data": {
   "lineno": 258
  },
  "type": "class"
 },
 "pycbc.events.threshold_cuda.CUDAThresholdCluster.__init__": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "len": {
     "line number": [
      264
     ]
    },
    "pycbc.events.threshold_cuda.tl": {
     "line number": [
      262
     ]
    },
    "pycbc.events.threshold_cuda.tv": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.threshold_cuda.CUDAThresholdCluster.threshold_and_cluster": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "fn": {
     "line number": [
      276
     ]
    },
    "fn2": {
     "line number": [
      277
     ]
    },
    "pycbc.events.threshold_cuda.get_tkernel": {
     "line number": [
      270
     ]
    },
    "pycbc.events.threshold_cuda.loc": {
     "line number": [
      273
     ]
    },
    "pycbc.events.threshold_cuda.numpy": {
     "line number": [
      267,
      268
     ]
    },
    "pycbc.events.threshold_cuda.val": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.threshold_cuda.ElementwiseKernel": {
  "data": {
   "shadows": "pycuda.elementwise.ElementwiseKernel"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cuda.SourceModule": {
  "data": {
   "shadows": "pycuda.compiler.SourceModule"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cuda.T": {
  "data": {
   "lineno": 65
  },
  "type": "class"
 },
 "pycbc.events.threshold_cuda._threshold_cluster_factory": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "pycbc.events.threshold_cuda.CUDAThresholdCluster": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.threshold_cuda.drv": {
  "data": {
   "shadows": "pycuda.driver"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cuda.dtype_to_ctype": {
  "data": {
   "shadows": "pycuda.tools.dtype_to_ctype"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cuda.get_tkernel": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      230
     ]
    },
    "ValueError": {
     "line number": [
      212,
      226
     ]
    },
    "float": {
     "line number": [
      223
     ]
    },
    "int": {
     "line number": [
      223
     ]
    },
    "pycbc.events.threshold_cuda.numpy": {
     "line number": [
      223
     ]
    },
    "pycbc.events.threshold_cuda.tfn_cache": {
     "line number": [
      229,
      237,
      238
     ]
    },
    "pycbc.events.threshold_cuda.tkernel1": {
     "line number": [
      231
     ]
    },
    "pycbc.events.threshold_cuda.tkernel2": {
     "line number": [
      232
     ]
    },
    "pycuda.compiler.SourceModule": {
     "line number": [
      231,
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.threshold_cuda.loc": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cuda.lptr": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cuda.mako.template": {
  "data": {
   "shadows": "mako.template"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cuda.n": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cuda.nptr": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cuda.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cuda.pycbc.scheme": {
  "data": {
   "shadows": "pycbc.scheme"
  },
  "type": "import"
 },
 "pycbc.events.threshold_cuda.tfn_cache": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cuda.threshold_and_cluster": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "len": {
     "line number": [
      243
     ]
    },
    "pycbc.events.threshold_cuda.get_tkernel": {
     "line number": [
      245
     ]
    },
    "pycbc.events.threshold_cuda.loc": {
     "line number": [
      249
     ]
    },
    "pycbc.events.threshold_cuda.numpy": {
     "line number": [
      246,
      247
     ]
    },
    "pycbc.events.threshold_cuda.tl": {
     "line number": [
      241
     ]
    },
    "pycbc.events.threshold_cuda.tv": {
     "line number": [
      242
     ]
    },
    "pycbc.events.threshold_cuda.val": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.threshold_cuda.threshold_kernel": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cuda.threshold_op": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cuda.tkernel1": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cuda.tkernel2": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cuda.tl": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cuda.tn": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cuda.tv": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cuda.val": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pycbc.events.threshold_cuda.vptr": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pycbc.events.trigger_fits": {
  "data": {
   "symbols_in_volume": {
    "len": {
     "line number": [
      60,
      61,
      62
     ]
    },
    "pycbc.events.trigger_fits.numpy": {
     "line number": [
      53,
      54,
      55,
      55,
      102,
      104,
      136,
      137
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.events.trigger_fits.KS_test": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "min": {
     "line number": [
      207
     ]
    },
    "pycbc.events.trigger_fits.numpy": {
     "line number": [
      205
     ]
    },
    "scipy.stats.kstest": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.trigger_fits.KS_test.cdf_fn": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "pycbc.events.trigger_fits.cum_fndict": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.trigger_fits.cum_fit": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "pycbc.events.trigger_fits.cum_fndict": {
     "line number": [
      162
     ]
    },
    "pycbc.events.trigger_fits.numpy": {
     "line number": [
      161,
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.trigger_fits.cum_fndict": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "pycbc.events.trigger_fits.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.events.trigger_fits.fit_above_thresh": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "min": {
     "line number": [
      94
     ]
    },
    "pycbc.events.trigger_fits.fitalpha_dict": {
     "line number": [
      97
     ]
    },
    "pycbc.events.trigger_fits.fitstd_dict": {
     "line number": [
      98
     ]
    },
    "pycbc.events.trigger_fits.numpy": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.trigger_fits.fit_fn": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "pycbc.events.trigger_fits.fitfn_dict": {
     "line number": [
      129
     ]
    },
    "pycbc.events.trigger_fits.numpy": {
     "line number": [
      128,
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.trigger_fits.fitalpha_dict": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pycbc.events.trigger_fits.fitfn_dict": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "pycbc.events.trigger_fits.fitstd_dict": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pycbc.events.trigger_fits.kstest": {
  "data": {
   "shadows": "scipy.stats.kstest"
  },
  "type": "import"
 },
 "pycbc.events.trigger_fits.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.events.trigger_fits.tail_threshold": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      172
     ]
    },
    "len": {
     "line number": [
      171
     ]
    },
    "min": {
     "line number": [
      174
     ]
    },
    "pycbc.events.trigger_fits.numpy": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.trigger_fits.which_bin": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "float": {
     "line number": [
      244,
      244
     ]
    },
    "int": {
     "line number": [
      246
     ]
    },
    "pycbc.events.trigger_fits.numpy": {
     "line number": [
      242,
      242,
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.triggers": {
  "data": {},
  "type": "module"
 },
 "pycbc.events.triggers.bank_bins_from_cli": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "float": {
     "line number": [
      73
     ]
    },
    "len": {
     "line number": [
      77
     ]
    },
    "pycbc.events.coinc.background_bin_from_string": {
     "line number": [
      75
     ]
    },
    "pycbc.events.triggers.h5py": {
     "line number": [
      70
     ]
    },
    "pycbc.events.triggers.numpy": {
     "line number": [
      77
     ]
    },
    "tuple": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.triggers.coinc": {
  "data": {
   "shadows": "pycbc.events.coinc"
  },
  "type": "import"
 },
 "pycbc.events.triggers.conversions": {
  "data": {
   "shadows": "pycbc.conversions"
  },
  "type": "import"
 },
 "pycbc.events.triggers.get_found_param": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      347
     ]
    },
    "bool": {
     "line number": [
      339
     ]
    },
    "pycbc.events.triggers.get_param": {
     "line number": [
      358
     ]
    },
    "pycbc.events.triggers.numpy": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.triggers.get_inj_param": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "pycbc.events.triggers.get_param": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.triggers.get_mass_spin": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "pycbc.events.triggers.get_param": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      293
     ]
    },
    "pycbc.conversions.chi_eff": {
     "line number": [
      290
     ]
    },
    "pycbc.conversions.eta_from_mass1_mass2": {
     "line number": [
      288
     ]
    },
    "pycbc.conversions.mchirp_from_mass1_mass2": {
     "line number": [
      284
     ]
    },
    "pycbc.conversions.tau0_from_mass1_mass2": {
     "line number": [
      300
     ]
    },
    "pycbc.conversions.tau3_from_mass1_mass2": {
     "line number": [
      302
     ]
    },
    "pycbc.pnutils.frequency_cutoff_from_name": {
     "line number": [
      304
     ]
    },
    "pycbc.pnutils.get_freq": {
     "line number": [
      307
     ]
    },
    "pycbc.pnutils.get_imr_duration": {
     "line number": [
      295
     ]
    },
    "pycbc.pnutils.named_frequency_cutoffs.keys": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.triggers.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.events.triggers.hdf": {
  "data": {
   "shadows": "pycbc.io.hdf"
  },
  "type": "import"
 },
 "pycbc.events.triggers.insert_bank_bins_option_group": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "pycbc.events.triggers.insert_loudest_triggers_option_group": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "int": {
     "line number": [
      109,
      111
     ]
    },
    "pycbc.events.triggers.insert_bank_bins_option_group": {
     "line number": [
      90
     ]
    },
    "pycbc.types.MultiDetOptionAction": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.triggers.loudest_triggers_from_cli": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      200,
      237
     ]
    },
    "len": {
     "line number": [
      197,
      209
     ]
    },
    "pycbc.events.triggers.bank_bins_from_cli": {
     "line number": [
      147
     ]
    },
    "pycbc.events.triggers.numpy": {
     "line number": [
      167,
      215
     ]
    },
    "pycbc.io.hdf.ForegroundTriggers": {
     "line number": [
      158
     ]
    },
    "pycbc.io.hdf.SingleDetTriggers": {
     "line number": [
      203
     ]
    },
    "tuple": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.triggers.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.events.triggers.pnutils": {
  "data": {
   "shadows": "pycbc.pnutils"
  },
  "type": "import"
 },
 "pycbc.events.triggers.pycbc.detector": {
  "data": {
   "shadows": "pycbc.detector"
  },
  "type": "import"
 },
 "pycbc.events.triggers.types": {
  "data": {
   "shadows": "pycbc.types"
  },
  "type": "import"
 },
 "pycbc.events.veto": {
  "data": {},
  "type": "module"
 },
 "pycbc.events.veto.get_segment_definer_comments": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "glue.ligolw.ligolw.LIGOLWContentHandler": {
     "line number": [
      204,
      209
     ]
    },
    "glue.ligolw.lsctables.SegmentDefTable.tableName": {
     "line number": [
      211
     ]
    },
    "glue.ligolw.lsctables.use_in": {
     "line number": [
      204
     ]
    },
    "glue.ligolw.table.get_table": {
     "line number": [
      210
     ]
    },
    "glue.ligolw.utils.load_fileobj": {
     "line number": [
      207
     ]
    },
    "str": {
     "line number": [
      217,
      218,
      219,
      221,
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.veto.h": {
  "data": {
   "shadows": "glue.ligolw.ligolw.LIGOLWContentHandler"
  },
  "type": "import"
 },
 "pycbc.events.veto.indices_outside_segments": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "len": {
     "line number": [
      197
     ]
    },
    "pycbc.events.veto.indices_within_segments": {
     "line number": [
      195
     ]
    },
    "pycbc.events.veto.numpy": {
     "line number": [
      197,
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.veto.indices_outside_times": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "len": {
     "line number": [
      89
     ]
    },
    "pycbc.events.veto.indices_within_times": {
     "line number": [
      88
     ]
    },
    "pycbc.events.veto.numpy": {
     "line number": [
      89,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.veto.indices_within_segments": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "len": {
     "line number": [
      167
     ]
    },
    "ligo.segments.segmentlist": {
     "line number": [
      160
     ]
    },
    "pycbc.events.veto.indices_within_times": {
     "line number": [
      168
     ]
    },
    "pycbc.events.veto.numpy": {
     "line number": [
      161,
      161,
      169
     ]
    },
    "pycbc.events.veto.segments_to_start_end": {
     "line number": [
      166
     ]
    },
    "pycbc.events.veto.select_segments_by_definer": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.veto.indices_within_times": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "len": {
     "line number": [
      65
     ]
    },
    "pycbc.events.veto.numpy": {
     "line number": [
      62,
      63,
      66,
      66,
      68,
      68
     ]
    },
    "pycbc.events.veto.segments_to_start_end": {
     "line number": [
      58
     ]
    },
    "pycbc.events.veto.start_end_to_segments": {
     "line number": [
      58
     ]
    },
    "zip": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.veto.ligolw_utils": {
  "data": {
   "shadows": "glue.ligolw.utils"
  },
  "type": "import"
 },
 "pycbc.events.veto.lsctables": {
  "data": {
   "shadows": "glue.ligolw.lsctables"
  },
  "type": "import"
 },
 "pycbc.events.veto.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.events.veto.segment": {
  "data": {
   "shadows": "ligo.segments.segment"
  },
  "type": "import"
 },
 "pycbc.events.veto.segmentlist": {
  "data": {
   "shadows": "ligo.segments.segmentlist"
  },
  "type": "import"
 },
 "pycbc.events.veto.segments_to_start_end": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "pycbc.events.veto.numpy": {
     "line number": [
      13,
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.veto.select_segments_by_definer": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "glue.ligolw.ligolw.LIGOLWContentHandler": {
     "line number": [
      108,
      109
     ]
    },
    "glue.ligolw.lsctables.use_in": {
     "line number": [
      108
     ]
    },
    "glue.ligolw.table.get_table": {
     "line number": [
      110,
      112
     ]
    },
    "glue.ligolw.utils.load_filename": {
     "line number": [
      109
     ]
    },
    "ligo.segments.segmentlist": {
     "line number": [
      136
     ]
    },
    "pycbc.events.veto.numpy": {
     "line number": [
      125,
      126,
      127,
      128,
      132
     ]
    },
    "pycbc.events.veto.start_end_to_segments": {
     "line number": [
      134
     ]
    },
    "sum": {
     "line number": [
      133
     ]
    },
    "zip": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.veto.start_end_from_segments": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "glue.ligolw.ligolw.LIGOLWContentHandler": {
     "line number": [
      29,
      30
     ]
    },
    "glue.ligolw.lsctables.SegmentTable.tableName": {
     "line number": [
      31
     ]
    },
    "glue.ligolw.lsctables.use_in": {
     "line number": [
      29
     ]
    },
    "glue.ligolw.table.get_table": {
     "line number": [
      31
     ]
    },
    "glue.ligolw.utils.load_filename": {
     "line number": [
      30
     ]
    },
    "pycbc.events.veto.numpy": {
     "line number": [
      32,
      33,
      34,
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.veto.start_end_to_segments": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "ligo.segments.segment": {
     "line number": [
      9
     ]
    },
    "ligo.segments.segmentlist": {
     "line number": [
      9
     ]
    },
    "zip": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.events.veto.table": {
  "data": {
   "shadows": "glue.ligolw.table"
  },
  "type": "import"
 },
 "pycbc.fft": {
  "data": {},
  "type": "module"
 },
 "pycbc.fft.backend_cpu": {
  "data": {
   "symbols_in_volume": {
    "_list_available": {
     "line number": [
      25
     ]
    },
    "pycbc.fft.backend_cpu._backend_dict": {
     "line number": [
      25
     ]
    },
    "pycbc.fft.backend_cpu._backend_list": {
     "line number": [
      25,
      39
     ]
    },
    "pycbc.fft.backend_cpu.set_backend": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.fft.backend_cpu._backend_dict": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pycbc.fft.backend_cpu._backend_list": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pycbc.fft.backend_cpu.cpu_backend": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pycbc.fft.backend_cpu.get_backend": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "pycbc.fft.backend_cpu.cpu_backend": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.backend_cpu.set_backend": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "pycbc.fft.backend_cpu.cpu_backend": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.backend_cuda": {
  "data": {
   "symbols_in_volume": {
    "_list_available": {
     "line number": [
      29
     ]
    },
    "pycbc.fft.backend_cuda._adict": {
     "line number": [
      29
     ]
    },
    "pycbc.fft.backend_cuda._alist": {
     "line number": [
      29
     ]
    },
    "pycbc.fft.backend_cuda._backend_dict": {
     "line number": [
      29
     ]
    },
    "pycbc.fft.backend_cuda._backend_list": {
     "line number": [
      29,
      43
     ]
    },
    "pycbc.fft.backend_cuda.pycbc": {
     "line number": [
      28
     ]
    },
    "pycbc.fft.backend_cuda.set_backend": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.fft.backend_cuda._adict": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pycbc.fft.backend_cuda._alist": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pycbc.fft.backend_cuda._backend_dict": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pycbc.fft.backend_cuda._backend_list": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pycbc.fft.backend_cuda.cuda_backend": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pycbc.fft.backend_cuda.get_backend": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "pycbc.fft.backend_cuda._adict": {
     "line number": [
      41
     ]
    },
    "pycbc.fft.backend_cuda.cuda_backend": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.backend_cuda.pycbc": {
  "data": {
   "shadows": "pycbc"
  },
  "type": "import"
 },
 "pycbc.fft.backend_cuda.set_backend": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pycbc.fft.backend_cuda._alist": {
     "line number": [
      36
     ]
    },
    "pycbc.fft.backend_cuda.cuda_backend": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.backend_mkl": {
  "data": {
   "symbols_in_volume": {
    "_list_available": {
     "line number": [
      23
     ]
    },
    "pycbc.fft.backend_mkl._backend_dict": {
     "line number": [
      23
     ]
    },
    "pycbc.fft.backend_mkl._backend_list": {
     "line number": [
      23,
      37
     ]
    },
    "pycbc.fft.backend_mkl.set_backend": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.fft.backend_mkl._backend_dict": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pycbc.fft.backend_mkl._backend_list": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pycbc.fft.backend_mkl.get_backend": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "pycbc.fft.backend_mkl.mkl_backend": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.backend_mkl.mkl_backend": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pycbc.fft.backend_mkl.set_backend": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "pycbc.fft.backend_mkl.mkl_backend": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.backend_support": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      82
     ]
    },
    "__import__": {
     "line number": [
      77
     ]
    },
    "getattr": {
     "line number": [
      78,
      79
     ]
    },
    "pycbc.fft.backend_support._adict": {
     "line number": [
      80
     ]
    },
    "pycbc.fft.backend_support._alist": {
     "line number": [
      80
     ]
    },
    "pycbc.fft.backend_support._all_backends_dict": {
     "line number": [
      81
     ]
    },
    "pycbc.fft.backend_support._all_backends_list": {
     "line number": [
      80
     ]
    },
    "pycbc.fft.backend_support._update_global_available": {
     "line number": [
      80
     ]
    },
    "pycbc.fft.backend_support.mod": {
     "line number": [
      78,
      79
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.fft.backend_support.BACKEND_PREFIX": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pycbc.fft.backend_support._adict": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "pycbc.fft.backend_support._alist": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "pycbc.fft.backend_support._all_backends_dict": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pycbc.fft.backend_support._all_backends_list": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pycbc.fft.backend_support._update_global_available": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pycbc.fft.backend_support.get_backend": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      71
     ]
    },
    "pycbc.fft.backend_support.BACKEND_PREFIX": {
     "line number": [
      67
     ]
    },
    "pycbc.fft.backend_support.pycbc": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.backend_support.get_backend_modules": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "pycbc.fft.backend_support._all_backends_dict": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.backend_support.get_backend_names": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "list": {
     "line number": [
      57
     ]
    },
    "pycbc.fft.backend_support._all_backends_dict": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.backend_support.mod": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "pycbc.fft.backend_support.pycbc": {
  "data": {
   "shadows": "pycbc"
  },
  "type": "import"
 },
 "pycbc.fft.backend_support.pycbc.scheme": {
  "data": {
   "shadows": "pycbc.scheme"
  },
  "type": "import"
 },
 "pycbc.fft.backend_support.set_backend": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      65
     ]
    },
    "pycbc.fft.backend_support.BACKEND_PREFIX": {
     "line number": [
      61
     ]
    },
    "pycbc.fft.backend_support.pycbc": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.class_api": {
  "data": {},
  "type": "module"
 },
 "pycbc.fft.class_api.FFT": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "object": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.fft.class_api.FFT.__new__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "pycbc.fft.class_api._fft_factory": {
     "line number": [
      63
     ]
    },
    "real_cls": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.class_api.IFFT": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "object": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.fft.class_api.IFFT.__new__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "pycbc.fft.class_api._ifft_factory": {
     "line number": [
      88
     ]
    },
    "real_cls": {
     "line number": [
      88,
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.class_api._fft_factory": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "get_backend": {
     "line number": [
      32
     ]
    },
    "getattr": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.class_api._ifft_factory": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "get_backend": {
     "line number": [
      37
     ]
    },
    "getattr": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.core": {
  "data": {},
  "type": "module"
 },
 "pycbc.fft.core._Array": {
  "data": {
   "shadows": "pycbc.types.Array"
  },
  "type": "import"
 },
 "pycbc.fft.core._BaseFFT": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "object": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.fft.core._BaseFFT.__init__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "int": {
     "line number": [
      194,
      196
     ]
    },
    "isinstance": {
     "line number": [
      202,
      206
     ]
    },
    "len": {
     "line number": [
      185,
      204,
      208
     ]
    },
    "pycbc.fft.core._check_fft_args": {
     "line number": [
      175
     ]
    },
    "pycbc.fft.core._check_fwd_args": {
     "line number": [
      176
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      206
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.core._BaseFFT.execute": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "pycbc.fft.core._BaseIFFT": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "object": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.fft.core._BaseIFFT.__init__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "int": {
     "line number": [
      247,
      249
     ]
    },
    "isinstance": {
     "line number": [
      255,
      259
     ]
    },
    "len": {
     "line number": [
      238,
      257,
      261
     ]
    },
    "pycbc.fft.core._check_fft_args": {
     "line number": [
      228
     ]
    },
    "pycbc.fft.core._check_inv_args": {
     "line number": [
      229
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      259
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.core._BaseIFFT.execute": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "pycbc.fft.core._FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.fft.core._TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.fft.core._check_fft_args": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      67,
      69,
      73,
      77,
      81,
      85
     ]
    },
    "ValueError": {
     "line number": [
      91
     ]
    },
    "isinstance": {
     "line number": [
      66,
      68,
      71,
      71,
      75,
      75,
      79,
      79,
      83,
      83
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      66,
      68
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      72,
      76,
      79,
      83
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      71,
      75,
      80,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.core._check_fwd_args": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      101,
      103,
      108,
      110,
      113,
      115,
      118,
      121,
      124,
      126
     ]
    },
    "int": {
     "line number": [
      117,
      120
     ]
    },
    "len": {
     "line number": [
      98,
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.core._check_inv_args": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      132,
      134,
      139,
      141,
      144,
      146,
      149,
      152,
      155
     ]
    },
    "int": {
     "line number": [
      148,
      151
     ]
    },
    "len": {
     "line number": [
      129,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.core._list_available": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      54
     ]
    },
    "OSError": {
     "line number": [
      54
     ]
    },
    "__import__": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.fft.cuda_pyfft": {
  "data": {
   "symbols_in_volume": {
    "pycbc.fft.cuda_pyfft._clear_plan_dict": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.fft.cuda_pyfft.Plan": {
  "data": {
   "shadows": "pyfft.cuda.Plan"
  },
  "type": "import"
 },
 "pycbc.fft.cuda_pyfft._clear_plan_dict": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pycbc.fft.cuda_pyfft._plans": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.cuda_pyfft._get_plan": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      45
     ]
    },
    "pycbc.fft.cuda_pyfft._plans": {
     "line number": [
      44,
      47
     ]
    },
    "pyfft.cuda.Plan": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.cuda_pyfft._plans": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pycbc.fft.cuda_pyfft.fft": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      57
     ]
    },
    "len": {
     "line number": [
      53
     ]
    },
    "pycbc.fft.cuda_pyfft._get_plan": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.cuda_pyfft.ifft": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      65
     ]
    },
    "len": {
     "line number": [
      61
     ]
    },
    "pycbc.fft.cuda_pyfft._get_plan": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.cuda_pyfft.pycbc.scheme": {
  "data": {
   "shadows": "pycbc.scheme"
  },
  "type": "import"
 },
 "pycbc.fft.cufft": {
  "data": {
   "symbols_in_volume": {
    "pycbc.fft.cufft._clear_plan_dicts": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.fft.cufft.FFT": {
  "data": {
   "lineno": 73
  },
  "type": "class"
 },
 "pycbc.fft.cufft.FFT.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "len": {
     "line number": [
      76
     ]
    },
    "pycbc.fft.cufft.FFT": {
     "line number": [
      75
     ]
    },
    "pycbc.fft.cufft._get_fwd_plan": {
     "line number": [
      76
     ]
    },
    "super": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.cufft.FFT.execute": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "skcuda.fft.fft": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.cufft.IFFT": {
  "data": {
   "lineno": 83
  },
  "type": "class"
 },
 "pycbc.fft.cufft.IFFT.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "len": {
     "line number": [
      86
     ]
    },
    "pycbc.fft.cufft.IFFT": {
     "line number": [
      85
     ]
    },
    "pycbc.fft.cufft._get_inv_plan": {
     "line number": [
      86
     ]
    },
    "super": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.cufft.IFFT.execute": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "skcuda.fft.ifft": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.cufft._clear_plan_dicts": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pycbc.fft.cufft._forward_plans": {
     "line number": [
      38
     ]
    },
    "pycbc.fft.cufft._reverse_plans": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.cufft._forward_plans": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pycbc.fft.cufft._get_fwd_plan": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      47
     ]
    },
    "pycbc.fft.cufft._forward_plans": {
     "line number": [
      46,
      49
     ]
    },
    "skcuda.fft.Plan": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.cufft._get_inv_plan": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      58
     ]
    },
    "pycbc.fft.cufft._reverse_plans": {
     "line number": [
      57,
      60
     ]
    },
    "skcuda.fft.Plan": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.cufft._reverse_plans": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pycbc.fft.cufft.cu_fft": {
  "data": {
   "shadows": "skcuda.fft"
  },
  "type": "import"
 },
 "pycbc.fft.cufft.fft": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "len": {
     "line number": [
      66
     ]
    },
    "pycbc.fft.cufft._get_fwd_plan": {
     "line number": [
      66
     ]
    },
    "skcuda.fft.fft": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.cufft.ifft": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "len": {
     "line number": [
      70
     ]
    },
    "pycbc.fft.cufft._get_inv_plan": {
     "line number": [
      70
     ]
    },
    "skcuda.fft.ifft": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.cufft.pycbc.scheme": {
  "data": {
   "shadows": "pycbc.scheme"
  },
  "type": "import"
 },
 "pycbc.fft.fft_callback": {
  "data": {
   "symbols_in_volume": {
    "mako.template.Template": {
     "line number": [
      90
     ]
    },
    "pycbc.fft.fft_callback.param": {
     "line number": [
      221
     ]
    },
    "pycbc.fft.fft_callback.param2": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.fft.fft_callback.Template": {
  "data": {
   "shadows": "mako.template.Template"
  },
  "type": "import"
 },
 "pycbc.fft.fft_callback._plans": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "pycbc.fft.fft_callback.c2c_correlate_ifft": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "fn": {
     "line number": [
      231
     ]
    },
    "int": {
     "line number": [
      227,
      228,
      231,
      231
     ]
    },
    "len": {
     "line number": [
      227
     ]
    },
    "pfn": {
     "line number": [
      227
     ]
    },
    "pycbc.fft.fft_callback._plans": {
     "line number": [
      225,
      228,
      229
     ]
    },
    "pycbc.fft.fft_callback.ctypes": {
     "line number": [
      231
     ]
    },
    "pycbc.fft.fft_callback.full_corr": {
     "line number": [
      226
     ]
    },
    "pycbc.fft.fft_callback.get_fn_plan": {
     "line number": [
      226
     ]
    },
    "pycbc.fft.fft_callback.hparam": {
     "line number": [
      230,
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fft_callback.c2c_half_correlate_ifft": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "fn": {
     "line number": [
      243,
      250,
      251,
      256
     ]
    },
    "int": {
     "line number": [
      249,
      250,
      256,
      256
     ]
    },
    "len": {
     "line number": [
      249
     ]
    },
    "pfn": {
     "line number": [
      243,
      249
     ]
    },
    "pycbc.fft.fft_callback._plans": {
     "line number": [
      242,
      250,
      251
     ]
    },
    "pycbc.fft.fft_callback.ctypes": {
     "line number": [
      256
     ]
    },
    "pycbc.fft.fft_callback.get_fn_plan": {
     "line number": [
      243
     ]
    },
    "pycbc.fft.fft_callback.hparam_zeros": {
     "line number": [
      252,
      253,
      254,
      255,
      256
     ]
    },
    "pycbc.fft.fft_callback.zero_corr": {
     "line number": [
      243
     ]
    },
    "pycbc.fft.fft_callback.zero_out": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fft_callback.compile": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      175
     ]
    },
    "hash": {
     "line number": [
      173,
      199
     ]
    },
    "int": {
     "line number": [
      173
     ]
    },
    "open": {
     "line number": [
      173,
      180,
      198
     ]
    },
    "print": {
     "line number": [
      188,
      193
     ]
    },
    "pycbc.fft.fft_callback.os": {
     "line number": [
      167
     ]
    },
    "pycbc.fft.fft_callback.pycbc": {
     "line number": [
      167
     ]
    },
    "pycbc.fft.fft_callback.subprocess": {
     "line number": [
      189,
      195
     ]
    },
    "str": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fft_callback.copy_callback": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pycbc.fft.fft_callback.copy_out": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pycbc.fft.fft_callback.copy_out_fp16": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "pycbc.fft.fft_callback.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "pycbc.fft.fft_callback.fftsrc": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "pycbc.fft.fft_callback.full_corr": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pycbc.fft.fft_callback.get_fn_plan": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "pycbc.fft.fft_callback.compile": {
     "line number": [
      208
     ]
    },
    "pycbc.fft.fft_callback.ctypes": {
     "line number": [
      209,
      211,
      211,
      211,
      211,
      213,
      214
     ]
    },
    "pycbc.fft.fft_callback.fftsrc": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fft_callback.hparam": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "pycbc.fft.fft_callback.hparam_zeros": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "pycbc.fft.fft_callback.no_out": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "pycbc.fft.fft_callback.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.fft.fft_callback.param": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "pycbc.fft.fft_callback.ctypes": {
     "line number": [
      219,
      220
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.fft.fft_callback.param2": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "pycbc.fft.fft_callback.ctypes": {
     "line number": [
      233,
      234,
      235,
      236,
      237
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.fft.fft_callback.pycbc": {
  "data": {
   "shadows": "pycbc"
  },
  "type": "import"
 },
 "pycbc.fft.fft_callback.real_out": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "pycbc.fft.fft_callback.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pycbc.fft.fft_callback.zero_corr": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pycbc.fft.fft_callback.zero_out": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pycbc.fft.fftw": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      35
     ]
    },
    "pycbc.fft.fftw.FFTW_ESTIMATE": {
     "line number": [
      172
     ]
    },
    "pycbc.fft.fftw.FFTW_EXHAUSTIVE": {
     "line number": [
      175
     ]
    },
    "pycbc.fft.fftw.FFTW_MEASURE": {
     "line number": [
      173,
      174,
      175
     ]
    },
    "pycbc.fft.fftw.FFTW_PATIENT": {
     "line number": [
      174,
      175
     ]
    },
    "pycbc.fft.fftw.ctypes": {
     "line number": [
      32,
      33,
      338,
      338,
      338,
      339,
      339,
      339,
      339,
      340,
      340,
      340,
      340,
      341,
      341,
      342,
      345,
      345,
      345,
      346,
      346,
      346,
      346,
      347,
      347,
      347,
      347,
      348,
      348,
      349,
      352,
      352,
      352,
      353,
      353,
      353,
      353,
      354,
      354,
      354,
      354,
      355,
      356,
      359,
      359,
      359,
      360,
      360,
      360,
      360,
      361,
      361,
      361,
      361,
      362,
      363,
      366,
      366,
      366,
      367,
      367,
      367,
      367,
      368,
      368,
      368,
      368,
      369,
      370,
      373,
      373,
      373,
      374,
      374,
      374,
      374,
      375,
      375,
      375,
      375,
      376,
      377
     ]
    },
    "pycbc.fft.fftw.double_lib": {
     "line number": [
      34,
      226,
      229,
      230,
      234,
      237,
      238,
      344,
      358,
      372
     ]
    },
    "pycbc.fft.fftw.float_lib": {
     "line number": [
      34,
      225,
      227,
      228,
      233,
      235,
      236,
      337,
      351,
      365
     ]
    },
    "pycbc.fft.fftw.plan_many_c2c_d": {
     "line number": [
      345,
      349,
      385
     ]
    },
    "pycbc.fft.fftw.plan_many_c2c_f": {
     "line number": [
      338,
      342,
      382
     ]
    },
    "pycbc.fft.fftw.plan_many_c2r_d": {
     "line number": [
      359,
      363,
      387
     ]
    },
    "pycbc.fft.fftw.plan_many_c2r_f": {
     "line number": [
      352,
      356,
      384
     ]
    },
    "pycbc.fft.fftw.plan_many_r2c_d": {
     "line number": [
      373,
      377,
      386
     ]
    },
    "pycbc.fft.fftw.plan_many_r2c_f": {
     "line number": [
      366,
      370,
      383
     ]
    },
    "pycbc.libutils.get_ctypes_library": {
     "line number": [
      32,
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.fft.fftw.FFT": {
  "data": {
   "lineno": 430
  },
  "type": "class"
 },
 "pycbc.fft.fftw.FFT.__init__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": {
    "pycbc.fft.fftw.FFT": {
     "line number": [
      432
     ]
    },
    "pycbc.fft.fftw._fftw_setup": {
     "line number": [
      437
     ]
    },
    "pycbc.fft.fftw.ctypes": {
     "line number": [
      436,
      436,
      436
     ]
    },
    "pycbc.fft.fftw.execute_function": {
     "line number": [
      435
     ]
    },
    "str": {
     "line number": [
      435,
      435
     ]
    },
    "super": {
     "line number": [
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.FFT.execute": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "pycbc.fft.fftw.FFTW_BACKWARD": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.FFTW_CONSERVE_MEMORY": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.FFTW_DESTROY_INPUT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.FFTW_ESTIMATE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.FFTW_EXHAUSTIVE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.FFTW_FORWARD": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.FFTW_MEASURE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.FFTW_PATIENT": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.FFTW_PRESERVE_INPUT": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.FFTW_UNALIGNED": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.FFTW_WISDOM_ONLY": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.HAVE_FFTW_THREADED": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.IFFT": {
  "data": {
   "lineno": 442
  },
  "type": "class"
 },
 "pycbc.fft.fftw.IFFT.__init__": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "pycbc.fft.fftw.IFFT": {
     "line number": [
      444
     ]
    },
    "pycbc.fft.fftw._fftw_setup": {
     "line number": [
      449
     ]
    },
    "pycbc.fft.fftw.ctypes": {
     "line number": [
      448,
      448,
      448
     ]
    },
    "pycbc.fft.fftw.execute_function": {
     "line number": [
      447
     ]
    },
    "str": {
     "line number": [
      447,
      447
     ]
    },
    "super": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.IFFT.execute": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "pycbc.fft.fftw._default_measurelvl": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "pycbc.fft.fftw._double_threaded_lib": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pycbc.fft.fftw._fftw_current_nthreads": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pycbc.fft.fftw._fftw_plan_with_nthreads": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      60
     ]
    },
    "dplanwthr": {
     "line number": [
      68
     ]
    },
    "fplanwthr": {
     "line number": [
      69
     ]
    },
    "pycbc.fft.fftw.HAVE_FFTW_THREADED": {
     "line number": [
      58
     ]
    },
    "pycbc.fft.fftw._double_threaded_lib": {
     "line number": [
      64
     ]
    },
    "pycbc.fft.fftw._fftw_current_nthreads": {
     "line number": [
      70
     ]
    },
    "pycbc.fft.fftw._float_threaded_lib": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw._fftw_setup": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "len": {
     "line number": [
      395,
      396,
      406,
      407
     ]
    },
    "numpy.asarray": {
     "line number": [
      394,
      395,
      396
     ]
    },
    "numpy.int32": {
     "line number": [
      394,
      395,
      396
     ]
    },
    "plan_func": {
     "line number": [
      410,
      416,
      422
     ]
    },
    "pycbc.fft.fftw.FFTW_BACKWARD": {
     "line number": [
      419
     ]
    },
    "pycbc.fft.fftw.FFTW_FORWARD": {
     "line number": [
      413
     ]
    },
    "pycbc.fft.fftw._fftw_current_nthreads": {
     "line number": [
      400
     ]
    },
    "pycbc.fft.fftw._fftw_plan_with_nthreads": {
     "line number": [
      401
     ]
    },
    "pycbc.fft.fftw._fftw_threaded_set": {
     "line number": [
      398
     ]
    },
    "pycbc.fft.fftw._plan_funcs_dict": {
     "line number": [
      405
     ]
    },
    "pycbc.fft.fftw.get_flag": {
     "line number": [
      404
     ]
    },
    "pycbc.fft.fftw.get_measure_level": {
     "line number": [
      402
     ]
    },
    "pycbc.fft.fftw.plan": {
     "line number": [
      410,
      416,
      422,
      428
     ]
    },
    "pycbc.fft.fftw.set_threads_backend": {
     "line number": [
      399
     ]
    },
    "pycbc.scheme.mgr.state.num_threads": {
     "line number": [
      397
     ]
    },
    "pycbc.types.complex128": {
     "line number": [
      409,
      415
     ]
    },
    "pycbc.types.complex64": {
     "line number": [
      409,
      415
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      406,
      407
     ]
    },
    "str": {
     "line number": [
      405,
      405
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw._fftw_threaded_lib": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pycbc.fft.fftw._fftw_threaded_set": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pycbc.fft.fftw._fftw_threading_libnames": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "pycbc.fft.fftw._flag_dict": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "pycbc.fft.fftw._float_threaded_lib": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pycbc.fft.fftw._init_threads": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      95
     ]
    },
    "RuntimeError": {
     "line number": [
      90,
      104
     ]
    },
    "ValueError": {
     "line number": [
      96
     ]
    },
    "pycbc.fft.fftw.HAVE_FFTW_THREADED": {
     "line number": [
      111,
      119
     ]
    },
    "pycbc.fft.fftw._double_threaded_lib": {
     "line number": [
      101,
      103,
      106
     ]
    },
    "pycbc.fft.fftw._fftw_threaded_lib": {
     "line number": [
      91,
      113,
      121
     ]
    },
    "pycbc.fft.fftw._fftw_threaded_set": {
     "line number": [
      89,
      112,
      120
     ]
    },
    "pycbc.fft.fftw._fftw_threading_libnames": {
     "line number": [
      93,
      94
     ]
    },
    "pycbc.fft.fftw._float_threaded_lib": {
     "line number": [
      102,
      103,
      107
     ]
    },
    "pycbc.fft.fftw.ctypes": {
     "line number": [
      101,
      102
     ]
    },
    "pycbc.libutils.get_ctypes_library": {
     "line number": [
      101,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.fft.fftw._plan_funcs_dict": {
  "data": {
   "lineno": 382
  },
  "type": "constant"
 },
 "pycbc.fft.fftw._scheme": {
  "data": {
   "shadows": "pycbc.scheme"
  },
  "type": "import"
 },
 "pycbc.fft.fftw.complex128": {
  "data": {
   "shadows": "pycbc.types.complex128"
  },
  "type": "import"
 },
 "pycbc.fft.fftw.complex64": {
  "data": {
   "shadows": "pycbc.types.complex64"
  },
  "type": "import"
 },
 "pycbc.fft.fftw.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "pycbc.fft.fftw.double_lib": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.execute": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "f": {
     "line number": [
      316,
      318
     ]
    },
    "f.argtypes": {
     "line number": [
      317
     ]
    },
    "pycbc.fft.fftw.ctypes": {
     "line number": [
      317,
      317,
      317
     ]
    },
    "pycbc.fft.fftw.execute_function": {
     "line number": [
      316
     ]
    },
    "pycbc.fft.fftw.plan": {
     "line number": [
      318
     ]
    },
    "str": {
     "line number": [
      316,
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.execute_function": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.export_double_wisdom_to_filename": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "pycbc.fft.fftw.wisdom_io": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.export_single_wisdom_to_filename": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "pycbc.fft.fftw.wisdom_io": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.fft": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "destroy": {
     "line number": [
      325
     ]
    },
    "len": {
     "line number": [
      321
     ]
    },
    "pycbc.fft.fftw.FFTW_FORWARD": {
     "line number": [
      321
     ]
    },
    "pycbc.fft.fftw.execute": {
     "line number": [
      324
     ]
    },
    "pycbc.fft.fftw.get_measure_level": {
     "line number": [
      322
     ]
    },
    "pycbc.fft.fftw.plan": {
     "line number": [
      321
     ]
    },
    "pycbc.scheme.mgr.state.num_threads": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.float_lib": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.from_cli": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "pycbc.fft.fftw.set_measure_level": {
     "line number": [
      516
     ]
    },
    "pycbc.fft.fftw.set_threads_backend": {
     "line number": [
      513
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.get_ctypes_library": {
  "data": {
   "shadows": "pycbc.libutils.get_ctypes_library"
  },
  "type": "import"
 },
 "pycbc.fft.fftw.get_flag": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "pycbc.fft.fftw.FFTW_UNALIGNED": {
     "line number": [
      180
     ]
    },
    "pycbc.fft.fftw._flag_dict": {
     "line number": [
      178,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.get_measure_level": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "pycbc.fft.fftw._default_measurelvl": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.ifft": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "destroy": {
     "line number": [
      328,
      332
     ]
    },
    "len": {
     "line number": [
      328
     ]
    },
    "pycbc.fft.fftw.FFTW_BACKWARD": {
     "line number": [
      328
     ]
    },
    "pycbc.fft.fftw.execute": {
     "line number": [
      331
     ]
    },
    "pycbc.fft.fftw.get_measure_level": {
     "line number": [
      329
     ]
    },
    "pycbc.fft.fftw.plan": {
     "line number": [
      328
     ]
    },
    "pycbc.scheme.mgr.state.num_threads": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.import_double_wisdom_from_filename": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "pycbc.fft.fftw.wisdom_io": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.import_single_wisdom_from_filename": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "pycbc.fft.fftw.wisdom_io": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.import_sys_wisdom": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "pycbc.fft.fftw._fftw_threaded_set": {
     "line number": [
      143
     ]
    },
    "pycbc.fft.fftw.double_lib": {
     "line number": [
      145
     ]
    },
    "pycbc.fft.fftw.float_lib": {
     "line number": [
      146
     ]
    },
    "pycbc.fft.fftw.set_threads_backend": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.insert_fft_options": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": {
    "int": {
     "line number": [
      466
     ]
    },
    "pycbc.fft.fftw._default_measurelvl": {
     "line number": [
      466
     ]
    },
    "str": {
     "line number": [
      465
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.plan": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "f": {
     "line number": [
      283,
      290,
      295
     ]
    },
    "f.argtypes": {
     "line number": [
      288,
      293
     ]
    },
    "f.restype": {
     "line number": [
      284
     ]
    },
    "numpy.dtype": {
     "line number": [
      281,
      282
     ]
    },
    "pycbc.fft.fftw._fftw_current_nthreads": {
     "line number": [
      244
     ]
    },
    "pycbc.fft.fftw._fftw_plan_with_nthreads": {
     "line number": [
      245
     ]
    },
    "pycbc.fft.fftw._fftw_threaded_set": {
     "line number": [
      242
     ]
    },
    "pycbc.fft.fftw.ctypes": {
     "line number": [
      284,
      288,
      288,
      288,
      289,
      289,
      293,
      293,
      293,
      294,
      306
     ]
    },
    "pycbc.fft.fftw.double_lib": {
     "line number": [
      304
     ]
    },
    "pycbc.fft.fftw.float_lib": {
     "line number": [
      302
     ]
    },
    "pycbc.fft.fftw.get_flag": {
     "line number": [
      247
     ]
    },
    "pycbc.fft.fftw.plan_function": {
     "line number": [
      283
     ]
    },
    "pycbc.fft.fftw.set_threads_backend": {
     "line number": [
      243
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      254,
      258,
      264,
      268,
      274,
      278
     ]
    },
    "str": {
     "line number": [
      283,
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.plan_function": {
  "data": {
   "lineno": 225
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.plan_many_c2c_d": {
  "data": {
   "lineno": 344
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.plan_many_c2c_f": {
  "data": {
   "lineno": 337
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.plan_many_c2r_d": {
  "data": {
   "lineno": 358
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.plan_many_c2r_f": {
  "data": {
   "lineno": 351
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.plan_many_r2c_d": {
  "data": {
   "lineno": 372
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.plan_many_r2c_f": {
  "data": {
   "lineno": 365
  },
  "type": "constant"
 },
 "pycbc.fft.fftw.set_measure_level": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      169
     ]
    },
    "pycbc.fft.fftw._default_measurelvl": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.set_planning_limit": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "f": {
     "line number": [
      216,
      218,
      220,
      222
     ]
    },
    "f.argtypes": {
     "line number": [
      217,
      221
     ]
    },
    "pycbc.fft.fftw._fftw_threaded_set": {
     "line number": [
      213
     ]
    },
    "pycbc.fft.fftw.ctypes": {
     "line number": [
      217,
      221
     ]
    },
    "pycbc.fft.fftw.double_lib": {
     "line number": [
      216
     ]
    },
    "pycbc.fft.fftw.float_lib": {
     "line number": [
      220
     ]
    },
    "pycbc.fft.fftw.set_threads_backend": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.set_threads_backend": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      132
     ]
    },
    "pycbc.fft.fftw._fftw_threaded_set": {
     "line number": [
      136
     ]
    },
    "pycbc.fft.fftw._init_threads": {
     "line number": [
      129,
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.verify_fft_options": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "pycbc.fft.fftw.wisdom_io": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      197
     ]
    },
    "f": {
     "line number": [
      195
     ]
    },
    "pycbc.fft.fftw._fftw_threaded_set": {
     "line number": [
      187
     ]
    },
    "pycbc.fft.fftw.ctypes": {
     "line number": [
      194
     ]
    },
    "pycbc.fft.fftw.double_lib": {
     "line number": [
      191,
      192
     ]
    },
    "pycbc.fft.fftw.float_lib": {
     "line number": [
      189,
      190
     ]
    },
    "pycbc.fft.fftw.set_threads_backend": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.fft.fftw_pruned": {
  "data": {
   "symbols_in_volume": {
    "pycbc.fft.fftw_pruned.ctypes": {
     "line number": [
      36,
      38,
      38,
      38,
      41,
      41,
      41
     ]
    },
    "pycbc.fft.fftw_pruned.fexecute": {
     "line number": [
      38
     ]
    },
    "pycbc.fft.fftw_pruned.fft_transpose_fftw": {
     "line number": [
      196
     ]
    },
    "pycbc.fft.fftw_pruned.float_lib": {
     "line number": [
      37,
      40
     ]
    },
    "pycbc.fft.fftw_pruned.ftexecute": {
     "line number": [
      41
     ]
    },
    "pycbc.fft.fftw_pruned.logging": {
     "line number": [
      28
     ]
    },
    "pycbc.fft.fftw_pruned.warn_msg": {
     "line number": [
      28
     ]
    },
    "pycbc.libutils.get_ctypes_library": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.fft.fftw_pruned.FFTW_BACKWARD": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pycbc.fft.fftw_pruned.FFTW_ESTIMATE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pycbc.fft.fftw_pruned.FFTW_FORWARD": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pycbc.fft.fftw_pruned.FFTW_MEASURE": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pycbc.fft.fftw_pruned.FFTW_PATIENT": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pycbc.fft.fftw_pruned._theplan": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "pycbc.fft.fftw_pruned._thetransposeplan": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "pycbc.fft.fftw_pruned.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.fft.fftw_pruned.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "pycbc.fft.fftw_pruned.fexecute": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pycbc.fft.fftw_pruned.fft_transpose": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "pycbc.fft.fftw_pruned.fft_transpose_fftw": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "len": {
     "line number": [
      189
     ]
    },
    "pycbc.fft.fftw_pruned._theplan": {
     "line number": [
      190
     ]
    },
    "pycbc.fft.fftw_pruned._thetransposeplan": {
     "line number": [
      192,
      193
     ]
    },
    "pycbc.fft.fftw_pruned.ftexecute": {
     "line number": [
      193
     ]
    },
    "pycbc.fft.fftw_pruned.plan_transpose": {
     "line number": [
      192
     ]
    },
    "pycbc.fft.fftw_pruned.splay": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw_pruned.first_phase": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "pycbc.fft.fftw_pruned._theplan": {
     "line number": [
      134,
      135,
      136
     ]
    },
    "pycbc.fft.fftw_pruned.fexecute": {
     "line number": [
      136
     ]
    },
    "pycbc.fft.fftw_pruned.plan_first_phase": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw_pruned.float_lib": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pycbc.fft.fftw_pruned.ftexecute": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pycbc.fft.fftw_pruned.get_ctypes_library": {
  "data": {
   "shadows": "pycbc.libutils.get_ctypes_library"
  },
  "type": "import"
 },
 "pycbc.fft.fftw_pruned.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.fft.fftw_pruned.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.fft.fftw_pruned.plan_first_phase": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "f": {
     "line number": [
      104,
      112
     ]
    },
    "f.argtypes": {
     "line number": [
      105
     ]
    },
    "f.restype": {
     "line number": [
      111
     ]
    },
    "pycbc.fft.fftw_pruned.FFTW_BACKWARD": {
     "line number": [
      114
     ]
    },
    "pycbc.fft.fftw_pruned.FFTW_MEASURE": {
     "line number": [
      114
     ]
    },
    "pycbc.fft.fftw_pruned.ctypes": {
     "line number": [
      105,
      105,
      105,
      106,
      106,
      107,
      107,
      108,
      108,
      109,
      109,
      110,
      110,
      111,
      112,
      112
     ]
    },
    "pycbc.fft.fftw_pruned.float_lib": {
     "line number": [
      104
     ]
    },
    "pycbc.fft.fftw_pruned.numpy": {
     "line number": [
      102,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw_pruned.plan_transpose": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "f": {
     "line number": [
      82
     ]
    },
    "pycbc.fft.fftw_pruned.FFTW_MEASURE": {
     "line number": [
      82
     ]
    },
    "pycbc.fft.fftw_pruned.ctypes": {
     "line number": [
      77,
      77,
      77,
      78,
      78,
      79,
      79,
      80,
      81
     ]
    },
    "pycbc.fft.fftw_pruned.float_lib": {
     "line number": [
      76
     ]
    },
    "pycbc.fft.fftw_pruned.numpy": {
     "line number": [
      64,
      64,
      73,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw_pruned.pruned_c2cifft": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "pycbc.fft.fftw_pruned.fft_transpose": {
     "line number": [
      233
     ]
    },
    "pycbc.fft.fftw_pruned.first_phase": {
     "line number": [
      234
     ]
    },
    "pycbc.fft.fftw_pruned.second_phase": {
     "line number": [
      235
     ]
    },
    "pycbc.fft.fftw_pruned.splay": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw_pruned.pycbc.types": {
  "data": {
   "shadows": "pycbc.types"
  },
  "type": "import"
 },
 "pycbc.fft.fftw_pruned.second_phase": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "int": {
     "line number": [
      162,
      163
     ]
    },
    "len": {
     "line number": [
      161,
      164
     ]
    },
    "pycbc.fft.fftw_pruned.numpy": {
     "line number": [
      160,
      164,
      164,
      165,
      165
     ]
    },
    "second_phase_cython": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw_pruned.splay": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "int": {
     "line number": [
      201
     ]
    },
    "len": {
     "line number": [
      201,
      202
     ]
    },
    "pycbc.fft.fftw_pruned.numpy": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.fftw_pruned.warn_msg": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pycbc.fft.func_api": {
  "data": {},
  "type": "module"
 },
 "pycbc.fft.func_api._FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.fft.func_api._TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.fft.func_api.fft": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "_check_fft_args": {
     "line number": [
      47
     ]
    },
    "_check_fwd_args": {
     "line number": [
      48
     ]
    },
    "get_backend": {
     "line number": [
      51
     ]
    },
    "isinstance": {
     "line number": [
      55,
      59
     ]
    },
    "len": {
     "line number": [
      57,
      61
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      59
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.func_api.ifft": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "_check_fft_args": {
     "line number": [
      77
     ]
    },
    "_check_inv_args": {
     "line number": [
      78
     ]
    },
    "get_backend": {
     "line number": [
      81
     ]
    },
    "isinstance": {
     "line number": [
      85,
      89
     ]
    },
    "len": {
     "line number": [
      87,
      91
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      89
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.mkl": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      8
     ]
    },
    "pycbc.fft.mkl.DFTI_COMPLEX": {
     "line number": [
      63
     ]
    },
    "pycbc.fft.mkl.DFTI_DOUBLE": {
     "line number": [
      58
     ]
    },
    "pycbc.fft.mkl.DFTI_REAL": {
     "line number": [
      61,
      62
     ]
    },
    "pycbc.fft.mkl.DFTI_SINGLE": {
     "line number": [
      57
     ]
    },
    "pycbc.fft.mkl._create_descr": {
     "line number": [
      118
     ]
    },
    "pycbc.fft.mkl.ctypes": {
     "line number": [
      118,
      118,
      118,
      118
     ]
    },
    "pycbc.fft.mkl.lib": {
     "line number": [
      7,
      117
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.fft.mkl.DFTI_ALLOW": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_AVOID": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_BACKWARD_SCALE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_BACKWARD_SCRAMBLED": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_CCE_FORMAT": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_CCS_FORMAT": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_COMMITTED": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_COMMIT_STATUS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_COMPLEX": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_COMPLEX_COMPLEX": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_COMPLEX_REAL": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_COMPLEX_STORAGE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_CONJUGATE_EVEN_STORAGE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_DESCRIPTOR_NAME": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_DIMENSION": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_DOUBLE": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_FORWARD_DOMAIN": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_FORWARD_SCALE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_INPLACE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_INPUT_DISTANCE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_INPUT_STRIDES": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_LENGTHS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_NONE": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_NOT_INPLACE": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_NUMBER_OF_TRANSFORMS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_NUMBER_OF_USER_THREADS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_ORDERED": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_ORDERING": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_OUTPUT_DISTANCE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_OUTPUT_STRIDES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_PACKED_FORMAT": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_PACK_FORMAT": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_PERM_FORMAT": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_PLACEMENT": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_PRECISION": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_REAL": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_REAL_COMPLEX": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_REAL_REAL": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_REAL_STORAGE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_SINGLE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_THREAD_LIMIT": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_TRANSPOSE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_UNCOMMITTED": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_VERSION": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.DFTI_WORKSPACE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.FFT": {
  "data": {
   "lineno": 163
  },
  "type": "class"
 },
 "pycbc.fft.mkl.FFT.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "pycbc.fft.mkl.FFT": {
     "line number": [
      165
     ]
    },
    "pycbc.fft.mkl._get_desc": {
     "line number": [
      170
     ]
    },
    "pycbc.fft.mkl.ctypes": {
     "line number": [
      169,
      169,
      169
     ]
    },
    "pycbc.fft.mkl.lib": {
     "line number": [
      168
     ]
    },
    "super": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.mkl.FFT.execute": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "pycbc.fft.mkl.IFFT": {
  "data": {
   "lineno": 175
  },
  "type": "class"
 },
 "pycbc.fft.mkl.IFFT.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "pycbc.fft.mkl.IFFT": {
     "line number": [
      177
     ]
    },
    "pycbc.fft.mkl._get_desc": {
     "line number": [
      182
     ]
    },
    "pycbc.fft.mkl.ctypes": {
     "line number": [
      181,
      181,
      181
     ]
    },
    "pycbc.fft.mkl.lib": {
     "line number": [
      180
     ]
    },
    "super": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.mkl.IFFT.execute": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "pycbc.fft.mkl._create_descr": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "pycbc.fft.mkl._get_desc": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "pycbc.fft.mkl.DFTI_COMPLEX_COMPLEX": {
     "line number": [
      133
     ]
    },
    "pycbc.fft.mkl.DFTI_CONJUGATE_EVEN_STORAGE": {
     "line number": [
      132
     ]
    },
    "pycbc.fft.mkl.DFTI_INPLACE": {
     "line number": [
      138
     ]
    },
    "pycbc.fft.mkl.DFTI_INPUT_DISTANCE": {
     "line number": [
      147
     ]
    },
    "pycbc.fft.mkl.DFTI_NOT_INPLACE": {
     "line number": [
      140
     ]
    },
    "pycbc.fft.mkl.DFTI_NUMBER_OF_TRANSFORMS": {
     "line number": [
      145
     ]
    },
    "pycbc.fft.mkl.DFTI_OUTPUT_DISTANCE": {
     "line number": [
      149
     ]
    },
    "pycbc.fft.mkl.DFTI_PLACEMENT": {
     "line number": [
      138,
      140
     ]
    },
    "pycbc.fft.mkl.DFTI_THREAD_LIMIT": {
     "line number": [
      154
     ]
    },
    "pycbc.fft.mkl._create_descr": {
     "line number": [
      124
     ]
    },
    "pycbc.fft.mkl.check_status": {
     "line number": [
      125,
      134,
      141,
      146,
      148,
      150,
      155,
      159
     ]
    },
    "pycbc.fft.mkl.ctypes": {
     "line number": [
      121,
      124,
      129,
      129,
      129
     ]
    },
    "pycbc.fft.mkl.lib": {
     "line number": [
      129,
      132,
      138,
      140,
      145,
      147,
      149,
      154,
      158
     ]
    },
    "pycbc.fft.mkl.mkl_domain": {
     "line number": [
      123
     ]
    },
    "pycbc.fft.mkl.mkl_prec": {
     "line number": [
      122
     ]
    },
    "pycbc.scheme.mgr.state.num_threads": {
     "line number": [
      153
     ]
    },
    "str": {
     "line number": [
      123,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.mkl._scheme": {
  "data": {
   "shadows": "pycbc.scheme"
  },
  "type": "import"
 },
 "pycbc.fft.mkl.check_status": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      74
     ]
    },
    "pycbc.fft.mkl.ctypes": {
     "line number": [
      73
     ]
    },
    "pycbc.fft.mkl.lib": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.mkl.create_descriptor": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "f": {
     "line number": [
      87
     ]
    },
    "pycbc.fft.mkl.DFTI_CCS_FORMAT": {
     "line number": [
      92
     ]
    },
    "pycbc.fft.mkl.DFTI_CONJUGATE_EVEN_STORAGE": {
     "line number": [
      92
     ]
    },
    "pycbc.fft.mkl.DFTI_INPLACE": {
     "line number": [
      89
     ]
    },
    "pycbc.fft.mkl.DFTI_NOT_INPLACE": {
     "line number": [
      91
     ]
    },
    "pycbc.fft.mkl.DFTI_PLACEMENT": {
     "line number": [
      89,
      91
     ]
    },
    "pycbc.fft.mkl.check_status": {
     "line number": [
      94
     ]
    },
    "pycbc.fft.mkl.ctypes": {
     "line number": [
      80,
      82,
      82,
      82,
      82,
      87
     ]
    },
    "pycbc.fft.mkl.lib": {
     "line number": [
      81,
      89,
      91,
      92,
      93
     ]
    },
    "pycbc.fft.mkl.mkl_domain": {
     "line number": [
      85
     ]
    },
    "pycbc.fft.mkl.mkl_prec": {
     "line number": [
      84
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      77,
      78
     ]
    },
    "str": {
     "line number": [
      85,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.mkl.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "pycbc.fft.mkl.fft": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "f": {
     "line number": [
      100,
      102
     ]
    },
    "f.argtypes": {
     "line number": [
      101
     ]
    },
    "len": {
     "line number": [
      98,
      98
     ]
    },
    "max": {
     "line number": [
      98
     ]
    },
    "pycbc.fft.mkl.check_status": {
     "line number": [
      104
     ]
    },
    "pycbc.fft.mkl.create_descriptor": {
     "line number": [
      98
     ]
    },
    "pycbc.fft.mkl.ctypes": {
     "line number": [
      101,
      101,
      101,
      103
     ]
    },
    "pycbc.fft.mkl.lib": {
     "line number": [
      100,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.mkl.ifft": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "f": {
     "line number": [
      109,
      111
     ]
    },
    "f.argtypes": {
     "line number": [
      110
     ]
    },
    "len": {
     "line number": [
      107,
      107
     ]
    },
    "max": {
     "line number": [
      107
     ]
    },
    "pycbc.fft.mkl.check_status": {
     "line number": [
      113
     ]
    },
    "pycbc.fft.mkl.create_descriptor": {
     "line number": [
      107
     ]
    },
    "pycbc.fft.mkl.ctypes": {
     "line number": [
      110,
      110,
      110,
      112
     ]
    },
    "pycbc.fft.mkl.lib": {
     "line number": [
      109,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.mkl.lib": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.mkl_domain": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.mkl_prec": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pycbc.fft.mkl.pycbc.libutils": {
  "data": {
   "shadows": "pycbc.libutils"
  },
  "type": "import"
 },
 "pycbc.fft.mkl.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.fft.npfft": {
  "data": {},
  "type": "module"
 },
 "pycbc.fft.npfft.fft": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.npfft.ifft": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      41
     ]
    },
    "len": {
     "line number": [
      44,
      46,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.npfft.numpy.fft": {
  "data": {
   "shadows": "numpy.fft"
  },
  "type": "import"
 },
 "pycbc.fft.parser_support": {
  "data": {},
  "type": "module"
 },
 "pycbc.fft.parser_support.from_cli": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      127
     ]
    },
    "get_backend": {
     "line number": [
      124
     ]
    },
    "set_backend": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.parser_support.insert_fft_option_group": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      63
     ]
    },
    "get_backend_modules": {
     "line number": [
      60
     ]
    },
    "get_backend_names": {
     "line number": [
      57
     ]
    },
    "str": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.fft.parser_support.verify_fft_options": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      88
     ]
    },
    "get_backend_modules": {
     "line number": [
      85
     ]
    },
    "get_backend_names": {
     "line number": [
      80
     ]
    },
    "len": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter": {
  "data": {},
  "type": "module"
 },
 "pycbc.filter.autocorrelation": {
  "data": {},
  "type": "module"
 },
 "pycbc.filter.autocorrelation.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.filter.autocorrelation.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.filter.autocorrelation.calculate_acf": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      68,
      105
     ]
    },
    "len": {
     "line number": [
      76,
      89,
      100
     ]
    },
    "pycbc.filter.autocorrelation.numpy": {
     "line number": [
      81,
      100
     ]
    },
    "pycbc.filter.matchedfilter.correlate": {
     "line number": [
      91
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      89
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      68,
      85,
      105,
      106
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.autocorrelation.calculate_acl": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      156
     ]
    },
    "float": {
     "line number": [
      155
     ]
    },
    "int": {
     "line number": [
      111,
      155,
      169,
      170
     ]
    },
    "len": {
     "line number": [
      159,
      166
     ]
    },
    "pycbc.filter.autocorrelation.calculate_acf": {
     "line number": [
      163
     ]
    },
    "pycbc.filter.autocorrelation.numpy": {
     "line number": [
      166,
      168,
      170,
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.autocorrelation.correlate": {
  "data": {
   "shadows": "pycbc.filter.matchedfilter.correlate"
  },
  "type": "import"
 },
 "pycbc.filter.autocorrelation.isnan": {
  "data": {
   "shadows": "math.isnan"
  },
  "type": "import"
 },
 "pycbc.filter.autocorrelation.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.filter.autocorrelation.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.filter.fotonfilter": {
  "data": {},
  "type": "module"
 },
 "pycbc.filter.fotonfilter.Filter": {
  "data": {
   "shadows": "foton.Filter"
  },
  "type": "import"
 },
 "pycbc.filter.fotonfilter.FilterFile": {
  "data": {
   "shadows": "foton.FilterFile"
  },
  "type": "import"
 },
 "pycbc.filter.fotonfilter.filter_data": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      72
     ]
    },
    "filter.apply": {
     "line number": [
      81
     ]
    },
    "filter.sections": {
     "line number": [
      80
     ]
    },
    "foton.Filter": {
     "line number": [
      72
     ]
    },
    "foton.iir2z": {
     "line number": [
      85
     ]
    },
    "int": {
     "line number": [
      75
     ]
    },
    "len": {
     "line number": [
      66,
      80,
      86
     ]
    },
    "pycbc.filter.fotonfilter.logging": {
     "line number": [
      77,
      87
     ]
    },
    "pycbc.filter.fotonfilter.numpy": {
     "line number": [
      66
     ]
    },
    "pycbc.filter.fotonfilter.sys": {
     "line number": [
      88
     ]
    },
    "range": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.fotonfilter.frame": {
  "data": {
   "shadows": "pycbc.frame"
  },
  "type": "import"
 },
 "pycbc.filter.fotonfilter.get_swstat_bits": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "bin": {
     "line number": [
      47
     ]
    },
    "int": {
     "line number": [
      47,
      51,
      51
     ]
    },
    "len": {
     "line number": [
      51
     ]
    },
    "pycbc.frame.read_frame": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.fotonfilter.iir2z": {
  "data": {
   "shadows": "foton.iir2z"
  },
  "type": "import"
 },
 "pycbc.filter.fotonfilter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.filter.fotonfilter.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.filter.fotonfilter.read_gain_from_frames": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "pycbc.frame.read_frame": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.fotonfilter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pycbc.filter.matchedfilter_cuda": {
  "data": {},
  "type": "module"
 },
 "pycbc.filter.matchedfilter_cuda.CUDACorrelator": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "pycbc.filter.matchedfilter_cuda.CUDACorrelator.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "pycbc.filter.matchedfilter_cuda.get_correlate_kernel": {
     "line number": [
      52
     ]
    },
    "pycuda.gpuarray._get_common_dtype": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.matchedfilter_cuda.CUDACorrelator.correlate": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pycbc.filter.matchedfilter_cuda.ElementwiseKernel": {
  "data": {
   "shadows": "pycuda.elementwise.ElementwiseKernel"
  },
  "type": "import"
 },
 "pycbc.filter.matchedfilter_cuda._correlate_factory": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "pycbc.filter.matchedfilter_cuda.CUDACorrelator": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.matchedfilter_cuda._get_common_dtype": {
  "data": {
   "shadows": "pycuda.gpuarray._get_common_dtype"
  },
  "type": "import"
 },
 "pycbc.filter.matchedfilter_cuda.context_dependent_memoize": {
  "data": {
   "shadows": "pycuda.tools.context_dependent_memoize"
  },
  "type": "import"
 },
 "pycbc.filter.matchedfilter_cuda.correlate": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "krnl": {
     "line number": [
      44
     ]
    },
    "pycbc.filter.matchedfilter_cuda.get_correlate_kernel": {
     "line number": [
      43
     ]
    },
    "pycuda.gpuarray._get_common_dtype": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.matchedfilter_cuda.dtype_to_ctype": {
  "data": {
   "shadows": "pycuda.tools.dtype_to_ctype"
  },
  "type": "import"
 },
 "pycbc.filter.matchedfilter_cuda.get_correlate_kernel": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "pycuda.elementwise.ElementwiseKernel": {
     "line number": [
      32
     ]
    },
    "pycuda.tools.context_dependent_memoize": {
     "line number": [
      30
     ]
    },
    "pycuda.tools.dtype_to_ctype": {
     "line number": [
      34,
      35,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.matchedfilter_numpy": {
  "data": {},
  "type": "module"
 },
 "pycbc.filter.matchedfilter_numpy.correlate": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "pycbc.filter.matchedfilter_numpy.numpy": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.matchedfilter_numpy.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.filter.qtransform": {
  "data": {},
  "type": "module"
 },
 "pycbc.filter.qtransform.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.timeseries.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.filter.qtransform.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.timeseries.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.filter.qtransform._iter_frequencies": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      182
     ]
    },
    "float": {
     "line number": [
      173,
      179
     ]
    },
    "int": {
     "line number": [
      174
     ]
    },
    "max": {
     "line number": [
      174
     ]
    },
    "numpy.ceil": {
     "line number": [
      174
     ]
    },
    "numpy.exp": {
     "line number": [
      180
     ]
    },
    "numpy.log": {
     "line number": [
      173
     ]
    },
    "pycbc.filter.qtransform.deltam_f": {
     "line number": [
      174
     ]
    },
    "six.moves.range": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.qtransform._iter_qs": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      150
     ]
    },
    "float": {
     "line number": [
      145
     ]
    },
    "int": {
     "line number": [
      146
     ]
    },
    "max": {
     "line number": [
      146
     ]
    },
    "numpy.ceil": {
     "line number": [
      146
     ]
    },
    "numpy.exp": {
     "line number": [
      149
     ]
    },
    "numpy.log": {
     "line number": [
      145
     ]
    },
    "six.moves.range": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.qtransform.ceil": {
  "data": {
   "shadows": "numpy.ceil"
  },
  "type": "import"
 },
 "pycbc.filter.qtransform.deltam_f": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "pycbc.filter.qtransform.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "pycbc.filter.qtransform.ifft": {
  "data": {
   "shadows": "pycbc.fft.ifft"
  },
  "type": "import"
 },
 "pycbc.filter.qtransform.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "pycbc.filter.qtransform.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.filter.qtransform.qplane": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      71
     ]
    },
    "enumerate": {
     "line number": [
      67
     ]
    },
    "pycbc.filter.qtransform.numpy": {
     "line number": [
      84,
      85
     ]
    },
    "pycbc.filter.qtransform.qseries": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.qtransform.qseries": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "float": {
     "line number": [
      232
     ]
    },
    "int": {
     "line number": [
      207,
      210,
      211
     ]
    },
    "len": {
     "line number": [
      216
     ]
    },
    "pycbc.fft.ifft": {
     "line number": [
      225
     ]
    },
    "pycbc.filter.qtransform.numpy": {
     "line number": [
      206,
      208,
      223,
      231
     ]
    },
    "pycbc.types.timeseries.FrequencySeries": {
     "line number": [
      221
     ]
    },
    "pycbc.types.timeseries.TimeSeries": {
     "line number": [
      223
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.qtransform.qtiling": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "list": {
     "line number": [
      107,
      110
     ]
    },
    "pycbc.filter.qtransform._iter_frequencies": {
     "line number": [
      109
     ]
    },
    "pycbc.filter.qtransform._iter_qs": {
     "line number": [
      107
     ]
    },
    "pycbc.filter.qtransform.deltam_f": {
     "line number": [
      107
     ]
    },
    "pycbc.filter.qtransform.numpy": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.qtransform.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "pycbc.filter.qtransform.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.filter.resample": {
  "data": {
   "symbols_in_volume": {
    "pycbc.filter.resample.lal": {
     "line number": [
      31,
      32,
      178,
      179
     ]
    },
    "pycbc.filter.resample.numpy": {
     "line number": [
      31,
      32,
      178,
      179
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.filter.resample.Array": {
  "data": {
   "shadows": "pycbc.types.Array"
  },
  "type": "import"
 },
 "pycbc.filter.resample.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.filter.resample.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.filter.resample.__all__": {
  "data": {
   "lineno": 339
  },
  "type": "constant"
 },
 "pycbc.filter.resample._highpass_func": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "pycbc.filter.resample._resample_func": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pycbc.filter.resample.complex_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.complex_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.filter.resample.correlate": {
  "data": {
   "shadows": "pycbc.filter.correlate"
  },
  "type": "import"
 },
 "pycbc.filter.resample.fft": {
  "data": {
   "shadows": "pycbc.fft.fft"
  },
  "type": "import"
 },
 "pycbc.filter.resample.fir_zero_filter": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "len": {
     "line number": [
      103,
      104,
      104,
      104,
      104
     ]
    },
    "pycbc.filter.resample.lfilter": {
     "line number": [
      97
     ]
    },
    "pycbc.filter.resample.numpy": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.resample.highpass": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      283,
      286
     ]
    },
    "isinstance": {
     "line number": [
      282
     ]
    },
    "pycbc.filter.resample._highpass_func": {
     "line number": [
      289
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      282,
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.resample.highpass_fir": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "float": {
     "line number": [
      247
     ]
    },
    "int": {
     "line number": [
      247
     ]
    },
    "pycbc.filter.resample.fir_zero_filter": {
     "line number": [
      249
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.resample.ifft": {
  "data": {
   "shadows": "pycbc.fft.ifft"
  },
  "type": "import"
 },
 "pycbc.filter.resample.interpolate_complex_frequency": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "int": {
     "line number": [
      317,
      318,
      319
     ]
    },
    "len": {
     "line number": [
      317,
      318
     ]
    },
    "pycbc.fft.fft": {
     "line number": [
      335
     ]
    },
    "pycbc.fft.ifft": {
     "line number": [
      323
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      333
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      320
     ]
    },
    "pycbc.types.real_same_precision_as": {
     "line number": [
      321
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      320,
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.resample.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.filter.resample.lfilter": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      53
     ]
    },
    "len": {
     "line number": [
      52,
      59,
      60,
      60,
      63,
      73,
      78
     ]
    },
    "pycbc.fft.fft": {
     "line number": [
      69,
      70
     ]
    },
    "pycbc.fft.ifft": {
     "line number": [
      76
     ]
    },
    "pycbc.filter.correlate": {
     "line number": [
      75
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      58,
      61,
      69,
      70
     ]
    },
    "pycbc.types.complex_same_precision_as": {
     "line number": [
      64
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      66,
      67,
      72,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.resample.lowpass_fir": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "float": {
     "line number": [
      227
     ]
    },
    "int": {
     "line number": [
      227
     ]
    },
    "pycbc.filter.resample.fir_zero_filter": {
     "line number": [
      229
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.resample.notch_fir": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "float": {
     "line number": [
      206,
      207
     ]
    },
    "int": {
     "line number": [
      206,
      207
     ]
    },
    "pycbc.filter.resample.fir_zero_filter": {
     "line number": [
      209
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.resample.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.filter.resample.real_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.real_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.filter.resample.resample_to_delta_t": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      140,
      143
     ]
    },
    "ValueError": {
     "line number": [
      166
     ]
    },
    "int": {
     "line number": [
      154
     ]
    },
    "isinstance": {
     "line number": [
      139
     ]
    },
    "pycbc.filter.resample._resample_func": {
     "line number": [
      150
     ]
    },
    "pycbc.filter.resample.fir_zero_filter": {
     "line number": [
      163
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      139,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.resample.scipy.signal": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "pycbc.filter.resample.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.filter.simd_correlate": {
  "data": {
   "symbols_in_volume": {
    "int": {
     "line number": [
      459
     ]
    },
    "numpy.complex64": {
     "line number": [
      460
     ]
    },
    "numpy.dtype": {
     "line number": [
      460
     ]
    },
    "numpy.log": {
     "line number": [
      459,
      459
     ]
    },
    "pow": {
     "line number": [
      460
     ]
    },
    "pycbc.filter.simd_correlate.corr_common_support": {
     "line number": [
      59
     ]
    },
    "pycbc.filter.simd_correlate.pow2": {
     "line number": [
      460
     ]
    },
    "pycbc.opt.omp_support": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.filter.simd_correlate.WEAVE_FLAGS": {
  "data": {
   "shadows": "pycbc.WEAVE_FLAGS"
  },
  "type": "import"
 },
 "pycbc.filter.simd_correlate._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.filter.simd_correlate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.filter.simd_correlate.corr_common_support": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pycbc.filter.simd_correlate.corr_parallel_code": {
  "data": {
   "lineno": 443
  },
  "type": "constant"
 },
 "pycbc.filter.simd_correlate.corr_simd_code": {
  "data": {
   "lineno": 428
  },
  "type": "constant"
 },
 "pycbc.filter.simd_correlate.corr_support": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pycbc.filter.simd_correlate.correlate_parallel": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "len": {
     "line number": [
      469
     ]
    },
    "numpy.array": {
     "line number": [
      466,
      467,
      468
     ]
    },
    "pycbc.WEAVE_FLAGS": {
     "line number": [
      472
     ]
    },
    "pycbc.filter.simd_correlate.corr_parallel_code": {
     "line number": [
      471
     ]
    },
    "pycbc.filter.simd_correlate.corr_support": {
     "line number": [
      475
     ]
    },
    "pycbc.filter.simd_correlate.default_segsize": {
     "line number": [
      470
     ]
    },
    "pycbc.opt.omp_flags": {
     "line number": [
      472
     ]
    },
    "pycbc.opt.omp_libs": {
     "line number": [
      472
     ]
    },
    "pycbc.weave.inline": {
     "line number": [
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.simd_correlate.correlate_simd": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "len": {
     "line number": [
      436
     ]
    },
    "numpy.array": {
     "line number": [
      433,
      434,
      435
     ]
    },
    "pycbc.WEAVE_FLAGS": {
     "line number": [
      438
     ]
    },
    "pycbc.filter.simd_correlate.corr_simd_code": {
     "line number": [
      437
     ]
    },
    "pycbc.filter.simd_correlate.corr_support": {
     "line number": [
      441
     ]
    },
    "pycbc.types.float32": {
     "line number": [
      433,
      434,
      435
     ]
    },
    "pycbc.weave.inline": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.simd_correlate.default_segsize": {
  "data": {
   "lineno": 463
  },
  "type": "constant"
 },
 "pycbc.filter.simd_correlate.float32": {
  "data": {
   "shadows": "pycbc.types.float32"
  },
  "type": "import"
 },
 "pycbc.filter.simd_correlate.inline": {
  "data": {
   "shadows": "pycbc.weave.inline"
  },
  "type": "import"
 },
 "pycbc.filter.simd_correlate.omp_flags": {
  "data": {
   "shadows": "pycbc.opt.omp_flags"
  },
  "type": "import"
 },
 "pycbc.filter.simd_correlate.omp_libs": {
  "data": {
   "shadows": "pycbc.opt.omp_libs"
  },
  "type": "import"
 },
 "pycbc.filter.simd_correlate.omp_support": {
  "data": {
   "shadows": "pycbc.opt.omp_support"
  },
  "type": "import"
 },
 "pycbc.filter.simd_correlate.pow2": {
  "data": {
   "lineno": 459
  },
  "type": "constant"
 },
 "pycbc.filter.simd_correlate.pycbc.opt": {
  "data": {
   "shadows": "pycbc.opt"
  },
  "type": "import"
 },
 "pycbc.filter.zpk": {
  "data": {},
  "type": "module"
 },
 "pycbc.filter.zpk.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.filter.zpk.filter_zpk": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      75,
      80
     ]
    },
    "float": {
     "line number": [
      86
     ]
    },
    "isinstance": {
     "line number": [
      74
     ]
    },
    "len": {
     "line number": [
      78,
      78
     ]
    },
    "numpy.append": {
     "line number": [
      101
     ]
    },
    "numpy.array": {
     "line number": [
      84,
      85
     ]
    },
    "numpy.isfinite": {
     "line number": [
      100
     ]
    },
    "numpy.ones": {
     "line number": [
      101
     ]
    },
    "numpy.pi": {
     "line number": [
      90,
      91
     ]
    },
    "numpy.prod": {
     "line number": [
      107,
      107
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      74,
      115
     ]
    },
    "scipy.signal.sosfilt": {
     "line number": [
      113
     ]
    },
    "scipy.signal.zpk2sos": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.filter.zpk.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.filter.zpk.sosfilt": {
  "data": {
   "shadows": "scipy.signal.sosfilt"
  },
  "type": "import"
 },
 "pycbc.filter.zpk.zpk2sos": {
  "data": {
   "shadows": "scipy.signal.zpk2sos"
  },
  "type": "import"
 },
 "pycbc.frame": {
  "data": {
   "symbols_in_volume": {
    "pycbc.frame.NO_BURST_HW_INJ": {
     "line number": [
      27
     ]
    },
    "pycbc.frame.NO_CBC_HW_INJ": {
     "line number": [
      26
     ]
    },
    "pycbc.frame.NO_DETCHAR_HW_INJ": {
     "line number": [
      27
     ]
    },
    "pycbc.frame.NO_STOCH_HW_INJ": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.frame.ETMX_ESD_DAC_OVERFLOW": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pycbc.frame.ETMY_ESD_DAC_OVERFLOW": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pycbc.frame.FCC_OK": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pycbc.frame.FILTERS_OK": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pycbc.frame.HOFT_OK": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pycbc.frame.HOFT_PROD": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pycbc.frame.KAPPA_A_OK": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pycbc.frame.KAPPA_C_OK": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pycbc.frame.KAPPA_PU_OK": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pycbc.frame.KAPPA_TST_OK": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pycbc.frame.NO_BURST_HW_INJ": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pycbc.frame.NO_CBC_HW_INJ": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pycbc.frame.NO_DETCHAR_HW_INJ": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pycbc.frame.NO_GAP": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pycbc.frame.NO_HWINJ": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pycbc.frame.NO_STOCH_HW_INJ": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pycbc.frame.OMC_DCPD_ADC_OVERFLOW": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pycbc.frame.SCIENCE_INTENT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pycbc.frame.SCIENCE_QUALITY": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pycbc.frame.VIRGO_GOOD_DQ": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pycbc.frame.flag_names_to_bitmask": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "globals": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame": {
  "data": {
   "symbols_in_volume": {
    "pycbc.frame.frame.lal": {
     "line number": [
      30,
      37,
      44,
      51,
      58,
      65,
      32,
      34,
      39,
      41,
      46,
      48,
      53,
      55,
      60,
      62,
      67,
      69
     ]
    },
    "pycbc.frame.frame.lalframe": {
     "line number": [
      31,
      33,
      35,
      38,
      40,
      42,
      45,
      47,
      49,
      52,
      54,
      56,
      59,
      61,
      63,
      66,
      68,
      70
     ]
    },
    "pycbc.frame.frame.numpy": {
     "line number": [
      31,
      38,
      45,
      52,
      59,
      66
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.frame.frame.DataBuffer": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "object": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.frame.frame.DataBuffer.__init__": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "pycbc.frame.frame.numpy": {
     "line number": [
      456
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      484
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.DataBuffer._read_frame": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      551
     ]
    },
    "RuntimeError": {
     "line number": [
      552
     ]
    },
    "int": {
     "line number": [
      547
     ]
    },
    "pycbc.frame.frame._fr_type_map": {
     "line number": [
      544,
      545
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      548
     ]
    },
    "read_func": {
     "line number": [
      544,
      546
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.DataBuffer._retrieve_metadata": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "create_series_func": {
     "line number": [
      518,
      520
     ]
    },
    "get_series_metadata_func": {
     "line number": [
      519,
      522
     ]
    },
    "int": {
     "line number": [
      523
     ]
    },
    "pycbc.frame.frame._fr_type_map": {
     "line number": [
      518,
      519
     ]
    },
    "pycbc.frame.frame.lal": {
     "line number": [
      521
     ]
    },
    "pycbc.frame.frame.lalframe": {
     "line number": [
      516,
      517
     ]
    },
    "staticmethod": {
     "line number": [
      498
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.DataBuffer.advance": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "len": {
     "line number": [
      577,
      578
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.DataBuffer.attempt_advance": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      655
     ]
    },
    "pycbc.frame.frame.DataBuffer": {
     "line number": [
      653,
      659
     ]
    },
    "pycbc.frame.frame.lal": {
     "line number": [
      656
     ]
    },
    "pycbc.frame.frame.time": {
     "line number": [
      663
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.DataBuffer.null_advance": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": {
    "int": {
     "line number": [
      562
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.DataBuffer.update_cache": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": {
    "pycbc.frame.frame.lalframe": {
     "line number": [
      495
     ]
    },
    "pycbc.frame.frame.locations_to_cache": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.DataBuffer.update_cache_by_increment": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      621
     ]
    },
    "float": {
     "line number": [
      596,
      597,
      607
     ]
    },
    "hasattr": {
     "line number": [
      599
     ]
    },
    "int": {
     "line number": [
      604,
      605,
      607,
      614,
      614
     ]
    },
    "pycbc.frame.frame.glob": {
     "line number": [
      600
     ]
    },
    "pycbc.frame.frame.lalframe": {
     "line number": [
      625
     ]
    },
    "pycbc.frame.frame.locations_to_cache": {
     "line number": [
      624
     ]
    },
    "pycbc.frame.frame.logging": {
     "line number": [
      620
     ]
    },
    "pycbc.frame.frame.numpy": {
     "line number": [
      607,
      608,
      608
     ]
    },
    "str": {
     "line number": [
      615
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.StatusBuffer": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": {
    "pycbc.frame.frame.DataBuffer": {
     "line number": [
      666
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.frame.frame.StatusBuffer.__init__": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": {
    "pycbc.frame.frame.DataBuffer": {
     "line number": [
      697
     ]
    },
    "pycbc.frame.frame.numpy": {
     "line number": [
      701
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.StatusBuffer.advance": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      810
     ]
    },
    "pycbc.frame.frame.DataBuffer": {
     "line number": [
      808
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.StatusBuffer.check_valid": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      727
     ]
    },
    "pycbc.frame.frame.numpy": {
     "line number": [
      726,
      727
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.StatusBuffer.indices_of_flag": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": {
    "int": {
     "line number": [
      774,
      775
     ]
    },
    "pycbc.events.veto.indices_outside_times": {
     "line number": [
      787
     ]
    },
    "pycbc.frame.frame.numpy": {
     "line number": [
      782
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.StatusBuffer.is_extent_valid": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": {
    "int": {
     "line number": [
      748,
      749
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.frame.frame.__all__": {
  "data": {
   "lineno": 381
  },
  "type": "constant"
 },
 "pycbc.frame.frame._fr_type_map": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pycbc.frame.frame._is_gwf": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      91
     ]
    },
    "open": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame._read_channel": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "pycbc.frame.frame._fr_type_map": {
     "line number": [
      77,
      78
     ]
    },
    "pycbc.frame.frame.lalframe": {
     "line number": [
      76
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      80
     ]
    },
    "read_func": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.datafind_connection": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      273
     ]
    },
    "int": {
     "line number": [
      284
     ]
    },
    "len": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.frame_paths": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "pycbc.frame.frame.datafind_connection": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "pycbc.frame.frame.glue.datafind": {
  "data": {
   "shadows": "glue.datafind"
  },
  "type": "import"
 },
 "pycbc.frame.frame.indices_outside_times": {
  "data": {
   "shadows": "pycbc.events.veto.indices_outside_times"
  },
  "type": "import"
 },
 "pycbc.frame.frame.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.frame.frame.lalframe": {
  "data": {
   "shadows": "lalframe"
  },
  "type": "import"
 },
 "pycbc.frame.frame.locations_to_cache": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      137
     ]
    },
    "max": {
     "line number": [
      126
     ]
    },
    "pycbc.frame.frame._is_gwf": {
     "line number": [
      134
     ]
    },
    "pycbc.frame.frame.glob": {
     "line number": [
      116
     ]
    },
    "pycbc.frame.frame.lal": {
     "line number": [
      114,
      133,
      139
     ]
    },
    "pycbc.frame.frame.lalframe": {
     "line number": [
      135
     ]
    },
    "str": {
     "line number": [
      135,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.locations_to_cache.relaxed_getctime": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.frame.frame.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.frame.frame.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycbc.frame.frame.query_and_read_frame": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "int": {
     "line number": [
      373,
      373
     ]
    },
    "pycbc.frame.frame.frame_paths": {
     "line number": [
      373
     ]
    },
    "pycbc.frame.frame.logging": {
     "line number": [
      372,
      374
     ]
    },
    "pycbc.frame.frame.numpy": {
     "line number": [
      373
     ]
    },
    "pycbc.frame.frame.read_frame": {
     "line number": [
      375
     ]
    },
    "pycbc.frame.losc.read_frame_losc": {
     "line number": [
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.read_frame": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      182,
      234
     ]
    },
    "create_series_func": {
     "line number": [
      212
     ]
    },
    "float": {
     "line number": [
      228,
      230
     ]
    },
    "get_series_metadata_func": {
     "line number": [
      214
     ]
    },
    "list": {
     "line number": [
      184,
      203,
      238
     ]
    },
    "pycbc.frame.frame._fr_type_map": {
     "line number": [
      210,
      211
     ]
    },
    "pycbc.frame.frame._read_channel": {
     "line number": [
      241,
      246
     ]
    },
    "pycbc.frame.frame.lal": {
     "line number": [
      192,
      213,
      222,
      223,
      224,
      225
     ]
    },
    "pycbc.frame.frame.lalframe": {
     "line number": [
      194,
      195,
      198,
      200,
      208,
      209,
      242
     ]
    },
    "pycbc.frame.frame.locations_to_cache": {
     "line number": [
      189
     ]
    },
    "pycbc.frame.frame.logging": {
     "line number": [
      191
     ]
    },
    "type": {
     "line number": [
      184,
      203,
      222,
      224,
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.read_frame_losc": {
  "data": {
   "shadows": "pycbc.frame.losc.read_frame_losc"
  },
  "type": "import"
 },
 "pycbc.frame.frame.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pycbc.frame.frame.write_frame": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      411,
      418
     ]
    },
    "add_series_func": {
     "line number": [
      440
     ]
    },
    "create_sequence_func": {
     "line number": [
      438
     ]
    },
    "create_series_func": {
     "line number": [
      429,
      435
     ]
    },
    "enumerate": {
     "line number": [
      425
     ]
    },
    "int": {
     "line number": [
      416
     ]
    },
    "len": {
     "line number": [
      410,
      410,
      437,
      438
     ]
    },
    "list": {
     "line number": [
      400,
      400
     ]
    },
    "pycbc.frame.frame._fr_type_map": {
     "line number": [
      427,
      428,
      429,
      430,
      431
     ]
    },
    "pycbc.frame.frame.lal": {
     "line number": [
      423,
      436
     ]
    },
    "pycbc.frame.frame.lalframe": {
     "line number": [
      421,
      443
     ]
    },
    "type": {
     "line number": [
      400,
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.frame.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.frame.losc": {
  "data": {},
  "type": "module"
 },
 "pycbc.frame.losc._get_channel": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pycbc.frame.losc._losc_url": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pycbc.frame.losc.download_file": {
  "data": {
   "shadows": "astropy.utils.data.download_file"
  },
  "type": "import"
 },
 "pycbc.frame.losc.get_run": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.losc.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pycbc.frame.losc.losc_frame_json": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      75
     ]
    },
    "ImportError": {
     "line number": [
      62
     ]
    },
    "ValueError": {
     "line number": [
      67,
      77
     ]
    },
    "int": {
     "line number": [
      71,
      71
     ]
    },
    "print": {
     "line number": [
      76
     ]
    },
    "pycbc.frame.losc._losc_url": {
     "line number": [
      71
     ]
    },
    "pycbc.frame.losc.get_run": {
     "line number": [
      64,
      65
     ]
    },
    "pycbc.frame.losc.json": {
     "line number": [
      74
     ]
    },
    "urllib.urlopen": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.losc.losc_frame_urls": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "pycbc.frame.losc.losc_frame_json": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.losc.read_frame": {
  "data": {
   "shadows": "pycbc.frame.read_frame"
  },
  "type": "import"
 },
 "pycbc.frame.losc.read_frame_losc": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      126
     ]
    },
    "astropy.utils.data.download_file": {
     "line number": [
      132
     ]
    },
    "isinstance": {
     "line number": [
      119
     ]
    },
    "len": {
     "line number": [
      125,
      137
     ]
    },
    "list": {
     "line number": [
      119
     ]
    },
    "pycbc.frame.losc.losc_frame_urls": {
     "line number": [
      124
     ]
    },
    "pycbc.frame.read_frame": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.losc.read_strain_losc": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "pycbc.frame.losc._get_channel": {
     "line number": [
      159
     ]
    },
    "pycbc.frame.losc.read_frame_losc": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.frame.losc.urlopen": {
  "data": {
   "shadows": "urllib.urlopen"
  },
  "type": "import"
 },
 "pycbc.frame.store": {
  "data": {},
  "type": "module"
 },
 "pycbc.frame.store.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.frame.store.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.frame.store.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.frame.store.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.frame.store.read_store": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      47,
      61
     ]
    },
    "int": {
     "line number": [
      66,
      67
     ]
    },
    "len": {
     "line number": [
      64
     ]
    },
    "pycbc.frame.store.h5py": {
     "line number": [
      45
     ]
    },
    "pycbc.frame.store.numpy": {
     "line number": [
      54
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      68
     ]
    },
    "str": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.git_hash": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pycbc.inference": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.burn_in": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "object": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests.__init__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "float": {
     "line number": [
      181
     ]
    },
    "int": {
     "line number": [
      179,
      183,
      185
     ]
    },
    "len": {
     "line number": [
      183
     ]
    },
    "pycbc.inference.burn_in.NOT_BURNED_IN_ITER": {
     "line number": [
      175,
      176
     ]
    },
    "pycbc.io.record.get_vars_from_arg": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests._getacls": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "len": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests._getlogposts": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests._getniters": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests._getnsamples": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      210
     ]
    },
    "KeyError": {
     "line number": [
      210
     ]
    },
    "list": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests._index2iter": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests._iter2index": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests.evaluate": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": {
    "eval": {
     "line number": [
      390
     ]
    },
    "getattr": {
     "line number": [
      369
     ]
    },
    "pycbc.inference.burn_in.NOT_BURNED_IN_ITER": {
     "line number": [
      399,
      400
     ]
    },
    "pycbc.inference.burn_in.numpy": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests.from_config": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      402
     ]
    },
    "cls": {
     "line number": [
      420
     ]
    },
    "float": {
     "line number": [
      412
     ]
    },
    "int": {
     "line number": [
      410,
      415,
      418
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests.halfchain": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests.ks_test": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "all": {
     "line number": [
      357
     ]
    },
    "int": {
     "line number": [
      347,
      360
     ]
    },
    "pycbc.inference.burn_in.NOT_BURNED_IN_ITER": {
     "line number": [
      362
     ]
    },
    "pycbc.inference.burn_in.ks_test": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests.max_posterior": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "pycbc.inference.burn_in.NOT_BURNED_IN_ITER": {
     "line number": [
      295
     ]
    },
    "pycbc.inference.burn_in.max_posterior": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests.min_iterations": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "pycbc.inference.burn_in.NOT_BURNED_IN_ITER": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests.nacl": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "all": {
     "line number": [
      333
     ]
    },
    "int": {
     "line number": [
      327
     ]
    },
    "pycbc.inference.burn_in.NOT_BURNED_IN_ITER": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MCMCBurnInTests.posterior_step": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "pycbc.inference.burn_in.numpy": {
     "line number": [
      303
     ]
    },
    "pycbc.inference.burn_in.posterior_step": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MultiTemperedMCMCBurnInTests": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "pycbc.inference.burn_in.MCMCBurnInTests": {
     "line number": [
      423
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.burn_in.MultiTemperedMCMCBurnInTests._getacls": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "pycbc.inference.burn_in.MultiTemperedMCMCBurnInTests": {
     "line number": [
      437
     ]
    },
    "super": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.MultiTemperedMCMCBurnInTests._getlogposts": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.NOT_BURNED_IN_ITER": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pycbc.inference.burn_in.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.inference.burn_in.get_vars_from_arg": {
  "data": {
   "shadows": "pycbc.io.record.get_vars_from_arg"
  },
  "type": "import"
 },
 "pycbc.inference.burn_in.ks_2samp": {
  "data": {
   "shadows": "scipy.stats.ks_2samp"
  },
  "type": "import"
 },
 "pycbc.inference.burn_in.ks_test": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "scipy.stats.ks_2samp": {
     "line number": [
      78
     ]
    },
    "set": {
     "line number": [
      72,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.max_posterior": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      103
     ]
    },
    "bool": {
     "line number": [
      110
     ]
    },
    "int": {
     "line number": [
      109
     ]
    },
    "len": {
     "line number": [
      102
     ]
    },
    "pycbc.inference.burn_in.NOT_BURNED_IN_ITER": {
     "line number": [
      120
     ]
    },
    "pycbc.inference.burn_in.numpy": {
     "line number": [
      109,
      110,
      115
     ]
    },
    "range": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.burn_in.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.burn_in.posterior_step": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      141
     ]
    },
    "pycbc.inference.burn_in.numpy": {
     "line number": [
      143,
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.entropy": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.entropy.check_hist_params": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      43,
      57
     ]
    },
    "isinstance": {
     "line number": [
      42
     ]
    },
    "str": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.entropy.compute_pdf": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      106
     ]
    },
    "len": {
     "line number": [
      97,
      97
     ]
    },
    "pycbc.inference.entropy.check_hist_params": {
     "line number": [
      101
     ]
    },
    "pycbc.inference.entropy.numpy": {
     "line number": [
      103
     ]
    },
    "scipy.stats.gaussian_kde": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.entropy.entropy": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "pycbc.inference.entropy.numpy": {
     "line number": [
      111
     ]
    },
    "scipy.stats.entropy": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.entropy.js": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "pycbc.inference.entropy.compute_pdf": {
     "line number": [
      234
     ]
    },
    "pycbc.inference.entropy.kl": {
     "line number": [
      240
     ]
    },
    "pycbc.inference.entropy.numpy": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.entropy.kl": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      176
     ]
    },
    "pycbc.inference.entropy.compute_pdf": {
     "line number": [
      187
     ]
    },
    "pycbc.inference.entropy.numpy": {
     "line number": [
      133
     ]
    },
    "scipy.stats.entropy": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.entropy.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.entropy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "pycbc.inference.evidence": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.evidence.arithmetic_mean_estimator": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      45
     ]
    },
    "len": {
     "line number": [
      41
     ]
    },
    "pycbc.inference.evidence.numpy": {
     "line number": [
      42,
      46,
      48,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.evidence.harmonic_mean_estimator": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      78
     ]
    },
    "len": {
     "line number": [
      74
     ]
    },
    "pycbc.inference.evidence.numpy": {
     "line number": [
      75,
      79,
      81,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.evidence.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "pycbc.inference.evidence.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.evidence.stepping_stone_algorithm": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "float": {
     "line number": [
      249
     ]
    },
    "len": {
     "line number": [
      223,
      224,
      226,
      227,
      241,
      249
     ]
    },
    "pycbc.inference.evidence.numpy": {
     "line number": [
      216,
      222,
      226,
      230,
      233,
      233,
      233,
      236,
      244,
      245,
      250
     ]
    },
    "range": {
     "line number": [
      227,
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.evidence.thermodynamic_integration": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      126
     ]
    },
    "enumerate": {
     "line number": [
      176,
      180,
      184
     ]
    },
    "float": {
     "line number": [
      189
     ]
    },
    "len": {
     "line number": [
      137,
      138,
      150,
      172,
      177,
      189
     ]
    },
    "pycbc.inference.evidence.numpy": {
     "line number": [
      130,
      136,
      140,
      143,
      153,
      154,
      172,
      181,
      189,
      189
     ]
    },
    "range": {
     "line number": [
      150,
      177
     ]
    },
    "scipy.integrate.simps": {
     "line number": [
      166,
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.gelman_rubin": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.gelman_rubin.gelman_rubin": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      113,
      114,
      122,
      136
     ]
    },
    "pycbc.inference.gelman_rubin.numpy": {
     "line number": [
      96,
      97,
      101,
      106,
      106,
      112,
      115,
      121,
      123,
      124,
      130,
      131,
      135,
      137,
      141,
      145,
      155,
      157,
      159,
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.gelman_rubin.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.gelman_rubin.walk": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      62
     ]
    },
    "len": {
     "line number": [
      56,
      59
     ]
    },
    "pycbc.inference.gelman_rubin.gelman_rubin": {
     "line number": [
      64
     ]
    },
    "pycbc.inference.gelman_rubin.numpy": {
     "line number": [
      51,
      55,
      56,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.geweke": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.geweke.geweke": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "int": {
     "line number": [
      71
     ]
    },
    "pycbc.inference.geweke.numpy": {
     "line number": [
      62,
      77,
      83,
      83,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.geweke.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.io": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.io.FieldArray": {
  "data": {
   "shadows": "pycbc.io.record.FieldArray"
  },
  "type": "import"
 },
 "pycbc.inference.io.NoInputFileError": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.io.ParseLabelArg": {
  "data": {
   "shadows": "pycbc.inference.option_utils.ParseLabelArg"
  },
  "type": "import"
 },
 "pycbc.inference.io.ParseParametersArg": {
  "data": {
   "shadows": "pycbc.inference.option_utils.ParseParametersArg"
  },
  "type": "import"
 },
 "pycbc.inference.io.PrintFileParams": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "pycbc.inference.io.argparse": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.io.PrintFileParams.__call__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      329
     ]
    },
    "KeyError": {
     "line number": [
      342
     ]
    },
    "isinstance": {
     "line number": [
      362
     ]
    },
    "print": {
     "line number": [
      350,
      352,
      356,
      359,
      363,
      365,
      368,
      370,
      371,
      378,
      384
     ]
    },
    "pycbc.inference.io.NoInputFileError": {
     "line number": [
      332
     ]
    },
    "pycbc.inference.io.get_common_parameters": {
     "line number": [
      349
     ]
    },
    "pycbc.inference.io.loadfile": {
     "line number": [
      339
     ]
    },
    "pycbc.inference.io.numpy": {
     "line number": [
      362
     ]
    },
    "pycbc.inference.io.textwrap": {
     "line number": [
      350,
      352,
      356,
      359,
      363,
      365,
      368,
      371,
      375,
      382
     ]
    },
    "pycbc.io.record.FieldArray": {
     "line number": [
      355
     ]
    },
    "pycbc.io.record.FieldArray.functionlib.fget": {
     "line number": [
      355
     ]
    },
    "pycbc.io.record._numpy_function_lib.items": {
     "line number": [
      361
     ]
    },
    "sorted": {
     "line number": [
      352,
      355,
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.PrintFileParams.__init__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      318
     ]
    },
    "pycbc.inference.io.PrintFileParams": {
     "line number": [
      319
     ]
    },
    "super": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.ResultsArgumentParser": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "pycbc.inference.io.argparse": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.io.ResultsArgumentParser.__init__": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "pycbc.inference.io.ResultsArgumentParser": {
     "line number": [
      438
     ]
    },
    "super": {
     "line number": [
      438
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.ResultsArgumentParser._reset_required": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "pycbc.inference.io.ResultsArgumentParser._unset_required": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "pycbc.inference.io.ResultsArgumentParser.actions": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "property": {
     "line number": [
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.ResultsArgumentParser.add_results_option_group": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": {
    "pycbc.inference.io.PrintFileParams": {
     "line number": [
      539
     ]
    },
    "pycbc.inference.option_utils.ParseLabelArg": {
     "line number": [
      532,
      555
     ]
    },
    "pycbc.inference.option_utils.ParseParametersArg": {
     "line number": [
      547
     ]
    },
    "pycbc.waveform.parameters.mchirp.label": {
     "line number": [
      553
     ]
    },
    "str": {
     "line number": [
      531,
      558
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.ResultsArgumentParser.parse_known_args": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "len": {
     "line number": [
      503
     ]
    },
    "list": {
     "line number": [
      505
     ]
    },
    "pycbc.inference.io.ResultsArgumentParser": {
     "line number": [
      479,
      484
     ]
    },
    "pycbc.inference.io.get_common_parameters": {
     "line number": [
      488
     ]
    },
    "pycbc.inference.io.loadfile": {
     "line number": [
      495
     ]
    },
    "set": {
     "line number": [
      500
     ]
    },
    "set.intersection": {
     "line number": [
      504
     ]
    },
    "super": {
     "line number": [
      479,
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io._h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.inference.io._numpy_function_lib": {
  "data": {
   "shadows": "pycbc.io.record._numpy_function_lib"
  },
  "type": "import"
 },
 "pycbc.inference.io._transforms": {
  "data": {
   "shadows": "pycbc.transforms"
  },
  "type": "import"
 },
 "pycbc.inference.io._waveform": {
  "data": {
   "shadows": "pycbc.waveform"
  },
  "type": "import"
 },
 "pycbc.inference.io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.io.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_hdf": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.io.base_hdf.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "abc.ABCMeta": {
     "line number": [
      44
     ]
    },
    "pycbc.inference.io.base_hdf.h5py": {
     "line number": [
      45
     ]
    },
    "six.add_metaclass": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.__getattr__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      70
     ]
    },
    "ValueError": {
     "line number": [
      78
     ]
    },
    "pycbc.inference.io.base_hdf.BaseInferenceFile": {
     "line number": [
      66
     ]
    },
    "super": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile._get_optional_args": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      253,
      255
     ]
    },
    "getattr": {
     "line number": [
      252
     ]
    },
    "staticmethod": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.cmd": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      392
     ]
    },
    "property": {
     "line number": [
      379
     ]
    },
    "pycbc.inference.io.base_hdf.numpy": {
     "line number": [
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.copy": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      726
     ]
    },
    "isinstance": {
     "line number": [
      723,
      733
     ]
    },
    "pycbc.inference.io.base_hdf.h5py": {
     "line number": [
      723
     ]
    },
    "six.string_types": {
     "line number": [
      733
     ]
    },
    "tuple": {
     "line number": [
      744,
      746
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.copy_info": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      647
     ]
    },
    "pycbc.inference.io.base_hdf.BaseInferenceFile": {
     "line number": [
      652
     ]
    },
    "pycbc.inference.io.base_hdf.logging": {
     "line number": [
      643
     ]
    },
    "set": {
     "line number": [
      649,
      650
     ]
    },
    "six.string_types": {
     "line number": [
      647
     ]
    },
    "super": {
     "line number": [
      652
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.copy_metadata": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": {
    "pycbc.inference.io.base_hdf.logging": {
     "line number": [
      626
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.copy_samples": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": {
    "pycbc.inference.io.base_hdf.logging": {
     "line number": [
      674,
      681,
      689
     ]
    },
    "pycbc.io.FieldArray.from_kwargs": {
     "line number": [
      687
     ]
    },
    "set": {
     "line number": [
      678,
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.effective_nsamples": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      304
     ]
    },
    "property": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.extra_args_parser": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.get_slice": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": {
    "int": {
     "line number": [
      603,
      605,
      609,
      613
     ]
    },
    "pycbc.inference.io.base_hdf.numpy": {
     "line number": [
      609
     ]
    },
    "slice": {
     "line number": [
      614
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.log_evidence": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "property": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.parse_parameters": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "pycbc.io.FieldArray": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.read_injections": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": {
    "pycbc.inject.InjectionSet": {
     "line number": [
      556
     ]
    },
    "pycbc.io.FieldArray": {
     "line number": [
      557
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.read_random_state": {
  "data": {
   "lineno": 448
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.read_raw_samples": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.read_samples": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "list": {
     "line number": [
      176,
      177
     ]
    },
    "pycbc.io.FieldArray": {
     "line number": [
      168
     ]
    },
    "setattr": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.samples_from_cli": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.static_params": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "property": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.thin_end": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.thin_interval": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.thin_start": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.write_command_line": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      578
     ]
    },
    "isinstance": {
     "line number": [
      573,
      576
     ]
    },
    "pycbc.inference.io.base_hdf.numpy": {
     "line number": [
      576
     ]
    },
    "pycbc.inference.io.base_hdf.sys": {
     "line number": [
      570
     ]
    },
    "str": {
     "line number": [
      573
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.write_effective_nsamples": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.write_injections": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      545
     ]
    },
    "pycbc.inference.io.base_hdf.BaseInferenceFile": {
     "line number": [
      544
     ]
    },
    "pycbc.inference.io.base_hdf.h5py": {
     "line number": [
      543
     ]
    },
    "pycbc.inference.io.base_hdf.logging": {
     "line number": [
      546
     ]
    },
    "super": {
     "line number": [
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.write_kwargs_to_attrs": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      754
     ]
    },
    "dict": {
     "line number": [
      772
     ]
    },
    "isinstance": {
     "line number": [
      772
     ]
    },
    "list": {
     "line number": [
      773
     ]
    },
    "str": {
     "line number": [
      771
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.write_logevidence": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.write_psd": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.write_random_state": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": {
    "pycbc.inference.io.base_hdf.numpy": {
     "line number": [
      435
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.write_samples": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.write_stilde": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": {
    "float": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.BaseInferenceFile.write_strain": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "float": {
     "line number": [
      490
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_hdf.FieldArray": {
  "data": {
   "shadows": "pycbc.io.FieldArray"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_hdf.InjectionSet": {
  "data": {
   "shadows": "pycbc.inject.InjectionSet"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_hdf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_hdf.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_hdf.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_hdf.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_hdf.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_hdf.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_hdf.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_hdf.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_mcmc": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.io.base_mcmc.MCMCMetadataIO": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "object": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.io.base_mcmc.MCMCMetadataIO.extra_args_parser": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      243
     ]
    },
    "int": {
     "line number": [
      250,
      257,
      263,
      270,
      278
     ]
    },
    "pycbc.inference.io.base_mcmc.argparse": {
     "line number": [
      241
     ]
    },
    "staticmethod": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.MCMCMetadataIO.iterations": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "pycbc.inference.io.base_mcmc.numpy": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.MCMCMetadataIO.last_iteration": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      128
     ]
    },
    "KeyError": {
     "line number": [
      128,
      133
     ]
    },
    "list": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.MCMCMetadataIO.niterations": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "property": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.MCMCMetadataIO.nwalkers": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "property": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.MCMCMetadataIO.read_acls": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.MCMCMetadataIO.thin": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "int": {
     "line number": [
      93,
      94
     ]
    },
    "pycbc.inference.io.base_mcmc.numpy": {
     "line number": [
      93,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.MCMCMetadataIO.thinned_by": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "int": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.MCMCMetadataIO.write_acls": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      175
     ]
    },
    "int": {
     "line number": [
      183
     ]
    },
    "list": {
     "line number": [
      179
     ]
    },
    "pycbc.inference.io.base_mcmc.numpy": {
     "line number": [
      174,
      179,
      182,
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.MCMCMetadataIO.write_burn_in": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.MCMCMetadataIO.write_niterations": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.MCMCMetadataIO.write_resume_point": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      42,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.MCMCMetadataIO.write_sampler_metadata": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.SingleTempMCMCIO": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "object": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.io.base_mcmc.SingleTempMCMCIO.read_raw_samples": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      395
     ]
    },
    "int": {
     "line number": [
      403
     ]
    },
    "isinstance": {
     "line number": [
      391
     ]
    },
    "pycbc.inference.io.base_mcmc.numpy": {
     "line number": [
      395
     ]
    },
    "six.string_types": {
     "line number": [
      391
     ]
    },
    "slice": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.SingleTempMCMCIO.write_samples": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      348
     ]
    },
    "all": {
     "line number": [
      325
     ]
    },
    "list": {
     "line number": [
      324
     ]
    },
    "pycbc.inference.io.base_mcmc.thin_samples_for_writing": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_mcmc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_mcmc.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_mcmc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_mcmc.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_mcmc.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_mcmc.thin_samples_for_writing": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_multitemper": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.io.base_multitemper.MultiTemperedMCMCIO": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "object": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.io.base_multitemper.MultiTemperedMCMCIO.read_raw_samples": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      206
     ]
    },
    "int": {
     "line number": [
      214,
      229
     ]
    },
    "isinstance": {
     "line number": [
      202,
      214
     ]
    },
    "len": {
     "line number": [
      224
     ]
    },
    "pycbc.inference.io.base_multitemper.numpy": {
     "line number": [
      206,
      214,
      214
     ]
    },
    "six.string_types": {
     "line number": [
      202
     ]
    },
    "slice": {
     "line number": [
      210,
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_multitemper.MultiTemperedMCMCIO.write_samples": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      152
     ]
    },
    "all": {
     "line number": [
      128
     ]
    },
    "thin_samples_for_writing": {
     "line number": [
      135
     ]
    },
    "tuple": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_multitemper.MultiTemperedMetadataIO": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "pycbc.inference.io.base_multitemper.MultiTemperedMetadataIO.extra_args_parser": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "pycbc.inference.io.base_multitemper.ParseTempsArg": {
     "line number": [
      94
     ]
    },
    "staticmethod": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_multitemper.MultiTemperedMetadataIO.ntemps": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "property": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_multitemper.MultiTemperedMetadataIO.write_sampler_metadata": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "pycbc.inference.io.base_multitemper.MultiTemperedMetadataIO": {
     "line number": [
      81
     ]
    },
    "super": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_multitemper.ParseTempsArg": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pycbc.inference.io.base_multitemper.argparse": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.io.base_multitemper.ParseTempsArg.__call__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      53,
      61
     ]
    },
    "int": {
     "line number": [
      60
     ]
    },
    "isinstance": {
     "line number": [
      47
     ]
    },
    "len": {
     "line number": [
      52
     ]
    },
    "setattr": {
     "line number": [
      66
     ]
    },
    "six.string_types": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_multitemper.ParseTempsArg.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      43
     ]
    },
    "pycbc.inference.io.base_multitemper.ParseTempsArg": {
     "line number": [
      44
     ]
    },
    "str": {
     "line number": [
      40,
      42
     ]
    },
    "super": {
     "line number": [
      44
     ]
    },
    "type": {
     "line number": [
      42,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_multitemper.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_multitemper.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_multitemper.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_multitemper.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_sampler": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.io.base_sampler.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_sampler.BaseSamplerFile": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "abc.ABCMeta": {
     "line number": [
      27
     ]
    },
    "six.add_metaclass": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.io.base_sampler.BaseSamplerFile.write_resume_point": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_sampler.BaseSamplerFile.write_sampler_metadata": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.base_sampler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_sampler.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pycbc.inference.io.base_sampler.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "pycbc.inference.io.check_integrity": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      165
     ]
    },
    "ValueError": {
     "line number": [
      152
     ]
    },
    "all": {
     "line number": [
      163
     ]
    },
    "len": {
     "line number": [
      159,
      168,
      169
     ]
    },
    "list": {
     "line number": [
      157
     ]
    },
    "pycbc.inference.io.loadfile": {
     "line number": [
      155
     ]
    },
    "pycbc.inference.io.os": {
     "line number": [
      151
     ]
    },
    "tuple": {
     "line number": [
      168,
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.cpnest": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.io.cpnest.CPNestFile": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "pycbc.inference.io.cpnest.CPNestFile.read_raw_samples": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "read_raw_samples_from_file": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.cpnest.CPNestFile.write_niterations": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pycbc.inference.io.cpnest.CPNestFile.write_resume_point": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "pycbc.inference.io.cpnest.CPNestFile.write_sampler_metadata": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pycbc.inference.io.cpnest.CPNestFile.write_samples": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "write_samples_to_file": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.emcee": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.io.emcee.EmceeFile": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "pycbc.inference.io.emcee.EmceeFile.read_acceptance_fraction": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      53,
      55
     ]
    },
    "pycbc.inference.io.emcee.numpy": {
     "line number": [
      53,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.emcee.EmceeFile.write_acceptance_fraction": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.emcee.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.io.emcee_pt": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.io.emcee_pt.EmceePTFile": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "pycbc.inference.io.emcee_pt.EmceePTFile.betas": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "property": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.emcee_pt.EmceePTFile.read_acceptance_fraction": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      65,
      67,
      70,
      72
     ]
    },
    "pycbc.inference.io.emcee_pt.numpy": {
     "line number": [
      65,
      67,
      70,
      72,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.emcee_pt.EmceePTFile.write_acceptance_fraction": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.emcee_pt.EmceePTFile.write_sampler_metadata": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "pycbc.inference.io.emcee_pt.EmceePTFile": {
     "line number": [
      42
     ]
    },
    "super": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.emcee_pt.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.io.emcee_pt.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.io.filetypes": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pycbc.inference.io.get_common_parameters": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      295
     ]
    },
    "list": {
     "line number": [
      293
     ]
    },
    "pycbc.inference.io.loadfile": {
     "line number": [
      286
     ]
    },
    "set": {
     "line number": [
      291
     ]
    },
    "set.intersection": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.get_file_type": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      74
     ]
    },
    "h5py.File": {
     "line number": [
      68
     ]
    },
    "pycbc.inference.io.filetypes": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.injections_from_cli": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      668
     ]
    },
    "pycbc.inference.io.loadfile": {
     "line number": [
      673
     ]
    },
    "str": {
     "line number": [
      668
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.loadfile": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      106,
      108
     ]
    },
    "fileclass": {
     "line number": [
      112
     ]
    },
    "pycbc.inference.io.filetypes": {
     "line number": [
      111
     ]
    },
    "pycbc.inference.io.get_file_type": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.inference.io.multinest": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.io.multinest.MultinestFile": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "pycbc.inference.io.multinest.MultinestFile.niterations": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "property": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.multinest.MultinestFile.read_raw_samples": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "int": {
     "line number": [
      102
     ]
    },
    "isinstance": {
     "line number": [
      95
     ]
    },
    "six.string_types": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.multinest.MultinestFile.write_logevidence": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "all": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.multinest.MultinestFile.write_niterations": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "pycbc.inference.io.multinest.MultinestFile.write_resume_point": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      113,
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.multinest.MultinestFile.write_sampler_metadata": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "pycbc.inference.io.multinest.MultinestFile.write_samples": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      62
     ]
    },
    "all": {
     "line number": [
      49
     ]
    },
    "len": {
     "line number": [
      48,
      49,
      58
     ]
    },
    "tuple": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.multinest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.io.multinest.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "pycbc.inference.io.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.inference.io.posterior": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.io.posterior.PosteriorFile": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "pycbc.inference.io.posterior.PosteriorFile.read_raw_samples": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pycbc.inference.io.posterior.read_raw_samples_from_file": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.posterior.PosteriorFile.write_samples": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "pycbc.inference.io.posterior.write_samples_to_file": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.posterior.read_raw_samples_from_file": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pycbc.inference.io.posterior.write_samples_to_file": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      84
     ]
    },
    "ValueError": {
     "line number": [
      68
     ]
    },
    "all": {
     "line number": [
      70
     ]
    },
    "len": {
     "line number": [
      70,
      80
     ]
    },
    "list": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pycbc.inference.io.results_from_cli": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      610
     ]
    },
    "len": {
     "line number": [
      641
     ]
    },
    "pycbc.inference.io.loadfile": {
     "line number": [
      618
     ]
    },
    "pycbc.inference.io.logging": {
     "line number": [
      615,
      622,
      631
     ]
    },
    "pycbc.transforms.apply_transforms": {
     "line number": [
      634
     ]
    },
    "pycbc.transforms.get_common_cbc_transforms": {
     "line number": [
      625
     ]
    },
    "str": {
     "line number": [
      610
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pycbc.inference.io.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "pycbc.inference.io.txt": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.io.txt.InferenceTXTFile": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "object": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.io.txt.InferenceTXTFile.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.txt.InferenceTXTFile.write": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      47
     ]
    },
    "pycbc.inference.io.txt.numpy": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.io.txt.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.io.validate_checkpoint_files": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      210,
      216
     ]
    },
    "KeyError": {
     "line number": [
      210,
      216,
      226,
      235
     ]
    },
    "ValueError": {
     "line number": [
      210,
      216
     ]
    },
    "pycbc.inference.io.check_integrity": {
     "line number": [
      208,
      214
     ]
    },
    "pycbc.inference.io.loadfile": {
     "line number": [
      221,
      230
     ]
    },
    "pycbc.inference.io.logging": {
     "line number": [
      244,
      248
     ]
    },
    "pycbc.inference.io.shutil": {
     "line number": [
      245,
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.models.CallModel": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "object": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.models.CallModel.__call__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      144
     ]
    },
    "getattr": {
     "line number": [
      146
     ]
    },
    "zip": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.CallModel.__getattr__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.CallModel.__init__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "pycbc.inference.models._call_global_model": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pycbc.inference.models._global_instance": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models._call_global_model_logprior": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "pycbc.inference.models._global_instance": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models._global_instance": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pycbc.inference.models.analytic": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.models.analytic.TestEggbox": {
  "data": {
   "lineno": 88
  },
  "type": "class"
 },
 "pycbc.inference.models.analytic.TestEggbox.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "pycbc.inference.models.analytic.TestEggbox": {
     "line number": [
      111
     ]
    },
    "super": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.analytic.TestEggbox._loglikelihood": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "pycbc.inference.models.analytic.numpy": {
     "line number": [
      116,
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.analytic.TestNormal": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "pycbc.inference.models.analytic.TestNormal.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      78
     ]
    },
    "len": {
     "line number": [
      72,
      74,
      77
     ]
    },
    "pycbc.inference.models.analytic.TestNormal": {
     "line number": [
      69
     ]
    },
    "scipy.stats.multivariate_normal": {
     "line number": [
      75
     ]
    },
    "super": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.analytic.TestNormal._loglikelihood": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "pycbc.inference.models.analytic.TestPrior": {
  "data": {
   "lineno": 194
  },
  "type": "class"
 },
 "pycbc.inference.models.analytic.TestPrior.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "pycbc.inference.models.analytic.TestPrior": {
     "line number": [
      209
     ]
    },
    "super": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.analytic.TestPrior._loglikelihood": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "pycbc.inference.models.analytic.TestRosenbrock": {
  "data": {
   "lineno": 120
  },
  "type": "class"
 },
 "pycbc.inference.models.analytic.TestRosenbrock.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "pycbc.inference.models.analytic.TestRosenbrock": {
     "line number": [
      143
     ]
    },
    "super": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.analytic.TestRosenbrock._loglikelihood": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "len": {
     "line number": [
      150
     ]
    },
    "range": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.analytic.TestVolcano": {
  "data": {
   "lineno": 155
  },
  "type": "class"
 },
 "pycbc.inference.models.analytic.TestVolcano.__init__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      180
     ]
    },
    "len": {
     "line number": [
      179
     ]
    },
    "pycbc.inference.models.analytic.TestVolcano": {
     "line number": [
      176
     ]
    },
    "super": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.analytic.TestVolcano._loglikelihood": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "pycbc.inference.models.analytic.numpy": {
     "line number": [
      187,
      190,
      190,
      190,
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.analytic.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.models.analytic.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "pycbc.inference.models.base": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.models.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pycbc.inference.models.base.BaseModel": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "abc.ABCMeta": {
     "line number": [
      287
     ]
    },
    "object": {
     "line number": [
      288
     ]
    },
    "six.add_metaclass": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.models.base.BaseModel.__init__": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      366,
      368
     ]
    },
    "pycbc.inference.models.base.ModelStats": {
     "line number": [
      387
     ]
    },
    "pycbc.inference.models.base._NoPrior": {
     "line number": [
      376
     ]
    },
    "six.string_types": {
     "line number": [
      366
     ]
    },
    "tuple": {
     "line number": [
      368,
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel._extra_stats": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "property": {
     "line number": [
      435
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel._init_args_from_config": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      741
     ]
    },
    "any": {
     "line number": [
      761
     ]
    },
    "classmethod": {
     "line number": [
      712
     ]
    },
    "cls.name": {
     "line number": [
      740,
      742
     ]
    },
    "cls.prior_from_config": {
     "line number": [
      748
     ]
    },
    "pycbc.distributions.read_params_from_config": {
     "line number": [
      744
     ]
    },
    "pycbc.inference.models.base.SamplingTransforms": {
     "line number": [
      755
     ]
    },
    "pycbc.inference.models.base.logging": {
     "line number": [
      762
     ]
    },
    "pycbc.transforms.read_transforms_from_config": {
     "line number": [
      764
     ]
    },
    "six.moves.configparser.NoSectionError": {
     "line number": [
      757
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel._logjacobian": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel._loglikelihood": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel._logprior": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": {
    "pycbc.inference.models.base.numpy": {
     "line number": [
      564,
      565
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel._transform_params": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": {
    "pycbc.transforms.apply_transforms": {
     "line number": [
      633
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel._trytoget": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      506
     ]
    },
    "fallback": {
     "line number": [
      507
     ]
    },
    "getattr": {
     "line number": [
      505
     ]
    },
    "setattr": {
     "line number": [
      508
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.current_params": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      426
     ]
    },
    "property": {
     "line number": [
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.current_stats": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "property": {
     "line number": [
      467
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.default_stats": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "property": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.extra_args_from_config": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      678
     ]
    },
    "staticmethod": {
     "line number": [
      643
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.from_config": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      768
     ]
    },
    "cls": {
     "line number": [
      785
     ]
    },
    "cls._init_args_from_config": {
     "line number": [
      780
     ]
    },
    "cls.extra_args_from_config": {
     "line number": [
      782
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.get_current_stats": {
  "data": {
   "lineno": 444
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.logjacobian": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": {
    "property": {
     "line number": [
      527
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.loglikelihood": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": {
    "property": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.logposterior": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": {
    "property": {
     "line number": [
      568
     ]
    },
    "pycbc.inference.models.base.numpy": {
     "line number": [
      577
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.logprior": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": {
    "property": {
     "line number": [
      555
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.prior_from_config": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": {
    "pycbc.distributions.JointDistribution": {
     "line number": [
      709
     ]
    },
    "pycbc.distributions.read_constraints_from_config": {
     "line number": [
      707
     ]
    },
    "pycbc.distributions.read_distributions_from_config": {
     "line number": [
      706
     ]
    },
    "pycbc.inference.models.base.logging": {
     "line number": [
      705
     ]
    },
    "staticmethod": {
     "line number": [
      683
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.prior_rvs": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": {
    "pycbc.io.FieldArray.from_arrays": {
     "line number": [
      609
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.sampling_params": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "property": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.static_params": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "property": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.update": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "pycbc.inference.models.base.ModelStats": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.variable_params": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "property": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.BaseModel.write_metadata": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": {
    "list": {
     "line number": [
      796,
      797
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.FieldArray": {
  "data": {
   "shadows": "pycbc.io.FieldArray"
  },
  "type": "import"
 },
 "pycbc.inference.models.base.ModelStats": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "object": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.models.base.ModelStats.getstats": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      84
     ]
    },
    "pycbc.inference.models.base.numpy": {
     "line number": [
      65
     ]
    },
    "tuple": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.ModelStats.getstatsdict": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      105
     ]
    },
    "pycbc.inference.models.base.numpy": {
     "line number": [
      86
     ]
    },
    "zip": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.ModelStats.statnames": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "list": {
     "line number": [
      63
     ]
    },
    "property": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.NoSectionError": {
  "data": {
   "shadows": "six.moves.configparser.NoSectionError"
  },
  "type": "import"
 },
 "pycbc.inference.models.base.SamplingTransforms": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "object": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.models.base.SamplingTransforms.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "len": {
     "line number": [
      115,
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.SamplingTransforms.apply": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "pycbc.transforms.apply_transforms": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.SamplingTransforms.from_config": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      185
     ]
    },
    "cls": {
     "line number": [
      221
     ]
    },
    "pycbc.inference.models.base.logging": {
     "line number": [
      214,
      219
     ]
    },
    "pycbc.inference.models.base.read_sampling_params_from_config": {
     "line number": [
      212
     ]
    },
    "pycbc.transforms.read_transforms_from_config": {
     "line number": [
      217
     ]
    },
    "six.moves.configparser.NoSectionError": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.SamplingTransforms.logjacobian": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      163
     ]
    },
    "pycbc.inference.models.base.numpy": {
     "line number": [
      163
     ]
    },
    "pycbc.transforms.compute_jacobian": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base._NoPrior": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "object": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.models.base._NoPrior.__call__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "pycbc.inference.models.base._NoPrior.apply_boundary_conditions": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pycbc.inference.models.base.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "pycbc.inference.models.base.distributions": {
  "data": {
   "shadows": "pycbc.distributions"
  },
  "type": "import"
 },
 "pycbc.inference.models.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.inference.models.base.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.models.base.read_sampling_params_from_config": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "list": {
     "line number": [
      275,
      275
     ]
    },
    "map": {
     "line number": [
      273,
      274
     ]
    },
    "set": {
     "line number": [
      269,
      270,
      273,
      274
     ]
    },
    "str.strip": {
     "line number": [
      273,
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "pycbc.inference.models.base.transforms": {
  "data": {
   "shadows": "pycbc.transforms"
  },
  "type": "import"
 },
 "pycbc.inference.models.base_data": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.models.base_data.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pycbc.inference.models.base_data.BaseDataModel": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "abc.ABCMeta": {
     "line number": [
      36
     ]
    },
    "six.add_metaclass": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.models.base_data.BaseDataModel.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "pycbc.inference.models.base_data.BaseDataModel": {
     "line number": [
      83
     ]
    },
    "super": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base_data.BaseDataModel._extra_stats": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "property": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base_data.BaseDataModel._loglr": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base_data.BaseDataModel._lognl": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base_data.BaseDataModel.data": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "pycbc.inference.models.base_data.BaseDataModel.detectors": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "list": {
     "line number": [
      148
     ]
    },
    "property": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base_data.BaseDataModel.loglr": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "property": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base_data.BaseDataModel.lognl": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "property": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base_data.BaseDataModel.logplr": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "property": {
     "line number": [
      130
     ]
    },
    "pycbc.inference.models.base_data.numpy": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base_data.BaseDataModel.write_metadata": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "pycbc.inference.models.base_data.BaseDataModel": {
     "line number": [
      158
     ]
    },
    "super": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.base_data.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pycbc.inference.models.base_data.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "pycbc.inference.models.base_data.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.models.gaussian_noise": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.models.gaussian_noise.Array": {
  "data": {
   "shadows": "pycbc.types.Array"
  },
  "type": "import"
 },
 "pycbc.inference.models.gaussian_noise.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise.__init__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      228
     ]
    },
    "ValueError": {
     "line number": [
      253,
      255
     ]
    },
    "all": {
     "line number": [
      252,
      254
     ]
    },
    "int": {
     "line number": [
      257
     ]
    },
    "list": {
     "line number": [
      245,
      245
     ]
    },
    "pycbc.filter.get_cutoff_indices": {
     "line number": [
      268
     ]
    },
    "pycbc.inference.models.gaussian_noise.GaussianNoise": {
     "line number": [
      223
     ]
    },
    "pycbc.inference.models.gaussian_noise.create_waveform_generator": {
     "line number": [
      246
     ]
    },
    "pycbc.inference.models.gaussian_noise.numpy": {
     "line number": [
      250,
      251
     ]
    },
    "set": {
     "line number": [
      227,
      227,
      244
     ]
    },
    "set.union": {
     "line number": [
      241
     ]
    },
    "super": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise._extra_stats": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "property": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise._loglikelihood": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise._loglr": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "float": {
     "line number": [
      472
     ]
    },
    "len": {
     "line number": [
      450
     ]
    },
    "min": {
     "line number": [
      450
     ]
    },
    "pycbc.waveform.NoWaveformError": {
     "line number": [
      445
     ]
    },
    "setattr": {
     "line number": [
      465,
      466
     ]
    },
    "slice": {
     "line number": [
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise._lognl": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise._nowaveform_loglr": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "pycbc.inference.models.gaussian_noise.numpy": {
     "line number": [
      419,
      421,
      424
     ]
    },
    "setattr": {
     "line number": [
      419,
      420,
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise.det_cplx_loglr": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      540
     ]
    },
    "getattr": {
     "line number": [
      539,
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise.det_lognl": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise.det_lognorm": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      391
     ]
    },
    "float": {
     "line number": [
      397
     ]
    },
    "pycbc.inference.models.gaussian_noise.numpy": {
     "line number": [
      397,
      397,
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise.det_optimal_snrsq": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      562
     ]
    },
    "getattr": {
     "line number": [
      561,
      566
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise.from_config": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": {
    "any": {
     "line number": [
      618
     ]
    },
    "classmethod": {
     "line number": [
      600
     ]
    },
    "cls": {
     "line number": [
      624
     ]
    },
    "pycbc.inference.models.gaussian_noise.high_frequency_cutoff_from_config": {
     "line number": [
      614
     ]
    },
    "pycbc.inference.models.gaussian_noise.low_frequency_cutoff_from_config": {
     "line number": [
      613
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise.high_frequency_cutoff": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise.lognorm": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "property": {
     "line number": [
      402
     ]
    },
    "sum": {
     "line number": [
      405
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise.low_frequency_cutoff": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      306
     ]
    },
    "any": {
     "line number": [
      305
     ]
    },
    "list": {
     "line number": [
      307
     ]
    },
    "set": {
     "line number": [
      304,
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise.psds": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      358,
      360,
      362
     ]
    },
    "int": {
     "line number": [
      371
     ]
    },
    "len": {
     "line number": [
      378
     ]
    },
    "pycbc.inference.models.gaussian_noise.numpy": {
     "line number": [
      371,
      378,
      382
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      378
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise.waveform_generator": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "property": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.GaussianNoise.write_metadata": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      583
     ]
    },
    "pycbc.inference.models.gaussian_noise.GaussianNoise": {
     "line number": [
      578
     ]
    },
    "super": {
     "line number": [
      578
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.NoWaveformError": {
  "data": {
   "shadows": "pycbc.waveform.NoWaveformError"
  },
  "type": "import"
 },
 "pycbc.inference.models.gaussian_noise.create_waveform_generator": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      665
     ]
    },
    "ValueError": {
     "line number": [
      666,
      679
     ]
    },
    "all": {
     "line number": [
      677
     ]
    },
    "list": {
     "line number": [
      683
     ]
    },
    "pycbc.waveform.generator.FDomainDetFrameGenerator": {
     "line number": [
      681
     ]
    },
    "pycbc.waveform.generator.select_waveform_generator": {
     "line number": [
      667
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.generator": {
  "data": {
   "shadows": "pycbc.waveform.generator"
  },
  "type": "import"
 },
 "pycbc.inference.models.gaussian_noise.high_frequency_cutoff_from_config": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      750
     ]
    },
    "float": {
     "line number": [
      749
     ]
    },
    "pycbc.inference.models.gaussian_noise.logging": {
     "line number": [
      751
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.inference.models.gaussian_noise.low_frequency_cutoff_from_config": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      717
     ]
    },
    "float": {
     "line number": [
      716
     ]
    },
    "pycbc.inference.models.gaussian_noise.logging": {
     "line number": [
      718
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.gaussian_noise.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.models.gaussian_noise.pyfilter": {
  "data": {
   "shadows": "pycbc.filter"
  },
  "type": "import"
 },
 "pycbc.inference.models.marginalized_gaussian_noise": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise": {
  "data": {
   "lineno": 165
  },
  "type": "class"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise.__init__": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      388,
      395
     ]
    },
    "dict": {
     "line number": [
      399
     ]
    },
    "int": {
     "line number": [
      385,
      385,
      386
     ]
    },
    "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise": {
     "line number": [
      365
     ]
    },
    "super": {
     "line number": [
      365
     ]
    },
    "zip": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise._extra_stats": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "property": {
     "line number": [
      403
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise._loglr": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      633
     ]
    },
    "len": {
     "line number": [
      612
     ]
    },
    "min": {
     "line number": [
      612
     ]
    },
    "pycbc.waveform.NoWaveformError": {
     "line number": [
      606
     ]
    },
    "setattr": {
     "line number": [
      630,
      631
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise._margdist_loglr": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": {
    "scipy.special.logsumexp": {
     "line number": [
      572
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise._margdistphase_loglr": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": {
    "pycbc.inference.models.marginalized_gaussian_noise.numpy": {
     "line number": [
      561
     ]
    },
    "scipy.special.i0": {
     "line number": [
      561
     ]
    },
    "scipy.special.logsumexp": {
     "line number": [
      564
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise._margphase_loglr": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": {
    "pycbc.inference.models.marginalized_gaussian_noise.numpy": {
     "line number": [
      584
     ]
    },
    "scipy.special.i0": {
     "line number": [
      584
     ]
    },
    "staticmethod": {
     "line number": [
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise._margtime_loglr": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": {
    "scipy.special.logsumexp": {
     "line number": [
      578
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise._margtime_mfsnr": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": {
    "pycbc.filter.matchedfilter.matched_filter_core": {
     "line number": [
      518
     ]
    },
    "staticmethod": {
     "line number": [
      513
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise._margtimedist_loglr": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "scipy.special.logsumexp": {
     "line number": [
      545,
      548
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise._margtimephase_loglr": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": {
    "pycbc.inference.models.marginalized_gaussian_noise.numpy": {
     "line number": [
      554
     ]
    },
    "scipy.special.i0": {
     "line number": [
      554
     ]
    },
    "scipy.special.logsumexp": {
     "line number": [
      554
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise._margtimephasedist_loglr": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": {
    "pycbc.inference.models.marginalized_gaussian_noise.numpy": {
     "line number": [
      534
     ]
    },
    "scipy.special.i0": {
     "line number": [
      534
     ]
    },
    "scipy.special.logsumexp": {
     "line number": [
      534,
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise._mfsnr": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise._setup_prior": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      487
     ]
    },
    "ValueError": {
     "line number": [
      482
     ]
    },
    "len": {
     "line number": [
      481,
      485,
      486
     ]
    },
    "pycbc.inference.models.marginalized_gaussian_noise.numpy": {
     "line number": [
      491,
      494,
      499,
      501,
      506,
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedGaussianNoise.from_config": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      443
     ]
    },
    "KeyError": {
     "line number": [
      459,
      464
     ]
    },
    "ValueError": {
     "line number": [
      450,
      465
     ]
    },
    "classmethod": {
     "line number": [
      411
     ]
    },
    "cls": {
     "line number": [
      475
     ]
    },
    "len": {
     "line number": [
      442,
      449,
      449
     ]
    },
    "pycbc.distributions.read_distributions_from_config": {
     "line number": [
      441
     ]
    },
    "pycbc.waveform.generator.FDomainDetFrameGenerator": {
     "line number": [
      467
     ]
    },
    "pycbc.waveform.generator.select_waveform_generator": {
     "line number": [
      466
     ]
    },
    "tuple": {
     "line number": [
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedPhaseGaussianNoise": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedPhaseGaussianNoise._extra_stats": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "property": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.MarginalizedPhaseGaussianNoise._loglr": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      160
     ]
    },
    "len": {
     "line number": [
      141
     ]
    },
    "min": {
     "line number": [
      141
     ]
    },
    "pycbc.inference.models.marginalized_gaussian_noise.numpy": {
     "line number": [
      161,
      162
     ]
    },
    "pycbc.waveform.NoWaveformError": {
     "line number": [
      135
     ]
    },
    "scipy.special.i0e": {
     "line number": [
      162
     ]
    },
    "setattr": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.NoWaveformError": {
  "data": {
   "shadows": "pycbc.waveform.NoWaveformError"
  },
  "type": "import"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.generator": {
  "data": {
   "shadows": "pycbc.waveform.generator"
  },
  "type": "import"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.matched_filter_core": {
  "data": {
   "shadows": "pycbc.filter.matchedfilter.matched_filter_core"
  },
  "type": "import"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.read_distributions_from_config": {
  "data": {
   "shadows": "pycbc.distributions.read_distributions_from_config"
  },
  "type": "import"
 },
 "pycbc.inference.models.marginalized_gaussian_noise.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "pycbc.inference.models.models": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "pycbc.inference.models.read_from_config": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "pycbc.inference.models.single_template": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.models.single_template.Detector": {
  "data": {
   "shadows": "pycbc.detector.Detector"
  },
  "type": "import"
 },
 "pycbc.inference.models.single_template.SingleTemplate": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "pycbc.inference.models.single_template.SingleTemplate.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "float": {
     "line number": [
      50,
      53
     ]
    },
    "int": {
     "line number": [
      69
     ]
    },
    "len": {
     "line number": [
      66
     ]
    },
    "pycbc.detector.Detector": {
     "line number": [
      79
     ]
    },
    "pycbc.filter.matched_filter_core": {
     "line number": [
      80
     ]
    },
    "pycbc.filter.sigmasq": {
     "line number": [
      87
     ]
    },
    "pycbc.inference.models.single_template.SingleTemplate": {
     "line number": [
      47
     ]
    },
    "pycbc.waveform.get_fd_waveform": {
     "line number": [
      63
     ]
    },
    "super": {
     "line number": [
      47
     ]
    },
    "tuple": {
     "line number": [
      56,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.single_template.SingleTemplate._loglikelihood": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "pycbc.inference.models.single_template.SingleTemplate._loglr": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      128,
      130,
      131
     ]
    },
    "float": {
     "line number": [
      133
     ]
    },
    "pycbc.inference.models.single_template.numpy": {
     "line number": [
      122,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.models.single_template.SingleTemplate._lognl": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "pycbc.inference.models.single_template.get_fd_waveform": {
  "data": {
   "shadows": "pycbc.waveform.get_fd_waveform"
  },
  "type": "import"
 },
 "pycbc.inference.models.single_template.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.models.single_template.pyfilter": {
  "data": {
   "shadows": "pycbc.filter"
  },
  "type": "import"
 },
 "pycbc.inference.models.single_template.scipy.special": {
  "data": {
   "shadows": "scipy.special"
  },
  "type": "import"
 },
 "pycbc.inference.option_utils": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.option_utils.MultiDetOptionAction": {
  "data": {
   "shadows": "pycbc.types.MultiDetOptionAction"
  },
  "type": "import"
 },
 "pycbc.inference.option_utils.ParseLabelArg": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "pycbc.inference.option_utils.argparse": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.option_utils.ParseLabelArg.__call__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      165
     ]
    },
    "len": {
     "line number": [
      172
     ]
    },
    "setattr": {
     "line number": [
      181,
      182
     ]
    },
    "six.string_types": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.option_utils.ParseLabelArg.__init__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      158,
      160
     ]
    },
    "pycbc.inference.option_utils.ParseLabelArg": {
     "line number": [
      161
     ]
    },
    "str": {
     "line number": [
      154,
      157
     ]
    },
    "super": {
     "line number": [
      161
     ]
    },
    "type": {
     "line number": [
      157,
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.option_utils.ParseParametersArg": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "pycbc.inference.option_utils.ParseLabelArg": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.option_utils.ParseParametersArg.__call__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      237
     ]
    },
    "getattr": {
     "line number": [
      232,
      235
     ]
    },
    "pycbc.inference.option_utils.ParseParametersArg": {
     "line number": [
      229
     ]
    },
    "pycbc.waveform.parameters": {
     "line number": [
      235
     ]
    },
    "super": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.option_utils.add_density_option_group": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "str": {
     "line number": [
      407,
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.option_utils.add_low_frequency_cutoff_opt": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "float": {
     "line number": [
      43
     ]
    },
    "pycbc.types.MultiDetOptionAction": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.option_utils.add_plot_posterior_option_group": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "float": {
     "line number": [
      255,
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.option_utils.add_scatter_option_group": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "float": {
     "line number": [
      385,
      387
     ]
    },
    "pycbc.inference.option_utils.ParseParametersArg": {
     "line number": [
      381
     ]
    },
    "str": {
     "line number": [
      381,
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.option_utils.apply_gates_to_fd": {
  "data": {
   "shadows": "pycbc.strain.apply_gates_to_fd"
  },
  "type": "import"
 },
 "pycbc.inference.option_utils.apply_gates_to_td": {
  "data": {
   "shadows": "pycbc.strain.apply_gates_to_td"
  },
  "type": "import"
 },
 "pycbc.inference.option_utils.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "pycbc.inference.option_utils.data_from_cli": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      97
     ]
    },
    "len": {
     "line number": [
      108
     ]
    },
    "pycbc.inference.option_utils.logging": {
     "line number": [
      84,
      93,
      118
     ]
    },
    "pycbc.psd.from_cli_multi_ifos": {
     "line number": [
      112
     ]
    },
    "pycbc.strain.apply_gates_to_fd": {
     "line number": [
      122
     ]
    },
    "pycbc.strain.apply_gates_to_td": {
     "line number": [
      79,
      94
     ]
    },
    "pycbc.strain.from_cli_multi_ifos": {
     "line number": [
      75,
      89
     ]
    },
    "pycbc.strain.gates_from_cli": {
     "line number": [
      70
     ]
    },
    "pycbc.strain.psd_gates_from_cli": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.option_utils.distributions": {
  "data": {
   "shadows": "pycbc.distributions"
  },
  "type": "import"
 },
 "pycbc.inference.option_utils.expected_parameters_from_cli": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      363
     ]
    },
    "float": {
     "line number": [
      365
     ]
    },
    "len": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.option_utils.gates_from_cli": {
  "data": {
   "shadows": "pycbc.strain.gates_from_cli"
  },
  "type": "import"
 },
 "pycbc.inference.option_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.inference.option_utils.plot_ranges_from_cli": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      332,
      338
     ]
    },
    "float": {
     "line number": [
      333,
      339
     ]
    },
    "len": {
     "line number": [
      331,
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.option_utils.prior_from_config": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "pycbc.distributions.JointDistribution": {
     "line number": [
      448
     ]
    },
    "pycbc.distributions.read_constraints_from_config": {
     "line number": [
      443
     ]
    },
    "pycbc.distributions.read_distributions_from_config": {
     "line number": [
      446
     ]
    },
    "pycbc.distributions.read_params_from_config": {
     "line number": [
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.option_utils.psd_from_cli_multi_ifos": {
  "data": {
   "shadows": "pycbc.psd.from_cli_multi_ifos"
  },
  "type": "import"
 },
 "pycbc.inference.option_utils.psd_gates_from_cli": {
  "data": {
   "shadows": "pycbc.strain.psd_gates_from_cli"
  },
  "type": "import"
 },
 "pycbc.inference.option_utils.strain_from_cli_multi_ifos": {
  "data": {
   "shadows": "pycbc.strain.from_cli_multi_ifos"
  },
  "type": "import"
 },
 "pycbc.inference.option_utils.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "pycbc.inference.option_utils.waveform": {
  "data": {
   "shadows": "pycbc.waveform"
  },
  "type": "import"
 },
 "pycbc.inference.sampler": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      37
     ]
    },
    "pycbc.inference.sampler.samplers": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.inference.sampler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.sampler.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base.BaseSampler": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "abc.ABCMeta": {
     "line number": [
      49
     ]
    },
    "object": {
     "line number": [
      50
     ]
    },
    "six.add_metaclass": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.sampler.base.BaseSampler.__init__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.BaseSampler.checkpoint": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.BaseSampler.finalize": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.BaseSampler.from_config": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.BaseSampler.io": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "abc.abstractproperty": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.BaseSampler.model_stats": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "abc.abstractproperty": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.BaseSampler.run": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.BaseSampler.samples": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "abc.abstractproperty": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.BaseSampler.sampling_params": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "property": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.BaseSampler.set_initial_conditions": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.BaseSampler.setup_output": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "pycbc.inference.io.validate_checkpoint_files": {
     "line number": [
      174
     ]
    },
    "pycbc.inference.sampler.base.create_new_output_file": {
     "line number": [
      181
     ]
    },
    "pycbc.inference.sampler.base.logging": {
     "line number": [
      173,
      180
     ]
    },
    "pycbc.inference.sampler.base.shutil": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.BaseSampler.static_params": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "property": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.BaseSampler.variable_params": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "property": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base.create_new_output_file": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      231
     ]
    },
    "pycbc.inference.sampler.base.logging": {
     "line number": [
      233,
      242
     ]
    },
    "pycbc.inference.sampler.base.os": {
     "line number": [
      227,
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.distributions": {
  "data": {
   "shadows": "pycbc.distributions"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base.initial_dist_from_config": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "len": {
     "line number": [
      266
     ]
    },
    "pycbc.distributions.JointDistribution": {
     "line number": [
      273
     ]
    },
    "pycbc.distributions.read_constraints_from_config": {
     "line number": [
      271
     ]
    },
    "pycbc.distributions.read_distributions_from_config": {
     "line number": [
      269
     ]
    },
    "pycbc.inference.sampler.base.logging": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base.validate_checkpoint_files": {
  "data": {
   "shadows": "pycbc.inference.io.validate_checkpoint_files"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_mcmc": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.sampler.base_mcmc.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "abc.ABCMeta": {
     "line number": [
      159
     ]
    },
    "object": {
     "line number": [
      160
     ]
    },
    "six.add_metaclass": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.acls": {
  "data": {
   "lineno": 730
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.acts": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": {
    "property": {
     "line number": [
      735
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.base_shape": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "abc.abstractproperty": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.burn_in": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "property": {
     "line number": [
      508
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.checkpoint": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      611
     ]
    },
    "exec": {
     "line number": [
      617
     ]
    },
    "int": {
     "line number": [
      565,
      587
     ]
    },
    "pycbc.inference.io.validate_checkpoint_files": {
     "line number": [
      608
     ]
    },
    "pycbc.inference.sampler.base_mcmc.logging": {
     "line number": [
      564,
      568,
      576,
      581,
      584,
      586,
      593,
      596,
      607,
      614,
      619
     ]
    },
    "pycbc.inference.sampler.base_mcmc.numpy": {
     "line number": [
      596
     ]
    },
    "str": {
     "line number": [
      596
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.checkpoint_from_config": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": {
    "int": {
     "line number": [
      641
     ]
    },
    "pycbc.inference.sampler.base_mcmc.get_optional_arg_from_config": {
     "line number": [
      640
     ]
    },
    "staticmethod": {
     "line number": [
      622
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.checkpoint_interval": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "property": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.checkpoint_signal": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "property": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.ckpt_signal_from_config": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": {
    "pycbc.inference.sampler.base_mcmc.get_optional_arg_from_config": {
     "line number": [
      661
     ]
    },
    "staticmethod": {
     "line number": [
      643
     ]
    },
    "str": {
     "line number": [
      662
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.clear_samples": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.compute_acf": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      748
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.compute_acl": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      754
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.effective_nsamples": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      523
     ]
    },
    "TypeError": {
     "line number": [
      523
     ]
    },
    "int": {
     "line number": [
      526,
      528
     ]
    },
    "list": {
     "line number": [
      522
     ]
    },
    "max": {
     "line number": [
      526,
      531
     ]
    },
    "property": {
     "line number": [
      517
     ]
    },
    "pycbc.inference.sampler.base_mcmc.numpy": {
     "line number": [
      522,
      524
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.get_thin_interval": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "max": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.max_samples_per_chain": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      304,
      312
     ]
    },
    "int": {
     "line number": [
      302,
      309
     ]
    },
    "pycbc.inference.sampler.base_mcmc.numpy": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.niterations": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "property": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.nwalkers": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      240
     ]
    },
    "property": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.p0": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      382
     ]
    },
    "enumerate": {
     "line number": [
      385
     ]
    },
    "property": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.pos": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      371
     ]
    },
    "property": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.run": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      454,
      477
     ]
    },
    "pycbc.inference.sampler.base_mcmc.logging": {
     "line number": [
      492,
      503
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.run_mcmc": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      536
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_burn_in": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_burn_in_from_config": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": {
    "pycbc.workflow.ConfigParser.Error": {
     "line number": [
      695
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_initial_conditions": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_p0": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      427
     ]
    },
    "len": {
     "line number": [
      425
     ]
    },
    "list": {
     "line number": [
      426
     ]
    },
    "pycbc.inference.sampler.base_mcmc.numpy": {
     "line number": [
      421,
      426
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_state_from_file": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_target": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      345,
      348
     ]
    },
    "int": {
     "line number": [
      350,
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_target_from_config": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": {
    "int": {
     "line number": [
      678,
      682
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.set_thin_interval_from_config": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      715,
      720
     ]
    },
    "int": {
     "line number": [
      703,
      708
     ]
    },
    "pycbc.inference.sampler.base_mcmc.logging": {
     "line number": [
      704,
      709
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.target_eff_nsamples": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "property": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.target_niterations": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "property": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.thin_interval": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.thin_safety_factor": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "property": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.BaseMCMC.write_results": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      541
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.ConfigParser": {
  "data": {
   "shadows": "pycbc.workflow.ConfigParser"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_mcmc.MCMCAutocorrSupport": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": {
    "object": {
     "line number": [
      761
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.sampler.base_mcmc.MCMCAutocorrSupport.compute_acf": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      765
     ]
    },
    "isinstance": {
     "line number": [
      806
     ]
    },
    "pycbc.filter.autocorrelation.calculate_acf": {
     "line number": [
      826
     ]
    },
    "pycbc.inference.sampler.base_mcmc.numpy": {
     "line number": [
      812,
      819
     ]
    },
    "six.string_types": {
     "line number": [
      806
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.MCMCAutocorrSupport.compute_acl": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      830
     ]
    },
    "pycbc.filter.autocorrelation.calculate_acl": {
     "line number": [
      873
     ]
    },
    "pycbc.inference.sampler.base_mcmc.numpy": {
     "line number": [
      871,
      875
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_mcmc.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_mcmc.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_mcmc.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_mcmc.autocorrelation": {
  "data": {
   "shadows": "pycbc.filter.autocorrelation"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_mcmc.blob_data_to_dict": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "len": {
     "line number": [
      111,
      111
     ]
    },
    "list": {
     "line number": [
      115
     ]
    },
    "pycbc.inference.sampler.base_mcmc.numpy": {
     "line number": [
      115
     ]
    },
    "type": {
     "line number": [
      110
     ]
    },
    "zip": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_mcmc.get_optional_arg_from_config": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "dtype": {
     "line number": [
      144
     ]
    },
    "str": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_mcmc.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_mcmc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_mcmc.raw_samples_to_dict": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_mcmc.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_mcmc.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_mcmc.validate_checkpoint_files": {
  "data": {
   "shadows": "pycbc.inference.io.validate_checkpoint_files"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_multitemper": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.sampler.base_multitemper.MultiTemperedAutocorrSupport": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "object": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.sampler.base_multitemper.MultiTemperedAutocorrSupport.compute_acf": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      50
     ]
    },
    "int": {
     "line number": [
      101
     ]
    },
    "isinstance": {
     "line number": [
      99,
      101
     ]
    },
    "pycbc.filter.autocorrelation.calculate_acf": {
     "line number": [
      135
     ]
    },
    "pycbc.inference.sampler.base_multitemper.numpy": {
     "line number": [
      104,
      113,
      126,
      139
     ]
    },
    "six.string_types": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_multitemper.MultiTemperedAutocorrSupport.compute_acl": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      142
     ]
    },
    "pycbc.filter.autocorrelation.calculate_acl": {
     "line number": [
      189
     ]
    },
    "pycbc.inference.sampler.base_multitemper.numpy": {
     "line number": [
      176,
      178,
      187,
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_multitemper.MultiTemperedSupport": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "object": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.sampler.base_multitemper.MultiTemperedSupport.ntemps": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "property": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.base_multitemper.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_multitemper.autocorrelation": {
  "data": {
   "shadows": "pycbc.filter.autocorrelation"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_multitemper.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.base_multitemper.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.cpnest": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.sampler.cpnest.CPNestFile": {
  "data": {
   "shadows": "pycbc.inference.io.CPNestFile"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "pycbc.inference.io.CPNestFile": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "pycbc.inference.sampler.cpnest.CPnestModel": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.checkpoint": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.dlogz": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "property": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.finalize": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      135
     ]
    },
    "pycbc.inference.io.validate_checkpoint_files": {
     "line number": [
      132
     ]
    },
    "pycbc.inference.sampler.cpnest.logging": {
     "line number": [
      124,
      128,
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.from_config": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      100
     ]
    },
    "cls": {
     "line number": [
      114
     ]
    },
    "int": {
     "line number": [
      110,
      111,
      112,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.io": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "property": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.logz": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "property": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.model_stats": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "property": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.nested_samples": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "property": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.niterations": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "len": {
     "line number": [
      98
     ]
    },
    "property": {
     "line number": [
      96
     ]
    },
    "tuple": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.posterior_samples": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "property": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.run": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "pycbc.inference.sampler.cpnest.cpnest": {
     "line number": [
      85
     ]
    },
    "pycbc.inference.sampler.cpnest.os": {
     "line number": [
      83,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.samples": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "property": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.set_initial_conditions": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPNestSampler.write_results": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPnestModel": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "cpnest.model.Model": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.sampler.cpnest.CPnestModel.__init__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      204
     ]
    },
    "list": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.CPnestModel.log_likelihood": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "pycbc.inference.sampler.cpnest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.cpnest.cpm": {
  "data": {
   "shadows": "cpnest.model"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.cpnest.cpnest": {
  "data": {
   "shadows": "cpnest"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.cpnest.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.cpnest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.cpnest.validate_checkpoint_files": {
  "data": {
   "shadows": "pycbc.inference.io.validate_checkpoint_files"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.emcee": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.sampler.emcee.EmceeEnsembleSampler": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "pycbc.inference.io.EmceeFile": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "len": {
     "line number": [
      91
     ]
    },
    "pycbc.inference.sampler.emcee.emcee": {
     "line number": [
      92
     ]
    },
    "pycbc.inference.sampler.emcee.numpy": {
     "line number": [
      96
     ]
    },
    "pycbc.pool.choose_pool": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.base_shape": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "property": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.clear_samples": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.finalize": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.from_config": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      193
     ]
    },
    "cls": {
     "line number": [
      207
     ]
    },
    "get_optional_arg_from_config": {
     "line number": [
      206
     ]
    },
    "int": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.io": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "property": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.model_stats": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "blob_data_to_dict": {
     "line number": [
      128
     ]
    },
    "property": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.run_mcmc": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.samples": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "property": {
     "line number": [
      109
     ]
    },
    "raw_samples_to_dict": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.set_state_from_file": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "pycbc.inference.sampler.emcee.numpy": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee.EmceeEnsembleSampler.write_results": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee.EmceeFile": {
  "data": {
   "shadows": "pycbc.inference.io.EmceeFile"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.emcee.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.emcee.choose_pool": {
  "data": {
   "shadows": "pycbc.pool.choose_pool"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.emcee.emcee": {
  "data": {
   "shadows": "emcee"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.emcee.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.emcee_pt": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTFile": {
  "data": {
   "shadows": "pycbc.inference.io.EmceePTFile"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTSampler": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "pycbc.inference.io.EmceePTFile": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTSampler.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "len": {
     "line number": [
      97
     ]
    },
    "pycbc.inference.sampler.emcee_pt.emcee": {
     "line number": [
      98
     ]
    },
    "pycbc.pool.choose_pool": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTSampler.base_shape": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "property": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTSampler.betas": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "property": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTSampler.calculate_logevidence": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      267
     ]
    },
    "cls._io": {
     "line number": [
      297
     ]
    },
    "len": {
     "line number": [
      310
     ]
    },
    "pycbc.inference.sampler.emcee_pt.emcee": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTSampler.clear_samples": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTSampler.finalize": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "pycbc.inference.sampler.emcee_pt.logging": {
     "line number": [
      322,
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTSampler.from_config": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      151
     ]
    },
    "KeyError": {
     "line number": [
      150
     ]
    },
    "ValueError": {
     "line number": [
      140
     ]
    },
    "classmethod": {
     "line number": [
      118
     ]
    },
    "cls": {
     "line number": [
      161
     ]
    },
    "get_optional_arg_from_config": {
     "line number": [
      160
     ]
    },
    "int": {
     "line number": [
      137,
      155
     ]
    },
    "pycbc.inference.sampler.emcee_pt.h5py": {
     "line number": [
      146
     ]
    },
    "pycbc.inference.sampler.emcee_pt.numpy": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTSampler.io": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "property": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTSampler.model_stats": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "property": {
     "line number": [
      186
     ]
    },
    "pycbc.inference.sampler.emcee_pt.numpy": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTSampler.run_mcmc": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTSampler.samples": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "property": {
     "line number": [
      174
     ]
    },
    "raw_samples_to_dict": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTSampler.set_state_from_file": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "pycbc.inference.sampler.emcee_pt.numpy": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee_pt.EmceePTSampler.write_results": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "pycbc.inference.sampler.emcee_pt.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.emcee_pt.choose_pool": {
  "data": {
   "shadows": "pycbc.pool.choose_pool"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.emcee_pt.emcee": {
  "data": {
   "shadows": "emcee"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.emcee_pt.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.emcee_pt.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.emcee_pt.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.load_from_config": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "pycbc.inference.sampler.samplers": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest": {
  "data": {},
  "type": "module"
 },
 "pycbc.inference.sampler.multinest.Analyzer": {
  "data": {
   "shadows": "pymultinest.Analyzer"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.multinest.MultinestFile": {
  "data": {
   "shadows": "pycbc.inference.io.MultinestFile"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "pycbc.inference.io.MultinestFile": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      74,
      75
     ]
    },
    "len": {
     "line number": [
      81
     ]
    },
    "pycbc.inference.sampler.multinest.MultinestSampler": {
     "line number": [
      77
     ]
    },
    "pycbc.inference.sampler.multinest.logging": {
     "line number": [
      68,
      69,
      69,
      73
     ]
    },
    "pycbc.inference.sampler.multinest.numpy": {
     "line number": [
      82
     ]
    },
    "pymultinest.Analyzer": {
     "line number": [
      72
     ]
    },
    "pymultinest.run": {
     "line number": [
      71
     ]
    },
    "super": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.check_if_finished": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "max": {
     "line number": [
      183
     ]
    },
    "pycbc.inference.sampler.multinest.logging": {
     "line number": [
      186
     ]
    },
    "pycbc.inference.sampler.multinest.numpy": {
     "line number": [
      181,
      184,
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.checkpoint": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      322
     ]
    },
    "pycbc.inference.io.validate_checkpoint_files": {
     "line number": [
      319
     ]
    },
    "pycbc.inference.sampler.multinest.logging": {
     "line number": [
      313,
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.checkpoint_interval": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "property": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.dlogz": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "property": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.finalize": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.from_config": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      350
     ]
    },
    "classmethod": {
     "line number": [
      329
     ]
    },
    "cls": {
     "line number": [
      360
     ]
    },
    "float": {
     "line number": [
      343,
      346
     ]
    },
    "get_optional_arg_from_config": {
     "line number": [
      339,
      342,
      345,
      348
     ]
    },
    "int": {
     "line number": [
      337,
      340
     ]
    },
    "pycbc.distributions.read_constraints_from_config": {
     "line number": [
      352
     ]
    },
    "zip": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.get_posterior_samples": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "pycbc.inference.sampler.multinest.numpy": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.importance_dlogz": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "property": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.importance_logz": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "property": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.io": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "property": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.loglikelihood": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "all": {
     "line number": [
      222
     ]
    },
    "c": {
     "line number": [
      222,
      222
     ]
    },
    "pycbc.inference.sampler.multinest.numpy": {
     "line number": [
      223
     ]
    },
    "pycbc.transforms.apply_transforms": {
     "line number": [
      219
     ]
    },
    "zip": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.logz": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "property": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.model_stats": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      160
     ]
    },
    "enumerate": {
     "line number": [
      167
     ]
    },
    "property": {
     "line number": [
      154
     ]
    },
    "pycbc.inference.sampler.multinest.numpy": {
     "line number": [
      166
     ]
    },
    "zip": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.niterations": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "property": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.nlivepoints": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "property": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.run": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "pycbc.inference.sampler.multinest.logging": {
     "line number": [
      255,
      278
     ]
    },
    "pycbc.inference.sampler.multinest.numpy": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.samples": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      151
     ]
    },
    "property": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.set_initial_conditions": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.set_state_from_file": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "pycbc.inference.sampler.multinest.numpy": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.transform_prior": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.MultinestSampler.write_results": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "pycbc.inference.sampler.multinest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.multinest.apply_transforms": {
  "data": {
   "shadows": "pycbc.transforms.apply_transforms"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.multinest.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.multinest.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.multinest.read_constraints_from_config": {
  "data": {
   "shadows": "pycbc.distributions.read_constraints_from_config"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.multinest.run": {
  "data": {
   "shadows": "pymultinest.run"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.multinest.validate_checkpoint_files": {
  "data": {
   "shadows": "pycbc.inference.io.validate_checkpoint_files"
  },
  "type": "import"
 },
 "pycbc.inference.sampler.samplers": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pycbc.init_logging": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "format": {
     "line number": [
      71
     ]
    },
    "pycbc.logging": {
     "line number": [
      67,
      69,
      70,
      71
     ]
    },
    "pycbc.signal": {
     "line number": [
      64,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.init_logging.sig_handler": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "pycbc.logging": {
     "line number": [
      54,
      56,
      57,
      59,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject": {
  "data": {},
  "type": "module"
 },
 "pycbc.inject.inject": {
  "data": {
   "symbols_in_volume": {
    "glue.ligolw.lsctables.use_in": {
     "line number": [
      61
     ]
    },
    "lalsimulation.SimAddInjectionREAL4TimeSeries": {
     "line number": [
      45
     ]
    },
    "lalsimulation.SimAddInjectionREAL8TimeSeries": {
     "line number": [
      46
     ]
    },
    "numpy.dtype": {
     "line number": [
      45,
      46
     ]
    },
    "pycbc.inject.inject.CBCHDFInjectionSet": {
     "line number": [
      719,
      719
     ]
    },
    "pycbc.inject.inject.LIGOLWContentHandler": {
     "line number": [
      61
     ]
    },
    "pycbc.inject.inject.RingdownHDFInjectionSet": {
     "line number": [
      720,
      720
     ]
    },
    "pycbc.types.float32": {
     "line number": [
      45
     ]
    },
    "pycbc.types.float64": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.inject.inject.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pycbc.inject.inject.CBCHDFInjectionSet": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "pycbc.inject.inject._HDFInjectionSet": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inject.inject.CBCHDFInjectionSet.apply": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      481
     ]
    },
    "add_injection": {
     "line number": [
      490,
      519
     ]
    },
    "float": {
     "line number": [
      486,
      487,
      514
     ]
    },
    "lalsimulation.SimInspiralTaylorLength": {
     "line number": [
      504
     ]
    },
    "list": {
     "line number": [
      494
     ]
    },
    "pycbc.inject.inject.copy": {
     "line number": [
      525
     ]
    },
    "pycbc.inject.inject.injection_func_map": {
     "line number": [
      490
     ]
    },
    "pycbc.inject.inject.lal": {
     "line number": [
      485,
      485,
      505,
      506
     ]
    },
    "pycbc.types.float32": {
     "line number": [
      480
     ]
    },
    "pycbc.types.float64": {
     "line number": [
      480
     ]
    },
    "range": {
     "line number": [
      495
     ]
    },
    "str": {
     "line number": [
      482
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.CBCHDFInjectionSet.end_times": {
  "data": {
   "lineno": 587
  },
  "type": "function"
 },
 "pycbc.inject.inject.CBCHDFInjectionSet.make_strain_from_inj_object": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      577
     ]
    },
    "pycbc.detector.Detector": {
     "line number": [
      557
     ]
    },
    "pycbc.waveform.get_td_waveform": {
     "line number": [
      564
     ]
    },
    "pycbc.waveform.utils.taper_timeseries": {
     "line number": [
      575,
      576
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.CBCHDFInjectionSet.supported_approximants": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": {
    "list": {
     "line number": [
      597
     ]
    },
    "pycbc.waveform.waveform.fd_wav": {
     "line number": [
      594
     ]
    },
    "pycbc.waveform.waveform.td_wav": {
     "line number": [
      594
     ]
    },
    "set": {
     "line number": [
      597
     ]
    },
    "staticmethod": {
     "line number": [
      591
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.Detector": {
  "data": {
   "shadows": "pycbc.detector.Detector"
  },
  "type": "import"
 },
 "pycbc.inject.inject.InjectionSet": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": {
    "object": {
     "line number": [
      772
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inject.inject.InjectionSet.__init__": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": {
    "pycbc.inject.inject._XMLInjectionSet": {
     "line number": [
      794
     ]
    },
    "pycbc.inject.inject.get_hdf_injtype": {
     "line number": [
      798
     ]
    },
    "pycbc.inject.inject.os": {
     "line number": [
      792
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.InjectionSet.write": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      846,
      850
     ]
    },
    "all": {
     "line number": [
      845
     ]
    },
    "numpy.unique": {
     "line number": [
      842
     ]
    },
    "pycbc.inject.inject._XMLInjectionSet": {
     "line number": [
      833
     ]
    },
    "pycbc.inject.inject.hdf_injtype_from_approximant": {
     "line number": [
      839,
      844
     ]
    },
    "pycbc.inject.inject.hdfinjtypes": {
     "line number": [
      855
     ]
    },
    "pycbc.inject.inject.os": {
     "line number": [
      831
     ]
    },
    "staticmethod": {
     "line number": [
      806
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.LIGOLWContentHandler": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "glue.ligolw.ligolw.LIGOLWContentHandler": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inject.inject.RingdownHDFInjectionSet": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": {
    "pycbc.inject.inject._HDFInjectionSet": {
     "line number": [
      600
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inject.inject.RingdownHDFInjectionSet.apply": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      637
     ]
    },
    "TypeError": {
     "line number": [
      640
     ]
    },
    "add_injection": {
     "line number": [
      646,
      658
     ]
    },
    "list": {
     "line number": [
      650
     ]
    },
    "pycbc.inject.inject.injection_func_map": {
     "line number": [
      646
     ]
    },
    "pycbc.types.float32": {
     "line number": [
      639
     ]
    },
    "pycbc.types.float64": {
     "line number": [
      639
     ]
    },
    "range": {
     "line number": [
      651
     ]
    },
    "str": {
     "line number": [
      641
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.RingdownHDFInjectionSet.end_times": {
  "data": {
   "lineno": 703
  },
  "type": "function"
 },
 "pycbc.inject.inject.RingdownHDFInjectionSet.make_strain_from_inj_object": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": {
    "pycbc.detector.Detector": {
     "line number": [
      684
     ]
    },
    "pycbc.waveform.ringdown_td_approximants": {
     "line number": [
      687
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.RingdownHDFInjectionSet.supported_approximants": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": {
    "list": {
     "line number": [
      715
     ]
    },
    "pycbc.waveform.ringdown_td_approximants.keys": {
     "line number": [
      715
     ]
    },
    "staticmethod": {
     "line number": [
      713
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.SGBurstInjectionSet": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": {
    "object": {
     "line number": [
      860
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inject.inject.SGBurstInjectionSet.__init__": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": {
    "glue.ligolw.lsctables.SimBurstTable.tableName": {
     "line number": [
      880
     ]
    },
    "glue.ligolw.table.get_table": {
     "line number": [
      879
     ]
    },
    "glue.ligolw.utils.load_filename": {
     "line number": [
      877
     ]
    },
    "pycbc.inject.inject.LIGOLWContentHandler": {
     "line number": [
      878
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.SGBurstInjectionSet.apply": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      909
     ]
    },
    "add_injection": {
     "line number": [
      919,
      947
     ]
    },
    "float": {
     "line number": [
      915,
      916,
      933,
      934,
      934,
      934,
      935,
      935,
      938,
      939,
      940
     ]
    },
    "lalsimulation.SimBurstSineGaussian": {
     "line number": [
      933
     ]
    },
    "pycbc.inject.inject.injection_func_map": {
     "line number": [
      919
     ]
    },
    "pycbc.inject.inject.lal": {
     "line number": [
      914,
      914
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      936,
      937
     ]
    },
    "pycbc.types.float32": {
     "line number": [
      908
     ]
    },
    "pycbc.types.float64": {
     "line number": [
      908
     ]
    },
    "pycbc.waveform.utils.taper_timeseries": {
     "line number": [
      945
     ]
    },
    "str": {
     "line number": [
      910
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.inject.inject._HDFInjectionSet": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "abc.ABCMeta": {
     "line number": [
      314
     ]
    },
    "object": {
     "line number": [
      315
     ]
    },
    "six.add_metaclass": {
     "line number": [
      314
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inject.inject._HDFInjectionSet.__init__": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      354
     ]
    },
    "ValueError": {
     "line number": [
      374
     ]
    },
    "isinstance": {
     "line number": [
      363
     ]
    },
    "len": {
     "line number": [
      347
     ]
    },
    "list": {
     "line number": [
      363
     ]
    },
    "numpy.empty": {
     "line number": [
      364
     ]
    },
    "numpy.ndarray": {
     "line number": [
      363
     ]
    },
    "numpy.repeat": {
     "line number": [
      370
     ]
    },
    "object": {
     "line number": [
      364
     ]
    },
    "pycbc.inject.inject.h5py": {
     "line number": [
      339
     ]
    },
    "range": {
     "line number": [
      365
     ]
    },
    "tuple": {
     "line number": [
      350,
      363
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject._HDFInjectionSet.apply": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject._HDFInjectionSet.end_times": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject._HDFInjectionSet.make_strain_from_inj_object": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject._HDFInjectionSet.supported_approximants": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject._HDFInjectionSet.write": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      406
     ]
    },
    "pycbc.inject.inject.h5py": {
     "line number": [
      426
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject._XMLInjectionSet": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "object": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inject.inject._XMLInjectionSet.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "glue.ligolw.lsctables.SimInspiralTable.tableName": {
     "line number": [
      120
     ]
    },
    "glue.ligolw.table.get_table": {
     "line number": [
      120
     ]
    },
    "glue.ligolw.utils.load_filename": {
     "line number": [
      118
     ]
    },
    "pycbc.inject.inject.LIGOLWContentHandler": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject._XMLInjectionSet.apply": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      156
     ]
    },
    "add_injection": {
     "line number": [
      195
     ]
    },
    "float": {
     "line number": [
      161,
      162,
      190
     ]
    },
    "glue.ligolw.lsctables.SimInspiralTable": {
     "line number": [
      204
     ]
    },
    "lalsimulation.SimInspiralTaylorLength": {
     "line number": [
      180
     ]
    },
    "pycbc.inject.inject.copy": {
     "line number": [
      203
     ]
    },
    "pycbc.inject.inject.injection_func_map": {
     "line number": [
      165
     ]
    },
    "pycbc.inject.inject.lal": {
     "line number": [
      160,
      160,
      181,
      182
     ]
    },
    "pycbc.types.float32": {
     "line number": [
      155
     ]
    },
    "pycbc.types.float64": {
     "line number": [
      155
     ]
    },
    "str": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject._XMLInjectionSet.end_times": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "pycbc.inject.inject._XMLInjectionSet.make_strain_from_inj_object": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "pycbc.detector.Detector": {
     "line number": [
      235
     ]
    },
    "pycbc.inject.inject.legacy_approximant_name": {
     "line number": [
      241
     ]
    },
    "pycbc.waveform.get_td_waveform": {
     "line number": [
      244
     ]
    },
    "pycbc.waveform.utils.taper_timeseries": {
     "line number": [
      257,
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject._XMLInjectionSet.write": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "glue.ligolw.ligolw.Document": {
     "line number": [
      287
     ]
    },
    "glue.ligolw.ligolw.LIGO_LW": {
     "line number": [
      288
     ]
    },
    "glue.ligolw.lsctables.New": {
     "line number": [
      289
     ]
    },
    "glue.ligolw.lsctables.SimInspiral": {
     "line number": [
      296
     ]
    },
    "glue.ligolw.lsctables.SimInspiralTable": {
     "line number": [
      289
     ]
    },
    "glue.ligolw.utils.write_filename": {
     "line number": [
      307
     ]
    },
    "lalsimulation": {
     "line number": [
      296,
      299,
      302,
      305,
      306
     ]
    },
    "lalsimulation.__slots__": {
     "line number": [
      298
     ]
    },
    "pycbc.inject.inject.set_sim_data": {
     "line number": [
      302,
      305
     ]
    },
    "range": {
     "line number": [
      295
     ]
    },
    "setattr": {
     "line number": [
      299
     ]
    },
    "staticmethod": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pycbc.inject.inject.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "pycbc.inject.inject.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycbc.inject.inject.float32": {
  "data": {
   "shadows": "pycbc.types.float32"
  },
  "type": "import"
 },
 "pycbc.inject.inject.float64": {
  "data": {
   "shadows": "pycbc.types.float64"
  },
  "type": "import"
 },
 "pycbc.inject.inject.get_hdf_injtype": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      743
     ]
    },
    "pycbc.inject.inject.CBCHDFInjectionSet": {
     "line number": [
      744
     ]
    },
    "pycbc.inject.inject.h5py": {
     "line number": [
      740
     ]
    },
    "pycbc.inject.inject.hdfinjtypes": {
     "line number": [
      745
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.get_td_waveform": {
  "data": {
   "shadows": "pycbc.waveform.get_td_waveform"
  },
  "type": "import"
 },
 "pycbc.inject.inject.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.inject.inject.hdf_injtype_from_approximant": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      767
     ]
    },
    "pycbc.inject.inject.hdfinjtypes": {
     "line number": [
      762
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.hdfinjtypes": {
  "data": {
   "lineno": 718
  },
  "type": "constant"
 },
 "pycbc.inject.inject.injection_func_map": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pycbc.inject.inject.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.inject.inject.legacy_approximant_name": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "lalsimulation.GetApproximantFromString": {
     "line number": [
      96
     ]
    },
    "lalsimulation.GetOrderFromString": {
     "line number": [
      92
     ]
    },
    "lalsimulation.GetStringFromApproximant": {
     "line number": [
      96
     ]
    },
    "print": {
     "line number": [
      94
     ]
    },
    "str": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.ligolw": {
  "data": {
   "shadows": "glue.ligolw.ligolw"
  },
  "type": "import"
 },
 "pycbc.inject.inject.ligolw_utils": {
  "data": {
   "shadows": "glue.ligolw.utils"
  },
  "type": "import"
 },
 "pycbc.inject.inject.lsctables": {
  "data": {
   "shadows": "glue.ligolw.lsctables"
  },
  "type": "import"
 },
 "pycbc.inject.inject.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inject.inject.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.inject.inject.pycbc.io": {
  "data": {
   "shadows": "pycbc.io"
  },
  "type": "import"
 },
 "pycbc.inject.inject.ringdown_td_approximants": {
  "data": {
   "shadows": "pycbc.waveform.ringdown_td_approximants"
  },
  "type": "import"
 },
 "pycbc.inject.inject.set_sim_data": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      75
     ]
    },
    "int": {
     "line number": [
      79,
      80
     ]
    },
    "pycbc.inject.inject.sim_inspiral_map": {
     "line number": [
      74
     ]
    },
    "setattr": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.inject.sim": {
  "data": {
   "shadows": "lalsimulation"
  },
  "type": "import"
 },
 "pycbc.inject.inject.sim_inspiral_map": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pycbc.inject.inject.table": {
  "data": {
   "shadows": "glue.ligolw.table"
  },
  "type": "import"
 },
 "pycbc.inject.inject.waveform": {
  "data": {
   "shadows": "pycbc.waveform"
  },
  "type": "import"
 },
 "pycbc.inject.inject.wfutils": {
  "data": {
   "shadows": "pycbc.waveform.utils"
  },
  "type": "import"
 },
 "pycbc.inject.injfilterrejector": {
  "data": {},
  "type": "module"
 },
 "pycbc.inject.injfilterrejector.DYN_RANGE_FAC": {
  "data": {
   "shadows": "pycbc.DYN_RANGE_FAC"
  },
  "type": "import"
 },
 "pycbc.inject.injfilterrejector.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.inject.injfilterrejector.InjFilterRejector": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "object": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.inject.injfilterrejector.InjFilterRejector.__init__": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pycbc.inject.injfilterrejector.InjFilterRejector.from_cli": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      179
     ]
    },
    "cls": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.injfilterrejector.InjFilterRejector.from_cli_multi_ifos": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      226
     ]
    },
    "cls.from_cli_single_ifo": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.injfilterrejector.InjFilterRejector.from_cli_single_ifo": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      202
     ]
    },
    "cls": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.injfilterrejector.InjFilterRejector.generate_short_inj_from_inj": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      245
     ]
    },
    "int": {
     "line number": [
      247,
      256,
      262
     ]
    },
    "len": {
     "line number": [
      246,
      261
     ]
    },
    "numpy.complex64": {
     "line number": [
      264
     ]
    },
    "pycbc.DYN_RANGE_FAC": {
     "line number": [
      254
     ]
    },
    "pycbc.pnutils.nearest_larger_binary_number": {
     "line number": [
      247
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      264
     ]
    },
    "str": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.injfilterrejector.InjFilterRejector.template_segment_checker": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      337
     ]
    },
    "abs": {
     "line number": [
      319
     ]
    },
    "id": {
     "line number": [
      336,
      345
     ]
    },
    "int": {
     "line number": [
      330,
      340,
      341,
      351
     ]
    },
    "len": {
     "line number": [
      297
     ]
    },
    "numpy.complex64": {
     "line number": [
      332,
      354
     ]
    },
    "pycbc.filter.match": {
     "line number": [
      371
     ]
    },
    "pycbc.pnutils.mass1_mass2_to_tau0_tau3": {
     "line number": [
      310,
      317
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      343
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      332,
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.injfilterrejector.MultiDetOptionAction": {
  "data": {
   "shadows": "pycbc.types.MultiDetOptionAction"
  },
  "type": "import"
 },
 "pycbc.inject.injfilterrejector._injfilterer_buffer_help": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "pycbc.inject.injfilterrejector._injfilterer_cthresh_help": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pycbc.inject.injfilterrejector._injfilterer_deltaf_help": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pycbc.inject.injfilterrejector._injfilterer_flower_help": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "pycbc.inject.injfilterrejector._injfilterer_fmax_help": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pycbc.inject.injfilterrejector._injfilterer_mthresh_help": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pycbc.inject.injfilterrejector._injfilterrejector_group_help": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pycbc.inject.injfilterrejector.insert_injfilterrejector_option_group": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "float": {
     "line number": [
      94,
      97,
      100,
      103
     ]
    },
    "int": {
     "line number": [
      106,
      109
     ]
    },
    "pycbc.inject.injfilterrejector._injfilterer_buffer_help": {
     "line number": [
      107
     ]
    },
    "pycbc.inject.injfilterrejector._injfilterer_cthresh_help": {
     "line number": [
      95
     ]
    },
    "pycbc.inject.injfilterrejector._injfilterer_deltaf_help": {
     "line number": [
      101
     ]
    },
    "pycbc.inject.injfilterrejector._injfilterer_flower_help": {
     "line number": [
      110
     ]
    },
    "pycbc.inject.injfilterrejector._injfilterer_fmax_help": {
     "line number": [
      104
     ]
    },
    "pycbc.inject.injfilterrejector._injfilterer_mthresh_help": {
     "line number": [
      98
     ]
    },
    "pycbc.inject.injfilterrejector._injfilterrejector_group_help": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.injfilterrejector.insert_injfilterrejector_option_group_multi_ifo": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "float": {
     "line number": [
      119,
      123,
      127,
      131
     ]
    },
    "int": {
     "line number": [
      135,
      139
     ]
    },
    "pycbc.inject.injfilterrejector._injfilterer_buffer_help": {
     "line number": [
      136
     ]
    },
    "pycbc.inject.injfilterrejector._injfilterer_cthresh_help": {
     "line number": [
      120
     ]
    },
    "pycbc.inject.injfilterrejector._injfilterer_deltaf_help": {
     "line number": [
      128
     ]
    },
    "pycbc.inject.injfilterrejector._injfilterer_flower_help": {
     "line number": [
      139
     ]
    },
    "pycbc.inject.injfilterrejector._injfilterer_fmax_help": {
     "line number": [
      132
     ]
    },
    "pycbc.inject.injfilterrejector._injfilterer_mthresh_help": {
     "line number": [
      124
     ]
    },
    "pycbc.inject.injfilterrejector._injfilterrejector_group_help": {
     "line number": [
      116
     ]
    },
    "pycbc.types.MultiDetOptionAction": {
     "line number": [
      120,
      124,
      128,
      132,
      136,
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.inject.injfilterrejector.mass1_mass2_to_tau0_tau3": {
  "data": {
   "shadows": "pycbc.pnutils.mass1_mass2_to_tau0_tau3"
  },
  "type": "import"
 },
 "pycbc.inject.injfilterrejector.match": {
  "data": {
   "shadows": "pycbc.filter.match"
  },
  "type": "import"
 },
 "pycbc.inject.injfilterrejector.nearest_larger_binary_number": {
  "data": {
   "shadows": "pycbc.pnutils.nearest_larger_binary_number"
  },
  "type": "import"
 },
 "pycbc.inject.injfilterrejector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.inject.injfilterrejector.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.io": {
  "data": {},
  "type": "module"
 },
 "pycbc.io.hdf": {
  "data": {},
  "type": "module"
 },
 "pycbc.io.hdf.DataFromFiles": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "object": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.io.hdf.DataFromFiles.__init__": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "pycbc.io.hdf.DataFromFiles.get_column": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "len": {
     "line number": [
      370
     ]
    },
    "numpy.concatenate": {
     "line number": [
      371
     ]
    },
    "pycbc.io.hdf.FileData": {
     "line number": [
      364
     ]
    },
    "pycbc.io.hdf.logging": {
     "line number": [
      361,
      370
     ]
    },
    "sum": {
     "line number": [
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.DictArray": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "object": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.io.hdf.DictArray.__add__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "numpy.concatenate": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.DictArray.__init__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "len": {
     "line number": [
      139
     ]
    },
    "numpy.concatenate": {
     "line number": [
      140
     ]
    },
    "pycbc.io.hdf.HFile": {
     "line number": [
      132
     ]
    },
    "setattr": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.DictArray.__len__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "len": {
     "line number": [
      149
     ]
    },
    "tuple": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.DictArray._return": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "pycbc.io.hdf.DictArray.remove": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "numpy.delete": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.DictArray.save": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "pycbc.io.hdf.HFile": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.DictArray.select": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "pycbc.io.hdf.FileData": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "object": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.io.hdf.FileData.__init__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      276,
      283
     ]
    },
    "len": {
     "line number": [
      280
     ]
    },
    "list": {
     "line number": [
      287
     ]
    },
    "pycbc.io.hdf.HFile": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.FileData.close": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "pycbc.io.hdf.FileData.get_column": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "len": {
     "line number": [
      329
     ]
    },
    "numpy.array": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.FileData.mask": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      305
     ]
    },
    "eval": {
     "line number": [
      313
     ]
    },
    "property": {
     "line number": [
      294
     ]
    },
    "setattr": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.ForegroundTriggers": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": {
    "object": {
     "line number": [
      665
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.io.hdf.ForegroundTriggers.__init__": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": {
    "pycbc.io.hdf.FileData": {
     "line number": [
      669,
      673
     ]
    },
    "pycbc.io.hdf.HFile": {
     "line number": [
      676
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.ForegroundTriggers.get_bankfile_array": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      721
     ]
    },
    "len": {
     "line number": [
      722
     ]
    },
    "numpy.array": {
     "line number": [
      723
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.ForegroundTriggers.get_coincfile_array": {
  "data": {
   "lineno": 715
  },
  "type": "function"
 },
 "pycbc.io.hdf.ForegroundTriggers.get_snglfile_array_dict": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      732
     ]
    },
    "len": {
     "line number": [
      733
     ]
    },
    "numpy.array": {
     "line number": [
      734
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.ForegroundTriggers.sort_arr": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": {
    "property": {
     "line number": [
      683
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.ForegroundTriggers.template_id": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": {
    "property": {
     "line number": [
      693
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.ForegroundTriggers.to_coinc_xml_object": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": {
    "glue.ligolw.ligolw.Document": {
     "line number": [
      743
     ]
    },
    "glue.ligolw.ligolw.LIGO_LW": {
     "line number": [
      744
     ]
    },
    "glue.ligolw.lsctables.Coinc": {
     "line number": [
      850
     ]
    },
    "glue.ligolw.lsctables.CoincDef": {
     "line number": [
      781
     ]
    },
    "glue.ligolw.lsctables.CoincDefID": {
     "line number": [
      780
     ]
    },
    "glue.ligolw.lsctables.CoincDefTable": {
     "line number": [
      763
     ]
    },
    "glue.ligolw.lsctables.CoincID": {
     "line number": [
      808
     ]
    },
    "glue.ligolw.lsctables.CoincInspiral": {
     "line number": [
      851
     ]
    },
    "glue.ligolw.lsctables.CoincInspiralTable": {
     "line number": [
      765
     ]
    },
    "glue.ligolw.lsctables.CoincMap": {
     "line number": [
      840
     ]
    },
    "glue.ligolw.lsctables.CoincMapTable": {
     "line number": [
      766
     ]
    },
    "glue.ligolw.lsctables.CoincTable": {
     "line number": [
      764
     ]
    },
    "glue.ligolw.lsctables.New": {
     "line number": [
      752,
      762,
      763,
      764,
      765,
      766,
      767
     ]
    },
    "glue.ligolw.lsctables.SearchSummaryTable": {
     "line number": [
      752
     ]
    },
    "glue.ligolw.lsctables.SnglInspiralID": {
     "line number": [
      816
     ]
    },
    "glue.ligolw.lsctables.SnglInspiralTable": {
     "line number": [
      762
     ]
    },
    "glue.ligolw.lsctables.TimeSlide": {
     "line number": [
      772
     ]
    },
    "glue.ligolw.lsctables.TimeSlideID": {
     "line number": [
      770
     ]
    },
    "glue.ligolw.lsctables.TimeSlideTable": {
     "line number": [
      767
     ]
    },
    "glue.ligolw.utils.process.register_to_xmldoc": {
     "line number": [
      747
     ]
    },
    "glue.ligolw.utils.write_filename": {
     "line number": [
      882
     ]
    },
    "lal.LIGOTimeGPS": {
     "line number": [
      823,
      863
     ]
    },
    "lal.YRJUL_SI": {
     "line number": [
      869
     ]
    },
    "len": {
     "line number": [
      756,
      806,
      846,
      847,
      853
     ]
    },
    "list": {
     "line number": [
      746
     ]
    },
    "pycbc.pnutils.mass1_mass2_to_mchirp_eta": {
     "line number": [
      831
     ]
    },
    "pycbc.pnutils.mass1_mass2_to_mtotal_eta": {
     "line number": [
      829
     ]
    },
    "pycbc.tmpltbank.return_empty_sngl": {
     "line number": [
      817
     ]
    },
    "pycbc.tmpltbank.return_search_summary": {
     "line number": [
      757
     ]
    },
    "pycbc.version.date": {
     "line number": [
      750
     ]
    },
    "pycbc.version.git_branch": {
     "line number": [
      749
     ]
    },
    "pycbc.version.git_hash": {
     "line number": [
      748
     ]
    },
    "setattr": {
     "line number": [
      825,
      828
     ]
    },
    "six.moves.range": {
     "line number": [
      806
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.ForegroundTriggers.trig_id": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": {
    "property": {
     "line number": [
      700
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.HFile": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "pycbc.io.hdf.h5py": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.io.hdf.HFile.select": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "fcn": {
     "line number": [
      79
     ]
    },
    "int": {
     "line number": [
      70
     ]
    },
    "len": {
     "line number": [
      71,
      90
     ]
    },
    "numpy.array": {
     "line number": [
      67
     ]
    },
    "numpy.concatenate": {
     "line number": [
      81,
      91,
      97
     ]
    },
    "numpy.flatnonzero": {
     "line number": [
      81
     ]
    },
    "numpy.uint64": {
     "line number": [
      67,
      93,
      99
     ]
    },
    "tuple": {
     "line number": [
      97
     ]
    },
    "zip": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.LIGOTimeGPS": {
  "data": {
   "shadows": "lal.LIGOTimeGPS"
  },
  "type": "import"
 },
 "pycbc.io.hdf.MultiifoStatmapData": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "pycbc.io.hdf.StatmapData": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.io.hdf.MultiifoStatmapData.__init__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "pycbc.io.hdf.MultiifoStatmapData": {
     "line number": [
      234
     ]
    },
    "super": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.MultiifoStatmapData._return": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "pycbc.io.hdf.MultiifoStatmapData.cluster": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "len": {
     "line number": [
      249,
      249
     ]
    },
    "pycbc.events.cluster_coincs": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "object": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.io.hdf.SingleDetTriggers.__init__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      397
     ]
    },
    "delattr": {
     "line number": [
      432
     ]
    },
    "eval": {
     "line number": [
      429
     ]
    },
    "itertools.chain": {
     "line number": [
      431
     ]
    },
    "len": {
     "line number": [
      397,
      412
     ]
    },
    "numpy.array": {
     "line number": [
      427
     ]
    },
    "numpy.flatnonzero": {
     "line number": [
      408
     ]
    },
    "numpy.ones": {
     "line number": [
      397
     ]
    },
    "pycbc.events.veto.indices_outside_segments": {
     "line number": [
      404
     ]
    },
    "pycbc.io.hdf.HFile": {
     "line number": [
      382,
      388
     ]
    },
    "pycbc.io.hdf.logging": {
     "line number": [
      381,
      387,
      390,
      400,
      403,
      411,
      419,
      435
     ]
    },
    "setattr": {
     "line number": [
      422,
      426
     ]
    },
    "sum": {
     "line number": [
      436
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.apply_mask": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      462
     ]
    },
    "list": {
     "line number": [
      467
     ]
    },
    "numpy.array": {
     "line number": [
      467
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.checkbank": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.effective_spin": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": {
    "property": {
     "line number": [
      586
     ]
    },
    "pycbc.conversions.chi_eff": {
     "line number": [
      589
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.end_time": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": {
    "property": {
     "line number": [
      605
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.eta": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": {
    "property": {
     "line number": [
      582
     ]
    },
    "pycbc.conversions.eta_from_mass1_mass2": {
     "line number": [
      584
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.f_lower": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": {
    "property": {
     "line number": [
      569
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.f_seobnrv2_peak": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "property": {
     "line number": [
      595
     ]
    },
    "pycbc.pnutils.get_freq": {
     "line number": [
      597
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.f_seobnrv4_peak": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": {
    "property": {
     "line number": [
      600
     ]
    },
    "pycbc.pnutils.get_freq": {
     "line number": [
      602
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.get_column": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      654
     ]
    },
    "len": {
     "line number": [
      655,
      655
     ]
    },
    "list": {
     "line number": [
      654
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.get_param_names": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      454
     ]
    },
    "property": {
     "line number": [
      458
     ]
    },
    "pycbc.io.hdf.inspect": {
     "line number": [
      457
     ]
    },
    "type": {
     "line number": [
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.inclination": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "property": {
     "line number": [
      564
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.mask_to_n_loudest_clustered_events": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      502
     ]
    },
    "hasattr": {
     "line number": [
      514
     ]
    },
    "isinstance": {
     "line number": [
      517
     ]
    },
    "len": {
     "line number": [
      508
     ]
    },
    "list": {
     "line number": [
      516,
      517,
      518
     ]
    },
    "numpy.array": {
     "line number": [
      511,
      518
     ]
    },
    "numpy.flatnonzero": {
     "line number": [
      515
     ]
    },
    "pycbc.events.stat.sngl_statistic_dict": {
     "line number": [
      480
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.mass1": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "property": {
     "line number": [
      524
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.mass2": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "property": {
     "line number": [
      529
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.mchirp": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": {
    "property": {
     "line number": [
      578
     ]
    },
    "pycbc.conversions.mchirp_from_mass1_mass2": {
     "line number": [
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.mtotal": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": {
    "property": {
     "line number": [
      574
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.newsnr": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": {
    "property": {
     "line number": [
      634
     ]
    },
    "pycbc.events.ranking.newsnr": {
     "line number": [
      636
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.newsnr_sgveto": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": {
    "property": {
     "line number": [
      638
     ]
    },
    "pycbc.events.ranking.newsnr_sgveto": {
     "line number": [
      640
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.newsnr_sgveto_psdvar": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": {
    "property": {
     "line number": [
      642
     ]
    },
    "pycbc.events.ranking.newsnr_sgveto_psdvar": {
     "line number": [
      644
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.psd_var_val": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": {
    "property": {
     "line number": [
      630
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.rchisq": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": {
    "property": {
     "line number": [
      625
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.sgchisq": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": {
    "property": {
     "line number": [
      617
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.snr": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": {
    "property": {
     "line number": [
      613
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.spin1x": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": {
    "property": {
     "line number": [
      554
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.spin1y": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "property": {
     "line number": [
      559
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.spin1z": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "property": {
     "line number": [
      534
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.spin2x": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": {
    "property": {
     "line number": [
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.spin2y": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": {
    "property": {
     "line number": [
      549
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.spin2z": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": {
    "property": {
     "line number": [
      539
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.template_duration": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": {
    "property": {
     "line number": [
      609
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.template_id": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": {
    "property": {
     "line number": [
      520
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.trig_dict": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "len": {
     "line number": [
      447,
      447
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.SingleDetTriggers.u_vals": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": {
    "property": {
     "line number": [
      621
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.StatmapData": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "pycbc.io.hdf.DictArray": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.io.hdf.StatmapData.__init__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "pycbc.io.hdf.HFile": {
     "line number": [
      198
     ]
    },
    "pycbc.io.hdf.StatmapData": {
     "line number": [
      191
     ]
    },
    "super": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.StatmapData._return": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "pycbc.io.hdf.StatmapData.cluster": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "len": {
     "line number": [
      210,
      210
     ]
    },
    "pycbc.events.cluster_coincs": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.StatmapData.save": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "pycbc.io.hdf.HFile": {
     "line number": [
      220
     ]
    },
    "pycbc.io.hdf.StatmapData": {
     "line number": [
      219
     ]
    },
    "super": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.YRJUL_SI": {
  "data": {
   "shadows": "lal.YRJUL_SI"
  },
  "type": "import"
 },
 "pycbc.io.hdf.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "pycbc.io.hdf.chisq_choices": {
  "data": {
   "lineno": 885
  },
  "type": "constant"
 },
 "pycbc.io.hdf.cluster_coincs": {
  "data": {
   "shadows": "pycbc.events.cluster_coincs"
  },
  "type": "import"
 },
 "pycbc.io.hdf.combine_and_copy": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      962
     ]
    },
    "numpy.concatenate": {
     "line number": [
      961
     ]
    },
    "numpy.uint32": {
     "line number": [
      962
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.conversions": {
  "data": {
   "shadows": "pycbc.conversions"
  },
  "type": "import"
 },
 "pycbc.io.hdf.events": {
  "data": {
   "shadows": "pycbc.events"
  },
  "type": "import"
 },
 "pycbc.io.hdf.get_all_subkeys": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      975
     ]
    },
    "pycbc.io.hdf.h5py": {
     "line number": [
      975
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.get_chisq_from_file_choice": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      925
     ]
    },
    "numpy.maximum": {
     "line number": [
      916,
      918,
      920,
      922,
      922
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.io.hdf.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pycbc.io.hdf.ligolw": {
  "data": {
   "shadows": "glue.ligolw.ligolw"
  },
  "type": "import"
 },
 "pycbc.io.hdf.ligolw_process": {
  "data": {
   "shadows": "glue.ligolw.utils.process"
  },
  "type": "import"
 },
 "pycbc.io.hdf.ligolw_utils": {
  "data": {
   "shadows": "glue.ligolw.utils"
  },
  "type": "import"
 },
 "pycbc.io.hdf.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.io.hdf.lsctables": {
  "data": {
   "shadows": "glue.ligolw.lsctables"
  },
  "type": "import"
 },
 "pycbc.io.hdf.name_all_datasets": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": {
    "pycbc.io.hdf.get_all_subkeys": {
     "line number": [
      967
     ]
    },
    "set": {
     "line number": [
      968
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.io.hdf.pnutils": {
  "data": {
   "shadows": "pycbc.pnutils"
  },
  "type": "import"
 },
 "pycbc.io.hdf.pycbc_version": {
  "data": {
   "shadows": "pycbc.version"
  },
  "type": "import"
 },
 "pycbc.io.hdf.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "pycbc.io.hdf.ranking": {
  "data": {
   "shadows": "pycbc.events.ranking"
  },
  "type": "import"
 },
 "pycbc.io.hdf.recursively_save_dict_contents_to_group": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      957
     ]
    },
    "bytes": {
     "line number": [
      952
     ]
    },
    "dict": {
     "line number": [
      954
     ]
    },
    "isinstance": {
     "line number": [
      952,
      954
     ]
    },
    "list": {
     "line number": [
      952
     ]
    },
    "numpy.float64": {
     "line number": [
      952
     ]
    },
    "numpy.int64": {
     "line number": [
      952
     ]
    },
    "numpy.ndarray": {
     "line number": [
      952
     ]
    },
    "str": {
     "line number": [
      952,
      953
     ]
    },
    "tuple": {
     "line number": [
      952
     ]
    },
    "type": {
     "line number": [
      957
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.return_empty_sngl": {
  "data": {
   "shadows": "pycbc.tmpltbank.return_empty_sngl"
  },
  "type": "import"
 },
 "pycbc.io.hdf.return_search_summary": {
  "data": {
   "shadows": "pycbc.tmpltbank.return_search_summary"
  },
  "type": "import"
 },
 "pycbc.io.hdf.save_dict_to_hdf5": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": {
    "pycbc.io.hdf.h5py": {
     "line number": [
      937
     ]
    },
    "pycbc.io.hdf.recursively_save_dict_contents_to_group": {
     "line number": [
      938
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.hdf.sngl_statistic_dict": {
  "data": {
   "shadows": "pycbc.events.stat.sngl_statistic_dict"
  },
  "type": "import"
 },
 "pycbc.io.live": {
  "data": {},
  "type": "module"
 },
 "pycbc.io.live.GraceDb": {
  "data": {
   "shadows": "ligo.gracedb.rest.GraceDb"
  },
  "type": "import"
 },
 "pycbc.io.live.SingleCoincForGraceDB": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "object": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.io.live.SingleCoincForGraceDB.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      183
     ]
    },
    "enumerate": {
     "line number": [
      169
     ]
    },
    "getattr": {
     "line number": [
      217
     ]
    },
    "glue.ligolw.ligolw.Document": {
     "line number": [
      129
     ]
    },
    "glue.ligolw.ligolw.LIGO_LW": {
     "line number": [
      130
     ]
    },
    "glue.ligolw.lsctables.Coinc": {
     "line number": [
      152
     ]
    },
    "glue.ligolw.lsctables.CoincDef": {
     "line number": [
      141
     ]
    },
    "glue.ligolw.lsctables.CoincDefID": {
     "line number": [
      140
     ]
    },
    "glue.ligolw.lsctables.CoincDefTable": {
     "line number": [
      139
     ]
    },
    "glue.ligolw.lsctables.CoincID": {
     "line number": [
      150
     ]
    },
    "glue.ligolw.lsctables.CoincInspiral": {
     "line number": [
      225
     ]
    },
    "glue.ligolw.lsctables.CoincInspiralTable": {
     "line number": [
      224
     ]
    },
    "glue.ligolw.lsctables.CoincMap": {
     "line number": [
      199
     ]
    },
    "glue.ligolw.lsctables.CoincMapTable": {
     "line number": [
      165
     ]
    },
    "glue.ligolw.lsctables.CoincTable": {
     "line number": [
      151
     ]
    },
    "glue.ligolw.lsctables.New": {
     "line number": [
      139,
      151,
      164,
      165,
      224
     ]
    },
    "glue.ligolw.lsctables.SnglInspiralID": {
     "line number": [
      171
     ]
    },
    "glue.ligolw.lsctables.SnglInspiralTable": {
     "line number": [
      164
     ]
    },
    "glue.ligolw.lsctables.TimeSlideID": {
     "line number": [
      156
     ]
    },
    "glue.ligolw.utils.process.register_to_xmldoc": {
     "line number": [
      132
     ]
    },
    "int": {
     "line number": [
      246
     ]
    },
    "len": {
     "line number": [
      118,
      154,
      249
     ]
    },
    "list": {
     "line number": [
      122
     ]
    },
    "pycbc.io.live.lal": {
     "line number": [
      179,
      218,
      236,
      247,
      249,
      249
     ]
    },
    "pycbc.io.live.make_psd_xmldoc": {
     "line number": [
      252
     ]
    },
    "pycbc.io.live.numpy": {
     "line number": [
      211
     ]
    },
    "pycbc.io.live.pycbc": {
     "line number": [
      250
     ]
    },
    "pycbc.io.live.snr_series_to_xml": {
     "line number": [
      206
     ]
    },
    "pycbc.pnutils.mass1_mass2_to_mchirp_eta": {
     "line number": [
      188
     ]
    },
    "pycbc.pnutils.mass1_mass2_to_mtotal_eta": {
     "line number": [
      186
     ]
    },
    "pycbc.tmpltbank.return_empty_sngl": {
     "line number": [
      170
     ]
    },
    "pycbc.version.date": {
     "line number": [
      136
     ]
    },
    "pycbc.version.git_branch": {
     "line number": [
      135
     ]
    },
    "pycbc.version.git_hash": {
     "line number": [
      134
     ]
    },
    "set": {
     "line number": [
      122,
      122
     ]
    },
    "setattr": {
     "line number": [
      182,
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.live.SingleCoincForGraceDB.save": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "glue.ligolw.utils.write_filename": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.live.SingleCoincForGraceDB.upload": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      381
     ]
    },
    "abs": {
     "line number": [
      305
     ]
    },
    "ligo.gracedb.rest.GraceDb": {
     "line number": [
      339,
      340
     ]
    },
    "open": {
     "line number": [
      358
     ]
    },
    "pycbc.io.live.logging": {
     "line number": [
      346,
      350,
      359,
      382,
      385
     ]
    },
    "pycbc.io.live.matplotlib": {
     "line number": [
      285
     ]
    },
    "pycbc.io.live.numpy": {
     "line number": [
      323
     ]
    },
    "pycbc.io.live.pycbc": {
     "line number": [
      324
     ]
    },
    "pycbc.io.live.pylab": {
     "line number": [
      301,
      305,
      312,
      314,
      315,
      316,
      317,
      318,
      320,
      327,
      329,
      330,
      331,
      332,
      333,
      334
     ]
    },
    "pycbc.results.ifo_color": {
     "line number": [
      306,
      312,
      328
     ]
    },
    "pycbc.version.git_hash": {
     "line number": [
      363
     ]
    },
    "str": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.live.__all__": {
  "data": {
   "lineno": 389
  },
  "type": "constant"
 },
 "pycbc.io.live._build_series": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "Attributes": {
     "line number": [
      24
     ]
    },
    "getattr": {
     "line number": [
      30
     ]
    },
    "glue.ligolw.array.Array.build": {
     "line number": [
      37
     ]
    },
    "glue.ligolw.ligolw.Comment": {
     "line number": [
      26
     ]
    },
    "glue.ligolw.ligolw.Dim.tagName": {
     "line number": [
      39
     ]
    },
    "glue.ligolw.ligolw.LIGO_LW": {
     "line number": [
      23
     ]
    },
    "glue.ligolw.ligolw.Time.from_gps": {
     "line number": [
      27
     ]
    },
    "glue.ligolw.ligolw.sax.xmlreader.AttributesImpl": {
     "line number": [
      22
     ]
    },
    "glue.ligolw.param.Param.from_pyvalue": {
     "line number": [
      28
     ]
    },
    "len": {
     "line number": [
      32,
      35
     ]
    },
    "pycbc.io.live.numpy": {
     "line number": [
      31,
      32,
      32,
      35,
      35
     ]
    },
    "six.u": {
     "line number": [
      24
     ]
    },
    "str": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.live.ifo_color": {
  "data": {
   "shadows": "pycbc.results.ifo_color"
  },
  "type": "import"
 },
 "pycbc.io.live.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.io.live.ligolw": {
  "data": {
   "shadows": "glue.ligolw.ligolw"
  },
  "type": "import"
 },
 "pycbc.io.live.ligolw_array": {
  "data": {
   "shadows": "glue.ligolw.array"
  },
  "type": "import"
 },
 "pycbc.io.live.ligolw_param": {
  "data": {
   "shadows": "glue.ligolw.param"
  },
  "type": "import"
 },
 "pycbc.io.live.ligolw_process": {
  "data": {
   "shadows": "glue.ligolw.utils.process"
  },
  "type": "import"
 },
 "pycbc.io.live.ligolw_utils": {
  "data": {
   "shadows": "glue.ligolw.utils"
  },
  "type": "import"
 },
 "pycbc.io.live.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.io.live.lsctables": {
  "data": {
   "shadows": "glue.ligolw.lsctables"
  },
  "type": "import"
 },
 "pycbc.io.live.make_psd_xmldoc": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "Attributes": {
     "line number": [
      68,
      70
     ]
    },
    "glue.ligolw.ligolw.Document": {
     "line number": [
      64
     ]
    },
    "glue.ligolw.ligolw.LIGO_LW": {
     "line number": [
      70
     ]
    },
    "glue.ligolw.ligolw.sax.xmlreader.AttributesImpl": {
     "line number": [
      68
     ]
    },
    "glue.ligolw.param.Param.from_pyvalue": {
     "line number": [
      76
     ]
    },
    "pycbc.io.live._build_series": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.live.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pycbc.io.live.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.io.live.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.io.live.pnutils": {
  "data": {
   "shadows": "pycbc.pnutils"
  },
  "type": "import"
 },
 "pycbc.io.live.pycbc": {
  "data": {
   "shadows": "pycbc"
  },
  "type": "import"
 },
 "pycbc.io.live.pycbc_version": {
  "data": {
   "shadows": "pycbc.version"
  },
  "type": "import"
 },
 "pycbc.io.live.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "pycbc.io.live.return_empty_sngl": {
  "data": {
   "shadows": "pycbc.tmpltbank.return_empty_sngl"
  },
  "type": "import"
 },
 "pycbc.io.live.snr_series_to_xml": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "glue.ligolw.param.Param.build": {
     "line number": [
      56
     ]
    },
    "pycbc.io.live._build_series": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.live.unicode": {
  "data": {
   "shadows": "six.u"
  },
  "type": "import"
 },
 "pycbc.io.record": {
  "data": {
   "symbols_in_volume": {
    "float": {
     "line number": [
      41
     ]
    },
    "getattr": {
     "line number": [
      480,
      482
     ]
    },
    "glue.ligolw.types.ToNumPyType": {
     "line number": [
      51
     ]
    },
    "isinstance": {
     "line number": [
      41
     ]
    },
    "pycbc.conversions": {
     "line number": [
      479
     ]
    },
    "pycbc.coordinates": {
     "line number": [
      479
     ]
    },
    "pycbc.cosmology": {
     "line number": [
      479
     ]
    },
    "pycbc.io.record._modules_for_functionlib": {
     "line number": [
      481
     ]
    },
    "pycbc.io.record.ilwd_as_int": {
     "line number": [
      154
     ]
    },
    "pycbc.io.record.lstring_as_obj": {
     "line number": [
      153
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      40,
      41,
      51
     ]
    },
    "pycbc.io.record.re": {
     "line number": [
      171,
      174,
      194
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.io.record.Detector": {
  "data": {
   "shadows": "pycbc.detector.Detector"
  },
  "type": "import"
 },
 "pycbc.io.record.EMPTY_OBJECT": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pycbc.io.record.FieldArray": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": {
    "pycbc.io.record._fieldarray_functionlib": {
     "line number": [
      754
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.io.record.FieldArray.__array_finalize__": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      784
     ]
    },
    "any": {
     "line number": [
      790
     ]
    },
    "isinstance": {
     "line number": [
      790
     ]
    },
    "map": {
     "line number": [
      791
     ]
    },
    "pycbc.io.record.six": {
     "line number": [
      788
     ]
    },
    "str": {
     "line number": [
      791
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.__contains__": {
  "data": {
   "lineno": 897
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.__copy_attributes__": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      800
     ]
    },
    "pycbc.io.record.copy": {
     "line number": [
      800
     ]
    },
    "setattr": {
     "line number": [
      800
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.__getattribute__": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      809,
      814
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      808
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.__getbaseitem__": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": {
    "pycbc.io.record.numpy": {
     "line number": [
      841,
      848
     ]
    },
    "type": {
     "line number": [
      851
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.__getitem__": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      873
     ]
    },
    "dict": {
     "line number": [
      878
     ]
    },
    "dir": {
     "line number": [
      885
     ]
    },
    "eval": {
     "line number": [
      895
     ]
    },
    "getattr": {
     "line number": [
      884
     ]
    },
    "pycbc.io.record._numpy_function_lib": {
     "line number": [
      878
     ]
    },
    "pycbc.io.record.get_fields_from_arg": {
     "line number": [
      883
     ]
    },
    "pycbc.io.record.get_vars_from_arg": {
     "line number": [
      881
     ]
    },
    "set": {
     "line number": [
      885,
      890
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.__getsubitem__": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      858,
      864
     ]
    },
    "len": {
     "line number": [
      860
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.__new__": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": {
    "pycbc.io.record.FieldArray": {
     "line number": [
      760
     ]
    },
    "pycbc.io.record.default_empty": {
     "line number": [
      769
     ]
    },
    "super": {
     "line number": [
      760
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.__setitem__": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      825
     ]
    },
    "int": {
     "line number": [
      820
     ]
    },
    "len": {
     "line number": [
      829
     ]
    },
    "pycbc.io.record.FieldArray": {
     "line number": [
      824,
      834
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      820
     ]
    },
    "super": {
     "line number": [
      824,
      834
     ]
    },
    "tuple": {
     "line number": [
      822
     ]
    },
    "type": {
     "line number": [
      820,
      820
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.add_fields": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": {
    "pycbc.io.record.add_fields": {
     "line number": [
      1262
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.add_functions": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      995
     ]
    },
    "dict": {
     "line number": [
      997
     ]
    },
    "isinstance": {
     "line number": [
      991
     ]
    },
    "len": {
     "line number": [
      994,
      994
     ]
    },
    "six.string_types": {
     "line number": [
      991
     ]
    },
    "zip": {
     "line number": [
      997
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.add_methods": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": {
    "glue.ligolw.types.MethodType": {
     "line number": [
      946
     ]
    },
    "isinstance": {
     "line number": [
      942
     ]
    },
    "setattr": {
     "line number": [
      946
     ]
    },
    "six.string_types": {
     "line number": [
      942
     ]
    },
    "zip": {
     "line number": [
      945
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.add_properties": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      954
     ]
    },
    "isinstance": {
     "line number": [
      955
     ]
    },
    "property": {
     "line number": [
      959
     ]
    },
    "setattr": {
     "line number": [
      959
     ]
    },
    "six.string_types": {
     "line number": [
      955
     ]
    },
    "type": {
     "line number": [
      953,
      954
     ]
    },
    "zip": {
     "line number": [
      958
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.add_virtualfields": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      969
     ]
    },
    "six.string_types": {
     "line number": [
      969
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.addattr": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      933
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.aliases": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1231
     ]
    },
    "isinstance": {
     "line number": [
      1231
     ]
    },
    "property": {
     "line number": [
      1219
     ]
    },
    "tuple": {
     "line number": [
      1231
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.append": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1415
     ]
    },
    "dict": {
     "line number": [
      1422
     ]
    },
    "max": {
     "line number": [
      1424
     ]
    },
    "pycbc.io.record._isstring": {
     "line number": [
      1420
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      1414,
      1434,
      1435
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.del_functions": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1010
     ]
    },
    "six.string_types": {
     "line number": [
      1010
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.fieldnames": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1189
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.fields": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": {
    "list": {
     "line number": [
      1217,
      1217
     ]
    },
    "property": {
     "line number": [
      1213
     ]
    },
    "tuple": {
     "line number": [
      1217
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.from_arrays": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1015
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      1037
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.from_kwargs": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1073
     ]
    },
    "isinstance": {
     "line number": [
      1099,
      1100
     ]
    },
    "list": {
     "line number": [
      1100
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      1099,
      1102
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.from_ligolw_table": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1108
     ]
    },
    "getattr": {
     "line number": [
      1151,
      1152,
      1157
     ]
    },
    "int": {
     "line number": [
      1152
     ]
    },
    "list": {
     "line number": [
      1147
     ]
    },
    "pycbc.io.record._default_types_status": {
     "line number": [
      1149
     ]
    },
    "tuple": {
     "line number": [
      1151,
      1157
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.from_records": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1041
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      1068
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.functionlib": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1206
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.parse_boolargs": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1366,
      1377
     ]
    },
    "bool": {
     "line number": [
      1372,
      1373
     ]
    },
    "enumerate": {
     "line number": [
      1374
     ]
    },
    "isinstance": {
     "line number": [
      1351,
      1357
     ]
    },
    "len": {
     "line number": [
      1360,
      1363,
      1376
     ]
    },
    "list": {
     "line number": [
      1351
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      1370,
      1371,
      1372,
      1373,
      1384
     ]
    },
    "tuple": {
     "line number": [
      1357
     ]
    },
    "zip": {
     "line number": [
      1374
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.parse_parameters": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1440
     ]
    },
    "cls": {
     "line number": [
      1463
     ]
    },
    "float": {
     "line number": [
      1464
     ]
    },
    "isinstance": {
     "line number": [
      1459
     ]
    },
    "len": {
     "line number": [
      1464
     ]
    },
    "list": {
     "line number": [
      1461,
      1463,
      1466
     ]
    },
    "map": {
     "line number": [
      1461
     ]
    },
    "pycbc.io.record.get_needed_fieldnames": {
     "line number": [
      1466
     ]
    },
    "pycbc.waveform.parameters": {
     "line number": [
      1466
     ]
    },
    "six.string_types": {
     "line number": [
      1459
     ]
    },
    "str": {
     "line number": [
      1461
     ]
    },
    "zip": {
     "line number": [
      1463
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.sort": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      922,
      924
     ]
    },
    "isinstance": {
     "line number": [
      923
     ]
    },
    "list": {
     "line number": [
      923
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      921,
      925
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.to_array": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1185
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      1187
     ]
    },
    "six.string_types": {
     "line number": [
      1185
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.FieldArray.virtualfields": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1196
     ]
    },
    "tuple": {
     "line number": [
      1201,
      1203
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.ID_NOT_SET": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pycbc.io.record.VIRTUALFIELD_DTYPE": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pycbc.io.record.WaveformArray": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": {
    "pycbc.io.record._FieldArrayWithDefaults": {
     "line number": [
      1687
     ]
    },
    "pycbc.waveform.parameters.cbc_intrinsic_params.dtype_dict": {
     "line number": [
      1760
     ]
    },
    "pycbc.waveform.parameters.chi_eff": {
     "line number": [
      1766
     ]
    },
    "pycbc.waveform.parameters.eta": {
     "line number": [
      1764
     ]
    },
    "pycbc.waveform.parameters.extrinsic_params.dtype_dict": {
     "line number": [
      1761
     ]
    },
    "pycbc.waveform.parameters.mchirp": {
     "line number": [
      1764
     ]
    },
    "pycbc.waveform.parameters.mtotal": {
     "line number": [
      1764
     ]
    },
    "pycbc.waveform.parameters.primary_mass": {
     "line number": [
      1765
     ]
    },
    "pycbc.waveform.parameters.q": {
     "line number": [
      1765
     ]
    },
    "pycbc.waveform.parameters.secondary_mass": {
     "line number": [
      1765
     ]
    },
    "pycbc.waveform.parameters.spin1_a": {
     "line number": [
      1769
     ]
    },
    "pycbc.waveform.parameters.spin1_azimuthal": {
     "line number": [
      1769
     ]
    },
    "pycbc.waveform.parameters.spin1_polar": {
     "line number": [
      1769
     ]
    },
    "pycbc.waveform.parameters.spin2_a": {
     "line number": [
      1770
     ]
    },
    "pycbc.waveform.parameters.spin2_azimuthal": {
     "line number": [
      1770
     ]
    },
    "pycbc.waveform.parameters.spin2_polar": {
     "line number": [
      1770
     ]
    },
    "pycbc.waveform.parameters.spin_px": {
     "line number": [
      1767
     ]
    },
    "pycbc.waveform.parameters.spin_py": {
     "line number": [
      1767
     ]
    },
    "pycbc.waveform.parameters.spin_pz": {
     "line number": [
      1767
     ]
    },
    "pycbc.waveform.parameters.spin_sx": {
     "line number": [
      1768
     ]
    },
    "pycbc.waveform.parameters.spin_sy": {
     "line number": [
      1768
     ]
    },
    "pycbc.waveform.parameters.spin_sz": {
     "line number": [
      1768
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.io.record.WaveformArray.chi_eff": {
  "data": {
   "lineno": 1802,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1802
     ]
    },
    "pycbc.conversions.chi_eff": {
     "line number": [
      1805
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.eta": {
  "data": {
   "lineno": 1792,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1792
     ]
    },
    "pycbc.conversions.eta_from_mass1_mass2": {
     "line number": [
      1795
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.mchirp": {
  "data": {
   "lineno": 1797,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1797
     ]
    },
    "pycbc.conversions.mchirp_from_mass1_mass2": {
     "line number": [
      1800
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.mtotal": {
  "data": {
   "lineno": 1782,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1782
     ]
    },
    "pycbc.conversions.mtotal_from_mass1_mass2": {
     "line number": [
      1785
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.primary_mass": {
  "data": {
   "lineno": 1772,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1772
     ]
    },
    "pycbc.conversions.primary_mass": {
     "line number": [
      1775
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.q": {
  "data": {
   "lineno": 1787,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1787
     ]
    },
    "pycbc.conversions.q_from_mass1_mass2": {
     "line number": [
      1790
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.secondary_mass": {
  "data": {
   "lineno": 1777,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1777
     ]
    },
    "pycbc.conversions.secondary_mass": {
     "line number": [
      1780
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.spin1_a": {
  "data": {
   "lineno": 1844,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1844
     ]
    },
    "pycbc.coordinates.cartesian_to_spherical_rho": {
     "line number": [
      1847
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.spin1_azimuthal": {
  "data": {
   "lineno": 1850,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1850
     ]
    },
    "pycbc.coordinates.cartesian_to_spherical_azimuthal": {
     "line number": [
      1853
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.spin1_polar": {
  "data": {
   "lineno": 1856,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1856
     ]
    },
    "pycbc.coordinates.cartesian_to_spherical_polar": {
     "line number": [
      1859
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.spin2_a": {
  "data": {
   "lineno": 1862,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1862
     ]
    },
    "pycbc.coordinates.cartesian_to_spherical_rho": {
     "line number": [
      1865
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.spin2_azimuthal": {
  "data": {
   "lineno": 1868,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1868
     ]
    },
    "pycbc.coordinates.cartesian_to_spherical_azimuthal": {
     "line number": [
      1871
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.spin2_polar": {
  "data": {
   "lineno": 1874,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1874
     ]
    },
    "pycbc.coordinates.cartesian_to_spherical_polar": {
     "line number": [
      1877
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.spin_px": {
  "data": {
   "lineno": 1808,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1808
     ]
    },
    "pycbc.conversions.primary_spin": {
     "line number": [
      1811
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.spin_py": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1814
     ]
    },
    "pycbc.conversions.primary_spin": {
     "line number": [
      1817
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.spin_pz": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1820
     ]
    },
    "pycbc.conversions.primary_spin": {
     "line number": [
      1823
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.spin_sx": {
  "data": {
   "lineno": 1826,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1826
     ]
    },
    "pycbc.conversions.secondary_spin": {
     "line number": [
      1829
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.spin_sy": {
  "data": {
   "lineno": 1832,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1832
     ]
    },
    "pycbc.conversions.secondary_spin": {
     "line number": [
      1835
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.WaveformArray.spin_sz": {
  "data": {
   "lineno": 1838,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1838
     ]
    },
    "pycbc.conversions.secondary_spin": {
     "line number": [
      1841
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record._FieldArrayWithDefaults": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": {
    "pycbc.io.record.FieldArray": {
     "line number": [
      1518
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.io.record._FieldArrayWithDefaults.__new__": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1583
     ]
    },
    "cls": {
     "line number": [
      1594,
      1611,
      1611
     ]
    },
    "cls.default_fields": {
     "line number": [
      1584
     ]
    },
    "dict": {
     "line number": [
      1596
     ]
    },
    "enumerate": {
     "line number": [
      1596
     ]
    },
    "isinstance": {
     "line number": [
      1588,
      1606,
      1608
     ]
    },
    "len": {
     "line number": [
      1599
     ]
    },
    "list": {
     "line number": [
      1597,
      1603,
      1606,
      1608
     ]
    },
    "pycbc.io.record._FieldArrayWithDefaults": {
     "line number": [
      1611
     ]
    },
    "pycbc.io.record.get_needed_fieldnames": {
     "line number": [
      1597
     ]
    },
    "six.string_types": {
     "line number": [
      1588
     ]
    },
    "super": {
     "line number": [
      1611
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record._FieldArrayWithDefaults.add_default_fields": {
  "data": {
   "lineno": 1614,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1637
     ]
    },
    "enumerate": {
     "line number": [
      1637
     ]
    },
    "isinstance": {
     "line number": [
      1631
     ]
    },
    "len": {
     "line number": [
      1640
     ]
    },
    "list": {
     "line number": [
      1638
     ]
    },
    "pycbc.io.record.default_empty": {
     "line number": [
      1645
     ]
    },
    "pycbc.io.record.get_needed_fieldnames": {
     "line number": [
      1638
     ]
    },
    "six.string_types": {
     "line number": [
      1631
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record._FieldArrayWithDefaults.default_fields": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1558
     ]
    },
    "cls._staticfields.copy": {
     "line number": [
      1568
     ]
    },
    "cls._virtualfields": {
     "line number": [
      1571
     ]
    },
    "pycbc.io.record.VIRTUALFIELD_DTYPE": {
     "line number": [
      1570
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record._FieldArrayWithDefaults.parse_parameters": {
  "data": {
   "lineno": 1649,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1649
     ]
    },
    "cls": {
     "line number": [
      1676,
      1677
     ]
    },
    "dict": {
     "line number": [
      1672
     ]
    },
    "pycbc.waveform.parameters": {
     "line number": [
      1677
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record._FieldArrayWithDefaults.parse_parameters.ModifiedArray": {
  "data": {
   "lineno": 1674,
   "symbols_in_volume": {
    "cls": {
     "line number": [
      1674
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.io.record.__all__": {
  "data": {
   "lineno": 1881
  },
  "type": "constant"
 },
 "pycbc.io.record._default_types_status": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "pycbc.io.record._ensure_array_list": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      301
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      301,
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record._fieldarray_functionlib": {
  "data": {
   "lineno": 480
  },
  "type": "constant"
 },
 "pycbc.io.record._fieldparser": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "pycbc.io.record._instfieldparser": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "pycbc.io.record._isstring": {
  "data": {
   "lineno": 1468,
   "symbols_in_volume": {
    "pycbc.io.record.numpy": {
     "line number": [
      1472,
      1472
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record._modules_for_functionlib": {
  "data": {
   "lineno": 479
  },
  "type": "constant"
 },
 "pycbc.io.record._numpy_function_lib": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pycbc.io.record._pyparser": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "pycbc.io.record.add_fields": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      418
     ]
    },
    "any": {
     "line number": [
      408
     ]
    },
    "dict": {
     "line number": [
      425
     ]
    },
    "enumerate": {
     "line number": [
      409,
      444
     ]
    },
    "isinstance": {
     "line number": [
      395,
      401
     ]
    },
    "len": {
     "line number": [
      405,
      454,
      457
     ]
    },
    "list": {
     "line number": [
      395,
      463
     ]
    },
    "pycbc.io.record._ensure_array_list": {
     "line number": [
      398
     ]
    },
    "pycbc.io.record.merge_arrays": {
     "line number": [
      455,
      465
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      457
     ]
    },
    "six.string_types": {
     "line number": [
      401
     ]
    },
    "type": {
     "line number": [
      466
     ]
    },
    "zip": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.aliases_from_fields": {
  "data": {
   "lineno": 1475,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      1479
     ]
    },
    "isinstance": {
     "line number": [
      1479
     ]
    },
    "tuple": {
     "line number": [
      1479
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.combine_fields": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      288
     ]
    },
    "list": {
     "line number": [
      288
     ]
    },
    "pycbc.io.record.get_dtype_descr": {
     "line number": [
      293
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.conversions": {
  "data": {
   "shadows": "pycbc.conversions"
  },
  "type": "import"
 },
 "pycbc.io.record.coordinates": {
  "data": {
   "shadows": "pycbc.coordinates"
  },
  "type": "import"
 },
 "pycbc.io.record.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycbc.io.record.cosmology": {
  "data": {
   "shadows": "pycbc.cosmology"
  },
  "type": "import"
 },
 "pycbc.io.record.default_empty": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "pycbc.io.record.numpy": {
     "line number": [
      80
     ]
    },
    "pycbc.io.record.set_default_empty": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.default_strlen": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "pycbc.io.record._default_types_status": {
     "line number": [
      146,
      148,
      149,
      150
     ]
    },
    "pycbc.io.record.ilwd_as_int": {
     "line number": [
      149
     ]
    },
    "pycbc.io.record.lstring_as_obj": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.fields_from_names": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1499,
      1505
     ]
    },
    "dict": {
     "line number": [
      1493
     ]
    },
    "isinstance": {
     "line number": [
      1490
     ]
    },
    "pycbc.io.record.aliases_from_fields": {
     "line number": [
      1492
     ]
    },
    "six.string_types": {
     "line number": [
      1490
     ]
    },
    "zip": {
     "line number": [
      1493
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.get_dtype_descr": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "pycbc.io.record.get_fields_from_arg": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "pycbc.io.record._fieldparser": {
     "line number": [
      188
     ]
    },
    "set": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.get_instance_fields_from_arg": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "pycbc.io.record._instfieldparser": {
     "line number": [
      201
     ]
    },
    "set": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.get_needed_fieldnames": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      248
     ]
    },
    "TypeError": {
     "line number": [
      254
     ]
    },
    "dir": {
     "line number": [
      235
     ]
    },
    "getattr": {
     "line number": [
      247,
      250
     ]
    },
    "isinstance": {
     "line number": [
      228
     ]
    },
    "list": {
     "line number": [
      235
     ]
    },
    "pycbc.io.record.get_fields_from_arg": {
     "line number": [
      233
     ]
    },
    "pycbc.io.record.get_instance_fields_from_arg": {
     "line number": [
      258
     ]
    },
    "pycbc.io.record.inspect": {
     "line number": [
      253
     ]
    },
    "set": {
     "line number": [
      224,
      231,
      235,
      235
     ]
    },
    "six.string_types": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.get_vars_from_arg": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "pycbc.io.record._pyparser": {
     "line number": [
      180
     ]
    },
    "set": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.ilwd_as_int": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "int": {
     "line number": [
      136
     ]
    },
    "pycbc.io.record._default_types_status": {
     "line number": [
      135,
      137,
      139
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pycbc.io.record.ligolw_types": {
  "data": {
   "shadows": "glue.ligolw.types"
  },
  "type": "import"
 },
 "pycbc.io.record.lstring_as_obj": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "pycbc.io.record._default_types_status": {
     "line number": [
      123,
      126,
      127,
      128
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      125,
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.merge_arrays": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      340
     ]
    },
    "all": {
     "line number": [
      339
     ]
    },
    "enumerate": {
     "line number": [
      346
     ]
    },
    "pycbc.io.record._ensure_array_list": {
     "line number": [
      338
     ]
    },
    "pycbc.io.record.combine_fields": {
     "line number": [
      343
     ]
    },
    "pycbc.io.record.numpy": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.io.record.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.io.record.parameters": {
  "data": {
   "shadows": "pycbc.waveform.parameters"
  },
  "type": "import"
 },
 "pycbc.io.record.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pycbc.io.record.set_default_empty": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "pycbc.io.record.EMPTY_OBJECT": {
     "line number": [
      70
     ]
    },
    "pycbc.io.record.ID_NOT_SET": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.io.record.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pycbc.io.record.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "pycbc.io.record.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pycbc.io.record.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pycbc.libutils": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.libutils.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "pycbc.libutils.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "pycbc.libutils.find_library": {
  "data": {
   "shadows": "ctypes.util.find_library"
  },
  "type": "import"
 },
 "pycbc.libutils.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "pycbc.libutils.get_ctypes_library": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      163
     ]
    },
    "ctypes.util.find_library": {
     "line number": [
      173
     ]
    },
    "pycbc.libutils.ctypes": {
     "line number": [
      180,
      182
     ]
    },
    "pycbc.libutils.get_libpath_from_dirlist": {
     "line number": [
      168
     ]
    },
    "pycbc.libutils.os": {
     "line number": [
      158,
      159
     ]
    },
    "pycbc.libutils.pkg_config_libdirs": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.libutils.get_libpath_from_dirlist": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      139
     ]
    },
    "collections.deque": {
     "line number": [
      127
     ]
    },
    "len": {
     "line number": [
      128,
      142
     ]
    },
    "pycbc.libutils.fnmatch": {
     "line number": [
      134,
      135,
      136,
      137
     ]
    },
    "pycbc.libutils.os": {
     "line number": [
      133,
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.libutils.getoutput": {
  "data": {
   "shadows": "commands.getoutput"
  },
  "type": "import"
 },
 "pycbc.libutils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.libutils.pkg_config": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "commands.getoutput": {
     "line number": [
      58
     ]
    },
    "len": {
     "line number": [
      55
     ]
    },
    "print": {
     "line number": [
      51
     ]
    },
    "pycbc.libutils.os": {
     "line number": [
      48
     ]
    },
    "pycbc.libutils.sys": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.libutils.pkg_config_check_exists": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "pycbc.libutils.os": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.libutils.pkg_config_header_strings": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "pycbc.libutils.pkg_config": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.libutils.pkg_config_libdirs": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      108
     ]
    },
    "commands.getoutput": {
     "line number": [
      111
     ]
    },
    "open": {
     "line number": [
      97
     ]
    },
    "print": {
     "line number": [
      100
     ]
    },
    "pycbc.libutils.os": {
     "line number": [
      92,
      97,
      102
     ]
    },
    "pycbc.libutils.pkg_config_check_exists": {
     "line number": [
      107
     ]
    },
    "pycbc.libutils.subprocess": {
     "line number": [
      98
     ]
    },
    "pycbc.libutils.sys": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.libutils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pycbc.libutils.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pycbc.libutils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pycbc.loaded_modules": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "pycbc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.makedir": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "pycbc.os": {
     "line number": [
      78,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.multiprocess_cache_dir": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      173
     ]
    },
    "id": {
     "line number": [
      170
     ]
    },
    "pycbc._cache_dir_path": {
     "line number": [
      170
     ]
    },
    "pycbc.multiprocessing": {
     "line number": [
      170
     ]
    },
    "pycbc.os": {
     "line number": [
      170,
      171,
      172
     ]
    },
    "str": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pycbc.noise": {
  "data": {},
  "type": "module"
 },
 "pycbc.noise.gaussian": {
  "data": {},
  "type": "module"
 },
 "pycbc.noise.gaussian.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.noise.gaussian.SimNoise": {
  "data": {
   "shadows": "lalsimulation.SimNoise"
  },
  "type": "import"
 },
 "pycbc.noise.gaussian.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.noise.gaussian.complex_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.complex_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.noise.gaussian.frequency_noise_from_psd": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "len": {
     "line number": [
      68
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      71
     ]
    },
    "pycbc.types.complex_same_precision_as": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.noise.gaussian.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.noise.gaussian.noise_from_psd": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      109
     ]
    },
    "int": {
     "line number": [
      104
     ]
    },
    "lalsimulation.SimNoise": {
     "line number": [
      117,
      125
     ]
    },
    "len": {
     "line number": [
      108
     ]
    },
    "pycbc.noise.gaussian.lal": {
     "line number": [
      102
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      97,
      114
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      97,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.noise.gaussian.noise_from_string": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "int": {
     "line number": [
      158,
      160
     ]
    },
    "pycbc.noise.gaussian.noise_from_psd": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.noise.gaussian.numpy.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "pycbc.noise.gaussian.pycbc.psd": {
  "data": {
   "shadows": "pycbc.psd"
  },
  "type": "import"
 },
 "pycbc.noise.gaussian.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.noise.reproduceable": {
  "data": {},
  "type": "module"
 },
 "pycbc.noise.reproduceable.BLOCK_SIZE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pycbc.noise.reproduceable.FILTER_LENGTH": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pycbc.noise.reproduceable.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.noise.reproduceable.RandomState": {
  "data": {
   "shadows": "numpy.random.RandomState"
  },
  "type": "import"
 },
 "pycbc.noise.reproduceable.SAMPLE_RATE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pycbc.noise.reproduceable.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.noise.reproduceable.block": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "numpy.random.RandomState": {
     "line number": [
      49
     ]
    },
    "pycbc.noise.reproduceable.BLOCK_SIZE": {
     "line number": [
      48
     ]
    },
    "pycbc.noise.reproduceable.SAMPLE_RATE": {
     "line number": [
      48,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.noise.reproduceable.colored_noise": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "int": {
     "line number": [
      109,
      121,
      150
     ]
    },
    "len": {
     "line number": [
      110,
      115
     ]
    },
    "pycbc.noise.reproduceable.FILTER_LENGTH": {
     "line number": [
      121,
      122,
      125,
      130,
      137,
      139,
      146,
      155,
      155
     ]
    },
    "pycbc.noise.reproduceable.SAMPLE_RATE": {
     "line number": [
      109,
      130,
      137,
      138,
      139,
      146
     ]
    },
    "pycbc.noise.reproduceable.normal": {
     "line number": [
      155
     ]
    },
    "pycbc.types.complex_same_precision_as": {
     "line number": [
      133
     ]
    },
    "six.moves.range": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.noise.reproduceable.complex_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.complex_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.noise.reproduceable.noise_from_string": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "int": {
     "line number": [
      190
     ]
    },
    "pycbc.noise.reproduceable.FILTER_LENGTH": {
     "line number": [
      189
     ]
    },
    "pycbc.noise.reproduceable.SAMPLE_RATE": {
     "line number": [
      190
     ]
    },
    "pycbc.noise.reproduceable.colored_noise": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.noise.reproduceable.normal": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "int": {
     "line number": [
      71,
      72
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      78
     ]
    },
    "pycbc.noise.reproduceable.BLOCK_SIZE": {
     "line number": [
      71,
      72,
      75
     ]
    },
    "pycbc.noise.reproduceable.SAMPLE_RATE": {
     "line number": [
      80
     ]
    },
    "pycbc.noise.reproduceable.block": {
     "line number": [
      79
     ]
    },
    "pycbc.noise.reproduceable.numpy": {
     "line number": [
      79,
      79
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.noise.reproduceable.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.noise.reproduceable.pycbc.psd": {
  "data": {
   "shadows": "pycbc.psd"
  },
  "type": "import"
 },
 "pycbc.noise.reproduceable.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "pycbc.opt": {
  "data": {
   "symbols_in_volume": {
    "int": {
     "line number": [
      107
     ]
    },
    "pycbc.opt.HAVE_GETCONF": {
     "line number": [
      109
     ]
    },
    "pycbc.opt.LEVEL2_CACHE_SIZE": {
     "line number": [
      108
     ]
    },
    "pycbc.opt._USE_SUBPROCESS": {
     "line number": [
      110
     ]
    },
    "pycbc.opt.getconf": {
     "line number": [
      118,
      119,
      120,
      121,
      122,
      123,
      124,
      125,
      126
     ]
    },
    "pycbc.opt.logging": {
     "line number": [
      108
     ]
    },
    "pycbc.opt.os": {
     "line number": [
      30,
      30,
      106,
      107
     ]
    },
    "pycbc.opt.pycbc": {
     "line number": [
      46
     ]
    },
    "pycbc.opt.sys": {
     "line number": [
      32,
      35
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.opt.HAVE_GETCONF": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pycbc.opt.LEVEL1_DCACHE_ASSOC": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "pycbc.opt.LEVEL1_DCACHE_LINESIZE": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "pycbc.opt.LEVEL1_DCACHE_SIZE": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "pycbc.opt.LEVEL2_CACHE_ASSOC": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "pycbc.opt.LEVEL2_CACHE_LINESIZE": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "pycbc.opt.LEVEL2_CACHE_SIZE": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "pycbc.opt.LEVEL3_CACHE_ASSOC": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "pycbc.opt.LEVEL3_CACHE_LINESIZE": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "pycbc.opt.LEVEL3_CACHE_SIZE": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "pycbc.opt.LimitedSizeDict": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.opt.LimitedSizeDict.__init__": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "collections.OrderedDict.__init__": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.opt.LimitedSizeDict.__setitem__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "collections.OrderedDict.__setitem__": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.opt.LimitedSizeDict._check_size_limit": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "len": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.opt.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pycbc.opt._USE_SUBPROCESS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pycbc.opt.commands": {
  "data": {
   "shadows": "commands"
  },
  "type": "import"
 },
 "pycbc.opt.getconf": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "int": {
     "line number": [
      116
     ]
    },
    "pycbc.opt.commands": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.opt.insert_optimization_option_group": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "pycbc.opt.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.opt.omp_flags": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pycbc.opt.omp_libs": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pycbc.opt.omp_support": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pycbc.opt.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.opt.pycbc": {
  "data": {
   "shadows": "pycbc"
  },
  "type": "import"
 },
 "pycbc.opt.simd_intel_intrin_support": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "pycbc.opt.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pycbc.opt.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pycbc.opt.verify_optimization_options": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "pycbc.opt.logging": {
     "line number": [
      168,
      174,
      179,
      191,
      195
     ]
    },
    "pycbc.opt.os": {
     "line number": [
      171,
      187,
      188
     ]
    },
    "pycbc.opt.sys": {
     "line number": [
      169,
      176,
      181,
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.pnutils": {
  "data": {
   "symbols_in_volume": {
    "pycbc.pnutils._get_final_freq": {
     "line number": [
      407
     ]
    },
    "pycbc.pnutils._get_freq": {
     "line number": [
      349
     ]
    },
    "pycbc.pnutils._get_imr_duration": {
     "line number": [
      527
     ]
    },
    "pycbc.pnutils._meco_frequency": {
     "line number": [
      647
     ]
    },
    "pycbc.pnutils.f_BKLISCO": {
     "line number": [
      445
     ]
    },
    "pycbc.pnutils.f_ERD": {
     "line number": [
      443
     ]
    },
    "pycbc.pnutils.f_FRD": {
     "line number": [
      446
     ]
    },
    "pycbc.pnutils.f_LRD": {
     "line number": [
      447
     ]
    },
    "pycbc.pnutils.f_LightRing": {
     "line number": [
      442
     ]
    },
    "pycbc.pnutils.f_SchwarzISCO": {
     "line number": [
      441
     ]
    },
    "pycbc.pnutils.get_freq": {
     "line number": [
      453,
      456,
      459,
      462,
      464,
      466,
      468,
      470,
      472,
      474,
      476
     ]
    },
    "pycbc.pnutils.hybrid_meco_frequency": {
     "line number": [
      451
     ]
    },
    "pycbc.pnutils.meco_frequency": {
     "line number": [
      449
     ]
    },
    "pycbc.pnutils.meco_velocity": {
     "line number": [
      793
     ]
    },
    "pycbc.pnutils.numpy": {
     "line number": [
      349,
      407,
      527,
      647
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.pnutils.A0": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "pycbc.conversions._a0": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.A3": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "pycbc.conversions._a3": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils._dtdv_coeffs": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": {
    "pycbc.pnutils.lal": {
     "line number": [
      663,
      665,
      668
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils._dtdv_cutoff_velocity": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": {
    "dtdv_func": {
     "line number": [
      684,
      685
     ]
    },
    "pycbc.pnutils._dtdv_coeffs": {
     "line number": [
      673
     ]
    },
    "scipy.optimize.bisect": {
     "line number": [
      685
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils._dtdv_cutoff_velocity.dtdv_func": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": {
    "pycbc.pnutils.numpy": {
     "line number": [
      677
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils._energy_coeffs": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": {
    "pow": {
     "line number": [
      601,
      603,
      603,
      604,
      610
     ]
    },
    "pycbc.pnutils.lal": {
     "line number": [
      604
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils._get_final_freq": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "float": {
     "line number": [
      401,
      402,
      404,
      404
     ]
    },
    "int": {
     "line number": [
      404
     ]
    },
    "pycbc.pnutils.lal": {
     "line number": [
      401,
      402
     ]
    },
    "pycbc.pnutils.lalsimulation": {
     "line number": [
      403
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils._get_freq": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "float": {
     "line number": [
      343,
      344,
      346,
      346
     ]
    },
    "int": {
     "line number": [
      346
     ]
    },
    "pycbc.pnutils.lal": {
     "line number": [
      343,
      344
     ]
    },
    "pycbc.pnutils.lalsimulation": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils._get_imr_duration": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      522
     ]
    },
    "float": {
     "line number": [
      508,
      508,
      508,
      508,
      509
     ]
    },
    "pycbc.pnutils.lal": {
     "line number": [
      513,
      513,
      516,
      516,
      520,
      520
     ]
    },
    "pycbc.pnutils.lalsimulation": {
     "line number": [
      511,
      512,
      515,
      519
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils._meco_frequency": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": {
    "pycbc.pnutils.meco_velocity": {
     "line number": [
      645
     ]
    },
    "pycbc.pnutils.velocity_to_frequency": {
     "line number": [
      645
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils._vec_get_final_freq": {
  "data": {
   "lineno": 407
  },
  "type": "constant"
 },
 "pycbc.pnutils._vec_get_freq": {
  "data": {
   "lineno": 349
  },
  "type": "constant"
 },
 "pycbc.pnutils.bisect": {
  "data": {
   "shadows": "scipy.optimize.bisect"
  },
  "type": "import"
 },
 "pycbc.pnutils.brentq": {
  "data": {
   "shadows": "scipy.optimize.brentq"
  },
  "type": "import"
 },
 "pycbc.pnutils.chirp_distance": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "pycbc.conversions.chirp_distance": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.conversions": {
  "data": {
   "shadows": "pycbc.conversions"
  },
  "type": "import"
 },
 "pycbc.pnutils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.pnutils.energy": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": {
    "len": {
     "line number": [
      769
     ]
    },
    "pycbc.pnutils.energy_coefficients": {
     "line number": [
      765
     ]
    },
    "pycbc.pnutils.mass1_mass2_to_mchirp_eta": {
     "line number": [
      766
     ]
    },
    "pycbc.pnutils.numpy": {
     "line number": [
      769
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.energy_coefficients": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      695,
      700
     ]
    },
    "pycbc.pnutils.lal": {
     "line number": [
      733,
      733
     ]
    },
    "pycbc.pnutils.mass1_mass2_to_mchirp_eta": {
     "line number": [
      715
     ]
    },
    "pycbc.pnutils.numpy": {
     "line number": [
      717
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.eta_mass1_to_mass2": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "pycbc.conversions.mass_from_knownmass_eta": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.f_BKLISCO": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "pycbc.pnutils.f_SchwarzISCO": {
     "line number": [
      238
     ]
    },
    "pycbc.pnutils.numpy": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.f_ERD": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "pycbc.pnutils.lal": {
     "line number": [
      274,
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.f_FRD": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "pycbc.pnutils.lal": {
     "line number": [
      298,
      298
     ]
    },
    "pycbc.pnutils.mass1_mass2_to_mtotal_eta": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.f_LRD": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "pycbc.pnutils.f_FRD": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.f_LightRing": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "pycbc.pnutils.lal": {
     "line number": [
      255,
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.f_SchwarzISCO": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "pycbc.conversions.f_schwarzchild_isco": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.findchirp_chirptime": {
  "data": {
   "shadows": "pycbc.waveform.spa_tmplt.findchirp_chirptime"
  },
  "type": "import"
 },
 "pycbc.pnutils.frequency_cutoff_from_name": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "pycbc.pnutils.named_frequency_cutoffs": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.frequency_to_velocity": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "pycbc.conversions.frequency_to_velocity": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.get_beta_sigma_from_aligned_spins": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "pycbc.pnutils.get_final_freq": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "pycbc.pnutils._vec_get_final_freq": {
     "line number": [
      435
     ]
    },
    "pycbc.pnutils.lalsimulation": {
     "line number": [
      434
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.get_freq": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      374
     ]
    },
    "pycbc.pnutils._vec_get_freq": {
     "line number": [
      375
     ]
    },
    "pycbc.pnutils.lalsimulation": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.get_imr_duration": {
  "data": {
   "lineno": 527
  },
  "type": "constant"
 },
 "pycbc.pnutils.get_inspiral_tf": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "NameError": {
     "line number": [
      547
     ]
    },
    "Params": {
     "line number": [
      539
     ]
    },
    "TypeError": {
     "line number": [
      547
     ]
    },
    "ValueError": {
     "line number": [
      579
     ]
    },
    "dict": {
     "line number": [
      546
     ]
    },
    "eval": {
     "line number": [
      545
     ]
    },
    "float": {
     "line number": [
      557,
      557,
      558,
      568,
      568,
      577,
      577
     ]
    },
    "pycbc.pnutils.f_SchwarzISCO": {
     "line number": [
      554
     ]
    },
    "pycbc.pnutils.get_final_freq": {
     "line number": [
      561,
      570
     ]
    },
    "pycbc.pnutils.lalsimulation": {
     "line number": [
      566,
      575
     ]
    },
    "pycbc.pnutils.numpy": {
     "line number": [
      555,
      555,
      555,
      557,
      562,
      562,
      562,
      565,
      572,
      572,
      572,
      574
     ]
    },
    "pycbc.pnutils.solar_mass_to_kg": {
     "line number": [
      567,
      567,
      576,
      576
     ]
    },
    "pycbc.waveform.spa_tmplt.findchirp_chirptime": {
     "line number": [
      557
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.get_inspiral_tf.Params": {
  "data": {
   "lineno": 537
  },
  "type": "class"
 },
 "pycbc.pnutils.hybridEnergy": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": {
    "float": {
     "line number": [
      843,
      843,
      844
     ]
    },
    "pycbc.pnutils.numpy": {
     "line number": [
      840,
      853
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.hybrid_meco_frequency": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": {
    "pycbc.pnutils.hybrid_meco_velocity": {
     "line number": [
      951
     ]
    },
    "pycbc.pnutils.velocity_to_frequency": {
     "line number": [
      951
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.hybrid_meco_velocity": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": {
    "pycbc.pnutils.hybridEnergy": {
     "line number": [
      917
     ]
    },
    "pycbc.pnutils.kerr_lightring_velocity": {
     "line number": [
      915
     ]
    },
    "scipy.optimize.minimize": {
     "line number": [
      917
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.kerr_lightring": {
  "data": {
   "lineno": 800
  },
  "type": "function"
 },
 "pycbc.pnutils.kerr_lightring_velocity": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": {
    "pycbc.pnutils.kerr_lightring": {
     "line number": [
      809,
      811
     ]
    },
    "scipy.optimize.brentq": {
     "line number": [
      809,
      811
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.pnutils.lalsimulation": {
  "data": {
   "shadows": "lalsimulation"
  },
  "type": "import"
 },
 "pycbc.pnutils.mass1_mass2_spin1z_spin2z_to_beta_sigma_gamma": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "pycbc.pnutils.get_beta_sigma_from_aligned_spins": {
     "line number": [
      143
     ]
    },
    "pycbc.pnutils.mass1_mass2_to_mtotal_eta": {
     "line number": [
      138
     ]
    },
    "pycbc.pnutils.numpy": {
     "line number": [
      141,
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.mass1_mass2_to_mchirp_eta": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "pycbc.conversions.eta_from_mass1_mass2": {
     "line number": [
      55
     ]
    },
    "pycbc.conversions.mchirp_from_mass1_mass2": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.mass1_mass2_to_mtotal_eta": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "pycbc.conversions.eta_from_mass1_mass2": {
     "line number": [
      45
     ]
    },
    "pycbc.conversions.mtotal_from_mass1_mass2": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.mass1_mass2_to_tau0_tau3": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "pycbc.conversions.tau0_from_mass1_mass2": {
     "line number": [
      123
     ]
    },
    "pycbc.conversions.tau3_from_mass1_mass2": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.mchirp_eta_to_mass1_mass2": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "pycbc.conversions.mass1_from_mtotal_eta": {
     "line number": [
      60
     ]
    },
    "pycbc.conversions.mass2_from_mtotal_eta": {
     "line number": [
      61
     ]
    },
    "pycbc.conversions.mtotal_from_mchirp_eta": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.mchirp_mass1_to_mass2": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "pycbc.conversions.mass2_from_mchirp_mass1": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.mchirp_q_to_mass1_mass2": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "pycbc.conversions.eta_from_q": {
     "line number": [
      107
     ]
    },
    "pycbc.conversions.mass1_from_mchirp_eta": {
     "line number": [
      108
     ]
    },
    "pycbc.conversions.mass2_from_mchirp_eta": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.meco2": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": {
    "pycbc.pnutils.energy_coefficients": {
     "line number": [
      775
     ]
    },
    "scipy.optimize.bisect": {
     "line number": [
      784
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.meco2.test": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": {
    "len": {
     "line number": [
      779
     ]
    },
    "pycbc.pnutils.numpy": {
     "line number": [
      779
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.meco_frequency": {
  "data": {
   "lineno": 647
  },
  "type": "constant"
 },
 "pycbc.pnutils.meco_velocity": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": {
    "pycbc.pnutils._energy_coeffs": {
     "line number": [
      635
     ]
    },
    "scipy.optimize.bisect": {
     "line number": [
      640
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.meco_velocity.eprime": {
  "data": {
   "lineno": 636
  },
  "type": "function"
 },
 "pycbc.pnutils.megaparsecs_to_meters": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "pycbc.pnutils.parsecs_to_meters": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "pycbc.pnutils.mtotal_eta_to_mass1_mass2": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "pycbc.conversions.mass1_from_mtotal_eta": {
     "line number": [
      49
     ]
    },
    "pycbc.conversions.mass2_from_mtotal_eta": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.named_frequency_cutoffs": {
  "data": {
   "lineno": 439
  },
  "type": "constant"
 },
 "pycbc.pnutils.nearest_larger_binary_number": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "int": {
     "line number": [
      38
     ]
    },
    "pycbc.pnutils.numpy": {
     "line number": [
      38,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.pnutils.parsecs_to_meters": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "pycbc.pnutils.lal": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.solar_mass_to_kg": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "pycbc.pnutils.lal": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.t2_cutoff_frequency": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": {
    "pycbc.pnutils.t2_cutoff_velocity": {
     "line number": [
      791
     ]
    },
    "pycbc.pnutils.velocity_to_frequency": {
     "line number": [
      791
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.t2_cutoff_velocity": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": {
    "min": {
     "line number": [
      788
     ]
    },
    "pycbc.pnutils._dtdv_cutoff_velocity": {
     "line number": [
      788
     ]
    },
    "pycbc.pnutils.meco_velocity": {
     "line number": [
      788
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.t4_cutoff_frequency": {
  "data": {
   "lineno": 794
  },
  "type": "constant"
 },
 "pycbc.pnutils.t4_cutoff_velocity": {
  "data": {
   "lineno": 793
  },
  "type": "constant"
 },
 "pycbc.pnutils.tau0_tau3_to_mass1_mass2": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "pycbc.pnutils.mtotal_eta_to_mass1_mass2": {
     "line number": [
      134
     ]
    },
    "pycbc.pnutils.tau0_tau3_to_mtotal_eta": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.tau0_tau3_to_mtotal_eta": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "pycbc.conversions.eta_from_tau0_tau3": {
     "line number": [
      129
     ]
    },
    "pycbc.conversions.mtotal_from_tau0_tau3": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pnutils.velocity_to_frequency": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "pycbc.conversions.velocity_to_frequency": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pool": {
  "data": {},
  "type": "module"
 },
 "pycbc.pool.BroadcastPool": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "pycbc.pool.BroadcastPool.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "pycbc.pool.BroadcastPool": {
     "line number": [
      56
     ]
    },
    "pycbc.pool._noint": {
     "line number": [
      55
     ]
    },
    "pycbc.pool._numdone": {
     "line number": [
      54
     ]
    },
    "pycbc.pool._process_lock": {
     "line number": [
      53
     ]
    },
    "pycbc.pool._shutdown_pool": {
     "line number": [
      57
     ]
    },
    "pycbc.pool.atexit": {
     "line number": [
      57
     ]
    },
    "pycbc.pool.functools": {
     "line number": [
      55
     ]
    },
    "super": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pool.BroadcastPool.__len__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "len": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pool.BroadcastPool.allmap": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "fcn": {
     "line number": [
      87
     ]
    },
    "len": {
     "line number": [
      87
     ]
    },
    "pycbc.pool._lockstep_fcn": {
     "line number": [
      86
     ]
    },
    "pycbc.pool._numdone": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pool.BroadcastPool.broadcast": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "fcn": {
     "line number": [
      72
     ]
    },
    "len": {
     "line number": [
      72,
      72
     ]
    },
    "pycbc.pool._lockstep_fcn": {
     "line number": [
      72
     ]
    },
    "pycbc.pool._numdone": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pool.BroadcastPool.map": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "KeyboardInterrupt": {
     "line number": [
      109,
      112
     ]
    },
    "multiprocessing.TimeoutError": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pool.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "pycbc.pool.SinglePool": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "object": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.pool.SinglePool.broadcast": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "fcn": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pool.SinglePool.map": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "f": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pool.TimeoutError": {
  "data": {
   "shadows": "multiprocessing.TimeoutError"
  },
  "type": "import"
 },
 "pycbc.pool._dummy_broadcast": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "pycbc.pool._lockstep_fcn": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "fcn": {
     "line number": [
      41
     ]
    },
    "pycbc.pool._numdone": {
     "line number": [
      35,
      40
     ]
    },
    "pycbc.pool._process_lock": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pool._noint": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "init": {
     "line number": [
      27
     ]
    },
    "pycbc.pool.signal": {
     "line number": [
      25,
      25,
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pool._numdone": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pycbc.pool._process_lock": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pycbc.pool._shutdown_pool": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pycbc.pool.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.pool.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "pycbc.pool.choose_pool": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      132
     ]
    },
    "ValueError": {
     "line number": [
      133
     ]
    },
    "pycbc.pool.BroadcastPool": {
     "line number": [
      138
     ]
    },
    "pycbc.pool.SinglePool": {
     "line number": [
      136
     ]
    },
    "pycbc.pool._dummy_broadcast": {
     "line number": [
      130
     ]
    },
    "pycbc.pool.atexit": {
     "line number": [
      131
     ]
    },
    "pycbc.pool.schwimmbad": {
     "line number": [
      128
     ]
    },
    "pycbc.pool.types": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pool.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pycbc.pool.is_main_process": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      19
     ]
    },
    "RuntimeError": {
     "line number": [
      19
     ]
    },
    "ValueError": {
     "line number": [
      19
     ]
    },
    "mpi4py.MPI.COMM_WORLD": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pool.multiprocessing.pool": {
  "data": {
   "shadows": "multiprocessing.pool"
  },
  "type": "import"
 },
 "pycbc.pool.schwimmbad": {
  "data": {
   "shadows": "schwimmbad"
  },
  "type": "import"
 },
 "pycbc.pool.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "pycbc.pool.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pycbc.population": {
  "data": {},
  "type": "module"
 },
 "pycbc.population.rates_functions": {
  "data": {},
  "type": "module"
 },
 "pycbc.population.rates_functions._optm": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "scipy.stats.skewnorm.pdf": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.bisect": {
  "data": {
   "shadows": "bisect"
  },
  "type": "import"
 },
 "pycbc.population.rates_functions.draw_flat_samples": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "numpy.maximum": {
     "line number": [
      470
     ]
    },
    "numpy.minimum": {
     "line number": [
      470
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      467,
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.draw_imf_samples": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "int": {
     "line number": [
      404
     ]
    },
    "numpy.log": {
     "line number": [
      404
     ]
    },
    "numpy.maximum": {
     "line number": [
      409
     ]
    },
    "numpy.minimum": {
     "line number": [
      409
     ]
    },
    "numpy.random.random": {
     "line number": [
      405
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      406
     ]
    },
    "numpy.resize": {
     "line number": [
      411,
      411
     ]
    },
    "numpy.where": {
     "line number": [
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.draw_lnm_samples": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "int": {
     "line number": [
      437
     ]
    },
    "numpy.exp": {
     "line number": [
      438,
      439
     ]
    },
    "numpy.log": {
     "line number": [
      434,
      435,
      437
     ]
    },
    "numpy.maximum": {
     "line number": [
      442
     ]
    },
    "numpy.minimum": {
     "line number": [
      442
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      438,
      439
     ]
    },
    "numpy.resize": {
     "line number": [
      444,
      444
     ]
    },
    "numpy.where": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.fgmc": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "len": {
     "line number": [
      161,
      167,
      169,
      182
     ]
    },
    "max": {
     "line number": [
      180
     ]
    },
    "numpy.exp": {
     "line number": [
      182
     ]
    },
    "numpy.log": {
     "line number": [
      173,
      173
     ]
    },
    "numpy.logaddexp": {
     "line number": [
      177
     ]
    },
    "numpy.random.choice": {
     "line number": [
      168
     ]
    },
    "numpy.random.lognormal": {
     "line number": [
      169
     ]
    },
    "numpy.random.random": {
     "line number": [
      182
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      161
     ]
    },
    "scipy.stats.stats.ks_2samp": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.fit": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "kde": {
     "line number": [
      217
     ]
    },
    "max": {
     "line number": [
      215
     ]
    },
    "min": {
     "line number": [
      215
     ]
    },
    "numpy.linspace": {
     "line number": [
      215
     ]
    },
    "numpy.log": {
     "line number": [
      212
     ]
    },
    "numpy.mean": {
     "line number": [
      213
     ]
    },
    "numpy.std": {
     "line number": [
      213
     ]
    },
    "pycbc.population.rates_functions._optm": {
     "line number": [
      221
     ]
    },
    "scipy.optimize.curve_fit": {
     "line number": [
      221
     ]
    },
    "scipy.stats.gaussian_kde": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.population.rates_functions.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "pycbc.population.rates_functions.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "pycbc.population.rates_functions.log_rho_bg": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      118
     ]
    },
    "numpy.any": {
     "line number": [
      127
     ]
    },
    "numpy.array": {
     "line number": [
      141
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      114
     ]
    },
    "numpy.log": {
     "line number": [
      134,
      134,
      140,
      140,
      140
     ]
    },
    "numpy.max": {
     "line number": [
      127,
      133,
      134
     ]
    },
    "numpy.min": {
     "line number": [
      118
     ]
    },
    "pycbc.population.rates_functions.bisect": {
     "line number": [
      136
     ]
    },
    "sum": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.log_rho_fgmc": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "float": {
     "line number": [
      147
     ]
    },
    "numpy.diff": {
     "line number": [
      147
     ]
    },
    "numpy.histogram": {
     "line number": [
      144
     ]
    },
    "numpy.log": {
     "line number": [
      154
     ]
    },
    "numpy.max": {
     "line number": [
      150,
      150
     ]
    },
    "numpy.min": {
     "line number": [
      149,
      149
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      152
     ]
    },
    "sum": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.mchirp_from_mass1_mass2": {
  "data": {
   "shadows": "pycbc.conversions.mchirp_from_mass1_mass2"
  },
  "type": "import"
 },
 "pycbc.population.rates_functions.mchirp_sampler_flat": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "pycbc.conversions.mchirp_from_mass1_mass2": {
     "line number": [
      523
     ]
    },
    "pycbc.population.rates_functions.draw_flat_samples": {
     "line number": [
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.mchirp_sampler_imf": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "pycbc.conversions.mchirp_from_mass1_mass2": {
     "line number": [
      505
     ]
    },
    "pycbc.population.rates_functions.draw_imf_samples": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.mchirp_sampler_lnm": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": {
    "pycbc.conversions.mchirp_from_mass1_mass2": {
     "line number": [
      487
     ]
    },
    "pycbc.population.rates_functions.draw_lnm_samples": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.population.rates_functions.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "pycbc.population.rates_functions.prob_flat": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "numpy.sign": {
     "line number": [
      369,
      370,
      370
     ]
    },
    "numpy.where": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.prob_imf": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      323,
      323
     ]
    },
    "numpy.maximum": {
     "line number": [
      329
     ]
    },
    "numpy.minimum": {
     "line number": [
      328
     ]
    },
    "numpy.sign": {
     "line number": [
      332,
      333,
      333
     ]
    },
    "numpy.where": {
     "line number": [
      334,
      337,
      339
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.prob_lnm": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      281,
      281
     ]
    },
    "numpy.log": {
     "line number": [
      283,
      283
     ]
    },
    "numpy.maximum": {
     "line number": [
      286
     ]
    },
    "numpy.minimum": {
     "line number": [
      285
     ]
    },
    "numpy.sign": {
     "line number": [
      289,
      290,
      290
     ]
    },
    "numpy.where": {
     "line number": [
      291
     ]
    },
    "scipy.integrate.quad": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.process_full_data": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.sign": {
     "line number": [
      43,
      46
     ]
    },
    "numpy.where": {
     "line number": [
      44,
      47
     ]
    },
    "pycbc.conversions.mchirp_from_mass1_mass2": {
     "line number": [
      42,
      45
     ]
    },
    "pycbc.population.rates_functions.h5py": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.save_bkg_falloff": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "numpy.histogram": {
     "line number": [
      87
     ]
    },
    "numpy.linspace": {
     "line number": [
      86
     ]
    },
    "numpy.max": {
     "line number": [
      85
     ]
    },
    "pycbc.population.rates_functions.h5py": {
     "line number": [
      79
     ]
    },
    "pycbc.population.rates_functions.process_full_data": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.skew_lognormal_samples": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "max": {
     "line number": [
      248
     ]
    },
    "numpy.exp": {
     "line number": [
      251
     ]
    },
    "numpy.random.random": {
     "line number": [
      247
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      245
     ]
    },
    "numpy.where": {
     "line number": [
      249
     ]
    },
    "scipy.stats.skewnorm.pdf": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.population.rates_functions.ss": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "pycbc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pycbc.psd": {
  "data": {
   "symbols_in_volume": {
    "pycbc.psd.ensure_one_opt_groups": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.psd.MultiDetOptionAction": {
  "data": {
   "shadows": "pycbc.types.MultiDetOptionAction"
  },
  "type": "import"
 },
 "pycbc.psd.MultiDetOptionAppendAction": {
  "data": {
   "shadows": "pycbc.types.MultiDetOptionAppendAction"
  },
  "type": "import"
 },
 "pycbc.psd.analytical": {
  "data": {
   "symbols_in_volume": {
    "exec": {
     "line number": [
      41
     ]
    },
    "len": {
     "line number": [
      34
     ]
    },
    "pycbc.psd.analytical._name": {
     "line number": [
      35,
      36,
      40,
      46,
      46,
      46
     ]
    },
    "pycbc.psd.analytical._name_blacklist": {
     "line number": [
      35
     ]
    },
    "pycbc.psd.analytical._name_prefix": {
     "line number": [
      33,
      33,
      34
     ]
    },
    "pycbc.psd.analytical._name_suffix": {
     "line number": [
      33
     ]
    },
    "pycbc.psd.analytical._psd_list": {
     "line number": [
      36,
      40
     ]
    },
    "pycbc.psd.analytical.flat_unity": {
     "line number": [
      155
     ]
    },
    "pycbc.psd.analytical.lalsimulation": {
     "line number": [
      32
     ]
    },
    "sorted": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.psd.analytical.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.psd.analytical._name": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pycbc.psd.analytical._name_blacklist": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pycbc.psd.analytical._name_prefix": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pycbc.psd.analytical._name_suffix": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pycbc.psd.analytical._psd_list": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pycbc.psd.analytical.flat_unity": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "int": {
     "line number": [
      149
     ]
    },
    "pycbc.psd.analytical.numpy": {
     "line number": [
      148
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.analytical.from_string": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      113
     ]
    },
    "RuntimeWarning": {
     "line number": [
      103
     ]
    },
    "ValueError": {
     "line number": [
      98
     ]
    },
    "func": {
     "line number": [
      115,
      117,
      122,
      123
     ]
    },
    "int": {
     "line number": [
      104,
      126
     ]
    },
    "isinstance": {
     "line number": [
      102
     ]
    },
    "pycbc.psd.analytical._name_prefix": {
     "line number": [
      112,
      114
     ]
    },
    "pycbc.psd.analytical._name_suffix": {
     "line number": [
      112
     ]
    },
    "pycbc.psd.analytical.get_lalsim_psd_list": {
     "line number": [
      107
     ]
    },
    "pycbc.psd.analytical.get_psd_model_list": {
     "line number": [
      97
     ]
    },
    "pycbc.psd.analytical.lal": {
     "line number": [
      108,
      109,
      109
     ]
    },
    "pycbc.psd.analytical.lalsimulation": {
     "line number": [
      111,
      114,
      117
     ]
    },
    "pycbc.psd.analytical.numbers": {
     "line number": [
      102
     ]
    },
    "pycbc.psd.analytical.warnings": {
     "line number": [
      103
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.analytical.get_lalsim_psd_list": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "pycbc.psd.analytical._psd_list": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.analytical.get_psd_model_list": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "pycbc.psd.analytical.get_lalsim_psd_list": {
     "line number": [
      56
     ]
    },
    "pycbc.psd.analytical.get_pycbc_psd_list": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.analytical.get_pycbc_psd_list": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "sorted": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.analytical.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.psd.analytical.lalsimulation": {
  "data": {
   "shadows": "lalsimulation"
  },
  "type": "import"
 },
 "pycbc.psd.analytical.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pycbc.psd.analytical.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.psd.analytical.pycbc_analytical_psds": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "pycbc.psd.analytical.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pycbc.psd.analytical.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.psd.associate_psds_to_multi_ifo_segments": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": {
    "ligo.segments": {
     "line number": [
      558,
      560,
      562
     ]
    },
    "pycbc.psd.associate_psds_to_single_ifo_segments": {
     "line number": [
      562
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.associate_psds_to_segments": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      530
     ]
    },
    "abs": {
     "line number": [
      524
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      519,
      522
     ]
    },
    "pycbc.psd.generate_overlapping_psds": {
     "line number": [
      512
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.associate_psds_to_single_ifo_segments": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "pycbc.psd.associate_psds_to_segments": {
     "line number": [
      541
     ]
    },
    "pycbc.types.copy_opts_for_single_ifo": {
     "line number": [
      540
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycbc.psd.copy_opts_for_single_ifo": {
  "data": {
   "shadows": "pycbc.types.copy_opts_for_single_ifo"
  },
  "type": "import"
 },
 "pycbc.psd.ensure_one_opt": {
  "data": {
   "shadows": "pycbc.types.ensure_one_opt"
  },
  "type": "import"
 },
 "pycbc.psd.ensure_one_opt_groups": {
  "data": {
   "lineno": 339
  },
  "type": "constant"
 },
 "pycbc.psd.ensure_one_opt_multi_ifo": {
  "data": {
   "shadows": "pycbc.types.ensure_one_opt_multi_ifo"
  },
  "type": "import"
 },
 "pycbc.psd.estimate": {
  "data": {},
  "type": "module"
 },
 "pycbc.psd.estimate.Array": {
  "data": {
   "shadows": "pycbc.types.Array"
  },
  "type": "import"
 },
 "pycbc.psd.estimate.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.psd.estimate.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.psd.estimate.bandlimited_interpolate": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "int": {
     "line number": [
      301
     ]
    },
    "len": {
     "line number": [
      298
     ]
    },
    "pycbc.fft.fft": {
     "line number": [
      312
     ]
    },
    "pycbc.fft.ifft": {
     "line number": [
      305
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      296,
      311
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      304,
      307
     ]
    },
    "pycbc.types.complex_same_precision_as": {
     "line number": [
      296
     ]
    },
    "pycbc.types.real_same_precision_as": {
     "line number": [
      304
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      304,
      307,
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.estimate.complex_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.complex_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.psd.estimate.fft": {
  "data": {
   "shadows": "pycbc.fft.fft"
  },
  "type": "import"
 },
 "pycbc.psd.estimate.ifft": {
  "data": {
   "shadows": "pycbc.fft.ifft"
  },
  "type": "import"
 },
 "pycbc.psd.estimate.interpolate": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "len": {
     "line number": [
      275
     ]
    },
    "pycbc.psd.estimate.numpy": {
     "line number": [
      276,
      276,
      277
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.estimate.inverse_spectrum_truncation": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      220,
      224,
      243
     ]
    },
    "abs": {
     "line number": [
      256
     ]
    },
    "int": {
     "line number": [
      219,
      233
     ]
    },
    "len": {
     "line number": [
      226,
      228,
      252
     ]
    },
    "pycbc.fft.fft": {
     "line number": [
      254
     ]
    },
    "pycbc.fft.ifft": {
     "line number": [
      238
     ]
    },
    "pycbc.psd.estimate.numpy": {
     "line number": [
      236,
      246,
      252
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      246
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      228,
      252
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      236
     ]
    },
    "pycbc.types.complex_same_precision_as": {
     "line number": [
      229,
      253
     ]
    },
    "pycbc.types.real_same_precision_as": {
     "line number": [
      237
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      228
     ]
    },
    "type": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.estimate.median_bias": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      49
     ]
    },
    "int": {
     "line number": [
      48,
      53
     ]
    },
    "pycbc.psd.estimate.numpy": {
     "line number": [
      51
     ]
    },
    "six.moves.range": {
     "line number": [
      53
     ]
    },
    "type": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.estimate.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.psd.estimate.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "pycbc.psd.estimate.real_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.real_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.psd.estimate.welch": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      97,
      99,
      101,
      104,
      138
     ]
    },
    "abs": {
     "line number": [
      159
     ]
    },
    "int": {
     "line number": [
      102,
      102,
      113,
      147
     ]
    },
    "isinstance": {
     "line number": [
      96,
      98,
      140
     ]
    },
    "len": {
     "line number": [
      111,
      131,
      157,
      177,
      179
     ]
    },
    "pycbc.fft.fft": {
     "line number": [
      158
     ]
    },
    "pycbc.psd.estimate.median_bias": {
     "line number": [
      172,
      177,
      179
     ]
    },
    "pycbc.psd.estimate.numpy": {
     "line number": [
      92,
      96,
      98,
      107,
      109,
      140,
      147,
      167,
      170,
      172,
      176,
      178
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      142
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      146,
      184
     ]
    },
    "six.moves.range": {
     "line number": [
      153
     ]
    },
    "type": {
     "line number": [
      102,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.estimate.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.psd.float32": {
  "data": {
   "shadows": "pycbc.types.float32"
  },
  "type": "import"
 },
 "pycbc.psd.float64": {
  "data": {
   "shadows": "pycbc.types.float64"
  },
  "type": "import"
 },
 "pycbc.psd.from_cli": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      72
     ]
    },
    "ValueError": {
     "line number": [
      80,
      120,
      139
     ]
    },
    "bool": {
     "line number": [
      77,
      92
     ]
    },
    "from_string": {
     "line number": [
      85
     ]
    },
    "from_txt": {
     "line number": [
      93
     ]
    },
    "from_xml": {
     "line number": [
      99
     ]
    },
    "hasattr": {
     "line number": [
      127
     ]
    },
    "int": {
     "line number": [
      68,
      103,
      111,
      112,
      124
     ]
    },
    "interpolate": {
     "line number": [
      117
     ]
    },
    "inverse_spectrum_truncation": {
     "line number": [
      123
     ]
    },
    "map": {
     "line number": [
      77
     ]
    },
    "pycbc.types.float32": {
     "line number": [
      133
     ]
    },
    "pycbc.types.float64": {
     "line number": [
      128,
      135
     ]
    },
    "sum": {
     "line number": [
      77
     ]
    },
    "welch": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.from_cli_multi_ifos": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "pycbc.psd.from_cli_single_ifo": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.from_cli_single_ifo": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "pycbc.psd.from_cli": {
     "line number": [
      147
     ]
    },
    "pycbc.types.copy_opts_for_single_ifo": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.generate_overlapping_psds": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      458
     ]
    },
    "int": {
     "line number": [
      437,
      438,
      445,
      447,
      463,
      464
     ]
    },
    "len": {
     "line number": [
      433,
      439
     ]
    },
    "pycbc.psd.from_cli": {
     "line number": [
      431,
      474
     ]
    },
    "range": {
     "line number": [
      466
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.insert_psd_option_group": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "float": {
     "line number": [
      189,
      207,
      210,
      214,
      217,
      220,
      223,
      226,
      235,
      238
     ]
    },
    "get_psd_model_list": {
     "line number": [
      184
     ]
    },
    "int": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.insert_psd_option_group_multi_ifo": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "float": {
     "line number": [
      287,
      291,
      305,
      314,
      317,
      321,
      324,
      327,
      330,
      333
     ]
    },
    "get_psd_model_list": {
     "line number": [
      275
     ]
    },
    "int": {
     "line number": [
      295
     ]
    },
    "pycbc.types.MultiDetOptionAction": {
     "line number": [
      273,
      277,
      280,
      283,
      288,
      292,
      297,
      306,
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.read": {
  "data": {},
  "type": "module"
 },
 "pycbc.psd.read.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.psd.read.from_numpy_arrays": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      48
     ]
    },
    "int": {
     "line number": [
      51,
      68
     ]
    },
    "psd_interp": {
     "line number": [
      72
     ]
    },
    "pycbc.psd.read.numpy": {
     "line number": [
      54,
      63,
      64,
      69,
      69,
      71,
      71,
      72
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      74
     ]
    },
    "str": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.read.from_txt": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      114
     ]
    },
    "pycbc.psd.read.from_numpy_arrays": {
     "line number": [
      121
     ]
    },
    "pycbc.psd.read.numpy": {
     "line number": [
      111,
      113,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.read.from_xml": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      172
     ]
    },
    "glue.ligolw.utils.load_fileobj": {
     "line number": [
      161
     ]
    },
    "len": {
     "line number": [
      167,
      175
     ]
    },
    "open": {
     "line number": [
      159
     ]
    },
    "pycbc.psd.read.from_numpy_arrays": {
     "line number": [
      177
     ]
    },
    "pycbc.psd.read.numpy": {
     "line number": [
      175
     ]
    },
    "tuple": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.read.lal.series": {
  "data": {
   "shadows": "lal.series"
  },
  "type": "import"
 },
 "pycbc.psd.read.ligolw_utils": {
  "data": {
   "shadows": "glue.ligolw.utils"
  },
  "type": "import"
 },
 "pycbc.psd.read.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.psd.read.scipy.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "pycbc.psd.required_opts": {
  "data": {
   "shadows": "pycbc.types.required_opts"
  },
  "type": "import"
 },
 "pycbc.psd.required_opts_multi_ifo": {
  "data": {
   "shadows": "pycbc.types.required_opts_multi_ifo"
  },
  "type": "import"
 },
 "pycbc.psd.segments": {
  "data": {
   "shadows": "ligo.segments"
  },
  "type": "import"
 },
 "pycbc.psd.variation": {
  "data": {},
  "type": "module"
 },
 "pycbc.psd.variation.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.psd.variation.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.psd.variation.calc_filt_psd_variation": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      301,
      333
     ]
    },
    "enumerate": {
     "line number": [
      349
     ]
    },
    "float": {
     "line number": [
      308
     ]
    },
    "int": {
     "line number": [
      277,
      291,
      298,
      312,
      313,
      320,
      321,
      337,
      338,
      343,
      343
     ]
    },
    "len": {
     "line number": [
      333,
      352
     ]
    },
    "numpy.fft.irfft": {
     "line number": [
      338
     ]
    },
    "numpy.fft.rfft": {
     "line number": [
      301
     ]
    },
    "pycbc.filter.resample_to_delta_t": {
     "line number": [
      276
     ]
    },
    "pycbc.psd.variation.mean_square": {
     "line number": [
      346
     ]
    },
    "pycbc.psd.variation.numpy": {
     "line number": [
      267,
      269,
      272,
      273,
      285,
      291,
      331,
      335,
      335,
      337
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      302,
      328
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      291,
      340
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      291
     ]
    },
    "scipy.signal.fftconvolve": {
     "line number": [
      340
     ]
    },
    "scipy.signal.firwin": {
     "line number": [
      296
     ]
    },
    "scipy.signal.hann": {
     "line number": [
      337
     ]
    },
    "sum": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.variation.calc_psd_variation": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      134
     ]
    },
    "int": {
     "line number": [
      63,
      75,
      76,
      85,
      86,
      98,
      100,
      107,
      109,
      115,
      116
     ]
    },
    "len": {
     "line number": [
      137
     ]
    },
    "pycbc.psd.variation.numpy": {
     "line number": [
      51,
      53,
      56,
      57,
      60,
      63,
      79,
      89,
      126,
      129,
      129
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      123
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      63
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.variation.find_trigger_value": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "pycbc.psd.variation.numpy": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.variation.irfft": {
  "data": {
   "shadows": "numpy.fft.irfft"
  },
  "type": "import"
 },
 "pycbc.psd.variation.mean_square": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "int": {
     "line number": [
      198,
      203,
      213,
      214,
      216
     ]
    },
    "pycbc.psd.variation.numpy": {
     "line number": [
      202,
      203,
      215
     ]
    },
    "range": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.variation.new_find_trigger_value": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "pycbc.psd.variation.numpy": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.variation.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.psd.variation.pycbc.psd": {
  "data": {
   "shadows": "pycbc.psd"
  },
  "type": "import"
 },
 "pycbc.psd.variation.resample_to_delta_t": {
  "data": {
   "shadows": "pycbc.filter.resample_to_delta_t"
  },
  "type": "import"
 },
 "pycbc.psd.variation.rfft": {
  "data": {
   "shadows": "numpy.fft.rfft"
  },
  "type": "import"
 },
 "pycbc.psd.variation.sig": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "pycbc.psd.variation.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.psd.verify_psd_options": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      358
     ]
    },
    "pycbc.psd.ensure_one_opt_groups": {
     "line number": [
      361
     ]
    },
    "pycbc.types.ensure_one_opt": {
     "line number": [
      362
     ]
    },
    "pycbc.types.required_opts": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.psd.verify_psd_options_multi_ifo": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "pycbc.psd.ensure_one_opt_groups": {
     "line number": [
      383
     ]
    },
    "pycbc.types.ensure_one_opt_multi_ifo": {
     "line number": [
      384
     ]
    },
    "pycbc.types.required_opts_multi_ifo": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.pycbc.fft.mkl": {
  "data": {
   "shadows": "pycbc.fft.mkl"
  },
  "type": "import"
 },
 "pycbc.pycbc_version": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pycbc.rate": {
  "data": {},
  "type": "module"
 },
 "pycbc.rate.bisect": {
  "data": {
   "shadows": "bisect"
  },
  "type": "import"
 },
 "pycbc.rate.compute_efficiency": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      204
     ]
    },
    "float": {
     "line number": [
      211
     ]
    },
    "len": {
     "line number": [
      202,
      203
     ]
    },
    "pycbc.rate.numpy": {
     "line number": [
      202,
      203,
      206,
      207,
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.rate.compute_lower_limit": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      72
     ]
    },
    "pycbc.rate.bisect": {
     "line number": [
      64
     ]
    },
    "pycbc.rate.integral_element": {
     "line number": [
      63
     ]
    },
    "pycbc.rate.numpy": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.rate.compute_upper_limit": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      51
     ]
    },
    "pycbc.rate.bisect": {
     "line number": [
      43
     ]
    },
    "pycbc.rate.integral_element": {
     "line number": [
      42
     ]
    },
    "pycbc.rate.numpy": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.rate.compute_volume_vs_mass": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      301,
      302,
      321
     ]
    },
    "len": {
     "line number": [
      308,
      309,
      327,
      328
     ]
    },
    "pycbc.rate.filter_injections_by_mass": {
     "line number": [
      303,
      305,
      324,
      325
     ]
    },
    "pycbc.rate.mean_efficiency_volume": {
     "line number": [
      312,
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.rate.confidence_interval_min_width": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      83
     ]
    },
    "pycbc.rate.compute_lower_limit": {
     "line number": [
      94
     ]
    },
    "pycbc.rate.compute_upper_limit": {
     "line number": [
      95
     ]
    },
    "pycbc.rate.numpy": {
     "line number": [
      89,
      90,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.rate.filter_injections_by_mass": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "pycbc.rate.numpy": {
     "line number": [
      241,
      242,
      245,
      246,
      254,
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.rate.hpd_coverage": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "pycbc.rate.integral_element": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.rate.hpd_credible_interval": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "pycbc.rate.hpd_threshold": {
     "line number": [
      161
     ]
    },
    "pycbc.rate.numpy": {
     "line number": [
      156,
      157,
      163,
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.rate.hpd_threshold": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      127
     ]
    },
    "max": {
     "line number": [
      126
     ]
    },
    "pycbc.rate.hpd_coverage": {
     "line number": [
      127,
      128,
      130
     ]
    },
    "pycbc.rate.normalize_pdf": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.rate.integral_element": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "pycbc.rate.integrate_efficiency": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "pycbc.rate.numpy": {
     "line number": [
      177,
      180,
      180,
      180,
      181,
      181,
      183,
      184,
      184,
      189,
      189,
      191,
      191,
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.rate.mean_efficiency_volume": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "len": {
     "line number": [
      220,
      222,
      222
     ]
    },
    "pycbc.rate.compute_efficiency": {
     "line number": [
      229
     ]
    },
    "pycbc.rate.integrate_efficiency": {
     "line number": [
      230
     ]
    },
    "pycbc.rate.numpy": {
     "line number": [
      222,
      222,
      225,
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.rate.normalize_pdf": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      25,
      28
     ]
    },
    "min": {
     "line number": [
      24,
      27
     ]
    },
    "pycbc.rate.integral_element": {
     "line number": [
      31
     ]
    },
    "sum": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.rate.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.results": {
  "data": {},
  "type": "module"
 },
 "pycbc.results.color": {
  "data": {},
  "type": "module"
 },
 "pycbc.results.color._ifo_color_map": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pycbc.results.color.ifo_color": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "pycbc.results.color._ifo_color_map": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.dq": {
  "data": {},
  "type": "module"
 },
 "pycbc.results.dq.data_h1_string": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pycbc.results.dq.data_l1_string": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pycbc.results.dq.get_summary_page_link": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "pycbc.results.dq.data_h1_string": {
     "line number": [
      60
     ]
    },
    "pycbc.results.dq.data_l1_string": {
     "line number": [
      60
     ]
    },
    "pycbc.results.dq.search_form_string": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.dq.redirect_javascript": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pycbc.results.dq.search_form_string": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pycbc.results.followup": {
  "data": {
   "symbols_in_volume": {
    "pycbc.results.followup.matplotlib": {
     "line number": [
      35
     ]
    },
    "pycbc.results.followup.sys": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.results.followup.coinc_timeseries_plot": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "pycbc.results.followup.h5py": {
     "line number": [
      84
     ]
    },
    "pycbc.results.followup.ifo_color": {
     "line number": [
      93,
      94
     ]
    },
    "pycbc.results.followup.mpld3": {
     "line number": [
      97,
      97,
      102
     ]
    },
    "pycbc.results.followup.pylab": {
     "line number": [
      83,
      93,
      94,
      98,
      99,
      100,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.followup.columns_from_file_list": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "ligo.segments.segment": {
     "line number": [
      63
     ]
    },
    "pycbc.results.followup.h5py": {
     "line number": [
      67
     ]
    },
    "pycbc.results.followup.numpy": {
     "line number": [
      70,
      71,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.followup.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.results.followup.ifo_color": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pycbc.results.followup.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pycbc.results.followup.mpld3": {
  "data": {
   "shadows": "mpld3"
  },
  "type": "import"
 },
 "pycbc.results.followup.mpld3.plugins": {
  "data": {
   "shadows": "mpld3.plugins"
  },
  "type": "import"
 },
 "pycbc.results.followup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.results.followup.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "pycbc.results.followup.segment": {
  "data": {
   "shadows": "ligo.segments.segment"
  },
  "type": "import"
 },
 "pycbc.results.followup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pycbc.results.followup.times_to_links": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "pycbc.results.followup.times_to_urls": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "pycbc.results.followup.times_to_links": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.followup.trigger_timeseries_plot": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "print": {
     "line number": [
      111
     ]
    },
    "pycbc.results.followup.columns_from_file_list": {
     "line number": [
      108
     ]
    },
    "pycbc.results.followup.ifo_color": {
     "line number": [
      113
     ]
    },
    "pycbc.results.followup.mpld3": {
     "line number": [
      116,
      116,
      121
     ]
    },
    "pycbc.results.followup.pylab": {
     "line number": [
      106,
      112,
      117,
      118,
      119,
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.layout": {
  "data": {},
  "type": "module"
 },
 "pycbc.results.layout.SectionNumber": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "object": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.results.layout.SectionNumber.__getitem__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "pycbc.results.layout.SectionNumber.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.layout.group_layout": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "len": {
     "line number": [
      62
     ]
    },
    "list": {
     "line number": [
      63
     ]
    },
    "pycbc.results.layout.grouper": {
     "line number": [
      63
     ]
    },
    "pycbc.results.layout.two_column_layout": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.layout.grouper": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      50
     ]
    },
    "six.moves.zip_longest": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.layout.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycbc.results.layout.render_workflow_html_template": {
  "data": {
   "shadows": "pycbc.results.render.render_workflow_html_template"
  },
  "type": "import"
 },
 "pycbc.results.layout.single_layout": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pycbc.results.layout.two_column_layout": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.layout.two_column_layout": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "pycbc.results.render.render_workflow_html_template": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.layout.zip_longest": {
  "data": {
   "shadows": "six.moves.zip_longest"
  },
  "type": "import"
 },
 "pycbc.results.legacy_grb": {
  "data": {},
  "type": "module"
 },
 "pycbc.results.legacy_grb.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "pycbc.results.legacy_grb.LIGOTimeGPS": {
  "data": {
   "shadows": "lal.gpstime.LIGOTimeGPS"
  },
  "type": "import"
 },
 "pycbc.results.legacy_grb.Line2D": {
  "data": {
   "shadows": "matplotlib.lines.Line2D"
  },
  "type": "import"
 },
 "pycbc.results.legacy_grb.Rectangle": {
  "data": {
   "shadows": "matplotlib.patches.Rectangle"
  },
  "type": "import"
 },
 "pycbc.results.legacy_grb.antenna": {
  "data": {
   "shadows": "pylal.antenna"
  },
  "type": "import"
 },
 "pycbc.results.legacy_grb.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.results.legacy_grb.gps_to_utc": {
  "data": {
   "shadows": "lal.gpstime.gps_to_utc"
  },
  "type": "import"
 },
 "pycbc.results.legacy_grb.ifo_color": {
  "data": {
   "shadows": "pycbc.results.color.ifo_color"
  },
  "type": "import"
 },
 "pycbc.results.legacy_grb.initialize_page": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "glue.markup.page": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.legacy_grb.make_grb_segments_plot": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      683,
      691
     ]
    },
    "float": {
     "line number": [
      716,
      716
     ]
    },
    "int": {
     "line number": [
      661,
      662
     ]
    },
    "len": {
     "line number": [
      660,
      677,
      678,
      686,
      703
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      661,
      667
     ]
    },
    "ligo.segments.segmentlist": {
     "line number": [
      666,
      674
     ]
    },
    "matplotlib.lines.Line2D": {
     "line number": [
      728
     ]
    },
    "matplotlib.patches.Rectangle": {
     "line number": [
      683,
      690
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      677
     ]
    },
    "matplotlib.pyplot.tight_layout": {
     "line number": [
      733
     ]
    },
    "matplotlib.pyplot.xticks": {
     "line number": [
      680
     ]
    },
    "pycbc.results.color.ifo_color": {
     "line number": [
      672
     ]
    },
    "zip": {
     "line number": [
      681
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.legacy_grb.markup": {
  "data": {
   "shadows": "glue.markup"
  },
  "type": "import"
 },
 "pycbc.results.legacy_grb.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.results.legacy_grb.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pycbc.results.legacy_grb.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pycbc.results.legacy_grb.segments": {
  "data": {
   "shadows": "ligo.segments"
  },
  "type": "import"
 },
 "pycbc.results.legacy_grb.write_antenna": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "float": {
     "line number": [
      217,
      218
     ]
    },
    "glue.markup.page": {
     "line number": [
      280,
      288
     ]
    },
    "len": {
     "line number": [
      202,
      223,
      225
     ]
    },
    "list": {
     "line number": [
      231
     ]
    },
    "open": {
     "line number": [
      209
     ]
    },
    "plot": {
     "line number": [
      286,
      288,
      295
     ]
    },
    "plot.a": {
     "line number": [
      291
     ]
    },
    "plot.a.close": {
     "line number": [
      293
     ]
    },
    "plot.img": {
     "line number": [
      292
     ]
    },
    "pycbc.results.legacy_grb.os": {
     "line number": [
      281
     ]
    },
    "pycbc.results.legacy_grb.write_table": {
     "line number": [
      231,
      250,
      306
     ]
    },
    "pylal.antenna.response": {
     "line number": [
      217,
      233
     ]
    },
    "range": {
     "line number": [
      202,
      223,
      225
     ]
    },
    "round": {
     "line number": [
      220,
      236
     ]
    },
    "set": {
     "line number": [
      231
     ]
    },
    "tuple": {
     "line number": [
      223
     ]
    },
    "zip": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.legacy_grb.write_banner": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "glue.markup.page": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.legacy_grb.write_chisq": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "glue.markup.page": {
     "line number": [
      379
     ]
    },
    "plot": {
     "line number": [
      379,
      385
     ]
    },
    "plot.a": {
     "line number": [
      382
     ]
    },
    "plot.a.close": {
     "line number": [
      384
     ]
    },
    "plot.img": {
     "line number": [
      383
     ]
    },
    "pycbc.results.legacy_grb.write_table": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.legacy_grb.write_exclusion_distances": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": {
    "bin": {
     "line number": [
      580,
      580
     ]
    },
    "float": {
     "line number": [
      640
     ]
    },
    "glue.markup.page": {
     "line number": [
      600,
      619
     ]
    },
    "open": {
     "line number": [
      569,
      636
     ]
    },
    "plot": {
     "line number": [
      600,
      605,
      619,
      624
     ]
    },
    "plot.a": {
     "line number": [
      602,
      621
     ]
    },
    "plot.a.close": {
     "line number": [
      604,
      623
     ]
    },
    "plot.img": {
     "line number": [
      603,
      622
     ]
    },
    "pycbc.results.legacy_grb.write_table": {
     "line number": [
      582,
      608,
      627,
      644
     ]
    },
    "tuple": {
     "line number": [
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.legacy_grb.write_found_missed": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": {
    "glue.markup.page": {
     "line number": [
      465
     ]
    },
    "len": {
     "line number": [
      451
     ]
    },
    "plot": {
     "line number": [
      465,
      471
     ]
    },
    "plot.a": {
     "line number": [
      468
     ]
    },
    "plot.a.close": {
     "line number": [
      470
     ]
    },
    "plot.img": {
     "line number": [
      469
     ]
    },
    "pycbc.results.legacy_grb.write_table": {
     "line number": [
      478
     ]
    },
    "range": {
     "line number": [
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.legacy_grb.write_inj_snrs": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "glue.markup.page": {
     "line number": [
      414
     ]
    },
    "len": {
     "line number": [
      407
     ]
    },
    "plot": {
     "line number": [
      414,
      420
     ]
    },
    "plot.a": {
     "line number": [
      417
     ]
    },
    "plot.a.close": {
     "line number": [
      419
     ]
    },
    "plot.img": {
     "line number": [
      418
     ]
    },
    "pycbc.results.legacy_grb.write_table": {
     "line number": [
      423
     ]
    },
    "range": {
     "line number": [
      407
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.legacy_grb.write_loudest_events": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "bin": {
     "line number": [
      521,
      521,
      534,
      535,
      546,
      547
     ]
    },
    "glue.markup.page": {
     "line number": [
      536,
      548
     ]
    },
    "plot": {
     "line number": [
      536,
      541,
      548,
      553
     ]
    },
    "plot.a": {
     "line number": [
      538,
      550
     ]
    },
    "plot.a.close": {
     "line number": [
      540,
      552
     ]
    },
    "plot.img": {
     "line number": [
      539,
      551
     ]
    },
    "pycbc.results.legacy_grb.write_table": {
     "line number": [
      556
     ]
    },
    "tuple": {
     "line number": [
      521,
      535,
      547
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.legacy_grb.write_offsource": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "glue.markup.page": {
     "line number": [
      330,
      337,
      347
     ]
    },
    "len": {
     "line number": [
      344
     ]
    },
    "plot": {
     "line number": [
      330,
      335,
      337,
      342,
      347,
      353
     ]
    },
    "plot.a": {
     "line number": [
      332,
      339,
      350
     ]
    },
    "plot.a.close": {
     "line number": [
      334,
      341,
      352
     ]
    },
    "plot.img": {
     "line number": [
      333,
      340,
      351
     ]
    },
    "pycbc.results.legacy_grb.write_table": {
     "line number": [
      355
     ]
    },
    "range": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.legacy_grb.write_recovery": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": {
    "glue.markup.page": {
     "line number": [
      501,
      502
     ]
    },
    "plot": {
     "line number": [
      501,
      502,
      507
     ]
    },
    "plot.a": {
     "line number": [
      504
     ]
    },
    "plot.a.close": {
     "line number": [
      506
     ]
    },
    "plot.img": {
     "line number": [
      505
     ]
    },
    "pycbc.results.legacy_grb.write_table": {
     "line number": [
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.legacy_grb.write_summary": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "float": {
     "line number": [
      155,
      155,
      159,
      161,
      162,
      163,
      165
     ]
    },
    "int": {
     "line number": [
      148,
      154
     ]
    },
    "lal.gpstime.LIGOTimeGPS": {
     "line number": [
      124
     ]
    },
    "lal.gpstime.gps_to_utc": {
     "line number": [
      124
     ]
    },
    "len": {
     "line number": [
      148,
      150,
      151
     ]
    },
    "open": {
     "line number": [
      138
     ]
    },
    "pycbc.results.legacy_grb.write_table": {
     "line number": [
      166,
      167,
      168,
      180
     ]
    },
    "pylal.antenna.timeDelay": {
     "line number": [
      154
     ]
    },
    "range": {
     "line number": [
      148,
      150,
      151
     ]
    },
    "zip": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.legacy_grb.write_table": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "len": {
     "line number": [
      80
     ]
    },
    "pycbc.results.legacy_grb.re": {
     "line number": [
      99
     ]
    },
    "range": {
     "line number": [
      80
     ]
    },
    "str": {
     "line number": [
      99
     ]
    },
    "type": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.metadata": {
  "data": {
   "symbols_in_volume": {
    "pycbc.results.metadata.escape_table": {
     "line number": [
      18
     ]
    },
    "pycbc.results.metadata.load_html_metadata": {
     "line number": [
      94
     ]
    },
    "pycbc.results.metadata.load_png_metadata": {
     "line number": [
      93
     ]
    },
    "pycbc.results.metadata.save_html_with_metadata": {
     "line number": [
      91
     ]
    },
    "pycbc.results.metadata.save_png_with_metadata": {
     "line number": [
      90
     ]
    },
    "pycbc.results.metadata.unescape_table": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.results.metadata.ConfigParser": {
  "data": {
   "shadows": "six.moves.configparser"
  },
  "type": "import"
 },
 "pycbc.results.metadata.HTMLParser": {
  "data": {
   "shadows": "six.moves.html_parser.HTMLParser"
  },
  "type": "import"
 },
 "pycbc.results.metadata.Image": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "pycbc.results.metadata.MetaParser": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "six.moves.html_parser.HTMLParser": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.results.metadata.MetaParser.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "six.moves.html_parser.HTMLParser.__init__": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.metadata.MetaParser.handle_data": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "pycbc.results.metadata.MetaParser.handle_starttag": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pycbc.results.metadata.unescape_table": {
     "line number": [
      38
     ]
    },
    "xml.sax.saxutils.unescape": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.metadata.PngImagePlugin": {
  "data": {
   "shadows": "PIL.PngImagePlugin"
  },
  "type": "import"
 },
 "pycbc.results.metadata._metadata_loader": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "pycbc.results.metadata._metadata_saver": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "pycbc.results.metadata.escape": {
  "data": {
   "shadows": "xml.sax.saxutils.escape"
  },
  "type": "import"
 },
 "pycbc.results.metadata.escape_table": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pycbc.results.metadata.fig_to_html": {
  "data": {
   "shadows": "mpld3.fig_to_html"
  },
  "type": "import"
 },
 "pycbc.results.metadata.html_escape": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "pycbc.results.metadata.escape_table": {
     "line number": [
      23
     ]
    },
    "xml.sax.saxutils.escape": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.metadata.load_html_metadata": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "open": {
     "line number": [
      60
     ]
    },
    "print": {
     "line number": [
      63
     ]
    },
    "pycbc.results.metadata.MetaParser": {
     "line number": [
      59
     ]
    },
    "six.moves.configparser.ConfigParser": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.metadata.load_metadata_from_file": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      134
     ]
    },
    "TypeError": {
     "line number": [
      135
     ]
    },
    "pycbc.results.metadata._metadata_loader": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.metadata.load_png_metadata": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "PIL.Image.open": {
     "line number": [
      85
     ]
    },
    "six.moves.configparser.ConfigParser": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.metadata.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycbc.results.metadata.pycbc.version": {
  "data": {
   "shadows": "pycbc.version"
  },
  "type": "import"
 },
 "pycbc.results.metadata.save_fig_with_metadata": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      114
     ]
    },
    "TypeError": {
     "line number": [
      115
     ]
    },
    "pycbc.results.metadata._metadata_saver": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.metadata.save_html_with_metadata": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      43
     ]
    },
    "mpld3.fig_to_html": {
     "line number": [
      47
     ]
    },
    "open": {
     "line number": [
      49
     ]
    },
    "pycbc.results.metadata.escape_table": {
     "line number": [
      51
     ]
    },
    "str": {
     "line number": [
      43,
      52
     ]
    },
    "xml.sax.saxutils.escape": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.metadata.save_png_with_metadata": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "PIL.Image.open": {
     "line number": [
      75
     ]
    },
    "PIL.PngImagePlugin.PngInfo": {
     "line number": [
      76
     ]
    },
    "str": {
     "line number": [
      79,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.metadata.unescape": {
  "data": {
   "shadows": "xml.sax.saxutils.unescape"
  },
  "type": "import"
 },
 "pycbc.results.metadata.unescape_table": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pycbc.results.mpld3_utils": {
  "data": {},
  "type": "module"
 },
 "pycbc.results.mpld3_utils.ClickLink": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "pycbc.results.mpld3_utils.mpld3": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.results.mpld3_utils.ClickLink.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "pycbc.results.mpld3_utils.mpld3": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.mpld3_utils.LineTooltip": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "pycbc.results.mpld3_utils.mpld3": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.results.mpld3_utils.LineTooltip.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "pycbc.results.mpld3_utils.LineTooltip": {
     "line number": [
      121
     ]
    },
    "super": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.mpld3_utils.MPLSlide": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pycbc.results.mpld3_utils.mpld3": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.results.mpld3_utils.MPLSlide.__init__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "pycbc.results.mpld3_utils.Tooltip": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "pycbc.results.mpld3_utils.mpld3": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.results.mpld3_utils.Tooltip.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "pycbc.results.mpld3_utils.Tooltip": {
     "line number": [
      116
     ]
    },
    "super": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.mpld3_utils.mpld3": {
  "data": {
   "shadows": "mpld3"
  },
  "type": "import"
 },
 "pycbc.results.mpld3_utils.mpld3.plugins": {
  "data": {
   "shadows": "mpld3.plugins"
  },
  "type": "import"
 },
 "pycbc.results.mpld3_utils.mpld3.utils": {
  "data": {
   "shadows": "mpld3.utils"
  },
  "type": "import"
 },
 "pycbc.results.plot": {
  "data": {},
  "type": "module"
 },
 "pycbc.results.plot.hist_overflow": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "len": {
     "line number": [
      8
     ]
    },
    "pycbc.results.plot.pylab": {
     "line number": [
      9,
      17,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.plot.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.results.plot.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "pycbc.results.render": {
  "data": {},
  "type": "module"
 },
 "pycbc.results.render.ConfigParser": {
  "data": {
   "shadows": "six.moves.configparser.ConfigParser"
  },
  "type": "import"
 },
 "pycbc.results.render.Environment": {
  "data": {
   "shadows": "jinja2.Environment"
  },
  "type": "import"
 },
 "pycbc.results.render.FileSystemLoader": {
  "data": {
   "shadows": "jinja2.FileSystemLoader"
  },
  "type": "import"
 },
 "pycbc.results.render.SegFile": {
  "data": {
   "shadows": "pycbc.workflow.core.SegFile"
  },
  "type": "import"
 },
 "pycbc.results.render.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "pycbc.results.render.get_embedded_config": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      71
     ]
    },
    "pycbc.results.render.types": {
     "line number": [
      74
     ]
    },
    "six.moves.configparser.ConfigParser": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.render.get_embedded_config.check_option": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pycbc.results.render.makedir": {
  "data": {
   "shadows": "pycbc.workflow.core.makedir"
  },
  "type": "import"
 },
 "pycbc.results.render.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycbc.results.render.pycbc.results": {
  "data": {
   "shadows": "pycbc.results"
  },
  "type": "import"
 },
 "pycbc.results.render.render_default": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      134
     ]
    },
    "abs": {
     "line number": [
      140
     ]
    },
    "jinja2.Environment": {
     "line number": [
      139
     ]
    },
    "jinja2.FileSystemLoader": {
     "line number": [
      139
     ]
    },
    "open": {
     "line number": [
      141
     ]
    },
    "print": {
     "line number": [
      135
     ]
    },
    "pycbc.workflow.core.SegFile.from_segment_xml": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.render.render_glitchgram": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      164
     ]
    },
    "jinja2.Environment": {
     "line number": [
      163
     ]
    },
    "jinja2.FileSystemLoader": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.render.render_ignore": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "pycbc.results.render.render_text": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      194
     ]
    },
    "jinja2.Environment": {
     "line number": [
      193
     ]
    },
    "jinja2.FileSystemLoader": {
     "line number": [
      193
     ]
    },
    "pycbc.results.render.codecs": {
     "line number": [
      185
     ]
    },
    "pycbc.results.unescape_table": {
     "line number": [
      189
     ]
    },
    "xml.sax.saxutils.unescape": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.render.render_tmplt": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "jinja2.Environment": {
     "line number": [
      231
     ]
    },
    "jinja2.FileSystemLoader": {
     "line number": [
      231
     ]
    },
    "open": {
     "line number": [
      223
     ]
    },
    "pycbc.results.render.get_embedded_config": {
     "line number": [
      233
     ]
    },
    "pycbc.results.render.setup_template_render": {
     "line number": [
      232
     ]
    },
    "pycbc.results.unescape_table": {
     "line number": [
      227
     ]
    },
    "xml.sax.saxutils.unescape": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.render.render_workflow_html_template": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      42
     ]
    },
    "jinja2.Environment": {
     "line number": [
      47
     ]
    },
    "jinja2.FileSystemLoader": {
     "line number": [
      47
     ]
    },
    "len": {
     "line number": [
      50
     ]
    },
    "pycbc.results.metadata.save_html_with_metadata": {
     "line number": [
      60
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      38
     ]
    },
    "str": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.render.save_html_with_metadata": {
  "data": {
   "shadows": "pycbc.results.metadata.save_html_with_metadata"
  },
  "type": "import"
 },
 "pycbc.results.render.setup_template_render": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "eval": {
     "line number": [
      90,
      100
     ]
    },
    "pycbc.results.render.get_embedded_config": {
     "line number": [
      83
     ]
    },
    "pycbc.results.render.render_default": {
     "line number": [
      103,
      108
     ]
    },
    "render_function": {
     "line number": [
      91,
      100,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.render.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pycbc.results.render.unescape": {
  "data": {
   "shadows": "xml.sax.saxutils.unescape"
  },
  "type": "import"
 },
 "pycbc.results.render.unescape_table": {
  "data": {
   "shadows": "pycbc.results.unescape_table"
  },
  "type": "import"
 },
 "pycbc.results.scatter_histograms": {
  "data": {
   "symbols_in_volume": {
    "pycbc.results.scatter_histograms.matplotlib": {
     "line number": [
      44
     ]
    },
    "pycbc.results.scatter_histograms.sys": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.results.scatter_histograms.FieldArray": {
  "data": {
   "shadows": "pycbc.io.FieldArray"
  },
  "type": "import"
 },
 "pycbc.results.scatter_histograms.construct_kde": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      152,
      153
     ]
    },
    "pycbc.results.scatter_histograms.kombine": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.scatter_histograms.create_axes_grid": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      84
     ]
    },
    "any": {
     "line number": [
      83
     ]
    },
    "len": {
     "line number": [
      86
     ]
    },
    "list": {
     "line number": [
      102
     ]
    },
    "matplotlib.gridspec.GridSpec": {
     "line number": [
      95
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      93
     ]
    },
    "matplotlib.pyplot.setp": {
     "line number": [
      125,
      130
     ]
    },
    "matplotlib.pyplot.subplot": {
     "line number": [
      112
     ]
    },
    "pycbc.results.scatter_histograms.itertools": {
     "line number": [
      102
     ]
    },
    "pycbc.results.scatter_histograms.numpy": {
     "line number": [
      99
     ]
    },
    "range": {
     "line number": [
      110,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.scatter_histograms.create_density_plot": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      249,
      250
     ]
    },
    "dict": {
     "line number": [
      288
     ]
    },
    "draw": {
     "line number": [
      273
     ]
    },
    "int": {
     "line number": [
      273,
      287
     ]
    },
    "kde": {
     "line number": [
      253,
      256,
      273
     ]
    },
    "kde.draw": {
     "line number": [
      254
     ]
    },
    "kde.resample": {
     "line number": [
      257
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      228
     ]
    },
    "pycbc.io.FieldArray.from_kwargs": {
     "line number": [
      262
     ]
    },
    "pycbc.results.scatter_histograms.construct_kde": {
     "line number": [
      236
     ]
    },
    "pycbc.results.scatter_histograms.numpy": {
     "line number": [
      223,
      224,
      235,
      248,
      251,
      253,
      266,
      275,
      276
     ]
    },
    "zip": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.scatter_histograms.create_marginalized_hist": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "len": {
     "line number": [
      355,
      371
     ]
    },
    "max": {
     "line number": [
      373
     ]
    },
    "min": {
     "line number": [
      372
     ]
    },
    "pycbc.results.scatter_histograms.numpy": {
     "line number": [
      356,
      379,
      380,
      381
     ]
    },
    "pycbc.results.scatter_histograms.set_marginal_histogram_title": {
     "line number": [
      390,
      408
     ]
    },
    "pycbc.results.str_utils.format_value": {
     "line number": [
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.scatter_histograms.create_multidim_plot": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      653,
      674,
      722,
      727
     ]
    },
    "ValueError": {
     "line number": [
      617
     ]
    },
    "dict": {
     "line number": [
      626
     ]
    },
    "enumerate": {
     "line number": [
      641,
      665
     ]
    },
    "float": {
     "line number": [
      647,
      648
     ]
    },
    "len": {
     "line number": [
      598,
      734
     ]
    },
    "pycbc.results.scatter_histograms.create_axes_grid": {
     "line number": [
      658
     ]
    },
    "pycbc.results.scatter_histograms.create_density_plot": {
     "line number": [
      709
     ]
    },
    "pycbc.results.scatter_histograms.create_marginalized_hist": {
     "line number": [
      678
     ]
    },
    "pycbc.results.scatter_histograms.get_scale_fac": {
     "line number": [
      742
     ]
    },
    "pycbc.results.scatter_histograms.reduce_ticks": {
     "line number": [
      737,
      738
     ]
    },
    "pycbc.results.scatter_histograms.remove_common_offset": {
     "line number": [
      642
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.scatter_histograms.get_scale_fac": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "pycbc.results.scatter_histograms.gridspec": {
  "data": {
   "shadows": "matplotlib.gridspec"
  },
  "type": "import"
 },
 "pycbc.results.scatter_histograms.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pycbc.results.scatter_histograms.kombine": {
  "data": {
   "shadows": "kombine"
  },
  "type": "import"
 },
 "pycbc.results.scatter_histograms.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pycbc.results.scatter_histograms.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.results.scatter_histograms.offsetbox": {
  "data": {
   "shadows": "matplotlib.offsetbox"
  },
  "type": "import"
 },
 "pycbc.results.scatter_histograms.pyplot": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pycbc.results.scatter_histograms.reduce_ticks": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      795
     ]
    },
    "getattr": {
     "line number": [
      791,
      794
     ]
    },
    "int": {
     "line number": [
      802
     ]
    },
    "len": {
     "line number": [
      792,
      796,
      802
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.scatter_histograms.remove_common_offset": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      763,
      764
     ]
    },
    "int": {
     "line number": [
      770
     ]
    },
    "pycbc.results.scatter_histograms.numpy": {
     "line number": [
      763,
      764,
      765,
      765,
      766
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.scatter_histograms.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "pycbc.results.scatter_histograms.set_marginal_histogram_title": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      462,
      481
     ]
    },
    "hasattr": {
     "line number": [
      456
     ]
    },
    "len": {
     "line number": [
      447
     ]
    },
    "matplotlib.offsetbox.AnchoredOffsetbox": {
     "line number": [
      490
     ]
    },
    "matplotlib.offsetbox.HPacker": {
     "line number": [
      453
     ]
    },
    "matplotlib.offsetbox.TextArea": {
     "line number": [
      460,
      479
     ]
    },
    "matplotlib.offsetbox.VPacker": {
     "line number": [
      453
     ]
    },
    "packer_class": {
     "line number": [
      469,
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.scatter_histograms.str_utils": {
  "data": {
   "shadows": "pycbc.results.str_utils"
  },
  "type": "import"
 },
 "pycbc.results.scatter_histograms.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pycbc.results.str_utils": {
  "data": {},
  "type": "module"
 },
 "pycbc.results.str_utils.drop_trailing_zeros": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pycbc.results.str_utils.format_value": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      183,
      184,
      188,
      190
     ]
    },
    "float": {
     "line number": [
      214,
      215,
      215,
      229,
      232,
      232,
      234,
      234
     ]
    },
    "int": {
     "line number": [
      201
     ]
    },
    "min": {
     "line number": [
      189
     ]
    },
    "pycbc.results.str_utils.get_signum": {
     "line number": [
      208,
      213,
      220,
      227,
      228,
      231,
      233
     ]
    },
    "pycbc.results.str_utils.numpy": {
     "line number": [
      190,
      193,
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.str_utils.get_signum": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      89
     ]
    },
    "float": {
     "line number": [
      68,
      75
     ]
    },
    "int": {
     "line number": [
      67,
      74
     ]
    },
    "min": {
     "line number": [
      70
     ]
    },
    "pycbc.results.str_utils.drop_trailing_zeros": {
     "line number": [
      91
     ]
    },
    "pycbc.results.str_utils.numpy": {
     "line number": [
      60
     ]
    },
    "round": {
     "line number": [
      68,
      75,
      80,
      86
     ]
    },
    "str": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.str_utils.mathjax_html_header": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "pycbc.results.str_utils.mjax_header": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.str_utils.mjax_header": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pycbc.results.str_utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.results.table": {
  "data": {},
  "type": "module"
 },
 "pycbc.results.table.google_table_template": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pycbc.results.table.mako.template": {
  "data": {
   "shadows": "mako.template"
  },
  "type": "import"
 },
 "pycbc.results.table.sngl_table_headers": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "pycbc.results.table.static_table": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "pycbc.results.table.static_table_template": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.table.static_table_template": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "pycbc.results.table.table": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "list": {
     "line number": [
      94
     ]
    },
    "pycbc.results.table.google_table_template": {
     "line number": [
      96
     ]
    },
    "pycbc.results.table.uuid": {
     "line number": [
      82
     ]
    },
    "zip": {
     "line number": [
      85,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.table.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "pycbc.results.versioning": {
  "data": {},
  "type": "module"
 },
 "pycbc.results.versioning.create_versioning_page": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "pycbc.results.versioning.logging": {
     "line number": [
      180,
      185
     ]
    },
    "pycbc.results.versioning.os": {
     "line number": [
      181,
      182
     ]
    },
    "pycbc.results.versioning.write_code_versions": {
     "line number": [
      184
     ]
    },
    "pycbc.results.versioning.write_library_information": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.versioning.get_code_version_numbers": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      155
     ]
    },
    "pycbc.results.versioning.os": {
     "line number": [
      143
     ]
    },
    "pycbc.results.versioning.subprocess": {
     "line number": [
      151,
      152,
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.versioning.get_library_version_info": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      55,
      70,
      85
     ]
    },
    "add_info_new_version": {
     "line number": [
      56,
      71,
      86
     ]
    },
    "pycbc.results.versioning.lal": {
     "line number": [
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      56
     ]
    },
    "pycbc.results.versioning.lalframe": {
     "line number": [
      62,
      63,
      64,
      65,
      66,
      67,
      68,
      69,
      71
     ]
    },
    "pycbc.results.versioning.lalsimulation": {
     "line number": [
      77,
      78,
      79,
      80,
      81,
      82,
      83,
      84,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.versioning.get_library_version_info.add_info_new_version": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.versioning.glue.git_version": {
  "data": {
   "shadows": "glue.git_version"
  },
  "type": "import"
 },
 "pycbc.results.versioning.html_escape": {
  "data": {
   "shadows": "pycbc.results.html_escape"
  },
  "type": "import"
 },
 "pycbc.results.versioning.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.results.versioning.lalframe": {
  "data": {
   "shadows": "lalframe"
  },
  "type": "import"
 },
 "pycbc.results.versioning.lalsimulation": {
  "data": {
   "shadows": "lalsimulation"
  },
  "type": "import"
 },
 "pycbc.results.versioning.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.results.versioning.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.results.versioning.pycbc.version": {
  "data": {
   "shadows": "pycbc.version"
  },
  "type": "import"
 },
 "pycbc.results.versioning.save_fig_with_metadata": {
  "data": {
   "shadows": "pycbc.results.save_fig_with_metadata"
  },
  "type": "import"
 },
 "pycbc.results.versioning.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pycbc.results.versioning.write_code_versions": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      169
     ]
    },
    "pycbc.results.html_escape": {
     "line number": [
      176
     ]
    },
    "pycbc.results.save_fig_with_metadata": {
     "line number": [
      176
     ]
    },
    "pycbc.results.versioning.get_code_version_numbers": {
     "line number": [
      161
     ]
    },
    "pycbc.results.versioning.os": {
     "line number": [
      177
     ]
    },
    "str": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.results.versioning.write_library_information": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "pycbc.results.html_escape": {
     "line number": [
      128
     ]
    },
    "pycbc.results.save_fig_with_metadata": {
     "line number": [
      128
     ]
    },
    "pycbc.results.versioning.get_library_version_info": {
     "line number": [
      118
     ]
    },
    "pycbc.results.versioning.os": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme": {
  "data": {
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      166
     ]
    },
    "RuntimeError": {
     "line number": [
      167
     ]
    },
    "get_ctypes_library": {
     "line number": [
      36
     ]
    },
    "map": {
     "line number": [
      170
     ]
    },
    "pycbc.scheme.CPUScheme": {
     "line number": [
      157
     ]
    },
    "pycbc.scheme.CUDAScheme": {
     "line number": [
      156
     ]
    },
    "pycbc.scheme.DefaultScheme": {
     "line number": [
      177,
      179
     ]
    },
    "pycbc.scheme.MKLScheme": {
     "line number": [
      158
     ]
    },
    "pycbc.scheme.NumpyScheme": {
     "line number": [
      159
     ]
    },
    "pycbc.scheme._SchemeManager": {
     "line number": [
      68
     ]
    },
    "pycbc.scheme._default_scheme_prefix": {
     "line number": [
      165,
      169,
      179
     ]
    },
    "pycbc.scheme._scheme_map": {
     "line number": [
      165,
      170
     ]
    },
    "pycbc.scheme.default_context": {
     "line number": [
      178
     ]
    },
    "pycbc.scheme.mgr": {
     "line number": [
      178
     ]
    },
    "pycbc.scheme.os": {
     "line number": [
      163
     ]
    },
    "pycbc.scheme.scheme_prefix": {
     "line number": [
      161,
      179
     ]
    },
    "repr": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.scheme.CPUScheme": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "pycbc.scheme.Scheme": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.scheme.CPUScheme.__enter__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "int": {
     "line number": [
      137
     ]
    },
    "pycbc.scheme.Scheme": {
     "line number": [
      134
     ]
    },
    "pycbc.scheme._libgomp": {
     "line number": [
      136,
      137
     ]
    },
    "pycbc.scheme.os": {
     "line number": [
      135
     ]
    },
    "str": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.CPUScheme.__exit__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "pycbc.scheme.Scheme": {
     "line number": [
      143
     ]
    },
    "pycbc.scheme._libgomp": {
     "line number": [
      141,
      142
     ]
    },
    "pycbc.scheme.os": {
     "line number": [
      140
     ]
    },
    "type": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.CPUScheme.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "int": {
     "line number": [
      125,
      128
     ]
    },
    "isinstance": {
     "line number": [
      125
     ]
    },
    "pycbc.scheme.multiprocessing": {
     "line number": [
      131
     ]
    },
    "pycbc.scheme.os": {
     "line number": [
      127,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.CUDAScheme": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "pycbc.scheme.Scheme": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.scheme.CUDAScheme.__init__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      115
     ]
    },
    "pycbc.scheme.Scheme": {
     "line number": [
      113
     ]
    },
    "pycbc.scheme.atexit": {
     "line number": [
      121
     ]
    },
    "pycbc.scheme.clean_cuda": {
     "line number": [
      121
     ]
    },
    "pycbc.scheme.pycbc": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.ChooseBySchemeDict": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.scheme.ChooseBySchemeDict.__getitem__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "dict.__getitem__": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.DefaultScheme": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "pycbc.scheme._default_scheme_class": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.scheme.MKLScheme": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "pycbc.scheme.CPUScheme": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.scheme.MKLScheme.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      149
     ]
    },
    "pycbc.scheme.CPUScheme": {
     "line number": [
      147
     ]
    },
    "pycbc.scheme.pycbc": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.NumpyScheme": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "pycbc.scheme.CPUScheme": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.scheme.Scheme": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "object": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.scheme.Scheme.__del__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "pycbc.scheme.Scheme": {
     "line number": [
      89,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.Scheme.__enter__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "pycbc.scheme.mgr": {
     "line number": [
      83,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.Scheme.__exit__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "pycbc.scheme.default_context": {
     "line number": [
      87
     ]
    },
    "pycbc.scheme.mgr": {
     "line number": [
      86,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.Scheme.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      80
     ]
    },
    "pycbc.scheme.DefaultScheme": {
     "line number": [
      77
     ]
    },
    "pycbc.scheme.Scheme": {
     "line number": [
      79,
      81
     ]
    },
    "type": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme._SchemeManager": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "object": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.scheme._SchemeManager.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      49
     ]
    },
    "pycbc.scheme._SchemeManager": {
     "line number": [
      48,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme._SchemeManager.lock": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pycbc.scheme._SchemeManager.shift_to": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme._SchemeManager.unlock": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pycbc.scheme._cuda_cleanup_list": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "pycbc.scheme._default_scheme_class": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "pycbc.scheme._default_scheme_prefix": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "pycbc.scheme._import_cache": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "pycbc.scheme._libgomp": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pycbc.scheme._scheme_map": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "pycbc.scheme.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "pycbc.scheme.clean_cuda": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "func": {
     "line number": [
      104
     ]
    },
    "pycbc.scheme._cuda_cleanup_list": {
     "line number": [
      102,
      103
     ]
    },
    "pycuda.tools.clear_context_caches": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.clear_context_caches": {
  "data": {
   "shadows": "pycuda.tools.clear_context_caches"
  },
  "type": "import"
 },
 "pycbc.scheme.cpuonly": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      214
     ]
    },
    "decorator.decorator": {
     "line number": [
      211
     ]
    },
    "fn": {
     "line number": [
      217
     ]
    },
    "issubclass": {
     "line number": [
      213
     ]
    },
    "pycbc.scheme.CPUScheme": {
     "line number": [
      213
     ]
    },
    "pycbc.scheme.mgr": {
     "line number": [
      213
     ]
    },
    "type": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.current_prefix": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "pycbc.scheme.mgr": {
     "line number": [
      182
     ]
    },
    "pycbc.scheme.scheme_prefix": {
     "line number": [
      182
     ]
    },
    "type": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "pycbc.scheme.default_context": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "pycbc.scheme.from_cli": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "int": {
     "line number": [
      275,
      284
     ]
    },
    "len": {
     "line number": [
      272,
      281
     ]
    },
    "pycbc.scheme.CPUScheme": {
     "line number": [
      285,
      287
     ]
    },
    "pycbc.scheme.CUDAScheme": {
     "line number": [
      270
     ]
    },
    "pycbc.scheme.MKLScheme": {
     "line number": [
      276,
      278
     ]
    },
    "pycbc.scheme.logging": {
     "line number": [
      269,
      279,
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.insert_processing_option_group": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "int": {
     "line number": [
      249
     ]
    },
    "list": {
     "line number": [
      233
     ]
    },
    "pycbc.scheme.scheme_prefix": {
     "line number": [
      233
     ]
    },
    "set": {
     "line number": [
      233
     ]
    },
    "str": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.scheme.mgr": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pycbc.scheme.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pycbc.scheme.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.scheme.pycbc": {
  "data": {
   "shadows": "pycbc"
  },
  "type": "import"
 },
 "pycbc.scheme.pycuda.driver": {
  "data": {
   "shadows": "pycuda.driver"
  },
  "type": "import"
 },
 "pycbc.scheme.register_clean_cuda": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "pycbc.scheme._cuda_cleanup_list": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.scheme_prefix": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "pycbc.scheme.schemed": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "pycbc.scheme.schemed.scheming_function": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      195
     ]
    },
    "ImportError": {
     "line number": [
      195
     ]
    },
    "KeyError": {
     "line number": [
      190
     ]
    },
    "RuntimeError": {
     "line number": [
      207
     ]
    },
    "__import__": {
     "line number": [
      193
     ]
    },
    "decorator.decorator": {
     "line number": [
      186
     ]
    },
    "getattr": {
     "line number": [
      194
     ]
    },
    "pycbc.scheme._import_cache": {
     "line number": [
      189,
      198,
      199,
      201
     ]
    },
    "pycbc.scheme.current_prefix": {
     "line number": [
      206
     ]
    },
    "pycbc.scheme.mgr": {
     "line number": [
      189,
      191,
      198,
      199,
      201
     ]
    },
    "pycbc.scheme.scheme_prefix": {
     "line number": [
      193
     ]
    },
    "schemed_fn": {
     "line number": [
      203
     ]
    },
    "str": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.scheme.verify_processing_options": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "pycbc.scheme.scheme_prefix": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.sensitivity": {
  "data": {},
  "type": "module"
 },
 "pycbc.sensitivity.compute_search_efficiency_in_bins": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "pycbc.sensitivity.numpy": {
     "line number": [
      29
     ]
    },
    "sim_to_bins_function": {
     "line number": [
      19,
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.sensitivity.compute_search_volume_in_bins": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pycbc.sensitivity.compute_search_efficiency_in_bins": {
     "line number": [
      43
     ]
    },
    "pycbc.sensitivity.numpy": {
     "line number": [
      53,
      53,
      56,
      57
     ]
    },
    "sim_to_bins_function": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.sensitivity.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.sensitivity.volume_binned_pylal": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "max": {
     "line number": [
      256
     ]
    },
    "min": {
     "line number": [
      256
     ]
    },
    "pycbc.sensitivity.compute_search_volume_in_bins": {
     "line number": [
      258
     ]
    },
    "pycbc.sensitivity.numpy": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.sensitivity.volume_binned_pylal.sims_to_bin": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "pycbc.sensitivity.volume_montecarlo": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      165,
      183
     ]
    },
    "len": {
     "line number": [
      207,
      219
     ]
    },
    "max": {
     "line number": [
      157,
      163
     ]
    },
    "min": {
     "line number": [
      217
     ]
    },
    "pycbc.sensitivity.numpy": {
     "line number": [
      150,
      169,
      186,
      191,
      215,
      217,
      217,
      218,
      220
     ]
    },
    "sum": {
     "line number": [
      192,
      195,
      200,
      220,
      222,
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.sensitivity.volume_shell": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "len": {
     "line number": [
      287,
      288,
      294
     ]
    },
    "pycbc.sensitivity.numpy": {
     "line number": [
      281,
      295,
      296
     ]
    },
    "range": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.sensitivity.volume_to_distance_with_errors": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "pycbc.sensitivity.numpy": {
     "line number": [
      78,
      79,
      80,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "pycbc.strain": {
  "data": {},
  "type": "module"
 },
 "pycbc.strain.calibration": {
  "data": {
   "symbols_in_volume": {
    "pycbc.strain.calibration.CubicSpline": {
     "line number": [
      177,
      177
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.strain.calibration.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pycbc.strain.calibration.CubicSpline": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "pycbc.strain.calibration.Recalibrate": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.strain.calibration.CubicSpline.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      136
     ]
    },
    "float": {
     "line number": [
      132,
      133
     ]
    },
    "int": {
     "line number": [
      134
     ]
    },
    "numpy.log10": {
     "line number": [
      139,
      140
     ]
    },
    "numpy.logspace": {
     "line number": [
      139
     ]
    },
    "pycbc.strain.calibration.Recalibrate": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.calibration.CubicSpline.apply_calibration": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "amplitude_spline": {
     "line number": [
      162
     ]
    },
    "phase_spline": {
     "line number": [
      168
     ]
    },
    "range": {
     "line number": [
      159,
      166
     ]
    },
    "scipy.interpolate.UnivariateSpline": {
     "line number": [
      160,
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.calibration.Recalibrate": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "abc.ABCMeta": {
     "line number": [
      25
     ]
    },
    "object": {
     "line number": [
      26
     ]
    },
    "six.add_metaclass": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.strain.calibration.Recalibrate.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.calibration.Recalibrate.apply_calibration": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.calibration.Recalibrate.from_config": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      79
     ]
    },
    "dict": {
     "line number": [
      99
     ]
    },
    "len": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.calibration.Recalibrate.map_to_adjust": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "len": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.calibration.UnivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.UnivariateSpline"
  },
  "type": "import"
 },
 "pycbc.strain.calibration.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pycbc.strain.calibration.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "pycbc.strain.calibration.all_models": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "pycbc.strain.calibration.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.strain.gate": {
  "data": {},
  "type": "module"
 },
 "pycbc.strain.gate._gates_from_cli": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      39
     ]
    },
    "ValueError": {
     "line number": [
      34,
      35
     ]
    },
    "float": {
     "line number": [
      31,
      32,
      33
     ]
    },
    "getattr": {
     "line number": [
      26,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.gate.add_gate_option_group": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "str": {
     "line number": [
      124,
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.gate.apply_gates_to_fd": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      105,
      107
     ]
    },
    "pycbc.strain.gate.apply_gates_to_td": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.gate.apply_gates_to_td": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.gate.gates_from_cli": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "pycbc.strain.gate._gates_from_cli": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.gate.psd_gates_from_cli": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "pycbc.strain.gate._gates_from_cli": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.lines": {
  "data": {},
  "type": "module"
 },
 "pycbc.strain.lines.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.strain.lines.avg_inner_product": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "int": {
     "line number": [
      65,
      67
     ]
    },
    "len": {
     "line number": [
      69
     ]
    },
    "pycbc.strain.lines.complex_median": {
     "line number": [
      76
     ]
    },
    "pycbc.strain.lines.numpy": {
     "line number": [
      71,
      77,
      77
     ]
    },
    "range": {
     "line number": [
      67
     ]
    },
    "sum": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.lines.calibration_lines": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "float": {
     "line number": [
      156
     ]
    },
    "pycbc.strain.lines.matching_line": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.lines.clean_data": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      188,
      191
     ]
    },
    "float": {
     "line number": [
      196
     ]
    },
    "int": {
     "line number": [
      193,
      199,
      199
     ]
    },
    "len": {
     "line number": [
      205,
      206,
      210,
      211,
      213,
      214
     ]
    },
    "pycbc.strain.lines.matching_line": {
     "line number": [
      200
     ]
    },
    "pycbc.strain.lines.numpy": {
     "line number": [
      193,
      205,
      206
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.lines.complex_median": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "pycbc.strain.lines.numpy": {
     "line number": [
      35,
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.lines.line_model": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "float": {
     "line number": [
      106
     ]
    },
    "len": {
     "line number": [
      103
     ]
    },
    "pycbc.strain.lines.numpy": {
     "line number": [
      107,
      108
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      103
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.lines.matching_line": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "pycbc.strain.lines.avg_inner_product": {
     "line number": [
      134
     ]
    },
    "pycbc.strain.lines.line_model": {
     "line number": [
      132,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.lines.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.strain.lines.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.strain.models": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pycbc.strain.read_model_from_config": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "pycbc.strain.models": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate": {
  "data": {},
  "type": "module"
 },
 "pycbc.strain.recalibrate.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pycbc.strain.recalibrate.CubicSpline": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "pycbc.strain.recalibrate.Recalibrate": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.strain.recalibrate.CubicSpline.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      141
     ]
    },
    "float": {
     "line number": [
      137,
      138
     ]
    },
    "int": {
     "line number": [
      139
     ]
    },
    "numpy.log10": {
     "line number": [
      144,
      145
     ]
    },
    "numpy.logspace": {
     "line number": [
      144
     ]
    },
    "pycbc.strain.recalibrate.Recalibrate": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate.CubicSpline.apply_calibration": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "amplitude_spline": {
     "line number": [
      167
     ]
    },
    "phase_spline": {
     "line number": [
      173
     ]
    },
    "range": {
     "line number": [
      164,
      171
     ]
    },
    "scipy.interpolate.UnivariateSpline": {
     "line number": [
      165,
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.strain.recalibrate.PhysicalModel": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "object": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.strain.recalibrate.PhysicalModel.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "float": {
     "line number": [
      224,
      225,
      226
     ]
    },
    "numpy.real": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate.PhysicalModel.adjust_strain": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "k_amp_off": {
     "line number": [
      404
     ]
    },
    "k_phase_off": {
     "line number": [
      405
     ]
    },
    "numpy.abs": {
     "line number": [
      396
     ]
    },
    "numpy.angle": {
     "line number": [
      397
     ]
    },
    "numpy.exp": {
     "line number": [
      405
     ]
    },
    "numpy.unwrap": {
     "line number": [
      397
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      406
     ]
    },
    "scipy.interpolate.UnivariateSpline": {
     "line number": [
      401,
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate.PhysicalModel.from_config": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      432
     ]
    },
    "cls": {
     "line number": [
      478
     ]
    },
    "cls.tf_from_file": {
     "line number": [
      459,
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate.PhysicalModel.map_to_adjust": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "zip": {
     "line number": [
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate.PhysicalModel.tf_from_file": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      412
     ]
    },
    "numpy.array": {
     "line number": [
      430
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      427
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate.PhysicalModel.update_c": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate.PhysicalModel.update_g": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate.PhysicalModel.update_r": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate.Recalibrate": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "abc.ABCMeta": {
     "line number": [
      29
     ]
    },
    "object": {
     "line number": [
      30
     ]
    },
    "six.add_metaclass": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.strain.recalibrate.Recalibrate.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate.Recalibrate.apply_calibration": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "abc.abstractmethod": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate.Recalibrate.from_config": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      84
     ]
    },
    "cls": {
     "line number": [
      111
     ]
    },
    "dict": {
     "line number": [
      104
     ]
    },
    "len": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate.Recalibrate.map_to_adjust": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "len": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.recalibrate.UnivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.UnivariateSpline"
  },
  "type": "import"
 },
 "pycbc.strain.recalibrate.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pycbc.strain.recalibrate.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "pycbc.strain.recalibrate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.strain.strain": {
  "data": {
   "symbols_in_volume": {
    "pycbc.strain.strain.ensure_one_opt_groups": {
     "line number": [
      788
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.strain.strain.Array": {
  "data": {
   "shadows": "pycbc.types.Array"
  },
  "type": "import"
 },
 "pycbc.strain.strain.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.strain.strain.InjectionSet": {
  "data": {
   "shadows": "pycbc.inject.InjectionSet"
  },
  "type": "import"
 },
 "pycbc.strain.strain.MultiDetOptionAction": {
  "data": {
   "shadows": "pycbc.types.MultiDetOptionAction"
  },
  "type": "import"
 },
 "pycbc.strain.strain.MultiDetOptionActionSpecial": {
  "data": {
   "shadows": "pycbc.types.MultiDetOptionActionSpecial"
  },
  "type": "import"
 },
 "pycbc.strain.strain.MultiDetOptionAppendAction": {
  "data": {
   "shadows": "pycbc.types.MultiDetOptionAppendAction"
  },
  "type": "import"
 },
 "pycbc.strain.strain.SGBurstInjectionSet": {
  "data": {
   "shadows": "pycbc.inject.SGBurstInjectionSet"
  },
  "type": "import"
 },
 "pycbc.strain.strain.StrainBuffer": {
  "data": {
   "lineno": 1192
  },
  "type": "class"
 },
 "pycbc.strain.strain.StrainBuffer.__init__": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": {
    "bin": {
     "line number": [
      1305,
      1328
     ]
    },
    "dict": {
     "line number": [
      1316
     ]
    },
    "int": {
     "line number": [
      1352,
      1361,
      1363,
      1371,
      1377
     ]
    },
    "len": {
     "line number": [
      1319,
      1352
     ]
    },
    "pycbc.strain.strain.StrainBuffer": {
     "line number": [
      1287
     ]
    },
    "pycbc.strain.strain.logging": {
     "line number": [
      1304,
      1322,
      1327
     ]
    },
    "pycbc.strain.strain.numpy": {
     "line number": [
      1353,
      1360
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      1353
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      1353
     ]
    },
    "scipy.signal.kaiserord": {
     "line number": [
      1359
     ]
    },
    "super": {
     "line number": [
      1287
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainBuffer.add_hard_count": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1398
     ]
    },
    "pycbc.strain.strain.numpy": {
     "line number": [
      1398
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainBuffer.advance": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1585
     ]
    },
    "len": {
     "line number": [
      1587,
      1609
     ]
    },
    "pycbc.strain.strain.StrainBuffer": {
     "line number": [
      1548
     ]
    },
    "pycbc.strain.strain.gate_data": {
     "line number": [
      1604
     ]
    },
    "pycbc.strain.strain.logging": {
     "line number": [
      1553,
      1571,
      1603
     ]
    },
    "pycbc.strain.strain.numpy": {
     "line number": [
      1593
     ]
    },
    "super": {
     "line number": [
      1548
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainBuffer.end_time": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1392
     ]
    },
    "len": {
     "line number": [
      1392
     ]
    },
    "property": {
     "line number": [
      1389
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainBuffer.from_cli": {
  "data": {
   "lineno": 1621,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1621
     ]
    },
    "cls": {
     "line number": [
      1646
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainBuffer.invalidate_psd": {
  "data": {
   "lineno": 1401
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainBuffer.near_hwinj": {
  "data": {
   "lineno": 1502
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainBuffer.null_advance_strain": {
  "data": {
   "lineno": 1513,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1521
     ]
    },
    "len": {
     "line number": [
      1526
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainBuffer.overwhitened_data": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1455,
      1457,
      1464,
      1470
     ]
    },
    "len": {
     "line number": [
      1456,
      1484,
      1489
     ]
    },
    "pycbc.filter.make_frequency_series": {
     "line number": [
      1458
     ]
    },
    "pycbc.strain.strain.gate_data": {
     "line number": [
      1488
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      1489
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      1481
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      1481,
      1489
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainBuffer.recalculate_psd": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      1420,
      1427
     ]
    },
    "int": {
     "line number": [
      1411
     ]
    },
    "len": {
     "line number": [
      1412
     ]
    },
    "pycbc.strain.strain.logging": {
     "line number": [
      1421,
      1428,
      1437
     ]
    },
    "pycbc.waveform.spa_tmplt.spa_distance": {
     "line number": [
      1416
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainBuffer.start_time": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1384
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainSegments": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": {
    "object": {
     "line number": [
      891
     ]
    },
    "pycbc.strain.strain.required_opts_list": {
     "line number": [
      1178
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.strain.strain.StrainSegments.__init__": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      932,
      945
     ]
    },
    "float": {
     "line number": [
      962,
      962,
      965,
      1005,
      1005,
      1006,
      1006
     ]
    },
    "hasattr": {
     "line number": [
      1003,
      1022
     ]
    },
    "int": {
     "line number": [
      922,
      925,
      927,
      935,
      938,
      940,
      955,
      956,
      962,
      965,
      972,
      973,
      978,
      979,
      984,
      985,
      990,
      991,
      1000,
      1001
     ]
    },
    "pycbc.strain.strain.copy": {
     "line number": [
      995
     ]
    },
    "pycbc.strain.strain.numpy": {
     "line number": [
      962,
      965
     ]
    },
    "range": {
     "line number": [
      970
     ]
    },
    "slice": {
     "line number": [
      974,
      980,
      986,
      992,
      1035
     ]
    },
    "zip": {
     "line number": [
      1008
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainSegments.fourier_segments": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1051,
      1059,
      1061
     ]
    },
    "pycbc.filter.make_frequency_series": {
     "line number": [
      1052,
      1058,
      1062
     ]
    },
    "zip": {
     "line number": [
      1050
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainSegments.from_cli": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1070
     ]
    },
    "cls": {
     "line number": [
      1075
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainSegments.from_cli_multi_ifos": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1134
     ]
    },
    "cls.from_cli_single_ifo": {
     "line number": [
      1141
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainSegments.from_cli_single_ifo": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1121
     ]
    },
    "cls": {
     "line number": [
      1126
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainSegments.insert_segment_option_group": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1084
     ]
    },
    "float": {
     "line number": [
      1111
     ]
    },
    "int": {
     "line number": [
      1092,
      1094,
      1096,
      1098,
      1101
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainSegments.insert_segment_option_group_multi_ifo": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1145
     ]
    },
    "int": {
     "line number": [
      1153,
      1156,
      1159,
      1163,
      1167
     ]
    },
    "pycbc.types.MultiDetOptionAction": {
     "line number": [
      1154,
      1157,
      1160,
      1164,
      1168
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainSegments.verify_segment_options": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1183
     ]
    },
    "cls.required_opts_list": {
     "line number": [
      1185
     ]
    },
    "pycbc.types.required_opts": {
     "line number": [
      1185
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.StrainSegments.verify_segment_options_multi_ifo": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1187
     ]
    },
    "cls.required_opts_list": {
     "line number": [
      1190
     ]
    },
    "pycbc.types.required_opts_multi_ifo": {
     "line number": [
      1190
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.strain.strain.colored_noise": {
  "data": {
   "shadows": "pycbc.noise.reproduceable.colored_noise"
  },
  "type": "import"
 },
 "pycbc.strain.strain.complex_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.complex_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.strain.strain.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycbc.strain.strain.copy_opts_for_single_ifo": {
  "data": {
   "shadows": "pycbc.types.copy_opts_for_single_ifo"
  },
  "type": "import"
 },
 "pycbc.strain.strain.detect_loud_glitches": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      159
     ]
    },
    "float": {
     "line number": [
      106
     ]
    },
    "int": {
     "line number": [
      105,
      113,
      117,
      127,
      128,
      133,
      136,
      139,
      174
     ]
    },
    "len": {
     "line number": [
      108,
      116,
      117,
      118,
      126
     ]
    },
    "pycbc.filter.resample_to_delta_t": {
     "line number": [
      101
     ]
    },
    "pycbc.strain.strain.logging": {
     "line number": [
      100,
      104,
      125,
      142,
      145,
      152,
      158,
      170
     ]
    },
    "pycbc.strain.strain.next_power_of_2": {
     "line number": [
      116
     ]
    },
    "pycbc.strain.strain.numpy": {
     "line number": [
      106,
      137,
      140,
      171,
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.ensure_one_opt": {
  "data": {
   "shadows": "pycbc.types.ensure_one_opt"
  },
  "type": "import"
 },
 "pycbc.strain.strain.ensure_one_opt_groups": {
  "data": {
   "lineno": 787
  },
  "type": "constant"
 },
 "pycbc.strain.strain.ensure_one_opt_multi_ifo": {
  "data": {
   "shadows": "pycbc.types.ensure_one_opt_multi_ifo"
  },
  "type": "import"
 },
 "pycbc.strain.strain.filter_zpk": {
  "data": {
   "shadows": "pycbc.filter.zpk.filter_zpk"
  },
  "type": "import"
 },
 "pycbc.strain.strain.from_cli": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      279,
      350,
      383,
      408
     ]
    },
    "float": {
     "line number": [
      246
     ]
    },
    "hasattr": {
     "line number": [
      217,
      316
     ]
    },
    "int": {
     "line number": [
      327,
      355
     ]
    },
    "len": {
     "line number": [
      290,
      306,
      333,
      336,
      336,
      344
     ]
    },
    "min": {
     "line number": [
      336
     ]
    },
    "pycbc.filter.highpass": {
     "line number": [
      241,
      270,
      314
     ]
    },
    "pycbc.filter.resample_to_delta_t": {
     "line number": [
      283,
      379
     ]
    },
    "pycbc.filter.zpk.filter_zpk": {
     "line number": [
      247
     ]
    },
    "pycbc.inject.InjectionSet": {
     "line number": [
      256,
      389
     ]
    },
    "pycbc.inject.SGBurstInjectionSet": {
     "line number": [
      264,
      397
     ]
    },
    "pycbc.noise.reproduceable.colored_noise": {
     "line number": [
      375
     ]
    },
    "pycbc.strain.strain.detect_loud_glitches": {
     "line number": [
      299
     ]
    },
    "pycbc.strain.strain.gate_data": {
     "line number": [
      292,
      309,
      417
     ]
    },
    "pycbc.strain.strain.h5py": {
     "line number": [
      319
     ]
    },
    "pycbc.strain.strain.logging": {
     "line number": [
      215,
      240,
      243,
      250,
      255,
      263,
      269,
      273,
      276,
      282,
      288,
      307,
      313,
      342,
      348,
      358,
      362,
      367,
      372,
      388,
      396,
      402,
      405,
      411
     ]
    },
    "pycbc.strain.strain.numpy": {
     "line number": [
      244,
      245,
      247,
      289,
      331
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      331
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      368
     ]
    },
    "str": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.from_cli_multi_ifos": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "pycbc.strain.strain.from_cli_single_ifo": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.from_cli_single_ifo": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "pycbc.strain.strain.from_cli": {
     "line number": [
      430
     ]
    },
    "pycbc.types.copy_opts_for_single_ifo": {
     "line number": [
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.gate_data": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": {
    "int": {
     "line number": [
      881,
      882,
      884
     ]
    },
    "inverted_tukey": {
     "line number": [
      883
     ]
    },
    "len": {
     "line number": [
      886,
      886
     ]
    },
    "max": {
     "line number": [
      885
     ]
    },
    "min": {
     "line number": [
      886
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.gate_data.inverted_tukey": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      869
     ]
    },
    "pycbc.strain.strain.numpy": {
     "line number": [
      870,
      870,
      870,
      871,
      871
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.strain.strain.highpass": {
  "data": {
   "shadows": "pycbc.filter.highpass"
  },
  "type": "import"
 },
 "pycbc.strain.strain.insert_strain_option_group": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "float": {
     "line number": [
      479,
      537,
      546,
      552,
      556,
      559,
      564,
      570,
      573,
      577,
      581,
      593
     ]
    },
    "int": {
     "line number": [
      473,
      476,
      483,
      486,
      487,
      522
     ]
    },
    "str": {
     "line number": [
      489,
      493,
      498,
      503,
      508,
      514,
      529,
      533,
      541,
      587,
      590
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.insert_strain_option_group_multi_ifo": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": {
    "float": {
     "line number": [
      635,
      720,
      732,
      739,
      744,
      748,
      754,
      761,
      766,
      772,
      778
     ]
    },
    "int": {
     "line number": [
      627,
      631,
      639,
      644,
      647,
      696
     ]
    },
    "pycbc.types.MultiDetOptionAction": {
     "line number": [
      626,
      630,
      634,
      638,
      643,
      648,
      671,
      677,
      685,
      692,
      697,
      702,
      708,
      714,
      720,
      726,
      733,
      740,
      745,
      749,
      755,
      762
     ]
    },
    "pycbc.types.MultiDetOptionActionSpecial": {
     "line number": [
      652
     ]
    },
    "pycbc.types.MultiDetOptionAppendAction": {
     "line number": [
      659,
      665,
      767,
      773,
      779
     ]
    },
    "str": {
     "line number": [
      651,
      658,
      664,
      670,
      676,
      684,
      691,
      707,
      713,
      725
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.kaiserord": {
  "data": {
   "shadows": "scipy.signal.kaiserord"
  },
  "type": "import"
 },
 "pycbc.strain.strain.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.strain.strain.make_frequency_series": {
  "data": {
   "shadows": "pycbc.filter.make_frequency_series"
  },
  "type": "import"
 },
 "pycbc.strain.strain.next_power_of_2": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "bin": {
     "line number": [
      55
     ]
    },
    "len": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.strain.strain.pycbc.events": {
  "data": {
   "shadows": "pycbc.events"
  },
  "type": "import"
 },
 "pycbc.strain.strain.pycbc.fft": {
  "data": {
   "shadows": "pycbc.fft"
  },
  "type": "import"
 },
 "pycbc.strain.strain.pycbc.filter": {
  "data": {
   "shadows": "pycbc.filter"
  },
  "type": "import"
 },
 "pycbc.strain.strain.pycbc.frame": {
  "data": {
   "shadows": "pycbc.frame"
  },
  "type": "import"
 },
 "pycbc.strain.strain.pycbc.noise": {
  "data": {
   "shadows": "pycbc.noise"
  },
  "type": "import"
 },
 "pycbc.strain.strain.pycbc.psd": {
  "data": {
   "shadows": "pycbc.psd"
  },
  "type": "import"
 },
 "pycbc.strain.strain.pycbc.types": {
  "data": {
   "shadows": "pycbc.types"
  },
  "type": "import"
 },
 "pycbc.strain.strain.required_opts": {
  "data": {
   "shadows": "pycbc.types.required_opts"
  },
  "type": "import"
 },
 "pycbc.strain.strain.required_opts_list": {
  "data": {
   "lineno": 793
  },
  "type": "constant"
 },
 "pycbc.strain.strain.required_opts_multi_ifo": {
  "data": {
   "shadows": "pycbc.types.required_opts_multi_ifo"
  },
  "type": "import"
 },
 "pycbc.strain.strain.resample_to_delta_t": {
  "data": {
   "shadows": "pycbc.filter.resample_to_delta_t"
  },
  "type": "import"
 },
 "pycbc.strain.strain.spa_distance": {
  "data": {
   "shadows": "pycbc.waveform.spa_tmplt.spa_distance"
  },
  "type": "import"
 },
 "pycbc.strain.strain.verify_strain_options": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": {
    "pycbc.strain.strain.ensure_one_opt_groups": {
     "line number": [
      813
     ]
    },
    "pycbc.strain.strain.required_opts_list": {
     "line number": [
      815
     ]
    },
    "pycbc.types.ensure_one_opt": {
     "line number": [
      814
     ]
    },
    "pycbc.types.required_opts": {
     "line number": [
      815
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.verify_strain_options_multi_ifo": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": {
    "pycbc.strain.strain.ensure_one_opt_groups": {
     "line number": [
      836
     ]
    },
    "pycbc.strain.strain.required_opts_list": {
     "line number": [
      838
     ]
    },
    "pycbc.types.ensure_one_opt_multi_ifo": {
     "line number": [
      837
     ]
    },
    "pycbc.types.required_opts_multi_ifo": {
     "line number": [
      838
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.strain.strain.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pycbc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pycbc.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pycbc.tmpltbank": {
  "data": {},
  "type": "module"
 },
 "pycbc.tmpltbank.NS_SEQUENCE_FILE_DIRECTORY": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pycbc.tmpltbank.bank_output_utils": {
  "data": {},
  "type": "module"
 },
 "pycbc.tmpltbank.bank_output_utils.GAMMA": {
  "data": {
   "shadows": "lal.GAMMA"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.bank_output_utils.MTSUN_SI": {
  "data": {
   "shadows": "lal.MTSUN_SI"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.bank_output_utils.PI": {
  "data": {
   "shadows": "lal.PI"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.bank_output_utils.TWOPI": {
  "data": {
   "shadows": "lal.TWOPI"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.bank_output_utils.calculate_ethinca_metric_comps": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      183,
      191
     ]
    },
    "ValueError": {
     "line number": [
      187
     ]
    },
    "abs": {
     "line number": [
      207
     ]
    },
    "float": {
     "line number": [
      182,
      182,
      207,
      211,
      219,
      260,
      277
     ]
    },
    "lal.GAMMA": {
     "line number": [
      228
     ]
    },
    "lal.MTSUN_SI": {
     "line number": [
      198
     ]
    },
    "lal.PI": {
     "line number": [
      196,
      228,
      228,
      229,
      229,
      241,
      245,
      248,
      251,
      253,
      255
     ]
    },
    "lal.TWOPI": {
     "line number": [
      218,
      218
     ]
    },
    "list": {
     "line number": [
      206
     ]
    },
    "pycbc.pnutils.frequency_cutoff_from_name": {
     "line number": [
      204
     ]
    },
    "pycbc.pnutils.mass1_mass2_to_mtotal_eta": {
     "line number": [
      197
     ]
    },
    "pycbc.tmpltbank.bank_output_utils.numpy": {
     "line number": [
      207,
      211,
      219,
      232,
      260,
      277
     ]
    },
    "pycbc.tmpltbank.lambda_mapping.ethinca_order_from_string": {
     "line number": [
      194
     ]
    },
    "six.moves.range": {
     "line number": [
      212,
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.bank_output_utils.convert_to_sngl_inspiral_table": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "glue.ligolw.lsctables.New": {
     "line number": [
      121
     ]
    },
    "glue.ligolw.lsctables.SnglInspiralTable": {
     "line number": [
      121
     ]
    },
    "pycbc.pnutils.mass1_mass2_to_mchirp_eta": {
     "line number": [
      132
     ]
    },
    "pycbc.pnutils.mass1_mass2_to_mtotal_eta": {
     "line number": [
      130
     ]
    },
    "pycbc.tmpltbank.bank_output_utils.return_empty_sngl": {
     "line number": [
      125
     ]
    },
    "setattr": {
     "line number": [
      129
     ]
    },
    "zip": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.bank_output_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.bank_output_utils.ethinca_order_from_string": {
  "data": {
   "shadows": "pycbc.tmpltbank.lambda_mapping.ethinca_order_from_string"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.bank_output_utils.ilwd": {
  "data": {
   "shadows": "glue.ligolw.ilwd"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.bank_output_utils.ligolw": {
  "data": {
   "shadows": "glue.ligolw.ligolw"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.bank_output_utils.ligolw_process": {
  "data": {
   "shadows": "glue.ligolw.utils.process"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.bank_output_utils.ligolw_utils": {
  "data": {
   "shadows": "glue.ligolw.utils"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.bank_output_utils.lsctables": {
  "data": {
   "shadows": "glue.ligolw.lsctables"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.bank_output_utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.bank_output_utils.output_sngl_inspiral_table": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "glue.ligolw.ligolw.Document": {
     "line number": [
      331
     ]
    },
    "glue.ligolw.ligolw.LIGO_LW": {
     "line number": [
      332
     ]
    },
    "glue.ligolw.lsctables.New": {
     "line number": [
      383
     ]
    },
    "glue.ligolw.lsctables.SearchSummaryTable": {
     "line number": [
      383
     ]
    },
    "glue.ligolw.utils.process.register_to_xmldoc": {
     "line number": [
      340
     ]
    },
    "glue.ligolw.utils.write_filename": {
     "line number": [
      390
     ]
    },
    "len": {
     "line number": [
      357,
      385
     ]
    },
    "pycbc.pnutils.frequency_cutoff_from_name": {
     "line number": [
      363
     ]
    },
    "pycbc.pnutils.mass1_mass2_to_tau0_tau3": {
     "line number": [
      349
     ]
    },
    "pycbc.tmpltbank.bank_output_utils.calculate_ethinca_metric_comps": {
     "line number": [
      351
     ]
    },
    "pycbc.tmpltbank.bank_output_utils.convert_to_sngl_inspiral_table": {
     "line number": [
      342
     ]
    },
    "pycbc.tmpltbank.bank_output_utils.return_search_summary": {
     "line number": [
      384
     ]
    },
    "setattr": {
     "line number": [
      358,
      371
     ]
    },
    "six.moves.range": {
     "line number": [
      357
     ]
    },
    "str": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.bank_output_utils.pnutils": {
  "data": {
   "shadows": "pycbc.pnutils"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.bank_output_utils.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.bank_output_utils.return_empty_sngl": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      48
     ]
    },
    "glue.ligolw.ilwd.ilwdchar": {
     "line number": [
      44,
      46
     ]
    },
    "glue.ligolw.lsctables.SnglInspiral": {
     "line number": [
      30
     ]
    },
    "glue.ligolw.lsctables.SnglInspiralTable.validcolumns": {
     "line number": [
      31
     ]
    },
    "setattr": {
     "line number": [
      34,
      38,
      40,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.bank_output_utils.return_search_summary": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      84
     ]
    },
    "glue.ligolw.ilwd.ilwdchar": {
     "line number": [
      82
     ]
    },
    "glue.ligolw.lsctables.SearchSummary": {
     "line number": [
      72
     ]
    },
    "glue.ligolw.lsctables.SearchSummaryTable.validcolumns": {
     "line number": [
      73
     ]
    },
    "int": {
     "line number": [
      92,
      93,
      94,
      95,
      96,
      97,
      98,
      99
     ]
    },
    "len": {
     "line number": [
      87
     ]
    },
    "setattr": {
     "line number": [
      76,
      78,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.brute_force_methods": {
  "data": {},
  "type": "module"
 },
 "pycbc.tmpltbank.brute_force_methods.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.brute_force_methods.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.brute_force_methods.find_xi_extrema_brute": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "len": {
     "line number": [
      480,
      498
     ]
    },
    "pycbc.tmpltbank.brute_force_methods.get_mass_distribution": {
     "line number": [
      490
     ]
    },
    "six.moves.range": {
     "line number": [
      487,
      495
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.brute_force_methods.get_cov_params": {
  "data": {
   "shadows": "pycbc.tmpltbank.coord_utils.get_cov_params"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.brute_force_methods.get_mass_distribution": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      315,
      339
     ]
    },
    "abs": {
     "line number": [
      282,
      288,
      290,
      301,
      307,
      309
     ]
    },
    "float": {
     "line number": [
      237,
      238
     ]
    },
    "int": {
     "line number": [
      239
     ]
    },
    "max": {
     "line number": [
      206
     ]
    },
    "min": {
     "line number": [
      207
     ]
    },
    "pycbc.tmpltbank.brute_force_methods.numpy": {
     "line number": [
      197,
      203,
      222,
      224,
      237,
      238,
      243,
      246,
      249,
      252,
      287,
      289,
      291,
      292,
      306,
      308,
      310,
      311
     ]
    },
    "pycbc.tmpltbank.coord_utils.get_cov_params": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.brute_force_methods.get_physical_covaried_masses": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      122
     ]
    },
    "len": {
     "line number": [
      71,
      94,
      114
     ]
    },
    "pycbc.tmpltbank.brute_force_methods.get_mass_distribution": {
     "line number": [
      84
     ]
    },
    "six.moves.range": {
     "line number": [
      89,
      94,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.brute_force_methods.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.brute_force_methods.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.brute_force_methods.stack_xi_direction_brute": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "pycbc.tmpltbank.brute_force_methods.find_xi_extrema_brute": {
     "line number": [
      406,
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.calc_moments": {
  "data": {},
  "type": "module"
 },
 "pycbc.tmpltbank.calc_moments.calculate_metric": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "float": {
     "line number": [
      434,
      436
     ]
    },
    "len": {
     "line number": [
      432
     ]
    },
    "pycbc.tmpltbank.calc_moments.calculate_metric_comp": {
     "line number": [
      440
     ]
    },
    "pycbc.tmpltbank.calc_moments.numpy": {
     "line number": [
      434,
      434,
      435,
      435
     ]
    },
    "six.moves.range": {
     "line number": [
      438,
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.calc_moments.calculate_metric_comp": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "pycbc.tmpltbank.calc_moments.calculate_moment": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "funct": {
     "line number": [
      385
     ]
    },
    "pycbc.tmpltbank.calc_moments.numpy": {
     "line number": [
      383,
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.calc_moments.determine_eigen_directions": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "len": {
     "line number": [
      132
     ]
    },
    "list": {
     "line number": [
      95,
      98
     ]
    },
    "pycbc.tmpltbank.calc_moments.calculate_metric": {
     "line number": [
      123
     ]
    },
    "pycbc.tmpltbank.calc_moments.get_moments": {
     "line number": [
      90
     ]
    },
    "pycbc.tmpltbank.calc_moments.numpy": {
     "line number": [
      125,
      129
     ]
    },
    "pycbc.tmpltbank.lambda_mapping.generate_mapping": {
     "line number": [
      120
     ]
    },
    "six.moves.range": {
     "line number": [
      101,
      105,
      109,
      113,
      117,
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.calc_moments.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.calc_moments.generate_mapping": {
  "data": {
   "shadows": "pycbc.tmpltbank.lambda_mapping.generate_mapping"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.calc_moments.get_moments": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "float": {
     "line number": [
      226
     ]
    },
    "len": {
     "line number": [
      226
     ]
    },
    "pycbc.tmpltbank.calc_moments.calculate_moment": {
     "line number": [
      231,
      240,
      248,
      256,
      264,
      272
     ]
    },
    "pycbc.tmpltbank.calc_moments.interpolate_psd": {
     "line number": [
      227
     ]
    },
    "pycbc.tmpltbank.calc_moments.numpy": {
     "line number": [
      226,
      247,
      255,
      263,
      271
     ]
    },
    "six.moves.range": {
     "line number": [
      238,
      246,
      254,
      262,
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.calc_moments.interpolate_psd": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "len": {
     "line number": [
      309
     ]
    },
    "pycbc.tmpltbank.calc_moments.numpy": {
     "line number": [
      322,
      322
     ]
    },
    "six.moves.range": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.calc_moments.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.calc_moments.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.em_progenitors": {
  "data": {
   "symbols_in_volume": {
    "numpy.vectorize": {
     "line number": [
      618
     ]
    },
    "pycbc.tmpltbank.em_progenitors.find_em_constraint_data_point": {
     "line number": [
      618
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.tmpltbank.em_progenitors.ISCO_eq": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.ISCO_eq_chi_first": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "pycbc.tmpltbank.em_progenitors.ISCO_eq": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.ISSO_eq_at_pole": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.PG_ISSO_eq": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "pycbc.tmpltbank.em_progenitors.ISCO_eq": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.PG_ISSO_solver": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "max": {
     "line number": [
      186
     ]
    },
    "min": {
     "line number": [
      189
     ]
    },
    "numpy.sign": {
     "line number": [
      160
     ]
    },
    "pycbc.tmpltbank.em_progenitors.ISCO_eq": {
     "line number": [
      169
     ]
    },
    "pycbc.tmpltbank.em_progenitors.ISSO_eq_at_pole": {
     "line number": [
      176
     ]
    },
    "pycbc.tmpltbank.em_progenitors.PG_ISSO_eq": {
     "line number": [
      187,
      190
     ]
    },
    "pycbc.tmpltbank.em_progenitors.math": {
     "line number": [
      159,
      179,
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.bh_effective_spin": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "pycbc.tmpltbank.em_progenitors.ISCO_eq_chi_first": {
     "line number": [
      267
     ]
    },
    "pycbc.tmpltbank.em_progenitors.PG_ISSO_solver": {
     "line number": [
      258
     ]
    },
    "pycbc.tmpltbank.em_progenitors.math": {
     "line number": [
      260
     ]
    },
    "pycbc.tmpltbank.em_progenitors.pos_branch": {
     "line number": [
      260
     ]
    },
    "tuple": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.em_progenitors.find_em_constraint_data_point": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": {
    "pycbc.tmpltbank.em_progenitors.load_ns_sequence": {
     "line number": [
      589
     ]
    },
    "pycbc.tmpltbank.em_progenitors.remnant_mass_ulim": {
     "line number": [
      594,
      596,
      599
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.find_em_constraint_data_points": {
  "data": {
   "lineno": 618
  },
  "type": "constant"
 },
 "pycbc.tmpltbank.em_progenitors.generate_em_constraint_data": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "complex": {
     "line number": [
      669,
      670
     ]
    },
    "int": {
     "line number": [
      669,
      670
     ]
    },
    "len": {
     "line number": [
      682,
      684,
      686,
      691
     ]
    },
    "numpy.array": {
     "line number": [
      672,
      673,
      675,
      676,
      677,
      683
     ]
    },
    "numpy.ceil": {
     "line number": [
      669,
      670
     ]
    },
    "numpy.empty": {
     "line number": [
      684,
      686
     ]
    },
    "numpy.mgrid": {
     "line number": [
      671
     ]
    },
    "numpy.savetxt": {
     "line number": [
      696
     ]
    },
    "numpy.savez": {
     "line number": [
      693
     ]
    },
    "pycbc.tmpltbank.em_progenitors.find_em_constraint_data_points": {
     "line number": [
      690
     ]
    },
    "range": {
     "line number": [
      682
     ]
    },
    "zip": {
     "line number": [
      674,
      695
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.load_ns_sequence": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      312
     ]
    },
    "max": {
     "line number": [
      314
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      307
     ]
    },
    "print": {
     "line number": [
      309,
      310,
      311
     ]
    },
    "pycbc.tmpltbank.em_progenitors.pycbc": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.em_progenitors.min_eta_for_em_bright": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": {
    "f": {
     "line number": [
      744,
      749,
      752
     ]
    },
    "isinstance": {
     "line number": [
      746
     ]
    },
    "len": {
     "line number": [
      747,
      748
     ]
    },
    "numpy.empty": {
     "line number": [
      747
     ]
    },
    "numpy.ndarray": {
     "line number": [
      746
     ]
    },
    "range": {
     "line number": [
      748
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.em_progenitors.ns_g_mass_to_ns_b_mass": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "f": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.ns_g_mass_to_ns_compactness": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "f": {
     "line number": [
      372,
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.em_progenitors.pos_branch": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "pycbc.tmpltbank.em_progenitors.ISCO_eq_chi_first": {
     "line number": [
      227
     ]
    },
    "pycbc.tmpltbank.em_progenitors.PG_ISSO_solver": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.pycbc": {
  "data": {
   "shadows": "pycbc"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.em_progenitors.pycbc.tmpltbank.em_progenitors": {
  "data": {
   "shadows": "pycbc.tmpltbank.em_progenitors"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.em_progenitors.remnant_mass": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      447,
      462,
      476
     ]
    },
    "abs": {
     "line number": [
      444,
      471
     ]
    },
    "print": {
     "line number": [
      445,
      446,
      458,
      459,
      460,
      461,
      472,
      473,
      474,
      475
     ]
    },
    "pycbc.tmpltbank.em_progenitors.PG_ISSO_solver": {
     "line number": [
      485
     ]
    },
    "pycbc.tmpltbank.em_progenitors.bh_effective_spin": {
     "line number": [
      468
     ]
    },
    "pycbc.tmpltbank.em_progenitors.math": {
     "line number": [
      450
     ]
    },
    "pycbc.tmpltbank.em_progenitors.ns_g_mass_to_ns_b_mass": {
     "line number": [
      454
     ]
    },
    "pycbc.tmpltbank.em_progenitors.ns_g_mass_to_ns_compactness": {
     "line number": [
      453
     ]
    },
    "pycbc.tmpltbank.em_progenitors.xi_eq": {
     "line number": [
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.remnant_mass_ulim": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      534
     ]
    },
    "abs": {
     "line number": [
      533
     ]
    },
    "numpy.arccos": {
     "line number": [
      543
     ]
    },
    "pycbc.tmpltbank.em_progenitors.pycbc": {
     "line number": [
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.em_progenitors.scipy.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.em_progenitors.scipy.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.em_progenitors.xi_eq": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "pycbc.tmpltbank.em_progenitors.math": {
     "line number": [
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.lambda_mapping": {
  "data": {
   "symbols_in_volume": {
    "pycbc.tmpltbank.lambda_mapping.generate_inverse_mapping": {
     "line number": [
      120,
      121
     ]
    },
    "pycbc.tmpltbank.lambda_mapping.generate_mapping": {
     "line number": [
      91,
      92
     ]
    },
    "pycbc.tmpltbank.lambda_mapping.get_chirp_params": {
     "line number": [
      296,
      297
     ]
    },
    "pycbc.tmpltbank.lambda_mapping.pycbcValidOrdersHelpDescriptions": {
     "line number": [
      92,
      121,
      297
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.tmpltbank.lambda_mapping.CreateREAL8Vector": {
  "data": {
   "shadows": "lal.CreateREAL8Vector"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.lambda_mapping.MTSUN_SI": {
  "data": {
   "shadows": "lal.MTSUN_SI"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.lambda_mapping.PI": {
  "data": {
   "shadows": "lal.PI"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.lambda_mapping.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.lambda_mapping.ethinca_order_from_string": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      153
     ]
    },
    "pycbc.tmpltbank.lambda_mapping.get_ethinca_orders": {
     "line number": [
      151,
      152,
      155
     ]
    },
    "str": {
     "line number": [
      153,
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.lambda_mapping.generate_inverse_mapping": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "pycbc.tmpltbank.lambda_mapping.generate_mapping": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.lambda_mapping.generate_mapping": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.lambda_mapping.get_chirp_params": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      196
     ]
    },
    "ValueError": {
     "line number": [
      284,
      289
     ]
    },
    "float": {
     "line number": [
      215,
      217,
      219,
      221
     ]
    },
    "int": {
     "line number": [
      272,
      279
     ]
    },
    "lal.CreateREAL8Vector": {
     "line number": [
      223,
      225,
      227,
      229,
      231,
      233,
      235,
      237
     ]
    },
    "lal.MTSUN_SI": {
     "line number": [
      258
     ]
    },
    "lal.PI": {
     "line number": [
      258
     ]
    },
    "len": {
     "line number": [
      195,
      215,
      217,
      219,
      221,
      223,
      225,
      227,
      229,
      231,
      233,
      235,
      237,
      249,
      268
     ]
    },
    "pycbc.tmpltbank.lambda_mapping.generate_inverse_mapping": {
     "line number": [
      263
     ]
    },
    "pycbc.tmpltbank.lambda_mapping.lalsimulation": {
     "line number": [
      240,
      244
     ]
    },
    "pycbc.tmpltbank.lambda_mapping.numpy": {
     "line number": [
      200,
      201,
      202,
      203,
      205,
      207,
      209,
      211,
      215,
      217,
      219,
      221,
      245,
      246,
      247,
      261
     ]
    },
    "pycbc.tmpltbank.lambda_mapping.re": {
     "line number": [
      270,
      277,
      282
     ]
    },
    "six.moves.range": {
     "line number": [
      251,
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.lambda_mapping.get_ethinca_orders": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "pycbc.tmpltbank.lambda_mapping.lalsimulation": {
  "data": {
   "shadows": "lalsimulation"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.lambda_mapping.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.lambda_mapping.pycbcValidOrdersHelpDescriptions": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pycbc.tmpltbank.lambda_mapping.pycbcValidTmpltbankOrders": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pycbc.tmpltbank.lambda_mapping.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.lambda_mapping.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.lattice_utils": {
  "data": {},
  "type": "module"
 },
 "pycbc.tmpltbank.lattice_utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.lattice_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.lattice_utils.generate_anstar_3d_lattice": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      141
     ]
    },
    "ImportError": {
     "line number": [
      127
     ]
    },
    "TypeError": {
     "line number": [
      147
     ]
    },
    "pycbc.tmpltbank.lattice_utils.lal": {
     "line number": [
      134,
      155
     ]
    },
    "pycbc.tmpltbank.lattice_utils.lalpulsar": {
     "line number": [
      129,
      130,
      131,
      132,
      140,
      144,
      146,
      150,
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.lattice_utils.generate_hexagonal_lattice": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      50,
      52
     ]
    },
    "len": {
     "line number": [
      69,
      79,
      82
     ]
    },
    "pycbc.tmpltbank.lattice_utils.copy": {
     "line number": [
      66
     ]
    },
    "pycbc.tmpltbank.lattice_utils.numpy": {
     "line number": [
      65,
      85,
      86
     ]
    },
    "six.moves.range": {
     "line number": [
      69,
      79,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.lattice_utils.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.lattice_utils.lalpulsar": {
  "data": {
   "shadows": "lalpulsar"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.lattice_utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.lattice_utils.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.option_utils": {
  "data": {},
  "type": "module"
 },
 "pycbc.tmpltbank.option_utils.IndentedHelpFormatterWithNL": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "pycbc.tmpltbank.option_utils.argparse": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.tmpltbank.option_utils.IndentedHelpFormatterWithNL.format_description": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pycbc.tmpltbank.option_utils.textwrap": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.IndentedHelpFormatterWithNL.format_option": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "len": {
     "line number": [
      74
     ]
    },
    "pycbc.tmpltbank.option_utils.textwrap": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.option_utils.check_ethinca_against_bank_params": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1197,
      1201
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.ethincaParameters": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1059
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.tmpltbank.option_utils.ethincaParameters.__init__": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1086,
      1089,
      1093
     ]
    },
    "pycbc.pnutils.named_frequency_cutoffs.keys": {
     "line number": [
      1088,
      1091
     ]
    },
    "str": {
     "line number": [
      1091
     ]
    },
    "tuple": {
     "line number": [
      1091
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.ethincaParameters.from_argparse": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1096
     ]
    },
    "cls": {
     "line number": [
      1106
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.get_ethinca_orders": {
  "data": {
   "shadows": "pycbc.tmpltbank.lambda_mapping.get_ethinca_orders"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.option_utils.get_options_from_group": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.insert_base_bank_options": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "str": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.insert_base_bank_options.match_type": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      120
     ]
    },
    "float": {
     "line number": [
      119
     ]
    },
    "pycbc.tmpltbank.option_utils.argparse": {
     "line number": [
      121,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.insert_ethinca_metric_options": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1148
     ]
    },
    "pycbc.pnutils.named_frequency_cutoffs.keys": {
     "line number": [
      1142
     ]
    },
    "pycbc.tmpltbank.lambda_mapping.get_ethinca_orders": {
     "line number": [
      1136
     ]
    },
    "tuple": {
     "line number": [
      1142
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.insert_mass_range_option_group": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "pycbc.types.nonnegative_float": {
     "line number": [
      474,
      485,
      516,
      522
     ]
    },
    "pycbc.types.positive_float": {
     "line number": [
      435,
      439,
      443,
      446,
      450,
      455,
      460,
      465,
      469,
      496,
      504,
      532
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.insert_metric_calculation_options": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "pycbc.tmpltbank.lambda_mapping.pycbcValidOrdersHelpDescriptions": {
     "line number": [
      149
     ]
    },
    "pycbc.types.positive_float": {
     "line number": [
      150,
      159,
      163,
      167
     ]
    },
    "str": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.load_ns_sequence": {
  "data": {
   "shadows": "pycbc.tmpltbank.em_progenitors.load_ns_sequence"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.option_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.option_utils.massRangeParameters": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": {
    "object": {
     "line number": [
      864
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.tmpltbank.option_utils.massRangeParameters.__init__": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      932,
      941,
      956,
      961
     ]
    },
    "pycbc.tmpltbank.em_progenitors.load_ns_sequence": {
     "line number": [
      934
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.massRangeParameters.from_argparse": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      964
     ]
    },
    "cls": {
     "line number": [
      975,
      984
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.massRangeParameters.is_outside_range": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      1014,
      1017,
      1025,
      1028
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.metricParameters": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "object": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.tmpltbank.option_utils.metricParameters.__init__": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.metricParameters.evals": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "pycbc.tmpltbank.option_utils.numpy": {
     "line number": [
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.metricParameters.evecs": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "pycbc.tmpltbank.option_utils.numpy": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.metricParameters.evecsCV": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "pycbc.tmpltbank.option_utils.numpy": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.metricParameters.from_argparse": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      222
     ]
    },
    "cls": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.metricParameters.metric": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "pycbc.tmpltbank.option_utils.numpy": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.metricParameters.moments": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.metricParameters.psd": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.metricParameters.time_unprojected_metric": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "pycbc.tmpltbank.option_utils.numpy": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.nonnegative_float": {
  "data": {
   "shadows": "pycbc.types.nonnegative_float"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.option_utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.option_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.option_utils.pnutils": {
  "data": {
   "shadows": "pycbc.pnutils"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.option_utils.positive_float": {
  "data": {
   "shadows": "pycbc.types.positive_float"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.option_utils.pycbcValidOrdersHelpDescriptions": {
  "data": {
   "shadows": "pycbc.tmpltbank.lambda_mapping.pycbcValidOrdersHelpDescriptions"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.option_utils.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.option_utils.verify_ethinca_metric_options": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": {
    "pycbc.pnutils.named_frequency_cutoffs.keys": {
     "line number": [
      1171,
      1174
     ]
    },
    "str": {
     "line number": [
      1174
     ]
    },
    "tuple": {
     "line number": [
      1174
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.verify_mass_range_options": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      662,
      676,
      707,
      721,
      762,
      813,
      836
     ]
    },
    "float": {
     "line number": [
      679,
      724,
      765,
      780,
      816,
      831
     ]
    },
    "hasattr": {
     "line number": [
      587
     ]
    },
    "print": {
     "line number": [
      760,
      761
     ]
    },
    "pycbc.pnutils.eta_mass1_to_mass2": {
     "line number": [
      731,
      733,
      735,
      737,
      787,
      789,
      791,
      793
     ]
    },
    "pycbc.pnutils.mchirp_eta_to_mass1_mass2": {
     "line number": [
      640,
      666,
      711
     ]
    },
    "pycbc.pnutils.mchirp_mass1_to_mass2": {
     "line number": [
      629,
      634,
      689,
      691
     ]
    },
    "pycbc.tmpltbank.option_utils.logging": {
     "line number": [
      589,
      596,
      603
     ]
    },
    "pycbc.tmpltbank.option_utils.os": {
     "line number": [
      602
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.option_utils.verify_metric_calculation_options": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "pycbc.tmpltbank.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.partitioned_bank": {
  "data": {},
  "type": "module"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "object": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "int": {
     "line number": [
      96,
      99,
      109,
      110
     ]
    },
    "pycbc.tmpltbank.coord_utils.estimate_mass_range": {
     "line number": [
      78
     ]
    },
    "pycbc.tmpltbank.coord_utils.outspiral_loop": {
     "line number": [
      118
     ]
    },
    "pycbc.tmpltbank.partitioned_bank.numpy": {
     "line number": [
      102
     ]
    },
    "six.moves.range": {
     "line number": [
      96,
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.add_point_by_chi_coords": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "pycbc.tmpltbank.partitioned_bank.copy": {
     "line number": [
      463
     ]
    },
    "pycbc.tmpltbank.partitioned_bank.numpy": {
     "line number": [
      467,
      468,
      469,
      470,
      471,
      472,
      473,
      474,
      476,
      477,
      481,
      482,
      484,
      485,
      486,
      487,
      489,
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.add_point_by_masses": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      539
     ]
    },
    "float": {
     "line number": [
      553
     ]
    },
    "pycbc.tmpltbank.coord_utils.get_chirp_params": {
     "line number": [
      557
     ]
    },
    "pycbc.tmpltbank.coord_utils.get_cov_params": {
     "line number": [
      542
     ]
    },
    "pycbc.tmpltbank.coord_utils.get_mu_params": {
     "line number": [
      562
     ]
    },
    "pycbc.tmpltbank.coord_utils.return_nearest_cutoff": {
     "line number": [
      554
     ]
    },
    "pycbc.tmpltbank.partitioned_bank.logging": {
     "line number": [
      528
     ]
    },
    "pycbc.tmpltbank.partitioned_bank.numpy": {
     "line number": [
      549,
      550,
      551,
      552,
      553,
      564
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.add_tmpltbank_from_hdf_file": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": {
    "len": {
     "line number": [
      608
     ]
    },
    "six.moves.range": {
     "line number": [
      608
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.add_tmpltbank_from_xml_table": {
  "data": {
   "lineno": 573
  },
  "type": "function"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.calc_point_distance": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      260
     ]
    },
    "pycbc.tmpltbank.coord_utils.calc_point_dist": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.calc_point_distance_vary": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "len": {
     "line number": [
      344
     ]
    },
    "pycbc.tmpltbank.partitioned_bank.numpy": {
     "line number": [
      337,
      338,
      340,
      344,
      350,
      351,
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.check_bin_existence": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "pycbc.tmpltbank.partitioned_bank.numpy": {
     "line number": [
      232
     ]
    },
    "six.moves.range": {
     "line number": [
      222,
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.find_point_bin": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "int": {
     "line number": [
      197,
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.get_freq_map_and_normalizations": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.get_point_from_bins_and_idx": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.output_all_points": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": {
    "len": {
     "line number": [
      634
     ]
    },
    "six.moves.range": {
     "line number": [
      634
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.test_point_distance": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "pycbc.tmpltbank.coord_utils.calc_point_dist": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.partitioned_bank.PartitionedTmpltbank.test_point_distance_vary": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "len": {
     "line number": [
      411
     ]
    },
    "pycbc.tmpltbank.partitioned_bank.numpy": {
     "line number": [
      404,
      405,
      407,
      411,
      417,
      422,
      424
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.tmpltbank.partitioned_bank.coord_utils": {
  "data": {
   "shadows": "pycbc.tmpltbank.coord_utils"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.partitioned_bank.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.partitioned_bank.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.partitioned_bank.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.tmpltbank.partitioned_bank.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "pycbc.transforms": {
  "data": {
   "symbols_in_volume": {
    "pycbc.transforms.AlignedMassSpinToCartesianSpin": {
     "line number": [
      1614,
      1641,
      1641,
      1658
     ]
    },
    "pycbc.transforms.CartesianSpin1ToSphericalSpin1": {
     "line number": [
      1612,
      1637,
      1637
     ]
    },
    "pycbc.transforms.CartesianSpin2ToSphericalSpin2": {
     "line number": [
      1613,
      1639,
      1639
     ]
    },
    "pycbc.transforms.CartesianSpinToAlignedMassSpin": {
     "line number": [
      1614,
      1642,
      1642
     ]
    },
    "pycbc.transforms.CartesianSpinToChiP": {
     "line number": [
      1616,
      1646,
      1646
     ]
    },
    "pycbc.transforms.CartesianSpinToPrecessionMassSpin": {
     "line number": [
      1615,
      1644,
      1644
     ]
    },
    "pycbc.transforms.ChiPToCartesianSpin": {
     "line number": [
      1616,
      1645,
      1645,
      1659
     ]
    },
    "pycbc.transforms.ChirpDistanceToDistance": {
     "line number": [
      1611,
      1634,
      1634,
      1659
     ]
    },
    "pycbc.transforms.CustomTransform": {
     "line number": [
      1630,
      1630
     ]
    },
    "pycbc.transforms.DistanceToChirpDistance": {
     "line number": [
      1611,
      1635,
      1635
     ]
    },
    "pycbc.transforms.DistanceToRedshift": {
     "line number": [
      1640,
      1640,
      1656
     ]
    },
    "pycbc.transforms.LambdaFromTOVFile": {
     "line number": [
      1649,
      1649
     ]
    },
    "pycbc.transforms.Logistic": {
     "line number": [
      1617,
      1648,
      1648
     ]
    },
    "pycbc.transforms.Logit": {
     "line number": [
      1617,
      1647,
      1647
     ]
    },
    "pycbc.transforms.Mass1Mass2ToMchirpEta": {
     "line number": [
      1633,
      1633
     ]
    },
    "pycbc.transforms.Mass1Mass2ToMchirpQ": {
     "line number": [
      1610,
      1632,
      1632
     ]
    },
    "pycbc.transforms.MchirpQToMass1Mass2": {
     "line number": [
      1610,
      1631,
      1631,
      1656
     ]
    },
    "pycbc.transforms.PrecessionMassSpinToCartesianSpin": {
     "line number": [
      1615,
      1643,
      1643,
      1658
     ]
    },
    "pycbc.transforms.SphericalSpin1ToCartesianSpin1": {
     "line number": [
      1612,
      1636,
      1636,
      1657
     ]
    },
    "pycbc.transforms.SphericalSpin2ToCartesianSpin2": {
     "line number": [
      1613,
      1638,
      1638,
      1657
     ]
    },
    "pycbc.transforms.common_cbc_forward_transforms": {
     "line number": [
      1662,
      1664
     ]
    },
    "pycbc.transforms.common_cbc_inverse_transforms": {
     "line number": [
      1665
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.transforms.AlignedMassSpinToCartesianSpin": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": {
    "pycbc.transforms.BaseTransform": {
     "line number": [
      704
     ]
    },
    "pycbc.waveform.parameters.chi_eff": {
     "line number": [
      708
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      708,
      709
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      708,
      709
     ]
    },
    "pycbc.waveform.parameters.spin1z": {
     "line number": [
      710
     ]
    },
    "pycbc.waveform.parameters.spin2z": {
     "line number": [
      710
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.AlignedMassSpinToCartesianSpin.inverse_transform": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": {
    "pycbc.conversions.chi_a": {
     "line number": [
      760
     ]
    },
    "pycbc.conversions.chi_eff": {
     "line number": [
      758
     ]
    },
    "pycbc.waveform.parameters.chi_eff": {
     "line number": [
      758
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      753
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      755
     ]
    },
    "pycbc.waveform.parameters.spin1z": {
     "line number": [
      754
     ]
    },
    "pycbc.waveform.parameters.spin2z": {
     "line number": [
      756
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.AlignedMassSpinToCartesianSpin.transform": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": {
    "pycbc.conversions.spin1z_from_mass1_mass2_chi_eff_chi_a": {
     "line number": [
      730
     ]
    },
    "pycbc.conversions.spin2z_from_mass1_mass2_chi_eff_chi_a": {
     "line number": [
      734
     ]
    },
    "pycbc.waveform.parameters.chi_eff": {
     "line number": [
      732,
      736
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      726
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      727
     ]
    },
    "pycbc.waveform.parameters.spin1z": {
     "line number": [
      729
     ]
    },
    "pycbc.waveform.parameters.spin2z": {
     "line number": [
      733
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.BaseTransform": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "object": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.BaseTransform.__call__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pycbc.transforms.BaseTransform.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "set": {
     "line number": [
      40,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.BaseTransform.format_output": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      104
     ]
    },
    "ValueError": {
     "line number": [
      92
     ]
    },
    "dict": {
     "line number": [
      97
     ]
    },
    "isinstance": {
     "line number": [
      86,
      97
     ]
    },
    "pycbc.io.record.FieldArray": {
     "line number": [
      86
     ]
    },
    "staticmethod": {
     "line number": [
      67
     ]
    },
    "zip": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.BaseTransform.from_config": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      151,
      159
     ]
    },
    "classmethod": {
     "line number": [
      106
     ]
    },
    "cls": {
     "line number": [
      156
     ]
    },
    "float": {
     "line number": [
      150
     ]
    },
    "list": {
     "line number": [
      141
     ]
    },
    "pycbc.VARARGS_DELIM": {
     "line number": [
      140
     ]
    },
    "set": {
     "line number": [
      140,
      158,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.BaseTransform.inverse_jacobian": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.BaseTransform.inverse_transform": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.BaseTransform.jacobian": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.BaseTransform.transform": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Bounds": {
  "data": {
   "shadows": "pycbc.boundaries.Bounds"
  },
  "type": "import"
 },
 "pycbc.transforms.CartesianSpin1ToSphericalSpin1": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": {
    "pycbc.transforms.SphericalSpin1ToCartesianSpin1": {
     "line number": [
      1411,
      1415
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.CartesianSpin1ToSphericalSpin1.inverse_transform": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": {
    "pycbc.coordinates.spherical_to_cartesian": {
     "line number": [
      1453
     ]
    },
    "zip": {
     "line number": [
      1454
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.CartesianSpin1ToSphericalSpin1.transform": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": {
    "pycbc.coordinates.cartesian_to_spherical": {
     "line number": [
      1435
     ]
    },
    "zip": {
     "line number": [
      1436
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.CartesianSpin2ToSphericalSpin2": {
  "data": {
   "lineno": 1458,
   "symbols_in_volume": {
    "pycbc.transforms.CartesianSpin1ToSphericalSpin1": {
     "line number": [
      1458
     ]
    },
    "pycbc.transforms.SphericalSpin2ToCartesianSpin2": {
     "line number": [
      1462
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.CartesianSpinToAlignedMassSpin": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": {
    "pycbc.transforms.AlignedMassSpinToCartesianSpin": {
     "line number": [
      1467,
      1470
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.CartesianSpinToChiP": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": {
    "pycbc.transforms.BaseTransform": {
     "line number": [
      899
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      903
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      903
     ]
    },
    "pycbc.waveform.parameters.spin1x": {
     "line number": [
      904
     ]
    },
    "pycbc.waveform.parameters.spin1y": {
     "line number": [
      904
     ]
    },
    "pycbc.waveform.parameters.spin2x": {
     "line number": [
      905
     ]
    },
    "pycbc.waveform.parameters.spin2y": {
     "line number": [
      905
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.CartesianSpinToChiP.transform": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": {
    "pycbc.conversions.chi_p": {
     "line number": [
      927
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      928
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      928
     ]
    },
    "pycbc.waveform.parameters.spin1x": {
     "line number": [
      929
     ]
    },
    "pycbc.waveform.parameters.spin1y": {
     "line number": [
      929
     ]
    },
    "pycbc.waveform.parameters.spin2x": {
     "line number": [
      930
     ]
    },
    "pycbc.waveform.parameters.spin2y": {
     "line number": [
      930
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.CartesianSpinToPrecessionMassSpin": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": {
    "pycbc.transforms.PrecessionMassSpinToCartesianSpin": {
     "line number": [
      1479,
      1483
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.ChiPToCartesianSpin": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": {
    "pycbc.transforms.CartesianSpinToChiP": {
     "line number": [
      1492,
      1496
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.ChirpDistanceToDistance": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "pycbc.transforms.BaseTransform": {
     "line number": [
      508
     ]
    },
    "pycbc.waveform.parameters.chirp_distance": {
     "line number": [
      512
     ]
    },
    "pycbc.waveform.parameters.distance": {
     "line number": [
      513
     ]
    },
    "pycbc.waveform.parameters.mchirp": {
     "line number": [
      512
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.ChirpDistanceToDistance.__init__": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "set": {
     "line number": [
      516,
      517
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.ChirpDistanceToDistance.inverse_jacobian": {
  "data": {
   "lineno": 590
  },
  "type": "function"
 },
 "pycbc.transforms.ChirpDistanceToDistance.inverse_transform": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": {
    "pycbc.conversions.chirp_distance": {
     "line number": [
      578
     ]
    },
    "pycbc.waveform.parameters.chirp_distance": {
     "line number": [
      577
     ]
    },
    "pycbc.waveform.parameters.distance": {
     "line number": [
      578
     ]
    },
    "pycbc.waveform.parameters.mchirp": {
     "line number": [
      579
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.ChirpDistanceToDistance.jacobian": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "pycbc.transforms.ChirpDistanceToDistance.transform": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": {
    "pycbc.conversions.distance_from_chirp_distance_mchirp": {
     "line number": [
      546
     ]
    },
    "pycbc.waveform.parameters.chirp_distance": {
     "line number": [
      547
     ]
    },
    "pycbc.waveform.parameters.distance": {
     "line number": [
      545
     ]
    },
    "pycbc.waveform.parameters.mchirp": {
     "line number": [
      548
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.CustomTransform": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "pycbc.transforms.BaseTransform": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.CustomTransform.__init__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      201,
      203
     ]
    },
    "set": {
     "line number": [
      205,
      206
     ]
    },
    "six.string_types": {
     "line number": [
      201,
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.CustomTransform._copytoscratch": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      228
     ]
    },
    "isinstance": {
     "line number": [
      233
     ]
    },
    "len": {
     "line number": [
      236
     ]
    },
    "list": {
     "line number": [
      232
     ]
    },
    "pycbc.transforms.numpy": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.CustomTransform._createscratch": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "float": {
     "line number": [
      216
     ]
    },
    "pycbc.io.record.FieldArray": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.CustomTransform._getslice": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      244
     ]
    },
    "list": {
     "line number": [
      243,
      244
     ]
    },
    "pycbc.transforms.numpy": {
     "line number": [
      244
     ]
    },
    "slice": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.CustomTransform.from_config": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      285
     ]
    },
    "cls": {
     "line number": [
      315
     ]
    },
    "map": {
     "line number": [
      302
     ]
    },
    "pycbc.VARARGS_DELIM": {
     "line number": [
      301
     ]
    },
    "set": {
     "line number": [
      301
     ]
    },
    "str.strip": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.CustomTransform.jacobian": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      277
     ]
    },
    "isinstance": {
     "line number": [
      281
     ]
    },
    "pycbc.transforms.numpy": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.CustomTransform.transform": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.DistanceToChirpDistance": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": {
    "pycbc.transforms.ChirpDistanceToDistance": {
     "line number": [
      1398,
      1402
     ]
    },
    "pycbc.waveform.parameters.chirp_distance": {
     "line number": [
      1404
     ]
    },
    "pycbc.waveform.parameters.distance": {
     "line number": [
      1403
     ]
    },
    "pycbc.waveform.parameters.mchirp": {
     "line number": [
      1403
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.DistanceToRedshift": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": {
    "pycbc.transforms.BaseTransform": {
     "line number": [
      668
     ]
    },
    "pycbc.waveform.parameters.distance": {
     "line number": [
      673
     ]
    },
    "pycbc.waveform.parameters.redshift": {
     "line number": [
      674
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.DistanceToRedshift.transform": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": {
    "pycbc.cosmology.redshift": {
     "line number": [
      699
     ]
    },
    "pycbc.waveform.parameters.distance": {
     "line number": [
      700
     ]
    },
    "pycbc.waveform.parameters.redshift": {
     "line number": [
      699
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.LambdaFromTOVFile": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": {
    "pycbc.transforms.BaseTransform": {
     "line number": [
      934
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.LambdaFromTOVFile.__init__": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": {
    "pycbc.transforms.LambdaFromTOVFile": {
     "line number": [
      994
     ]
    },
    "pycbc.transforms.logging": {
     "line number": [
      989
     ]
    },
    "pycbc.transforms.numpy": {
     "line number": [
      991
     ]
    },
    "super": {
     "line number": [
      994
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.LambdaFromTOVFile.distance": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1020
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.LambdaFromTOVFile.lambda_data": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1013
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.LambdaFromTOVFile.lambda_from_tov_data": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      1048
     ]
    },
    "pycbc.cosmology.redshift": {
     "line number": [
      1048
     ]
    },
    "pycbc.transforms.numpy": {
     "line number": [
      1049
     ]
    },
    "staticmethod": {
     "line number": [
      1027
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.LambdaFromTOVFile.lambda_param": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1001
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.LambdaFromTOVFile.mass_data": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1006
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.LambdaFromTOVFile.mass_param": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": {
    "property": {
     "line number": [
      996
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.LambdaFromTOVFile.transform": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1073
     ]
    },
    "pycbc.transforms.logging": {
     "line number": [
      1074
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Logistic": {
  "data": {
   "lineno": 1505,
   "symbols_in_volume": {
    "pycbc.transforms.Logit": {
     "line number": [
      1505,
      1524
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.Logistic.__init__": {
  "data": {
   "lineno": 1530,
   "symbols_in_volume": {
    "pycbc.transforms.Logistic": {
     "line number": [
      1531
     ]
    },
    "super": {
     "line number": [
      1531
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Logistic.bounds": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1533
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Logistic.from_config": {
  "data": {
   "lineno": 1539,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1601
     ]
    },
    "classmethod": {
     "line number": [
      1539
     ]
    },
    "cls": {
     "line number": [
      1605
     ]
    },
    "float": {
     "line number": [
      1604,
      1604
     ]
    },
    "pycbc.transforms.Logistic": {
     "line number": [
      1605
     ]
    },
    "super": {
     "line number": [
      1605
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Logit": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": {
    "pycbc.transforms.BaseTransform": {
     "line number": [
      1084
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.Logit.__init__": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": {
    "pycbc.boundaries.Bounds": {
     "line number": [
      1109
     ]
    },
    "pycbc.transforms.Logit": {
     "line number": [
      1114
     ]
    },
    "super": {
     "line number": [
      1114
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Logit.bounds": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1126
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Logit.from_config": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1360
     ]
    },
    "classmethod": {
     "line number": [
      1298
     ]
    },
    "cls": {
     "line number": [
      1364
     ]
    },
    "float": {
     "line number": [
      1363,
      1363
     ]
    },
    "pycbc.transforms.Logit": {
     "line number": [
      1364
     ]
    },
    "super": {
     "line number": [
      1364
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Logit.inputvar": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1116
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Logit.inverse_jacobian": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": {
    "pycbc.transforms.numpy": {
     "line number": [
      1295
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Logit.inverse_transform": {
  "data": {
   "lineno": 1220
  },
  "type": "function"
 },
 "pycbc.transforms.Logit.jacobian": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1267,
      1269
     ]
    },
    "isinstance": {
     "line number": [
      1266
     ]
    },
    "pycbc.transforms.numpy": {
     "line number": [
      1266
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Logit.logistic": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": {
    "pycbc.transforms.numpy": {
     "line number": [
      1190
     ]
    },
    "staticmethod": {
     "line number": [
      1161
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Logit.logit": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": {
    "pycbc.transforms.numpy": {
     "line number": [
      1159,
      1159
     ]
    },
    "staticmethod": {
     "line number": [
      1132
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Logit.outputvar": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1121
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Logit.transform": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1216
     ]
    },
    "isinstance": {
     "line number": [
      1213
     ]
    },
    "pycbc.transforms.numpy": {
     "line number": [
      1213
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.Mass1Mass2ToMchirpEta": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": {
    "pycbc.transforms.MchirpEtaToMass1Mass2": {
     "line number": [
      1386,
      1390
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.Mass1Mass2ToMchirpQ": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": {
    "pycbc.transforms.MchirpQToMass1Mass2": {
     "line number": [
      1374,
      1378
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.MchirpEtaToMass1Mass2": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "pycbc.transforms.BaseTransform": {
     "line number": [
      415
     ]
    },
    "pycbc.waveform.parameters.eta": {
     "line number": [
      419
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      420
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      420
     ]
    },
    "pycbc.waveform.parameters.mchirp": {
     "line number": [
      419
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.MchirpEtaToMass1Mass2.inverse_jacobian": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "pycbc.conversions.eta_from_mass1_mass2": {
     "line number": [
      505
     ]
    },
    "pycbc.conversions.mchirp_from_mass1_mass2": {
     "line number": [
      504
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      502
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      503
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.MchirpEtaToMass1Mass2.inverse_transform": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": {
    "pycbc.conversions.eta_from_mass1_mass2": {
     "line number": [
      485
     ]
    },
    "pycbc.conversions.mchirp_from_mass1_mass2": {
     "line number": [
      484
     ]
    },
    "pycbc.waveform.parameters.eta": {
     "line number": [
      485
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      482
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      483
     ]
    },
    "pycbc.waveform.parameters.mchirp": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.MchirpEtaToMass1Mass2.jacobian": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "pycbc.conversions.mass1_from_mchirp_eta": {
     "line number": [
      494
     ]
    },
    "pycbc.conversions.mass2_from_mchirp_eta": {
     "line number": [
      495
     ]
    },
    "pycbc.waveform.parameters.eta": {
     "line number": [
      493
     ]
    },
    "pycbc.waveform.parameters.mchirp": {
     "line number": [
      492
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.MchirpEtaToMass1Mass2.transform": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "pycbc.conversions.mass1_from_mchirp_eta": {
     "line number": [
      448
     ]
    },
    "pycbc.conversions.mass2_from_mchirp_eta": {
     "line number": [
      451
     ]
    },
    "pycbc.waveform.parameters.eta": {
     "line number": [
      450,
      453
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      448
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      451
     ]
    },
    "pycbc.waveform.parameters.mchirp": {
     "line number": [
      449,
      452
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.MchirpQToMass1Mass2": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "pycbc.transforms.BaseTransform": {
     "line number": [
      326
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      331
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      331
     ]
    },
    "pycbc.waveform.parameters.mchirp": {
     "line number": [
      330
     ]
    },
    "pycbc.waveform.parameters.q": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.MchirpQToMass1Mass2.inverse_jacobian": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "pycbc.conversions.mchirp_from_mass1_mass2": {
     "line number": [
      413
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      411
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.MchirpQToMass1Mass2.inverse_transform": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "pycbc.conversions.mchirp_from_mass1_mass2": {
     "line number": [
      395
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      393
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      394
     ]
    },
    "pycbc.waveform.parameters.mchirp": {
     "line number": [
      395
     ]
    },
    "pycbc.waveform.parameters.q": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.MchirpQToMass1Mass2.jacobian": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "pycbc.waveform.parameters.mchirp": {
     "line number": [
      403
     ]
    },
    "pycbc.waveform.parameters.q": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.MchirpQToMass1Mass2.transform": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "pycbc.conversions.mass1_from_mchirp_q": {
     "line number": [
      359
     ]
    },
    "pycbc.conversions.mass2_from_mchirp_q": {
     "line number": [
      362
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      359
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      362
     ]
    },
    "pycbc.waveform.parameters.mchirp": {
     "line number": [
      360,
      363
     ]
    },
    "pycbc.waveform.parameters.q": {
     "line number": [
      361,
      364
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.PrecessionMassSpinToCartesianSpin": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": {
    "pycbc.transforms.BaseTransform": {
     "line number": [
      765
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      769,
      771
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      769,
      771
     ]
    },
    "pycbc.waveform.parameters.spin1x": {
     "line number": [
      772
     ]
    },
    "pycbc.waveform.parameters.spin1y": {
     "line number": [
      772
     ]
    },
    "pycbc.waveform.parameters.spin2x": {
     "line number": [
      773
     ]
    },
    "pycbc.waveform.parameters.spin2y": {
     "line number": [
      773
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.PrecessionMassSpinToCartesianSpin.inverse_transform": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      878
     ]
    },
    "map": {
     "line number": [
      879
     ]
    },
    "pycbc.conversions.phi_a": {
     "line number": [
      869
     ]
    },
    "pycbc.conversions.phi_s": {
     "line number": [
      873
     ]
    },
    "pycbc.conversions.primary_xi": {
     "line number": [
      861
     ]
    },
    "pycbc.conversions.secondary_xi": {
     "line number": [
      865
     ]
    },
    "pycbc.transforms.numpy": {
     "line number": [
      878,
      879,
      883,
      886
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      862,
      866,
      870,
      879
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      862,
      866,
      870,
      880
     ]
    },
    "pycbc.waveform.parameters.spin1x": {
     "line number": [
      863,
      867,
      871,
      874
     ]
    },
    "pycbc.waveform.parameters.spin1y": {
     "line number": [
      863,
      867,
      871,
      874
     ]
    },
    "pycbc.waveform.parameters.spin2x": {
     "line number": [
      864,
      868,
      872,
      875
     ]
    },
    "pycbc.waveform.parameters.spin2y": {
     "line number": [
      864,
      868,
      872,
      875
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.PrecessionMassSpinToCartesianSpin.transform": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      814
     ]
    },
    "map": {
     "line number": [
      815
     ]
    },
    "pycbc.conversions.primary_mass": {
     "line number": [
      792
     ]
    },
    "pycbc.conversions.primary_spin": {
     "line number": [
      797
     ]
    },
    "pycbc.conversions.secondary_mass": {
     "line number": [
      793
     ]
    },
    "pycbc.conversions.secondary_spin": {
     "line number": [
      799
     ]
    },
    "pycbc.conversions.spin1x_from_xi1_phi_a_phi_s": {
     "line number": [
      803
     ]
    },
    "pycbc.conversions.spin1y_from_xi1_phi_a_phi_s": {
     "line number": [
      805
     ]
    },
    "pycbc.conversions.spin2x_from_mass1_mass2_xi2_phi_a_phi_s": {
     "line number": [
      807
     ]
    },
    "pycbc.conversions.spin2y_from_mass1_mass2_xi2_phi_a_phi_s": {
     "line number": [
      809
     ]
    },
    "pycbc.transforms.numpy": {
     "line number": [
      814,
      815,
      818,
      821,
      824,
      827
     ]
    },
    "pycbc.waveform.parameters.spin1x": {
     "line number": [
      818,
      831,
      836
     ]
    },
    "pycbc.waveform.parameters.spin1y": {
     "line number": [
      821,
      832,
      837
     ]
    },
    "pycbc.waveform.parameters.spin2x": {
     "line number": [
      824,
      833,
      838
     ]
    },
    "pycbc.waveform.parameters.spin2y": {
     "line number": [
      827,
      834,
      839
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.SphericalSpin1ToCartesianSpin1": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": {
    "pycbc.transforms.BaseTransform": {
     "line number": [
      599
     ]
    },
    "pycbc.waveform.parameters.spin1_a": {
     "line number": [
      605
     ]
    },
    "pycbc.waveform.parameters.spin1_azimuthal": {
     "line number": [
      605
     ]
    },
    "pycbc.waveform.parameters.spin1_polar": {
     "line number": [
      606
     ]
    },
    "pycbc.waveform.parameters.spin1x": {
     "line number": [
      607
     ]
    },
    "pycbc.waveform.parameters.spin1y": {
     "line number": [
      607
     ]
    },
    "pycbc.waveform.parameters.spin1z": {
     "line number": [
      607
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.SphericalSpin1ToCartesianSpin1.inverse_transform": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": {
    "pycbc.coordinates.cartesian_to_spherical": {
     "line number": [
      652
     ]
    },
    "zip": {
     "line number": [
      653
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.SphericalSpin1ToCartesianSpin1.transform": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": {
    "pycbc.coordinates.spherical_to_cartesian": {
     "line number": [
      634
     ]
    },
    "zip": {
     "line number": [
      635
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.SphericalSpin2ToCartesianSpin2": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": {
    "pycbc.transforms.SphericalSpin1ToCartesianSpin1": {
     "line number": [
      657
     ]
    },
    "pycbc.waveform.parameters.spin2_a": {
     "line number": [
      663
     ]
    },
    "pycbc.waveform.parameters.spin2_azimuthal": {
     "line number": [
      663
     ]
    },
    "pycbc.waveform.parameters.spin2_polar": {
     "line number": [
      664
     ]
    },
    "pycbc.waveform.parameters.spin2x": {
     "line number": [
      665
     ]
    },
    "pycbc.waveform.parameters.spin2y": {
     "line number": [
      665
     ]
    },
    "pycbc.waveform.parameters.spin2z": {
     "line number": [
      665
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.transforms.VARARGS_DELIM": {
  "data": {
   "shadows": "pycbc.VARARGS_DELIM"
  },
  "type": "import"
 },
 "pycbc.transforms.apply_transforms": {
  "data": {
   "lineno": 1743,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1770
     ]
    },
    "pycbc.transforms.transforms": {
     "line number": [
      1763,
      1763,
      1764
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.common_cbc_forward_transforms": {
  "data": {
   "lineno": 1655
  },
  "type": "constant"
 },
 "pycbc.transforms.common_cbc_inverse_transforms": {
  "data": {
   "lineno": 1661
  },
  "type": "constant"
 },
 "pycbc.transforms.common_cbc_transforms": {
  "data": {
   "lineno": 1664
  },
  "type": "constant"
 },
 "pycbc.transforms.compute_jacobian": {
  "data": {
   "lineno": 1775,
   "symbols_in_volume": {
    "pycbc.transforms.transforms": {
     "line number": [
      1796,
      1799
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.conversions": {
  "data": {
   "shadows": "pycbc.conversions"
  },
  "type": "import"
 },
 "pycbc.transforms.coordinates": {
  "data": {
   "shadows": "pycbc.coordinates"
  },
  "type": "import"
 },
 "pycbc.transforms.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycbc.transforms.cosmology": {
  "data": {
   "shadows": "pycbc.cosmology"
  },
  "type": "import"
 },
 "pycbc.transforms.get_common_cbc_transforms": {
  "data": {
   "lineno": 1668,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1693
     ]
    },
    "len": {
     "line number": [
      1731
     ]
    },
    "list": {
     "line number": [
      1705,
      1705,
      1740
     ]
    },
    "pycbc.transforms.common_cbc_forward_transforms": {
     "line number": [
      1729
     ]
    },
    "pycbc.transforms.common_cbc_inverse_transforms": {
     "line number": [
      1715
     ]
    },
    "set": {
     "line number": [
      1693,
      1693,
      1705,
      1709
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.transforms.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.transforms.order_transforms": {
  "data": {
   "lineno": 1804,
   "symbols_in_volume": {
    "pycbc.transforms.transforms": {
     "line number": [
      1822,
      1824
     ]
    },
    "set": {
     "line number": [
      1822
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.parameters": {
  "data": {
   "shadows": "pycbc.waveform.parameters"
  },
  "type": "import"
 },
 "pycbc.transforms.read_transforms_from_config": {
  "data": {
   "lineno": 1837,
   "symbols_in_volume": {
    "pycbc.transforms.order_transforms": {
     "line number": [
      1862
     ]
    },
    "pycbc.transforms.transforms": {
     "line number": [
      1860
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.transforms.record": {
  "data": {
   "shadows": "pycbc.io.record"
  },
  "type": "import"
 },
 "pycbc.transforms.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "pycbc.transforms.transforms": {
  "data": {
   "lineno": 1629
  },
  "type": "constant"
 },
 "pycbc.types": {
  "data": {},
  "type": "module"
 },
 "pycbc.types.aligned": {
  "data": {},
  "type": "module"
 },
 "pycbc.types.aligned.ArrayWithAligned": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.types.aligned.ArrayWithAligned.__array_finalize__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pycbc.types.aligned.ArrayWithAligned.__array_wrap__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.ndarray.__array_wrap__": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.aligned.ArrayWithAligned.__new__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.aligned.ArrayWithAligned.isaligned": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "property": {
     "line number": [
      47
     ]
    },
    "pycbc.types.aligned.check_aligned": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.aligned.PYCBC_ALIGNMENT": {
  "data": {
   "shadows": "pycbc.PYCBC_ALIGNMENT"
  },
  "type": "import"
 },
 "pycbc.types.aligned._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.types.aligned.check_aligned": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pycbc.PYCBC_ALIGNMENT": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.aligned.empty": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "int": {
     "line number": [
      64
     ]
    },
    "numpy.dtype": {
     "line number": [
      63
     ]
    },
    "numpy.empty": {
     "line number": [
      65
     ]
    },
    "numpy.uint8": {
     "line number": [
      65
     ]
    },
    "pycbc.PYCBC_ALIGNMENT": {
     "line number": [
      65,
      67,
      67,
      67
     ]
    },
    "pycbc.types.aligned.ArrayWithAligned": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.aligned.zeros": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "int": {
     "line number": [
      56
     ]
    },
    "numpy.dtype": {
     "line number": [
      55,
      60
     ]
    },
    "numpy.uint8": {
     "line number": [
      57
     ]
    },
    "numpy.zeros": {
     "line number": [
      57
     ]
    },
    "pycbc.PYCBC_ALIGNMENT": {
     "line number": [
      57,
      59,
      59,
      59
     ]
    },
    "pycbc.types.aligned.ArrayWithAligned": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda": {
  "data": {
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      250,
      251
     ]
    },
    "numpy.float32": {
     "line number": [
      251
     ]
    },
    "numpy.float64": {
     "line number": [
      250
     ]
    },
    "numpy.int32": {
     "line number": [
      251
     ]
    },
    "numpy.int64": {
     "line number": [
      250
     ]
    },
    "pycbc.types.array_cuda.LowerLatencyReductionKernel": {
     "line number": [
      256,
      260,
      267,
      271,
      275,
      279
     ]
    },
    "pycbc.types.array_cuda.amld": {
     "line number": [
      283
     ]
    },
    "pycbc.types.array_cuda.amldc": {
     "line number": [
      283
     ]
    },
    "pycbc.types.array_cuda.amls": {
     "line number": [
      283
     ]
    },
    "pycbc.types.array_cuda.amlsc": {
     "line number": [
      283
     ]
    },
    "pycbc.types.array_cuda.inner": {
     "line number": [
      178
     ]
    },
    "pycbc.types.array_cuda.maxloc_dtype_double": {
     "line number": [
      260,
      271,
      279
     ]
    },
    "pycbc.types.array_cuda.maxloc_dtype_single": {
     "line number": [
      256,
      267,
      275
     ]
    },
    "pycbc.types.array_cuda.maxloc_preamble": {
     "line number": [
      242,
      248
     ]
    },
    "pycbc.types.array_cuda.maxloc_preamble_double": {
     "line number": [
      262,
      273,
      281
     ]
    },
    "pycbc.types.array_cuda.maxloc_preamble_single": {
     "line number": [
      258,
      269,
      277
     ]
    },
    "pycbc.types.array_cuda.mld": {
     "line number": [
      264
     ]
    },
    "pycbc.types.array_cuda.mls": {
     "line number": [
      264
     ]
    },
    "pycuda.tools.get_or_register_dtype": {
     "line number": [
      253,
      254
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.types.array_cuda.ElementwiseKernel": {
  "data": {
   "shadows": "pycuda.elementwise.ElementwiseKernel"
  },
  "type": "import"
 },
 "pycbc.types.array_cuda.GPUArray": {
  "data": {
   "shadows": "pycuda.gpuarray.GPUArray"
  },
  "type": "import"
 },
 "pycbc.types.array_cuda.InclusiveScanKernel": {
  "data": {
   "shadows": "pycuda.scan.InclusiveScanKernel"
  },
  "type": "import"
 },
 "pycbc.types.array_cuda.LowerLatencyReductionKernel": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "pycuda.reduction.ReductionKernel": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.types.array_cuda.LowerLatencyReductionKernel.__call__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "f": {
     "line number": [
      94,
      99,
      104
     ]
    },
    "pycbc.types.array_cuda.call_prepare": {
     "line number": [
      92,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.LowerLatencyReductionKernel.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "pycuda.reduction.ReductionKernel.__init__": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.ReductionKernel": {
  "data": {
   "shadows": "pycuda.reduction.ReductionKernel"
  },
  "type": "import"
 },
 "pycbc.types.array_cuda._copy": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      333
     ]
    },
    "len": {
     "line number": [
      326,
      326
     ]
    },
    "pycuda.elementwise.get_copy_kernel": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda._copy_base_array": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "len": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda._get_common_dtype": {
  "data": {
   "shadows": "pycuda.gpuarray._get_common_dtype"
  },
  "type": "import"
 },
 "pycbc.types.array_cuda._getvalue": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "pycbc.types.array_cuda._scheme_matches_base_array": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda._to_device": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.abs_max_loc": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "float": {
     "line number": [
      303
     ]
    },
    "int": {
     "line number": [
      303
     ]
    },
    "pycbc.types.array_cuda.abs_max_loc_map": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.abs_max_loc_map": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.amld": {
  "data": {
   "lineno": 271
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.amldc": {
  "data": {
   "lineno": 279
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.amls": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.amlsc": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.call_prepare": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "pycuda.gpuarray.empty": {
     "line number": [
      65,
      67
     ]
    },
    "pycuda.tools.context_dependent_memoize": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.clear": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.context_dependent_memoize": {
  "data": {
   "shadows": "pycuda.tools.context_dependent_memoize"
  },
  "type": "import"
 },
 "pycbc.types.array_cuda.cumsum": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "pycbc.types.array_cuda.icumsum": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.dot": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.dtype_to_ctype": {
  "data": {
   "shadows": "pycuda.tools.dtype_to_ctype"
  },
  "type": "import"
 },
 "pycbc.types.array_cuda.empty": {
  "data": {
   "shadows": "pycuda.gpuarray.empty"
  },
  "type": "import"
 },
 "pycbc.types.array_cuda.get_copy_kernel": {
  "data": {
   "shadows": "pycuda.elementwise.get_copy_kernel"
  },
  "type": "import"
 },
 "pycbc.types.array_cuda.get_cumsum_kernel": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "pycbc.types.array_cuda.include_complex": {
     "line number": [
      44
     ]
    },
    "pycuda.scan.InclusiveScanKernel": {
     "line number": [
      44
     ]
    },
    "pycuda.tools.context_dependent_memoize": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.get_inner_kernel": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "numpy.complex128": {
     "line number": [
      158
     ]
    },
    "numpy.complex64": {
     "line number": [
      158
     ]
    },
    "pycbc.types.array_cuda.LowerLatencyReductionKernel": {
     "line number": [
      162
     ]
    },
    "pycuda.tools.context_dependent_memoize": {
     "line number": [
      156
     ]
    },
    "pycuda.tools.dtype_to_ctype": {
     "line number": [
      165,
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.get_norm_kernel": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "pycuda.elementwise.ElementwiseKernel": {
     "line number": [
      115
     ]
    },
    "pycuda.tools.context_dependent_memoize": {
     "line number": [
      113
     ]
    },
    "pycuda.tools.dtype_to_ctype": {
     "line number": [
      117,
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.get_or_register_dtype": {
  "data": {
   "shadows": "pycuda.tools.get_or_register_dtype"
  },
  "type": "import"
 },
 "pycbc.types.array_cuda.get_weighted_inner_kernel": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "numpy.complex128": {
     "line number": [
      141
     ]
    },
    "numpy.complex64": {
     "line number": [
      141
     ]
    },
    "pycbc.types.array_cuda.LowerLatencyReductionKernel": {
     "line number": [
      145
     ]
    },
    "pycuda.tools.context_dependent_memoize": {
     "line number": [
      139
     ]
    },
    "pycuda.tools.dtype_to_ctype": {
     "line number": [
      148,
      149,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.icumsum": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "krnl": {
     "line number": [
      48
     ]
    },
    "pycbc.types.array_cuda.get_cumsum_kernel": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.include_complex": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.inner": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "krnl": {
     "line number": [
      175,
      176
     ]
    },
    "pycbc.types.array_cuda.get_inner_kernel": {
     "line number": [
      175
     ]
    },
    "pycuda.gpuarray._get_common_dtype": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.match_precision": {
  "data": {
   "shadows": "pytools.match_precision"
  },
  "type": "import"
 },
 "pycbc.types.array_cuda.max": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.max_loc": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "float": {
     "line number": [
      315
     ]
    },
    "int": {
     "line number": [
      315
     ]
    },
    "pycbc.types.array_cuda.max_loc_map": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.max_loc_map": {
  "data": {
   "lineno": 264
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.maxloc_dtype_double": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.maxloc_dtype_single": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.maxloc_preamble": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.maxloc_preamble_double": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.maxloc_preamble_single": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.min": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.mld": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.mls": {
  "data": {
   "lineno": 256
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.types.array_cuda.numpy": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.ptr": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.pycuda.driver": {
  "data": {
   "shadows": "pycuda.driver"
  },
  "type": "import"
 },
 "pycbc.types.array_cuda.pycuda.gpuarray": {
  "data": {
   "shadows": "pycuda.gpuarray"
  },
  "type": "import"
 },
 "pycbc.types.array_cuda.squared_norm": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "krnl": {
     "line number": [
      127,
      128
     ]
    },
    "numpy.dtype": {
     "line number": [
      125
     ]
    },
    "pycbc.types.array_cuda.get_norm_kernel": {
     "line number": [
      127
     ]
    },
    "pytools.match_precision": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.sum": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.take": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.vdot": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "pycbc.types.array_cuda.weighted_inner": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "krnl": {
     "line number": [
      185,
      186
     ]
    },
    "pycbc.types.array_cuda.get_weighted_inner_kernel": {
     "line number": [
      185
     ]
    },
    "pycuda.gpuarray._get_common_dtype": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.array_cuda.zeros": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      285
     ]
    },
    "pycuda.gpuarray.GPUArray": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries": {
  "data": {},
  "type": "module"
 },
 "pycbc.types.frequencyseries.Array": {
  "data": {
   "shadows": "pycbc.types.array.Array"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries.FrequencySeries": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "property": {
     "line number": [
      108,
      115,
      122
     ]
    },
    "pycbc.types.array.Array": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.types.frequencyseries.FrequencySeries.__eq__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "pycbc.types.frequencyseries.FrequencySeries": {
     "line number": [
      212
     ]
    },
    "super": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      58
     ]
    },
    "TypeError": {
     "line number": [
      59,
      85
     ]
    },
    "ValueError": {
     "line number": [
      54,
      61
     ]
    },
    "isinstance": {
     "line number": [
      68,
      70,
      76
     ]
    },
    "lal.LIGOTimeGPS": {
     "line number": [
      68,
      73,
      81,
      83
     ]
    },
    "len": {
     "line number": [
      53
     ]
    },
    "numpy.generic": {
     "line number": [
      76
     ]
    },
    "pycbc.types.array.Array.__init__": {
     "line number": [
      86
     ]
    },
    "pycbc.types.frequencyseries.FrequencySeries": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries._getslice": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "pycbc.types.array.Array._getslice": {
     "line number": [
      130
     ]
    },
    "pycbc.types.frequencyseries.FrequencySeries": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries._return": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "pycbc.types.frequencyseries.FrequencySeries": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries._typecheck": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      99
     ]
    },
    "isinstance": {
     "line number": [
      94
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      96
     ]
    },
    "pycbc.types.frequencyseries.FrequencySeries": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.almost_equal_elem": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      267
     ]
    },
    "abs": {
     "line number": [
      271,
      274
     ]
    },
    "pycbc.types.frequencyseries.FrequencySeries": {
     "line number": [
      268
     ]
    },
    "super": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.almost_equal_norm": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      325
     ]
    },
    "abs": {
     "line number": [
      329,
      332
     ]
    },
    "pycbc.types.frequencyseries.FrequencySeries": {
     "line number": [
      326
     ]
    },
    "super": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.at_frequency": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "int": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.cyclic_time_shift": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": {
    "pycbc.types.array._noreal": {
     "line number": [
      483
     ]
    },
    "pycbc.waveform.apply_fseries_time_shift": {
     "line number": [
      505
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.delta_t": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "property": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.duration": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "property": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.end_time": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "property": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.get_delta_f": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.get_epoch": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.get_sample_frequencies": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "len": {
     "line number": [
      121
     ]
    },
    "pycbc.types.array.Array": {
     "line number": [
      121
     ]
    },
    "range": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.lal": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "lal.CreateCOMPLEX16FrequencySeries": {
     "line number": [
      367
     ]
    },
    "lal.CreateCOMPLEX8FrequencySeries": {
     "line number": [
      365
     ]
    },
    "lal.CreateREAL4FrequencySeries": {
     "line number": [
      361
     ]
    },
    "lal.CreateREAL8FrequencySeries": {
     "line number": [
      363
     ]
    },
    "lal.LIGOTimeGPS": {
     "line number": [
      356
     ]
    },
    "lal.SecondUnit": {
     "line number": [
      361,
      363,
      365,
      367
     ]
    },
    "len": {
     "line number": [
      361,
      363,
      365,
      367
     ]
    },
    "numpy.complex128": {
     "line number": [
      366
     ]
    },
    "numpy.complex64": {
     "line number": [
      364
     ]
    },
    "numpy.float32": {
     "line number": [
      360
     ]
    },
    "numpy.float64": {
     "line number": [
      362
     ]
    },
    "pycbc.types.array._convert": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.match": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "int": {
     "line number": [
      543
     ]
    },
    "isinstance": {
     "line number": [
      540
     ]
    },
    "len": {
     "line number": [
      547,
      547,
      549,
      551,
      551,
      553
     ]
    },
    "pycbc.filter.match": {
     "line number": [
      555
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      540
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.sample_rate": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "len": {
     "line number": [
      176
     ]
    },
    "property": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.save": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      415,
      435
     ]
    },
    "float": {
     "line number": [
      432,
      433
     ]
    },
    "glue.ligolw.utils.write_filename": {
     "line number": [
      425
     ]
    },
    "numpy.argmax": {
     "line number": [
      421
     ]
    },
    "numpy.save": {
     "line number": [
      400
     ]
    },
    "numpy.savetxt": {
     "line number": [
      409
     ]
    },
    "numpy.vstack": {
     "line number": [
      398,
      403,
      406
     ]
    },
    "os.path.splitext": {
     "line number": [
      396
     ]
    },
    "pycbc.io.live.make_psd_xmldoc": {
     "line number": [
      425
     ]
    },
    "pycbc.types.frequencyseries.h5py": {
     "line number": [
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.start_time": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "lal.LIGOTimeGPS": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.FrequencySeries.to_timeseries": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      467
     ]
    },
    "int": {
     "line number": [
      463,
      464
     ]
    },
    "len": {
     "line number": [
      458,
      466,
      475
     ]
    },
    "pycbc.fft.ifft": {
     "line number": [
      480
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      477
     ]
    },
    "pycbc.types.array._noreal": {
     "line number": [
      438
     ]
    },
    "pycbc.types.array.zeros": {
     "line number": [
      473,
      477
     ]
    },
    "pycbc.types.frequencyseries.FrequencySeries": {
     "line number": [
      473
     ]
    },
    "pycbc.types.real_same_precision_as": {
     "line number": [
      478
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries._convert": {
  "data": {
   "shadows": "pycbc.types.array._convert"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries._lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries._noreal": {
  "data": {
   "shadows": "pycbc.types.array._noreal"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries._numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries._os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries.apply_fseries_time_shift": {
  "data": {
   "shadows": "pycbc.waveform.apply_fseries_time_shift"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries.ifft": {
  "data": {
   "shadows": "pycbc.fft.ifft"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries.load_frequencyseries": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      592,
      604
     ]
    },
    "lal.LIGOTimeGPS": {
     "line number": [
      596,
      600
     ]
    },
    "len": {
     "line number": [
      595,
      599
     ]
    },
    "numpy.load": {
     "line number": [
      580
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      582
     ]
    },
    "os.path.splitext": {
     "line number": [
      578
     ]
    },
    "pycbc.types.frequencyseries.FrequencySeries": {
     "line number": [
      587,
      597,
      601
     ]
    },
    "pycbc.types.frequencyseries.h5py": {
     "line number": [
      585
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.frequencyseries.make_psd_xmldoc": {
  "data": {
   "shadows": "pycbc.io.live.make_psd_xmldoc"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries.match": {
  "data": {
   "shadows": "pycbc.filter.match"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries.real_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.real_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries.utils": {
  "data": {
   "shadows": "glue.ligolw.utils"
  },
  "type": "import"
 },
 "pycbc.types.frequencyseries.zeros": {
  "data": {
   "shadows": "pycbc.types.array.zeros"
  },
  "type": "import"
 },
 "pycbc.types.optparse": {
  "data": {},
  "type": "module"
 },
 "pycbc.types.optparse.DictWithDefaultReturn": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "collections.defaultdict": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.types.optparse.DictWithDefaultReturn.__bool__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "all": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.optparse.MultiDetOptionAction": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "pycbc.types.optparse.argparse": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.types.optparse.MultiDetOptionAction.__call__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      94,
      102,
      107,
      116
     ]
    },
    "getattr": {
     "line number": [
      83,
      85
     ]
    },
    "len": {
     "line number": [
      89,
      97
     ]
    },
    "pycbc.types.optparse.DictWithDefaultReturn": {
     "line number": [
      84
     ]
    },
    "pycbc.types.optparse.copy": {
     "line number": [
      86
     ]
    },
    "setattr": {
     "line number": [
      84,
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.optparse.MultiDetOptionAction.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      61,
      65
     ]
    },
    "help": {
     "line number": [
      76
     ]
    },
    "pycbc.types.optparse.DictWithDefaultReturn": {
     "line number": [
      58
     ]
    },
    "pycbc.types.optparse.MultiDetOptionAction": {
     "line number": [
      67
     ]
    },
    "pycbc.types.optparse.argparse": {
     "line number": [
      64,
      66
     ]
    },
    "str": {
     "line number": [
      57,
      73
     ]
    },
    "super": {
     "line number": [
      67
     ]
    },
    "type": {
     "line number": [
      54,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.optparse.MultiDetOptionActionSpecial": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "pycbc.types.optparse.MultiDetOptionAction": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.types.optparse.MultiDetOptionActionSpecial.__call__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      143,
      155,
      162
     ]
    },
    "getattr": {
     "line number": [
      131,
      133
     ]
    },
    "len": {
     "line number": [
      137,
      146
     ]
    },
    "pycbc.types.optparse.copy": {
     "line number": [
      134
     ]
    },
    "setattr": {
     "line number": [
      132,
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.optparse.MultiDetOptionAppendAction": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "pycbc.types.optparse.MultiDetOptionAction": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.types.optparse.MultiDetOptionAppendAction.__call__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      187
     ]
    },
    "getattr": {
     "line number": [
      169,
      171
     ]
    },
    "len": {
     "line number": [
      175
     ]
    },
    "pycbc.types.optparse.copy": {
     "line number": [
      172
     ]
    },
    "setattr": {
     "line number": [
      170,
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.optparse.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "pycbc.types.optparse.convert_to_process_params_dict": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      313,
      316
     ]
    },
    "list": {
     "line number": [
      316
     ]
    },
    "pycbc.types.optparse.DictWithDefaultReturn": {
     "line number": [
      313
     ]
    },
    "pycbc.types.optparse.copy": {
     "line number": [
      311
     ]
    },
    "setattr": {
     "line number": [
      323
     ]
    },
    "str": {
     "line number": [
      319,
      322
     ]
    },
    "vars": {
     "line number": [
      312,
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.optparse.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycbc.types.optparse.copy_opts_for_single_ifo": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      302
     ]
    },
    "isinstance": {
     "line number": [
      301
     ]
    },
    "pycbc.types.optparse.DictWithDefaultReturn": {
     "line number": [
      301
     ]
    },
    "pycbc.types.optparse.copy": {
     "line number": [
      299
     ]
    },
    "setattr": {
     "line number": [
      302
     ]
    },
    "vars": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.optparse.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pycbc.types.optparse.ensure_one_opt": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      251
     ]
    },
    "hasattr": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.optparse.ensure_one_opt_multi_ifo": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      279,
      280
     ]
    },
    "getattr": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.optparse.nonnegative_float": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      350
     ]
    },
    "float": {
     "line number": [
      349
     ]
    },
    "pycbc.types.optparse.argparse": {
     "line number": [
      351,
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.optparse.positive_float": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      335
     ]
    },
    "float": {
     "line number": [
      334
     ]
    },
    "pycbc.types.optparse.argparse": {
     "line number": [
      336,
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.optparse.required_opts": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      205
     ]
    },
    "hasattr": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.optparse.required_opts_multi_ifo": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      229,
      230
     ]
    },
    "getattr": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries": {
  "data": {},
  "type": "module"
 },
 "pycbc.types.timeseries.Array": {
  "data": {
   "shadows": "pycbc.types.array.Array"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.frequencyseries.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.TimeSeries": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "property": {
     "line number": [
      135,
      142,
      149,
      188,
      198
     ]
    },
    "pycbc.types.array.Array": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.types.timeseries.TimeSeries.__eq__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "pycbc.types.timeseries.TimeSeries": {
     "line number": [
      242
     ]
    },
    "super": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      62
     ]
    },
    "TypeError": {
     "line number": [
      63,
      82
     ]
    },
    "ValueError": {
     "line number": [
      58,
      65
     ]
    },
    "isinstance": {
     "line number": [
      72,
      74
     ]
    },
    "lal.LIGOTimeGPS": {
     "line number": [
      72,
      77,
      80
     ]
    },
    "len": {
     "line number": [
      57
     ]
    },
    "pycbc.types.array.Array.__init__": {
     "line number": [
      83
     ]
    },
    "pycbc.types.timeseries.TimeSeries": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries._getslice": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      105
     ]
    },
    "pycbc.types.array.Array._getslice": {
     "line number": [
      114
     ]
    },
    "pycbc.types.timeseries.TimeSeries": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries._return": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "pycbc.types.timeseries.TimeSeries": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries._typecheck": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      93,
      95
     ]
    },
    "isinstance": {
     "line number": [
      91
     ]
    },
    "pycbc.types.timeseries.TimeSeries": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.add_into": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      807
     ]
    },
    "float": {
     "line number": [
      815
     ]
    },
    "len": {
     "line number": [
      818,
      818
     ]
    },
    "max": {
     "line number": [
      822
     ]
    },
    "min": {
     "line number": [
      823
     ]
    },
    "numpy.floor": {
     "line number": [
      817
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.almost_equal_elem": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      297
     ]
    },
    "abs": {
     "line number": [
      301,
      304
     ]
    },
    "pycbc.types.timeseries.TimeSeries": {
     "line number": [
      298
     ]
    },
    "super": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.almost_equal_norm": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      355
     ]
    },
    "abs": {
     "line number": [
      359,
      362
     ]
    },
    "pycbc.types.timeseries.TimeSeries": {
     "line number": [
      356
     ]
    },
    "super": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.append_zeros": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "len": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.at_time": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "int": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.crop": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      418
     ]
    },
    "int": {
     "line number": [
      420,
      421
     ]
    },
    "len": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.cyclic_time_shift": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": {
    "pycbc.types.array._nocomplex": {
     "line number": [
      828
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.delta_f": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "property": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.detrend": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": {
    "scipy.signal.detrend": {
     "line number": [
      899
     ]
    },
    "type": {
     "line number": [
      899
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.filter_psd": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": {
    "int": {
     "line number": [
      484
     ]
    },
    "pycbc.psd.interpolate": {
     "line number": [
      485
     ]
    },
    "pycbc.psd.inverse_spectrum_truncation": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.fir_zero_filter": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": {
    "pycbc.filter.fir_zero_filter": {
     "line number": [
      710
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.get_delta_t": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.get_duration": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "len": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.get_end_time": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.get_sample_rate": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "int": {
     "line number": [
      148
     ]
    },
    "round": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.get_sample_times": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "float": {
     "line number": [
      197
     ]
    },
    "len": {
     "line number": [
      195,
      197
     ]
    },
    "pycbc.types.array.Array": {
     "line number": [
      195,
      197
     ]
    },
    "range": {
     "line number": [
      195,
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.highpass_fir": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": {
    "len": {
     "line number": [
      692
     ]
    },
    "pycbc.filter.highpass_fir": {
     "line number": [
      690
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.lal": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": {
    "lal.CreateCOMPLEX16TimeSeries": {
     "line number": [
      396
     ]
    },
    "lal.CreateCOMPLEX8TimeSeries": {
     "line number": [
      394
     ]
    },
    "lal.CreateREAL4TimeSeries": {
     "line number": [
      390
     ]
    },
    "lal.CreateREAL8TimeSeries": {
     "line number": [
      392
     ]
    },
    "lal.LIGOTimeGPS": {
     "line number": [
      385
     ]
    },
    "lal.SecondUnit": {
     "line number": [
      390,
      392,
      394,
      396
     ]
    },
    "len": {
     "line number": [
      390,
      392,
      394,
      396
     ]
    },
    "numpy.complex128": {
     "line number": [
      395
     ]
    },
    "numpy.complex64": {
     "line number": [
      393
     ]
    },
    "numpy.float32": {
     "line number": [
      389
     ]
    },
    "numpy.float64": {
     "line number": [
      391
     ]
    },
    "pycbc.types.array._convert": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.lowpass_fir": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": {
    "len": {
     "line number": [
      667
     ]
    },
    "pycbc.filter.lowpass_fir": {
     "line number": [
      665
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.match": {
  "data": {
   "lineno": 855
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.notch_fir": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": {
    "len": {
     "line number": [
      642
     ]
    },
    "pycbc.filter.notch_fir": {
     "line number": [
      640
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.prepend_zeros": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "len": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.psd": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "int": {
     "line number": [
      454,
      455
     ]
    },
    "pycbc.psd.welch": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.qtransform": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      587
     ]
    },
    "abs": {
     "line number": [
      592
     ]
    },
    "float": {
     "line number": [
      598,
      599
     ]
    },
    "int": {
     "line number": [
      581,
      601,
      601
     ]
    },
    "interp": {
     "line number": [
      612
     ]
    },
    "interp_amp": {
     "line number": [
      610
     ]
    },
    "interp_phase": {
     "line number": [
      609
     ]
    },
    "numpy.angle": {
     "line number": [
      593
     ]
    },
    "numpy.arange": {
     "line number": [
      598,
      601
     ]
    },
    "numpy.exp": {
     "line number": [
      609
     ]
    },
    "numpy.log10": {
     "line number": [
      603,
      604
     ]
    },
    "numpy.logspace": {
     "line number": [
      603
     ]
    },
    "pycbc.filter.qtransform.qplane": {
     "line number": [
      584
     ]
    },
    "pycbc.filter.qtransform.qtiling": {
     "line number": [
      583
     ]
    },
    "scipy.interpolate.interp2d": {
     "line number": [
      592,
      593,
      595
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.save": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      756
     ]
    },
    "float": {
     "line number": [
      753,
      754
     ]
    },
    "numpy.save": {
     "line number": [
      738
     ]
    },
    "numpy.savetxt": {
     "line number": [
      747
     ]
    },
    "numpy.vstack": {
     "line number": [
      737,
      741,
      744
     ]
    },
    "os.path.splitext": {
     "line number": [
      735
     ]
    },
    "pycbc.types.timeseries.h5py": {
     "line number": [
      750
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.save_to_wav": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      432
     ]
    },
    "max": {
     "line number": [
      432
     ]
    },
    "numpy.int16": {
     "line number": [
      432
     ]
    },
    "scipy.io.wavfile.write": {
     "line number": [
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.start_time": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "lal.LIGOTimeGPS": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.time_slice": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      157,
      160
     ]
    },
    "int": {
     "line number": [
      162,
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.to_frequencyseries": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      782
     ]
    },
    "int": {
     "line number": [
      778,
      779
     ]
    },
    "len": {
     "line number": [
      781,
      790
     ]
    },
    "pycbc.fft.fft": {
     "line number": [
      795
     ]
    },
    "pycbc.types.array._nocomplex": {
     "line number": [
      758
     ]
    },
    "pycbc.types.array.complex_same_precision_as": {
     "line number": [
      793
     ]
    },
    "pycbc.types.array.zeros": {
     "line number": [
      788,
      792
     ]
    },
    "pycbc.types.frequencyseries.FrequencySeries": {
     "line number": [
      792
     ]
    },
    "pycbc.types.timeseries.TimeSeries": {
     "line number": [
      788
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.TimeSeries.whiten": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "int": {
     "line number": [
      527,
      539,
      539
     ]
    },
    "len": {
     "line number": [
      539
     ]
    },
    "pycbc.psd.interpolate": {
     "line number": [
      526
     ]
    },
    "pycbc.psd.inverse_spectrum_truncation": {
     "line number": [
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries._convert": {
  "data": {
   "shadows": "pycbc.types.array._convert"
  },
  "type": "import"
 },
 "pycbc.types.timeseries._lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.types.timeseries._nocomplex": {
  "data": {
   "shadows": "pycbc.types.array._nocomplex"
  },
  "type": "import"
 },
 "pycbc.types.timeseries._numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.types.timeseries._os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.complex_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.array.complex_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.detrend": {
  "data": {
   "shadows": "scipy.signal.detrend"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.fft": {
  "data": {
   "shadows": "pycbc.fft.fft"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.fir_zero_filter": {
  "data": {
   "shadows": "pycbc.filter.fir_zero_filter"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.highpass_fir": {
  "data": {
   "shadows": "pycbc.filter.highpass_fir"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.interp2d": {
  "data": {
   "shadows": "scipy.interpolate.interp2d"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.interpolate": {
  "data": {
   "shadows": "pycbc.psd.interpolate"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.inverse_spectrum_truncation": {
  "data": {
   "shadows": "pycbc.psd.inverse_spectrum_truncation"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.load_timeseries": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      934,
      946
     ]
    },
    "lal.LIGOTimeGPS": {
     "line number": [
      938,
      942
     ]
    },
    "len": {
     "line number": [
      937,
      941
     ]
    },
    "numpy.load": {
     "line number": [
      922
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      924
     ]
    },
    "os.path.splitext": {
     "line number": [
      920
     ]
    },
    "pycbc.types.timeseries.TimeSeries": {
     "line number": [
      929,
      939,
      943
     ]
    },
    "pycbc.types.timeseries.h5py": {
     "line number": [
      927
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.types.timeseries.lowpass_fir": {
  "data": {
   "shadows": "pycbc.filter.lowpass_fir"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.notch_fir": {
  "data": {
   "shadows": "pycbc.filter.notch_fir"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.qplane": {
  "data": {
   "shadows": "pycbc.filter.qtransform.qplane"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.qtiling": {
  "data": {
   "shadows": "pycbc.filter.qtransform.qtiling"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.welch": {
  "data": {
   "shadows": "pycbc.psd.welch"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.write_wav": {
  "data": {
   "shadows": "scipy.io.wavfile.write"
  },
  "type": "import"
 },
 "pycbc.types.timeseries.zeros": {
  "data": {
   "shadows": "pycbc.types.array.zeros"
  },
  "type": "import"
 },
 "pycbc.version": {
  "data": {},
  "type": "module"
 },
 "pycbc.version.date": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pycbc.version.git_author": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pycbc.version.git_branch": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pycbc.version.git_build_date": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pycbc.version.git_builder": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pycbc.version.git_committer": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pycbc.version.git_hash": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pycbc.version.git_status": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pycbc.version.git_tag": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pycbc.version.git_verbose_msg": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pycbc.version.last_release": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pycbc.version.release": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pycbc.version.version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pycbc.vetoes": {
  "data": {},
  "type": "module"
 },
 "pycbc.vetoes.autochisq": {
  "data": {},
  "type": "module"
 },
 "pycbc.vetoes.autochisq.Array": {
  "data": {
   "shadows": "pycbc.types.Array"
  },
  "type": "import"
 },
 "pycbc.vetoes.autochisq.BACKEND_PREFIX": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pycbc.vetoes.autochisq.SingleDetAutoChisq": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "object": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.vetoes.autochisq.SingleDetAutoChisq.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.autochisq.SingleDetAutoChisq.values": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "float": {
     "line number": [
      252
     ]
    },
    "id": {
     "line number": [
      231,
      231
     ]
    },
    "len": {
     "line number": [
      227
     ]
    },
    "numpy.array": {
     "line number": [
      269,
      270
     ]
    },
    "pycbc.filter.make_frequency_series": {
     "line number": [
      228
     ]
    },
    "pycbc.filter.matched_filter_core": {
     "line number": [
      236,
      243,
      261
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      241,
      254
     ]
    },
    "pycbc.vetoes.autochisq.autochisq_from_precomputed": {
     "line number": [
      271
     ]
    },
    "pycbc.vetoes.autochisq.logging": {
     "line number": [
      233,
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.autochisq.SingleDetSkyMaxAutoChisq": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "pycbc.vetoes.autochisq.SingleDetAutoChisq": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.vetoes.autochisq.SingleDetSkyMaxAutoChisq.__init__": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "pycbc.vetoes.autochisq.SingleDetSkyMaxAutoChisq": {
     "line number": [
      283
     ]
    },
    "super": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.autochisq.SingleDetSkyMaxAutoChisq.values": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.autochisq.autochisq_from_precomputed": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      99
     ]
    },
    "int": {
     "line number": [
      71
     ]
    },
    "len": {
     "line number": [
      68,
      70
     ]
    },
    "numpy.abs": {
     "line number": [
      77
     ]
    },
    "numpy.append": {
     "line number": [
      90
     ]
    },
    "numpy.arange": {
     "line number": [
      84,
      86,
      88,
      89
     ]
    },
    "numpy.zeros": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.autochisq.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.vetoes.autochisq.make_frequency_series": {
  "data": {
   "shadows": "pycbc.filter.make_frequency_series"
  },
  "type": "import"
 },
 "pycbc.vetoes.autochisq.matched_filter_core": {
  "data": {
   "shadows": "pycbc.filter.matched_filter_core"
  },
  "type": "import"
 },
 "pycbc.vetoes.autochisq.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.vetoes.bank_chisq": {
  "data": {},
  "type": "module"
 },
 "pycbc.vetoes.bank_chisq.Array": {
  "data": {
   "shadows": "pycbc.types.Array"
  },
  "type": "import"
 },
 "pycbc.vetoes.bank_chisq.FilterBank": {
  "data": {
   "shadows": "pycbc.waveform.FilterBank"
  },
  "type": "import"
 },
 "pycbc.vetoes.bank_chisq.SingleDetBankVeto": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "object": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.vetoes.bank_chisq.SingleDetBankVeto.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "len": {
     "line number": [
      191
     ]
    },
    "list": {
     "line number": [
      190
     ]
    },
    "pycbc.vetoes.bank_chisq.logging": {
     "line number": [
      183
     ]
    },
    "pycbc.waveform.FilterBank": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.bank_chisq.SingleDetBankVeto.cache_overlaps": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "id": {
     "line number": [
      207,
      207
     ]
    },
    "pycbc.vetoes.bank_chisq.logging": {
     "line number": [
      209
     ]
    },
    "pycbc.vetoes.bank_chisq.template_overlaps": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.bank_chisq.SingleDetBankVeto.cache_segment_snrs": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "id": {
     "line number": [
      199,
      199
     ]
    },
    "pycbc.vetoes.bank_chisq.logging": {
     "line number": [
      201
     ]
    },
    "pycbc.vetoes.bank_chisq.segment_snrs": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.bank_chisq.SingleDetBankVeto.values": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "len": {
     "line number": [
      230
     ]
    },
    "pycbc.vetoes.bank_chisq.bank_chisq_from_filters": {
     "line number": [
      228
     ]
    },
    "pycbc.vetoes.bank_chisq.logging": {
     "line number": [
      225
     ]
    },
    "pycbc.vetoes.bank_chisq.numpy": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.bank_chisq.SingleDetSkyMaxBankVeto": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "pycbc.vetoes.bank_chisq.SingleDetBankVeto": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.vetoes.bank_chisq.SingleDetSkyMaxBankVeto.__init__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "pycbc.vetoes.bank_chisq.SingleDetSkyMaxBankVeto": {
     "line number": [
      239
     ]
    },
    "super": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.bank_chisq.SingleDetSkyMaxBankVeto.values": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.bank_chisq.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.vetoes.bank_chisq.bank_chisq_from_filters": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      141
     ]
    },
    "len": {
     "line number": [
      136,
      139
     ]
    },
    "math.sqrt": {
     "line number": [
      149
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      129,
      154,
      155
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      162
     ]
    },
    "pycbc.types.real_same_precision_as": {
     "line number": [
      136
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      136
     ]
    },
    "range": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.bank_chisq.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.vetoes.bank_chisq.matched_filter_core": {
  "data": {
   "shadows": "pycbc.filter.matched_filter_core"
  },
  "type": "import"
 },
 "pycbc.vetoes.bank_chisq.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.vetoes.bank_chisq.overlap_cplx": {
  "data": {
   "shadows": "pycbc.filter.overlap_cplx"
  },
  "type": "import"
 },
 "pycbc.vetoes.bank_chisq.real_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.real_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.vetoes.bank_chisq.segment_snrs": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "pycbc.filter.matched_filter_core": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.bank_chisq.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pycbc.vetoes.bank_chisq.template_overlaps": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      85,
      95
     ]
    },
    "math.sqrt": {
     "line number": [
      83
     ]
    },
    "pycbc.filter.overlap_cplx": {
     "line number": [
      81
     ]
    },
    "pycbc.vetoes.bank_chisq.logging": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.bank_chisq.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq": {
  "data": {},
  "type": "module"
 },
 "pycbc.vetoes.chisq.BACKEND_PREFIX": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pycbc.vetoes.chisq.LimitedSizeDict": {
  "data": {
   "shadows": "pycbc.opt.LimitedSizeDict"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq.SingleDetPowerChisq": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "object": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.vetoes.chisq.SingleDetPowerChisq.__init__": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.SingleDetPowerChisq.cached_chisq_bins": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      328,
      331,
      338
     ]
    },
    "id": {
     "line number": [
      327,
      334,
      335
     ]
    },
    "int": {
     "line number": [
      336,
      339
     ]
    },
    "pycbc.opt.LimitedSizeDict": {
     "line number": [
      332
     ]
    },
    "pycbc.vetoes.chisq.power_chisq_bins": {
     "line number": [
      344
     ]
    },
    "pycbc.vetoes.chisq.power_chisq_bins_from_sigmasq_series": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.SingleDetPowerChisq.parse_option": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "eval": {
     "line number": [
      322
     ]
    },
    "pycbc.vetoes.chisq.math": {
     "line number": [
      320
     ]
    },
    "staticmethod": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.SingleDetPowerChisq.values": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      365
     ]
    },
    "len": {
     "line number": [
      363,
      370,
      378,
      388
     ]
    },
    "pycbc.vetoes.chisq.logging": {
     "line number": [
      367
     ]
    },
    "pycbc.vetoes.chisq.numpy": {
     "line number": [
      370,
      370,
      388
     ]
    },
    "pycbc.vetoes.chisq.power_chisq_at_points_from_precomputed": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.SingleDetSkyMaxPowerChisq": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "pycbc.vetoes.chisq.SingleDetPowerChisq": {
     "line number": [
      392
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.vetoes.chisq.SingleDetSkyMaxPowerChisq.__init__": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": {
    "pycbc.vetoes.chisq.SingleDetSkyMaxPowerChisq": {
     "line number": [
      398
     ]
    },
    "super": {
     "line number": [
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.SingleDetSkyMaxPowerChisq.calculate_chisq_bins": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      406
     ]
    },
    "int": {
     "line number": [
      405,
      408
     ]
    },
    "pycbc.vetoes.chisq.power_chisq_bins": {
     "line number": [
      413
     ]
    },
    "pycbc.vetoes.chisq.power_chisq_bins_from_sigmasq_series": {
     "line number": [
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.SingleDetSkyMaxPowerChisq.values": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      434
     ]
    },
    "enumerate": {
     "line number": [
      465
     ]
    },
    "len": {
     "line number": [
      432,
      439,
      450,
      450,
      451,
      454,
      454,
      455,
      488,
      504
     ]
    },
    "pycbc.types.complex_same_precision_as": {
     "line number": [
      452,
      456
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      451,
      455
     ]
    },
    "pycbc.vetoes.chisq.logging": {
     "line number": [
      436
     ]
    },
    "pycbc.vetoes.chisq.numpy": {
     "line number": [
      439,
      439,
      460,
      461,
      466,
      467,
      493,
      504
     ]
    },
    "pycbc.vetoes.chisq.power_chisq_at_points_from_precomputed": {
     "line number": [
      489
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq._chisq_l": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "pycbc.vetoes.chisq._q_l": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "pycbc.vetoes.chisq._qtilde_l": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "pycbc.vetoes.chisq.chisq_accum_bin": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      99
     ]
    },
    "pycbc.scheme.schemed": {
     "line number": [
      95
     ]
    },
    "pycbc.vetoes.chisq.BACKEND_PREFIX": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.complex_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.complex_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq.fastest_power_chisq_at_points": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      249
     ]
    },
    "pycbc.vetoes.chisq.power_chisq_at_points_from_precomputed": {
     "line number": [
      251
     ]
    },
    "pycbc.vetoes.chisq.power_chisq_from_precomputed": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.get_cutoff_indices": {
  "data": {
   "shadows": "pycbc.filter.get_cutoff_indices"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq.make_frequency_series": {
  "data": {
   "shadows": "pycbc.filter.make_frequency_series"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq.matched_filter_core": {
  "data": {
   "shadows": "pycbc.filter.matched_filter_core"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq.power_chisq": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "len": {
     "line number": [
      294
     ]
    },
    "pycbc.filter.make_frequency_series": {
     "line number": [
      289,
      290
     ]
    },
    "pycbc.filter.matched_filter_core": {
     "line number": [
      295
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      294
     ]
    },
    "pycbc.vetoes.chisq.power_chisq_bins": {
     "line number": [
      292
     ]
    },
    "pycbc.vetoes.chisq.power_chisq_from_precomputed": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.power_chisq_at_points_from_precomputed": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "len": {
     "line number": [
      134
     ]
    },
    "pycbc.vetoes.chisq.shift_sum": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.power_chisq_bins": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "len": {
     "line number": [
      92
     ]
    },
    "pycbc.filter.get_cutoff_indices": {
     "line number": [
      89
     ]
    },
    "pycbc.filter.sigmasq_series": {
     "line number": [
      87
     ]
    },
    "pycbc.vetoes.chisq.power_chisq_bins_from_sigmasq_series": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.power_chisq_bins_from_sigmasq_series": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pycbc.filter.sigmasq_series": {
     "line number": [
      56,
      58
     ]
    },
    "pycbc.vetoes.chisq.numpy": {
     "line number": [
      57,
      58,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.power_chisq_from_precomputed": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "int": {
     "line number": [
      195,
      196
     ]
    },
    "len": {
     "line number": [
      173,
      173,
      174,
      175,
      185,
      185,
      186,
      189,
      192
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      203,
      215
     ]
    },
    "pycbc.types.complex_same_precision_as": {
     "line number": [
      174,
      175
     ]
    },
    "pycbc.types.real_same_precision_as": {
     "line number": [
      186
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      174,
      175,
      186
     ]
    },
    "pycbc.vetoes.chisq._chisq_l": {
     "line number": [
      185,
      185,
      187,
      189
     ]
    },
    "pycbc.vetoes.chisq._q_l": {
     "line number": [
      173,
      173,
      176,
      179
     ]
    },
    "pycbc.vetoes.chisq._qtilde_l": {
     "line number": [
      177,
      180
     ]
    },
    "pycbc.vetoes.chisq.chisq_accum_bin": {
     "line number": [
      208,
      210
     ]
    },
    "range": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.pycbc.fft": {
  "data": {
   "shadows": "pycbc.fft"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq.pycbc.pnutils": {
  "data": {
   "shadows": "pycbc.pnutils"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq.pycbc.scheme": {
  "data": {
   "shadows": "pycbc.scheme"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq.real_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.real_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq.schemed": {
  "data": {
   "shadows": "pycbc.scheme.schemed"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq.shift_sum": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      107
     ]
    },
    "pycbc.scheme.schemed": {
     "line number": [
      101
     ]
    },
    "pycbc.vetoes.chisq.BACKEND_PREFIX": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq.sigmasq_series": {
  "data": {
   "shadows": "pycbc.filter.sigmasq_series"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq_cuda": {
  "data": {
   "symbols_in_volume": {
    "mako.template.Template": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.vetoes.chisq_cuda.ElementwiseKernel": {
  "data": {
   "shadows": "pycuda.elementwise.ElementwiseKernel"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq_cuda.SourceModule": {
  "data": {
   "shadows": "pycuda.compiler.SourceModule"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq_cuda.Template": {
  "data": {
   "shadows": "mako.template.Template"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq_cuda._pchisq_cache": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "pycbc.vetoes.chisq_cuda.chisq_accum_bin": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "krnl": {
     "line number": [
      43
     ]
    },
    "pycbc.vetoes.chisq_cuda.get_accum_diff_sq_kernel": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq_cuda.chisqkernel": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pycbc.vetoes.chisq_cuda.context_dependent_memoize": {
  "data": {
   "shadows": "pycuda.tools.context_dependent_memoize"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq_cuda.dtype_to_ctype": {
  "data": {
   "shadows": "pycuda.tools.dtype_to_ctype"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq_cuda.get_accum_diff_sq_kernel": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "pycuda.elementwise.ElementwiseKernel": {
     "line number": [
      33
     ]
    },
    "pycuda.tools.context_dependent_memoize": {
     "line number": [
      31
     ]
    },
    "pycuda.tools.dtype_to_ctype": {
     "line number": [
      35,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq_cuda.get_cached_bin_layout": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "len": {
     "line number": [
      143,
      154
     ]
    },
    "list": {
     "line number": [
      151
     ]
    },
    "pycbc.vetoes.chisq_cuda.numpy": {
     "line number": [
      151,
      155,
      155,
      156,
      156,
      157,
      157
     ]
    },
    "range": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq_cuda.get_pchisq_fn": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "pycbc.vetoes.chisq_cuda._pchisq_cache": {
     "line number": [
      130,
      138,
      139
     ]
    },
    "pycbc.vetoes.chisq_cuda.chisqkernel": {
     "line number": [
      132
     ]
    },
    "pycuda.compiler.SourceModule": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq_cuda.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq_cuda.pycuda.driver": {
  "data": {
   "shadows": "pycuda.driver"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq_cuda.pycuda.gpuarray": {
  "data": {
   "shadows": "pycuda.gpuarray"
  },
  "type": "import"
 },
 "pycbc.vetoes.chisq_cuda.shift_sum": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "len": {
     "line number": [
      183,
      184,
      185,
      186,
      187,
      189
     ]
    },
    "pycbc.vetoes.chisq_cuda.get_cached_bin_layout": {
     "line number": [
      182
     ]
    },
    "pycbc.vetoes.chisq_cuda.numpy": {
     "line number": [
      184,
      185,
      186,
      188,
      188
     ]
    },
    "pycbc.vetoes.chisq_cuda.shift_sum_points": {
     "line number": [
      195,
      197,
      199,
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.chisq_cuda.shift_sum_points": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "pycbc.vetoes.chisq_cuda.get_pchisq_fn": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.sgchisq": {
  "data": {},
  "type": "module"
 },
 "pycbc.vetoes.sgchisq.SingleDetPowerChisq": {
  "data": {
   "shadows": "pycbc.vetoes.chisq.SingleDetPowerChisq"
  },
  "type": "import"
 },
 "pycbc.vetoes.sgchisq.SingleDetSGChisq": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "pycbc.vetoes.chisq.SingleDetPowerChisq": {
     "line number": [
      13
     ]
    },
    "pycbc.vetoes.sgchisq.numpy": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.vetoes.sgchisq.SingleDetSGChisq.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.sgchisq.SingleDetSGChisq.from_cli": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      65
     ]
    },
    "cls": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.sgchisq.SingleDetSGChisq.insert_option_group": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "float": {
     "line number": [
      56
     ]
    },
    "staticmethod": {
     "line number": [
      53
     ]
    },
    "str": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.sgchisq.SingleDetSGChisq.values": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      113,
      171
     ]
    },
    "enumerate": {
     "line number": [
      111
     ]
    },
    "float": {
     "line number": [
      121,
      148,
      148
     ]
    },
    "int": {
     "line number": [
      120,
      158,
      159
     ]
    },
    "len": {
     "line number": [
      103,
      110,
      118,
      141,
      156,
      163
     ]
    },
    "max": {
     "line number": [
      150
     ]
    },
    "pycbc.events.ranking.newsnr": {
     "line number": [
      114
     ]
    },
    "pycbc.filter.sigma": {
     "line number": [
      165
     ]
    },
    "pycbc.vetoes.sgchisq.numpy": {
     "line number": [
      103,
      110,
      156,
      164
     ]
    },
    "pycbc.waveform.sinegauss.fd_sine_gaussian": {
     "line number": [
      162
     ]
    },
    "pycbc.waveform.utils.apply_fseries_time_shift": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.vetoes.sgchisq.apply_fseries_time_shift": {
  "data": {
   "shadows": "pycbc.waveform.utils.apply_fseries_time_shift"
  },
  "type": "import"
 },
 "pycbc.vetoes.sgchisq.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.vetoes.sgchisq.ranking": {
  "data": {
   "shadows": "pycbc.events.ranking"
  },
  "type": "import"
 },
 "pycbc.vetoes.sgchisq.sigma": {
  "data": {
   "shadows": "pycbc.filter.sigma"
  },
  "type": "import"
 },
 "pycbc.vetoes.sgchisq.sinegauss": {
  "data": {
   "shadows": "pycbc.waveform.sinegauss"
  },
  "type": "import"
 },
 "pycbc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pycbc.waveform": {
  "data": {},
  "type": "module"
 },
 "pycbc.waveform.SpinTaylorF2": {
  "data": {
   "symbols_in_volume": {
    "pycbc.libutils.pkg_config_header_strings": {
     "line number": [
      259
     ]
    },
    "pycbc.waveform.SpinTaylorF2.preamble": {
     "line number": [
      259
     ]
    },
    "pycbc.waveform.SpinTaylorF2.spintaylorf2_text": {
     "line number": [
      258
     ]
    },
    "pycuda.elementwise.ElementwiseKernel": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.waveform.SpinTaylorF2.ElementwiseKernel": {
  "data": {
   "shadows": "pycuda.elementwise.ElementwiseKernel"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.acos": {
  "data": {
   "shadows": "math.acos"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.atan2": {
  "data": {
   "shadows": "math.atan2"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.ceilpow2": {
  "data": {
   "shadows": "pycbc.waveform.utils.ceilpow2"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.complex128": {
  "data": {
   "shadows": "numpy.complex128"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.double": {
  "data": {
   "shadows": "numpy.double"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.pkg_config_header_strings": {
  "data": {
   "shadows": "pycbc.libutils.pkg_config_header_strings"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.pow": {
  "data": {
   "shadows": "math.pow"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.preamble": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pycbc.waveform.SpinTaylorF2.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.spintaylorf2": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "int": {
     "line number": [
      274,
      275,
      291,
      292,
      293
     ]
    },
    "math.acos": {
     "line number": [
      303
     ]
    },
    "math.atan2": {
     "line number": [
      304,
      308
     ]
    },
    "math.cos": {
     "line number": [
      279,
      306,
      306,
      306,
      307,
      347,
      351,
      352,
      356
     ]
    },
    "math.log": {
     "line number": [
      332,
      333,
      334
     ]
    },
    "math.pow": {
     "line number": [
      297
     ]
    },
    "math.sin": {
     "line number": [
      277,
      306,
      306,
      307,
      348,
      349,
      350,
      353,
      355
     ]
    },
    "numpy.complex128": {
     "line number": [
      400,
      401
     ]
    },
    "numpy.double": {
     "line number": [
      265,
      266,
      267,
      268,
      269,
      270,
      271,
      272,
      273,
      276
     ]
    },
    "numpy.sqrt": {
     "line number": [
      288,
      298,
      303,
      331,
      398
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      400,
      401
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      400,
      401
     ]
    },
    "pycbc.waveform.SpinTaylorF2.lal": {
     "line number": [
      285,
      286,
      310,
      325,
      327,
      363,
      366,
      367,
      368,
      368,
      369,
      370,
      371,
      375,
      380,
      382,
      383,
      383,
      384,
      385,
      385,
      389,
      394,
      394,
      397,
      398,
      398,
      398
     ]
    },
    "pycbc.waveform.SpinTaylorF2.numpy": {
     "line number": [
      293
     ]
    },
    "pycbc.waveform.SpinTaylorF2.spintaylorf2_kernel": {
     "line number": [
      402
     ]
    },
    "pycbc.waveform.utils.ceilpow2": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.SpinTaylorF2.spintaylorf2_kernel": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "pycbc.waveform.SpinTaylorF2.spintaylorf2_text": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pycbc.waveform.SpinTaylorF2.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "pycbc.waveform.SpinTaylorF2.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.waveform.bank": {
  "data": {
   "symbols_in_volume": {
    "glue.ligolw.lsctables.use_in": {
     "line number": [
      94
     ]
    },
    "pycbc.waveform.bank.LIGOLWContentHandler": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.waveform.bank.DYN_RANGE_FAC": {
  "data": {
   "shadows": "pycbc.DYN_RANGE_FAC"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.FilterBank": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": {
    "pycbc.waveform.bank.TemplateBank": {
     "line number": [
      610
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.bank.FilterBank.__getitem__": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      754,
      756
     ]
    },
    "int": {
     "line number": [
      764
     ]
    },
    "pycbc.DYN_RANGE_FAC": {
     "line number": [
      739
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      713
     ]
    },
    "pycbc.waveform.bank.find_variable_start_frequency": {
     "line number": [
      726
     ]
    },
    "pycbc.waveform.bank.logging": {
     "line number": [
      732
     ]
    },
    "pycbc.waveform.bank.sigma_cached": {
     "line number": [
      772
     ]
    },
    "pycbc.waveform.bank.types": {
     "line number": [
      772
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.FilterBank.__init__": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "pycbc.waveform.bank.FilterBank": {
     "line number": [
      630
     ]
    },
    "super": {
     "line number": [
      630
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.FilterBank.generate_with_delta_f_and_max_freq": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": {
    "int": {
     "line number": [
      696
     ]
    },
    "numpy.complex64": {
     "line number": [
      697
     ]
    },
    "pycbc.DYN_RANGE_FAC": {
     "line number": [
      707
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      697
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.FilterBank.get_decompressed_waveform": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      674
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      666
     ]
    },
    "pycbc.waveform.bank.logging": {
     "line number": [
      658
     ]
    },
    "pycbc.waveform.get_waveform_filter_length_in_time": {
     "line number": [
      677
     ]
    },
    "pycbc.waveform.waveform.props": {
     "line number": [
      670
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.FilterBankSkyMax": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": {
    "pycbc.waveform.bank.TemplateBank": {
     "line number": [
      790
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.bank.FilterBankSkyMax.__getitem__": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      857
     ]
    },
    "int": {
     "line number": [
      868,
      869
     ]
    },
    "pycbc.DYN_RANGE_FAC": {
     "line number": [
      849
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      814,
      818
     ]
    },
    "pycbc.waveform.bank.find_variable_start_frequency": {
     "line number": [
      831
     ]
    },
    "pycbc.waveform.bank.logging": {
     "line number": [
      838
     ]
    },
    "pycbc.waveform.bank.sigma_cached": {
     "line number": [
      876,
      878
     ]
    },
    "pycbc.waveform.bank.types": {
     "line number": [
      876,
      878
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.FilterBankSkyMax.__init__": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": {
    "pycbc.waveform.bank.FilterBankSkyMax": {
     "line number": [
      806
     ]
    },
    "super": {
     "line number": [
      806
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.LIGOLWContentHandler": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "glue.ligolw.ligolw.LIGOLWContentHandler": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.bank.LimitedSizeDict": {
  "data": {
   "shadows": "pycbc.opt.LimitedSizeDict"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.LiveFilterBank": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": {
    "pycbc.waveform.bank.TemplateBank": {
     "line number": [
      478
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.bank.LiveFilterBank.__getitem__": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      538
     ]
    },
    "slice": {
     "line number": [
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.LiveFilterBank.__init__": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      494
     ]
    },
    "hash": {
     "line number": [
      495
     ]
    },
    "pycbc.waveform.bank.LiveFilterBank": {
     "line number": [
      490
     ]
    },
    "super": {
     "line number": [
      490
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.LiveFilterBank.get_template": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": {
    "float": {
     "line number": [
      563
     ]
    },
    "hasattr": {
     "line number": [
      583,
      585
     ]
    },
    "hash": {
     "line number": [
      603
     ]
    },
    "int": {
     "line number": [
      561,
      593
     ]
    },
    "numpy.complex64": {
     "line number": [
      574,
      590
     ]
    },
    "pycbc.DYN_RANGE_FAC": {
     "line number": [
      572
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      574
     ]
    },
    "pycbc.waveform.bank.logging": {
     "line number": [
      568
     ]
    },
    "pycbc.waveform.bank.sigma_cached": {
     "line number": [
      601
     ]
    },
    "pycbc.waveform.bank.types": {
     "line number": [
      601
     ]
    },
    "pycbc.waveform.waveform.props": {
     "line number": [
      556
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.LiveFilterBank.getslice": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": {
    "copy.copy": {
     "line number": [
      518
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.LiveFilterBank.id_from_hash": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "pycbc.waveform.bank.LiveFilterBank.round_up": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "numpy.ceil": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.TemplateBank": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "object": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.bank.TemplateBank.__init__": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      278
     ]
    },
    "KeyError": {
     "line number": [
      266
     ]
    },
    "ValueError": {
     "line number": [
      303
     ]
    },
    "glue.ligolw.lsctables.SnglInspiralTable.tableName": {
     "line number": [
      248
     ]
    },
    "glue.ligolw.table.get_table": {
     "line number": [
      247
     ]
    },
    "glue.ligolw.utils.load_filename": {
     "line number": [
      245
     ]
    },
    "list": {
     "line number": [
      253,
      265,
      268,
      286,
      288
     ]
    },
    "pycbc.waveform.bank.LIGOLWContentHandler": {
     "line number": [
      246
     ]
    },
    "pycbc.waveform.bank.h5py": {
     "line number": [
      262
     ]
    },
    "pycbc.waveform.bank.logging": {
     "line number": [
      269
     ]
    },
    "set": {
     "line number": [
      288,
      289,
      289
     ]
    },
    "tuple": {
     "line number": [
      254,
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.TemplateBank.__len__": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "len": {
     "line number": [
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.TemplateBank.approximant": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      418
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.TemplateBank.end_frequency": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "pycbc.waveform.bank.TemplateBank.ensure_hash": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "hash": {
     "line number": [
      338
     ]
    },
    "numpy.array": {
     "line number": [
      338
     ]
    },
    "zip": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.TemplateBank.ensure_standard_filter_columns": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      476
     ]
    },
    "hasattr": {
     "line number": [
      463,
      469
     ]
    },
    "len": {
     "line number": [
      464,
      470
     ]
    },
    "min": {
     "line number": [
      474
     ]
    },
    "numpy.float32": {
     "line number": [
      465,
      470
     ]
    },
    "numpy.zeros": {
     "line number": [
      464,
      470
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.TemplateBank.parameters": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "property": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.TemplateBank.parse_approximant": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "pycbc.waveform.bank.parse_approximant_arg": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.TemplateBank.template_thinning": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      444
     ]
    },
    "numpy.concatenate": {
     "line number": [
      446
     ]
    },
    "numpy.unique": {
     "line number": [
      448
     ]
    },
    "numpy.where": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.TemplateBank.write_to_hdf": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      377
     ]
    },
    "ValueError": {
     "line number": [
      375
     ]
    },
    "isinstance": {
     "line number": [
      381
     ]
    },
    "list": {
     "line number": [
      381
     ]
    },
    "pycbc.waveform.bank.h5py": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.add_approximant_arg": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "help": {
     "line number": [
      135,
      136,
      158
     ]
    },
    "str": {
     "line number": [
      136,
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.boolargs_from_apprxstr": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      117
     ]
    },
    "list": {
     "line number": [
      117
     ]
    },
    "tuple": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.find_variable_start_frequency": {
  "data": {
   "lineno": 776
  },
  "type": "function"
 },
 "pycbc.waveform.bank.get_cutoff_indices": {
  "data": {
   "shadows": "pycbc.filter.matchedfilter.get_cutoff_indices"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.get_waveform_filter_length_in_time": {
  "data": {
   "shadows": "pycbc.waveform.get_waveform_filter_length_in_time"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.ligolw": {
  "data": {
   "shadows": "glue.ligolw.ligolw"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.ligolw_utils": {
  "data": {
   "shadows": "glue.ligolw.utils"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.lsctables": {
  "data": {
   "shadows": "glue.ligolw.lsctables"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.parse_approximant_arg": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "pycbc.waveform.bank.boolargs_from_apprxstr": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.props": {
  "data": {
   "shadows": "pycbc.waveform.waveform.props"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.pycbc.io": {
  "data": {
   "shadows": "pycbc.io"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.pycbc.pnutils": {
  "data": {
   "shadows": "pycbc.pnutils"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.pycbc.waveform": {
  "data": {
   "shadows": "pycbc.waveform"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.pycbc.waveform.compress": {
  "data": {
   "shadows": "pycbc.waveform.compress"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.sigma_cached": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      45,
      50,
      57,
      64,
      76,
      85
     ]
    },
    "id": {
     "line number": [
      49,
      53,
      54
     ]
    },
    "len": {
     "line number": [
      62,
      78
     ]
    },
    "pycbc.DYN_RANGE_FAC": {
     "line number": [
      69
     ]
    },
    "pycbc.filter.matchedfilter.get_cutoff_indices": {
     "line number": [
      79
     ]
    },
    "pycbc.opt.LimitedSizeDict": {
     "line number": [
      47
     ]
    },
    "slice": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.bank.table": {
  "data": {
   "shadows": "glue.ligolw.table"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pycbc.waveform.bank.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.waveform.compress": {
  "data": {
   "symbols_in_volume": {
    "pycbc.waveform.compress.mchirp_compression": {
     "line number": [
      154
     ]
    },
    "pycbc.waveform.compress.numpy": {
     "line number": [
      312,
      313,
      317,
      318
     ]
    },
    "pycbc.waveform.compress.spa_compression": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.waveform.compress.CompressedWaveform": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "object": {
     "line number": [
      465
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.compress.CompressedWaveform.__init__": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      532
     ]
    },
    "getattr": {
     "line number": [
      530,
      531
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.CompressedWaveform._get": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      548
     ]
    },
    "ValueError": {
     "line number": [
      551
     ]
    },
    "getattr": {
     "line number": [
      544
     ]
    },
    "isinstance": {
     "line number": [
      545
     ]
    },
    "pycbc.waveform.compress.h5py": {
     "line number": [
      545,
      554
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.CompressedWaveform.amplitude": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": {
    "property": {
     "line number": [
      561
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.CompressedWaveform.clear_cache": {
  "data": {
   "lineno": 606
  },
  "type": "function"
 },
 "pycbc.waveform.compress.CompressedWaveform.decompress": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": {
    "pycbc.waveform.compress.fd_decompress": {
     "line number": [
      640
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.CompressedWaveform.from_hdf": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      687
     ]
    },
    "cls": {
     "line number": [
      731
     ]
    },
    "str": {
     "line number": [
      722
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.CompressedWaveform.phase": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": {
    "property": {
     "line number": [
      575
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.CompressedWaveform.sample_points": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": {
    "property": {
     "line number": [
      590
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.CompressedWaveform.write_to_hdf": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      676
     ]
    },
    "pycbc.waveform.compress._real_dtypes": {
     "line number": [
      677
     ]
    },
    "str": {
     "line number": [
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.waveform.compress._complex_dtypes": {
  "data": {
   "lineno": 311
  },
  "type": "constant"
 },
 "pycbc.waveform.compress._precision_map": {
  "data": {
   "lineno": 304
  },
  "type": "constant"
 },
 "pycbc.waveform.compress._real_dtypes": {
  "data": {
   "lineno": 316
  },
  "type": "constant"
 },
 "pycbc.waveform.compress._vecdiff": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      159
     ]
    },
    "pycbc.filter.overlap_cplx": {
     "line number": [
      159,
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.waveform.compress.complex_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.complex_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.waveform.compress.compress_waveform": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      267
     ]
    },
    "ValueError": {
     "line number": [
      268
     ]
    },
    "int": {
     "line number": [
      227,
      258,
      270,
      271
     ]
    },
    "len": {
     "line number": [
      240,
      240,
      297,
      297
     ]
    },
    "min": {
     "line number": [
      240
     ]
    },
    "pycbc.filter.overlap": {
     "line number": [
      243,
      293
     ]
    },
    "pycbc.types.real_same_precision_as": {
     "line number": [
      277
     ]
    },
    "pycbc.waveform.compress.CompressedWaveform": {
     "line number": [
      299
     ]
    },
    "pycbc.waveform.compress.fd_decompress": {
     "line number": [
      237,
      282
     ]
    },
    "pycbc.waveform.compress.logging": {
     "line number": [
      296
     ]
    },
    "pycbc.waveform.compress.numpy": {
     "line number": [
      271,
      286
     ]
    },
    "pycbc.waveform.compress.vecdiff": {
     "line number": [
      247,
      289
     ]
    },
    "pycbc.waveform.utils.amplitude_from_frequencyseries": {
     "line number": [
      228
     ]
    },
    "pycbc.waveform.utils.phase_from_frequencyseries": {
     "line number": [
      229
     ]
    },
    "round": {
     "line number": [
      258,
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.compression_algorithms": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "pycbc.waveform.compress.fd_decompress": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      408,
      413,
      421,
      430,
      432,
      437
     ]
    },
    "amp_interp": {
     "line number": [
      459
     ]
    },
    "int": {
     "line number": [
      414,
      433,
      435
     ]
    },
    "len": {
     "line number": [
      423
     ]
    },
    "phase_interp": {
     "line number": [
      460
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      415
     ]
    },
    "pycbc.waveform.compress._complex_dtypes": {
     "line number": [
      416
     ]
    },
    "pycbc.waveform.compress._precision_map": {
     "line number": [
      405,
      406,
      407
     ]
    },
    "pycbc.waveform.compress.inline_linear_interp": {
     "line number": [
      441
     ]
    },
    "pycbc.waveform.compress.numpy": {
     "line number": [
      414,
      415,
      433,
      435,
      445,
      446,
      447,
      461,
      461
     ]
    },
    "scipy.interpolate.interp1d": {
     "line number": [
      449,
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.filter": {
  "data": {
   "shadows": "pycbc.filter"
  },
  "type": "import"
 },
 "pycbc.waveform.compress.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pycbc.waveform.compress.inline_linear_interp": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "pycbc.scheme.schemed": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "pycbc.waveform.compress.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.waveform.compress.lalsimulation": {
  "data": {
   "shadows": "lalsimulation"
  },
  "type": "import"
 },
 "pycbc.waveform.compress.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.waveform.compress.mchirp_compression": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "int": {
     "line number": [
      100
     ]
    },
    "pycbc.waveform.compress.numpy": {
     "line number": [
      106
     ]
    },
    "pycbc.waveform.compress.rough_time_estimate": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.waveform.compress.pnutils": {
  "data": {
   "shadows": "pycbc.pnutils"
  },
  "type": "import"
 },
 "pycbc.waveform.compress.real_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.real_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.waveform.compress.rough_time_estimate": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "pycbc.waveform.compress.lal": {
     "line number": [
      63
     ]
    },
    "pycbc.waveform.compress.numpy": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.schemed": {
  "data": {
   "shadows": "pycbc.scheme.schemed"
  },
  "type": "import"
 },
 "pycbc.waveform.compress.spa_compression": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      138
     ]
    },
    "int": {
     "line number": [
      136,
      137,
      144
     ]
    },
    "pycbc.waveform.compress.numpy": {
     "line number": [
      146,
      151
     ]
    },
    "pycbc.waveform.utils.time_from_frequencyseries": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.utils": {
  "data": {
   "shadows": "pycbc.waveform.utils"
  },
  "type": "import"
 },
 "pycbc.waveform.compress.vecdiff": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      175
     ]
    },
    "enumerate": {
     "line number": [
      173
     ]
    },
    "float": {
     "line number": [
      172
     ]
    },
    "pycbc.waveform.compress._vecdiff": {
     "line number": [
      175
     ]
    },
    "pycbc.waveform.compress.numpy": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.compress.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.waveform.decompress_cpu": {
  "data": {
   "symbols_in_volume": {
    "pycbc.waveform.decompress_cpu._linear_decompress_code": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.waveform.decompress_cpu.WEAVE_FLAGS": {
  "data": {
   "shadows": "pycbc.WEAVE_FLAGS"
  },
  "type": "import"
 },
 "pycbc.waveform.decompress_cpu._linear_decompress_code": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pycbc.waveform.decompress_cpu._linear_decompress_code32": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "pycbc.waveform.decompress_cpu.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.waveform.decompress_cpu.inline": {
  "data": {
   "shadows": "pycbc.weave.inline"
  },
  "type": "import"
 },
 "pycbc.waveform.decompress_cpu.inline_linear_interp": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "float": {
     "line number": [
      178
     ]
    },
    "len": {
     "line number": [
      175,
      177
     ]
    },
    "pycbc.WEAVE_FLAGS": {
     "line number": [
      181
     ]
    },
    "pycbc.opt.omp_flags": {
     "line number": [
      181
     ]
    },
    "pycbc.opt.omp_libs": {
     "line number": [
      182
     ]
    },
    "pycbc.waveform.decompress_cpu._linear_decompress_code": {
     "line number": [
      171
     ]
    },
    "pycbc.waveform.decompress_cpu._linear_decompress_code32": {
     "line number": [
      169
     ]
    },
    "pycbc.waveform.decompress_cpu.numpy": {
     "line number": [
      172,
      173,
      174,
      176
     ]
    },
    "pycbc.weave.inline": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.decompress_cpu.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.waveform.decompress_cpu.omp_flags": {
  "data": {
   "shadows": "pycbc.opt.omp_flags"
  },
  "type": "import"
 },
 "pycbc.waveform.decompress_cpu.omp_libs": {
  "data": {
   "shadows": "pycbc.opt.omp_libs"
  },
  "type": "import"
 },
 "pycbc.waveform.decompress_cuda": {
  "data": {},
  "type": "module"
 },
 "pycbc.waveform.decompress_cuda.CUDALinearInterpolate": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "object": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.decompress_cuda.CUDALinearInterpolate.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "len": {
     "line number": [
      280
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      289,
      290
     ]
    },
    "pycbc.waveform.decompress_cuda.get_dckernel": {
     "line number": [
      281
     ]
    },
    "pycbc.waveform.decompress_cuda.numpy": {
     "line number": [
      279,
      280,
      289,
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.decompress_cuda.CUDALinearInterpolate.interpolate": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "fn1": {
     "line number": [
      304
     ]
    },
    "fn2": {
     "line number": [
      305
     ]
    },
    "len": {
     "line number": [
      294
     ]
    },
    "pycbc.waveform.decompress_cuda.numpy": {
     "line number": [
      293,
      294,
      295
     ]
    },
    "pycuda.gpuarray.to_gpu": {
     "line number": [
      296,
      298,
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.decompress_cuda.SourceModule": {
  "data": {
   "shadows": "pycuda.compiler.SourceModule"
  },
  "type": "import"
 },
 "pycbc.waveform.decompress_cuda.dckernel_cache": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "pycbc.waveform.decompress_cuda.get_dckernel": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      264
     ]
    },
    "ValueError": {
     "line number": [
      260
     ]
    },
    "int": {
     "line number": [
      257
     ]
    },
    "pycbc.waveform.decompress_cuda.dckernel_cache": {
     "line number": [
      263,
      273,
      274
     ]
    },
    "pycbc.waveform.decompress_cuda.kernel_sources": {
     "line number": [
      265
     ]
    },
    "pycbc.waveform.decompress_cuda.numpy": {
     "line number": [
      257
     ]
    },
    "pycuda.compiler.SourceModule": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.decompress_cuda.gpuarray": {
  "data": {
   "shadows": "pycuda.gpuarray"
  },
  "type": "import"
 },
 "pycbc.waveform.decompress_cuda.inline_linear_interp": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      313
     ]
    },
    "fn1": {
     "line number": [
      318,
      325,
      331
     ]
    },
    "fn1.prepared_call": {
     "line number": [
      325
     ]
    },
    "fn2": {
     "line number": [
      318,
      326,
      332
     ]
    },
    "fn2.prepared_call": {
     "line number": [
      326
     ]
    },
    "len": {
     "line number": [
      315,
      317
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      329,
      330
     ]
    },
    "pycbc.waveform.decompress_cuda.get_dckernel": {
     "line number": [
      318
     ]
    },
    "pycbc.waveform.decompress_cuda.numpy": {
     "line number": [
      314,
      315,
      316,
      317,
      327,
      329,
      330
     ]
    },
    "pycuda.gpuarray.to_gpu": {
     "line number": [
      319,
      321,
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.decompress_cuda.kernel_sources": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pycbc.waveform.decompress_cuda.mako.template": {
  "data": {
   "shadows": "mako.template"
  },
  "type": "import"
 },
 "pycbc.waveform.decompress_cuda.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.waveform.decompress_cuda.pycbc.scheme": {
  "data": {
   "shadows": "pycbc.scheme"
  },
  "type": "import"
 },
 "pycbc.waveform.decompress_cuda.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.waveform.generator": {
  "data": {},
  "type": "module"
 },
 "pycbc.waveform.generator.BaseCBCGenerator": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "pycbc.waveform.generator.BaseGenerator": {
     "line number": [
      140
     ]
    },
    "pycbc.waveform.parameters.fd_waveform_params": {
     "line number": [
      151
     ]
    },
    "pycbc.waveform.parameters.td_waveform_params": {
     "line number": [
      150
     ]
    },
    "set": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.generator.BaseCBCGenerator.__init__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "len": {
     "line number": [
      173
     ]
    },
    "list": {
     "line number": [
      158,
      159,
      164
     ]
    },
    "pycbc.transforms.get_common_cbc_transforms": {
     "line number": [
      163
     ]
    },
    "pycbc.waveform.generator.BaseCBCGenerator": {
     "line number": [
      154
     ]
    },
    "pycbc.waveform.generator.logging": {
     "line number": [
      174
     ]
    },
    "set": {
     "line number": [
      158,
      168
     ]
    },
    "super": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.BaseGenerator": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "object": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.generator.BaseGenerator.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.BaseGenerator._add_pregenerate": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "pycbc.waveform.generator.BaseGenerator._gdecorator": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "pycbc.waveform.generator.BaseGenerator._gdecorator.dostuff": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "func": {
     "line number": [
      128
     ]
    },
    "generate_func": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.BaseGenerator._generate_from_current": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "pycbc.waveform.generator.BaseGenerator._postgenerate": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "pycbc.waveform.generator.BaseGenerator.generate": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pycbc.waveform.generator.BaseGenerator.static_args": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "property": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.Detector": {
  "data": {
   "shadows": "pycbc.detector.Detector"
  },
  "type": "import"
 },
 "pycbc.waveform.generator.FDomainCBCGenerator": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "pycbc.waveform.generator.BaseCBCGenerator": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.generator.FDomainCBCGenerator.__init__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "pycbc.waveform.generator.FDomainCBCGenerator": {
     "line number": [
      228
     ]
    },
    "super": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.FDomainDetFrameGenerator": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "object": {
     "line number": [
      392
     ]
    },
    "set": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.generator.FDomainDetFrameGenerator.__init__": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      506
     ]
    },
    "any": {
     "line number": [
      505
     ]
    },
    "list": {
     "line number": [
      492
     ]
    },
    "pycbc.detector.Detector": {
     "line number": [
      502
     ]
    },
    "rFrameGeneratorClass": {
     "line number": [
      494
     ]
    },
    "set": {
     "line number": [
      486,
      492
     ]
    },
    "sorted": {
     "line number": [
      512
     ]
    },
    "tuple": {
     "line number": [
      490
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.FDomainDetFrameGenerator.epoch": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "lal.LIGOTimeGPS": {
     "line number": [
      526
     ]
    },
    "property": {
     "line number": [
      524
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.FDomainDetFrameGenerator.generate": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      543
     ]
    },
    "isinstance": {
     "line number": [
      536
     ]
    },
    "len": {
     "line number": [
      575
     ]
    },
    "pycbc.strain.apply_gates_to_fd": {
     "line number": [
      576
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      536
     ]
    },
    "pycbc.waveform.utils.apply_fd_time_shift": {
     "line number": [
      560,
      569
     ]
    },
    "pycbc.waveform.utils.ceilpow2": {
     "line number": [
      575
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.FDomainDetFrameGenerator.set_epoch": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "float": {
     "line number": [
      517
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.FDomainDetFrameGenerator.static_args": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "property": {
     "line number": [
      519
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.FDomainFreqTauRingdownGenerator": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "pycbc.waveform.generator.BaseGenerator": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.generator.FDomainFreqTauRingdownGenerator.__init__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "pycbc.waveform.generator.FDomainFreqTauRingdownGenerator": {
     "line number": [
      335
     ]
    },
    "super": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.FDomainMassSpinRingdownGenerator": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "pycbc.waveform.generator.BaseGenerator": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.generator.FDomainMassSpinRingdownGenerator.__init__": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "pycbc.waveform.generator.FDomainMassSpinRingdownGenerator": {
     "line number": [
      308
     ]
    },
    "super": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.TDomainCBCGenerator": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "pycbc.waveform.generator.BaseCBCGenerator": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.generator.TDomainCBCGenerator.__init__": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "pycbc.waveform.generator.TDomainCBCGenerator": {
     "line number": [
      269
     ]
    },
    "super": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.TDomainCBCGenerator._postgenerate": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      279
     ]
    },
    "pycbc.waveform.utils.taper_timeseries": {
     "line number": [
      277,
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.TDomainFreqTauRingdownGenerator": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": {
    "pycbc.waveform.generator.BaseGenerator": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.generator.TDomainFreqTauRingdownGenerator.__init__": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "pycbc.waveform.generator.TDomainFreqTauRingdownGenerator": {
     "line number": [
      389
     ]
    },
    "super": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.TDomainMassSpinRingdownGenerator": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "pycbc.waveform.generator.BaseGenerator": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.generator.TDomainMassSpinRingdownGenerator.__init__": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "pycbc.waveform.generator.TDomainMassSpinRingdownGenerator": {
     "line number": [
      362
     ]
    },
    "super": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.waveform.generator._lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.waveform.generator.apply_fd_time_shift": {
  "data": {
   "shadows": "pycbc.waveform.utils.apply_fd_time_shift"
  },
  "type": "import"
 },
 "pycbc.waveform.generator.ceilpow2": {
  "data": {
   "shadows": "pycbc.waveform.utils.ceilpow2"
  },
  "type": "import"
 },
 "pycbc.waveform.generator.filter": {
  "data": {
   "shadows": "pycbc.filter"
  },
  "type": "import"
 },
 "pycbc.waveform.generator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.waveform.generator.parameters": {
  "data": {
   "shadows": "pycbc.waveform.parameters"
  },
  "type": "import"
 },
 "pycbc.waveform.generator.select_waveform_generator": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      631
     ]
    },
    "pycbc.waveform.generator.FDomainCBCGenerator": {
     "line number": [
      610
     ]
    },
    "pycbc.waveform.generator.FDomainFreqTauRingdownGenerator": {
     "line number": [
      621
     ]
    },
    "pycbc.waveform.generator.FDomainMassSpinRingdownGenerator": {
     "line number": [
      619
     ]
    },
    "pycbc.waveform.generator.TDomainCBCGenerator": {
     "line number": [
      614
     ]
    },
    "pycbc.waveform.generator.TDomainFreqTauRingdownGenerator": {
     "line number": [
      627
     ]
    },
    "pycbc.waveform.generator.TDomainMassSpinRingdownGenerator": {
     "line number": [
      625
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.generator.strain": {
  "data": {
   "shadows": "pycbc.strain"
  },
  "type": "import"
 },
 "pycbc.waveform.generator.taper_timeseries": {
  "data": {
   "shadows": "pycbc.waveform.utils.taper_timeseries"
  },
  "type": "import"
 },
 "pycbc.waveform.generator.transforms": {
  "data": {
   "shadows": "pycbc.transforms"
  },
  "type": "import"
 },
 "pycbc.waveform.nltides": {
  "data": {},
  "type": "module"
 },
 "pycbc.waveform.nltides.Array": {
  "data": {
   "shadows": "pycbc.types.Array"
  },
  "type": "import"
 },
 "pycbc.waveform.nltides.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.waveform.nltides.nltides_fourier_phase_difference": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "int": {
     "line number": [
      37
     ]
    },
    "len": {
     "line number": [
      38
     ]
    },
    "pycbc.waveform.nltides.lal": {
     "line number": [
      51,
      55
     ]
    },
    "pycbc.waveform.nltides.numpy": {
     "line number": [
      44,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.nltides.nonlinear_tidal_spa": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "len": {
     "line number": [
      75
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      76
     ]
    },
    "pycbc.waveform.get_fd_waveform": {
     "line number": [
      72
     ]
    },
    "pycbc.waveform.nltides.nltides_fourier_phase_difference": {
     "line number": [
      76
     ]
    },
    "pycbc.waveform.nltides.numpy": {
     "line number": [
      75,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.nltides.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.waveform.nltides.pycbc.conversions": {
  "data": {
   "shadows": "pycbc.conversions"
  },
  "type": "import"
 },
 "pycbc.waveform.nltides.waveform": {
  "data": {
   "shadows": "pycbc.waveform"
  },
  "type": "import"
 },
 "pycbc.waveform.parameters": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      31
     ]
    },
    "float": {
     "line number": [
      161,
      165,
      169,
      173,
      177,
      181,
      185,
      189,
      193,
      198,
      201,
      204,
      207,
      210,
      213,
      218,
      221,
      224,
      228,
      232,
      236,
      240,
      244,
      248,
      251,
      254,
      257,
      260,
      264,
      268,
      272,
      276,
      280,
      286,
      290,
      295,
      299,
      302,
      305,
      313,
      316,
      325,
      328,
      332,
      373,
      376,
      379,
      382,
      387,
      390,
      393,
      396,
      399,
      402,
      405,
      412,
      415,
      418,
      421,
      423,
      425,
      427,
      429
     ]
    },
    "int": {
     "line number": [
      343,
      348,
      353,
      358,
      362,
      435,
      438,
      441
     ]
    },
    "list": {
     "line number": [
      444
     ]
    },
    "pycbc.waveform.parameters.Parameter": {
     "line number": [
      160,
      164,
      168,
      172,
      176,
      180,
      184,
      188,
      192,
      197,
      200,
      203,
      206,
      209,
      212,
      217,
      220,
      223,
      227,
      231,
      235,
      239,
      243,
      247,
      250,
      253,
      256,
      259,
      263,
      267,
      271,
      275,
      279,
      285,
      289,
      293,
      297,
      301,
      304,
      312,
      315,
      320,
      324,
      327,
      331,
      335,
      339,
      342,
      347,
      352,
      357,
      361,
      365,
      372,
      375,
      378,
      381,
      386,
      389,
      392,
      395,
      398,
      401,
      404,
      411,
      414,
      417,
      420,
      422,
      424,
      426,
      428,
      434,
      437,
      440,
      443
     ]
    },
    "pycbc.waveform.parameters.ParameterList": {
     "line number": [
      464,
      469,
      477,
      486,
      492,
      497,
      501,
      505,
      506,
      509,
      510,
      518,
      519,
      524
     ]
    },
    "pycbc.waveform.parameters.amplitude_order": {
     "line number": [
      493
     ]
    },
    "pycbc.waveform.parameters.approximant": {
     "line number": [
      493,
      518,
      519
     ]
    },
    "pycbc.waveform.parameters.cbc_intrinsic_params": {
     "line number": [
      483
     ]
    },
    "pycbc.waveform.parameters.cbc_rframe_params": {
     "line number": [
      505,
      509,
      523
     ]
    },
    "pycbc.waveform.parameters.coa_phase": {
     "line number": [
      470
     ]
    },
    "pycbc.waveform.parameters.common_gen_equal_sampled_params": {
     "line number": [
      506,
      510
     ]
    },
    "pycbc.waveform.parameters.common_generation_params": {
     "line number": [
      502,
      524
     ]
    },
    "pycbc.waveform.parameters.dec": {
     "line number": [
      464
     ]
    },
    "pycbc.waveform.parameters.delta_f": {
     "line number": [
      505,
      519
     ]
    },
    "pycbc.waveform.parameters.delta_fc": {
     "line number": [
      487
     ]
    },
    "pycbc.waveform.parameters.delta_fs": {
     "line number": [
      487
     ]
    },
    "pycbc.waveform.parameters.delta_qinv": {
     "line number": [
      487
     ]
    },
    "pycbc.waveform.parameters.delta_t": {
     "line number": [
      509,
      518
     ]
    },
    "pycbc.waveform.parameters.distance": {
     "line number": [
      470
     ]
    },
    "pycbc.waveform.parameters.dquad_mon1": {
     "line number": [
      479
     ]
    },
    "pycbc.waveform.parameters.dquad_mon2": {
     "line number": [
      479
     ]
    },
    "pycbc.waveform.parameters.eccentricity": {
     "line number": [
      479
     ]
    },
    "pycbc.waveform.parameters.eccentricity_order": {
     "line number": [
      493
     ]
    },
    "pycbc.waveform.parameters.f_final": {
     "line number": [
      506
     ]
    },
    "pycbc.waveform.parameters.f_final_func": {
     "line number": [
      506
     ]
    },
    "pycbc.waveform.parameters.f_lower": {
     "line number": [
      501,
      518,
      519
     ]
    },
    "pycbc.waveform.parameters.f_ref": {
     "line number": [
      493
     ]
    },
    "pycbc.waveform.parameters.flags_generation_params": {
     "line number": [
      502,
      511,
      525
     ]
    },
    "pycbc.waveform.parameters.frame_axis": {
     "line number": [
      497
     ]
    },
    "pycbc.waveform.parameters.inclination": {
     "line number": [
      470
     ]
    },
    "pycbc.waveform.parameters.kappa_c": {
     "line number": [
      487
     ]
    },
    "pycbc.waveform.parameters.kappa_pu_im": {
     "line number": [
      488
     ]
    },
    "pycbc.waveform.parameters.kappa_pu_re": {
     "line number": [
      488
     ]
    },
    "pycbc.waveform.parameters.kappa_tst_im": {
     "line number": [
      487
     ]
    },
    "pycbc.waveform.parameters.kappa_tst_re": {
     "line number": [
      487
     ]
    },
    "pycbc.waveform.parameters.lambda1": {
     "line number": [
      479
     ]
    },
    "pycbc.waveform.parameters.lambda2": {
     "line number": [
      479
     ]
    },
    "pycbc.waveform.parameters.lambda_octu1": {
     "line number": [
      479
     ]
    },
    "pycbc.waveform.parameters.lambda_octu2": {
     "line number": [
      480
     ]
    },
    "pycbc.waveform.parameters.location_params": {
     "line number": [
      473
     ]
    },
    "pycbc.waveform.parameters.long_asc_nodes": {
     "line number": [
      470
     ]
    },
    "pycbc.waveform.parameters.mass1": {
     "line number": [
      478,
      518,
      519
     ]
    },
    "pycbc.waveform.parameters.mass2": {
     "line number": [
      478,
      518,
      519
     ]
    },
    "pycbc.waveform.parameters.mean_per_ano": {
     "line number": [
      470
     ]
    },
    "pycbc.waveform.parameters.mode_array": {
     "line number": [
      497
     ]
    },
    "pycbc.waveform.parameters.modes_choice": {
     "line number": [
      497
     ]
    },
    "pycbc.waveform.parameters.numrel_data": {
     "line number": [
      510
     ]
    },
    "pycbc.waveform.parameters.octufmode1": {
     "line number": [
      480
     ]
    },
    "pycbc.waveform.parameters.octufmode2": {
     "line number": [
      480
     ]
    },
    "pycbc.waveform.parameters.orientation_params": {
     "line number": [
      473,
      483
     ]
    },
    "pycbc.waveform.parameters.phase_order": {
     "line number": [
      493
     ]
    },
    "pycbc.waveform.parameters.polarization": {
     "line number": [
      464
     ]
    },
    "pycbc.waveform.parameters.quadfmode1": {
     "line number": [
      480
     ]
    },
    "pycbc.waveform.parameters.quadfmode2": {
     "line number": [
      480
     ]
    },
    "pycbc.waveform.parameters.ra": {
     "line number": [
      464
     ]
    },
    "pycbc.waveform.parameters.sample_points": {
     "line number": [
      524
     ]
    },
    "pycbc.waveform.parameters.side_bands": {
     "line number": [
      497
     ]
    },
    "pycbc.waveform.parameters.spin1x": {
     "line number": [
      478
     ]
    },
    "pycbc.waveform.parameters.spin1y": {
     "line number": [
      478
     ]
    },
    "pycbc.waveform.parameters.spin1z": {
     "line number": [
      478
     ]
    },
    "pycbc.waveform.parameters.spin2x": {
     "line number": [
      478
     ]
    },
    "pycbc.waveform.parameters.spin2y": {
     "line number": [
      478
     ]
    },
    "pycbc.waveform.parameters.spin2z": {
     "line number": [
      478
     ]
    },
    "pycbc.waveform.parameters.spin_order": {
     "line number": [
      493
     ]
    },
    "pycbc.waveform.parameters.tc": {
     "line number": [
      464
     ]
    },
    "pycbc.waveform.parameters.tidal_order": {
     "line number": [
      493
     ]
    },
    "str": {
     "line number": [
      321,
      340,
      366
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.waveform.parameters.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pycbc.waveform.parameters.Parameter": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "str": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.parameters.Parameter.__new__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "str.__new__": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.Parameter.docstr": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "str": {
     "line number": [
      62,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.ParameterList": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "UserList.UserList": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.waveform.parameters.ParameterList.asdict": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      88
     ]
    },
    "property": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.ParameterList.aslist": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "list": {
     "line number": [
      83
     ]
    },
    "property": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.ParameterList.default_dict": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.ParameterList.defaults": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.ParameterList.description_dict": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      132
     ]
    },
    "property": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.ParameterList.descriptions": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "property": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.ParameterList.docstr": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.ParameterList.dtype_dict": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      119
     ]
    },
    "property": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.ParameterList.dtypes": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "property": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.ParameterList.label_dict": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      143
     ]
    },
    "property": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.ParameterList.labels": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "property": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.ParameterList.names": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "property": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.ParameterList.nodefaults": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "property": {
     "line number": [
      102
     ]
    },
    "pycbc.waveform.parameters.ParameterList": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.parameters.UserList": {
  "data": {
   "shadows": "UserList.UserList"
  },
  "type": "import"
 },
 "pycbc.waveform.parameters.amplitude_order": {
  "data": {
   "lineno": 357
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.approximant": {
  "data": {
   "lineno": 339
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.calibration_params": {
  "data": {
   "lineno": 486
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.cbc_fd_required": {
  "data": {
   "lineno": 519
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.cbc_intrinsic_params": {
  "data": {
   "lineno": 477
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.cbc_rframe_params": {
  "data": {
   "lineno": 483
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.cbc_td_required": {
  "data": {
   "lineno": 518
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.chi_eff": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.chi_p": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.chirp_distance": {
  "data": {
   "lineno": 375
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.coa_phase": {
  "data": {
   "lineno": 378
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.common_gen_equal_sampled_params": {
  "data": {
   "lineno": 501
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.common_generation_params": {
  "data": {
   "lineno": 492
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.dec": {
  "data": {
   "lineno": 398
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.delta_f": {
  "data": {
   "lineno": 327
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.delta_fc": {
  "data": {
   "lineno": 414
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.delta_fs": {
  "data": {
   "lineno": 411
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.delta_qinv": {
  "data": {
   "lineno": 417
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.delta_t": {
  "data": {
   "lineno": 331
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.distance": {
  "data": {
   "lineno": 372
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.dquad_mon1": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.dquad_mon2": {
  "data": {
   "lineno": 256
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.eccentricity": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.eccentricity_order": {
  "data": {
   "lineno": 361
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.eta": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.extrinsic_params": {
  "data": {
   "lineno": 473
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.f_final": {
  "data": {
   "lineno": 315
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.f_final_func": {
  "data": {
   "lineno": 320
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.f_lower": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.f_ref": {
  "data": {
   "lineno": 324
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.fd_waveform_params": {
  "data": {
   "lineno": 505
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.fd_waveform_sequence_params": {
  "data": {
   "lineno": 523
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.flags_generation_params": {
  "data": {
   "lineno": 497
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.frame_axis": {
  "data": {
   "lineno": 434
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.inclination": {
  "data": {
   "lineno": 381
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.kappa_c": {
  "data": {
   "lineno": 420
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.kappa_pu_im": {
  "data": {
   "lineno": 428
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.kappa_pu_re": {
  "data": {
   "lineno": 426
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.kappa_tst_im": {
  "data": {
   "lineno": 424
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.kappa_tst_re": {
  "data": {
   "lineno": 422
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.lambda1": {
  "data": {
   "lineno": 247
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.lambda2": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.lambda_octu1": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.lambda_octu2": {
  "data": {
   "lineno": 263
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.location_params": {
  "data": {
   "lineno": 464
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.long_asc_nodes": {
  "data": {
   "lineno": 386
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.mass1": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.mass2": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.mchirp": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.mean_per_ano": {
  "data": {
   "lineno": 389
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.mode_array": {
  "data": {
   "lineno": 443
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.modes_choice": {
  "data": {
   "lineno": 437
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.mtotal": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.numrel_data": {
  "data": {
   "lineno": 365
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.octufmode1": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.octufmode2": {
  "data": {
   "lineno": 279
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.orientation_params": {
  "data": {
   "lineno": 469
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.phase_order": {
  "data": {
   "lineno": 342
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.polarization": {
  "data": {
   "lineno": 401
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.primary_mass": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.q": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.quadfmode1": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.quadfmode2": {
  "data": {
   "lineno": 271
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.ra": {
  "data": {
   "lineno": 395
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.redshift": {
  "data": {
   "lineno": 404
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.sample_points": {
  "data": {
   "lineno": 335
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.secondary_mass": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.side_bands": {
  "data": {
   "lineno": 440
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin1_a": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin1_azimuthal": {
  "data": {
   "lineno": 293
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin1_polar": {
  "data": {
   "lineno": 301
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin1x": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin1y": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin1z": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin2_a": {
  "data": {
   "lineno": 289
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin2_azimuthal": {
  "data": {
   "lineno": 297
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin2_polar": {
  "data": {
   "lineno": 304
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin2x": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin2y": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin2z": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin_order": {
  "data": {
   "lineno": 347
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin_px": {
  "data": {
   "lineno": 223
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin_py": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin_pz": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin_sx": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin_sy": {
  "data": {
   "lineno": 239
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.spin_sz": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.tc": {
  "data": {
   "lineno": 392
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.td_waveform_params": {
  "data": {
   "lineno": 509
  },
  "type": "constant"
 },
 "pycbc.waveform.parameters.tidal_order": {
  "data": {
   "lineno": 352
  },
  "type": "constant"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt": {
  "data": {
   "symbols_in_volume": {
    "pycbc.libutils.pkg_config_header_strings": {
     "line number": [
      130
     ]
    },
    "pycbc.waveform.pycbc_phenomC_tmplt.phenomC_text": {
     "line number": [
      129
     ]
    },
    "pycbc.waveform.pycbc_phenomC_tmplt.preamble": {
     "line number": [
      130
     ]
    },
    "pycuda.elementwise.ElementwiseKernel": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.Array": {
  "data": {
   "shadows": "pycbc.types.Array"
  },
  "type": "import"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.ElementwiseKernel": {
  "data": {
   "shadows": "pycuda.elementwise.ElementwiseKernel"
  },
  "type": "import"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.FinalSpin": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.Qa": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.complex64": {
  "data": {
   "shadows": "pycbc.types.complex64"
  },
  "type": "import"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.fRD": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "pycbc.waveform.pycbc_phenomC_tmplt.lal": {
     "line number": [
      150,
      150,
      150,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.float128": {
  "data": {
   "shadows": "numpy.float128"
  },
  "type": "import"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.imrphenomc_tmplt": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      375,
      377,
      379
     ]
    },
    "abs": {
     "line number": [
      272,
      275
     ]
    },
    "int": {
     "line number": [
      367,
      368
     ]
    },
    "len": {
     "line number": [
      376
     ]
    },
    "numpy.float128": {
     "line number": [
      163,
      164,
      165,
      166,
      167,
      168,
      169,
      170
     ]
    },
    "numpy.log": {
     "line number": [
      308,
      332,
      360
     ]
    },
    "numpy.sqrt": {
     "line number": [
      189,
      348
     ]
    },
    "pow": {
     "line number": [
      291,
      292,
      292,
      294,
      294,
      295
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      374
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      372,
      380
     ]
    },
    "pycbc.types.complex64": {
     "line number": [
      378
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      372
     ]
    },
    "pycbc.waveform.pycbc_phenomC_tmplt.FinalSpin": {
     "line number": [
      271
     ]
    },
    "pycbc.waveform.pycbc_phenomC_tmplt.Qa": {
     "line number": [
      272
     ]
    },
    "pycbc.waveform.pycbc_phenomC_tmplt.fRD": {
     "line number": [
      275
     ]
    },
    "pycbc.waveform.pycbc_phenomC_tmplt.lal": {
     "line number": [
      185,
      186,
      189,
      189,
      189,
      189,
      301,
      304,
      307,
      307,
      308,
      309,
      309,
      311,
      312,
      317,
      320,
      320,
      326,
      328,
      331,
      332,
      332,
      333,
      333,
      334,
      335,
      341,
      344,
      348,
      350,
      352,
      352,
      356,
      357,
      357,
      358,
      358,
      364
     ]
    },
    "pycbc.waveform.pycbc_phenomC_tmplt.numpy": {
     "line number": [
      372
     ]
    },
    "pycbc.waveform.pycbc_phenomC_tmplt.phenomC_kernel": {
     "line number": [
      382
     ]
    },
    "type": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.phenomC_kernel": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.phenomC_text": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.pkg_config_header_strings": {
  "data": {
   "shadows": "pycbc.libutils.pkg_config_header_strings"
  },
  "type": "import"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.preamble": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "pycbc.waveform.pycbc_phenomC_tmplt.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.waveform.ringdown": {
  "data": {
   "symbols_in_volume": {
    "pycbc.waveform.ringdown.get_fd_from_final_mass_spin": {
     "line number": [
      758
     ]
    },
    "pycbc.waveform.ringdown.get_fd_from_freqtau": {
     "line number": [
      759
     ]
    },
    "pycbc.waveform.ringdown.get_td_from_final_mass_spin": {
     "line number": [
      760
     ]
    },
    "pycbc.waveform.ringdown.get_td_from_freqtau": {
     "line number": [
      761
     ]
    },
    "pycbc.waveform.ringdown.max_freq": {
     "line number": [
      40
     ]
    },
    "pycbc.waveform.ringdown.numpy": {
     "line number": [
      41,
      42,
      43,
      43
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.waveform.ringdown.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.waveform.ringdown.Kerr_factor": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "pycbc.waveform.ringdown.lal": {
     "line number": [
      361,
      361,
      361,
      363
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.waveform.ringdown.apply_taper": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "int": {
     "line number": [
      373
     ]
    },
    "pycbc.waveform.ringdown.numpy": {
     "line number": [
      373,
      378,
      379,
      381,
      382
     ]
    },
    "pycbc.waveform.ringdown.spher_harms": {
     "line number": [
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.complex128": {
  "data": {
   "shadows": "pycbc.types.complex128"
  },
  "type": "import"
 },
 "pycbc.waveform.ringdown.fd_args": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pycbc.waveform.ringdown.fd_damped_sinusoid": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "int": {
     "line number": [
      426
     ]
    },
    "pycbc.waveform.ringdown.fd_output_vector": {
     "line number": [
      429
     ]
    },
    "pycbc.waveform.ringdown.numpy": {
     "line number": [
      441,
      447,
      447,
      448,
      448
     ]
    },
    "pycbc.waveform.ringdown.pi": {
     "line number": [
      437,
      443
     ]
    },
    "pycbc.waveform.ringdown.pi_sq": {
     "line number": [
      438
     ]
    },
    "pycbc.waveform.ringdown.spher_harms": {
     "line number": [
      433
     ]
    },
    "pycbc.waveform.ringdown.two_pi": {
     "line number": [
      441,
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.fd_output_vector": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "int": {
     "line number": [
      333
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      335,
      336
     ]
    },
    "pycbc.types.complex128": {
     "line number": [
      335,
      336
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      335,
      336
     ]
    },
    "pycbc.waveform.ringdown.lm_deltaf": {
     "line number": [
      330
     ]
    },
    "pycbc.waveform.ringdown.lm_ffinal": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.float64": {
  "data": {
   "shadows": "pycbc.types.float64"
  },
  "type": "import"
 },
 "pycbc.waveform.ringdown.format_lmns": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      102,
      105
     ]
    },
    "int": {
     "line number": [
      100,
      104
     ]
    },
    "isinstance": {
     "line number": [
      81,
      87
     ]
    },
    "len": {
     "line number": [
      87,
      88,
      101
     ]
    },
    "str": {
     "line number": [
      81,
      87,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.freqtau_required_args": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pycbc.waveform.ringdown.get_fd_from_final_mass_spin": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": {
    "pycbc.waveform.ringdown.fd_args": {
     "line number": [
      637
     ]
    },
    "pycbc.waveform.ringdown.mass_spin_required_args": {
     "line number": [
      637
     ]
    },
    "pycbc.waveform.ringdown.multimode_base": {
     "line number": [
      639
     ]
    },
    "pycbc.waveform.ringdown.props": {
     "line number": [
      637
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.get_fd_from_freqtau": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": {
    "pycbc.waveform.ringdown.fd_args": {
     "line number": [
      753
     ]
    },
    "pycbc.waveform.ringdown.freqtau_required_args": {
     "line number": [
      753
     ]
    },
    "pycbc.waveform.ringdown.multimode_base": {
     "line number": [
      755
     ]
    },
    "pycbc.waveform.ringdown.props": {
     "line number": [
      753
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.get_lm_f0tau_allmodes": {
  "data": {
   "shadows": "pycbc.conversions.get_lm_f0tau_allmodes"
  },
  "type": "import"
 },
 "pycbc.waveform.ringdown.get_obj_attrs": {
  "data": {
   "shadows": "pycbc.waveform.waveform.get_obj_attrs"
  },
  "type": "import"
 },
 "pycbc.waveform.ringdown.get_td_from_final_mass_spin": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "pycbc.waveform.ringdown.mass_spin_required_args": {
     "line number": [
      577
     ]
    },
    "pycbc.waveform.ringdown.multimode_base": {
     "line number": [
      579
     ]
    },
    "pycbc.waveform.ringdown.props": {
     "line number": [
      577
     ]
    },
    "pycbc.waveform.ringdown.td_args": {
     "line number": [
      577
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.get_td_from_freqtau": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": {
    "pycbc.waveform.ringdown.freqtau_required_args": {
     "line number": [
      697
     ]
    },
    "pycbc.waveform.ringdown.multimode_base": {
     "line number": [
      699
     ]
    },
    "pycbc.waveform.ringdown.props": {
     "line number": [
      697
     ]
    },
    "pycbc.waveform.ringdown.td_args": {
     "line number": [
      697
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.waveform.ringdown.lm_amps_phases": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      121,
      133,
      137
     ]
    },
    "ValueError": {
     "line number": [
      122,
      134,
      138
     ]
    },
    "int": {
     "line number": [
      126
     ]
    },
    "pycbc.waveform.ringdown.format_lmns": {
     "line number": [
      115
     ]
    },
    "range": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.lm_deltaf": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      284
     ]
    },
    "isinstance": {
     "line number": [
      284
     ]
    },
    "min": {
     "line number": [
      288
     ]
    },
    "pycbc.waveform.ringdown.qnm_time_decay": {
     "line number": [
      287,
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.lm_deltat": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      244,
      246
     ]
    },
    "dict": {
     "line number": [
      237,
      237,
      243,
      243,
      245,
      245
     ]
    },
    "isinstance": {
     "line number": [
      237,
      237,
      243,
      243,
      245,
      245
     ]
    },
    "min": {
     "line number": [
      242
     ]
    },
    "pycbc.waveform.ringdown.min_dt": {
     "line number": [
      250,
      251
     ]
    },
    "pycbc.waveform.ringdown.qnm_freq_decay": {
     "line number": [
      240,
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.lm_ffinal": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      267,
      269
     ]
    },
    "dict": {
     "line number": [
      260,
      260,
      266,
      266,
      268,
      268
     ]
    },
    "isinstance": {
     "line number": [
      260,
      260,
      266,
      266,
      268,
      268
     ]
    },
    "max": {
     "line number": [
      265
     ]
    },
    "pycbc.waveform.ringdown.max_freq": {
     "line number": [
      273,
      274
     ]
    },
    "pycbc.waveform.ringdown.qnm_freq_decay": {
     "line number": [
      263,
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.lm_freqs_taus": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      156,
      160
     ]
    },
    "ValueError": {
     "line number": [
      157,
      161
     ]
    },
    "int": {
     "line number": [
      151
     ]
    },
    "pycbc.waveform.ringdown.format_lmns": {
     "line number": [
      147
     ]
    },
    "range": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.lm_tfinal": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      221
     ]
    },
    "isinstance": {
     "line number": [
      221
     ]
    },
    "max": {
     "line number": [
      225
     ]
    },
    "pycbc.waveform.ringdown.qnm_time_decay": {
     "line number": [
      224,
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.mass_spin_required_args": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pycbc.waveform.ringdown.max_freq": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pycbc.waveform.ringdown.min_dt": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pycbc.waveform.ringdown.multimode_base": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": {
    "int": {
     "line number": [
      482,
      482,
      486,
      487,
      488,
      495,
      508,
      509
     ]
    },
    "len": {
     "line number": [
      489,
      491
     ]
    },
    "pycbc.conversions.get_lm_f0tau_allmodes": {
     "line number": [
      466
     ]
    },
    "pycbc.waveform.ringdown.Kerr_factor": {
     "line number": [
      468
     ]
    },
    "pycbc.waveform.ringdown.apply_taper": {
     "line number": [
      485
     ]
    },
    "pycbc.waveform.ringdown.fd_damped_sinusoid": {
     "line number": [
      505
     ]
    },
    "pycbc.waveform.ringdown.fd_output_vector": {
     "line number": [
      502
     ]
    },
    "pycbc.waveform.ringdown.format_lmns": {
     "line number": [
      463
     ]
    },
    "pycbc.waveform.ringdown.lm_amps_phases": {
     "line number": [
      464
     ]
    },
    "pycbc.waveform.ringdown.lm_freqs_taus": {
     "line number": [
      472
     ]
    },
    "pycbc.waveform.ringdown.td_damped_sinusoid": {
     "line number": [
      480
     ]
    },
    "pycbc.waveform.ringdown.td_output_vector": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.waveform.ringdown.pi": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pycbc.waveform.ringdown.pi_sq": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pycbc.waveform.ringdown.props": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      63
     ]
    },
    "pycbc.waveform.waveform.get_obj_attrs": {
     "line number": [
      52
     ]
    },
    "str": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.qnm_freq_decay": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "pycbc.waveform.ringdown.numpy": {
     "line number": [
      213,
      214
     ]
    },
    "pycbc.waveform.ringdown.pi": {
     "line number": [
      207,
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.qnm_required_args": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pycbc.waveform.ringdown.qnm_time_decay": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "pycbc.waveform.ringdown.numpy": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pycbc.waveform.ringdown.ringdown_fd_approximants": {
  "data": {
   "lineno": 758
  },
  "type": "constant"
 },
 "pycbc.waveform.ringdown.ringdown_td_approximants": {
  "data": {
   "lineno": 760
  },
  "type": "constant"
 },
 "pycbc.waveform.ringdown.spher_harms": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "pycbc.waveform.ringdown.lal": {
     "line number": [
      348,
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.td_args": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pycbc.waveform.ringdown.td_damped_sinusoid": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "int": {
     "line number": [
      399
     ]
    },
    "pycbc.waveform.ringdown.numpy": {
     "line number": [
      400,
      407,
      410,
      411
     ]
    },
    "pycbc.waveform.ringdown.spher_harms": {
     "line number": [
      403
     ]
    },
    "pycbc.waveform.ringdown.two_pi": {
     "line number": [
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.td_output_vector": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      310
     ]
    },
    "int": {
     "line number": [
      304,
      311
     ]
    },
    "isinstance": {
     "line number": [
      310
     ]
    },
    "max": {
     "line number": [
      309
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      313,
      314
     ]
    },
    "pycbc.types.float64": {
     "line number": [
      313,
      314
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      313,
      314
     ]
    },
    "pycbc.waveform.ringdown.lm_deltat": {
     "line number": [
      301
     ]
    },
    "pycbc.waveform.ringdown.lm_tfinal": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.ringdown.two_pi": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pycbc.waveform.ringdown.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.waveform.sinegauss": {
  "data": {},
  "type": "module"
 },
 "pycbc.waveform.sinegauss.fd_sine_gaussian": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "int": {
     "line number": [
      31,
      32
     ]
    },
    "pycbc.waveform.sinegauss.numpy": {
     "line number": [
      33,
      34,
      35,
      36,
      36,
      37,
      38,
      38
     ]
    },
    "round": {
     "line number": [
      31,
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.sinegauss.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.waveform.sinegauss.pycbc.types": {
  "data": {
   "shadows": "pycbc.types"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt": {
  "data": {},
  "type": "module"
 },
 "pycbc.waveform.spa_tmplt.Array": {
  "data": {
   "shadows": "pycbc.types.Array"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt._prec": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "pycbc.waveform.spa_tmplt.ceilpow2": {
  "data": {
   "shadows": "pycbc.waveform.utils.ceilpow2"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt.complex64": {
  "data": {
   "shadows": "pycbc.types.complex64"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt.findchirp_chirptime": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "float": {
     "line number": [
      32,
      33
     ]
    },
    "pow": {
     "line number": [
      63
     ]
    },
    "pycbc.waveform.spa_tmplt.lal": {
     "line number": [
      43,
      46,
      47,
      47,
      48,
      48,
      54,
      54,
      58,
      60,
      63,
      63
     ]
    },
    "pycbc.waveform.spa_tmplt.numpy": {
     "line number": [
      50,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.spa_tmplt.float32": {
  "data": {
   "shadows": "pycbc.types.float32"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt.lalsimulation": {
  "data": {
   "shadows": "lalsimulation"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt.pycbc.pnutils": {
  "data": {
   "shadows": "pycbc.pnutils"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt.schemed": {
  "data": {
   "shadows": "pycbc.scheme.schemed"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt.spa_amplitude_factor": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "math.sqrt": {
     "line number": [
      110
     ]
    },
    "pycbc.waveform.spa_tmplt.lal": {
     "line number": [
      107,
      108,
      110,
      110,
      110,
      110
     ]
    },
    "pycbc.waveform.spa_tmplt.numpy": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.spa_tmplt.spa_distance": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "int": {
     "line number": [
      142
     ]
    },
    "len": {
     "line number": [
      143,
      146,
      147
     ]
    },
    "math.sqrt": {
     "line number": [
      148
     ]
    },
    "pycbc.waveform.spa_tmplt.spa_amplitude_factor": {
     "line number": [
      144
     ]
    },
    "pycbc.waveform.spa_tmplt.spa_tmplt_end": {
     "line number": [
      142
     ]
    },
    "pycbc.waveform.spa_tmplt.spa_tmplt_norm": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.spa_tmplt.spa_length_in_time": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "int": {
     "line number": [
      89
     ]
    },
    "pycbc.waveform.spa_tmplt.findchirp_chirptime": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.spa_tmplt.spa_tmplt": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      222,
      226
     ]
    },
    "float": {
     "line number": [
      193,
      193,
      194,
      194,
      210
     ]
    },
    "int": {
     "line number": [
      171,
      173,
      210,
      214,
      216
     ]
    },
    "len": {
     "line number": [
      223,
      224
     ]
    },
    "math.log": {
     "line number": [
      202
     ]
    },
    "math.sqrt": {
     "line number": [
      212
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      221
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      219,
      227
     ]
    },
    "pycbc.types.complex64": {
     "line number": [
      225
     ]
    },
    "pycbc.types.zeros": {
     "line number": [
      219
     ]
    },
    "pycbc.waveform.spa_tmplt.lal": {
     "line number": [
      182,
      208,
      208
     ]
    },
    "pycbc.waveform.spa_tmplt.lalsimulation": {
     "line number": [
      184,
      188,
      192
     ]
    },
    "pycbc.waveform.spa_tmplt.numpy": {
     "line number": [
      219
     ]
    },
    "pycbc.waveform.spa_tmplt.spa_amplitude_factor": {
     "line number": [
      180
     ]
    },
    "pycbc.waveform.spa_tmplt.spa_tmplt_engine": {
     "line number": [
      229
     ]
    },
    "pycbc.waveform.utils.ceilpow2": {
     "line number": [
      215
     ]
    },
    "type": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.spa_tmplt.spa_tmplt_end": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "pycbc.waveform.spa_tmplt.spa_tmplt_engine": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      158
     ]
    },
    "pycbc.scheme.schemed": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.spa_tmplt.spa_tmplt_norm": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "int": {
     "line number": [
      129
     ]
    },
    "pycbc.waveform.spa_tmplt.numpy": {
     "line number": [
      131
     ]
    },
    "pycbc.waveform.spa_tmplt.spa_tmplt_precondition": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.spa_tmplt.spa_tmplt_precondition": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "len": {
     "line number": [
      121,
      123
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      124
     ]
    },
    "pycbc.types.float32": {
     "line number": [
      124
     ]
    },
    "pycbc.waveform.spa_tmplt._prec": {
     "line number": [
      121,
      121,
      121,
      124,
      125
     ]
    },
    "pycbc.waveform.spa_tmplt.numpy": {
     "line number": [
      122,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.spa_tmplt.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt.zeros": {
  "data": {
   "shadows": "pycbc.types.zeros"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt_cuda": {
  "data": {
   "symbols_in_volume": {
    "pycbc.libutils.pkg_config_header_strings": {
     "line number": [
      85
     ]
    },
    "pycbc.waveform.spa_tmplt_cuda.preamble": {
     "line number": [
      85
     ]
    },
    "pycbc.waveform.spa_tmplt_cuda.taylorf2_text": {
     "line number": [
      84
     ]
    },
    "pycuda.elementwise.ElementwiseKernel": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.waveform.spa_tmplt_cuda.ElementwiseKernel": {
  "data": {
   "shadows": "pycuda.elementwise.ElementwiseKernel"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt_cuda.pkg_config_header_strings": {
  "data": {
   "shadows": "pycbc.libutils.pkg_config_header_strings"
  },
  "type": "import"
 },
 "pycbc.waveform.spa_tmplt_cuda.preamble": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pycbc.waveform.spa_tmplt_cuda.spa_tmplt_engine": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "pycbc.waveform.spa_tmplt_cuda.taylorf2_kernel": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.spa_tmplt_cuda.taylorf2_kernel": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pycbc.waveform.spa_tmplt_cuda.taylorf2_text": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pycbc.waveform.utils": {
  "data": {
   "symbols_in_volume": {
    "lalsimulation.SIM_INSPIRAL_TAPER_END": {
     "line number": [
      309,
      310
     ]
    },
    "lalsimulation.SIM_INSPIRAL_TAPER_START": {
     "line number": [
      307,
      308
     ]
    },
    "lalsimulation.SIM_INSPIRAL_TAPER_STARTEND": {
     "line number": [
      311,
      312
     ]
    },
    "lalsimulation.SimInspiralREAL4WaveTaper": {
     "line number": [
      316
     ]
    },
    "lalsimulation.SimInspiralREAL8WaveTaper": {
     "line number": [
      317
     ]
    },
    "pycbc.types.float32": {
     "line number": [
      316
     ]
    },
    "pycbc.types.float64": {
     "line number": [
      317
     ]
    },
    "pycbc.waveform.utils.numpy": {
     "line number": [
      316,
      317
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.waveform.utils.Array": {
  "data": {
   "shadows": "pycbc.types.Array"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.TimeSeries": {
  "data": {
   "shadows": "pycbc.types.TimeSeries"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.amplitude_from_frequencyseries": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      143
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      144
     ]
    },
    "pycbc.types.real_same_precision_as": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils.amplitude_from_polarizations": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "pycbc.types.TimeSeries": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils.apply_fd_time_shift": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "float": {
     "line number": [
      389
     ]
    },
    "isinstance": {
     "line number": [
      394
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      400
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      394
     ]
    },
    "pycbc.types.complex_same_precision_as": {
     "line number": [
      401
     ]
    },
    "pycbc.waveform.utils.apply_fseries_time_shift": {
     "line number": [
      396
     ]
    },
    "pycbc.waveform.utils.numpy": {
     "line number": [
      400,
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils.apply_fseries_time_shift": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "pycbc.scheme.schemed": {
     "line number": [
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils.ceilpow2": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "math.frexp": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils.coalign_waveforms": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      90
     ]
    },
    "abs": {
     "line number": [
      98
     ]
    },
    "len": {
     "line number": [
      81,
      81,
      89,
      89,
      89
     ]
    },
    "max": {
     "line number": [
      81
     ]
    },
    "pycbc.filter.matched_filter": {
     "line number": [
      93
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      102
     ]
    },
    "pycbc.waveform.utils.ceilpow2": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils.complex_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.complex_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.fd_taper": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      491
     ]
    },
    "int": {
     "line number": [
      480,
      482
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      481
     ]
    },
    "scipy.signal.get_window": {
     "line number": [
      481
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils.fd_to_td": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "pycbc.waveform.utils.fd_taper": {
     "line number": [
      527,
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils.float32": {
  "data": {
   "shadows": "pycbc.types.float32"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.float64": {
  "data": {
   "shadows": "pycbc.types.float64"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.frequency_from_polarizations": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "pycbc.types.TimeSeries": {
     "line number": [
      300
     ]
    },
    "pycbc.types.real_same_precision_as": {
     "line number": [
      300
     ]
    },
    "pycbc.waveform.utils.lal": {
     "line number": [
      298
     ]
    },
    "pycbc.waveform.utils.numpy": {
     "line number": [
      298
     ]
    },
    "pycbc.waveform.utils.phase_from_polarizations": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils.frexp": {
  "data": {
   "shadows": "math.frexp"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.matched_filter": {
  "data": {
   "shadows": "pycbc.filter.matched_filter"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.phase_from_frequencyseries": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "pycbc.types.FrequencySeries": {
     "line number": [
      126
     ]
    },
    "pycbc.types.real_same_precision_as": {
     "line number": [
      123
     ]
    },
    "pycbc.waveform.utils.numpy": {
     "line number": [
      122,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils.phase_from_polarizations": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "pycbc.types.TimeSeries": {
     "line number": [
      232
     ]
    },
    "pycbc.types.real_same_precision_as": {
     "line number": [
      229
     ]
    },
    "pycbc.waveform.utils.numpy": {
     "line number": [
      228,
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils.real_same_precision_as": {
  "data": {
   "shadows": "pycbc.types.real_same_precision_as"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.schemed": {
  "data": {
   "shadows": "pycbc.scheme.schemed"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.signal": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.sim": {
  "data": {
   "shadows": "lalsimulation"
  },
  "type": "import"
 },
 "pycbc.waveform.utils.taper_func_map": {
  "data": {
   "lineno": 315
  },
  "type": "constant"
 },
 "pycbc.waveform.utils.taper_map": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "pycbc.waveform.utils.taper_timeseries": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      344
     ]
    },
    "ValueError": {
     "line number": [
      338,
      341
     ]
    },
    "pycbc.types.TimeSeries": {
     "line number": [
      354
     ]
    },
    "pycbc.types.float32": {
     "line number": [
      343
     ]
    },
    "pycbc.types.float64": {
     "line number": [
      343
     ]
    },
    "pycbc.waveform.utils.taper_func_map": {
     "line number": [
      346
     ]
    },
    "pycbc.waveform.utils.taper_map": {
     "line number": [
      340,
      342,
      349,
      350
     ]
    },
    "str": {
     "line number": [
      345
     ]
    },
    "taper_func": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils.td_taper": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      449
     ]
    },
    "int": {
     "line number": [
      436,
      438
     ]
    },
    "len": {
     "line number": [
      446
     ]
    },
    "pycbc.types.Array": {
     "line number": [
      437
     ]
    },
    "scipy.signal.get_window": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils.time_from_frequencyseries": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      187,
      190
     ]
    },
    "min": {
     "line number": [
      192
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      195
     ]
    },
    "pycbc.types.real_same_precision_as": {
     "line number": [
      195
     ]
    },
    "pycbc.waveform.utils.numpy": {
     "line number": [
      148,
      185,
      186,
      186,
      187,
      190
     ]
    },
    "pycbc.waveform.utils.phase_from_frequencyseries": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils_cuda": {
  "data": {
   "symbols_in_volume": {
    "mako.template.Template": {
     "line number": [
      34
     ]
    },
    "pycbc.waveform.utils_cuda.fseries_ts_fn": {
     "line number": [
      79
     ]
    },
    "pycbc.waveform.utils_cuda.mod": {
     "line number": [
      78
     ]
    },
    "pycbc.waveform.utils_cuda.nt": {
     "line number": [
      76,
      77
     ]
    },
    "pycbc.waveform.utils_cuda.numpy": {
     "line number": [
      76
     ]
    },
    "pycbc.waveform.utils_cuda.time_shift_kernel": {
     "line number": [
      77
     ]
    },
    "pycuda.compiler.SourceModule": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.waveform.utils_cuda.FrequencySeries": {
  "data": {
   "shadows": "pycbc.types.FrequencySeries"
  },
  "type": "import"
 },
 "pycbc.waveform.utils_cuda.SourceModule": {
  "data": {
   "shadows": "pycuda.compiler.SourceModule"
  },
  "type": "import"
 },
 "pycbc.waveform.utils_cuda.Template": {
  "data": {
   "shadows": "mako.template.Template"
  },
  "type": "import"
 },
 "pycbc.waveform.utils_cuda.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.waveform.utils_cuda.apply_fseries_time_shift": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      86
     ]
    },
    "ValueError": {
     "line number": [
      97
     ]
    },
    "int": {
     "line number": [
      95
     ]
    },
    "len": {
     "line number": [
      94
     ]
    },
    "pycbc.types.FrequencySeries": {
     "line number": [
      102
     ]
    },
    "pycbc.waveform.utils_cuda.fseries_ts_fn": {
     "line number": [
      100
     ]
    },
    "pycbc.waveform.utils_cuda.nt": {
     "line number": [
      100
     ]
    },
    "pycbc.waveform.utils_cuda.nt_float": {
     "line number": [
      95
     ]
    },
    "pycbc.waveform.utils_cuda.numpy": {
     "line number": [
      93,
      94,
      95,
      99,
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.waveform.utils_cuda.fseries_ts_fn": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "pycbc.waveform.utils_cuda.mod": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "pycbc.waveform.utils_cuda.nt": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "pycbc.waveform.utils_cuda.nt_float": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "pycbc.waveform.utils_cuda.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycbc.waveform.utils_cuda.time_shift_kernel": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pycbc.weave": {
  "data": {
   "symbols_in_volume": {
    "pycbc.weave.pycbc_compile_function": {
     "line number": [
      67
     ]
    },
    "six.PY3": {
     "line number": [
      27,
      66
     ]
    },
    "weave.inline_tools.compile_function": {
     "line number": [
      29,
      67
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.weave.PY3": {
  "data": {
   "shadows": "six.PY3"
  },
  "type": "import"
 },
 "pycbc.weave._clear_weave_cache": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "pycbc.weave.logging": {
     "line number": [
      118
     ]
    },
    "pycbc.weave.shutil": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.weave._compile_function": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pycbc.weave.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pycbc.weave.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "pycbc.weave.fcntl": {
  "data": {
   "shadows": "fcntl"
  },
  "type": "import"
 },
 "pycbc.weave.inline": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.weave.inline_tools": {
  "data": {
   "shadows": "weave.inline_tools"
  },
  "type": "import"
 },
 "pycbc.weave.insert_weave_option_group": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pycbc.weave.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.weave.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycbc.weave.pycbc_compile_function": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "open": {
     "line number": [
      51
     ]
    },
    "pycbc.weave._compile_function": {
     "line number": [
      55
     ]
    },
    "pycbc.weave.fcntl": {
     "line number": [
      52,
      52,
      61,
      61
     ]
    },
    "pycbc.weave.logging": {
     "line number": [
      47,
      53,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.weave.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pycbc.weave.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "pycbc.weave.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pycbc.weave.verify_weave_options": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      149
     ]
    },
    "getattr": {
     "line number": [
      141
     ]
    },
    "pycbc.weave._clear_weave_cache": {
     "line number": [
      167,
      171,
      172
     ]
    },
    "pycbc.weave.atexit": {
     "line number": [
      171
     ]
    },
    "pycbc.weave.logging": {
     "line number": [
      146,
      157,
      163
     ]
    },
    "pycbc.weave.signal": {
     "line number": [
      172,
      172
     ]
    },
    "pycbc.weave.sys": {
     "line number": [
      141,
      142,
      147,
      147,
      164
     ]
    },
    "str": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.workflow.INI_FILE_DIRECTORY": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pycbc.workflow.PEGASUS_FILE_DIRECTORY": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pycbc.workflow.coincidence": {
  "data": {},
  "type": "module"
 },
 "pycbc.workflow.coincidence.CensorForeground": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      267
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.Executable": {
  "data": {
   "shadows": "pycbc.workflow.core.Executable"
  },
  "type": "import"
 },
 "pycbc.workflow.coincidence.File": {
  "data": {
   "shadows": "pycbc.workflow.core.File"
  },
  "type": "import"
 },
 "pycbc.workflow.coincidence.FileList": {
  "data": {
   "shadows": "pycbc.workflow.core.FileList"
  },
  "type": "import"
 },
 "pycbc.workflow.coincidence.MergeExecutable": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      264
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.Node": {
  "data": {
   "shadows": "pycbc.workflow.core.Node"
  },
  "type": "import"
 },
 "pycbc.workflow.coincidence.PyCBCBank2HDFExecutable": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      34
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.PyCBCBank2HDFExecutable.create_node": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.PyCBCCombineStatmap": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      241
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.PyCBCCombineStatmap.create_node": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.PyCBCDistributeBackgroundBins": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      218
     ]
    },
    "pycbc.workflow.core.Executable.ALL_TRIGGERS": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.PyCBCDistributeBackgroundBins.create_node": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "len": {
     "line number": [
      236
     ]
    },
    "pycbc.workflow.core.File": {
     "line number": [
      231
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      224
     ]
    },
    "range": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.PyCBCFindCoincExecutable": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      86
     ]
    },
    "pycbc.workflow.core.Executable.ALL_TRIGGERS": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.PyCBCFindCoincExecutable.create_node": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "len": {
     "line number": [
      100
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      95
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.PyCBCFindMultiifoCoincExecutable": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      109
     ]
    },
    "pycbc.workflow.core.Executable.ALL_TRIGGERS": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.PyCBCFindMultiifoCoincExecutable.create_node": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "len": {
     "line number": [
      122
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      118
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.PyCBCFitByTemplateExecutable": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      58
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.PyCBCFitByTemplateExecutable.create_node": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.PyCBCFitOverParamExecutable": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      74
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.PyCBCFitOverParamExecutable.create_node": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.PyCBCHDFInjFindExecutable": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      202
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.PyCBCHDFInjFindExecutable.create_node": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.PyCBCMultiifoCombineStatmap": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      252
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.PyCBCMultiifoCombineStatmap.create_node": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.PyCBCMultiifoStatMapExecutable": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      148
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.PyCBCMultiifoStatMapExecutable.create_node": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "ligo.segments.segment": {
     "line number": [
      155
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.PyCBCMultiifoStatMapInjExecutable": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      164
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.PyCBCMultiifoStatMapInjExecutable.create_node": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "ligo.segments.segment": {
     "line number": [
      172
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.PyCBCStatMapExecutable": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      133
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.PyCBCStatMapExecutable.create_node": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "ligo.segments.segment": {
     "line number": [
      140
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.PyCBCStatMapInjExecutable": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      184
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.PyCBCStatMapInjExecutable.create_node": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "ligo.segments.segment": {
     "line number": [
      191
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.PyCBCTrig2HDFExecutable": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      45
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.coincidence.PyCBCTrig2HDFExecutable.create_node": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.convert_bank_to_hdf": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      338
     ]
    },
    "len": {
     "line number": [
      337
     ]
    },
    "pycbc.workflow.coincidence.PyCBCBank2HDFExecutable": {
     "line number": [
      342
     ]
    },
    "pycbc.workflow.coincidence.logging": {
     "line number": [
      340
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.convert_trig_to_hdf": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "pycbc.workflow.coincidence.PyCBCTrig2HDFExecutable": {
     "line number": [
      359
     ]
    },
    "pycbc.workflow.coincidence.logging": {
     "line number": [
      354
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      357
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      355
     ]
    },
    "zip": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.find_injections_in_hdf_coinc": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "pycbc.workflow.coincidence.PyCBCHDFInjFindExecutable": {
     "line number": [
      325
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.get_ordered_ifo_list": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": {
    "sorted": {
     "line number": [
      725
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.workflow.coincidence.make_analysis_dir": {
  "data": {
   "shadows": "pycbc.workflow.core.make_analysis_dir"
  },
  "type": "import"
 },
 "pycbc.workflow.coincidence.make_foreground_censored_veto": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "pycbc.workflow.coincidence.CensorForeground": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.merge_single_detector_hdf_files": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "pycbc.workflow.coincidence.MergeExecutable": {
     "line number": [
      289
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      287
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.segments": {
  "data": {
   "shadows": "ligo.segments"
  },
  "type": "import"
 },
 "pycbc.workflow.coincidence.select_files_by_ifo_combination": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      710
     ]
    },
    "zip": {
     "line number": [
      711
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.setup_background_bins": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      431
     ]
    },
    "pycbc.workflow.coincidence.PyCBCCombineStatmap": {
     "line number": [
      422
     ]
    },
    "pycbc.workflow.coincidence.PyCBCDistributeBackgroundBins": {
     "line number": [
      415
     ]
    },
    "pycbc.workflow.coincidence.PyCBCStatMapExecutable": {
     "line number": [
      418
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      430,
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.setup_background_bins_inj": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "len": {
     "line number": [
      483
     ]
    },
    "pycbc.workflow.coincidence.PyCBCCombineStatmap": {
     "line number": [
      471
     ]
    },
    "pycbc.workflow.coincidence.PyCBCDistributeBackgroundBins": {
     "line number": [
      464
     ]
    },
    "pycbc.workflow.coincidence.PyCBCStatMapInjExecutable": {
     "line number": [
      467
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      478,
      482,
      484,
      484,
      485,
      485
     ]
    },
    "range": {
     "line number": [
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.setup_interval_coinc": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      561,
      566
     ]
    },
    "int": {
     "line number": [
      573
     ]
    },
    "len": {
     "line number": [
      560,
      562,
      565
     ]
    },
    "pycbc.workflow.coincidence.PyCBCFindCoincExecutable": {
     "line number": [
      568
     ]
    },
    "pycbc.workflow.coincidence.logging": {
     "line number": [
      558,
      590
     ]
    },
    "pycbc.workflow.coincidence.setup_statmap": {
     "line number": [
      588
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      577
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      557
     ]
    },
    "range": {
     "line number": [
      578
     ]
    },
    "str": {
     "line number": [
      584
     ]
    },
    "zip": {
     "line number": [
      576
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.setup_interval_coinc_inj": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      508,
      513
     ]
    },
    "int": {
     "line number": [
      516
     ]
    },
    "len": {
     "line number": [
      507,
      512
     ]
    },
    "pycbc.workflow.coincidence.PyCBCFindCoincExecutable": {
     "line number": [
      533
     ]
    },
    "pycbc.workflow.coincidence.logging": {
     "line number": [
      505
     ]
    },
    "pycbc.workflow.coincidence.setup_statmap_inj": {
     "line number": [
      546
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      526,
      527,
      528
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      504
     ]
    },
    "range": {
     "line number": [
      536
     ]
    },
    "str": {
     "line number": [
      542
     ]
    },
    "zip": {
     "line number": [
      520,
      523
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.setup_multiifo_combine_statmap": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": {
    "float": {
     "line number": [
      746
     ]
    },
    "pycbc.workflow.coincidence.PyCBCMultiifoCombineStatmap": {
     "line number": [
      740
     ]
    },
    "pycbc.workflow.coincidence.logging": {
     "line number": [
      738
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      737
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.setup_multiifo_interval_coinc": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      674
     ]
    },
    "int": {
     "line number": [
      684
     ]
    },
    "len": {
     "line number": [
      673,
      675
     ]
    },
    "pycbc.workflow.coincidence.PyCBCFindMultiifoCoincExecutable": {
     "line number": [
      679
     ]
    },
    "pycbc.workflow.coincidence.logging": {
     "line number": [
      671,
      703
     ]
    },
    "pycbc.workflow.coincidence.setup_multiifo_statmap": {
     "line number": [
      701
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      688
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      670
     ]
    },
    "range": {
     "line number": [
      689
     ]
    },
    "str": {
     "line number": [
      697
     ]
    },
    "zip": {
     "line number": [
      687
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.setup_multiifo_interval_coinc_inj": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      605
     ]
    },
    "int": {
     "line number": [
      610
     ]
    },
    "len": {
     "line number": [
      604,
      606
     ]
    },
    "pycbc.workflow.coincidence.PyCBCFindMultiifoCoincExecutable": {
     "line number": [
      641
     ]
    },
    "pycbc.workflow.coincidence.logging": {
     "line number": [
      602,
      659
     ]
    },
    "pycbc.workflow.coincidence.setup_multiifo_statmap_inj": {
     "line number": [
      661
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      619,
      620,
      621
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      601
     ]
    },
    "range": {
     "line number": [
      646
     ]
    },
    "str": {
     "line number": [
      654
     ]
    },
    "zip": {
     "line number": [
      614,
      616
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.setup_multiifo_statmap": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "pycbc.workflow.coincidence.PyCBCMultiifoStatMapExecutable": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.setup_multiifo_statmap_inj": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "pycbc.workflow.coincidence.PyCBCMultiifoStatMapInjExecutable": {
     "line number": [
      383
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      389,
      390,
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.setup_simple_statmap": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "pycbc.workflow.coincidence.PyCBCStatMapExecutable": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.setup_simple_statmap_inj": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "pycbc.workflow.coincidence.PyCBCStatMapInjExecutable": {
     "line number": [
      452
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      456,
      457,
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.setup_statmap": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "pycbc.workflow.coincidence.setup_background_bins": {
     "line number": [
      397
     ]
    },
    "pycbc.workflow.coincidence.setup_simple_statmap": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.setup_statmap_inj": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "pycbc.workflow.coincidence.setup_background_bins_inj": {
     "line number": [
      445
     ]
    },
    "pycbc.workflow.coincidence.setup_simple_statmap_inj": {
     "line number": [
      447
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.coincidence.setup_trigger_fitting": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "len": {
     "line number": [
      302,
      303,
      304,
      308
     ]
    },
    "pycbc.workflow.coincidence.PyCBCFitByTemplateExecutable": {
     "line number": [
      309
     ]
    },
    "pycbc.workflow.coincidence.PyCBCFitOverParamExecutable": {
     "line number": [
      313
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      300,
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configparser_test": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.workflow.configparser_test.ConfigParser": {
  "data": {
   "shadows": "ConfigParser"
  },
  "type": "import"
 },
 "pycbc.workflow.configparser_test.add_options_to_section": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      256,
      266
     ]
    },
    "pycbc.workflow.configparser_test.copy": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configparser_test.check_duplicate_options": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      295,
      297,
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configparser_test.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycbc.workflow.configparser_test.interpolate_string": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "len": {
     "line number": [
      156,
      159
     ]
    },
    "pycbc.workflow.configparser_test.re": {
     "line number": [
      149,
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configparser_test.parse_workflow_ini_file": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "open": {
     "line number": [
      45
     ]
    },
    "print": {
     "line number": [
      25,
      37,
      41
     ]
    },
    "pycbc.workflow.configparser_test.read_ini_file": {
     "line number": [
      24
     ]
    },
    "pycbc.workflow.configparser_test.sanity_check_subsections": {
     "line number": [
      40
     ]
    },
    "pycbc.workflow.configparser_test.split_multi_sections": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configparser_test.perform_extended_interpolation": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "pycbc.workflow.configparser_test.copy": {
     "line number": [
      102
     ]
    },
    "pycbc.workflow.configparser_test.interpolate_string": {
     "line number": [
      108,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configparser_test.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pycbc.workflow.configparser_test.read_ini_file": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "configparser.ConfigParser": {
     "line number": [
      67
     ]
    },
    "configparser.ExtendedInterpolation": {
     "line number": [
      68
     ]
    },
    "open": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configparser_test.sanity_check_subsections": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "pycbc.workflow.configparser_test.check_duplicate_options": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configparser_test.split_multi_sections": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "pycbc.workflow.configparser_test.add_options_to_section": {
     "line number": [
      200
     ]
    },
    "pycbc.workflow.configparser_test.copy": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration": {
  "data": {
   "symbols_in_volume": {
    "pycbc.workflow.configuration._really_load": {
     "line number": [
      127
     ]
    },
    "six.moves.http_cookiejar.MozillaCookieJar._really_load": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.workflow.configuration.BeautifulSoup": {
  "data": {
   "shadows": "bs4.BeautifulSoup"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.ConfigParser": {
  "data": {
   "shadows": "six.moves.configparser"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.Cookie": {
  "data": {
   "shadows": "six.moves.http_cookiejar.Cookie"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.LoadError": {
  "data": {
   "shadows": "six.moves.http_cookiejar.LoadError"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser": {
  "data": {
   "lineno": 337
  },
  "type": "class"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.__init__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      396,
      403,
      409,
      417
     ]
    },
    "len": {
     "line number": [
      394,
      401,
      414,
      421
     ]
    },
    "open": {
     "line number": [
      442
     ]
    },
    "pycbc.workflow.configuration.logging": {
     "line number": [
      399,
      406,
      427
     ]
    },
    "pycbc.workflow.configuration.resolve_url": {
     "line number": [
      379
     ]
    },
    "str": {
     "line number": [
      377,
      410,
      416
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.add_config_opts_to_parser": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      1099
     ]
    },
    "str": {
     "line number": [
      1102,
      1106
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.add_options_to_section": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      857,
      864
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.check_duplicate_options": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      914,
      917,
      927
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.from_args": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      475,
      497
     ]
    },
    "classmethod": {
     "line number": [
      447
     ]
    },
    "cls": {
     "line number": [
      501
     ]
    },
    "len": {
     "line number": [
      474,
      487,
      489,
      491
     ]
    },
    "str": {
     "line number": [
      477,
      499
     ]
    },
    "tuple": {
     "line number": [
      479,
      488,
      490,
      495
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.from_cli": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1112
     ]
    },
    "cls": {
     "line number": [
      1128
     ]
    },
    "pycbc.workflow.configuration.logging": {
     "line number": [
      1118
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.get_opt_tag": {
  "data": {
   "lineno": 934
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.get_opt_tags": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": {
    "len": {
     "line number": [
      996,
      1015
     ]
    },
    "pycbc.workflow.configuration.itertools": {
     "line number": [
      997
     ]
    },
    "range": {
     "line number": [
      996
     ]
    },
    "six.moves.configparser.Error": {
     "line number": [
      990,
      993,
      1014,
      1018
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.get_subsections": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      677
     ]
    },
    "len": {
     "line number": [
      667,
      675,
      687
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.has_option_tag": {
  "data": {
   "lineno": 1022
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.has_option_tags": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": {
    "six.moves.configparser.Error": {
     "line number": [
      1075
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.interpolate_exe": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      590
     ]
    },
    "len": {
     "line number": [
      584
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.interpolate_string": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": {
    "len": {
     "line number": [
      759,
      766
     ]
    },
    "print": {
     "line number": [
      764,
      771
     ]
    },
    "pycbc.workflow.configuration.re": {
     "line number": [
      752,
      773
     ]
    },
    "six.moves.configparser.NoOptionError": {
     "line number": [
      763,
      770
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.perform_exe_expansion": {
  "data": {
   "lineno": 526
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.perform_extended_interpolation": {
  "data": {
   "lineno": 694
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.populate_shared_sections": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      826
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.read_ini_file": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.resolve_file_url": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": {
    "len": {
     "line number": [
      651
     ]
    },
    "pycbc.workflow.configuration.os": {
     "line number": [
      653
     ]
    },
    "pycbc.workflow.configuration.resolve_url": {
     "line number": [
      656
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.resolve_urls": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.sanity_check_subsections": {
  "data": {
   "lineno": 870
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.section_to_cli": {
  "data": {
   "lineno": 1078
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.WorkflowConfigParser.split_multi_sections": {
  "data": {
   "lineno": 778
  },
  "type": "function"
 },
 "pycbc.workflow.configuration._really_load": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      121
     ]
    },
    "IOError": {
     "line number": [
      119
     ]
    },
    "pycbc.workflow.configuration.re": {
     "line number": [
      61
     ]
    },
    "pycbc.workflow.configuration.time": {
     "line number": [
      58
     ]
    },
    "six.moves.http_cookiejar.Cookie": {
     "line number": [
      103
     ]
    },
    "six.moves.http_cookiejar.LoadError": {
     "line number": [
      63,
      123
     ]
    },
    "six.moves.http_cookiejar._warn_unhandled_exception": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration._warn_unhandled_exception": {
  "data": {
   "shadows": "six.moves.http_cookiejar._warn_unhandled_exception"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.add_workflow_command_line_group": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.cookielib": {
  "data": {
   "shadows": "six.moves.http_cookiejar"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.distutils.spawn": {
  "data": {
   "shadows": "distutils.spawn"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.ecp_cookie_error": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "pycbc.workflow.configuration.glue.pipeline": {
  "data": {
   "shadows": "glue.pipeline"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.istext": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "chr": {
     "line number": [
      160
     ]
    },
    "float": {
     "line number": [
      173
     ]
    },
    "len": {
     "line number": [
      173,
      173
     ]
    },
    "map": {
     "line number": [
      160
     ]
    },
    "pycbc.workflow.configuration.six": {
     "line number": [
      154,
      161
     ]
    },
    "pycbc.workflow.configuration.string": {
     "line number": [
      162
     ]
    },
    "range": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.resolve_url": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      201,
      230,
      241,
      252,
      256,
      266
     ]
    },
    "bs4.BeautifulSoup": {
     "line number": [
      237
     ]
    },
    "len": {
     "line number": [
      239
     ]
    },
    "open": {
     "line number": [
      243
     ]
    },
    "pycbc.workflow.configuration.ecp_cookie_error": {
     "line number": [
      241
     ]
    },
    "pycbc.workflow.configuration.istext": {
     "line number": [
      236
     ]
    },
    "pycbc.workflow.configuration.os": {
     "line number": [
      185,
      186,
      186,
      190,
      191,
      193,
      194,
      210,
      211,
      254,
      259,
      259,
      260,
      263
     ]
    },
    "pycbc.workflow.configuration.requests": {
     "line number": [
      204,
      206
     ]
    },
    "pycbc.workflow.configuration.shutil": {
     "line number": [
      196,
      198
     ]
    },
    "pycbc.workflow.configuration.stat": {
     "line number": [
      193,
      194,
      263
     ]
    },
    "six.moves.http_cookiejar.MozillaCookieJar": {
     "line number": [
      212
     ]
    },
    "six.moves.urllib.parse.urlparse": {
     "line number": [
      181
     ]
    },
    "str": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.configuration.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pycbc.workflow.configuration.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlparse"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils": {
  "data": {},
  "type": "module"
 },
 "pycbc.workflow.grb_utils.File": {
  "data": {
   "shadows": "pycbc.workflow.core.File"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils.FileList": {
  "data": {
   "shadows": "pycbc.workflow.core.FileList"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils.get_coh_PTF_files": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      97
     ]
    },
    "int": {
     "line number": [
      101,
      102
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      101
     ]
    },
    "pycbc.workflow.core.File": {
     "line number": [
      110,
      121,
      131
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      103,
      113,
      124,
      134
     ]
    },
    "pycbc.workflow.grb_utils.os": {
     "line number": [
      96,
      100
     ]
    },
    "pycbc.workflow.grb_utils.shutil": {
     "line number": [
      107,
      117,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.grb_utils.get_ipn_sky_files": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "pycbc.workflow.core.File": {
     "line number": [
      229
     ]
    },
    "pycbc.workflow.core.resolve_url": {
     "line number": [
      227
     ]
    },
    "six.moves.urllib.parse.urljoin": {
     "line number": [
      228
     ]
    },
    "six.moves.urllib.request.pathname2url": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.grb_utils.get_sky_grid_scale": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "pycbc.workflow.grb_utils.ilwd": {
  "data": {
   "shadows": "glue.ligolw.ilwd"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils.ligolw": {
  "data": {
   "shadows": "glue.ligolw.ligolw"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils.lsctables": {
  "data": {
   "shadows": "glue.ligolw.lsctables"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils.make_exttrig_file": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      192
     ]
    },
    "float": {
     "line number": [
      172,
      173
     ]
    },
    "glue.ligolw.ilwd.ilwdchar": {
     "line number": [
      187,
      189
     ]
    },
    "glue.ligolw.ligolw.Document": {
     "line number": [
      164
     ]
    },
    "glue.ligolw.ligolw.LIGO_LW": {
     "line number": [
      165
     ]
    },
    "glue.ligolw.lsctables.ExtTriggersTable": {
     "line number": [
      166
     ]
    },
    "glue.ligolw.lsctables.New": {
     "line number": [
      166
     ]
    },
    "glue.ligolw.utils.write_filename": {
     "line number": [
      198
     ]
    },
    "hasattr": {
     "line number": [
      179
     ]
    },
    "int": {
     "line number": [
      174
     ]
    },
    "print": {
     "line number": [
      191
     ]
    },
    "pycbc.workflow.core.File": {
     "line number": [
      200
     ]
    },
    "pycbc.workflow.grb_utils.os": {
     "line number": [
      197
     ]
    },
    "pycbc.workflow.grb_utils.sys": {
     "line number": [
      191
     ]
    },
    "setattr": {
     "line number": [
      172,
      173,
      174,
      175,
      181,
      183,
      185
     ]
    },
    "six.moves.urllib.parse.urljoin": {
     "line number": [
      199
     ]
    },
    "six.moves.urllib.request.pathname2url": {
     "line number": [
      199
     ]
    },
    "str": {
     "line number": [
      175,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.grb_utils.make_gating_node": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "condition_strain_class": {
     "line number": [
      272
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      268,
      270,
      277
     ]
    },
    "pycbc.workflow.jobsetup.select_generic_executable": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.grb_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils.pathname2url": {
  "data": {
   "shadows": "six.moves.urllib.request.pathname2url"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils.resolve_url": {
  "data": {
   "shadows": "pycbc.workflow.core.resolve_url"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils.segments": {
  "data": {
   "shadows": "ligo.segments"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils.select_generic_executable": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.select_generic_executable"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils.set_grb_start_end": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "str": {
     "line number": [
      64,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.grb_utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils.urljoin": {
  "data": {
   "shadows": "six.moves.urllib.parse.urljoin"
  },
  "type": "import"
 },
 "pycbc.workflow.grb_utils.utils": {
  "data": {
   "shadows": "glue.ligolw.utils"
  },
  "type": "import"
 },
 "pycbc.workflow.inference_followups": {
  "data": {},
  "type": "module"
 },
 "pycbc.workflow.inference_followups.Executable": {
  "data": {
   "shadows": "pycbc.workflow.core.Executable"
  },
  "type": "import"
 },
 "pycbc.workflow.inference_followups.File": {
  "data": {
   "shadows": "pycbc.workflow.core.File"
  },
  "type": "import"
 },
 "pycbc.workflow.inference_followups.FileList": {
  "data": {
   "shadows": "pycbc.workflow.core.FileList"
  },
  "type": "import"
 },
 "pycbc.workflow.inference_followups.Node": {
  "data": {
   "shadows": "pycbc.workflow.core.Node"
  },
  "type": "import"
 },
 "pycbc.workflow.inference_followups.PlotExecutable": {
  "data": {
   "shadows": "pycbc.workflow.plotting.PlotExecutable"
  },
  "type": "import"
 },
 "pycbc.workflow.inference_followups.Workflow": {
  "data": {
   "shadows": "pycbc.workflow.core.Workflow"
  },
  "type": "import"
 },
 "pycbc.workflow.inference_followups.WorkflowConfigParser": {
  "data": {
   "shadows": "pycbc.workflow.WorkflowConfigParser"
  },
  "type": "import"
 },
 "pycbc.workflow.inference_followups.dax": {
  "data": {
   "shadows": "Pegasus.DAX3"
  },
  "type": "import"
 },
 "pycbc.workflow.inference_followups.excludestr": {
  "data": {
   "shadows": "pycbc.workflow.plotting.excludestr"
  },
  "type": "import"
 },
 "pycbc.workflow.inference_followups.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.workflow.inference_followups.make_inference_1d_posterior_plots": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      292
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      291
     ]
    },
    "pycbc.workflow.inference_followups.make_inference_posterior_plot": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.inference_followups.make_inference_acceptance_rate_plot": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "pycbc.workflow.core.makedir": {
     "line number": [
      359
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.inference_followups.make_inference_inj_plots": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      414
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      408
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      411
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.inference_followups.make_inference_posterior_plot": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "pycbc.workflow.core.makedir": {
     "line number": [
      269
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.inference_followups.make_inference_prior_plot": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "pycbc.workflow.core.makedir": {
     "line number": [
      161
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.inference_followups.make_inference_samples_plot": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "pycbc.workflow.core.makedir": {
     "line number": [
      308
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.inference_followups.make_inference_summary_table": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "pycbc.workflow.core.makedir": {
     "line number": [
      217
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.inference_followups.makedir": {
  "data": {
   "shadows": "pycbc.workflow.core.makedir"
  },
  "type": "import"
 },
 "pycbc.workflow.inference_followups.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycbc.workflow.inference_followups.requirestr": {
  "data": {
   "shadows": "pycbc.workflow.plotting.requirestr"
  },
  "type": "import"
 },
 "pycbc.workflow.inference_followups.setup_foreground_inference": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "Pegasus.DAX3.DAX": {
     "line number": [
      114
     ]
    },
    "Pegasus.DAX3.Dependency": {
     "line number": [
      120
     ]
    },
    "open": {
     "line number": [
      75
     ]
    },
    "pycbc.workflow.core.Executable": {
     "line number": [
      80
     ]
    },
    "pycbc.workflow.core.Workflow.set_job_properties": {
     "line number": [
      116
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      70
     ]
    },
    "pycbc.workflow.inference_followups.logging": {
     "line number": [
      58,
      62,
      63,
      123
     ]
    },
    "pycbc.workflow.pegasus_workflow.File": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.inference_followups.wdax": {
  "data": {
   "shadows": "pycbc.workflow.pegasus_workflow"
  },
  "type": "import"
 },
 "pycbc.workflow.injection": {
  "data": {},
  "type": "module"
 },
 "pycbc.workflow.injection.Executable": {
  "data": {
   "shadows": "pycbc.workflow.core.Executable"
  },
  "type": "import"
 },
 "pycbc.workflow.injection.File": {
  "data": {
   "shadows": "pycbc.workflow.core.File"
  },
  "type": "import"
 },
 "pycbc.workflow.injection.FileList": {
  "data": {
   "shadows": "pycbc.workflow.core.FileList"
  },
  "type": "import"
 },
 "pycbc.workflow.injection.LalappsInspinjExecutable": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.LalappsInspinjExecutable"
  },
  "type": "import"
 },
 "pycbc.workflow.injection.LigolwCBCAlignTotalSpinExecutable": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.LigolwCBCAlignTotalSpinExecutable"
  },
  "type": "import"
 },
 "pycbc.workflow.injection.LigolwCBCJitterSkylocExecutable": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.LigolwCBCJitterSkylocExecutable"
  },
  "type": "import"
 },
 "pycbc.workflow.injection.PycbcDarkVsBrightInjectionsExecutable": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.PycbcDarkVsBrightInjectionsExecutable"
  },
  "type": "import"
 },
 "pycbc.workflow.injection.compute_inj_optimal_snr": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.injection.cut_distant_injections": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.injection.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.workflow.injection.make_analysis_dir": {
  "data": {
   "shadows": "pycbc.workflow.core.make_analysis_dir"
  },
  "type": "import"
 },
 "pycbc.workflow.injection.pathname2url": {
  "data": {
   "shadows": "six.moves.urllib.request.pathname2url"
  },
  "type": "import"
 },
 "pycbc.workflow.injection.resolve_url": {
  "data": {
   "shadows": "pycbc.workflow.core.resolve_url"
  },
  "type": "import"
 },
 "pycbc.workflow.injection.setup_injection_workflow": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      138,
      224
     ]
    },
    "pycbc.workflow.core.File": {
     "line number": [
      162
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      126
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      117
     ]
    },
    "pycbc.workflow.core.resolve_url": {
     "line number": [
      160
     ]
    },
    "pycbc.workflow.injection.logging": {
     "line number": [
      116,
      228
     ]
    },
    "pycbc.workflow.jobsetup.LalappsInspinjExecutable": {
     "line number": [
      147,
      167
     ]
    },
    "pycbc.workflow.jobsetup.LigolwCBCAlignTotalSpinExecutable": {
     "line number": [
      209
     ]
    },
    "pycbc.workflow.jobsetup.LigolwCBCJitterSkylocExecutable": {
     "line number": [
      195
     ]
    },
    "pycbc.workflow.jobsetup.PycbcDarkVsBrightInjectionsExecutable": {
     "line number": [
      179
     ]
    },
    "six.moves.urllib.parse.urljoin": {
     "line number": [
      161
     ]
    },
    "six.moves.urllib.request.pathname2url": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.injection.urljoin": {
  "data": {
   "shadows": "six.moves.urllib.parse.urljoin"
  },
  "type": "import"
 },
 "pycbc.workflow.injection.veto_injections": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      44
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup": {
  "data": {},
  "type": "module"
 },
 "pycbc.workflow.jobsetup.ComputeDurationsExecutable": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.INTERMEDIATE_PRODUCT": {
     "line number": [
      1217
     ]
    },
    "pycbc.workflow.jobsetup.SQLInOutExecutable": {
     "line number": [
      1213
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.ComputeDurationsExecutable.create_node": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1219
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.Executable": {
  "data": {
   "shadows": "pycbc.workflow.core.Executable"
  },
  "type": "import"
 },
 "pycbc.workflow.jobsetup.ExtractToXMLExecutable": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1194
     ]
    },
    "pycbc.workflow.core.Executable.INTERMEDIATE_PRODUCT": {
     "line number": [
      1199
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.ExtractToXMLExecutable.__init__": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1204
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.ExtractToXMLExecutable.create_node": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1207
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.File": {
  "data": {
   "shadows": "pycbc.workflow.core.File"
  },
  "type": "import"
 },
 "pycbc.workflow.jobsetup.FileList": {
  "data": {
   "shadows": "pycbc.workflow.core.FileList"
  },
  "type": "import"
 },
 "pycbc.workflow.jobsetup.GstlalFarfromsnrchisqhistExecutable": {
  "data": {
   "lineno": 1393,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1393
     ]
    },
    "pycbc.workflow.core.Executable.FINAL_RESULT": {
     "line number": [
      1397
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.GstlalFarfromsnrchisqhistExecutable.__init__": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1402
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.GstlalFarfromsnrchisqhistExecutable.create_node": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1406
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.GstlalMarginalizeLikelihoodExecutable": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1375
     ]
    },
    "pycbc.workflow.core.Executable.FINAL_RESULT": {
     "line number": [
      1379
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.GstlalMarginalizeLikelihoodExecutable.__init__": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1384
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.GstlalMarginalizeLikelihoodExecutable.create_node": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1387
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.GstlalPlotBackground": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1459
     ]
    },
    "pycbc.workflow.core.Executable.FINAL_RESULT": {
     "line number": [
      1463
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.GstlalPlotBackground.__init__": {
  "data": {
   "lineno": 1464,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1468
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.GstlalPlotBackground.create_node": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1472
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.GstlalPlotSensitivity": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1421
     ]
    },
    "pycbc.workflow.core.Executable.FINAL_RESULT": {
     "line number": [
      1425
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.GstlalPlotSensitivity.__init__": {
  "data": {
   "lineno": 1426,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1430
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.GstlalPlotSensitivity.create_node": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1434
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.GstlalPlotSummary": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1440
     ]
    },
    "pycbc.workflow.core.Executable.FINAL_RESULT": {
     "line number": [
      1444
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.GstlalPlotSummary.__init__": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1449
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.GstlalPlotSummary.create_node": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1453
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.GstlalSummaryPage": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1477
     ]
    },
    "pycbc.workflow.core.Executable.FINAL_RESULT": {
     "line number": [
      1481
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.GstlalSummaryPage.__init__": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1486
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.GstlalSummaryPage.create_and_add_node": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": {
    "Pegasus.DAX3.Dependency": {
     "line number": [
      1496
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      1489
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.InspinjfindExecutable": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1226
     ]
    },
    "pycbc.workflow.core.Executable.INTERMEDIATE_PRODUCT": {
     "line number": [
      1230
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.InspinjfindExecutable.__init__": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1235
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.InspinjfindExecutable.create_node": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1238
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.JobSegmenter": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": {
    "object": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.JobSegmenter.__init__": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      475,
      490,
      492
     ]
    },
    "abs": {
     "line number": [
      465,
      472,
      486
     ]
    },
    "float": {
     "line number": [
      465,
      483,
      504
     ]
    },
    "int": {
     "line number": [
      482
     ]
    },
    "len": {
     "line number": [
      491
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      471
     ]
    },
    "print": {
     "line number": [
      489
     ]
    },
    "pycbc.workflow.jobsetup.math": {
     "line number": [
      482
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.JobSegmenter.get_data_times_for_job": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      586,
      591
     ]
    },
    "hasattr": {
     "line number": [
      593
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.JobSegmenter.get_data_times_for_job_legacy": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      620
     ]
    },
    "int": {
     "line number": [
      611
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      618
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.JobSegmenter.get_data_times_for_job_workflow": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": {
    "int": {
     "line number": [
      603
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.JobSegmenter.get_valid_times_for_job": {
  "data": {
   "lineno": 520
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.JobSegmenter.get_valid_times_for_job_legacy": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": {
    "int": {
     "line number": [
      563
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      569
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.JobSegmenter.get_valid_times_for_job_workflow": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      553
     ]
    },
    "float": {
     "line number": [
      540
     ]
    },
    "int": {
     "line number": [
      534,
      547,
      548
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      554
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.JobSegmenter.pick_tile_size": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      514,
      516,
      517
     ]
    },
    "enumerate": {
     "line number": [
      515
     ]
    },
    "len": {
     "line number": [
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.LalappsInspinjExecutable": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1500
     ]
    },
    "pycbc.workflow.core.Executable.FINAL_RESULT": {
     "line number": [
      1504
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.LalappsInspinjExecutable.create_node": {
  "data": {
   "lineno": 1505,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1542
     ]
    },
    "float": {
     "line number": [
      1547
     ]
    },
    "int": {
     "line number": [
      1545
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      1508
     ]
    },
    "pycbc.workflow.jobsetup.int_gps_time_to_str": {
     "line number": [
      1554,
      1555
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.LigoLWCombineSegsExecutable": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1008
     ]
    },
    "pycbc.workflow.core.Executable.FINAL_RESULT": {
     "line number": [
      1014
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.LigoLWCombineSegsExecutable.create_node": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1016
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.LigolwAddExecutable": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1024
     ]
    },
    "pycbc.workflow.core.Executable.INTERMEDIATE_PRODUCT": {
     "line number": [
      1027
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.LigolwAddExecutable.__init__": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": {
    "pycbc.workflow.jobsetup.LigolwAddExecutable": {
     "line number": [
      1029
     ]
    },
    "super": {
     "line number": [
      1029
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.LigolwAddExecutable.create_node": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1036
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.LigolwCBCAlignTotalSpinExecutable": {
  "data": {
   "lineno": 1630,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1630
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      1634
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.LigolwCBCAlignTotalSpinExecutable.__init__": {
  "data": {
   "lineno": 1635,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1639
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.LigolwCBCAlignTotalSpinExecutable.create_node": {
  "data": {
   "lineno": 1645,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1649
     ]
    },
    "pycbc.workflow.core.File": {
     "line number": [
      1652
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      1651
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.LigolwCBCJitterSkylocExecutable": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1600
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      1604
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.LigolwCBCJitterSkylocExecutable.__init__": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1609
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.LigolwCBCJitterSkylocExecutable.create_node": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1619
     ]
    },
    "pycbc.workflow.core.File": {
     "line number": [
      1623
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      1621
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.LigolwSSthincaExecutable": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1058
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      1061
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.LigolwSSthincaExecutable.__init__": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": {
    "pycbc.workflow.jobsetup.LigolwSSthincaExecutable": {
     "line number": [
      1066
     ]
    },
    "super": {
     "line number": [
      1066
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.LigolwSSthincaExecutable.create_node": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1075
     ]
    },
    "str": {
     "line number": [
      1081,
      1084
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.Node": {
  "data": {
   "shadows": "pycbc.workflow.core.Node"
  },
  "type": "import"
 },
 "pycbc.workflow.jobsetup.PyCBCInspiralExecutable": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      623
     ]
    },
    "pycbc.workflow.core.Executable.ALL_TRIGGERS": {
     "line number": [
      626
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PyCBCInspiralExecutable.__init__": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": {
    "len": {
     "line number": [
      643
     ]
    },
    "pycbc.workflow.jobsetup.PyCBCInspiralExecutable": {
     "line number": [
      633
     ]
    },
    "super": {
     "line number": [
      633
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PyCBCInspiralExecutable.create_node": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      651
     ]
    },
    "int": {
     "line number": [
      653
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      649
     ]
    },
    "pycbc.workflow.jobsetup.int_gps_time_to_str": {
     "line number": [
      657,
      659,
      660,
      661
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PyCBCInspiralExecutable.get_valid_times": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": {
    "int": {
     "line number": [
      683,
      690,
      697,
      703,
      709,
      712,
      731,
      732
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      751,
      764
     ]
    },
    "range": {
     "line number": [
      734
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PyCBCInspiralExecutable.zero_pad_data_extend": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": {
    "int": {
     "line number": [
      779,
      780
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      783
     ]
    },
    "max": {
     "line number": [
      781
     ]
    },
    "min": {
     "line number": [
      782
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PyCBCMultiInspiralExecutable": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      786
     ]
    },
    "pycbc.workflow.core.Executable.ALL_TRIGGERS": {
     "line number": [
      791
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PyCBCMultiInspiralExecutable.__init__": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": {
    "int": {
     "line number": [
      800,
      801
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      800
     ]
    },
    "pycbc.workflow.jobsetup.PyCBCMultiInspiralExecutable": {
     "line number": [
      797
     ]
    },
    "super": {
     "line number": [
      797
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PyCBCMultiInspiralExecutable.create_node": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      812,
      819,
      828,
      834,
      867
     ]
    },
    "int": {
     "line number": [
      840,
      841
     ]
    },
    "len": {
     "line number": [
      816
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      809
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PyCBCMultiInspiralExecutable.get_valid_times": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": {
    "int": {
     "line number": [
      888,
      890,
      891,
      892,
      897,
      898,
      903
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      907
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PyCBCTmpltbankExecutable": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      909
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      914
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PyCBCTmpltbankExecutable.__init__": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": {
    "pycbc.workflow.jobsetup.PyCBCTmpltbankExecutable": {
     "line number": [
      919
     ]
    },
    "super": {
     "line number": [
      919
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PyCBCTmpltbankExecutable.create_nodata_node": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      972
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PyCBCTmpltbankExecutable.create_node": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      931,
      936
     ]
    },
    "int": {
     "line number": [
      934
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      928
     ]
    },
    "pycbc.workflow.jobsetup.int_gps_time_to_str": {
     "line number": [
      941,
      943
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PyCBCTmpltbankExecutable.get_valid_times": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": {
    "int": {
     "line number": [
      999,
      1000
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      1006
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcCalculateFarExecutable": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.FINAL_RESULT": {
     "line number": [
      1192
     ]
    },
    "pycbc.workflow.jobsetup.SQLInOutExecutable": {
     "line number": [
      1187
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PycbcCalculateLikelihoodExecutable": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1345
     ]
    },
    "pycbc.workflow.core.Executable.FINAL_RESULT": {
     "line number": [
      1351
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PycbcCalculateLikelihoodExecutable.__init__": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1356
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcCalculateLikelihoodExecutable.create_node": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1360
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcCombineLikelihoodExecutable": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1301
     ]
    },
    "pycbc.workflow.core.Executable.INTERMEDIATE_PRODUCT": {
     "line number": [
      1307
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PycbcCombineLikelihoodExecutable.__init__": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1312
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcCombineLikelihoodExecutable.create_node": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1315
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcConditionStrainExecutable": {
  "data": {
   "lineno": 1721,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1721
     ]
    },
    "pycbc.workflow.core.Executable.ALL_TRIGGERS": {
     "line number": [
      1724
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PycbcConditionStrainExecutable.__init__": {
  "data": {
   "lineno": 1725,
   "symbols_in_volume": {
    "pycbc.workflow.jobsetup.PycbcConditionStrainExecutable": {
     "line number": [
      1727
     ]
    },
    "super": {
     "line number": [
      1727
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcConditionStrainExecutable.create_node": {
  "data": {
   "lineno": 1730,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1741,
      1741,
      1748,
      1748
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      1741,
      1748
     ]
    },
    "pycbc.workflow.core.File": {
     "line number": [
      1740,
      1747
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      1733
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcCreateInjectionsExecutable": {
  "data": {
   "lineno": 1755,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1755
     ]
    },
    "pycbc.workflow.core.Executable.ALL_TRIGGERS": {
     "line number": [
      1760
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PycbcCreateInjectionsExecutable.__init__": {
  "data": {
   "lineno": 1761,
   "symbols_in_volume": {
    "pycbc.workflow.jobsetup.PycbcCreateInjectionsExecutable": {
     "line number": [
      1763
     ]
    },
    "super": {
     "line number": [
      1763
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcCreateInjectionsExecutable.create_node": {
  "data": {
   "lineno": 1766,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1791,
      1791
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      1791
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      1794
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcDarkVsBrightInjectionsExecutable": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1558
     ]
    },
    "pycbc.workflow.core.Executable.FINAL_RESULT": {
     "line number": [
      1562
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PycbcDarkVsBrightInjectionsExecutable.__init__": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1567
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcDarkVsBrightInjectionsExecutable.create_node": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1578
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      1576,
      1580
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcGenerateRankingDataExecutable": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1322
     ]
    },
    "pycbc.workflow.core.Executable.INTERMEDIATE_PRODUCT": {
     "line number": [
      1328
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PycbcGenerateRankingDataExecutable.__init__": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1333
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcGenerateRankingDataExecutable.create_node": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1338
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcInferenceExecutable": {
  "data": {
   "lineno": 1804,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1804
     ]
    },
    "pycbc.workflow.core.Executable.ALL_TRIGGERS": {
     "line number": [
      1808
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PycbcInferenceExecutable.__init__": {
  "data": {
   "lineno": 1809,
   "symbols_in_volume": {
    "pycbc.workflow.jobsetup.PycbcInferenceExecutable": {
     "line number": [
      1811
     ]
    },
    "super": {
     "line number": [
      1811
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcInferenceExecutable.create_node": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": {
    "Pegasus.DAX3.File": {
     "line number": [
      1877
     ]
    },
    "Pegasus.DAX3.Link.OUTPUT": {
     "line number": [
      1878
     ]
    },
    "int": {
     "line number": [
      1847,
      1847
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      1847
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      1858
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcPickleHorizonDistsExecutable": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1279
     ]
    },
    "pycbc.workflow.core.Executable.INTERMEDIATE_PRODUCT": {
     "line number": [
      1286
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PycbcPickleHorizonDistsExecutable.__init__": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.__init__": {
     "line number": [
      1291
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcPickleHorizonDistsExecutable.create_node": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1294
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcSplitBankExecutable": {
  "data": {
   "lineno": 1671,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1671
     ]
    },
    "pycbc.workflow.core.Executable.ALL_TRIGGERS": {
     "line number": [
      1675
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PycbcSplitBankExecutable.__init__": {
  "data": {
   "lineno": 1676,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1680
     ]
    },
    "pycbc.workflow.jobsetup.PycbcSplitBankExecutable": {
     "line number": [
      1678
     ]
    },
    "super": {
     "line number": [
      1678
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcSplitBankExecutable.create_node": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": {
    "pycbc.workflow.core.File": {
     "line number": [
      1709
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      1702
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      1698
     ]
    },
    "range": {
     "line number": [
      1703
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcSplitBankXmlExecutable": {
  "data": {
   "lineno": 1716,
   "symbols_in_volume": {
    "pycbc.workflow.jobsetup.PycbcSplitBankExecutable": {
     "line number": [
      1716
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PycbcSplitInspinjExecutable": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1244
     ]
    },
    "pycbc.workflow.core.Executable.INTERMEDIATE_PRODUCT": {
     "line number": [
      1248
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PycbcSplitInspinjExecutable.__init__": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1253
     ]
    },
    "pycbc.workflow.jobsetup.PycbcSplitInspinjExecutable": {
     "line number": [
      1251
     ]
    },
    "super": {
     "line number": [
      1251
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcSplitInspinjExecutable.create_node": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": {
    "pycbc.workflow.core.File": {
     "line number": [
      1271
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      1266
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      1257
     ]
    },
    "range": {
     "line number": [
      1267
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcSqliteSimplifyExecutable": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1099
     ]
    },
    "pycbc.workflow.core.Executable.INTERMEDIATE_PRODUCT": {
     "line number": [
      1102
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PycbcSqliteSimplifyExecutable.__init__": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": {
    "pycbc.workflow.jobsetup.PycbcSqliteSimplifyExecutable": {
     "line number": [
      1106
     ]
    },
    "super": {
     "line number": [
      1106
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcSqliteSimplifyExecutable.create_node": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1113
     ]
    },
    "enumerate": {
     "line number": [
      1133
     ]
    },
    "len": {
     "line number": [
      1116,
      1121,
      1143
     ]
    },
    "pycbc.workflow.core.Executable.INTERMEDIATE_PRODUCT": {
     "line number": [
      1129
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      1123
     ]
    },
    "pycbc.workflow.core.Node": {
     "line number": [
      1111,
      1126,
      1144
     ]
    },
    "pycbc.workflow.jobsetup.logging": {
     "line number": [
      1152
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.PycbcTimeslidesExecutable": {
  "data": {
   "lineno": 1659,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1659
     ]
    },
    "pycbc.workflow.core.Executable.FINAL_RESULT": {
     "line number": [
      1663
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.PycbcTimeslidesExecutable.create_node": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1665
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.SQLInOutExecutable": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      1163
     ]
    },
    "pycbc.workflow.core.Executable.ALL_TRIGGERS": {
     "line number": [
      1168
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.jobsetup.SQLInOutExecutable.__init__": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": {
    "pycbc.workflow.jobsetup.SQLInOutExecutable": {
     "line number": [
      1172
     ]
    },
    "super": {
     "line number": [
      1172
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.SQLInOutExecutable.create_node": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": {
    "pycbc.workflow.core.Node": {
     "line number": [
      1181
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.dax": {
  "data": {
   "shadows": "Pegasus.DAX3"
  },
  "type": "import"
 },
 "pycbc.workflow.jobsetup.identify_needed_data": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      429
     ]
    },
    "abs": {
     "line number": [
      417,
      446
     ]
    },
    "len": {
     "line number": [
      428,
      428
     ]
    },
    "ligo.segments.segment": {
     "line number": [
      440,
      442
     ]
    },
    "max": {
     "line number": [
      433,
      435
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.int_gps_time_to_str": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      49,
      55,
      58
     ]
    },
    "abs": {
     "line number": [
      48
     ]
    },
    "float": {
     "line number": [
      45
     ]
    },
    "int": {
     "line number": [
      43,
      47
     ]
    },
    "isinstance": {
     "line number": [
      43,
      45,
      51
     ]
    },
    "pycbc.workflow.jobsetup.lal": {
     "line number": [
      51
     ]
    },
    "str": {
     "line number": [
      44,
      49,
      50,
      53,
      55
     ]
    },
    "type": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.lal": {
  "data": {
   "shadows": "lal"
  },
  "type": "import"
 },
 "pycbc.workflow.jobsetup.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.workflow.jobsetup.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pycbc.workflow.jobsetup.multi_ifo_coherent_job_setup": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "list": {
     "line number": [
      348,
      360
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.workflow.jobsetup.segments": {
  "data": {
   "shadows": "ligo.segments"
  },
  "type": "import"
 },
 "pycbc.workflow.jobsetup.select_generic_executable": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      174
     ]
    },
    "NotImplementedError": {
     "line number": [
      176
     ]
    },
    "pycbc.workflow.jobsetup.os": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.select_matchedfilter_class": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      113
     ]
    },
    "NotImplementedError": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.select_tmpltbank_class": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      84
     ]
    },
    "NotImplementedError": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.jobsetup.sngl_ifo_job_setup": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      240,
      276,
      288
     ]
    },
    "enumerate": {
     "line number": [
      302
     ]
    },
    "len": {
     "line number": [
      303
     ]
    },
    "pycbc.workflow.jobsetup.JobSegmenter": {
     "line number": [
      252
     ]
    },
    "pycbc.workflow.jobsetup.identify_needed_data": {
     "line number": [
      244
     ]
    },
    "range": {
     "line number": [
      256
     ]
    },
    "sorted": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.matched_filter": {
  "data": {},
  "type": "module"
 },
 "pycbc.workflow.matched_filter.FileList": {
  "data": {
   "shadows": "pycbc.workflow.core.FileList"
  },
  "type": "import"
 },
 "pycbc.workflow.matched_filter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.workflow.matched_filter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.workflow.matched_filter.make_analysis_dir": {
  "data": {
   "shadows": "pycbc.workflow.core.make_analysis_dir"
  },
  "type": "import"
 },
 "pycbc.workflow.matched_filter.multi_ifo_coherent_job_setup": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.multi_ifo_coherent_job_setup"
  },
  "type": "import"
 },
 "pycbc.workflow.matched_filter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.workflow.matched_filter.radians": {
  "data": {
   "shadows": "math.radians"
  },
  "type": "import"
 },
 "pycbc.workflow.matched_filter.select_matchedfilter_class": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.select_matchedfilter_class"
  },
  "type": "import"
 },
 "pycbc.workflow.matched_filter.select_tmpltbank_class": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.select_tmpltbank_class"
  },
  "type": "import"
 },
 "pycbc.workflow.matched_filter.setup_matchedfltr_dax_generated": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "exe_class": {
     "line number": [
      221
     ]
    },
    "link_exe_instance": {
     "line number": [
      226
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      214
     ]
    },
    "pycbc.workflow.jobsetup.select_matchedfilter_class": {
     "line number": [
      197
     ]
    },
    "pycbc.workflow.jobsetup.select_tmpltbank_class": {
     "line number": [
      209
     ]
    },
    "pycbc.workflow.jobsetup.sngl_ifo_job_setup": {
     "line number": [
      231
     ]
    },
    "pycbc.workflow.matched_filter.logging": {
     "line number": [
      220
     ]
    },
    "pycbc.workflow.matched_filter.os": {
     "line number": [
      195,
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.matched_filter.setup_matchedfltr_dax_generated_multi": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      342
     ]
    },
    "enumerate": {
     "line number": [
      331
     ]
    },
    "exe_class": {
     "line number": [
      298,
      321
     ]
    },
    "float": {
     "line number": [
      300,
      302
     ]
    },
    "int": {
     "line number": [
      326,
      329
     ]
    },
    "math.radians": {
     "line number": [
      300,
      302
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      293
     ]
    },
    "pycbc.workflow.jobsetup.multi_ifo_coherent_job_setup": {
     "line number": [
      332,
      337
     ]
    },
    "pycbc.workflow.jobsetup.select_matchedfilter_class": {
     "line number": [
      298
     ]
    },
    "pycbc.workflow.matched_filter.logging": {
     "line number": [
      295,
      327
     ]
    },
    "pycbc.workflow.matched_filter.os": {
     "line number": [
      290
     ]
    },
    "sorted": {
     "line number": [
      289
     ]
    },
    "str": {
     "line number": [
      300,
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.matched_filter.setup_matchedfltr_workflow": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      110,
      115,
      135
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      85
     ]
    },
    "pycbc.workflow.matched_filter.logging": {
     "line number": [
      84,
      94,
      101,
      127,
      137
     ]
    },
    "pycbc.workflow.matched_filter.setup_matchedfltr_dax_generated": {
     "line number": [
      120
     ]
    },
    "pycbc.workflow.matched_filter.setup_matchedfltr_dax_generated_multi": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.matched_filter.sngl_ifo_job_setup": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.sngl_ifo_job_setup"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "pycbc.workflow.minifollowups.Executable": {
  "data": {
   "shadows": "pycbc.workflow.core.Executable"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.File": {
  "data": {
   "shadows": "pycbc.workflow.core.File"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.FileList": {
  "data": {
   "shadows": "pycbc.workflow.core.FileList"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.Node": {
  "data": {
   "shadows": "pycbc.workflow.core.Node"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.PlotExecutable": {
  "data": {
   "shadows": "pycbc.workflow.plotting.PlotExecutable"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.PlotQScanExecutable": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.minifollowups.SingleTemplateExecutable": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.minifollowups.SingleTimeFreqExecutable": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.minifollowups.Workflow": {
  "data": {
   "shadows": "pycbc.workflow.core.Workflow"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.create_noop_node": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": {
    "pycbc.workflow.pegasus_workflow.Executable": {
     "line number": [
      814
     ]
    },
    "pycbc.workflow.pegasus_workflow.Node": {
     "line number": [
      817
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.minifollowups.dax": {
  "data": {
   "shadows": "Pegasus.DAX3"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.distutils.spawn": {
  "data": {
   "shadows": "distutils.spawn"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.excludestr": {
  "data": {
   "shadows": "pycbc.workflow.plotting.excludestr"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.grouper": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      35
     ]
    },
    "itertools.izip_longest": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.minifollowups.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.make_coinc_info": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      540
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      538
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      541
     ]
    },
    "str": {
     "line number": [
      547,
      549
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.minifollowups.make_inj_info": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      523
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      521
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      524
     ]
    },
    "str": {
     "line number": [
      527,
      528
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.minifollowups.make_plot_waveform_plot": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      496
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      492
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      498
     ]
    },
    "pycbc.workflow.plotting.excludestr": {
     "line number": [
      495
     ]
    },
    "pycbc.workflow.plotting.requirestr": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.minifollowups.make_qscan_plot": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      668
     ]
    },
    "int": {
     "line number": [
      656,
      657,
      671,
      681,
      682
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      636
     ]
    },
    "pycbc.workflow.minifollowups.PlotQScanExecutable": {
     "line number": [
      639
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.minifollowups.make_single_template_plots": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      418
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      414
     ]
    },
    "pycbc.workflow.minifollowups.SingleTemplateExecutable": {
     "line number": [
      424
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      462
     ]
    },
    "pycbc.workflow.plotting.excludestr": {
     "line number": [
      417
     ]
    },
    "pycbc.workflow.plotting.requirestr": {
     "line number": [
      416
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.minifollowups.make_singles_timefreq": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      770,
      781,
      791
     ]
    },
    "abs": {
     "line number": [
      776,
      780
     ]
    },
    "int": {
     "line number": [
      755,
      756,
      773,
      793,
      794
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      733
     ]
    },
    "pycbc.workflow.minifollowups.SingleTimeFreqExecutable": {
     "line number": [
      736
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.minifollowups.make_sngl_ifo": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      564
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      562
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      565
     ]
    },
    "str": {
     "line number": [
      569
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.minifollowups.make_trigger_timeseries": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      584
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      580
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      586
     ]
    },
    "pycbc.workflow.plotting.excludestr": {
     "line number": [
      583
     ]
    },
    "pycbc.workflow.plotting.requirestr": {
     "line number": [
      582
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.minifollowups.makedir": {
  "data": {
   "shadows": "pycbc.workflow.core.makedir"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.pathname2url": {
  "data": {
   "shadows": "six.moves.urllib.request.pathname2url"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.requirestr": {
  "data": {
   "shadows": "pycbc.workflow.plotting.requirestr"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.setup_foreground_minifollowups": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "Pegasus.DAX3.DAX": {
     "line number": [
      122
     ]
    },
    "Pegasus.DAX3.Dependency": {
     "line number": [
      126
     ]
    },
    "open": {
     "line number": [
      84
     ]
    },
    "pycbc.workflow.core.Executable": {
     "line number": [
      89
     ]
    },
    "pycbc.workflow.core.Workflow.set_job_properties": {
     "line number": [
      124
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      80
     ]
    },
    "pycbc.workflow.minifollowups.logging": {
     "line number": [
      72,
      75,
      76,
      128
     ]
    },
    "pycbc.workflow.pegasus_workflow.File": {
     "line number": [
      86
     ]
    },
    "six.moves.urllib.parse.urljoin": {
     "line number": [
      87
     ]
    },
    "six.moves.urllib.request.pathname2url": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.minifollowups.setup_injection_minifollowups": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "Pegasus.DAX3.DAX": {
     "line number": [
      324
     ]
    },
    "Pegasus.DAX3.Dependency": {
     "line number": [
      328
     ]
    },
    "open": {
     "line number": [
      285
     ]
    },
    "pycbc.workflow.core.Executable": {
     "line number": [
      290
     ]
    },
    "pycbc.workflow.core.Workflow.set_job_properties": {
     "line number": [
      326
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      281
     ]
    },
    "pycbc.workflow.minifollowups.logging": {
     "line number": [
      273,
      276,
      277,
      330
     ]
    },
    "pycbc.workflow.pegasus_workflow.File": {
     "line number": [
      287
     ]
    },
    "six.moves.urllib.parse.urljoin": {
     "line number": [
      288
     ]
    },
    "six.moves.urllib.request.pathname2url": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.minifollowups.setup_single_det_minifollowups": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "Pegasus.DAX3.DAX": {
     "line number": [
      230
     ]
    },
    "Pegasus.DAX3.Dependency": {
     "line number": [
      235
     ]
    },
    "open": {
     "line number": [
      181
     ]
    },
    "pycbc.workflow.core.Executable": {
     "line number": [
      186
     ]
    },
    "pycbc.workflow.core.Workflow.set_job_properties": {
     "line number": [
      233
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      175
     ]
    },
    "pycbc.workflow.minifollowups.logging": {
     "line number": [
      165,
      170,
      171,
      237
     ]
    },
    "pycbc.workflow.pegasus_workflow.File": {
     "line number": [
      183
     ]
    },
    "six.moves.urllib.parse.urljoin": {
     "line number": [
      184
     ]
    },
    "six.moves.urllib.request.pathname2url": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.minifollowups.urljoin": {
  "data": {
   "shadows": "six.moves.urllib.parse.urljoin"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.wdax": {
  "data": {
   "shadows": "pycbc.workflow.pegasus_workflow"
  },
  "type": "import"
 },
 "pycbc.workflow.minifollowups.zip_longest": {
  "data": {
   "shadows": "itertools.izip_longest"
  },
  "type": "import"
 },
 "pycbc.workflow.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pycbc.workflow.pegasus_workflow": {
  "data": {},
  "type": "module"
 },
 "pycbc.workflow.pegasus_workflow.DataStorage": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "object": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.pegasus_workflow.DataStorage.__init__": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.DataStorage._dax_repr": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.DataStorage._set_as_node_input": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.DataStorage._set_as_node_output": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Database": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "pycbc.workflow.pegasus_workflow.DataStorage": {
     "line number": [
      498
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.pegasus_workflow.Executable": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "id": {
     "line number": [
      71
     ]
    },
    "pycbc.workflow.pegasus_workflow.ProfileShortcuts": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.pegasus_workflow.Executable.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "Pegasus.DAX3.Executable": {
     "line number": [
      80,
      84
     ]
    },
    "pycbc.workflow.pegasus_workflow.Executable": {
     "line number": [
      75,
      76
     ]
    },
    "pycbc.workflow.pegasus_workflow.os": {
     "line number": [
      81,
      85
     ]
    },
    "str": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Executable.add_pfn": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Executable.add_profile": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "Pegasus.DAX3.DuplicateError": {
     "line number": [
      109
     ]
    },
    "Pegasus.DAX3.Profile": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Executable.clear_pfns": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Executable.get_pfn": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Executable.insert_into_dax": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "Pegasus.DAX3.addExecutable": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.File": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "Pegasus.DAX3.File": {
     "line number": [
      435
     ]
    },
    "pycbc.workflow.pegasus_workflow.DataStorage": {
     "line number": [
      435
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.pegasus_workflow.File.__init__": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": {
    "Pegasus.DAX3.File.__init__": {
     "line number": [
      446
     ]
    },
    "pycbc.workflow.pegasus_workflow.DataStorage": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.File._dax_repr": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.File._set_as_input_of": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "Pegasus.DAX3.Link.INPUT": {
     "line number": [
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.File._set_as_output_of": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": {
    "Pegasus.DAX3.Link.OUTPUT": {
     "line number": [
      465
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.File.dax_repr": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "property": {
     "line number": [
      452
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.File.from_path": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      483
     ]
    },
    "pycbc.workflow.pegasus_workflow.File": {
     "line number": [
      494
     ]
    },
    "pycbc.workflow.pegasus_workflow.os": {
     "line number": [
      489,
      490,
      494
     ]
    },
    "six.moves.urllib.parse.urljoin": {
     "line number": [
      491
     ]
    },
    "six.moves.urllib.parse.urlsplit": {
     "line number": [
      486
     ]
    },
    "six.moves.urllib.request.pathname2url": {
     "line number": [
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.File.has_pfn": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": {
    "Pegasus.DAX3.PFN": {
     "line number": [
      477
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.File.insert_into_dax": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "Pegasus.DAX3.addFile": {
     "line number": [
      481
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.File.output_map_str": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "pycbc.workflow.pegasus_workflow.ProfileShortcuts": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.pegasus_workflow.Node.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "Pegasus.DAX3.Job": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node._add_input": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node._add_output": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node._finalize": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "len": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node.add_arg": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      137
     ]
    },
    "str": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node.add_input_arg": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node.add_input_list_opt": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node.add_input_opt": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node.add_list_opt": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node.add_opt": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      156
     ]
    },
    "str": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node.add_output_arg": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node.add_output_list_opt": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node.add_output_opt": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node.add_profile": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "Pegasus.DAX3.DuplicateError": {
     "line number": [
      238
     ]
    },
    "Pegasus.DAX3.Profile": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node.add_raw_arg": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      147
     ]
    },
    "str": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Node.new_output_file_opt": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "pycbc.workflow.pegasus_workflow.File": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.ProfileShortcuts": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "object": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_category": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_memory": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_num_cpus": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_num_retries": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_priority": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_storage": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.ProfileShortcuts.set_universe": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.TransformationCatalog": {
  "data": {
   "shadows": "Pegasus.catalogs.transformation_catalog.TransformationCatalog"
  },
  "type": "import"
 },
 "pycbc.workflow.pegasus_workflow.Workflow": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "object": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.pegasus_workflow.Workflow.__add__": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      370
     ]
    },
    "isinstance": {
     "line number": [
      365,
      367
     ]
    },
    "pycbc.workflow.pegasus_workflow.Node": {
     "line number": [
      365
     ]
    },
    "pycbc.workflow.pegasus_workflow.Workflow": {
     "line number": [
      367
     ]
    },
    "type": {
     "line number": [
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Workflow.__init__": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "Pegasus.DAX3.ADAG": {
     "line number": [
      256
     ]
    },
    "Pegasus.DAX3.DAX": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Workflow._make_root_dependency": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "Pegasus.DAX3.Dependency": {
     "line number": [
      284
     ]
    },
    "root_path": {
     "line number": [
      276,
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Workflow._make_root_dependency.root_path": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Workflow.add_node": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "Pegasus.DAX3.Dependency": {
     "line number": [
      337
     ]
    },
    "ValueError": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Workflow.add_workflow": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "pycbc.workflow.pegasus_workflow.os": {
     "line number": [
      305,
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.Workflow.save": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "Pegasus.catalogs.transformation_catalog.TransformationCatalog": {
     "line number": [
      398
     ]
    },
    "open": {
     "line number": [
      408
     ]
    },
    "pycbc.workflow.pegasus_workflow.os": {
     "line number": [
      393,
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.pegasus_workflow.dax": {
  "data": {
   "shadows": "Pegasus.DAX3"
  },
  "type": "import"
 },
 "pycbc.workflow.pegasus_workflow.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.workflow.pegasus_workflow.pathname2url": {
  "data": {
   "shadows": "six.moves.urllib.request.pathname2url"
  },
  "type": "import"
 },
 "pycbc.workflow.pegasus_workflow.urljoin": {
  "data": {
   "shadows": "six.moves.urllib.parse.urljoin"
  },
  "type": "import"
 },
 "pycbc.workflow.pegasus_workflow.urlsplit": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlsplit"
  },
  "type": "import"
 },
 "pycbc.workflow.plotting": {
  "data": {},
  "type": "module"
 },
 "pycbc.workflow.plotting.Executable": {
  "data": {
   "shadows": "pycbc.workflow.core.Executable"
  },
  "type": "import"
 },
 "pycbc.workflow.plotting.File": {
  "data": {
   "shadows": "pycbc.workflow.core.File"
  },
  "type": "import"
 },
 "pycbc.workflow.plotting.FileList": {
  "data": {
   "shadows": "pycbc.workflow.core.FileList"
  },
  "type": "import"
 },
 "pycbc.workflow.plotting.PlotExecutable": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      46
     ]
    },
    "pycbc.workflow.core.Executable.FINAL_RESULT": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.plotting.PlotExecutable.create_node": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable.create_node": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.dax": {
  "data": {
   "shadows": "Pegasus.DAX3"
  },
  "type": "import"
 },
 "pycbc.workflow.plotting.excludestr": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      35
     ]
    },
    "len": {
     "line number": [
      36
     ]
    },
    "list": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_binned_hist": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      447
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      444
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      449
     ]
    },
    "pycbc.workflow.plotting.excludestr": {
     "line number": [
      446
     ]
    },
    "pycbc.workflow.plotting.requirestr": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_coinc_snrchi_plot": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      180
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      177
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      182
     ]
    },
    "pycbc.workflow.plotting.excludestr": {
     "line number": [
      179
     ]
    },
    "pycbc.workflow.plotting.requirestr": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_foreground_table": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "pycbc.workflow.core.makedir": {
     "line number": [
      145
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_foundmissed_plot": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      334
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      331
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      336
     ]
    },
    "pycbc.workflow.plotting.excludestr": {
     "line number": [
      333
     ]
    },
    "pycbc.workflow.plotting.requirestr": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_gating_plot": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "pycbc.workflow.core.makedir": {
     "line number": [
      117
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_ifar_plot": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "pycbc.workflow.core.makedir": {
     "line number": [
      295
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_inj_table": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "pycbc.workflow.core.makedir": {
     "line number": [
      196
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_range_plot": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      79
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      76
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      81
     ]
    },
    "pycbc.workflow.plotting.excludestr": {
     "line number": [
      78
     ]
    },
    "pycbc.workflow.plotting.requirestr": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_results_web_page": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "Pegasus.DAX3.Dependency": {
     "line number": [
      412
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      403
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_seg_plot": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "list": {
     "line number": [
      266
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      268
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_seg_table": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "list": {
     "line number": [
      216,
      217
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      219
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_segments_plot": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "pycbc.workflow.core.makedir": {
     "line number": [
      108
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_sensitivity_plot": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      164
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      161
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      166
     ]
    },
    "pycbc.workflow.plotting.excludestr": {
     "line number": [
      163
     ]
    },
    "pycbc.workflow.plotting.requirestr": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_single_hist": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      423
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      420
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      425
     ]
    },
    "pycbc.workflow.plotting.excludestr": {
     "line number": [
      422
     ]
    },
    "pycbc.workflow.plotting.requirestr": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_singles_plot": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      470
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      467
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      473
     ]
    },
    "pycbc.workflow.plotting.excludestr": {
     "line number": [
      469
     ]
    },
    "pycbc.workflow.plotting.requirestr": {
     "line number": [
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_snrchi_plot": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "pycbc.workflow.core.FileList": {
     "line number": [
      311
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      308
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      314
     ]
    },
    "pycbc.workflow.plotting.excludestr": {
     "line number": [
      310
     ]
    },
    "pycbc.workflow.plotting.requirestr": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_snrifar_plot": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": {
    "pycbc.workflow.core.makedir": {
     "line number": [
      382
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_snrratehist_plot": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "pycbc.workflow.core.makedir": {
     "line number": [
      357
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_spectrum_plot": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "len": {
     "line number": [
      100
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      92
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_template_plot": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "pycbc.workflow.core.makedir": {
     "line number": [
      60
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_throughput_plot": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "pycbc.workflow.core.makedir": {
     "line number": [
      126
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.make_veto_table": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "pycbc.workflow.core.File": {
     "line number": [
      247
     ]
    },
    "pycbc.workflow.core.makedir": {
     "line number": [
      254
     ]
    },
    "pycbc.workflow.plotting.PlotExecutable": {
     "line number": [
      255
     ]
    },
    "six.moves.urllib.parse.urljoin": {
     "line number": [
      246
     ]
    },
    "six.moves.urllib.request.pathname2url": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.makedir": {
  "data": {
   "shadows": "pycbc.workflow.core.makedir"
  },
  "type": "import"
 },
 "pycbc.workflow.plotting.pathname2url": {
  "data": {
   "shadows": "six.moves.urllib.request.pathname2url"
  },
  "type": "import"
 },
 "pycbc.workflow.plotting.requirestr": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pycbc.workflow.plotting.urljoin": {
  "data": {
   "shadows": "six.moves.urllib.parse.urljoin"
  },
  "type": "import"
 },
 "pycbc.workflow.psd": {
  "data": {},
  "type": "module"
 },
 "pycbc.workflow.psd.AvgPSDExecutable": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      101
     ]
    },
    "pycbc.workflow.core.Executable.FINAL_RESULT": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.psd.CalcPSDExecutable": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      25
     ]
    },
    "pycbc.workflow.core.Executable.ALL_TRIGGERS": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.psd.Executable": {
  "data": {
   "shadows": "pycbc.workflow.core.Executable"
  },
  "type": "import"
 },
 "pycbc.workflow.psd.File": {
  "data": {
   "shadows": "pycbc.workflow.core.File"
  },
  "type": "import"
 },
 "pycbc.workflow.psd.FileList": {
  "data": {
   "shadows": "pycbc.workflow.core.FileList"
  },
  "type": "import"
 },
 "pycbc.workflow.psd.MergePSDFiles": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "pycbc.workflow.core.Executable": {
     "line number": [
      29
     ]
    },
    "pycbc.workflow.core.Executable.MERGED_TRIGGERS": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "pycbc.workflow.psd.SegFile": {
  "data": {
   "shadows": "pycbc.workflow.core.SegFile"
  },
  "type": "import"
 },
 "pycbc.workflow.psd.__all__": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "pycbc.workflow.psd.chunks": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "int": {
     "line number": [
      35
     ]
    },
    "len": {
     "line number": [
      35
     ]
    },
    "six.moves.range": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.psd.make_analysis_dir": {
  "data": {
   "shadows": "pycbc.workflow.core.make_analysis_dir"
  },
  "type": "import"
 },
 "pycbc.workflow.psd.make_average_psd": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "len": {
     "line number": [
      112
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      106
     ]
    },
    "pycbc.workflow.psd.AvgPSDExecutable": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.psd.make_psd_file": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      85
     ]
    },
    "pycbc.workflow.psd.CalcPSDExecutable": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.psd.merge_psds": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      41
     ]
    },
    "pycbc.workflow.psd.MergePSDFiles": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.psd.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "pycbc.workflow.psd.segmentlist": {
  "data": {
   "shadows": "ligo.segments.segmentlist"
  },
  "type": "import"
 },
 "pycbc.workflow.psd.setup_psd_calculate": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      68
     ]
    },
    "frozenset": {
     "line number": [
      63
     ]
    },
    "int": {
     "line number": [
      56
     ]
    },
    "ligo.segments.segmentlist": {
     "line number": [
      63,
      70
     ]
    },
    "list": {
     "line number": [
      65
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      67
     ]
    },
    "pycbc.workflow.core.SegFile.from_segment_list": {
     "line number": [
      69
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      53
     ]
    },
    "pycbc.workflow.psd.chunks": {
     "line number": [
      65
     ]
    },
    "pycbc.workflow.psd.make_psd_file": {
     "line number": [
      74
     ]
    },
    "pycbc.workflow.psd.merge_psds": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.psdfiles": {
  "data": {},
  "type": "module"
 },
 "pycbc.workflow.psdfiles.ConfigParser": {
  "data": {
   "shadows": "six.moves.configparser"
  },
  "type": "import"
 },
 "pycbc.workflow.psdfiles.File": {
  "data": {
   "shadows": "pycbc.workflow.core.File"
  },
  "type": "import"
 },
 "pycbc.workflow.psdfiles.FileList": {
  "data": {
   "shadows": "pycbc.workflow.core.FileList"
  },
  "type": "import"
 },
 "pycbc.workflow.psdfiles.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.workflow.psdfiles.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.workflow.psdfiles.make_analysis_dir": {
  "data": {
   "shadows": "pycbc.workflow.core.make_analysis_dir"
  },
  "type": "import"
 },
 "pycbc.workflow.psdfiles.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.workflow.psdfiles.pathname2url": {
  "data": {
   "shadows": "six.moves.urllib.request.pathname2url"
  },
  "type": "import"
 },
 "pycbc.workflow.psdfiles.resolve_url": {
  "data": {
   "shadows": "pycbc.workflow.core.resolve_url"
  },
  "type": "import"
 },
 "pycbc.workflow.psdfiles.setup_psd_pregenerated": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "pycbc.workflow.core.File": {
     "line number": [
      126,
      139
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      114
     ]
    },
    "pycbc.workflow.core.resolve_url": {
     "line number": [
      124,
      137
     ]
    },
    "pycbc.workflow.psdfiles.logging": {
     "line number": [
      147
     ]
    },
    "six.moves.configparser.Error": {
     "line number": [
      130,
      144
     ]
    },
    "six.moves.urllib.parse.urljoin": {
     "line number": [
      125,
      138
     ]
    },
    "six.moves.urllib.request.pathname2url": {
     "line number": [
      125,
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.psdfiles.setup_psd_workflow": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      86
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      78
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      68
     ]
    },
    "pycbc.workflow.psdfiles.logging": {
     "line number": [
      67,
      81,
      88
     ]
    },
    "pycbc.workflow.psdfiles.setup_psd_pregenerated": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.psdfiles.urljoin": {
  "data": {
   "shadows": "six.moves.urllib.parse.urljoin"
  },
  "type": "import"
 },
 "pycbc.workflow.splittable": {
  "data": {},
  "type": "module"
 },
 "pycbc.workflow.splittable.FileList": {
  "data": {
   "shadows": "pycbc.workflow.core.FileList"
  },
  "type": "import"
 },
 "pycbc.workflow.splittable.PycbcSplitBankExecutable": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.PycbcSplitBankExecutable"
  },
  "type": "import"
 },
 "pycbc.workflow.splittable.PycbcSplitBankXmlExecutable": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.PycbcSplitBankXmlExecutable"
  },
  "type": "import"
 },
 "pycbc.workflow.splittable.PycbcSplitInspinjExecutable": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.PycbcSplitInspinjExecutable"
  },
  "type": "import"
 },
 "pycbc.workflow.splittable.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.workflow.splittable.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.workflow.splittable.make_analysis_dir": {
  "data": {
   "shadows": "pycbc.workflow.core.make_analysis_dir"
  },
  "type": "import"
 },
 "pycbc.workflow.splittable.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.workflow.splittable.select_splitfilejob_instance": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      70
     ]
    },
    "pycbc.workflow.jobsetup.PycbcSplitBankExecutable": {
     "line number": [
      62
     ]
    },
    "pycbc.workflow.jobsetup.PycbcSplitBankXmlExecutable": {
     "line number": [
      64
     ]
    },
    "pycbc.workflow.jobsetup.PycbcSplitInspinjExecutable": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.splittable.setup_splittable_dax_generated": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      145
     ]
    },
    "abs": {
     "line number": [
      155
     ]
    },
    "exe_class": {
     "line number": [
      168
     ]
    },
    "float": {
     "line number": [
      155
     ]
    },
    "input": {
     "line number": [
      171,
      172
     ]
    },
    "int": {
     "line number": [
      146,
      150,
      153,
      156
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      165
     ]
    },
    "pycbc.workflow.splittable.os": {
     "line number": [
      160
     ]
    },
    "pycbc.workflow.splittable.select_splitfilejob_instance": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.splittable.setup_splittable_workflow": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      116
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      99
     ]
    },
    "pycbc.workflow.splittable.logging": {
     "line number": [
      98,
      106,
      118
     ]
    },
    "pycbc.workflow.splittable.setup_splittable_dax_generated": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.tmpltbank": {
  "data": {},
  "type": "module"
 },
 "pycbc.workflow.tmpltbank.ConfigParser": {
  "data": {
   "shadows": "six.moves.configparser"
  },
  "type": "import"
 },
 "pycbc.workflow.tmpltbank.File": {
  "data": {
   "shadows": "pycbc.workflow.core.File"
  },
  "type": "import"
 },
 "pycbc.workflow.tmpltbank.FileList": {
  "data": {
   "shadows": "pycbc.workflow.core.FileList"
  },
  "type": "import"
 },
 "pycbc.workflow.tmpltbank.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycbc.workflow.tmpltbank.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycbc.workflow.tmpltbank.make_analysis_dir": {
  "data": {
   "shadows": "pycbc.workflow.core.make_analysis_dir"
  },
  "type": "import"
 },
 "pycbc.workflow.tmpltbank.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycbc.workflow.tmpltbank.pathname2url": {
  "data": {
   "shadows": "six.moves.urllib.request.pathname2url"
  },
  "type": "import"
 },
 "pycbc.workflow.tmpltbank.pycbc": {
  "data": {
   "shadows": "pycbc"
  },
  "type": "import"
 },
 "pycbc.workflow.tmpltbank.resolve_url": {
  "data": {
   "shadows": "pycbc.workflow.core.resolve_url"
  },
  "type": "import"
 },
 "pycbc.workflow.tmpltbank.select_matchedfilter_class": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.select_matchedfilter_class"
  },
  "type": "import"
 },
 "pycbc.workflow.tmpltbank.select_tmpltbank_class": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.select_tmpltbank_class"
  },
  "type": "import"
 },
 "pycbc.workflow.tmpltbank.setup_tmpltbank_dax_generated": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "exe_class": {
     "line number": [
      237
     ]
    },
    "link_exe_instance": {
     "line number": [
      247
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      231
     ]
    },
    "pycbc.workflow.jobsetup.select_matchedfilter_class": {
     "line number": [
      226
     ]
    },
    "pycbc.workflow.jobsetup.select_tmpltbank_class": {
     "line number": [
      210
     ]
    },
    "pycbc.workflow.jobsetup.sngl_ifo_job_setup": {
     "line number": [
      251
     ]
    },
    "pycbc.workflow.tmpltbank.os": {
     "line number": [
      208,
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.tmpltbank.setup_tmpltbank_pregenerated": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "pycbc.workflow.core.File": {
     "line number": [
      371,
      384
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      360
     ]
    },
    "pycbc.workflow.core.resolve_url": {
     "line number": [
      369,
      382
     ]
    },
    "six.moves.configparser.Error": {
     "line number": [
      375,
      389,
      398
     ]
    },
    "six.moves.urllib.parse.urljoin": {
     "line number": [
      370,
      383
     ]
    },
    "six.moves.urllib.request.pathname2url": {
     "line number": [
      370,
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.tmpltbank.setup_tmpltbank_without_frames": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      303
     ]
    },
    "exe_instance": {
     "line number": [
      323
     ]
    },
    "pycbc.workflow.core.FileList": {
     "line number": [
      308
     ]
    },
    "pycbc.workflow.jobsetup.select_tmpltbank_class": {
     "line number": [
      306
     ]
    },
    "pycbc.workflow.tmpltbank.os": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.tmpltbank.setup_tmpltbank_workflow": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      154
     ]
    },
    "ValueError": {
     "line number": [
      105,
      110,
      133
     ]
    },
    "pycbc.workflow.core.make_analysis_dir": {
     "line number": [
      75
     ]
    },
    "pycbc.workflow.tmpltbank.logging": {
     "line number": [
      74,
      85,
      89,
      96,
      120,
      125,
      143,
      156
     ]
    },
    "pycbc.workflow.tmpltbank.pycbc": {
     "line number": [
      148
     ]
    },
    "pycbc.workflow.tmpltbank.setup_tmpltbank_dax_generated": {
     "line number": [
      114
     ]
    },
    "pycbc.workflow.tmpltbank.setup_tmpltbank_pregenerated": {
     "line number": [
      86
     ]
    },
    "pycbc.workflow.tmpltbank.setup_tmpltbank_without_frames": {
     "line number": [
      121,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "pycbc.workflow.tmpltbank.sngl_ifo_job_setup": {
  "data": {
   "shadows": "pycbc.workflow.jobsetup.sngl_ifo_job_setup"
  },
  "type": "import"
 },
 "pycbc.workflow.tmpltbank.urljoin": {
  "data": {
   "shadows": "six.moves.urllib.parse.urljoin"
  },
  "type": "import"
 }
}