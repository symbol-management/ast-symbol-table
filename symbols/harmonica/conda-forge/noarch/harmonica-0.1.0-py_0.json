{
 "harmonica": {
  "data": {},
  "type": "module"
 },
 "harmonica.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "harmonica._version": {
  "data": {},
  "type": "module"
 },
 "harmonica._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "harmonica._version.json",
    "harmonica._version.version_json"
   ]
  },
  "type": "function"
 },
 "harmonica._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "harmonica._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "harmonica.constants": {
  "data": {},
  "type": "module"
 },
 "harmonica.constants.GRAVITATIONAL_CONST": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "harmonica.datasets": {
  "data": {},
  "type": "module"
 },
 "harmonica.datasets.sample_data": {
  "data": {
   "symbols_in_volume": [
    "harmonica.datasets.sample_data.REGISTRY",
    "harmonica.datasets.sample_data.pkg_resources",
    "harmonica.datasets.sample_data.pooch"
   ]
  },
  "type": "module"
 },
 "harmonica.datasets.sample_data.REGISTRY": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "harmonica.datasets.sample_data.fetch_britain_magnetic": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "harmonica.datasets.sample_data.REGISTRY",
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "harmonica.datasets.sample_data.fetch_geoid_earth": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "harmonica.datasets.sample_data.REGISTRY",
    "harmonica.datasets.sample_data.pooch",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "harmonica.datasets.sample_data.fetch_gravity_earth": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "harmonica.datasets.sample_data.REGISTRY",
    "harmonica.datasets.sample_data.pooch",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "harmonica.datasets.sample_data.fetch_south_africa_gravity": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "harmonica.datasets.sample_data.REGISTRY",
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "harmonica.datasets.sample_data.fetch_topography_earth": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "harmonica.datasets.sample_data.REGISTRY",
    "harmonica.datasets.sample_data.pooch",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "harmonica.datasets.sample_data.locate": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "harmonica.datasets.sample_data.REGISTRY",
    "str"
   ]
  },
  "type": "function"
 },
 "harmonica.datasets.sample_data.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "harmonica.datasets.sample_data.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "harmonica.datasets.sample_data.pooch": {
  "data": {
   "shadows": "pooch"
  },
  "type": "import"
 },
 "harmonica.datasets.sample_data.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "harmonica.equivalent_layer": {
  "data": {},
  "type": "module"
 },
 "harmonica.equivalent_layer.harmonic": {
  "data": {},
  "type": "module"
 },
 "harmonica.equivalent_layer.harmonic.EQLHarmonic": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "verde.base.BaseGridder"
   ]
  },
  "type": "class"
 },
 "harmonica.equivalent_layer.harmonic.EQLHarmonic.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "harmonica.equivalent_layer.harmonic.EQLHarmonic.fit": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "verde.base.check_fit_input",
    "verde.base.least_squares",
    "verde.base.n_1d_arrays",
    "verde.get_region"
   ]
  },
  "type": "function"
 },
 "harmonica.equivalent_layer.harmonic.EQLHarmonic.jacobian": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "harmonica.equivalent_layer.harmonic.jacobian_numba",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "harmonica.equivalent_layer.harmonic.EQLHarmonic.predict": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "harmonica.equivalent_layer.harmonic.predict_numba",
    "numpy.atleast_1d",
    "numpy.broadcast",
    "numpy.zeros",
    "sklearn.utils.validation.check_is_fitted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "harmonica.equivalent_layer.harmonic.check_is_fitted": {
  "data": {
   "shadows": "sklearn.utils.validation.check_is_fitted"
  },
  "type": "import"
 },
 "harmonica.equivalent_layer.harmonic.greens_func": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "distance_cartesian",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "harmonica.equivalent_layer.harmonic.jacobian_numba": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "harmonica.equivalent_layer.harmonic.greens_func",
    "numba.jit",
    "range"
   ]
  },
  "type": "function"
 },
 "harmonica.equivalent_layer.harmonic.jit": {
  "data": {
   "shadows": "numba.jit"
  },
  "type": "import"
 },
 "harmonica.equivalent_layer.harmonic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "harmonica.equivalent_layer.harmonic.predict_numba": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "harmonica.equivalent_layer.harmonic.greens_func",
    "numba.jit",
    "range"
   ]
  },
  "type": "function"
 },
 "harmonica.equivalent_layer.harmonic.vd": {
  "data": {
   "shadows": "verde"
  },
  "type": "import"
 },
 "harmonica.equivalent_layer.harmonic.vdb": {
  "data": {
   "shadows": "verde.base"
  },
  "type": "import"
 },
 "harmonica.forward": {
  "data": {},
  "type": "module"
 },
 "harmonica.forward.point_mass": {
  "data": {},
  "type": "module"
 },
 "harmonica.forward.point_mass.jit": {
  "data": {
   "shadows": "numba.jit"
  },
  "type": "import"
 },
 "harmonica.forward.point_mass.jit_point_mass_cartesian": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "kernel",
    "numba.jit",
    "range"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.point_mass.jit_point_mass_spherical": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "kernel",
    "numba.jit",
    "numpy.cos",
    "numpy.radians",
    "numpy.sin",
    "range"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.point_mass.kernel_g_easting_cartesian": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "distance_cartesian",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.point_mass.kernel_g_northing_cartesian": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "distance_cartesian",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.point_mass.kernel_g_z_cartesian": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "distance_cartesian",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.point_mass.kernel_g_z_spherical": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "distance_spherical_core",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.point_mass.kernel_potential_cartesian": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "distance_cartesian",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.point_mass.kernel_potential_spherical": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "distance_spherical_core",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.point_mass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "harmonica.forward.point_mass.point_mass_gravity": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "check_coordinate_system",
    "numpy.atleast_1d",
    "numpy.broadcast",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.tesseroid": {
  "data": {},
  "type": "module"
 },
 "harmonica.forward.tesseroid.DISTANCE_SIZE_RATII": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "harmonica.forward.tesseroid.GLQ_DEGREES": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "harmonica.forward.tesseroid.MAX_DISCRETIZATIONS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "harmonica.forward.tesseroid.STACK_SIZE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "harmonica.forward.tesseroid._adaptive_discretization": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "OverflowError",
    "harmonica.forward.tesseroid._distance_tesseroid_point",
    "harmonica.forward.tesseroid._split_tesseroid",
    "harmonica.forward.tesseroid._tesseroid_dimensions",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.tesseroid._check_points_outside_tesseroids": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "ValueError",
    "numpy.argwhere",
    "numpy.logical_and",
    "numpy.logical_or",
    "numpy.newaxis",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.tesseroid._check_tesseroids": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "ValueError",
    "harmonica.forward.tesseroid._longitude_continuity",
    "numpy.logical_or",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.tesseroid._distance_tesseroid_point": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "distance_spherical",
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.tesseroid._longitude_continuity": {
  "data": {
   "lineno": 739
  },
  "type": "function"
 },
 "harmonica.forward.tesseroid._split_tesseroid": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "numba.jit",
    "range"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.tesseroid._tesseroid_dimensions": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "numba.jit",
    "numpy.arccos",
    "numpy.cos",
    "numpy.radians",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.tesseroid.glq_nodes_weights": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.leggauss",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.tesseroid.jit": {
  "data": {
   "shadows": "numba.jit"
  },
  "type": "import"
 },
 "harmonica.forward.tesseroid.jit_tesseroid_gravity": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "harmonica.forward.tesseroid._adaptive_discretization",
    "harmonica.forward.tesseroid.tesseroids_to_point_masses",
    "jit_point_mass_spherical",
    "numba.jit",
    "range"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.tesseroid.leggauss": {
  "data": {
   "shadows": "numpy.polynomial.legendre.leggauss"
  },
  "type": "import"
 },
 "harmonica.forward.tesseroid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "harmonica.forward.tesseroid.tesseroid_gravity": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "harmonica.forward.tesseroid.DISTANCE_SIZE_RATII",
    "harmonica.forward.tesseroid.GLQ_DEGREES",
    "harmonica.forward.tesseroid.MAX_DISCRETIZATIONS",
    "harmonica.forward.tesseroid.STACK_SIZE",
    "harmonica.forward.tesseroid._check_points_outside_tesseroids",
    "harmonica.forward.tesseroid._check_tesseroids",
    "harmonica.forward.tesseroid.glq_nodes_weights",
    "harmonica.forward.tesseroid.jit_tesseroid_gravity",
    "numpy.atleast_1d",
    "numpy.atleast_2d",
    "numpy.broadcast",
    "numpy.empty",
    "numpy.float64",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.tesseroid.tesseroids_to_point_masses": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "len",
    "numba.jit",
    "numpy.cos",
    "numpy.radians",
    "range"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.utils": {
  "data": {},
  "type": "module"
 },
 "harmonica.forward.utils.check_coordinate_system": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.utils.distance": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "harmonica.forward.utils.check_coordinate_system",
    "harmonica.forward.utils.distance_cartesian",
    "harmonica.forward.utils.distance_spherical"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.utils.distance_cartesian": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numba.jit",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.utils.distance_spherical": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "harmonica.forward.utils.distance_spherical_core",
    "numba.jit",
    "numpy.cos",
    "numpy.radians",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.utils.distance_spherical_core": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numba.jit",
    "numpy.cos",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "harmonica.forward.utils.jit": {
  "data": {
   "shadows": "numba.jit"
  },
  "type": "import"
 },
 "harmonica.forward.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "harmonica.gravity_corrections": {
  "data": {},
  "type": "module"
 },
 "harmonica.gravity_corrections.bouguer_correction": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.full",
    "numpy.logical_not",
    "numpy.nan",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "harmonica.gravity_corrections.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "harmonica.io": {
  "data": {},
  "type": "module"
 },
 "harmonica.io._check_gdf_integrity": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "IOError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "harmonica.io._read_gdf_file": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "IOError",
    "harmonica.io._check_gdf_integrity",
    "len",
    "numpy.loadtxt",
    "open"
   ]
  },
  "type": "function"
 },
 "harmonica.io.load_icgem_gdf": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "IOError",
    "dict",
    "float",
    "harmonica.io._read_gdf_file",
    "int",
    "numpy.allclose",
    "numpy.full",
    "xarray.Dataset",
    "zip"
   ]
  },
  "type": "function"
 },
 "harmonica.io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "harmonica.io.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "harmonica.isostasy": {
  "data": {},
  "type": "module"
 },
 "harmonica.isostasy.isostasy_airy": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.full",
    "numpy.logical_not",
    "numpy.nan",
    "str",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "harmonica.isostasy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "harmonica.isostasy.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "harmonica.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "harmonica.synthetic": {
  "data": {},
  "type": "module"
 },
 "harmonica.test": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "__name__",
    "harmonica.pytest"
   ]
  },
  "type": "function"
 },
 "harmonica.tests": {
  "data": {},
  "type": "module"
 },
 "harmonica.tests.test_eql_harmonic": {
  "data": {},
  "type": "module"
 },
 "harmonica.tests.test_eql_harmonic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "harmonica.tests.test_eql_harmonic.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "harmonica.tests.test_eql_harmonic.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "harmonica.tests.test_eql_harmonic.test_eql_harmonic": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "EQLHarmonic",
    "numpy.testing.assert_allclose",
    "point_mass_gravity",
    "verde.datasets.CheckerBoard",
    "verde.grid_coordinates"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_eql_harmonic.test_eql_harmonic_custom_points": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "EQLHarmonic",
    "numpy.testing.assert_allclose",
    "point_mass_gravity",
    "tuple",
    "verde.datasets.CheckerBoard",
    "verde.grid_coordinates"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_eql_harmonic.test_eql_harmonic_jacobian": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "bool",
    "harmonica.tests.test_eql_harmonic.pytest",
    "jacobian_numba",
    "numpy.diag_indices",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "verde.base.n_1d_arrays",
    "verde.grid_coordinates"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_eql_harmonic.test_eql_harmonic_small_data": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "EQLHarmonic",
    "numpy.testing.assert_allclose",
    "point_mass_gravity",
    "verde.datasets.CheckerBoard",
    "verde.grid_coordinates"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_eql_harmonic.vd": {
  "data": {
   "shadows": "verde"
  },
  "type": "import"
 },
 "harmonica.tests.test_eql_harmonic.vdb": {
  "data": {
   "shadows": "verde.base"
  },
  "type": "import"
 },
 "harmonica.tests.test_forward_utils": {
  "data": {},
  "type": "module"
 },
 "harmonica.tests.test_forward_utils.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "harmonica.tests.test_forward_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "harmonica.tests.test_forward_utils.test_check_coordinate_system": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "check_coordinate_system",
    "harmonica.tests.test_forward_utils.pytest"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_forward_utils.test_distance": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "distance",
    "harmonica.tests.test_forward_utils.pytest",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_forward_utils.test_distance_invalid_coordinate_system": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "distance",
    "harmonica.tests.test_forward_utils.pytest"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_gravity_corrections": {
  "data": {},
  "type": "module"
 },
 "harmonica.tests.test_gravity_corrections.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "harmonica.tests.test_gravity_corrections.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "harmonica.tests.test_gravity_corrections.test_bouguer_correction": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bouguer_correction",
    "numpy.linspace",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_gravity_corrections.test_bouguer_correction_xarray": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bouguer_correction",
    "isinstance",
    "numpy.arange",
    "numpy.linspace",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_gravity_corrections.test_bouguer_correction_zero_topo": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bouguer_correction",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_gravity_corrections.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "harmonica.tests.test_icgem": {
  "data": {
   "symbols_in_volume": [
    "harmonica.tests.test_icgem.MODULE_DIR",
    "harmonica.tests.test_icgem.os"
   ]
  },
  "type": "module"
 },
 "harmonica.tests.test_icgem.MODULE_DIR": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "harmonica.tests.test_icgem.TEST_DATA_DIR": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "harmonica.tests.test_icgem.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "harmonica.tests.test_icgem.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "harmonica.tests.test_icgem.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "harmonica.tests.test_icgem.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "harmonica.tests.test_icgem.test_corrupt_area": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "IOError",
    "float",
    "harmonica.tests.test_icgem.TEST_DATA_DIR",
    "harmonica.tests.test_icgem.os",
    "load_icgem_gdf",
    "open",
    "pytest.raises",
    "str"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_icgem.test_corrupt_shape": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "IOError",
    "harmonica.tests.test_icgem.TEST_DATA_DIR",
    "harmonica.tests.test_icgem.os",
    "int",
    "load_icgem_gdf",
    "open",
    "pytest.raises",
    "str"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_icgem.test_diff_attrs_vs_cols": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "IOError",
    "harmonica.tests.test_icgem.TEST_DATA_DIR",
    "harmonica.tests.test_icgem.os",
    "load_icgem_gdf",
    "open",
    "pytest.raises",
    "str"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_icgem.test_empty_file": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "IOError",
    "UserWarning",
    "len",
    "load_icgem_gdf",
    "open",
    "pytest.raises",
    "str"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_icgem.test_load_icgem_gdf": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "harmonica.tests.test_icgem.TEST_DATA_DIR",
    "harmonica.tests.test_icgem.os",
    "load_icgem_gdf",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_icgem.test_load_icgem_gdf_usecols": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "harmonica.tests.test_icgem.TEST_DATA_DIR",
    "harmonica.tests.test_icgem.os",
    "len",
    "load_icgem_gdf",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_icgem.test_load_icgem_gdf_with_height": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "harmonica.tests.test_icgem.TEST_DATA_DIR",
    "harmonica.tests.test_icgem.os",
    "load_icgem_gdf",
    "numpy.arange",
    "numpy.array",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_icgem.test_missing_area": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "IOError",
    "harmonica.tests.test_icgem.TEST_DATA_DIR",
    "harmonica.tests.test_icgem.os",
    "load_icgem_gdf",
    "open",
    "pytest.raises",
    "str"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_icgem.test_missing_attribute": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "IOError",
    "harmonica.tests.test_icgem.TEST_DATA_DIR",
    "harmonica.tests.test_icgem.os",
    "load_icgem_gdf",
    "open",
    "pytest.raises",
    "str"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_icgem.test_missing_cols_names": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "IOError",
    "harmonica.tests.test_icgem.TEST_DATA_DIR",
    "harmonica.tests.test_icgem.os",
    "load_icgem_gdf",
    "open",
    "pytest.raises",
    "str"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_icgem.test_missing_empty_line": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "IOError",
    "harmonica.tests.test_icgem.TEST_DATA_DIR",
    "harmonica.tests.test_icgem.os",
    "load_icgem_gdf",
    "open",
    "pytest.raises",
    "str"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_icgem.test_missing_lat_lon_attributes": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "IOError",
    "harmonica.tests.test_icgem.TEST_DATA_DIR",
    "harmonica.tests.test_icgem.os",
    "load_icgem_gdf",
    "open",
    "pytest.raises",
    "str"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_icgem.test_missing_shape": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "IOError",
    "harmonica.tests.test_icgem.TEST_DATA_DIR",
    "harmonica.tests.test_icgem.os",
    "load_icgem_gdf",
    "open",
    "pytest.raises",
    "str"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_icgem.test_missing_size": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "IOError",
    "harmonica.tests.test_icgem.TEST_DATA_DIR",
    "harmonica.tests.test_icgem.os",
    "load_icgem_gdf",
    "open",
    "pytest.raises",
    "str"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_icgem.test_missing_units": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "IOError",
    "harmonica.tests.test_icgem.TEST_DATA_DIR",
    "harmonica.tests.test_icgem.os",
    "load_icgem_gdf",
    "open",
    "pytest.raises",
    "str"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_isostasy": {
  "data": {},
  "type": "module"
 },
 "harmonica.tests.test_isostasy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "harmonica.tests.test_isostasy.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "harmonica.tests.test_isostasy.test_isostasy_airy": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "isostasy_airy",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_isostasy.test_isostasy_airy_dataarray": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "isinstance",
    "isostasy_airy",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_equal",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_isostasy.test_isostasy_airy_zero_topography": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "isostasy_airy",
    "numpy.float64",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_isostasy.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "harmonica.tests.test_point_mass": {
  "data": {},
  "type": "module"
 },
 "harmonica.tests.test_point_mass.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "harmonica.tests.test_point_mass.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "harmonica.tests.test_point_mass.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "harmonica.tests.test_point_mass.test_g_easting_relative_error": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "distance_cartesian",
    "harmonica.tests.test_point_mass.pytest",
    "numpy.abs",
    "numpy.array",
    "numpy.testing.assert_array_less",
    "numpy.zeros",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_g_easting_sign": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "harmonica.tests.test_point_mass.pytest",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_g_easting_symmetry": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "harmonica.tests.test_point_mass.pytest",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_g_northing_relative_error": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "distance_cartesian",
    "harmonica.tests.test_point_mass.pytest",
    "numpy.abs",
    "numpy.array",
    "numpy.testing.assert_array_less",
    "numpy.zeros",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_g_northing_sign": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "harmonica.tests.test_point_mass.pytest",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_g_northing_symmetry": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "harmonica.tests.test_point_mass.pytest",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_g_z_relative_error": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "distance_cartesian",
    "harmonica.tests.test_point_mass.pytest",
    "numpy.abs",
    "numpy.array",
    "numpy.testing.assert_array_less",
    "numpy.zeros",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_g_z_sign": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "harmonica.tests.test_point_mass.pytest",
    "numpy.array",
    "numpy.sign",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_g_z_symmetry": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "harmonica.tests.test_point_mass.pytest",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_invalid_coordinate_system": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "harmonica.tests.test_point_mass.pytest",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_invalid_field": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "harmonica.tests.test_point_mass.pytest",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_invalid_masses_array": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "harmonica.tests.test_point_mass.pytest",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_point_mass_on_origin": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "harmonica.tests.test_point_mass.pytest",
    "numpy.linspace",
    "numpy.logspace",
    "numpy.meshgrid",
    "numpy.testing.assert_allclose",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_point_mass_potential_on_equator": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "abs",
    "harmonica.tests.test_point_mass.pytest",
    "numpy.array",
    "numpy.linspace",
    "numpy.radians",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_point_mass_potential_on_same_meridian": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "abs",
    "harmonica.tests.test_point_mass.pytest",
    "numpy.array",
    "numpy.linspace",
    "numpy.radians",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_point_mass_same_radial_direction": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "harmonica.tests.test_point_mass.pytest",
    "numpy.array",
    "numpy.linspace",
    "numpy.logspace",
    "numpy.testing.assert_allclose",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_potential_cartesian_known_values": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "harmonica.tests.test_point_mass.pytest",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_point_mass.test_potential_cartesian_symmetry": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "harmonica.tests.test_point_mass.pytest",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "point_mass_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_prism": {
  "data": {},
  "type": "module"
 },
 "harmonica.tests.test_prism.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "harmonica.tests.test_prism.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "harmonica.tests.test_prism.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "harmonica.tests.test_prism.test_disable_checks": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "harmonica.tests.test_prism.pytest",
    "numpy.testing.assert_allclose",
    "prism_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_prism.test_g_z_symmetry_inside": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.sign",
    "numpy.testing.assert_allclose",
    "prism_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_prism.test_g_z_symmetry_outside": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "harmonica.tests.test_prism.pytest",
    "numpy.sign",
    "numpy.testing.assert_allclose",
    "prism_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_prism.test_invalid_density_array": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "harmonica.tests.test_prism.pytest",
    "prism_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_prism.test_invalid_field": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "harmonica.tests.test_prism.pytest",
    "prism_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_prism.test_invalid_prisms": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "_check_prisms",
    "harmonica.tests.test_prism.pytest",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_prism.test_potential_field_symmetry": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "harmonica.tests.test_prism.pytest",
    "numpy.testing.assert_allclose",
    "prism_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_prism.test_prism_against_infinite_slab": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "abs",
    "bouguer_correction",
    "enumerate",
    "harmonica.tests.test_prism.pytest",
    "numpy.array",
    "numpy.logspace",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "prism_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_prism.test_safe_atan2": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "harmonica.tests.test_prism.pytest",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "safe_atan2"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_prism.test_safe_log": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "harmonica.tests.test_prism.pytest",
    "numpy.linspace",
    "numpy.log",
    "numpy.testing.assert_allclose",
    "safe_log"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_sample_data": {
  "data": {},
  "type": "module"
 },
 "harmonica.tests.test_sample_data.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "harmonica.tests.test_sample_data.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "harmonica.tests.test_sample_data.test_britain_magnetic": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "fetch_britain_magnetic",
    "numpy.testing.assert_allclose",
    "set"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_sample_data.test_datasets_locate": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "harmonica.tests.test_sample_data.os",
    "locate"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_sample_data.test_geoid_earth": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "fetch_geoid_earth",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_sample_data.test_gravity_earth": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "fetch_gravity_earth",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_sample_data.test_south_africa_gravity": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "fetch_south_africa_gravity",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_sample_data.test_topography_earth": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "fetch_topography_earth",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_synthetic_surveys": {
  "data": {},
  "type": "module"
 },
 "harmonica.tests.test_synthetic_surveys.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "harmonica.tests.test_synthetic_surveys.test_airborne_survey": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "airborne_survey",
    "numpy.testing.assert_allclose",
    "set"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_synthetic_surveys.test_data_region_airborne_survey": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "airborne_survey",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_synthetic_surveys.test_data_region_ground_survey": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ground_survey",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_synthetic_surveys.test_ground_survey": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ground_survey",
    "numpy.testing.assert_allclose",
    "set"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_synthetic_surveys.test_scale_airborne_survey": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "airborne_survey",
    "numpy.testing.assert_allclose",
    "set"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_synthetic_surveys.test_scale_ground_survey": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ground_survey",
    "numpy.testing.assert_allclose",
    "set"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid": {
  "data": {},
  "type": "module"
 },
 "harmonica.tests.test_tesseroid.ACCURACY_THRESHOLD": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "harmonica.tests.test_tesseroid.boule": {
  "data": {
   "shadows": "boule"
  },
  "type": "import"
 },
 "harmonica.tests.test_tesseroid.grid_coordinates": {
  "data": {
   "shadows": "verde.grid_coordinates"
  },
  "type": "import"
 },
 "harmonica.tests.test_tesseroid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "harmonica.tests.test_tesseroid.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "harmonica.tests.test_tesseroid.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "harmonica.tests.test_tesseroid.spherical_shell_analytical": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_adaptive_discretization_on_radii": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "_adaptive_discretization",
    "len",
    "numpy.array",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_adaptive_discretization_vs_distance_size_ratio": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "_adaptive_discretization",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.linspace",
    "range"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_disable_checks": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "harmonica.tests.test_tesseroid.pytest",
    "numpy.testing.assert_allclose",
    "tesseroid_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_distance_tesseroid_point": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "_distance_tesseroid_point",
    "abs",
    "harmonica.tests.test_tesseroid.boule",
    "harmonica.tests.test_tesseroid.pytest",
    "numpy.array",
    "numpy.radians",
    "numpy.sin",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_invalid_density_array": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "harmonica.tests.test_tesseroid.pytest",
    "tesseroid_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_invalid_distance_size_ratii": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "harmonica.tests.test_tesseroid.pytest",
    "tesseroid_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_invalid_field": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "harmonica.tests.test_tesseroid.pytest",
    "tesseroid_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_invalid_tesseroid": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "_check_tesseroids",
    "harmonica.tests.test_tesseroid.pytest",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_longitude_continuity": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "_longitude_continuity",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_longitude_continuity_equivalent_tesseroids": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "harmonica.tests.test_tesseroid.boule",
    "numpy.testing.assert_allclose",
    "tesseroid_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_point_inside_tesseroid": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "_check_points_outside_tesseroids",
    "harmonica.tests.test_tesseroid.pytest",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_single_tesseroid": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "harmonica.tests.test_tesseroid.boule",
    "harmonica.tests.test_tesseroid.pytest",
    "numpy.array",
    "tesseroid_gravity"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_spherical_shell_three_dim_adaptive_discret": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "harmonica.tests.test_tesseroid.ACCURACY_THRESHOLD",
    "harmonica.tests.test_tesseroid.boule",
    "harmonica.tests.test_tesseroid.spherical_shell_analytical",
    "numpy.linspace",
    "numpy.logspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "tesseroid_gravity",
    "zip"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_spherical_shell_two_dim_adaptive_discret": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "harmonica.tests.test_tesseroid.ACCURACY_THRESHOLD",
    "harmonica.tests.test_tesseroid.boule",
    "harmonica.tests.test_tesseroid.spherical_shell_analytical",
    "numpy.linspace",
    "numpy.logspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "tesseroid_gravity",
    "verde.grid_coordinates",
    "zip"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_split_tesseroid": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "_split_tesseroid",
    "harmonica.tests.test_tesseroid.pytest",
    "numpy.all",
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_split_tesseroid_only_horizontal": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "_split_tesseroid",
    "harmonica.tests.test_tesseroid.pytest",
    "numpy.all",
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_split_tesseroid_only_latitude": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "_split_tesseroid",
    "harmonica.tests.test_tesseroid.pytest",
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_split_tesseroid_only_longitude": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "_split_tesseroid",
    "harmonica.tests.test_tesseroid.pytest",
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_split_tesseroid_only_radius": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "_split_tesseroid",
    "harmonica.tests.test_tesseroid.pytest",
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_stack_overflow_on_adaptive_discretization": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "OverflowError",
    "_adaptive_discretization",
    "harmonica.tests.test_tesseroid.pytest",
    "numpy.array",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_tesseroid_dimensions": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "_tesseroid_dimensions",
    "abs",
    "harmonica.tests.test_tesseroid.pytest",
    "numpy.array",
    "numpy.radians",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_two_dimensional_adaptive_discretization": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "_adaptive_discretization",
    "numpy.array",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.test_tesseroid.test_valid_tesseroid": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "_check_tesseroids",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.utils": {
  "data": {},
  "type": "module"
 },
 "harmonica.tests.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "harmonica.tests.utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "harmonica.tests.utils.require_numba": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "bool",
    "harmonica.tests.utils.os"
   ]
  },
  "type": "function"
 },
 "harmonica.tests.utils.require_numba.function_wrapper": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "function",
    "harmonica.tests.utils.pytest"
   ]
  },
  "type": "function"
 },
 "harmonica.version": {
  "data": {
   "symbols_in_volume": [
    "get_versions"
   ]
  },
  "type": "module"
 },
 "harmonica.version.full_version": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "harmonica.version.git_revision": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 }
}