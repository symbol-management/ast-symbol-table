{
 "pymcr": {
  "data": {},
  "type": "module"
 },
 "pymcr.condition": {
  "data": {},
  "type": "module"
 },
 "pymcr.condition.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pymcr.condition._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pymcr.condition.standardize": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "pymcr.constraints": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.A",
    "pymcr.constraints.A_transform",
    "pymcr.constraints.ConstraintCutAbove",
    "pymcr.constraints.constr",
    "pymcr.constraints.out"
   ]
  },
  "type": "module"
 },
 "pymcr.constraints.A": {
  "data": {
   "lineno": 721
  },
  "type": "constant"
 },
 "pymcr.constraints.A_transform": {
  "data": {
   "lineno": 722
  },
  "type": "constant"
 },
 "pymcr.constraints.Constraint": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "pymcr.constraints.Constraint.transform": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintCompressAbove": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "pymcr.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "pymcr.constraints.ConstraintCompressAbove.__init__": {
  "data": {
   "lineno": 581
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintCompressAbove.transform": {
  "data": {
   "lineno": 586
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintCompressBelow": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "pymcr.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "pymcr.constraints.ConstraintCompressBelow.__init__": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintCompressBelow.transform": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintCumsumNonneg": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pymcr.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "pymcr.constraints.ConstraintCumsumNonneg.__init__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintCumsumNonneg.transform": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.cumsum"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintCutAbove": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "pymcr.constraints._CutExclude"
   ]
  },
  "type": "class"
 },
 "pymcr.constraints.ConstraintCutAbove.__init__": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintCutAbove.transform": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "numpy.alltrue"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintCutBelow": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "pymcr.constraints._CutExclude"
   ]
  },
  "type": "class"
 },
 "pymcr.constraints.ConstraintCutBelow.__init__": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintCutBelow.transform": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "numpy.alltrue"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintNonneg": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pymcr.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "pymcr.constraints.ConstraintNonneg.__init__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintNonneg.transform": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintNorm": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "pymcr.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "pymcr.constraints.ConstraintNorm.__init__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "list",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintNorm.transform": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "TypeError",
    "numpy.arange",
    "numpy.float",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintPlanarize": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "pymcr.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "pymcr.constraints.ConstraintPlanarize.__init__": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "list",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintPlanarize._setup_xy": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float",
    "numpy.meshgrid"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintPlanarize.transform": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.linalg.svd",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintReplaceZeros": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "pymcr.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "pymcr.constraints.ConstraintReplaceZeros.__init__": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "list",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintReplaceZeros.transform": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintZeroCumSumEndPoints": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pymcr.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "pymcr.constraints.ConstraintZeroCumSumEndPoints.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintZeroCumSumEndPoints.transform": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintZeroEndPoints": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pymcr.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "pymcr.constraints.ConstraintZeroEndPoints.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.ConstraintZeroEndPoints.transform": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints._ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "pymcr.constraints._CutExclude": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "pymcr.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "pymcr.constraints._CutExclude.__init__": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "pymcr.constraints._CutExclude._make_excl_mat": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.bool",
    "numpy.in1d",
    "numpy.meshgrid",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pymcr.constraints.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pymcr.constraints._abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pymcr.constraints._assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pymcr.constraints._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pymcr.constraints.constr": {
  "data": {
   "lineno": 724
  },
  "type": "constant"
 },
 "pymcr.constraints.out": {
  "data": {
   "lineno": 725
  },
  "type": "constant"
 },
 "pymcr.mcr": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.Formatter",
    "logging.INFO",
    "logging.StreamHandler",
    "logging.getLogger",
    "numpy.dot",
    "numpy.linspace",
    "numpy.ones",
    "numpy.zeros",
    "pymcr.mcr.C_img",
    "pymcr.mcr.C_known",
    "pymcr.mcr.D_known",
    "pymcr.mcr.M",
    "pymcr.mcr.McrAR",
    "pymcr.mcr.N",
    "pymcr.mcr.P",
    "pymcr.mcr.St_known",
    "pymcr.mcr._logger",
    "pymcr.mcr.mcrar",
    "pymcr.mcr.n_components",
    "pymcr.mcr.stdout_format",
    "pymcr.mcr.stdout_handler",
    "sys.stdout"
   ]
  },
  "type": "module"
 },
 "pymcr.mcr.C_img": {
  "data": {
   "lineno": 528
  },
  "type": "constant"
 },
 "pymcr.mcr.C_known": {
  "data": {
   "lineno": 536
  },
  "type": "constant"
 },
 "pymcr.mcr.ConstraintNonneg": {
  "data": {
   "shadows": "pymcr.constraints.ConstraintNonneg"
  },
  "type": "import"
 },
 "pymcr.mcr.D_known": {
  "data": {
   "lineno": 538
  },
  "type": "constant"
 },
 "pymcr.mcr.M": {
  "data": {
   "lineno": 523
  },
  "type": "constant"
 },
 "pymcr.mcr.McrAR": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "pymcr.mcr.McrAR.D_": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "numpy.dot",
    "property"
   ]
  },
  "type": "function"
 },
 "pymcr.mcr.McrAR.D_opt_": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.dot",
    "property"
   ]
  },
  "type": "function"
 },
 "pymcr.mcr.McrAR.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pymcr.constraints.ConstraintNonneg",
    "pymcr.metrics.mse",
    "pymcr.regressors.OLS"
   ]
  },
  "type": "function"
 },
 "pymcr.mcr.McrAR._check_regr": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "pymcr.regressors.NNLS",
    "pymcr.regressors.OLS",
    "str"
   ]
  },
  "type": "function"
 },
 "pymcr.mcr.McrAR._ismin_err": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pymcr.mcr.McrAR.fit": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "logging.DEBUG",
    "numpy.abs",
    "numpy.dot",
    "post_half_fcn",
    "post_iter_fcn",
    "pymcr.mcr._logger",
    "range"
   ]
  },
  "type": "function"
 },
 "pymcr.mcr.McrAR.n_features": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pymcr.mcr.McrAR.n_samples": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pymcr.mcr.McrAR.n_targets": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pymcr.mcr.N": {
  "data": {
   "lineno": 524
  },
  "type": "constant"
 },
 "pymcr.mcr.NNLS": {
  "data": {
   "shadows": "pymcr.regressors.NNLS"
  },
  "type": "import"
 },
 "pymcr.mcr.OLS": {
  "data": {
   "shadows": "pymcr.regressors.OLS"
  },
  "type": "import"
 },
 "pymcr.mcr.P": {
  "data": {
   "lineno": 525
  },
  "type": "constant"
 },
 "pymcr.mcr.St_known": {
  "data": {
   "lineno": 532
  },
  "type": "constant"
 },
 "pymcr.mcr._logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pymcr.mcr._logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pymcr.mcr._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pymcr.mcr._sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pymcr.mcr.mcrar": {
  "data": {
   "lineno": 546
  },
  "type": "constant"
 },
 "pymcr.mcr.mse": {
  "data": {
   "shadows": "pymcr.metrics.mse"
  },
  "type": "import"
 },
 "pymcr.mcr.n_components": {
  "data": {
   "lineno": 526
  },
  "type": "constant"
 },
 "pymcr.mcr.stdout_format": {
  "data": {
   "lineno": 519
  },
  "type": "constant"
 },
 "pymcr.mcr.stdout_handler": {
  "data": {
   "lineno": 518
  },
  "type": "constant"
 },
 "pymcr.metrics": {
  "data": {},
  "type": "module"
 },
 "pymcr.metrics.mse": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "pymcr.regressors": {
  "data": {},
  "type": "module"
 },
 "pymcr.regressors.LinearRegression": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "pymcr.regressors.LinearRegression.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "pymcr.regressors.LinearRegression.coef_": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pymcr.regressors.LinearRegression.fit": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "pymcr.regressors.NNLS": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pymcr.regressors.LinearRegression"
   ]
  },
  "type": "class"
 },
 "pymcr.regressors.NNLS.__init__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pymcr.regressors.NNLS.fit": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.zeros",
    "range",
    "scipy.optimize.nnls"
   ]
  },
  "type": "function"
 },
 "pymcr.regressors.OLS": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pymcr.regressors.LinearRegression"
   ]
  },
  "type": "class"
 },
 "pymcr.regressors.OLS.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pymcr.regressors.OLS.fit": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "scipy.linalg.lstsq"
   ]
  },
  "type": "function"
 },
 "pymcr.regressors._ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "pymcr.regressors._abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pymcr.regressors._lstsq": {
  "data": {
   "shadows": "scipy.linalg.lstsq"
  },
  "type": "import"
 },
 "pymcr.regressors._nnls": {
  "data": {
   "shadows": "scipy.optimize.nnls"
  },
  "type": "import"
 },
 "pymcr.regressors._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pymcr.tests": {
  "data": {},
  "type": "module"
 },
 "pymcr.tests.test_condition": {
  "data": {},
  "type": "module"
 },
 "pymcr.tests.test_condition.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pymcr.tests.test_condition.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "pymcr.tests.test_condition.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "pymcr.tests.test_condition.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pymcr.tests.test_condition.standardize": {
  "data": {
   "shadows": "pymcr.condition.standardize"
  },
  "type": "import"
 },
 "pymcr.tests.test_condition.test_scale": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pymcr.condition.standardize"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints": {
  "data": {},
  "type": "module"
 },
 "pymcr.tests.test_constraints.ConstraintCompressAbove": {
  "data": {
   "shadows": "pymcr.constraints.ConstraintCompressAbove"
  },
  "type": "import"
 },
 "pymcr.tests.test_constraints.ConstraintCompressBelow": {
  "data": {
   "shadows": "pymcr.constraints.ConstraintCompressBelow"
  },
  "type": "import"
 },
 "pymcr.tests.test_constraints.ConstraintCumsumNonneg": {
  "data": {
   "shadows": "pymcr.constraints.ConstraintCumsumNonneg"
  },
  "type": "import"
 },
 "pymcr.tests.test_constraints.ConstraintCutAbove": {
  "data": {
   "shadows": "pymcr.constraints.ConstraintCutAbove"
  },
  "type": "import"
 },
 "pymcr.tests.test_constraints.ConstraintCutBelow": {
  "data": {
   "shadows": "pymcr.constraints.ConstraintCutBelow"
  },
  "type": "import"
 },
 "pymcr.tests.test_constraints.ConstraintNonneg": {
  "data": {
   "shadows": "pymcr.constraints.ConstraintNonneg"
  },
  "type": "import"
 },
 "pymcr.tests.test_constraints.ConstraintNorm": {
  "data": {
   "shadows": "pymcr.constraints.ConstraintNorm"
  },
  "type": "import"
 },
 "pymcr.tests.test_constraints.ConstraintPlanarize": {
  "data": {
   "shadows": "pymcr.constraints.ConstraintPlanarize"
  },
  "type": "import"
 },
 "pymcr.tests.test_constraints.ConstraintReplaceZeros": {
  "data": {
   "shadows": "pymcr.constraints.ConstraintReplaceZeros"
  },
  "type": "import"
 },
 "pymcr.tests.test_constraints.ConstraintZeroCumSumEndPoints": {
  "data": {
   "shadows": "pymcr.constraints.ConstraintZeroCumSumEndPoints"
  },
  "type": "import"
 },
 "pymcr.tests.test_constraints.ConstraintZeroEndPoints": {
  "data": {
   "shadows": "pymcr.constraints.ConstraintZeroEndPoints"
  },
  "type": "import"
 },
 "pymcr.tests.test_constraints.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pymcr.tests.test_constraints.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pymcr.tests.test_constraints.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pymcr.tests.test_constraints.test_compress_above": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintCompressAbove"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_compress_below": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintCompressBelow"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_cumsumnonneg": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintCumsumNonneg"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_cut_above": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintCutAbove"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_cut_above_exclude": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintCutAbove"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_cut_above_nonzerosum": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintCutAbove"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_cut_below": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintCutBelow"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_cut_below_exclude": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintCutBelow"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_cut_below_nonzerosum": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintCutBelow"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_cut_below_nonzerosum_exclude": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintCutBelow"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_nonneg": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintNonneg"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_norm": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintNorm",
    "pymcr.tests.test_constraints.pytest"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_norm_fixed_axes": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintNorm",
    "pymcr.tests.test_constraints.pytest"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_planarize_err_type_input": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "TypeError",
    "pymcr.constraints.ConstraintPlanarize",
    "pymcr.tests.test_constraints.pytest"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_planarize_no_noise": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "pymcr.constraints.ConstraintPlanarize"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_planarize_noisy": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.random.randn",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "pymcr.constraints.ConstraintPlanarize"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_planarize_noisy_list_target": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.random.randn",
    "numpy.sum",
    "numpy.zeros",
    "pymcr.constraints.ConstraintPlanarize"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_planarize_set_scaler": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.zeros",
    "pymcr.constraints.ConstraintPlanarize"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_planarize_use_above_and_below_on_plane": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.zeros",
    "pymcr.constraints.ConstraintPlanarize"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_replace_zeros": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintReplaceZeros"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_replace_zeros_multifeature": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintReplaceZeros"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_replace_zeros_non1fval": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintReplaceZeros"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_replace_zeros_non1fval_multifeature": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintReplaceZeros"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_zerocumsumendpoints": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cumsum",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintZeroCumSumEndPoints"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_zerocumsumendpoints_nodes": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintZeroCumSumEndPoints"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_zeroendpoints": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintZeroEndPoints",
    "pymcr.tests.test_constraints.pytest"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_constraints.test_zeroendpoints_span": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "pymcr.constraints.ConstraintZeroEndPoints"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_external_regressors": {
  "data": {},
  "type": "module"
 },
 "pymcr.tests.test_external_regressors.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "pymcr.tests.test_external_regressors.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "pymcr.tests.test_external_regressors.TestSklearn": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pymcr.tests.test_external_regressors.flag_sklearn",
    "pymcr.tests.test_external_regressors.pytest"
   ]
  },
  "type": "class"
 },
 "pymcr.tests.test_external_regressors.TestSklearn.test_sklearn_linear_regression": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_external_regressors.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pymcr.tests.test_external_regressors.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "pymcr.tests.test_external_regressors.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "pymcr.tests.test_external_regressors.flag_sklearn": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pymcr.tests.test_external_regressors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pymcr.tests.test_external_regressors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pymcr.tests.test_mcr": {
  "data": {},
  "type": "module"
 },
 "pymcr.tests.test_mcr.ConstraintNonneg": {
  "data": {
   "shadows": "pymcr.constraints.ConstraintNonneg"
  },
  "type": "import"
 },
 "pymcr.tests.test_mcr.ConstraintNorm": {
  "data": {
   "shadows": "pymcr.constraints.ConstraintNorm"
  },
  "type": "import"
 },
 "pymcr.tests.test_mcr.McrAR": {
  "data": {
   "shadows": "pymcr.mcr.McrAR"
  },
  "type": "import"
 },
 "pymcr.tests.test_mcr.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pymcr.tests.test_mcr.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "pymcr.tests.test_mcr.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "pymcr.tests.test_mcr.dataset": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linspace",
    "numpy.ones",
    "numpy.zeros",
    "pymcr.tests.test_mcr.pytest"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_mcr.mse": {
  "data": {
   "shadows": "pymcr.metrics.mse"
  },
  "type": "import"
 },
 "pymcr.tests.test_mcr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pymcr.tests.test_mcr.pymcr": {
  "data": {
   "shadows": "pymcr"
  },
  "type": "import"
 },
 "pymcr.tests.test_mcr.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pymcr.tests.test_mcr.test_mcr_c_semilearned": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "int",
    "numpy.abs",
    "numpy.dot",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "pymcr.constraints.ConstraintNonneg",
    "pymcr.constraints.ConstraintNorm",
    "pymcr.mcr.McrAR"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_mcr.test_mcr_errors": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.random.randn",
    "print",
    "pymcr.mcr.McrAR",
    "pymcr.tests.test_mcr.pytest"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_mcr.test_mcr_ideal_default": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pymcr.mcr.McrAR",
    "pymcr.tests.test_mcr.dataset"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_mcr.test_mcr_ideal_str_regressors": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "isinstance",
    "numpy.testing.assert_equal",
    "pymcr.mcr.McrAR",
    "pymcr.tests.test_mcr.dataset",
    "pymcr.tests.test_mcr.pymcr"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_mcr.test_mcr_max_iterations": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pymcr.constraints.ConstraintNonneg",
    "pymcr.constraints.ConstraintNorm",
    "pymcr.mcr.McrAR",
    "pymcr.tests.test_mcr.dataset"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_mcr.test_mcr_semilearned_both_c_st": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "int",
    "numpy.abs",
    "numpy.dot",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "pymcr.constraints.ConstraintNonneg",
    "pymcr.constraints.ConstraintNorm",
    "pymcr.mcr.McrAR"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_mcr.test_mcr_st_semilearned": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linspace",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "pymcr.constraints.ConstraintNonneg",
    "pymcr.constraints.ConstraintNorm",
    "pymcr.mcr.McrAR"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_mcr.test_mcr_tol_err_change": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pymcr.constraints.ConstraintNonneg",
    "pymcr.constraints.ConstraintNorm",
    "pymcr.mcr.McrAR",
    "pymcr.tests.test_mcr.dataset"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_mcr.test_mcr_tol_increase": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pymcr.constraints.ConstraintNonneg",
    "pymcr.constraints.ConstraintNorm",
    "pymcr.mcr.McrAR",
    "pymcr.tests.test_mcr.dataset"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_mcr.test_mcr_tol_n_above_min": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pymcr.constraints.ConstraintNonneg",
    "pymcr.constraints.ConstraintNorm",
    "pymcr.mcr.McrAR",
    "pymcr.tests.test_mcr.dataset"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_mcr.test_mcr_tol_n_increase": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pymcr.constraints.ConstraintNonneg",
    "pymcr.constraints.ConstraintNorm",
    "pymcr.mcr.McrAR",
    "pymcr.tests.test_mcr.dataset"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_mcr.test_props_features_samples_targets": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "pymcr.mcr.McrAR",
    "pymcr.tests.test_mcr.dataset"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_metrics": {
  "data": {},
  "type": "module"
 },
 "pymcr.tests.test_metrics.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pymcr.tests.test_metrics.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "pymcr.tests.test_metrics.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "pymcr.tests.test_metrics.mse": {
  "data": {
   "shadows": "pymcr.metrics.mse"
  },
  "type": "import"
 },
 "pymcr.tests.test_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pymcr.tests.test_metrics.test_mse": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.ones",
    "pymcr.metrics.mse"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_regressors": {
  "data": {},
  "type": "module"
 },
 "pymcr.tests.test_regressors.Methods": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pymcr.regressors.NNLS",
    "pymcr.regressors.OLS",
    "pymcr.tests.test_regressors.pytest"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_regressors.NNLS": {
  "data": {
   "shadows": "pymcr.regressors.NNLS"
  },
  "type": "import"
 },
 "pymcr.tests.test_regressors.OLS": {
  "data": {
   "shadows": "pymcr.regressors.OLS"
  },
  "type": "import"
 },
 "pymcr.tests.test_regressors.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pymcr.tests.test_regressors.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "pymcr.tests.test_regressors.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "pymcr.tests.test_regressors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pymcr.tests.test_regressors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pymcr.tests.test_regressors.test_basic_positive_least_squares": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "pymcr.tests.test_regressors.Methods"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_regressors.test_dimensionality": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "pymcr.tests.test_regressors.Methods"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_regressors.test_instantiation": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "hasattr",
    "pymcr.tests.test_regressors.Methods"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_regressors.test_nnls_negative_x": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "pymcr.regressors.NNLS"
   ]
  },
  "type": "function"
 },
 "pymcr.tests.test_regressors.test_ols_negative_x": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "pymcr.regressors.OLS"
   ]
  },
  "type": "function"
 }
}