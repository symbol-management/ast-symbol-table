{
 "pyfeeds": {
  "data": {},
  "type": "module"
 },
 "pyfeeds.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyfeeds.main.main"
   ]
  },
  "type": "module"
 },
 "pyfeeds.__main__.main": {
  "data": {
   "shadows": "pyfeeds.main"
  },
  "type": "import"
 },
 "pyfeeds.__version__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyfeeds.common": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyfeeds.common.logging"
   ]
  },
  "type": "module"
 },
 "pyfeeds.common.allBefore": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "os.path.getmtime",
    "os.path.isdir",
    "os.path.join",
    "pyfeeds.common.datetime",
    "pyfeeds.common.os"
   ]
  },
  "type": "function"
 },
 "pyfeeds.common.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyfeeds.common.createSandbox": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len",
    "os.path.abspath",
    "os.path.basename",
    "os.path.dirname",
    "os.path.exists",
    "os.path.isdir",
    "os.path.join",
    "os.path.sep",
    "pyfeeds.common.log",
    "pyfeeds.common.os",
    "pyfeeds.common.shutil",
    "pyfeeds.common.tempfile",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyfeeds.common.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyfeeds.common.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyfeeds.common.findCommonAncestor": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "numpy.argmin",
    "os.path.sep",
    "os.path.sep.join"
   ]
  },
  "type": "function"
 },
 "pyfeeds.common.findPathIn": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len",
    "os.path.exists",
    "os.path.join",
    "os.path.sep",
    "os.path.sep.join"
   ]
  },
  "type": "function"
 },
 "pyfeeds.common.fslbin": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "os.path.join",
    "pyfeeds.common.os"
   ]
  },
  "type": "function"
 },
 "pyfeeds.common.loadNumericText": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.array",
    "open",
    "pyfeeds.common.re",
    "stof"
   ]
  },
  "type": "function"
 },
 "pyfeeds.common.loadNumericText.stof": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pyfeeds.common.log": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyfeeds.common.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyfeeds.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfeeds.common.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyfeeds.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyfeeds.common.printColumns": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "max",
    "print",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyfeeds.common.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyfeeds.common.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyfeeds.common.readfsf": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "isinstance",
    "open",
    "pyfeeds.common.collections"
   ]
  },
  "type": "function"
 },
 "pyfeeds.common.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyfeeds.common.starmap": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "pyfeeds.common.starmap.wrapper": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pyfeeds.common.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyfeeds.common.writefsf": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "open",
    "pyfeeds.common.collections",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyfeeds.evaluate.logging"
   ]
  },
  "type": "module"
 },
 "pyfeeds.evaluate.cmpArrays": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.any",
    "numpy.asarray",
    "numpy.float128",
    "numpy.isfinite",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.compareAllFiles": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "Exception",
    "fmtlog",
    "functools.update_wrapper",
    "len",
    "open",
    "os.path.exists",
    "os.path.join",
    "os.path.relpath",
    "pyfeeds.evaluate.getEvaluationRoutines",
    "pyfeeds.evaluate.getFileGroup",
    "pyfeeds.evaluate.getTolerance",
    "pyfeeds.evaluate.isGroupRoutine",
    "pyfeeds.evaluate.isInExcludeList",
    "pyfeeds.evaluate.log",
    "pyfeeds.evaluate.os",
    "reversed",
    "rfunc",
    "rfunc.__name__",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.compareAllFiles.fmtlog": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.compareAllFiles.rfunc_cached": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "pyfeeds.evaluate.log"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.compareAllFiles.sortkey": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "pyfeeds.evaluate.compareDirs": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "compareAllFiles"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyfeeds.evaluate.evalGiftiVertices": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "cmpArrays",
    "pyfeeds.evaluate.imageCache"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.evalHeader": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isclose",
    "pyfeeds.evaluate.imageCache"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.evalHeaderRestrictDims": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "pyfeeds.evaluate.evalHeader"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.evalImage": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "cmpArrays",
    "pyfeeds.evaluate.imageCache"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.evalMD5": {
  "data": {
   "lineno": 455
  },
  "type": "function"
 },
 "pyfeeds.evaluate.evalNumericalText": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "cmpArrays"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.evalPolarCoordinateImageGroup": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "len",
    "matches",
    "nibabel.Nifti1Image",
    "numpy.cos",
    "numpy.eye",
    "numpy.sin",
    "numpy.zeros",
    "pyfeeds.evaluate.evalVectorImage",
    "pyfeeds.evaluate.imageCache",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.evalPolarCoordinateImageGroup.matches": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "any",
    "os.path.basename",
    "pyfeeds.evaluate.fnmatch"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.evalVectorImage": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "max",
    "numpy.abs",
    "numpy.arccos",
    "numpy.clip",
    "numpy.corrcoef",
    "numpy.isnan",
    "numpy.linalg.norm",
    "numpy.max",
    "numpy.pi",
    "numpy.sum",
    "pyfeeds.evaluate.imageCache"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.evaluateTest": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "compareAllFiles",
    "isInSelfEval",
    "pyfeeds.evaluate.log"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "pyfeeds.evaluate.ft": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pyfeeds.evaluate.getEvaluationRoutines": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "__name__",
    "getattr",
    "len",
    "list",
    "max",
    "pyfeeds.evaluate.fnmatch",
    "pyfeeds.evaluate.sys",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.getFileGroup": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "list",
    "os.path.abspath",
    "os.path.basename",
    "os.path.dirname",
    "os.path.join",
    "pyfeeds.evaluate.fnmatch",
    "pyfeeds.evaluate.glob",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.getTolerance": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "pyfeeds.evaluate.fnmatch"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "pyfeeds.evaluate.imageCache": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyfeeds.evaluate.isGroupRoutine": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pyfeeds.evaluate.isInExcludeList": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "any",
    "pyfeeds.evaluate.fnmatch"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.isInSelfEval": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.listRoutines": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "__name__",
    "pyfeeds.evaluate.sys"
   ]
  },
  "type": "function"
 },
 "pyfeeds.evaluate.log": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyfeeds.evaluate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyfeeds.evaluate.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "pyfeeds.evaluate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyfeeds.evaluate.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyfeeds.evaluate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyfeeds.evaluate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyfeeds.evaluate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyfeeds.hashing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyfeeds.hashing.TEST_HASH_FAILED_DATA_HASH",
    "pyfeeds.hashing.TEST_HASH_FAILED_TEST_HASH",
    "pyfeeds.hashing.TEST_HASH_NOT_CHECKED",
    "pyfeeds.hashing.TEST_HASH_NO_INPUTS",
    "pyfeeds.hashing.TEST_HASH_PASSED",
    "pyfeeds.hashing.TEST_HASH_SKIPPED_NOCHANGE",
    "pyfeeds.hashing.logging"
   ]
  },
  "type": "module"
 },
 "pyfeeds.hashing.TEST_HASH_FAILED_DATA_HASH": {
  "data": {
   "lineno": 229
  },
  "type": "constant"
 },
 "pyfeeds.hashing.TEST_HASH_FAILED_TEST_HASH": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "pyfeeds.hashing.TEST_HASH_NOT_CHECKED": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "pyfeeds.hashing.TEST_HASH_NO_INPUTS": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "pyfeeds.hashing.TEST_HASH_PASSED": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "pyfeeds.hashing.TEST_HASH_SHORT_STRINGS": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "pyfeeds.hashing.TEST_HASH_SKIPPED_NOCHANGE": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "pyfeeds.hashing.TEST_HASH_STRINGS": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "pyfeeds.hashing.calcHashes": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "os.path.abspath",
    "pyfeeds.hashing.log"
   ]
  },
  "type": "function"
 },
 "pyfeeds.hashing.checkHashes": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "checkTestHash",
    "loadHashes",
    "os.path.abspath",
    "print"
   ]
  },
  "type": "function"
 },
 "pyfeeds.hashing.checkTestHash": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "pyfeeds.hashing.TEST_HASH_FAILED_DATA_HASH",
    "pyfeeds.hashing.TEST_HASH_FAILED_TEST_HASH",
    "pyfeeds.hashing.TEST_HASH_NO_INPUTS",
    "pyfeeds.hashing.TEST_HASH_PASSED",
    "pyfeeds.hashing.TEST_HASH_SKIPPED_NOCHANGE",
    "pyfeeds.hashing.log"
   ]
  },
  "type": "function"
 },
 "pyfeeds.hashing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyfeeds.hashing.genHashes": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "calcHashes",
    "os.path.abspath",
    "print",
    "pyfeeds.hashing.log",
    "saveHashes",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyfeeds.hashing.hashCache": {
  "data": {
   "lineno": 400
  },
  "type": "constant"
 },
 "pyfeeds.hashing.hashFile": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "open",
    "pyfeeds.hashing.hashCache",
    "pyfeeds.hashing.hashlib",
    "pyfeeds.hashing.log"
   ]
  },
  "type": "function"
 },
 "pyfeeds.hashing.hashPath": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "hashFile",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join",
    "pyfeeds.hashing.log",
    "pyfeeds.hashing.os",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyfeeds.hashing.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pyfeeds.hashing.loadHashes": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "enumerate",
    "open",
    "os.path.exists",
    "pyfeeds.hashing.log"
   ]
  },
  "type": "function"
 },
 "pyfeeds.hashing.log": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyfeeds.hashing.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyfeeds.hashing.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyfeeds.hashing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyfeeds.hashing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyfeeds.hashing.saveHashes": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "open",
    "pyfeeds.hashing.log"
   ]
  },
  "type": "function"
 },
 "pyfeeds.imagecache": {
  "data": {},
  "type": "module"
 },
 "pyfeeds.imagecache.ImageCache": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyfeeds.imagecache.ImageCache.__getitem__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "nibabel.load"
   ]
  },
  "type": "function"
 },
 "pyfeeds.imagecache.ImageCache.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "pyfeeds.imagecache.ImageCache.__setitem__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pyfeeds.imagecache.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "pyfeeds.main": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "pyfeeds.main.logging",
    "pyfeeds.main.main"
   ]
  },
  "type": "module"
 },
 "pyfeeds.main.ARG_SEP": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "pyfeeds.main.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyfeeds.main.Pyfeeds": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyfeeds.main.Pyfeeds.__findTests": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "Exception",
    "any",
    "len",
    "pyfeeds.main.fnmatch",
    "pyfeeds.main.functools",
    "pyfeeds.main.log",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyfeeds.main.Pyfeeds.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "absify",
    "os.path.basename",
    "os.path.exists",
    "os.path.getmtime",
    "os.path.join",
    "pyfeeds.main.datetime",
    "pyfeeds.main.log",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyfeeds.main.Pyfeeds.__init__.absify": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "pyfeeds.main.Pyfeeds.__validate": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr",
    "len",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "pyfeeds.main.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "pyfeeds.main.configLogging": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "getarg",
    "pyfeeds.main.logging"
   ]
  },
  "type": "function"
 },
 "pyfeeds.main.configLogging.getarg": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pyfeeds.main.configparser": {
  "data": {
   "shadows": "ConfigParser"
  },
  "type": "import"
 },
 "pyfeeds.main.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyfeeds.main.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyfeeds.main.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "pyfeeds.main.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pyfeeds.main.loadPyfeedsConfig": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "ConfigParser.ConfigParser",
    "RuntimeError",
    "collections.OrderedDict",
    "float",
    "int",
    "len",
    "list",
    "os.path.exists",
    "pyfeeds.main.argparse",
    "reversed",
    "setattr",
    "str",
    "typecnv",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyfeeds.main.loadPyfeedsConfig.strbool": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pyfeeds.main.loadPyfeedsConfig.strlist": {
  "data": {
   "lineno": 911
  },
  "type": "function"
 },
 "pyfeeds.main.loadPyfeedsConfig.strlistlist": {
  "data": {
   "lineno": 916
  },
  "type": "function"
 },
 "pyfeeds.main.log": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pyfeeds.main.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyfeeds.main.main": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "configLogging",
    "loadPyfeedsConfig",
    "parseArgs",
    "pyfeeds.main.Pyfeeds",
    "pyfeeds.main.log"
   ]
  },
  "type": "function"
 },
 "pyfeeds.main.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyfeeds.main.parseArgs": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "enumerate",
    "float",
    "hasattr",
    "int",
    "len",
    "pyfeeds.main.ARG_SEP",
    "pyfeeds.main.argparse",
    "pyfeeds.main.sys"
   ]
  },
  "type": "function"
 },
 "pyfeeds.main.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyfeeds.main.pyfeeds_version": {
  "data": {
   "shadows": "__version__"
  },
  "type": "import"
 },
 "pyfeeds.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyfeeds.testing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyfeeds.testing.logging"
   ]
  },
  "type": "module"
 },
 "pyfeeds.testing.Pool": {
  "data": {
   "shadows": "multiprocessing.pool.ThreadPool"
  },
  "type": "import"
 },
 "pyfeeds.testing.Test": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyfeeds.testing.Test.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "os.path.abspath",
    "os.path.basename",
    "os.path.isfile",
    "os.path.join",
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "pyfeeds.testing.Test.__loadInputsFile": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "list",
    "open",
    "os.path.isfile",
    "os.path.join",
    "os.path.sep",
    "pyfeeds.testing.log",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyfeeds.testing.Test.__repr__": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "pyfeeds.testing.Test.__str__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "pyfeeds.testing.Test.createSandbox": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "pyfeeds.testing.Test.getInputs": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyfeeds.testing.Test.hashInputs": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "os.path.join",
    "pyfeeds.testing.hashlib",
    "pyfeeds.testing.log"
   ]
  },
  "type": "function"
 },
 "pyfeeds.testing.Test.hashTestDir": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pyfeeds.testing.hashlib",
    "pyfeeds.testing.log"
   ]
  },
  "type": "function"
 },
 "pyfeeds.testing.Test.inputsChangedSince": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "all",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyfeeds.testing.bundleTests": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "enumerate",
    "os.path.abspath",
    "os.path.exists",
    "os.path.join",
    "os.path.relpath",
    "os.path.split",
    "pyfeeds.testing.log",
    "pyfeeds.testing.os",
    "pyfeeds.testing.shutil",
    "pyfeeds.testing.sys",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyfeeds.testing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyfeeds.testing.findTestDirs": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "os.path.abspath",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join",
    "pyfeeds.testing.log",
    "pyfeeds.testing.os"
   ]
  },
  "type": "function"
 },
 "pyfeeds.testing.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pyfeeds.testing.listTests": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyfeeds.testing.log": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyfeeds.testing.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyfeeds.testing.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyfeeds.testing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyfeeds.testing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyfeeds.testing.runTest": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "Exception",
    "int",
    "open",
    "os.path.isdir",
    "os.path.join",
    "os.path.realpath",
    "pyfeeds.testing.log",
    "pyfeeds.testing.os",
    "pyfeeds.testing.shutil",
    "pyfeeds.testing.subprocess",
    "pyfeeds.testing.time",
    "str"
   ]
  },
  "type": "function"
 },
 "pyfeeds.testing.runTests": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "multiprocessing.pool.ThreadPool",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join",
    "os.path.pathsep.join",
    "os.path.realpath",
    "pyfeeds.testing.log",
    "pyfeeds.testing.os",
    "pyfeeds.testing.shutil",
    "pyfeeds.testing.sys",
    "pyfeeds.testing.time",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyfeeds.testing.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyfeeds.testing.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyfeeds.testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyfeeds.testing.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 }
}