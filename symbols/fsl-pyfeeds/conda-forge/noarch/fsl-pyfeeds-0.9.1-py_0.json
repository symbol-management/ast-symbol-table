{
 "pyfeeds": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfeeds.__main__": {
  "lineno": null,
  "symbols_in_volume": [
   "pyfeeds.main.main"
  ],
  "type": "module"
 },
 "pyfeeds.common": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pyfeeds.common.allBefore": {
  "lineno": 291,
  "symbols_in_volume": [
   "datetime.datetime.fromtimestamp",
   "os.listdir",
   "os.path.getmtime",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyfeeds.common.createSandbox": {
  "lineno": 165,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.abspath",
   "os.path.basename",
   "os.path.dirname",
   "os.path.exists",
   "os.path.isdir",
   "os.path.join",
   "os.path.sep",
   "os.symlink",
   "shutil.copy",
   "shutil.copytree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "pyfeeds.common.findCommonAncestor": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.argmin",
   "os.path.sep",
   "os.path.sep.join"
  ],
  "type": "function"
 },
 "pyfeeds.common.findPathIn": {
  "lineno": 107,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "os.path.sep",
   "os.path.sep.join"
  ],
  "type": "function"
 },
 "pyfeeds.common.fslbin": {
  "lineno": 332,
  "symbols_in_volume": [
   "os.environ",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyfeeds.common.loadNumericText": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.array",
   "re.compile"
  ],
  "type": "function"
 },
 "pyfeeds.common.loadNumericText.stof": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pyfeeds.common.printColumns": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.common.readfsf": {
  "lineno": 337,
  "symbols_in_volume": [
   "collections.Sequence"
  ],
  "type": "function"
 },
 "pyfeeds.common.starmap": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.common.starmap.wrapper": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.common.writefsf": {
  "lineno": 357,
  "symbols_in_volume": [
   "collections.Sequence"
  ],
  "type": "function"
 },
 "pyfeeds.evaluate": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pyfeeds.evaluate.cmpArrays": {
  "lineno": 608,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.any",
   "numpy.asarray",
   "numpy.float128",
   "numpy.isfinite",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "pyfeeds.evaluate.compareAllFiles": {
  "lineno": 233,
  "symbols_in_volume": [
   "functools.update_wrapper",
   "os.path.exists",
   "os.path.join",
   "os.path.relpath",
   "os.walk"
  ],
  "type": "function"
 },
 "pyfeeds.evaluate.compareAllFiles.fmtlog": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pyfeeds.evaluate.compareAllFiles.rfunc_cached": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.evaluate.compareAllFiles.sortkey": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.evaluate.compareDirs": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.evaluate.evalGiftiVertices": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.evaluate.evalHeader": {
  "lineno": 386,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "pyfeeds.evaluate.evalHeaderRestrictDims": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.evaluate.evalImage": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.evaluate.evalMD5": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.evaluate.evalNumericalText": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.evaluate.evalPolarCoordinateImageGroup": {
  "lineno": 525,
  "symbols_in_volume": [
   "nibabel.Nifti1Image",
   "numpy.cos",
   "numpy.eye",
   "numpy.sin",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyfeeds.evaluate.evalPolarCoordinateImageGroup.matches": {
  "lineno": 545,
  "symbols_in_volume": [
   "fnmatch.fnmatch",
   "os.path.basename"
  ],
  "type": "function"
 },
 "pyfeeds.evaluate.evalVectorImage": {
  "lineno": 469,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arccos",
   "numpy.clip",
   "numpy.corrcoef",
   "numpy.isnan",
   "numpy.linalg.norm",
   "numpy.max",
   "numpy.pi",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pyfeeds.evaluate.evaluateTest": {
  "lineno": 78,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyfeeds.evaluate.getEvaluationRoutines": {
  "lineno": 129,
  "symbols_in_volume": [
   "fnmatch.fnmatch",
   "functools.partial",
   "functools.update_wrapper",
   "sys.modules"
  ],
  "type": "function"
 },
 "pyfeeds.evaluate.getFileGroup": {
  "lineno": 162,
  "symbols_in_volume": [
   "fnmatch.fnmatch",
   "glob.glob",
   "os.path.abspath",
   "os.path.basename",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyfeeds.evaluate.getTolerance": {
  "lineno": 221,
  "symbols_in_volume": [
   "fnmatch.fnmatch"
  ],
  "type": "function"
 },
 "pyfeeds.evaluate.isGroupRoutine": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.evaluate.isInExcludeList": {
  "lineno": 213,
  "symbols_in_volume": [
   "fnmatch.fnmatch"
  ],
  "type": "function"
 },
 "pyfeeds.evaluate.isInSelfEval": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.evaluate.listRoutines": {
  "lineno": 56,
  "symbols_in_volume": [
   "sys.modules"
  ],
  "type": "function"
 },
 "pyfeeds.hashing": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pyfeeds.hashing.calcHashes": {
  "lineno": 113,
  "symbols_in_volume": [
   "os.path.abspath"
  ],
  "type": "function"
 },
 "pyfeeds.hashing.checkHashes": {
  "lineno": 85,
  "symbols_in_volume": [
   "os.path.abspath"
  ],
  "type": "function"
 },
 "pyfeeds.hashing.checkTestHash": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.hashing.genHashes": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.hashing.hashFile": {
  "lineno": 423,
  "symbols_in_volume": [
   "hashlib.md5"
  ],
  "type": "function"
 },
 "pyfeeds.hashing.hashPath": {
  "lineno": 376,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyfeeds.hashing.loadHashes": {
  "lineno": 142,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "pyfeeds.hashing.saveHashes": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.imagecache": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pyfeeds.imagecache.ImageCache": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfeeds.imagecache.ImageCache.__getitem__": {
  "lineno": 72,
  "symbols_in_volume": [
   "nibabel.load",
   "os.path.abspath",
   "os.path.realpath"
  ],
  "type": "function"
 },
 "pyfeeds.imagecache.ImageCache.__init__": {
  "lineno": 58,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "pyfeeds.imagecache.ImageCache.__setitem__": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.imagecache.size": {
  "lineno": 23,
  "symbols_in_volume": [
   "nibabel.AnalyzeImage",
   "numpy.prod"
  ],
  "type": "function"
 },
 "pyfeeds.main": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pyfeeds.main.Pyfeeds": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfeeds.main.Pyfeeds.__findTests": {
  "lineno": 211,
  "symbols_in_volume": [
   "fnmatch.fnmatch",
   "functools.reduce"
  ],
  "type": "function"
 },
 "pyfeeds.main.Pyfeeds.__init__": {
  "lineno": 108,
  "symbols_in_volume": [
   "datetime.datetime.fromtimestamp",
   "os.path.basename",
   "os.path.exists",
   "os.path.getmtime",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyfeeds.main.Pyfeeds.__init__.absify": {
  "lineno": 191,
  "symbols_in_volume": [
   "os.path.sep"
  ],
  "type": "function"
 },
 "pyfeeds.main.Pyfeeds.__validate": {
  "lineno": 268,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "pyfeeds.main.configLogging": {
  "lineno": 364,
  "symbols_in_volume": [
   "logging.CRITICAL",
   "logging.DEBUG",
   "logging.FileHandler",
   "logging.Formatter",
   "logging.INFO",
   "logging.StreamHandler",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "pyfeeds.main.configLogging.getarg": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.main.loadPyfeedsConfig": {
  "lineno": 872,
  "symbols_in_volume": [
   "argparse.Namespace",
   "collections.OrderedDict",
   "configparser.ConfigParser",
   "os.path.exists"
  ],
  "type": "function"
 },
 "pyfeeds.main.loadPyfeedsConfig.strbool": {
  "lineno": 889,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.main.loadPyfeedsConfig.strlist": {
  "lineno": 893,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.main.loadPyfeedsConfig.strlistlist": {
  "lineno": 898,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.main.main": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.main.parseArgs": {
  "lineno": 397,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "argparse.RawDescriptionHelpFormatter",
   "collections.OrderedDict",
   "os.getcwd",
   "sys.argv"
  ],
  "type": "function"
 },
 "pyfeeds.testing": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pyfeeds.testing.Test": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfeeds.testing.Test.__init__": {
  "lineno": 79,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.basename",
   "os.path.dirname",
   "os.path.isfile",
   "os.path.sep",
   "os.path.sep.join",
   "re.fullmatch"
  ],
  "type": "function"
 },
 "pyfeeds.testing.Test.__loadInputsFile": {
  "lineno": 204,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.path.join",
   "os.path.sep"
  ],
  "type": "function"
 },
 "pyfeeds.testing.Test.__repr__": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.testing.Test.__str__": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.testing.Test.createSandbox": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.testing.Test.getInputs": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.testing.Test.hashInputs": {
  "lineno": 160,
  "symbols_in_volume": [
   "hashlib.md5",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyfeeds.testing.Test.hashTestDir": {
  "lineno": 144,
  "symbols_in_volume": [
   "hashlib.md5"
  ],
  "type": "function"
 },
 "pyfeeds.testing.Test.inputsChangedSince": {
  "lineno": 136,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyfeeds.testing.bundleTests": {
  "lineno": 294,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join",
   "os.path.relpath",
   "os.path.split",
   "shutil.copytree",
   "shutil.rmtree",
   "sys.exit"
  ],
  "type": "function"
 },
 "pyfeeds.testing.findTestDirs": {
  "lineno": 235,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.abspath",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyfeeds.testing.findTestScripts": {
  "lineno": 266,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.basename",
   "os.path.isfile",
   "os.path.join",
   "re.fullmatch"
  ],
  "type": "function"
 },
 "pyfeeds.testing.listTests": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.testing.runTest": {
  "lineno": 537,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.isdir",
   "os.path.join",
   "os.path.realpath",
   "shutil.rmtree",
   "subprocess.call",
   "time.time"
  ],
  "type": "function"
 },
 "pyfeeds.testing.runTests": {
  "lineno": 394,
  "symbols_in_volume": [
   "multiprocessing.pool.ThreadPool",
   "os.environ.copy",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "os.path.pathsep.join",
   "os.path.realpath",
   "shutil.rmtree",
   "sys.exit",
   "time.time"
  ],
  "type": "function"
 },
 "pyfeeds.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfeeds.tests.CaptureStdout": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyfeeds.tests.CaptureStdout.__enter__": {
  "lineno": 32,
  "symbols_in_volume": [
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "pyfeeds.tests.CaptureStdout.__exit__": {
  "lineno": 40,
  "symbols_in_volume": [
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "pyfeeds.tests.CaptureStdout.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.tests.CaptureStdout.reset": {
  "lineno": 28,
  "symbols_in_volume": [
   "io.StringIO"
  ],
  "type": "function"
 },
 "pyfeeds.tests.CaptureStdout.stderr": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.tests.CaptureStdout.stdout": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyfeeds.tests.makepaths": {
  "lineno": 75,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.dirname"
  ],
  "type": "function"
 },
 "pyfeeds.tests.makepyfeeds": {
  "lineno": 115,
  "symbols_in_volume": [
   "argparse.Namespace",
   "pyfeeds.main.Pyfeeds"
  ],
  "type": "function"
 },
 "pyfeeds.tests.maketest": {
  "lineno": 84,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyfeeds.tests.tempdir": {
  "lineno": 64,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.chdir",
   "os.getcwd",
   "tempfile.TemporaryDirectory"
  ],
  "type": "function"
 },
 "pyfeeds.tests.test_hashing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfeeds.tests.test_hashing.test_calcHashes": {
  "lineno": 73,
  "symbols_in_volume": [
   "pyfeeds.hashing.calcHashes",
   "pyfeeds.testing.Test"
  ],
  "type": "function"
 },
 "pyfeeds.tests.test_hashing.test_checkHashes": {
  "lineno": 56,
  "symbols_in_volume": [
   "pyfeeds.hashing.checkHashes"
  ],
  "type": "function"
 },
 "pyfeeds.tests.test_hashing.test_checkTestHash": {
  "lineno": 141,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pyfeeds.hashing.TEST_HASH_FAILED_DATA_HASH",
   "pyfeeds.hashing.TEST_HASH_FAILED_TEST_HASH",
   "pyfeeds.hashing.TEST_HASH_PASSED",
   "pyfeeds.hashing.TEST_HASH_SKIPPED_NOCHANGE",
   "pyfeeds.hashing.checkTestHash",
   "time.sleep"
  ],
  "type": "function"
 },
 "pyfeeds.tests.test_hashing.test_genHashes": {
  "lineno": 20,
  "symbols_in_volume": [
   "os.path.exists",
   "pyfeeds.hashing.genHashes"
  ],
  "type": "function"
 },
 "pyfeeds.tests.test_hashing.test_loadHashes": {
  "lineno": 99,
  "symbols_in_volume": [
   "pyfeeds.hashing.loadHashes",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pyfeeds.tests.test_hashing.test_saveHashes": {
  "lineno": 119,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyfeeds.hashing.saveHashes",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pyfeeds.tests.test_testing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyfeeds.tests.test_testing.test_Test": {
  "lineno": 90,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "os.mkdir",
   "pyfeeds.testing.Test"
  ],
  "type": "function"
 },
 "pyfeeds.tests.test_testing.test_bundleTests": {
  "lineno": 123,
  "symbols_in_volume": [
   "os.path.exists",
   "pyfeeds.testing.bundleTests"
  ],
  "type": "function"
 },
 "pyfeeds.tests.test_testing.test_findTestDirs": {
  "lineno": 18,
  "symbols_in_volume": [
   "os.getcwd",
   "os.path.abspath",
   "pyfeeds.testing.findTestDirs"
  ],
  "type": "function"
 },
 "pyfeeds.tests.test_testing.test_findTestScripts": {
  "lineno": 40,
  "symbols_in_volume": [
   "pyfeeds.testing.findTestScripts"
  ],
  "type": "function"
 },
 "pyfeeds.tests.test_testing.test_findTestScripts.check": {
  "lineno": 41,
  "symbols_in_volume": [
   "os.path.abspath"
  ],
  "type": "function"
 },
 "pyfeeds.tests.test_testing.test_listTests": {
  "lineno": 64,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "pyfeeds.testing.listTests"
  ],
  "type": "function"
 },
 "pyfeeds.tests.test_testing.test_runTest": {
  "lineno": 174,
  "symbols_in_volume": [
   "os.chmod",
   "os.environ.copy",
   "os.mkdir",
   "pyfeeds.testing.runTest"
  ],
  "type": "function"
 },
 "pyfeeds.tests.test_testing.test_runTests": {
  "lineno": 209,
  "symbols_in_volume": [
   "os.chmod",
   "os.mkdir",
   "pyfeeds.testing.runTests"
  ],
  "type": "function"
 }
}