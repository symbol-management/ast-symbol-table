{
 "pyemma": {
  "data": {
   "symbols_in_volume": [
    "get_versions",
    "pyemma.__version__",
    "pyemma._version_check",
    "pyemma.version"
   ]
  },
  "type": "module"
 },
 "pyemma.Request": {
  "data": {
   "shadows": "urllib.request.Request"
  },
  "type": "import"
 },
 "pyemma.__version__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyemma._base": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyemma._base.estimator": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.estimator.Estimator": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "pyemma._base.loggable.Loggable",
    "pyemma._ext.sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "pyemma._base.estimator.Estimator.__my_getstate__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "filter",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pyemma._base.estimator.Estimator.__my_setstate__": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "filter",
    "hasattr",
    "list",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyemma._base.estimator.Estimator._check_estimated": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pyemma._base.estimator.Estimator._estimate": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyemma._base.estimator.Estimator.estimate": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "pyemma._base.estimator.Estimator.fit": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "pyemma._base.estimator.Estimator.get_params": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dict",
    "getattr",
    "hasattr",
    "len",
    "list",
    "pyemma._base.estimator.warnings",
    "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "pyemma._base.estimator.Estimator.model": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma._base.estimator.Loggable": {
  "data": {
   "shadows": "pyemma._base.loggable.Loggable"
  },
  "type": "import"
 },
 "pyemma._base.estimator.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "pyemma._base.estimator.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma._base.estimator.ParameterGrid": {
  "data": {
   "shadows": "pyemma._ext.sklearn.parameter_search.ParameterGrid"
  },
  "type": "import"
 },
 "pyemma._base.estimator.Pool": {
  "data": {
   "shadows": "pathos.multiprocessing.Pool"
  },
  "type": "import"
 },
 "pyemma._base.estimator.PyEMMA_DeprecationWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
  },
  "type": "import"
 },
 "pyemma._base.estimator._BaseEstimator": {
  "data": {
   "shadows": "pyemma._ext.sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyemma._base.estimator.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma._base.estimator._call_member": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "attr",
    "getattr",
    "isinstance",
    "property",
    "pyemma._base.estimator.inspect"
   ]
  },
  "type": "function"
 },
 "pyemma._base.estimator._estimate_param_scan_worker": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "AttributeError",
    "KeyboardInterrupt",
    "ValueError",
    "enumerate",
    "estimator",
    "estimator.estimate",
    "estimator.logger.warning",
    "estimator.model",
    "isinstance",
    "len",
    "pyemma._base.estimator._call_member",
    "pyemma._base.estimator.sys",
    "pyemma._base.loggable.Loggable",
    "pyemma.util.types.is_iterable",
    "pyemma.util.types.is_string",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma._base.estimator._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma._base.estimator.clone_estimator": {
  "data": {
   "shadows": "pyemma._ext.sklearn.base.clone"
  },
  "type": "import"
 },
 "pyemma._base.estimator.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "pyemma._base.estimator.estimate_param_scan": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "contextlib.closing",
    "estimator",
    "estimator.__class__.__name__",
    "estimator.show_progress",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "pathos.multiprocessing.Pool",
    "pyemma._base.estimator._estimate_param_scan_worker",
    "pyemma._base.estimator.get_estimator",
    "pyemma._base.estimator.os",
    "pyemma._base.model.Model",
    "pyemma._base.parallel.get_n_jobs",
    "pyemma._ext.sklearn.base.clone",
    "pyemma.util.types.is_string",
    "str",
    "unittest.mock.MagicMock",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma._base.estimator.estimate_param_scan.error_callback": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pyemma._base.estimator.get_estimator": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "estimator",
    "pyemma._base.estimator.inspect"
   ]
  },
  "type": "function"
 },
 "pyemma._base.estimator.get_n_jobs": {
  "data": {
   "shadows": "pyemma._base.parallel.get_n_jobs"
  },
  "type": "import"
 },
 "pyemma._base.estimator.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pyemma._base.estimator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma._base.estimator.param_grid": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyemma._ext.sklearn.parameter_search.ParameterGrid"
   ]
  },
  "type": "function"
 },
 "pyemma._base.estimator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma._base.estimator.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._base.loggable": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.loggable.Loggable": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "itertools.count",
    "object",
    "pyemma._base.loggable.logging"
   ]
  },
  "type": "class"
 },
 "pyemma._base.loggable.Loggable.__create_logger": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "id",
    "pyemma._base.loggable.Loggable",
    "pyemma._base.loggable.logging",
    "pyemma._base.loggable.weakref"
   ]
  },
  "type": "function"
 },
 "pyemma._base.loggable.Loggable._cleanup_logger": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma._base.loggable.Loggable._cleanup_logger.remove_logger": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pyemma._base.loggable.Loggable",
    "pyemma._base.loggable.logging"
   ]
  },
  "type": "function"
 },
 "pyemma._base.loggable.Loggable._logger_is_active": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyemma._base.loggable.Loggable.logger": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma._base.loggable.Loggable.name": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "AttributeError",
    "next",
    "property",
    "pyemma._base.loggable.Loggable"
   ]
  },
  "type": "function"
 },
 "pyemma._base.loggable.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyemma._base.loggable.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "pyemma._base.loggable.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma._base.loggable.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyemma._base.model": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.model.Model": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._base.model.Model.__my_getstate__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "filter",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pyemma._base.model.Model.__my_setstate__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "filter",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pyemma._base.model.Model.__repr__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "len",
    "pyemma._ext.sklearn.base._pprint"
   ]
  },
  "type": "function"
 },
 "pyemma._base.model.Model._get_model_param_names": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "RuntimeError",
    "classmethod",
    "hasattr",
    "pyemma.util.reflection.getargspec_no_self"
   ]
  },
  "type": "function"
 },
 "pyemma._base.model.Model.get_model_params": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dict",
    "getattr",
    "hasattr",
    "len",
    "list",
    "pyemma._base.model.warnings",
    "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "pyemma._base.model.Model.set_model_params": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyemma._base.model.Model.update_model_params": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyemma._base.model.PyEMMA_DeprecationWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
  },
  "type": "import"
 },
 "pyemma._base.model.SampledModel": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pyemma._base.model.Model"
   ]
  },
  "type": "class"
 },
 "pyemma._base.model.SampledModel.__init__": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "pyemma._base.model.SampledModel._check_samples_available": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "AttributeError",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma._base.model.SampledModel.sample_conf": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pyemma.util.statistics.confidence_interval"
   ]
  },
  "type": "function"
 },
 "pyemma._base.model.SampledModel.sample_f": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pyemma.util.reflection.call_member"
   ]
  },
  "type": "function"
 },
 "pyemma._base.model.SampledModel.sample_mean": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pyemma._base.model.SampledModel.sample_std": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pyemma._base.model.SampledModel.samples": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma._base.model.SampledModel.set_model_params": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "pyemma._base.model.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyemma._base.model._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._base.model._pprint": {
  "data": {
   "shadows": "pyemma._ext.sklearn.base._pprint"
  },
  "type": "import"
 },
 "pyemma._base.model.call_member": {
  "data": {
   "shadows": "pyemma.util.reflection.call_member"
  },
  "type": "import"
 },
 "pyemma._base.model.confidence_interval": {
  "data": {
   "shadows": "pyemma.util.statistics.confidence_interval"
  },
  "type": "import"
 },
 "pyemma._base.model.getargspec_no_self": {
  "data": {
   "shadows": "pyemma.util.reflection.getargspec_no_self"
  },
  "type": "import"
 },
 "pyemma._base.model.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._base.parallel": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.parallel.NJobsMixIn": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._base.parallel.NJobsMixIn.n_jobs": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "getattr",
    "int",
    "pyemma._base.parallel.get_n_jobs"
   ]
  },
  "type": "function"
 },
 "pyemma._base.parallel.get_n_jobs": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "_from_env",
    "_from_hardware",
    "pyemma._base.parallel.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma._base.parallel.get_n_jobs._from_env": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "pyemma._base.parallel.os"
   ]
  },
  "type": "function"
 },
 "pyemma._base.parallel.get_n_jobs._from_hardware": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "pyemma._base.parallel.psutil"
   ]
  },
  "type": "function"
 },
 "pyemma._base.parallel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma._base.parallel.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "pyemma._base.parallel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._base.progress": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.progress.reporter": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.progress.reporter.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.ProgressReporter": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "pyemma._base.progress.reporter.ProgressReporterMixin"
   ]
  },
  "type": "class"
 },
 "pyemma._base.progress.reporter.ProgressReporter.context": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporter.finish": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporter.num_registered": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporter.register": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporter.registered_stages": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporter.set_description": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporter.update": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin.__check_stage_registered": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._prog_rep_callbacks": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._prog_rep_descriptions": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._prog_rep_progressbars": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_context": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ctx"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_context.ctx": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_force_finish": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_num_registered": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_register": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "my_tqdm_notebook",
    "numbers.Integral",
    "pyemma._base.progress.reporter.ProgressReporterMixin",
    "pyemma._base.progress.reporter._attached_to_ipy_notebook_with_widgets",
    "pyemma._base.progress.reporter.tqdm",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_registered_stages": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_set_description": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_update": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin.show_progress": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter._attached_to_ipy_notebook_with_widgets": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "IPython.get_ipython",
    "ImportError",
    "getattr",
    "pyemma._base.progress.reporter._simple_memorize",
    "pyemma._base.progress.reporter.ipywidgets"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter._simple_memorize": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter._simple_memorize.wrapper": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "f",
    "f.res",
    "functools.wraps",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.config": {
  "data": {
   "shadows": "pyemma.config"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.get_ipython": {
  "data": {
   "shadows": "IPython.get_ipython"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.ipywidgets": {
  "data": {
   "shadows": "ipywidgets"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.notebook": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.progress.reporter.notebook.HBox": {
  "data": {
   "shadows": "ipywidgets.HBox"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.notebook.HTML": {
  "data": {
   "shadows": "ipywidgets.HTML"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.notebook.IntProgress": {
  "data": {
   "shadows": "ipywidgets.IntProgress"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.notebook.Label": {
  "data": {
   "shadows": "ipywidgets.Label"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.notebook.Layout": {
  "data": {
   "shadows": "ipywidgets.Layout"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.notebook.display": {
  "data": {
   "shadows": "IPython.core.display.display"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.notebook.escape": {
  "data": {
   "shadows": "cgi.escape"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.notebook.my_tqdm_notebook": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "tqdm._tqdm_notebook.tqdm_notebook"
   ]
  },
  "type": "class"
 },
 "pyemma._base.progress.reporter.notebook.my_tqdm_notebook.status_printer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "IPython.core.display.display",
    "ImportError",
    "ipywidgets.HBox",
    "ipywidgets.HTML",
    "ipywidgets.IntProgress",
    "ipywidgets.Label",
    "ipywidgets.Layout",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.notebook.my_tqdm_notebook.status_printer.print_status": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "AttributeError",
    "cgi.escape",
    "int"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.notebook.tqdm_notebook": {
  "data": {
   "shadows": "tqdm._tqdm_notebook.tqdm_notebook"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.tqdm": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pyemma._base.progress.test_progress": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma._base.progress.test_progress.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma._base.progress.test_progress.ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma._base.progress.test_progress.ProgressReporterMixin": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporterMixin"
  },
  "type": "import"
 },
 "pyemma._base.progress.test_progress.TestProgress": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pyemma._base.progress.test_progress.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma._base.progress.test_progress.TestProgress.setUp": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyemma._base.progress.ProgressReporterMixin",
    "pyemma._base.progress.test_progress.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.setUpClass": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "classmethod",
    "pyemma._base.progress.test_progress.os",
    "pyemma._base.progress.test_progress.sys"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.tearDownClass": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "classmethod",
    "pyemma._base.progress.test_progress.pyemma",
    "pyemma._base.progress.test_progress.sys"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.test_below_threshold": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pyemma._base.progress.ProgressReporter"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.test_config_2": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pyemma.util.contexts.settings"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.test_config_override": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pyemma.util.contexts.settings"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.test_ctx": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Exception",
    "pyemma._base.progress.ProgressReporter"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.test_ctx2": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception",
    "pyemma._base.progress.ProgressReporter"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.test_ctx3": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Exception",
    "pyemma._base.progress.ProgressReporter"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.test_ctx4": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "Exception",
    "pyemma._base.progress.ProgressReporter"
   ]
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma._base.progress.test_progress.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma._base.progress.test_progress.settings": {
  "data": {
   "shadows": "pyemma.util.contexts.settings"
  },
  "type": "import"
 },
 "pyemma._base.progress.test_progress.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma._base.progress.test_progress.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._base.serialization": {
  "data": {
   "symbols_in_volume": [
    "pyemma._base.serialization.load"
   ]
  },
  "type": "module"
 },
 "pyemma._base.serialization.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pyemma._base.serialization.cli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma._base.serialization.cli.main",
    "pyemma._base.serialization.cli.sys"
   ]
  },
  "type": "module"
 },
 "pyemma._base.serialization.cli.H5File": {
  "data": {
   "shadows": "pyemma._base.serialization.h5file.H5File"
  },
  "type": "import"
 },
 "pyemma._base.serialization.cli.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "pyemma._base.serialization.cli.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "pyemma._base.serialization.cli.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyemma._base.serialization.cli.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyemma._base.serialization.cli.load": {
  "data": {
   "shadows": "pyemma.load"
  },
  "type": "import"
 },
 "pyemma._base.serialization.cli.main": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "BaseException",
    "collections.defaultdict",
    "dict",
    "enumerate",
    "io.StringIO",
    "print",
    "pyemma._base.serialization.cli.argparse",
    "pyemma._base.serialization.cli.json",
    "pyemma._base.serialization.cli.sys",
    "pyemma._base.serialization.cli.traceback",
    "pyemma._base.serialization.h5file.H5File",
    "pyemma.load",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma._base.serialization.cli.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma._base.serialization.h5file.logging"
   ]
  },
  "type": "module"
 },
 "pyemma._base.serialization.h5file.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.H5File": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.h5file.H5File.__enter__": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.__exit__": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyemma._base.serialization.h5file.h5py"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File._current_model_group": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File._hash": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "hex",
    "pyemma._base.serialization.h5file.H5File",
    "pyemma._base.serialization.h5file.hashlib",
    "pyemma._base.serialization.serialization.IntegrityError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File._pickle_and_attach_object": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "HDF5PersistentPickler",
    "io.BytesIO",
    "numpy.void",
    "pyemma._base.serialization.h5file.H5File"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File._save_attributes": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pyemma._base.serialization.h5file.time",
    "pyemma.version",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File._set_group": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "RuntimeError",
    "pyemma._base.serialization.h5file.logger"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.add_object": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.add_serializable": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.class_repr": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.class_str": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.created": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.created_readable": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.delete": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.model": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "HDF5PersistentUnpickler",
    "io.BytesIO",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.models_descriptive": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "property",
    "pyemma._base.serialization.h5file.H5File"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.pyemma_version": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.rename": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.save_streaming_chain": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.select_model": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.IntegrityError": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.IntegrityError"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.__author__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyemma._base.serialization.h5file.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyemma._base.serialization.h5file.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.version": {
  "data": {
   "shadows": "pyemma.version"
  },
  "type": "import"
 },
 "pyemma._base.serialization.list_models": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "H5File"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.load": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "pyemma._base.serialization.mdtraj_helpers": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.serialization.mdtraj_helpers.Atom": {
  "data": {
   "shadows": "mdtraj.core.topology.Atom"
  },
  "type": "import"
 },
 "pyemma._base.serialization.mdtraj_helpers.elem": {
  "data": {
   "shadows": "mdtraj.core.element"
  },
  "type": "import"
 },
 "pyemma._base.serialization.mdtraj_helpers.getstate": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "dict",
    "pyemma._base.serialization.mdtraj_helpers.topology_to_numpy"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.mdtraj_helpers.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma._base.serialization.mdtraj_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._base.serialization.mdtraj_helpers.setstate": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyemma._base.serialization.mdtraj_helpers.topology_from_numpy"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.mdtraj_helpers.topology_from_numpy": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "len",
    "mdtraj.core.element.get_by_symbol",
    "mdtraj.core.topology.Atom",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.unique",
    "numpy.zeros",
    "pyemma._base.serialization.mdtraj_helpers.mdtraj",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.mdtraj_helpers.topology_to_numpy": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.fromiter"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma._base.serialization.pickle_extensions._check_blosc_avail",
    "pyemma._base.serialization.pickle_extensions.logging"
   ]
  },
  "type": "module"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentPickler": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pickle.Pickler"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentPickler.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentPickler._store": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "id",
    "pyemma._base.serialization.pickle_extensions._DEFAULT_BLOSC_OPTIONS",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentPickler.dump": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pyemma._base.serialization.mdtraj_helpers.getstate",
    "pyemma._base.serialization.pickle_extensions.HDF5PersistentPickler",
    "super",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentPickler.persistent_id": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "id",
    "isinstance",
    "len",
    "numpy.ndarray",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pickle.Unpickler"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler.__check_allowed": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "pickle.UnpicklingError",
    "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler.find_class": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler.load": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyemma._base.serialization.mdtraj_helpers.setstate",
    "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler",
    "super",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler.persistent_load": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pickle.UnpicklingError",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.Pickler": {
  "data": {
   "shadows": "pickle.Pickler"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.Unpickler": {
  "data": {
   "shadows": "pickle.Unpickler"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.UnpicklingError": {
  "data": {
   "shadows": "pickle.UnpicklingError"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions._DEFAULT_BLOSC_OPTIONS": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pyemma._base.serialization.pickle_extensions.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma._base.serialization.pickle_extensions._blosc_opts": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions._check_blosc_avail": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "pyemma._base.serialization.pickle_extensions._blosc_opts",
    "pyemma._base.serialization.pickle_extensions.h5py",
    "pyemma._base.serialization.pickle_extensions.os",
    "pyemma._base.serialization.pickle_extensions.tempfile",
    "pyemma._base.serialization.pickle_extensions.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.getstate": {
  "data": {
   "shadows": "pyemma._base.serialization.mdtraj_helpers.getstate"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pyemma._base.serialization.pickle_extensions.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.setstate": {
  "data": {
   "shadows": "pyemma._base.serialization.mdtraj_helpers.setstate"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma._base.serialization.serialization._debug",
    "pyemma._base.serialization.serialization.logger",
    "pyemma._base.serialization.serialization.logging"
   ]
  },
  "type": "module"
 },
 "pyemma._base.serialization.serialization.ClassVersionException": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.serialization.Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.H5File": {
  "data": {
   "shadows": "pyemma._base.serialization.h5file.H5File"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.IntegrityError": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.serialization.Loggable": {
  "data": {
   "shadows": "pyemma._base.loggable.Loggable"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.Modifications": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.serialization.Modifications.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.Modifications.apply": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "KeyError",
    "callable",
    "func",
    "hasattr",
    "len",
    "pyemma._base.serialization.serialization.ClassVersionException",
    "pyemma._base.serialization.serialization._debug",
    "pyemma._base.serialization.serialization.logger",
    "staticmethod",
    "str",
    "value"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.Modifications.list": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.Modifications.map": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "callable"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.Modifications.mv": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.Modifications.rm": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.Modifications.set": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.Modifications.transform": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "callable"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.OldVersionUnsupported": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.serialization.PyEMMA_DeprecationWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn.__getstate__": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "isinstance",
    "pyemma._base.estimator.Estimator",
    "pyemma._base.estimator.Estimator.__my_getstate__",
    "pyemma._base.model.Model",
    "pyemma._base.model.Model.__my_getstate__",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma._base.serialization.serialization._debug",
    "pyemma._base.serialization.serialization.logger",
    "pyemma._base.serialization.util._importable_name",
    "pyemma.version"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn.__init_subclass__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn.__interpolate": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.Modifications",
    "pyemma._base.serialization.serialization.OldVersionUnsupported",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma._base.serialization.serialization._debug",
    "pyemma._base.serialization.serialization.logger",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn.__new__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn.__setstate__": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "UserWarning",
    "hasattr",
    "isinstance",
    "pyemma._base.estimator.Estimator",
    "pyemma._base.estimator.Estimator.__my_setstate__",
    "pyemma._base.model.Model",
    "pyemma._base.model.Model.__my_setstate__",
    "pyemma._base.serialization.serialization.OldVersionUnsupported",
    "pyemma._base.serialization.serialization.logger",
    "pyemma._base.serialization.serialization.warnings",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._get_classes_to_inspect": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "filter",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._get_interpolation_map": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "map",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._get_private_field": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "getattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._get_serialize_fields": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._get_state_of_serializeable_fields": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma._base.serialization.serialization._debug",
    "pyemma._base.serialization.serialization.logger"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._get_version": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "issubclass",
    "pyemma._base.serialization.serialization.ClassVersionException",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._get_version_for_class_from_state": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "KeyError",
    "float",
    "pyemma._base.serialization.serialization._debug",
    "pyemma._base.serialization.serialization.logger",
    "pyemma._base.serialization.util._importable_name",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._save_data_producer": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "NotImplemented",
    "RuntimeError",
    "hasattr",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "value"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._set_state_from_serializeable_fields_and_state": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "AttributeError",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma._base.serialization.serialization._debug",
    "pyemma._base.serialization.serialization.logger",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn.load": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "classmethod",
    "pyemma._base.serialization.h5file.H5File"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn.save": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "pyemma._base.loggable.Loggable",
    "pyemma._base.serialization.h5file.H5File",
    "pyemma._base.serialization.serialization.logger"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization._debug": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma._base.serialization.serialization._importable_name": {
  "data": {
   "shadows": "pyemma._base.serialization.util._importable_name"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyemma._base.serialization.serialization.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.version": {
  "data": {
   "shadows": "pyemma.version"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.serialization.tests._test_classes": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.serialization.tests._test_classes.Modifications": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.Modifications"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests._test_classes.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests._test_classes._deleted_in_old_version": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests._test_classes.test_cls_v3"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests._test_classes._deleted_in_old_version.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests._test_classes._deleted_in_old_version",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v1": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v1.__eq__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v1.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v2": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.Modifications",
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v2.__eq__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v2.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v3": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.Modifications",
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v3.__eq__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v3.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_with_old_locations": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests._test_classes._deleted_in_old_version"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_with_old_locations.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests._test_classes.test_cls_with_old_locations",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.to_interpolate_with_functions": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.Modifications",
    "pyemma._base.serialization.tests._test_classes.test_cls_v1"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests._test_classes.to_interpolate_with_functions.map_y": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_cli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma._base.serialization.tests.test_cli.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma._base.serialization.tests.test_cli.Capturing": {
  "data": {
   "shadows": "pyemma.util.contexts.Capturing"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.TestListModelCLI": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests.test_cli.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests.test_cli.TestListModelCLI.setUpClass": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "classmethod",
    "pyemma._base.serialization.tests.test_cli.tempfile",
    "pyemma.coordinates.cluster_kmeans",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tica",
    "pyemma.datasets.get_bpti_test_data"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_cli.TestListModelCLI.tearDownClass": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "classmethod",
    "pyemma._base.serialization.tests.test_cli.os"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_cli.TestListModelCLI.test_recursive": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pyemma._base.serialization.cli.main",
    "pyemma.util.contexts.Capturing"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_cli.cluster_kmeans": {
  "data": {
   "shadows": "pyemma.coordinates.cluster_kmeans"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.get_bpti_test_data": {
  "data": {
   "shadows": "pyemma.datasets.get_bpti_test_data"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.main": {
  "data": {
   "shadows": "pyemma._base.serialization.cli.main"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.tica": {
  "data": {
   "shadows": "pyemma.coordinates.tica"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma._base.serialization.tests.test_serialization.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma._base.serialization.tests.test_serialization.ClassVersionException": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.ClassVersionException"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.H5File": {
  "data": {
   "shadows": "pyemma._base.serialization.h5file.H5File"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.OldVersionUnsupported": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.OldVersionUnsupported"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests.test_serialization.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.setUp": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests.test_serialization.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.tearDown": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests.test_serialization.os"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_delete": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "pyemma._base.serialization.h5file.H5File",
    "pyemma._base.serialization.tests.test_serialization.np_container"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_developer_forgot_to_add_version": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "broken",
    "pyemma._base.serialization.serialization.ClassVersionException"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_developer_forgot_to_add_version.broken": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_evil_things_not_allowed": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "numpy.empty",
    "pickle.UnpicklingError",
    "pyemma._base.serialization.serialization.SerializableMixIn.__getstate__",
    "pyemma._base.serialization.tests.test_serialization.np_container",
    "pyemma._base.serialization.tests.test_serialization.pyemma",
    "pyemma._base.serialization.tests.test_serialization.types",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_evil_things_not_allowed.evil": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests.test_serialization.subprocess"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_interpolation_with_map": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests.test_serialization.patch_old_location",
    "pyemma._base.serialization.tests.test_serialization.pyemma",
    "pyemma._base.serialization.util.class_rename_registry",
    "pyemma._base.serialization.util.class_rename_registry.save",
    "test_cls_v1"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_model_not_existant": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "pyemma._base.serialization.h5file.H5File",
    "pyemma._base.serialization.tests.test_serialization.np_container"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_numpy_container": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pyemma._base.serialization.tests.test_serialization.np_container"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_numpy_container_object_array": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.array",
    "pyemma._base.serialization.tests.test_serialization.np_container"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_private": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests.test_serialization.private_attr",
    "pyemma._base.serialization.tests.test_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_recent_model_with_old_version": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "_set_version",
    "pyemma._base.serialization.serialization.OldVersionUnsupported",
    "pyemma._base.serialization.serialization.SerializableMixIn._get_version",
    "pyemma._base.serialization.tests.test_serialization.pyemma",
    "pyemma._base.serialization.util.class_rename_registry",
    "pyemma._base.serialization.util.class_rename_registry.exception.args",
    "test_cls_v3"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_recent_model_with_old_version._set_version": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_rename": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "pyemma._base.serialization.h5file.H5File",
    "pyemma._base.serialization.tests.test_serialization.np_container"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_renamed_class": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "_deleted_in_old_version",
    "pyemma._base.serialization.tests.test_serialization.patch_old_location",
    "pyemma._base.serialization.tests.test_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_save_interface": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "test_cls_v1",
    "test_cls_v1.load"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_updated_class_v1_to_v2": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma._base.serialization.tests.test_serialization.patch_old_location",
    "pyemma._base.serialization.tests.test_serialization.pyemma",
    "test_cls_v1"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_updated_class_v1_to_v3": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "hasattr",
    "numpy.testing.assert_equal",
    "pyemma._base.serialization.tests.test_serialization.patch_old_location",
    "pyemma._base.serialization.tests.test_serialization.pyemma",
    "test_cls_v1"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_updated_class_v2_to_v3": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "hasattr",
    "pyemma._base.serialization.tests.test_serialization.patch_old_location",
    "pyemma._base.serialization.tests.test_serialization.pyemma",
    "test_cls_v2"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.UnpicklingError": {
  "data": {
   "shadows": "pickle.UnpicklingError"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.c": {
  "data": {
   "shadows": "pyemma._base.serialization.util.class_rename_registry"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.class_rename_registry": {
  "data": {
   "shadows": "pyemma._base.serialization.util.class_rename_registry"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.handle_old_classes": {
  "data": {
   "shadows": "pyemma._base.serialization.util.handle_old_classes"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.np_container": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests.test_serialization.np_container.__eq__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "isinstance",
    "numpy.testing.assert_equal",
    "pyemma._base.serialization.tests.test_serialization.np_container",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.np_container.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.patch_old_location": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "pyemma._base.serialization.tests.test_serialization.copy",
    "pyemma._base.serialization.util.class_rename_registry",
    "pyemma._base.serialization.util.class_rename_registry.find_replacement_for_old",
    "pyemma._base.serialization.util.handle_old_classes",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.private_attr": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests.test_serialization.private_attr.__init__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.private_attr.has_private_attr": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.serialization.tests.test_topology.H5File": {
  "data": {
   "shadows": "pyemma._base.serialization.h5file.H5File"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology.Residue": {
  "data": {
   "shadows": "mdtraj.core.topology.Residue"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology.TestTopology": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests.test_topology.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests.test_topology.TestTopology._load_cmp": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pyemma._base.serialization.h5file.H5File",
    "pyemma._base.serialization.tests.test_topology.mdtraj",
    "tuple",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_topology.TestTopology._load_cmp.eq": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "isinstance",
    "mdtraj.core.topology.Residue",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_topology.TestTopology.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests.test_topology.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_topology.TestTopology.tearDown": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests.test_topology.os"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_topology.TestTopology.test_bpti": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests.test_topology.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_topology.TestTopology.test_opsin": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pyemma._base.serialization.tests.test_topology.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_topology.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._base.serialization.util": {
  "data": {
   "symbols_in_volume": [
    "pyemma._base.serialization.util._ClassRenameRegistry"
   ]
  },
  "type": "module"
 },
 "pyemma._base.serialization.util._ClassRenameRegistry": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.util._ClassRenameRegistry.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.util._ClassRenameRegistry.add_mapping": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.util._ClassRenameRegistry.clear": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "pyemma._base.serialization.util._ClassRenameRegistry.find_replacement_for_old": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pyemma._base.serialization.util._ClassRenameRegistry.old_handled_by": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pyemma._base.serialization.util.__author_": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pyemma._base.serialization.util._importable_name": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "pyemma._base.serialization.util.class_rename_registry": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyemma._base.serialization.util.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyemma._base.serialization.util.handle_old_classes": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._base.serialization.util.handle_old_classes.__call__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyemma._base.serialization.util.class_rename_registry"
   ]
  },
  "type": "function"
 },
 "pyemma._base.serialization.util.handle_old_classes.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "list",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma._base.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.tests.test_estimator": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pyemma._base.tests.test_estimator.Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma._base.tests.test_estimator.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "pyemma._base.tests.test_estimator.TestBaseEstimator": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pyemma._base.tests.test_estimator.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma._base.tests.test_estimator.TestBaseEstimator.test_sklearn_compat_fit": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "T",
    "pyemma._base.tests.test_estimator.have_sklearn",
    "pyemma._base.tests.test_estimator.unittest",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "pyemma._base.tests.test_estimator.TestBaseEstimator.test_sklearn_compat_fit.T": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pyemma._base.estimator.Estimator"
   ]
  },
  "type": "class"
 },
 "pyemma._base.tests.test_estimator.TestBaseEstimator.test_sklearn_compat_fit.T._estimate": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "pyemma._base.tests.test_estimator.have_sklearn": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyemma._base.tests.test_estimator.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "pyemma._base.tests.test_estimator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._ext": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyemma._ext.orderedset": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.orderedset.__version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pyemma._ext.sklearn": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.sklearn.base": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.sklearn.base.BaseEstimator": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._ext.sklearn.base.BaseEstimator.__repr__": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "len",
    "pyemma._ext.sklearn.base._pprint"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.BaseEstimator._get_param_names": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "RuntimeError",
    "classmethod",
    "getattr",
    "object.__init__",
    "pyemma.util.reflection.getargspec_no_self"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.BaseEstimator.get_params": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dict",
    "getattr",
    "hasattr",
    "len",
    "list",
    "pyemma._ext.sklearn.base.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.BaseEstimator.set_params": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.ClusterMixin": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._ext.sklearn.base.ClusterMixin.fit_predict": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.MetaEstimatorMixin": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._ext.sklearn.base.TransformerMixin": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._ext.sklearn.base.TransformerMixin.fit_transform": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base._first_and_last_element": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.ndarray",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base._pprint": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "list",
    "numpy.get_printoptions",
    "numpy.set_printoptions",
    "printer",
    "repr",
    "sorted",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.clone": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "DeprecationWarning",
    "RuntimeError",
    "TypeError",
    "estimator_type",
    "frozenset",
    "hasattr",
    "isinstance",
    "klass",
    "list",
    "numpy.all",
    "numpy.ndarray",
    "pyemma._ext.sklearn.base._first_and_last_element",
    "pyemma._ext.sklearn.base.copy",
    "pyemma._ext.sklearn.base.warnings",
    "repr",
    "scipy.sparse.issparse",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.base.getargspec_no_self": {
  "data": {
   "shadows": "pyemma.util.reflection.getargspec_no_self"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.base.is_classifier": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.is_regressor": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.base.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.parameter_search": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.sklearn.parameter_search.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.parameter_search.ParameterGrid": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._ext.sklearn.parameter_search.ParameterGrid.__getitem__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "IndexError",
    "divmod",
    "len",
    "numpy.product",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.parameter_search.ParameterGrid.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "collections.Mapping",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.parameter_search.ParameterGrid.__iter__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dict",
    "itertools.product",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.parameter_search.ParameterGrid.__len__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "functools.partial",
    "functools.reduce",
    "itertools.product",
    "len",
    "pyemma._ext.sklearn.parameter_search.operator",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.parameter_search.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.parameter_search.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.parameter_search.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.parameter_search.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.parameter_search.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "pyemma._ext.variational": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.estimators.covar_c": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.estimators.covar_c.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools.variable_cols": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "TypeError",
    "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_char",
    "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_double",
    "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_float",
    "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_int",
    "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_long",
    "pyemma._ext.variational.estimators.covar_c.covartools.numpy"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools.variable_cols_char": {
  "data": {
   "shadows": "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_char"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools.variable_cols_double": {
  "data": {
   "shadows": "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_double"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools.variable_cols_float": {
  "data": {
   "shadows": "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_float"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools.variable_cols_int": {
  "data": {
   "shadows": "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_int"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools.variable_cols_long": {
  "data": {
   "shadows": "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_long"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.moments": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.estimators.moments._M2": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "float",
    "numpy.bool",
    "numpy.ones",
    "pyemma._ext.variational.estimators.moments._M2_const",
    "pyemma._ext.variational.estimators.moments._M2_dense",
    "pyemma._ext.variational.estimators.moments._M2_sparse",
    "pyemma._ext.variational.estimators.moments._is_zero"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._M2_const": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "len",
    "numpy.ix_",
    "numpy.outer",
    "numpy.sum",
    "numpy.zeros",
    "pyemma._ext.variational.estimators.moments._M2_dense",
    "pyemma._ext.variational.estimators.moments._is_zero"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._M2_dense": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._M2_sparse": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "len",
    "numpy.ix_",
    "numpy.zeros",
    "pyemma._ext.variational.estimators.moments._M2_dense"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._M2_sparse_sym": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "len",
    "numpy.ix_",
    "numpy.zeros",
    "pyemma._ext.variational.estimators.moments._M2_dense",
    "pyemma._ext.variational.estimators.moments._filter_variable_indices"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._M2_symmetric": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "float",
    "numpy.bool",
    "numpy.ones",
    "pyemma._ext.variational.estimators.moments._M2_const",
    "pyemma._ext.variational.estimators.moments._M2_dense",
    "pyemma._ext.variational.estimators.moments._M2_sparse_sym",
    "pyemma._ext.variational.estimators.moments._filter_variable_indices",
    "pyemma._ext.variational.estimators.moments._is_zero"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments.__author__": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators.moments._center": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "float",
    "numpy.subtract"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._copy_convert": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._filter_variable_indices": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "numpy.in1d",
    "numpy.searchsorted",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._is_zero": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "numpy.ndarray",
    "pyemma._ext.variational.estimators.moments.numbers"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._sparsify": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._sparsify_pair": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "pyemma._ext.variational.estimators.moments._is_zero",
    "pyemma._ext.variational.estimators.moments._sparsify",
    "pyemma._ext.variational.estimators.moments.math"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._sum": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.sum",
    "numpy.zeros",
    "pyemma._ext.variational.estimators.moments._sum_sparse"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._sum_sparse": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments.covar": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "float",
    "pyemma._ext.variational.estimators.moments.moments_XX"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments.covars": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "float",
    "pyemma._ext.variational.estimators.moments.moments_XXXY"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.moments.moments_XX": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "pyemma._ext.variational.estimators.moments._M2",
    "pyemma._ext.variational.estimators.moments._center",
    "pyemma._ext.variational.estimators.moments._copy_convert",
    "pyemma._ext.variational.estimators.moments._sparsify",
    "pyemma._ext.variational.estimators.moments._sum",
    "pyemma._ext.variational.estimators.moments.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments.moments_XXXY": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "ValueError",
    "pyemma._ext.variational.estimators.moments._M2",
    "pyemma._ext.variational.estimators.moments._M2_symmetric",
    "pyemma._ext.variational.estimators.moments._center",
    "pyemma._ext.variational.estimators.moments._copy_convert",
    "pyemma._ext.variational.estimators.moments._sparsify_pair",
    "pyemma._ext.variational.estimators.moments._sum",
    "pyemma._ext.variational.estimators.moments.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments.moments_block": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "pyemma._ext.variational.estimators.moments._M2",
    "pyemma._ext.variational.estimators.moments._center",
    "pyemma._ext.variational.estimators.moments._copy_convert",
    "pyemma._ext.variational.estimators.moments._sparsify",
    "pyemma._ext.variational.estimators.moments._sum",
    "pyemma._ext.variational.estimators.moments.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.moments.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.moments.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.running_moments": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.estimators.running_moments.Moments": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._ext.variational.estimators.running_moments.Moments.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.Moments.combine": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.Moments.copy": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyemma._ext.variational.estimators.running_moments.Moments"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.Moments.covar": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.Moments.mean_x": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.Moments.mean_y": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.MomentsStorage": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._ext.variational.estimators.running_moments.MomentsStorage.__init__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.MomentsStorage._can_merge_tail": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.MomentsStorage.moments": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.MomentsStorage.store": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.__init__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ValueError",
    "pyemma._ext.variational.estimators.running_moments.MomentsStorage",
    "pyemma._ext.variational.estimators.running_moments.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.add": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "isinstance",
    "len",
    "moments_XX",
    "moments_XXXY",
    "moments_block",
    "numpy.ndarray",
    "numpy.ones",
    "pyemma._ext.variational.estimators.running_moments.Moments",
    "pyemma._ext.variational.estimators.running_moments.numbers",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.cov_XX": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.cov_XY": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.cov_YY": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.mean_X": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.mean_Y": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.moments_XX": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.moments_XY": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.moments_YY": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.sum_X": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.sum_Y": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.weight_XX": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.weight_XY": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.weight_YY": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.__author__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators.running_moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.running_moments.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.running_moments.running_covar": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "pyemma._ext.variational.estimators.running_moments.RunningCovar"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.estimators.tests.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma._ext.variational.estimators.tests.benchmark_moments.main"
   ]
  },
  "type": "module"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.benchmark_moments": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "print",
    "pyemma._ext.variational.estimators.tests.benchmark_moments.genS",
    "pyemma._ext.variational.estimators.tests.benchmark_moments.genX",
    "pyemma._ext.variational.estimators.tests.benchmark_moments.genY",
    "pyemma._ext.variational.estimators.tests.benchmark_moments.mytime_momentsXX",
    "pyemma._ext.variational.estimators.tests.benchmark_moments.mytime_momentsXXXY",
    "pyemma._ext.variational.estimators.tests.benchmark_moments.reftime_momentsXX",
    "pyemma._ext.variational.estimators.tests.benchmark_moments.reftime_momentsXXXY",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.genS": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.genX": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.rand",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.genY": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.random.rand",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.main": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pyemma._ext.variational.estimators.tests.benchmark_moments.benchmark_moments"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.mytime_momentsXX": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "float",
    "pyemma._ext.variational.estimators.tests.benchmark_moments.time",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.mytime_momentsXXXY": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "float",
    "pyemma._ext.variational.estimators.tests.benchmark_moments.time",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.reftime_momentsXX": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "float",
    "numpy.dot",
    "pyemma._ext.variational.estimators.tests.benchmark_moments.time",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.reftime_momentsXXXY": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "float",
    "numpy.dot",
    "pyemma._ext.variational.estimators.tests.benchmark_moments.time",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.tests.test_moments": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma._ext.variational.estimators.tests.test_moments.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pyemma._ext.variational.estimators.tests.test_moments.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments._test_moments_X": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.diag",
    "numpy.dot",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments._test_moments_XY": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "float",
    "numpy.allclose",
    "numpy.diag",
    "numpy.dot",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments._test_moments_block": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "float",
    "numpy.allclose",
    "numpy.diag",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.setUpClass": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array",
    "numpy.bool",
    "numpy.ones",
    "numpy.random.choice",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_boolean_moments": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.dot",
    "numpy.int64",
    "numpy.round",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_X": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_sparseconst": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_sparsezero": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_sym": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_sym_sparseconst": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_sym_sparsezero": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_weighted": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_weighted_sparseconst": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_weighted_sparsezero": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_weighted_sym": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_weighted_sym_sparseconst": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_weighted_sym_sparsezero": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_X_sparseconst": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_X_sparsezero": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_block": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_block_sparseconst": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_block_sparsezero": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma._ext.variational.estimators.tests.test_running_moments.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "pyemma._ext.variational.estimators.tests.test_running_moments.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.setUpClass": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "numpy.array",
    "numpy.dot",
    "numpy.random.rand",
    "numpy.shape",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_meanfree": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_sym_meanfree": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_sym_withmean": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_weighted_meanfree": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_weighted_sym_meanfree": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_weighted_sym_withmean": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_weighted_withmean": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_withmean": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXYY_meanfree": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XX_meanfree": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XX_withmean": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.solvers.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma._ext.variational.solvers.direct": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.solvers.direct._ZeroRankError": {
  "data": {
   "shadows": "ZeroRankError"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers.direct.__author__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pyemma._ext.variational.solvers.direct._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers.direct.eig": {
  "data": {
   "shadows": "scipy.linalg.eig"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers.direct.eig_corr": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.allclose",
    "numpy.argmax",
    "numpy.dot",
    "numpy.sign",
    "pyemma._ext.variational.solvers.direct.sort_by_norm",
    "pyemma._ext.variational.solvers.direct.spd_inv_split",
    "range",
    "scipy.linalg.eig",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.direct.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers.direct.schur": {
  "data": {
   "shadows": "scipy.linalg.schur"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers.direct.sort_by_norm": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argsort"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.direct.spd_eig": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "eig_qr",
    "max",
    "numpy.abs",
    "numpy.allclose",
    "numpy.argmax",
    "numpy.diag",
    "numpy.min",
    "numpy.searchsorted",
    "numpy.shape",
    "numpy.sign",
    "pyemma._ext.variational.solvers.direct.sort_by_norm",
    "range",
    "scipy.linalg.schur"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.direct.spd_inv": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.shape",
    "pyemma._ext.variational.solvers.direct.spd_eig"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.direct.spd_inv_split": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.shape",
    "numpy.sqrt",
    "pyemma._ext.variational.solvers.direct.spd_eig"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.direct.spd_inv_sqrt": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.ones",
    "numpy.shape",
    "numpy.sqrt",
    "pyemma._ext.variational.solvers.direct.spd_eig"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.eig_qr": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.solvers.eig_qr.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma._ext.variational.solvers.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.solvers.tests.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma._ext.variational.solvers.tests.test_direct": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma._ext.variational.solvers.tests.test_direct.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.TestDirect": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pyemma._ext.variational.solvers.tests.test_direct.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.TestDirect.test_eig_corr": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.testing.assert_allclose",
    "pyemma._ext.variational.solvers.tests.test_direct.scipy",
    "pyemma._ext.variational.solvers.tests.test_direct.sort_by_norm_and_imag_sign",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.TestDirect.test_spd_inv_split": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.abs",
    "numpy.allclose",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.inv",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.sort_by_norm_and_imag_sign": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.argsort",
    "numpy.float64",
    "numpy.imag",
    "numpy.sign",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._ext.variational.util": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.util.ZeroRankError": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.linalg.LinAlgError"
   ]
  },
  "type": "class"
 },
 "pyemma._ext.variational.util.__author__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pyemma._ext.variational.util._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.util.features_to_basis": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "pyemma._version": {
  "data": {},
  "type": "module"
 },
 "pyemma._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pyemma._version.json",
    "pyemma._version.version_json"
   ]
  },
  "type": "function"
 },
 "pyemma._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyemma._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pyemma._version_check": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "_dummy",
    "pyemma.os",
    "pyemma.sys",
    "pyemma.threading"
   ]
  },
  "type": "function"
 },
 "pyemma._version_check._dummy": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "pyemma._version_check._dummy.start": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyemma._version_check._impl": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "UserWarning",
    "contextlib.closing",
    "distutils.version.LooseVersion",
    "filter",
    "pyemma.json",
    "pyemma.logging",
    "pyemma.platform",
    "pyemma.sys",
    "pyemma.uuid",
    "pyemma.warnings",
    "str",
    "tuple",
    "urllib.request.Request",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "pyemma.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "pyemma.coordinates": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.acf": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.acf.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.coordinates.acf.__author__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyemma.coordinates.acf.acf": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Exception",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.ceil",
    "numpy.conjugate",
    "numpy.fft.fft",
    "numpy.fft.ifft",
    "numpy.linspace",
    "numpy.log2",
    "numpy.resize",
    "numpy.transpose",
    "pyemma.coordinates.acf.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.acf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.acf.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.coordinates.api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger",
    "str"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.api.AssignCenters": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.assign.AssignCenters"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.Discretizer": {
  "data": {
   "shadows": "pyemma.coordinates.pipelines.Discretizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.feature_reader.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.Iterable": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.iterable.Iterable"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.KmeansClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.kmeans.KmeansClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.LaggedCovariance": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.LaggedCovariance"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.MDFeaturizer": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.MiniBatchKmeansClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.NystroemTICA": {
  "data": {
   "shadows": "pyemma.coordinates.transform.nystroem_tica.NystroemTICA"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.PCA": {
  "data": {
   "shadows": "pyemma.coordinates.transform.pca.PCA"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.Pipeline": {
  "data": {
   "shadows": "pyemma.coordinates.pipelines.Pipeline"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.SourcesMerger": {
  "data": {
   "shadows": "pyemma.coordinates.data.sources_merger.SourcesMerger"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.TICA": {
  "data": {
   "shadows": "pyemma.coordinates.transform.tica.TICA"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.Topology": {
  "data": {
   "shadows": "mdtraj.Topology"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.Trajectory": {
  "data": {
   "shadows": "mdtraj.Trajectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.UniformTimeClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.VAMP": {
  "data": {
   "shadows": "pyemma.coordinates.transform.vamp.VAMP"
  },
  "type": "import"
 },
 "pyemma.coordinates.api._DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.api._KoopmanEstimator": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.koopman._KoopmanEstimator"
  },
  "type": "import"
 },
 "pyemma.coordinates.api._PyEMMA_DeprecationWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
  },
  "type": "import"
 },
 "pyemma.coordinates.api._RegularSpaceClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.regspace.RegularSpaceClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.__all__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyemma.coordinates.api.__author__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.coordinates.api.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyemma.coordinates.api.__credits__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyemma.coordinates.api.__docformat__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.coordinates.api.__email__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyemma.coordinates.api.__maintainer__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyemma.coordinates.api._check_old_chunksize_arg": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "NotImplemented",
    "pyemma.coordinates.api.warnings",
    "pyemma.util.annotators.get_culprit",
    "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api._logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.coordinates.api._logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.coordinates.api._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.api._string_types": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pyemma.coordinates.api._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.assign_to_centers": {
  "data": {
   "lineno": 2011,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.api._check_old_chunksize_arg",
    "pyemma.coordinates.clustering.assign.AssignCenters",
    "pyemma.util.reflection.get_default_args"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.cluster_kmeans": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": [
    "pyemma.coordinates.api._check_old_chunksize_arg",
    "pyemma.coordinates.clustering.kmeans.KmeansClustering",
    "pyemma.util.reflection.get_default_args"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.cluster_mini_batch_kmeans": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": [
    "pyemma.coordinates.api._check_old_chunksize_arg",
    "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering",
    "pyemma.util.reflection.get_default_args"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.cluster_regspace": {
  "data": {
   "lineno": 1910,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.api._check_old_chunksize_arg",
    "pyemma.coordinates.clustering.regspace.RegularSpaceClustering",
    "pyemma.util.reflection.get_default_args"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.cluster_uniform_time": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "pyemma.coordinates.api._check_old_chunksize_arg",
    "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering",
    "pyemma.util.reflection.get_default_args"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.combine_sources": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "pyemma.coordinates.data.sources_merger.SourcesMerger"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.covariance_lagged": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pyemma.coordinates.api._string_types",
    "pyemma.coordinates.estimation.covariance.LaggedCovariance",
    "pyemma.coordinates.estimation.koopman._KoopmanEstimator",
    "pyemma.util.types.MethodType",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.create_file_reader": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.create_file_reader"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.discretizer": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "pyemma.coordinates.api._logger",
    "pyemma.coordinates.clustering.kmeans.KmeansClustering",
    "pyemma.coordinates.pipelines.Discretizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.enforce_top": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.enforce_top"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.featurizer": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.frames_from_files": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.frames_from_file.frames_from_files"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.get_culprit": {
  "data": {
   "shadows": "pyemma.util.annotators.get_culprit"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.get_default_args": {
  "data": {
   "shadows": "pyemma.util.reflection.get_default_args"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.histogram": {
  "data": {
   "shadows": "pyemma.coordinates.util.stat.histogram"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.load": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "isinstance",
    "len",
    "list",
    "pyemma.coordinates.api._check_old_chunksize_arg",
    "pyemma.coordinates.api._string_types",
    "pyemma.coordinates.data.util.reader_utils.create_file_reader",
    "pyemma.util.reflection.get_default_args",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.pca": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pyemma.coordinates.api._check_old_chunksize_arg",
    "pyemma.coordinates.api.warnings",
    "pyemma.coordinates.transform.pca.PCA",
    "pyemma.util.reflection.get_default_args"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.pipeline": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pyemma.coordinates.pipelines.Pipeline"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.save_traj": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "isinstance",
    "len",
    "list",
    "mdtraj.Topology",
    "mdtraj.Trajectory",
    "numpy.vstack",
    "pyemma.coordinates.api._logger",
    "pyemma.coordinates.api._string_types",
    "pyemma.coordinates.api.itertools",
    "pyemma.coordinates.data.feature_reader.FeatureReader",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader",
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files",
    "pyemma.coordinates.data.util.reader_utils.enforce_top",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.save_trajs": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "len",
    "numpy.ndarray",
    "pyemma.coordinates.api._logger",
    "pyemma.coordinates.api.os",
    "pyemma.coordinates.api.save_traj",
    "pyemma.util.types.is_iterable",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.source": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "pyemma.coordinates.api._check_old_chunksize_arg",
    "pyemma.coordinates.api._string_types",
    "pyemma.coordinates.data._base.iterable.Iterable",
    "pyemma.coordinates.data.data_in_memory.DataInMemory",
    "pyemma.coordinates.data.util.reader_utils.create_file_reader",
    "pyemma.util.reflection.get_default_args",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.tica": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "float",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "pyemma.coordinates.api._check_old_chunksize_arg",
    "pyemma.coordinates.api._string_types",
    "pyemma.coordinates.api.warnings",
    "pyemma.coordinates.estimation.koopman._KoopmanEstimator",
    "pyemma.coordinates.transform.tica.TICA",
    "pyemma.util.exceptions.PyEMMA_DeprecationWarning",
    "pyemma.util.reflection.get_default_args",
    "pyemma.util.types.MethodType",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.tica_nystroem": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "float",
    "pyemma.coordinates.transform.nystroem_tica.NystroemTICA"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.vamp": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "float",
    "pyemma.coordinates.transform.vamp.VAMP"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.assign": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.assign.AbstractClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.interface.AbstractClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.assign.AssignCenters": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.interface.AbstractClustering",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.assign.AssignCenters.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.array",
    "numpy.float32",
    "pyemma.coordinates.clustering.assign.AssignCenters",
    "pyemma.coordinates.data.create_file_reader",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.assign.AssignCenters._estimate": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.assign.AssignCenters.data_producer": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.clustering.interface.AbstractClustering.data_producer.fset",
    "pyemma.coordinates.clustering.interface.AbstractClustering.data_producer.setter"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.assign.AssignCenters.describe": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.assign.create_file_reader": {
  "data": {
   "shadows": "pyemma.coordinates.data.create_file_reader"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.assign.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.assign.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyemma._base.model.Model",
    "pyemma._base.parallel.NJobsMixIn",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma._ext.sklearn.base.ClusterMixin",
    "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer",
    "pyemma.util.annotators.aliased",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.interface.AbstractClustering",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering._transform_array": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ClusteringBase_f",
    "hasattr",
    "numpy.float32",
    "numpy.require"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.assign": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "len",
    "numpy.ndarray",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.clustercenters": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.dimension": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.dtrajs": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.index_clusters": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len",
    "property",
    "pyemma.util.discrete_trajectories.index_states"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.output_type": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.overwrite_dtrajs": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.sample_indexes_by_cluster": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "pyemma.util.discrete_trajectories.index_states",
    "pyemma.util.discrete_trajectories.sample_indexes_by_state"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.save_dtrajs": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "EnvironmentError",
    "IOError",
    "len",
    "msmtools.dtraj.save_discrete_trajectory",
    "os.path.exists",
    "os.path.join",
    "os.path.split",
    "os.path.splitext",
    "pyemma.coordinates.clustering.interface.os",
    "pyemma.util.files.mkdir_p",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.set_model_params": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.ClusterMixin": {
  "data": {
   "shadows": "pyemma._ext.sklearn.base.ClusterMixin"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.NJobsMixIn": {
  "data": {
   "shadows": "pyemma._base.parallel.NJobsMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.StreamingEstimationTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.index_states": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.index_states"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.mkdir_p": {
  "data": {
   "shadows": "pyemma.util.files.mkdir_p"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.sample_indexes_by_state": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.sample_indexes_by_state"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.write_dtraj": {
  "data": {
   "shadows": "msmtools.dtraj.save_discrete_trajectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.kmeans.AbstractClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.interface.AbstractClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pyemma._base.progress.reporter.ProgressReporterMixin",
    "pyemma.coordinates.clustering.interface.AbstractClustering",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.kmeans.KmeansClustering",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering._check_resume_iteration": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering._collect_data": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering._estimate": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "pyemma.util.contexts.nullcontext"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering._finish_estimate": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "isinstance",
    "numpy.memmap",
    "pyemma.coordinates.clustering.kmeans.os"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering._init_estimate": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "int",
    "isinstance",
    "list",
    "min",
    "pyemma.coordinates.clustering.kmeans.math",
    "pyemma.coordinates.clustering.kmeans.random",
    "pyemma.util.contexts.random_seed",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering._init_in_memory_chunks": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "MemoryError",
    "hasattr",
    "numpy.empty",
    "numpy.float32",
    "numpy.memmap",
    "pyemma.coordinates.clustering.kmeans.psutil",
    "pyemma.coordinates.clustering.kmeans.tempfile",
    "pyemma.util.units.bytes_to_string"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering._initialize_centers": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.empty",
    "numpy.vstack",
    "pyemma.util.contexts.nullcontext",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering.converged": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering.describe": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering.fixed_seed": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "pyemma.coordinates.clustering.kmeans.random",
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering.init_strategy": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.kmeans.KmeansClustering"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering.__init__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering._draw_mini_batch_sample": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "numpy.ones",
    "numpy.random.choice",
    "numpy.sort",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering._estimate": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "iter",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering._init_estimate": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "int",
    "numpy.empty",
    "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering",
    "pyemma.coordinates.clustering.kmeans.math",
    "sum",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering._init_in_memory_chunks": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.ProgressReporterMixin": {
  "data": {
   "shadows": "pyemma._base.progress.reporter.ProgressReporterMixin"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.__all__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyemma.coordinates.clustering.kmeans.bytes_to_string": {
  "data": {
   "shadows": "pyemma.util.units.bytes_to_string"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.kmeans_mod": {
  "data": {
   "shadows": "kmeans"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.nullcontext": {
  "data": {
   "shadows": "pyemma.util.contexts.nullcontext"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.random_seed": {
  "data": {
   "shadows": "pyemma.util.contexts.random_seed"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.regspace": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.regspace.AbstractClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.interface.AbstractClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.regspace.NotConvergedWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.NotConvergedWarning"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.regspace.RegularSpaceClustering": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.interface.AbstractClustering",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.regspace.RegularSpaceClustering.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.regspace.RegularSpaceClustering",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.regspace.RegularSpaceClustering._estimate": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.array",
    "numpy.float32",
    "pyemma.coordinates.clustering.regspace.warnings",
    "pyemma.util.exceptions.NotConvergedWarning"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.regspace.RegularSpaceClustering.describe": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.regspace.RegularSpaceClustering.dmin": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.regspace.RegularSpaceClustering.max_centers": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.regspace.RegularSpaceClustering.n_clusters": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.regspace.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.coordinates.clustering.regspace.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.regspace.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.regspace.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_assign": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger",
    "pyemma.coordinates.clustering.tests.test_assign.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.tests.test_assign.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.setUpClass": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "numpy.array",
    "numpy.random.choice",
    "numpy.random.randn",
    "numpy.zeros",
    "pyemma.coordinates.assign_to_centers",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_assignment_multithread": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.coordinates.assign_to_centers"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_assignment_multithread_minrsmd": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.assign_to_centers",
    "pyemma.coordinates.source",
    "pyemma.datasets.get_bpti_test_data"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_chunksize": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_clustercenters": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_data_producer": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_describe": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pyemma.util.types.is_list_of_string",
    "pyemma.util.types.is_string"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_dimension": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_dtrajs": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "int",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_get_output": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "len",
    "pyemma.util.types.is_int_matrix",
    "pyemma.util.types.is_list"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_in_memory": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_iterator": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pyemma.util.types.is_int",
    "pyemma.util.types.is_int_matrix"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_map": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_min_rmsd": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.unique",
    "pyemma.coordinates.assign_to_centers",
    "pyemma.coordinates.source",
    "pyemma.datasets.get_bpti_test_data"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_n_frames_total": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_number_of_trajectories": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_output_type": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_return_dtrajs": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "pyemma.coordinates.assign_to_centers",
    "pyemma.util.types.is_int_vector"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_save_dtrajs": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.tests.test_assign.os",
    "pyemma.util.files.TemporaryDirectory",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_threads_cpu_count_def_arg": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "int",
    "pyemma.coordinates.assign_to_centers",
    "pyemma.coordinates.clustering.tests.test_assign.os",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_threads_cpu_count_def_arg.fake_cpu_count": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_threads_env_num_threads_fixed": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "pyemma.coordinates.assign_to_centers",
    "pyemma.coordinates.clustering.tests.test_assign.os",
    "pyemma.coordinates.clustering.tests.test_assign.temporary_env"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_threads_env_num_threads_fixed_def_arg": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "pyemma.coordinates.assign_to_centers",
    "pyemma.coordinates.clustering.tests.test_assign.os",
    "pyemma.coordinates.clustering.tests.test_assign.temporary_env",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_threads_omp_env_arg_borked": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "pyemma.coordinates.assign_to_centers",
    "pyemma.coordinates.clustering.tests.test_assign.temporary_env",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_threads_omp_env_arg_borked.fake_cpu_count": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_trajectory_length": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_trajectory_lengths": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_wrong_centers_argument": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "pyemma.coordinates.assign_to_centers"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_wrong_centers_argument2": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "pyemma.coordinates.assign_to_centers"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.data": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyemma.coordinates.clustering.tests.test_assign.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.temporary_env": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "pyemma.coordinates.clustering.tests.test_assign.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger",
    "pyemma.coordinates.clustering.tests.test_cluster.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.KmeansClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.KmeansClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.RegularSpaceClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.RegularSpaceClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.tests.test_cluster.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.setUpClass": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "numpy.array",
    "numpy.random.randn",
    "numpy.zeros",
    "pyemma.coordinates.cluster_kmeans",
    "pyemma.coordinates.cluster_regspace",
    "pyemma.coordinates.cluster_uniform_time",
    "pyemma.coordinates.clustering.tests.test_cluster.TestCluster",
    "pyemma.coordinates.clustering.tests.test_cluster.tempfile",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_chunksize": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_clustercenters": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_data_producer": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_describe": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pyemma.util.types.is_list_of_string",
    "pyemma.util.types.is_string"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_dimension": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_dtrajs": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_get_output": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "len",
    "pyemma.util.types.is_int_matrix",
    "pyemma.util.types.is_list"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_in_memory": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_iterator": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pyemma.util.types.is_int",
    "pyemma.util.types.is_int_matrix"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_map": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_n_frames_total": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_number_of_trajectories": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_output_type": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_save_dtrajs": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.tests.test_cluster.os",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_trajectory_length": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_trajectory_lengths": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestClusterDirect": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.tests.test_cluster.TestCluster"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestClusterDirect.setUpClass": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "numpy.array",
    "numpy.random.randn",
    "numpy.zeros",
    "pyemma.coordinates.clustering.KmeansClustering",
    "pyemma.coordinates.clustering.RegularSpaceClustering",
    "pyemma.coordinates.clustering.UniformTimeClustering",
    "pyemma.coordinates.clustering.tests.test_cluster.tempfile",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.UniformTimeClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.UniformTimeClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.clustering.tests.test_cluster_samples.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.TestClusterSamples": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.tests.test_cluster_samples.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.TestClusterSamples.setUp": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyemma.coordinates.cluster_regspace"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.TestClusterSamples.setUpClass": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.clustering.tests.test_cluster_samples.TestClusterSamples",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.TestClusterSamples.test_index_states": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.TestClusterSamples.test_sample_indexes_by_state": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.in1d"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.clustering.tests.test_kmeans.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.Capturing": {
  "data": {
   "shadows": "pyemma.util.contexts.Capturing"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.MockLoggingHandler": {
  "data": {
   "shadows": "pyemma.util.testing_tools.MockLoggingHandler"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.tests.test_kmeans.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.testDtraj": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.api.cluster_kmeans",
    "pyemma.coordinates.clustering.tests.test_kmeans.os",
    "pyemma.util.files.TemporaryDirectory",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_3gaussian_1d_singletraj": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.hstack",
    "numpy.isfinite",
    "numpy.linalg.norm",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "pyemma._base.estimator.param_grid",
    "pyemma.coordinates.api.cluster_kmeans",
    "pyemma.util.contexts.numpy_random_seed"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_3gaussian_2d_multitraj": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.random.randn",
    "numpy.zeros",
    "pyemma.coordinates.api.cluster_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_check_convergence_serial_parallel": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.api.cluster_kmeans",
    "pyemma.coordinates.clustering.tests.test_kmeans.random",
    "pyemma.coordinates.clustering.tests.util.make_blobs"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_kmeans_converge_outlier_to_equilibrium_state": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.float32",
    "pyemma.coordinates.api.cluster_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_kmeans_convex_hull": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "numpy.asarray",
    "numpy.float32",
    "numpy.inner",
    "pyemma.coordinates.api.cluster_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_kmeans_equilibrium_state": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.api.cluster_kmeans",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_negative_seed": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.api.cluster_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_seed_too_large": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.api.cluster_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_skip": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "len",
    "numpy.random.rand",
    "pyemma.coordinates.api.cluster_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_with_n_jobs_minrmsd": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pyemma.coordinates.api.cluster_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_with_pg": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pyemma.coordinates.api.cluster_kmeans",
    "pyemma.util.contexts.Capturing",
    "pyemma.util.contexts.settings"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_with_pg_data_not_in_memory": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "pyemma.coordinates.api.cluster_kmeans",
    "pyemma.coordinates.clustering.tests.test_kmeans.os",
    "pyemma.coordinates.clustering.tests.test_kmeans.pkg_resources",
    "pyemma.coordinates.clustering.tests.test_kmeans.pyemma",
    "pyemma.util.contexts.Capturing",
    "pyemma.util.contexts.settings"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeansResume": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.tests.test_kmeans.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeansResume.setUpClass": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "classmethod",
    "numpy.hstack",
    "numpy.random.randn",
    "pyemma.util.contexts.numpy_random_seed"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeansResume.test_converged_memory_freed": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "hasattr",
    "numpy.atleast_2d",
    "numpy.random.choice",
    "pyemma.coordinates.api.cluster_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeansResume.test_inefficient_args_log": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "pyemma.coordinates.api.cluster_kmeans",
    "pyemma.util.testing_tools.MockLoggingHandler"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeansResume.test_non_converged_keep_memory": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "hasattr",
    "numpy.atleast_2d",
    "numpy.random.choice",
    "pyemma.coordinates.api.cluster_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeansResume.test_resume": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.norm",
    "pyemma.coordinates.api.cluster_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeansResume.test_syntetic_trivial": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "enumerate",
    "numpy.all",
    "numpy.array",
    "numpy.zeros",
    "pyemma.coordinates.api.cluster_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.cluster_kmeans": {
  "data": {
   "shadows": "pyemma.coordinates.api.cluster_kmeans"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.make_blobs": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.tests.util.make_blobs"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.numpy_random_seed": {
  "data": {
   "shadows": "pyemma.util.contexts.numpy_random_seed"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.param_grid": {
  "data": {
   "shadows": "pyemma._base.estimator.param_grid"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.settings": {
  "data": {
   "shadows": "pyemma.util.contexts.settings"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.TestMiniBatchKmeans": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.TestMiniBatchKmeans.test_3gaussian_1d_singletraj": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.hstack",
    "numpy.random.randn",
    "pyemma.coordinates.api.cluster_mini_batch_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.TestMiniBatchKmeans.test_3gaussian_2d_multitraj": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.random.randn",
    "numpy.zeros",
    "pyemma.coordinates.api.cluster_mini_batch_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.TestMiniBatchKmeansResume": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.TestMiniBatchKmeansResume.setUpClass": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "classmethod",
    "numpy.hstack",
    "numpy.random.randn",
    "pyemma.util.contexts.numpy_random_seed"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.TestMiniBatchKmeansResume.test_resume": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.norm",
    "pyemma.coordinates.api.cluster_mini_batch_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.cluster_mini_batch_kmeans": {
  "data": {
   "shadows": "pyemma.coordinates.api.cluster_mini_batch_kmeans"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.numpy_random_seed": {
  "data": {
   "shadows": "pyemma.util.contexts.numpy_random_seed"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.clustering.tests.test_regspace.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.RandomDataSource": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.RandomDataSource.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.clustering.tests.test_regspace.RandomDataSource",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.RegularSpaceClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.regspace.RegularSpaceClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.tests.test_regspace.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.setUp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.regspace.RegularSpaceClustering",
    "pyemma.coordinates.clustering.tests.test_regspace.RandomDataSource"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test1d_data": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.api.cluster_regspace"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test_algorithm": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.linalg.norm",
    "pyemma.coordinates.clustering.tests.test_regspace.itertools",
    "pyemma.util.types.is_int_vector"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test_assignment": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "len",
    "numpy.random.random",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test_minRMSD_metric": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.clustering.tests.test_regspace.RandomDataSource"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test_non_existent_metric": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.clustering.tests.test_regspace.RandomDataSource"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test_regspace_nthreads": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.coordinates.api.cluster_regspace"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test_spread_data": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.tests.test_regspace.RandomDataSource"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test_too_small_dmin_should_warn": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.clustering.tests.test_regspace.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.cluster_regspace": {
  "data": {
   "shadows": "pyemma.coordinates.api.cluster_regspace"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.clustering.tests.test_uniform_time.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.TestUniformTimeClustering": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.tests.test_uniform_time.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.TestUniformTimeClustering.test_1d": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.api.cluster_uniform_time",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.TestUniformTimeClustering.test_2d": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.api.cluster_uniform_time",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.TestUniformTimeClustering.test_2d_skip": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.api.cluster_uniform_time",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.TestUniformTimeClustering.test_big_k": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.api.cluster_uniform_time",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.util.check_array": {
  "data": {
   "shadows": "bhmm._external.sklearn.utils.check_array"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.util.check_random_state": {
  "data": {
   "shadows": "scipy._lib._util.check_random_state"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.util.make_blobs": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bhmm._external.sklearn.utils.check_array",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.ones",
    "pyemma.coordinates.clustering.tests.util.numbers",
    "range",
    "scipy._lib._util.check_random_state",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.util.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.uniform_time": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.uniform_time.AbstractClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.interface.AbstractClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.interface.AbstractClustering",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering._estimate": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "int",
    "len",
    "min",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.cumsum",
    "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering",
    "pyemma.coordinates.clustering.uniform_time.math",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering._idx_to_traj_idx": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering.describe": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.uniform_time.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyemma.coordinates.clustering.uniform_time.__author__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyemma.coordinates.clustering.uniform_time.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.uniform_time.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.uniform_time.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data._base": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data._base._in_memory_mixin": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data._base._in_memory_mixin.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base._in_memory_mixin.InMemoryMixin": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base._in_memory_mixin.InMemoryMixin.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base._in_memory_mixin.InMemoryMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base._in_memory_mixin.InMemoryMixin._clear_in_memory": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base._in_memory_mixin.InMemoryMixin._map_to_memory": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma.coordinates.data.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base._in_memory_mixin.InMemoryMixin.in_memory": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data._base.datasource.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.DataSource": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.iterable.Iterable",
    "pyemma.coordinates.data._base.random_accessible.TrajectoryRandomAccessible"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.DataSource",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource._chunk_finite": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.isfinite",
    "numpy.ndarray",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource._data_flow_chain": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource._get_traj_info": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource._source_from_memory": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.data.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.data_producer": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.filenames": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "EnvironmentError",
    "ValueError",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.argsort",
    "numpy.array",
    "numpy.asarray",
    "numpy.unique",
    "pyemma._base.progress.ProgressReporter",
    "pyemma.coordinates.data._base.datasource.itertools",
    "pyemma.coordinates.data._base.datasource.operator",
    "pyemma.coordinates.data._base.datasource.os",
    "pyemma.coordinates.data._base.datasource.warnings",
    "pyemma.coordinates.data.data_in_memory.DataInMemory",
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.instance",
    "pyemma.util.config.use_trajectory_lengths_cache",
    "set",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.get_output": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "MemoryError",
    "RuntimeError",
    "ValueError",
    "enumerate",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.all",
    "numpy.empty",
    "numpy.full",
    "numpy.logical_not",
    "numpy.nan",
    "numpy.ndarray",
    "numpy.where",
    "numpy.zeros",
    "pyemma._base.progress.ProgressReporter",
    "pyemma.config.coordinates_check_output",
    "pyemma.coordinates.data.data_in_memory.DataInMemory",
    "slice",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.is_reader": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.n_chunks": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "float",
    "int",
    "math.ceil",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.n_frames_total": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.ntraj": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.number_of_trajectories": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.trajectory_length": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "IndexError",
    "int",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.trajectory_lengths": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "int",
    "numpy.fromiter",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.write_to_csv": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "OSError",
    "TypeError",
    "hasattr",
    "isinstance",
    "numpy.savetxt",
    "open",
    "pyemma._base.progress.ProgressReporter",
    "pyemma.coordinates.data._base.datasource.errno",
    "pyemma.coordinates.data._base.datasource.os",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.write_to_hdf5": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "pyemma._base.progress.ProgressReporter",
    "pyemma.coordinates.data._base.datasource.h5py"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "next"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.__enter__": {
  "data": {
   "lineno": 1087
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.__exit__": {
  "data": {
   "lineno": 1090
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.__init__": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.DataSourceIterator",
    "pyemma.coordinates.data._base.datasource.IteratorState",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.__init_stride": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray",
    "numpy.unique",
    "pyemma.coordinates.data._base.datasource.IteratorState"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.__iter__": {
  "data": {
   "lineno": 1084
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.__next__": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "StopIteration",
    "len",
    "numpy.all",
    "numpy.logical_not",
    "numpy.where",
    "pyemma.config.coordinates_check_output",
    "pyemma.coordinates.data._base.datasource.InvalidDataInStreamException"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.__str__": {
  "data": {
   "lineno": 1094
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._itraj": {
  "data": {
   "lineno": 864
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._next_chunk": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._select_file": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._select_file_guard": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._select_file_guard.wrapper": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "datasource_method",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._skip_unselected_or_too_short_trajs": {
  "data": {
   "lineno": 878
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._t": {
  "data": {
   "lineno": 837
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._t_abs": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._use_cols": {
  "data": {
   "lineno": 1029
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.chunksize": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.close": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.current_trajindex": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.is_stride_sorted": {
  "data": {
   "lineno": 725
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.is_uniform_stride": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.IteratorState",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.last_chunk": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.last_chunk_in_traj": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.n_chunks": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.n_frames_total": {
  "data": {
   "lineno": 744
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.number_of_trajectories": {
  "data": {
   "lineno": 733
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.pos": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.ra_indices_for_traj": {
  "data": {
   "lineno": 714
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.ra_trajectory_length": {
  "data": {
   "lineno": 722
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.reset": {
  "data": {
   "lineno": 780
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.return_traj_index": {
  "data": {
   "lineno": 985
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.skip": {
  "data": {
   "lineno": 894
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.stride": {
  "data": {
   "lineno": 940
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.traj_keys": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.trajectory_length": {
  "data": {
   "lineno": 736
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.trajectory_lengths": {
  "data": {
   "lineno": 741
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.uniform_stride": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.use_cols": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.DataSourceIterator"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator.__init__": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "hasattr",
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator._next_chunk": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "hasattr",
    "next"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator._select_file": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.DataSourceIterator"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator.chunksize": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "hasattr",
    "pyemma.coordinates.data._base.datasource.DataSourceIterator"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator.close": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator.skip": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "hasattr",
    "pyemma.coordinates.data._base.datasource.DataSourceIterator"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator.transform_function": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "ValueError",
    "callable"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.InvalidDataInStreamException": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.datasource.Iterable": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.iterable.Iterable"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.IteratorState": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.datasource.IteratorState.__init__": {
  "data": {
   "lineno": 616
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.IteratorState.is_stride_sorted": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "all",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.IteratorState.is_uniform_stride": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.IteratorState.pos": {
  "data": {
   "lineno": 637
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.IteratorState.ra_indices_for_traj": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.IteratorState.ra_trajectory_length": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "int",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.TrajectoryInfoCache": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.TrajectoryRandomAccessible": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.random_accessible.TrajectoryRandomAccessible"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.config": {
  "data": {
   "shadows": "pyemma.config"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.streaming_estimator": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data._base.streaming_estimator.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.streaming_estimator.Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.streaming_estimator.Iterable": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.iterable.Iterable"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.streaming_estimator.NotConvergedWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.NotConvergedWarning"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyemma._base.estimator.Estimator"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator.estimate": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.data.DataInMemory",
    "pyemma.coordinates.data._base.iterable.Iterable",
    "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator",
    "pyemma.util.exceptions.NotConvergedWarning",
    "pyemma.util.types.ensure_traj_list",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.streaming_estimator.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data._base.transformer.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer.EncapsulatedIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.EncapsulatedIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer.RandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator",
    "pyemma.coordinates.data._base.transformer.StreamingTransformer"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer.__init__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer.estimate": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer.get_output": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.transformer.StreamingTransformer",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingEstimator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.DataSource",
    "pyemma.coordinates.data._base.transformer.Transformer"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.transformer.StreamingTransformer",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer._clear_in_memory": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.transformer.StreamingTransformer",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer._create_iterator": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer._map_to_memory": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.transformer.StreamingTransformer",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer._set_random_access_strategies": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.transformer.StreamingTransformerRandomAccessStrategy"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.chunksize": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.data_producer": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pyemma.coordinates.data._base.datasource.DataSource",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.dimension": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.n_frames_total": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.number_of_trajectories": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.trajectory_length": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.trajectory_lengths": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformerRandomAccessStrategy": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformerRandomAccessStrategy.__init__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.transformer.StreamingTransformerRandomAccessStrategy",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformerRandomAccessStrategy._handle_slice": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "IndexError",
    "isinstance",
    "len",
    "list",
    "numpy.empty",
    "numpy.ndarray",
    "range",
    "slice",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.Transformer": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "pyemma._ext.sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.transformer.Transformer._transform_array": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.Transformer.describe": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.Transformer.transform": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "numpy.ndarray",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.TransformerMixin": {
  "data": {
   "shadows": "pyemma._ext.sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyemma.coordinates.data._base.transformer.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyemma.coordinates.data._base.transformer.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.coordinates.data._base.datasource.DataSource",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pyemma.coordinates.data.data_in_memory.DataInMemory",
    "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy",
    "pyemma.coordinates.data.data_in_memory.DataInMemoryJaggedRandomAccessStrategy",
    "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearItrajRandomAccessStrategy",
    "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearRandomAccessStrategy",
    "str",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory.__reduce__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory.__str__": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory._add_array_to_storage": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.reshape",
    "pyemma.coordinates.data.data_in_memory.functools"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory._create_iterator": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory._set_dimensions_and_lenghts": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.shape",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory.data": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory.describe": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory.load_from_files": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory.output_type": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy._get_itraj_random_accessible": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "min",
    "numpy.array",
    "pyemma.coordinates.data.data_in_memory.numbers",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy._handle_slice": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "IndexError",
    "isinstance",
    "len",
    "list",
    "numpy.index_exp",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.DataSourceIterator"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator._next_chunk": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator._next_chunk_impl": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "min",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator._select_file": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.DataSourceIterator._select_file_guard"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator.close": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryJaggedRandomAccessStrategy": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryJaggedRandomAccessStrategy._get_itraj_random_accessible": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearItrajRandomAccessStrategy": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearItrajRandomAccessStrategy._get_itraj_random_accessible": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "IndexError",
    "enumerate",
    "len",
    "max",
    "numpy.cumsum",
    "numpy.empty",
    "pyemma.coordinates.clustering.UniformTimeClustering._idx_to_traj_idx",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearItrajRandomAccessStrategy._map_to_absolute_traj_idx": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearRandomAccessStrategy": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearRandomAccessStrategy._handle_slice": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "IndexError",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.index_exp",
    "numpy.ndarray",
    "pyemma.coordinates.clustering.UniformTimeClustering._idx_to_traj_idx",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.DataSourceIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSourceIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.NumPyFileReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.RandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.UniformTimeClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.UniformTimeClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.__author__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.data_in_memory.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.feature_reader.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.EncapsulatedIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.EncapsulatedIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.coordinates.data._base.datasource.DataSource",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "all",
    "any",
    "distutils.version.LooseVersion",
    "pyemma.coordinates.data.feature_reader.FeatureReader",
    "pyemma.coordinates.data.feature_reader.FeatureReaderCuboidRandomAccessStrategy",
    "pyemma.coordinates.data.feature_reader.FeatureReaderJaggedRandomAccessStrategy",
    "pyemma.coordinates.data.feature_reader.FeatureReaderLinearItrajRandomAccessStrategy",
    "pyemma.coordinates.data.feature_reader.FeatureReaderLinearRandomAccessStrategy",
    "pyemma.coordinates.data.feature_reader.mdtraj",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader.__reduce__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "pyemma.coordinates.data.feature_reader.FeatureReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader._assert_toptraj_consistency": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pyemma.coordinates.data.feature_reader.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader._create_iterator": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pyemma.coordinates.data.feature_reader.FeatureReaderIterator"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader._create_iterator.transform": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader._get_traj_info": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "hasattr",
    "len",
    "numpy.shape",
    "pyemma.coordinates.data.feature_reader.mdtraj",
    "pyemma.coordinates.data.util.traj_info_cache.TrajInfo"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader.describe": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader.dimension": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader.supports_format": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "isinstance",
    "mdtraj.formats.registry.FormatRegistry.loaders.keys",
    "pyemma.coordinates.data.feature_reader.os",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader.trajfiles": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "property",
    "pyemma.util.annotators.deprecated"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderCuboidRandomAccessStrategy": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderCuboidRandomAccessStrategy._get_itraj_random_accessible": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "IndexError",
    "enumerate",
    "int",
    "len",
    "max",
    "min",
    "numpy.empty",
    "numpy.ones",
    "numpy.sort",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderCuboidRandomAccessStrategy._handle_slice": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "IndexError",
    "isinstance",
    "len",
    "list",
    "numpy.index_exp",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderIterator": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderIterator._create_mditer": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderIterator._create_patched_iter": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "pyemma.coordinates.util.patches.iterload"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderIterator._select_file": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator._select_file_guard"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderIterator.chunksize": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator.chunksize.setter",
    "pyemma.coordinates.data.feature_reader.FeatureReaderIterator",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderJaggedRandomAccessStrategy": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "pyemma.coordinates.data.feature_reader.FeatureReaderCuboidRandomAccessStrategy"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderJaggedRandomAccessStrategy._get_itraj_random_accessible": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderLinearItrajRandomAccessStrategy": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "pyemma.coordinates.data.feature_reader.FeatureReaderCuboidRandomAccessStrategy"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderLinearItrajRandomAccessStrategy._get_itraj_random_accessible": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "max",
    "numpy.array",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.lexsort",
    "pyemma.coordinates.clustering.UniformTimeClustering._idx_to_traj_idx",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderLinearItrajRandomAccessStrategy._map_to_absolute_traj_idx": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderLinearRandomAccessStrategy": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderLinearRandomAccessStrategy._handle_slice": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "IndexError",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.index_exp",
    "numpy.sort",
    "pyemma.coordinates.clustering.UniformTimeClustering._idx_to_traj_idx",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FormatRegistry": {
  "data": {
   "shadows": "mdtraj.formats.registry.FormatRegistry"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.MDFeaturizer": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.RandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.TrajInfo": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajInfo"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.UniformTimeClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.UniformTimeClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.feature_reader.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.feature_reader.deprecated": {
  "data": {
   "shadows": "pyemma.util.annotators.deprecated"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.patches": {
  "data": {
   "shadows": "pyemma.coordinates.util.patches"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.featurization._base": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.featurization._base.Feature": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization._base.Feature.__eq__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.data.featurization._base.Feature"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization._base.Feature.__repr__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization._base.Feature.describe": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization._base.Feature.dimension": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization._base.Feature.top": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization._base.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.featurization.angles.AngleFeature": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization._base.Feature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.angles.AngleFeature.__eq__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "pyemma.coordinates.data.featurization.angles.AngleFeature",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.AngleFeature.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.AngleFeature.describe": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.util._describe_atom"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.AngleFeature.transform": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.dstack",
    "numpy.rad2deg",
    "numpy.sin",
    "pyemma.coordinates.data.featurization.angles.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.BackboneTorsionFeature": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.angles.DihedralFeature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.angles.BackboneTorsionFeature.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "list",
    "mdtraj.geometry.dihedral.indices_phi",
    "mdtraj.geometry.dihedral.indices_psi",
    "numpy.array",
    "numpy.in1d",
    "pyemma.coordinates.data.featurization.angles.BackboneTorsionFeature",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.BackboneTorsionFeature.describe": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "getlbl",
    "list",
    "pyemma.coordinates.data.featurization.angles.itertools",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.DihedralFeature": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.angles.AngleFeature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.angles.DihedralFeature.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.angles.DihedralFeature",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.DihedralFeature.describe": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.util._describe_atom"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.DihedralFeature.transform": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.dstack",
    "numpy.rad2deg",
    "numpy.sin",
    "pyemma.coordinates.data.featurization.angles.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.Feature": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization._base.Feature"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.SideChainTorsions": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.angles.DihedralFeature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.angles.SideChainTorsions.__init__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "isinstance",
    "len",
    "list",
    "mdtraj.geometry.dihedral",
    "numpy.array",
    "numpy.in1d",
    "numpy.vstack",
    "pyemma.coordinates.data.featurization.angles.SideChainTorsions",
    "set",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.SideChainTorsions.describe": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "enumerate",
    "getlbl",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles._describe_atom": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._describe_atom"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.dihedral": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.indices_chi1": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral.indices_chi1"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.indices_omega": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral.indices_omega"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.indices_phi": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral.indices_phi"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.indices_psi": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral.indices_psi"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.distances": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.featurization.distances.ContactFeature": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.distances.DistanceFeature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.distances.ContactFeature.__eq__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.data.featurization.distances.ContactFeature",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.ContactFeature.__init__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.data.featurization.distances.DistanceFeature"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.ContactFeature.transform": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "len",
    "numpy.argwhere",
    "numpy.float32",
    "numpy.zeros",
    "pyemma.coordinates.data.featurization.distances.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.DistanceFeature": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization._base.Feature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.distances.DistanceFeature.__eq__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "pyemma.coordinates.data.featurization.distances.DistanceFeature",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.DistanceFeature.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.DistanceFeature.describe": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.util._describe_atom"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.DistanceFeature.transform": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.distances.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.Feature": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization._base.Feature"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.distances.GroupMinDistanceFeature": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.distances.DistanceFeature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.distances.GroupMinDistanceFeature.__eq__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "pyemma.coordinates.data.featurization.distances.GroupMinDistanceFeature",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.GroupMinDistanceFeature.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pyemma.coordinates.data.featurization.distances.GroupMinDistanceFeature",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.GroupMinDistanceFeature.describe": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.util._describe_atom"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.GroupMinDistanceFeature.transform": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "enumerate",
    "numpy.argwhere",
    "numpy.zeros",
    "numpy.zeros_like",
    "pyemma.coordinates.data.featurization.distances.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.InverseDistanceFeature": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.distances.DistanceFeature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.distances.InverseDistanceFeature.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.distances.DistanceFeature"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.InverseDistanceFeature.transform": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.distances.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.ResidueMinDistanceFeature": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.distances.DistanceFeature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.distances.ResidueMinDistanceFeature.__eq__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "pyemma.coordinates.data.featurization.distances.ResidueMinDistanceFeature",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.ResidueMinDistanceFeature.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyemma.coordinates.data.featurization.distances.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.ResidueMinDistanceFeature.describe": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.ResidueMinDistanceFeature.transform": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.argwhere",
    "numpy.zeros_like",
    "pyemma.coordinates.data.featurization.distances.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances._describe_atom": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._describe_atom"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.distances.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.distances.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.featurization.featurizer.Loggable": {
  "data": {
   "shadows": "pyemma._base.loggable.Loggable"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyemma._base.loggable.Loggable",
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.__add_feature": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.__repr__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.featurizer.pprint"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer._check_indices": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_all": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_angles": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "AngleFeature"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_backbone_torsions": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "BackboneTorsionFeature"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_chi1_torsions": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "SideChainTorsions",
    "pyemma.util.annotators.deprecated"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_contacts": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "ContactFeature",
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_custom_feature": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_custom_func": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "CustomFeature"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_dihedrals": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "DihedralFeature"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_distances": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "DistanceFeature",
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_distances_ca": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_group_COM": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "GroupCOMFeature"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_group_mindist": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "GroupMinDistanceFeature",
    "pyemma.coordinates.data.featurization.util._parse_groupwise_input"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_inverse_distances": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "InverseDistanceFeature",
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_minrmsd_to_ref": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "MinRmsdFeature"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_residue_COM": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "ResidueCOMFeature",
    "numpy.asarray",
    "pyemma.coordinates.data.featurization.util._atoms_in_residues"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_residue_mindist": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "ResidueMinDistanceFeature",
    "pyemma.util.types.is_string"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_selection": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "AlignFeature",
    "SelectionFeature",
    "ValueError",
    "isinstance",
    "pyemma.coordinates.data.featurization.featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_sidechain_torsions": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "SideChainTorsions"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.describe": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.dimension": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.pairs": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "numpy.array",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.remove_all_custom_funcs": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "CustomFeature",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.select": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.select_Backbone": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.select_Ca": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.select_Heavy": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.topologyfile": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pyemma.coordinates.data.featurization.featurizer.mdtraj",
    "pyemma.coordinates.util.patches.load_topology_cached",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.transform": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "CustomFeature",
    "ValueError",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.empty",
    "numpy.float32",
    "numpy.hstack",
    "numpy.ndarray",
    "pyemma.coordinates.data.featurization.featurizer.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.__all__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.featurization.featurizer.__author__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.featurization.featurizer._atoms_in_residues": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._atoms_in_residues"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer._parse_groupwise_input": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._parse_groupwise_input"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer._parse_pairwise_input": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._parse_pairwise_input"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.deprecated": {
  "data": {
   "shadows": "pyemma.util.annotators.deprecated"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.is_string": {
  "data": {
   "shadows": "pyemma.util.types.is_string"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.load_topology_cached": {
  "data": {
   "shadows": "pyemma.coordinates.util.patches.load_topology_cached"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.load_topology_uncached": {
  "data": {
   "shadows": "mdtraj.load_topology"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.misc": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.featurization.misc.AlignFeature": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.misc.SelectionFeature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.misc.AlignFeature.__eq__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "pyemma.coordinates.data.featurization.misc.AlignFeature",
    "pyemma.coordinates.data.featurization.util.cmp_traj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.AlignFeature.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.misc.AlignFeature",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.AlignFeature.transform": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.misc.AlignFeature",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "itertools.count",
    "pyemma.coordinates.data.featurization._base.Feature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature.__eq__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.data.featurization.misc.CustomFeature",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature.__getstate__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.misc.CustomFeature",
    "pyemma.coordinates.data.featurization.misc.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "next",
    "pyemma.coordinates.data.featurization.misc.CustomFeature",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature.__setstate__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.misc.CustomFeature",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature.__setstate__._warn": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature.describe": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature.transform": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.Feature": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization._base.Feature"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.misc.GroupCOMFeature": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization._base.Feature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.misc.GroupCOMFeature.__eq__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "numpy.array_equal",
    "pyemma.coordinates.data.featurization.misc.GroupCOMFeature",
    "pyemma.coordinates.data.featurization.util.cmp_traj",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.GroupCOMFeature.__init__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.ones_like",
    "pyemma.coordinates.data.featurization.misc.mdtraj",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.GroupCOMFeature.describe": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.GroupCOMFeature.transform": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.average",
    "numpy.hstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.MinRmsdFeature": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization._base.Feature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.misc.MinRmsdFeature.__eq__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "pyemma.coordinates.data.featurization.misc.MinRmsdFeature",
    "pyemma.coordinates.data.featurization.util.cmp_traj",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.MinRmsdFeature.__init__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "pyemma.coordinates.data.featurization.misc.mdtraj",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.MinRmsdFeature.describe": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.MinRmsdFeature.transform": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.array",
    "pyemma.coordinates.data.featurization.misc.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.ResidueCOMFeature": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.misc.GroupCOMFeature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.misc.ResidueCOMFeature.__eq__": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "pyemma.coordinates.data.featurization.misc.ResidueCOMFeature",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.ResidueCOMFeature.__init__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.misc.ResidueCOMFeature",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.SelectionFeature": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization._base.Feature"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.misc.SelectionFeature.__eq__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all",
    "pyemma.coordinates.data.featurization.misc.SelectionFeature",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.SelectionFeature.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.SelectionFeature.describe": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.util._describe_atom"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.SelectionFeature.transform": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc._describe_atom": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._describe_atom"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.misc.cmp_traj": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util.cmp_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.misc.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.misc.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.misc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.featurization.util._atoms_in_residues": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.arange",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.util._catch_unhashable": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "enumerate",
    "hasattr",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pyemma.util.numeric._hash_numpy_array",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.util._describe_atom": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.util._hash_numpy_array": {
  "data": {
   "shadows": "pyemma.util.numeric._hash_numpy_array"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.util._parse_groupwise_input": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.allclose",
    "numpy.arange",
    "numpy.array",
    "numpy.ndarray",
    "numpy.ndim",
    "numpy.sort",
    "numpy.unique",
    "numpy.vstack",
    "numpy.zeros_like",
    "pyemma.util.indices.combinations",
    "pyemma.util.indices.product",
    "pyemma.util.types.is_string",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.util._parse_pairwise_input": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.in1d",
    "numpy.unique",
    "pyemma.util.indices.combinations",
    "pyemma.util.indices.product",
    "pyemma.util.types.is_iterable_of_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.util.cmp_traj": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.util.combinations": {
  "data": {
   "shadows": "pyemma.util.indices.combinations"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.util.hash_top": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "hash",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.util.is_iterable_of_int": {
  "data": {
   "shadows": "pyemma.util.types.is_iterable_of_int"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.util.is_string": {
  "data": {
   "shadows": "pyemma.util.types.is_string"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.util.product": {
  "data": {
   "shadows": "pyemma.util.indices.product"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.DataSourceIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSourceIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.EncapsulatedIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.EncapsulatedIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.feature_reader.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentIterator": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentIterator._select_file": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator._select_file_guard",
    "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentIterator.chunksize": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator.chunksize.setter",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentIterator",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.coordinates.data._base.datasource.DataSource",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader.__init__": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "collections.defaultdict",
    "isinstance",
    "len",
    "list",
    "numpy.cumsum",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader",
    "range",
    "set",
    "sum",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader.__reduce__": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader._create_iterator": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentIterator"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader._get_traj_info": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader._index_to_reader_index": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "ValueError",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader.describe": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader.dimension": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader.filenames_flat": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "property",
    "pyemma.coordinates.data.fragmented_trajectory_reader.itertools"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader.reader_by_filename": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "next",
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.__chunk_contained_in_current_reader": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.__get_chunk_expected_length": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "len",
    "min",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.__get_ifrag_ra_indices": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.__get_ra_index_indices": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "enumerate",
    "numpy.argwhere",
    "numpy.logical_and"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.cumsum",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.__iter__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.__next__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "StopIteration",
    "len",
    "next"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator._allocate_chunk": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "numpy.empty",
    "pyemma.coordinates.data.feature_reader.FeatureReader",
    "pyemma.coordinates.data.util.reader_utils.preallocate_empty_trajectory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator._calculate_new_overlap": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator._read_full": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "min",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator._select_next_ra_iterator": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "RuntimeError",
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator._traj_lengths": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.close": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.ra_indices": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.preallocate_empty_trajectory": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.preallocate_empty_trajectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.source": {
  "data": {
   "shadows": "pyemma.coordinates.api.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.h5_reader.DataInMemoryCuboidRandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.DataInMemoryJaggedRandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemoryJaggedRandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.DataInMemoryLinearItrajRandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearItrajRandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.DataInMemoryLinearRandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearRandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.DataSourceIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSourceIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.H5Iterator": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.DataSourceIterator"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.h5_reader.H5Iterator._next_chunk": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "len",
    "list",
    "min",
    "numpy.iinfo",
    "numpy.int64",
    "numpy.unique",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Iterator._select_file": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.DataSourceIterator._select_file_guard"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Iterator.close": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.coordinates.data._base.datasource.DataSource"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "collections.defaultdict",
    "int",
    "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy",
    "pyemma.coordinates.data.data_in_memory.DataInMemoryJaggedRandomAccessStrategy",
    "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearItrajRandomAccessStrategy",
    "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearRandomAccessStrategy",
    "pyemma.coordinates.data.h5_reader.H5Reader",
    "pyemma.util.contexts.settings",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader.__reduce__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyemma.coordinates.data.h5_reader.H5Reader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader._create_iterator": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pyemma.coordinates.data.h5_reader.H5Iterator"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader._get_traj_info": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "enumerate",
    "functools.partial",
    "list",
    "pyemma.coordinates.data.h5_reader.h5py",
    "pyemma.coordinates.data.util.traj_info_cache.TrajInfo"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader._get_traj_info.name_matches_selection": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.data.h5_reader.h5py",
    "pyemma.coordinates.data.h5_reader.re"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader._load_file": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pyemma.coordinates.data.h5_reader.h5py"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader._reshape": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.reshape",
    "pyemma.coordinates.data.h5_reader.functools"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader.n_datasets": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader.selection": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "dict",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.TrajInfo": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajInfo"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.h5_reader.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.settings": {
  "data": {
   "shadows": "pyemma.util.contexts.settings"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.tables": {
  "data": {
   "shadows": "tables"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.numpy_filereader.DataInMemoryIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader.DataSourceIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSourceIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader.NPYIterator": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.numpy_filereader.NPYIterator._next_chunk": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NPYIterator._select_file": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator._select_file_guard"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NPYIterator.close": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.coordinates.data._base.datasource.DataSource",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader.__reduce__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader._create_iterator": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pyemma.coordinates.data.numpy_filereader.NPYIterator"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader._get_traj_info": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.shape",
    "pyemma.coordinates.data.util.traj_info_cache.TrajInfo"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader._load_file": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "numpy.load"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader._reshape": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.reshape",
    "pyemma.coordinates.data.numpy_filereader.functools"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader.describe": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader.TrajInfo": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajInfo"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.py_csv_reader.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.DataSourceIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSourceIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVIterator": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.DataSourceIterator"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVIterator.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma.coordinates.data.py_csv_reader.PyCSVIterator",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVIterator._convert_to_np_chunk": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "enumerate",
    "filter",
    "float",
    "list",
    "numpy.float32",
    "numpy.vstack",
    "pyemma.coordinates.data.py_csv_reader._dialect_to_str",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVIterator._next_chunk": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVIterator._open_file": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.empty",
    "numpy.setdiff1d",
    "numpy.zeros",
    "open",
    "pyemma.coordinates.data.py_csv_reader.csv"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVIterator._select_file": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.DataSourceIterator._select_file_guard",
    "pyemma.coordinates.data.py_csv_reader.csv"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVIterator.close": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.coordinates.data._base.datasource.DataSource",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.zeros",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader",
    "str",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader.__parse_args": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader.__reduce__": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._calc_offsets": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "len",
    "new_size",
    "numpy.diff",
    "numpy.empty",
    "numpy.insert",
    "numpy.int64",
    "numpy.resize",
    "open",
    "pyemma.coordinates.data.py_csv_reader.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._calc_offsets.new_size": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "int",
    "math.ceil"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._create_iterator": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "pyemma.coordinates.data.py_csv_reader.PyCSVIterator"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._determine_dialect": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "RuntimeError",
    "custom_dialect",
    "pyemma.coordinates.data.py_csv_reader.csv",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._determine_dialect.custom_dialect": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "pyemma.coordinates.data.py_csv_reader.csv"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._get_dialect": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._get_dimension": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "next",
    "numpy.array",
    "pyemma.coordinates.data.py_csv_reader.csv",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._get_traj_info": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "open",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader",
    "pyemma.coordinates.data.util.traj_info_cache.TrajInfo"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader.describe": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.TrajInfo": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajInfo"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader._dialect_to_str": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "io.StringIO",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.sources_merger": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.sources_merger.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.sources_merger.DataSourceIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSourceIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.sources_merger.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.sources_merger.SourcesMerger": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.coordinates.data._base.datasource.DataSource"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.sources_merger.SourcesMerger.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "pyemma.coordinates.data.sources_merger.SourcesMerger",
    "pyemma.coordinates.data.sources_merger.itertools",
    "sum",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.sources_merger.SourcesMerger.__reduce__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pyemma.coordinates.data.sources_merger.SourcesMerger"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.sources_merger.SourcesMerger._create_iterator": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pyemma.coordinates.data.sources_merger._JoiningIterator"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.sources_merger._JoiningIterator": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.DataSourceIterator"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.sources_merger._JoiningIterator.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.data.sources_merger._JoiningIterator",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.sources_merger._JoiningIterator._next_chunk": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "next",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.sources_merger._JoiningIterator._select_file": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.datasource.DataSourceIterator._select_file_guard"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.sources_merger._JoiningIterator.close": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyemma.coordinates.data.sources_merger.__author__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.sources_merger.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.sources_merger.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.util.frames_from_file": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.data.util.frames_from_file.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.util.frames_from_file._copy_traj_attributes": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.copy_traj_attributes"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file._enforce_top": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.enforce_top"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file._preallocate_empty_trajectory": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.preallocate_empty_trajectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file.frames_from_files": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.insert",
    "numpy.lexsort",
    "numpy.max",
    "numpy.unique",
    "numpy.zeros_like",
    "pyemma.coordinates.data.FeatureReader",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader",
    "pyemma.coordinates.data.util.frames_from_file.itertools",
    "pyemma.coordinates.data.util.frames_from_file.log",
    "pyemma.coordinates.data.util.reader_utils.copy_traj_attributes",
    "pyemma.coordinates.data.util.reader_utils.enforce_top",
    "pyemma.coordinates.data.util.reader_utils.preallocate_empty_trajectory",
    "pyemma.coordinates.source",
    "set_reader_return_traj_objects",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.frames_from_file.frames_from_files.set_reader_return_traj_objects": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.data.FeatureReader",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.frames_from_file.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file.log": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.util.frames_from_file.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.util.reader_utils.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.H5Reader": {
  "data": {
   "shadows": "pyemma.coordinates.data.h5_reader.H5Reader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.NumPyFileReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.PyCSVReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.StringIO": {
  "data": {
   "shadows": "six.StringIO"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils._is_mdtraj_hdf5_file": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "mdtraj.Trajectory",
    "numpy.argwhere",
    "numpy.random.randint",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.copy_traj_attributes": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.create_file_reader": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "any",
    "isinstance",
    "len",
    "list",
    "pyemma.coordinates.data.FeatureReader",
    "pyemma.coordinates.data.FeatureReader.supports_format",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader",
    "pyemma.coordinates.data.h5_reader.H5Reader",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader",
    "pyemma.coordinates.data.util.reader_utils.os",
    "six.StringIO",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.enforce_top": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "mdtraj.Topology",
    "mdtraj.Trajectory",
    "mdtraj.load",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.md": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.preallocate_empty_trajectory": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "mdtraj.Trajectory",
    "mdtraj.Trajectory.__setitem__",
    "numpy.zeros",
    "pyemma.coordinates.util.patches.trajectory_set_item"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mdtraj.load_frame",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.single_traj_from_n_files": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "mdtraj.load"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.trajectory_set_item": {
  "data": {
   "shadows": "pyemma.coordinates.util.patches.trajectory_set_item"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.vstack": {
  "data": {
   "shadows": "numpy.vstack"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.util.traj_info_backends.AbstractDB": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.util.traj_info_backends.AbstractDB.close": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.AbstractDB.db_version": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.AbstractDB.get": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.AbstractDB.set": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.AbstractDB.sync": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.AbstractDB.update": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.DictDB": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pyemma.coordinates.data.util.traj_info_backends.AbstractDB"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.util.traj_info_backends.DictDB.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.DB_VERSION"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.DictDB.db_version": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.DictDB.num_entries": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.DictDB.set": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.DictDB.update": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyemma.coordinates.data.util.traj_info_backends.AbstractDB"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pyemma.coordinates.data.util.traj_info_backends.SqliteDB",
    "pyemma.coordinates.data.util.traj_info_backends.shutil",
    "pyemma.coordinates.data.util.traj_info_backends.sqlite3",
    "pyemma.coordinates.data.util.traj_info_backends.warnings",
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.DB_VERSION",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.__init__.adapt_array": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.savez_compressed"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.__init__.convert_array": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.load"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB._clean": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "list",
    "map",
    "operator.itemgetter",
    "pyemma.coordinates.data.util.traj_info_backends.SqliteDB",
    "pyemma.coordinates.data.util.traj_info_backends.itertools",
    "pyemma.coordinates.data.util.traj_info_backends.os",
    "pyemma.coordinates.data.util.traj_info_backends.sqlite3",
    "pyemma.coordinates.data.util.traj_info_cache.logger.debug",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB._create_new_db": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB._create_traj_info": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "hash",
    "isinstance",
    "numpy.ndarray",
    "pyemma.coordinates.data.util.traj_info_cache.TrajInfo",
    "pyemma.coordinates.data.util.traj_info_cache.UnknownDBFormatException",
    "pyemma.coordinates.data.util.traj_info_cache.logger.exception",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB._database_from_key": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "int",
    "pyemma.coordinates.data.util.traj_info_backends.os",
    "pyemma.util.files.mkdir_p",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB._format_tuple_for_sql": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "len",
    "repr",
    "staticmethod",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB._update_time_stamp": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "_update"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB._update_time_stamp._update": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "pyemma.coordinates.data.util.traj_info_backends.sqlite3",
    "pyemma.coordinates.data.util.traj_info_backends.time",
    "pyemma.coordinates.data.util.traj_info_cache.logger.debug"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.close": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.db_version": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "pyemma.coordinates.data.util.traj_info_backends.sqlite3"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.get": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.num_entries": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.set": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.array",
    "pyemma.coordinates.data.util.traj_info_backends.os",
    "pyemma.coordinates.data.util.traj_info_backends.sqlite3",
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.DB_VERSION",
    "pyemma.coordinates.data.util.traj_info_cache.logger.debug",
    "pyemma.coordinates.data.util.traj_info_cache.logger.info",
    "pyemma.util.config.traj_info_max_entries",
    "pyemma.util.config.traj_info_max_size"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.TrajInfo": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajInfo"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.TrajectoryInfoCache": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.UnknownDBFormatException": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.UnknownDBFormatException"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.config": {
  "data": {
   "shadows": "pyemma.util.config"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.logger": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.logger"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.mkdir_p": {
  "data": {
   "shadows": "pyemma.util.files.mkdir_p"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.data.util.traj_info_cache.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.DictDB": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_backends.DictDB"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.PyCSVReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.PyCSVReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.SqliteDB": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_backends.SqliteDB"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.__eq__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "isinstance",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.__str__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.abs_path": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.hash_value": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.length": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.ndim": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.offsets": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.offsets_to_bytes": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.savez_compressed"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.version": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.__getitem__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "BaseException",
    "IOError",
    "KeyError",
    "hasattr",
    "isinstance",
    "pyemma.coordinates.data.util.traj_info_cache.TrajInfo",
    "pyemma.coordinates.data.util.traj_info_cache.os"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ImportError",
    "pyemma.coordinates.data.util.traj_info_backends.DictDB",
    "pyemma.coordinates.data.util.traj_info_backends.SqliteDB",
    "pyemma.coordinates.data.util.traj_info_cache.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.__setitem__": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache._get_file_hash": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "hash",
    "open",
    "pyemma.coordinates.data.util.traj_info_cache.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache._get_file_hash_v2": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "int",
    "open",
    "pyemma.coordinates.data.util.traj_info_cache.hashlib",
    "pyemma.coordinates.data.util.traj_info_cache.os",
    "pyemma.coordinates.data.util.traj_info_cache.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache._handle_csv": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "isinstance",
    "open",
    "pyemma.coordinates.data.PyCSVReader",
    "pyemma.coordinates.data.PyCSVReader.DEFAULT_OPEN_MODE"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.clear": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.close": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.current_db_version": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.instance": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache",
    "pyemma.coordinates.data.util.traj_info_cache.os",
    "pyemma.util.config.cfg_dir",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.num_entries": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.UnknownDBFormatException": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.data.util.traj_info_cache.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.util.traj_info_cache.config": {
  "data": {
   "shadows": "pyemma.util.config"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.util.traj_info_cache.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.estimation.covariance": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.estimation.covariance.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.C00_": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.C0t_": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.Ctt_": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "NotImplemented",
    "ValueError",
    "float",
    "pyemma.coordinates.estimation.covariance.LaggedCovariance",
    "pyemma.coordinates.estimation.covariance.warnings",
    "pyemma.util.exceptions.PyEMMA_DeprecationWarning",
    "pyemma.util.types.ensure_float_vector",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance._estimate": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "MemoryError",
    "ValueError",
    "any",
    "hasattr",
    "isinstance",
    "len",
    "max",
    "numpy.ndarray",
    "numpy.newaxis",
    "pyemma._base.progress.ProgressReporter",
    "pyemma.coordinates.estimation.covariance.itertools",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance._init_covar": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "int",
    "math.log",
    "max",
    "min",
    "pyemma._ext.variational.estimators.running_moments.running_covar"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.column_selection": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.cov": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "property",
    "pyemma.util.annotators.deprecated"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.cov_tau": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "property",
    "pyemma.util.annotators.deprecated"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.mean": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.mean_tau": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.nsave": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.partial_fit": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pyemma.coordinates.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.weights": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "compute_weights_streamer",
    "float",
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "pyemma.coordinates.data.DataInMemory",
    "pyemma.coordinates.estimation.covariance.numbers",
    "pyemma.coordinates.estimation.covariance.types",
    "pyemma.util.types.is_float_vector",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.weights.compute_weights_streamer": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.transformer.StreamingTransformer"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.weights.compute_weights_streamer.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.weights.compute_weights_streamer._transform_array": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.weights.compute_weights_streamer.describe": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.weights.compute_weights_streamer.dimension": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.PyEMMA_DeprecationWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.StreamingEstimator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.StreamingTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyemma.coordinates.estimation.covariance.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.coordinates.estimation.covariance.deprecated": {
  "data": {
   "shadows": "pyemma.util.annotators.deprecated"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.ensure_float_vector": {
  "data": {
   "shadows": "pyemma.util.types.ensure_float_vector"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.is_float_vector": {
  "data": {
   "shadows": "pyemma.util.types.is_float_vector"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.running_covar": {
  "data": {
   "shadows": "pyemma._ext.variational.estimators.running_moments.running_covar"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.koopman": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.estimation.koopman.LaggedCovariance": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.LaggedCovariance"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.koopman.StreamingEstimator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.K_pc_1": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.R": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "float",
    "pyemma.coordinates.estimation.covariance.LaggedCovariance",
    "pyemma.coordinates.estimation.koopman._KoopmanEstimator",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator._estimate": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator._finish_estimation": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.hstack",
    "numpy.vstack",
    "numpy.zeros",
    "pyemma._ext.variational.solvers.direct.spd_inv_split"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.mean": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.partial_fit": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyemma.coordinates.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.u": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.zeros",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.u_pc_1": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "property",
    "pyemma.coordinates.estimation.koopman._compute_u"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.weights": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "property",
    "pyemma.coordinates.estimation.koopman._KoopmanWeights"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanWeights": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanWeights.__init__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanWeights.weights": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyemma.coordinates.estimation.koopman._compute_u": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.real",
    "numpy.zeros",
    "pyemma._ext.variational.solvers.direct.sort_by_norm",
    "scipy.linalg.eig"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.koopman.scl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.koopman.sort_by_norm": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.sort_by_norm"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.koopman.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.koopman.spd_inv_split": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.spd_inv_split"
  },
  "type": "import"
 },
 "pyemma.coordinates.pipelines": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.pipelines.AbstractClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.interface.AbstractClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.pipelines.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.pipelines.Discretizer": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "pyemma.coordinates.pipelines.Pipeline"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.pipelines.Discretizer.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "pyemma.coordinates.clustering.interface.AbstractClustering",
    "pyemma.coordinates.data._base.datasource.DataSource",
    "pyemma.coordinates.data._base.transformer.StreamingTransformer",
    "pyemma.coordinates.pipelines.Pipeline",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.Discretizer.dtrajs": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.Discretizer.save_dtrajs": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.clustering.interface.AbstractClustering",
    "pyemma.coordinates.data.feature_reader.FeatureReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.feature_reader.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.pipelines.Iterable": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.iterable.Iterable"
  },
  "type": "import"
 },
 "pyemma.coordinates.pipelines.Loggable": {
  "data": {
   "shadows": "pyemma._base.loggable.Loggable"
  },
  "type": "import"
 },
 "pyemma.coordinates.pipelines.Pipeline": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyemma._base.loggable.Loggable"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.pipelines.Pipeline.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.Pipeline._is_estimated": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.Pipeline.add_element": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "pyemma.coordinates.data._base.iterable.Iterable"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.Pipeline.chunksize": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.Pipeline.parametrize": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.Pipeline.set_element": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "int",
    "len",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.StreamingTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.pipelines.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyemma.coordinates.pipelines.__author__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyemma.coordinates.pipelines.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.tests.test_acf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_acf.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_acf.TestACF": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_acf.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_acf.TestACF.test": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "pyemma.coordinates.acf.acf",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_acf.acf": {
  "data": {
   "shadows": "pyemma.coordinates.acf.acf"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_acf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_acf.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_load": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_api_load.os",
    "pyemma.coordinates.tests.test_api_load.path",
    "pyemma.coordinates.tests.test_api_load.pkg_resources",
    "pyemma.coordinates.tests.test_api_load.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_api_load.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.setUpClass": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "__name__",
    "classmethod",
    "pyemma.coordinates.tests.test_api_load.os",
    "pyemma.coordinates.tests.test_api_load.path",
    "pyemma.coordinates.tests.test_api_load.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.testUnicodeString": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pyemma.coordinates.api.featurizer",
    "pyemma.coordinates.api.load",
    "pyemma.coordinates.tests.test_api_load.pdb_file",
    "pyemma.coordinates.tests.test_api_load.traj_files"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.testUnicodeString_without_featurizer": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.api.load",
    "pyemma.coordinates.tests.test_api_load.traj_files"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.test_empty_list": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.api.load",
    "pyemma.coordinates.tests.test_api_load.pdb_file"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.test_load_features_pass_trajectory_as_topology": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pyemma.coordinates.api.featurizer",
    "pyemma.coordinates.api.load",
    "pyemma.coordinates.tests.test_api_load.mdtraj",
    "pyemma.coordinates.tests.test_api_load.pdb_file",
    "pyemma.coordinates.tests.test_api_load.traj_files"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.test_load_traj": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pyemma.coordinates.api.featurizer",
    "pyemma.coordinates.api.load",
    "pyemma.coordinates.tests.test_api_load.pdb_file",
    "pyemma.coordinates.tests.test_api_load.traj_files",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.test_load_trajs": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "all",
    "list",
    "numpy.ndarray",
    "pyemma.coordinates.api.featurizer",
    "pyemma.coordinates.api.load",
    "pyemma.coordinates.tests.test_api_load.pdb_file",
    "pyemma.coordinates.tests.test_api_load.traj_files",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.test_non_existant_input": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.api.load",
    "pyemma.coordinates.tests.test_api_load.pdb_file",
    "pyemma.coordinates.tests.test_api_load.traj_files"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.test_various_formats_load": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "pyemma.coordinates.api.load"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.test_with_trajs_without_featurizer_or_top": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "pyemma.coordinates.api.load",
    "pyemma.coordinates.tests.test_api_load.pdb_file",
    "pyemma.coordinates.tests.test_api_load.traj_files",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_load.load": {
  "data": {
   "shadows": "pyemma.coordinates.api.load"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_load.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_load.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_load.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_load.path": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_api_load.pdb_file": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_api_load.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_load.traj_files": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_api_load.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger",
    "pyemma.coordinates.tests.test_api_source.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_api_source.CSVReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.MDFeaturizer": {
  "data": {
   "shadows": "pyemma.coordinates.data.MDFeaturizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.NumPyFileReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_api_source.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader.setUp": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_api_source.os",
    "pyemma.coordinates.tests.test_api_source.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader.test_invalid_files": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.tests.test_api_source.os"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader.test_invalid_input": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.MDFeaturizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader.test_read_multiple_files_featurizer": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.MDFeaturizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader.test_read_multiple_files_topology_file": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pyemma.coordinates.api.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader.test_read_single_file_featurizer": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.MDFeaturizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader.test_read_single_file_toplogy_file": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pyemma.coordinates.api.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_api_source.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.setUpClass": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "__name__",
    "classmethod",
    "numpy.arange",
    "numpy.random.random",
    "numpy.save",
    "numpy.savetxt",
    "numpy.savez",
    "open",
    "pyemma.coordinates.tests.test_api_source.os",
    "pyemma.coordinates.tests.test_api_source.pkg_resources",
    "pyemma.coordinates.tests.test_api_source.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.tearDownClass": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.tests.test_api_source.shutil"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_bullshit_csv": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ValueError",
    "pyemma.coordinates.api.source",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_obtain_csv_file_reader_csv": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_obtain_csv_file_reader_dat": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_obtain_numpy_file_reader_npy": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_obtain_numpy_file_reader_npz": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader",
    "pyemma.coordinates.tests.test_api_source.unittest"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_pdb_traj_unsupported": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.tests.test_api_source.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_source_set_chunksize": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyemma.coordinates.api.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_various_formats_source": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "pyemma.coordinates.api.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_api_source.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_coordinates_iterator.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.InvalidDataInStreamException": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.InvalidDataInStreamException"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_coordinates_iterator.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator._count_chunks": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.random",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_chunksize": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pyemma.coordinates.data.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_chunksize_max_memory": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.data.DataInMemory",
    "pyemma.util.contexts.settings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_current_trajindex": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pyemma.coordinates.data.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_invalid_data_in_input_inf": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.inf",
    "pyemma.coordinates.data.DataInMemory",
    "pyemma.coordinates.data._base.datasource.InvalidDataInStreamException",
    "pyemma.util.contexts.settings"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_invalid_data_in_input_nan": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.nan",
    "pyemma.coordinates.data.DataInMemory",
    "pyemma.coordinates.data._base.datasource.InvalidDataInStreamException",
    "pyemma.util.contexts.settings"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_lagged_iterator": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.util.create_traj",
    "pyemma.coordinates.tests.util.get_top",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_lagged_iterator_optimized": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.util.create_traj",
    "pyemma.coordinates.tests.util.get_top",
    "pyemma.coordinates.util.patches.iterload.MAX_STRIDE_SWITCH_TO_RA",
    "pyemma.coordinates.util.patches.iterload.MEMORY_CUTOFF",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_last_chunk": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyemma.coordinates.data.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_n_chunks": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.DataInMemory",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_n_chunks_ra": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "gen_sorted_stride",
    "len",
    "numpy.random.randint",
    "pyemma.coordinates.data.DataInMemory",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_n_chunks_ra.gen_sorted_stride": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.lexsort",
    "numpy.random.randint",
    "numpy.sort",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_pos": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.data.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_return_trajindex": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_stride": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pyemma.coordinates.data.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_write_h5": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randint",
    "numpy.random.random",
    "perform",
    "pyemma.coordinates.tests.test_coordinates_iterator.h5py",
    "pyemma.coordinates.tests.test_coordinates_iterator.os",
    "pyemma.coordinates.tests.test_coordinates_iterator.tempfile",
    "pyemma.coordinates.tica",
    "pyemma.coordinates.tica.write_to_hdf5",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_write_h5.perform": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.tests.test_coordinates_iterator.h5py",
    "pyemma.coordinates.tests.test_coordinates_iterator.os",
    "pyemma.coordinates.tica.get_output",
    "pyemma.coordinates.tica.write_to_hdf5",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_write_to_csv_propagate_filenames": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "glob.glob",
    "len",
    "list",
    "numpy.random.random",
    "numpy.save",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_coordinates_iterator.os",
    "pyemma.coordinates.tica",
    "pyemma.util.files.TemporaryDirectory",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.get_top": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.get_top"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.iterload": {
  "data": {
   "shadows": "pyemma.coordinates.util.patches.iterload"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.settings": {
  "data": {
   "shadows": "pyemma.util.contexts.settings"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.tica": {
  "data": {
   "shadows": "pyemma.coordinates.tica"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_covar_estimator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "len",
    "numpy.random.rand",
    "numpy.random.randn",
    "pyemma.coordinates.tests.test_covar_estimator.data",
    "pyemma.coordinates.tests.test_covar_estimator.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_covar_estimator.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.setUpClass": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "numpy.array",
    "numpy.dot",
    "numpy.shape",
    "numpy.sum",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_covar_estimator.data",
    "pyemma.coordinates.tests.test_covar_estimator.mean_const",
    "weight_object"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.setUpClass.weight_object": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.setUpClass.weight_object.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.setUpClass.weight_object.weights": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_meanfree": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_sym_meanfree": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_sym_withmean": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_weightobj_meanfree": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_weightobj_sym_meanfree": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_weightobj_sym_withmean": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_weightobj_withmean": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_withmean": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XX_meanconst": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XX_meanfree": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XX_weighted_meanconst": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XX_weightobj_meanfree": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XX_weightobj_withmean": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XX_withmean": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XY_meanconst": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XY_sym_meanconst": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XY_sym_weighted_meanconst": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XY_weighted_meanconst": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimatorWeightsList": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_covar_estimator.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimatorWeightsList.test_non_matching_length": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.random",
    "pyemma.coordinates.covariance_lagged",
    "pyemma.coordinates.tests.test_covar_estimator.data",
    "pyemma.coordinates.tests.test_covar_estimator.weights",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimatorWeightsList.test_re_estimate_weight_types": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimatorWeightsList.test_weights_close_to_zero": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.float32",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.random",
    "pyemma.coordinates.covariance_lagged",
    "pyemma.coordinates.tests.test_covar_estimator.data",
    "pyemma.coordinates.tests.test_covar_estimator.weights",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimatorWeightsList.test_weights_equal_to_zero": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.float32",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.random",
    "pyemma.coordinates.covariance_lagged",
    "pyemma.coordinates.tests.test_covar_estimator.data",
    "pyemma.coordinates.tests.test_covar_estimator.unittest",
    "pyemma.coordinates.tests.test_covar_estimator.weights",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarianceEstimatorGivenWeights": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarianceEstimatorGivenWeights.setUpClass": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "numpy.dot",
    "numpy.shape",
    "numpy.sum",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_covar_estimator.data",
    "pyemma.coordinates.tests.test_covar_estimator.mean_const",
    "pyemma.coordinates.tests.test_covar_estimator.weights"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_covar_estimator.covariance_lagged": {
  "data": {
   "shadows": "pyemma.coordinates.covariance_lagged"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_covar_estimator.data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_covar_estimator.mean_const": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_covar_estimator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_covar_estimator.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_covar_estimator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_covar_estimator.weights": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_csvreader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_csvreader.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_csvreader.CSVReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_csvreader.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.setUpClass": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "classmethod",
    "numpy.arange",
    "numpy.savetxt",
    "pyemma.coordinates.tests.test_csvreader.os",
    "pyemma.coordinates.tests.test_csvreader.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.tearDownClass": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.tests.test_csvreader.shutil"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_compare_readline": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.savetxt",
    "numpy.testing.assert_equal",
    "open",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader.DEFAULT_OPEN_MODE",
    "pyemma.coordinates.tests.test_csvreader.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_holes_in_file": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.fromstring",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader",
    "pyemma.coordinates.tests.test_csvreader.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_newline_at_eof": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "len",
    "numpy.float32",
    "numpy.fromstring",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader",
    "pyemma.coordinates.tests.test_csvreader.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_newline_at_eof_carriage_return": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.fromstring",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader",
    "pyemma.coordinates.tests.test_csvreader.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_newline_at_eof_with_header": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.genfromtxt",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader",
    "pyemma.coordinates.tests.test_csvreader.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_1file": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_1file_oneline": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.savetxt",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader",
    "pyemma.coordinates.tests.test_csvreader.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_1file_with_header": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_1file_with_header_2lines": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.savetxt",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader",
    "pyemma.coordinates.tests.test_csvreader.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_2file_with_header": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_lagged_small_chunks": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_with_skipping_first_few_couple_lines": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_almost_equal",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_with_skipping_first_few_couple_lines_multiple_trajectoryfiles": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_reset": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_use_cols": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_with_binary_written_file": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.savetxt",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader",
    "pyemma.coordinates.tests.test_csvreader.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_with_kwargs": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_with_lag": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_with_multiple_files": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_with_stride": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_with_stride_and_lag": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_with_stride_and_lag_with_header": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_csvreader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_csvreader.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_csvreader.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_csvreader.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger",
    "pyemma.coordinates.tests.test_datainmemory.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_datainmemory.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory.InvalidDataInStreamException": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.InvalidDataInStreamException"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_datainmemory.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.setUpClass": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "classmethod",
    "numpy.float32",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test1dData": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test1dDataList": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.testDataArray": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.random",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.data_in_memory.DataInMemory",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.testListOfArrays": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.random",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.data_in_memory.DataInMemory",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.testNotEqualDims": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.testWrongArguments": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_chunksize": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyemma.coordinates.tests.test_datainmemory.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_cols": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_exception_getoutput_invalid_data": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.ones",
    "pyemma.coordinates.data._base.datasource.InvalidDataInStreamException",
    "pyemma.coordinates.tests.test_datainmemory.pyemma",
    "pyemma.util.contexts.settings"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_lagged_iterator_1d": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "pyemma.coordinates.data._base.iterable._LaggedIterator",
    "pyemma.coordinates.data.data_in_memory.DataInMemory",
    "range",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_lagged_iterator_1d_legacy": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "pyemma.coordinates.data._base.iterable._LegacyLaggedIterator",
    "pyemma.coordinates.data.data_in_memory.DataInMemory",
    "range",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_lagged_stridden_access": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.random",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_ndim_input": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_skip": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_skip_input_list": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_stride": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_time_lagged_chunked_access": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.zeros",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory._LaggedIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.iterable._LaggedIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory._LegacyLaggedIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.iterable._LegacyLaggedIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_datainmemory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory.settings": {
  "data": {
   "shadows": "pyemma.util.contexts.settings"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_discretizer.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_discretizer.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.Discretizer": {
  "data": {
   "shadows": "pyemma.coordinates.pipelines.Discretizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.TestDiscretizer": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_discretizer.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_discretizer.TestDiscretizer.setUpClass": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.tests.test_discretizer.TestDiscretizer",
    "pyemma.coordinates.tests.test_discretizer.create_traj_on_disc",
    "pyemma.coordinates.tests.test_discretizer.create_water_topology_on_disc",
    "pyemma.coordinates.tests.test_discretizer.tempfile",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_discretizer.TestDiscretizer.tearDownClass": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.tests.test_discretizer.os",
    "pyemma.coordinates.tests.test_discretizer.shutil"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_discretizer.TestDiscretizer.test": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "pyemma.coordinates.api.pca",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering",
    "pyemma.coordinates.pipelines.Discretizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_discretizer.TestDiscretizer.test_save_dtrajs": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pyemma.coordinates.api.cluster_kmeans",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.pipelines.Discretizer",
    "pyemma.coordinates.tests.test_discretizer.os"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_discretizer.TestDiscretizer.test_with_data_in_mem": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "isinstance",
    "numpy.max",
    "numpy.random.random",
    "numpy.unique",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.cluster_kmeans",
    "pyemma.coordinates.data.data_in_memory.DataInMemory",
    "pyemma.coordinates.discretizer",
    "pyemma.coordinates.pca"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_discretizer.Topology": {
  "data": {
   "shadows": "mdtraj.core.topology.Topology"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.Trajectory": {
  "data": {
   "shadows": "mdtraj.core.trajectory.Trajectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.UniformTimeClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.api": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.cluster_kmeans": {
  "data": {
   "shadows": "pyemma.coordinates.api.cluster_kmeans"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.create_traj_on_disc": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.random",
    "pyemma.coordinates.tests.test_discretizer.mdtraj",
    "pyemma.coordinates.tests.test_discretizer.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_discretizer.create_water_topology_on_disc": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mdtraj.core.element.hydrogen",
    "mdtraj.core.element.oxygen",
    "mdtraj.core.topology.Topology",
    "mdtraj.core.trajectory.Trajectory",
    "numpy.zeros",
    "pyemma.coordinates.tests.test_discretizer.tempfile",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_discretizer.hydrogen": {
  "data": {
   "shadows": "mdtraj.core.element.hydrogen"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.oxygen": {
  "data": {
   "shadows": "mdtraj.core.element.oxygen"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.pca": {
  "data": {
   "shadows": "pyemma.coordinates.api.pca"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.source": {
  "data": {
   "shadows": "pyemma.coordinates.api.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_eq_covar_estimator.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_eq_covar_estimator.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.setUpClass": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "__name__",
    "classmethod",
    "float",
    "numpy.dot",
    "numpy.load",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.zeros",
    "pyemma.coordinates.estimation.koopman._KoopmanEstimator",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_eq_covar_estimator.pkg_resources",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XX": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XX_removeconstantmean": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XX_removedatamean": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XY": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XY_removeconstantmean": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XY_removedatamean": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XY_sym": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XY_sym_removeconstantmean": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XY_sym_removedatamean": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.coordinates.covariance_lagged"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator._KoopmanEstimator": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.koopman._KoopmanEstimator"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.covariance_lagged": {
  "data": {
   "shadows": "pyemma.coordinates.covariance_lagged"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.scl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger",
    "pyemma.coordinates.tests.test_featurereader.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_featurereader.DataInMemoryIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.feature_reader.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurereader.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.setUpClass": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "__name__",
    "classmethod",
    "pyemma.coordinates.tests.test_featurereader.pkg_resources",
    "pyemma.coordinates.tests.test_featurereader.tempfile",
    "pyemma.coordinates.tests.util.create_traj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.tearDownClass": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.tests.test_featurereader.shutil"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.testIteratorAccess": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "isinstance",
    "numpy.allclose",
    "numpy.ndarray",
    "numpy.vstack",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.feature_reader.FeatureReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.testIteratorAccess2": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.feature_reader.FeatureReader",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.testTimeLaggedIterator": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "numpy.concatenate",
    "numpy.vstack",
    "pyemma.coordinates.data.feature_reader.FeatureReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_cols": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.tests.test_featurereader.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_cols_with_features": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.tests.test_featurereader.glob",
    "pyemma.coordinates.tests.test_featurereader.mdtraj",
    "pyemma.coordinates.tests.test_featurereader.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_flip_in_memory_exception": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.api.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_flip_in_memory_exception.dummy": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_in_memory": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.api.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_in_memory_switch_stride_dim": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pyemma.coordinates.api.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_in_memory_with_stride": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "isinstance",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_lagged_access_small_files": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.tests.util.create_traj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_lagged_stridden_access": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "numpy.vstack",
    "pyemma.coordinates.api.source",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_skip": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyemma.coordinates.data.feature_reader.FeatureReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_skip_input_list": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyemma.coordinates.data.feature_reader.FeatureReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_with_pipeline_time_lagged": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.api.discretizer",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.api.tica",
    "pyemma.coordinates.data.feature_reader.FeatureReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.discretizer": {
  "data": {
   "shadows": "pyemma.coordinates.api.discretizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.log": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurereader.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.source": {
  "data": {
   "shadows": "pyemma.coordinates.api.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.tica": {
  "data": {
   "shadows": "pyemma.coordinates.api.tica"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger",
    "pyemma.coordinates.tests.test_featurereader_and_tica.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.feature_reader.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.TestFeatureReaderAndTICA": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurereader_and_tica.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.TestFeatureReaderAndTICA.setUpClass": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "classmethod",
    "numpy.arange",
    "numpy.cos",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.random.random_sample",
    "open",
    "print",
    "pyemma.coordinates.tests.test_featurereader_and_tica.mdtraj",
    "pyemma.coordinates.tests.test_featurereader_and_tica.tempfile",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.TestFeatureReaderAndTICA.tearDownClass": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.tests.test_featurereader_and_tica.TestFeatureReaderAndTICA",
    "pyemma.coordinates.tests.test_featurereader_and_tica.os",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.TestFeatureReaderAndTICA.test_covariances_and_eigenvalues": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "numpy.cos",
    "numpy.max",
    "numpy.newaxis",
    "numpy.pi",
    "pyemma.coordinates.api.tica",
    "pyemma.coordinates.data.feature_reader.FeatureReader",
    "pyemma.coordinates.tests.test_featurereader_and_tica.log"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.TestFeatureReaderAndTICA.test_partial_fit": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.api.tica",
    "pyemma.coordinates.data.feature_reader.FeatureReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.log": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger",
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.feature_reader.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.TestFeatureReaderAndTICAProjection": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.TestFeatureReaderAndTICAProjection.setUpClass": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "classmethod",
    "numpy.arange",
    "numpy.cumsum",
    "numpy.dot",
    "numpy.random.randn",
    "open",
    "print",
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.TestFeatureReaderAndTICAProjection",
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.mdtraj",
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.random_invertible",
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.tempfile",
    "pyemma.util.contexts.numpy_random_seed",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.TestFeatureReaderAndTICAProjection.tearDownClass": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.TestFeatureReaderAndTICAProjection",
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.os",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.TestFeatureReaderAndTICAProjection.test_covariances_and_eigenvalues": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.diag_indices",
    "numpy.eye",
    "numpy.max",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "pyemma.coordinates.api.tica",
    "pyemma.coordinates.data.feature_reader.FeatureReader",
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.log"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.TestFeatureReaderAndTICAProjection.test_partial_fit": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.api.tica",
    "pyemma.coordinates.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.log": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.numpy_random_seed": {
  "data": {
   "shadows": "pyemma.util.contexts.numpy_random_seed"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.random_invertible": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.linalg.svd",
    "numpy.maximum",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.tica": {
  "data": {
   "shadows": "pyemma.coordinates.api.tica"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_featurizer.os",
    "pyemma.coordinates.tests.test_featurizer.path",
    "pyemma.coordinates.tests.test_featurizer.pkg_resources",
    "pyemma.coordinates.tests.test_featurizer.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_featurizer.CustomFeature": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.featurizer.CustomFeature"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.MDFeaturizer": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.TestAtomsInResidues": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurizer.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurizer.TestAtomsInResidues.setUp": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_aa"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestAtomsInResidues.testAtomsInResidues_All_Schemes_FallBack": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.allclose",
    "numpy.arange",
    "pyemma.coordinates.data.featurization.util._atoms_in_residues",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestAtomsInResidues.testAtomsInResidues_All_Schemes_NoFallBack": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "enumerate",
    "numpy.allclose",
    "numpy.arange",
    "pyemma.coordinates.data.featurization.util._atoms_in_residues",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestAtomsInResidues.testAtomsInResidues_All_Schemes_NoFallBack_NoSubset": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "enumerate",
    "numpy.allclose",
    "numpy.arange",
    "pyemma.coordinates.data.featurization.util._atoms_in_residues",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurizer.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.setUp": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "numpy.array",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.pdbfile",
    "pyemma.coordinates.tests.test_featurizer.xtcfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_describe": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_describe_1_element_expand": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_describe_given": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_describe_given_str": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_describe_given_wrong": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_dimensionality": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_serializable": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyemma.coordinates.tests.test_featurizer.os",
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg",
    "pyemma.coordinates.tests.test_featurizer.tempfile",
    "pyemma.load"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_some_feature": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurizer.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.setUp": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.arange",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.pdbfile",
    "pyemma.coordinates.tests.test_featurizer.xtcfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.setUpClass": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "classmethod",
    "numpy.arange",
    "numpy.empty",
    "numpy.random.random",
    "open",
    "pyemma.coordinates.tests.test_featurizer.asn_leu_pdb",
    "pyemma.coordinates.tests.test_featurizer.bogus_geom_pdbfile",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.tearDown": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurizer.check_serialized_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.tearDownClass": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "EnvironmentError",
    "classmethod",
    "pyemma.coordinates.tests.test_featurizer.os"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Group_COM_with_all_atom_geoms": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.hstack",
    "numpy.mean",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_aa"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Group_Mindist_All_Three_Groups": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "itertools.product",
    "len",
    "list",
    "numpy.allclose",
    "numpy.array",
    "numpy.unique",
    "numpy.vstack",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Group_Mindist_All_Three_Groups_threshold": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "itertools.product",
    "len",
    "list",
    "numpy.allclose",
    "numpy.argwhere",
    "numpy.array",
    "numpy.unique",
    "numpy.vstack",
    "numpy.zeros_like",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Group_Mindist_One_Group": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "itertools.combinations",
    "len",
    "list",
    "numpy.allclose",
    "numpy.unique",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Group_Mindist_Some_Three_Groups": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "itertools.combinations",
    "itertools.product",
    "len",
    "list",
    "numpy.allclose",
    "numpy.array",
    "numpy.unique",
    "numpy.vstack",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_MinRmsd_ref_file": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.verbose_assertion_minrmsd",
    "pyemma.coordinates.tests.test_featurizer.xtcfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_MinRmsd_ref_traj": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.verbose_assertion_minrmsd"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_MinRmsd_with_atom_indices": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.verbose_assertion_minrmsd"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_MinRmsd_with_atom_indices_precentered": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.verbose_assertion_minrmsd"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Residue_COM_with_all_atom_geoms": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "numpy.hstack",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_aa",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Residue_Mindist_Ca_all": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Residue_Mindist_Ca_all_threshold": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "numpy.argwhere",
    "numpy.zeros_like",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Residue_Mindist_Ca_array": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "numpy.array",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Residue_Mindist_Ca_array_periodic": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "numpy.array",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.pdbfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_all_dihedrals": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_all_dihedrals_cossin": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_angles": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.alltrue",
    "numpy.array",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_angles_cossin": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.alltrue",
    "numpy.array",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_angles_deg": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "int",
    "numpy.alltrue",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_backbone_dihedrals": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "len",
    "numpy.alltrue",
    "numpy.pi",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_backbone_dihedrals_cossin": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "len",
    "numpy.alltrue",
    "numpy.pi",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_backbone_dihedrals_deg": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "len",
    "numpy.alltrue",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_backbone_dihedrials_chi1": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "len",
    "numpy.alltrue",
    "numpy.pi",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_backbone_dihedrials_chi1_cossin": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "len",
    "numpy.alltrue",
    "numpy.pi",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_ca_distances": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "list",
    "numpy.all",
    "numpy.allclose",
    "numpy.sqrt",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_ca_distances_with_all_atom_geometries": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_Ca",
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_aa"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_ca_distances_with_all_atom_geometries_and_exclusions": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_Ca",
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_aa"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_ca_distances_with_residues_not_containing_cas_no_exclusions": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_ca_distances_with_residues_not_containing_cas_with_exclusions": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_contacts": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "int",
    "numpy.all",
    "numpy.allclose",
    "numpy.argwhere",
    "numpy.array",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_contacts_count_contacts": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "int",
    "numpy.all",
    "numpy.allclose",
    "numpy.argwhere",
    "numpy.array",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_custom_feature": {
  "data": {
   "lineno": 557
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_dihedrals": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.alltrue",
    "numpy.array",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_dihedrals_deg": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.alltrue",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_dihedrials_cossin": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.alltrue",
    "numpy.array",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_distances": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "int",
    "numpy.all",
    "numpy.allclose",
    "numpy.array",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_inverse_distances": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "int",
    "numpy.all",
    "numpy.allclose",
    "numpy.array",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_select": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_select_all": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_select_all_reference": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.reshape",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_select_backbone": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_select_non_symmetry_heavy_atoms": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "pyemma.coordinates.tests.test_featurizer.sys"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_select_reference": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.array",
    "numpy.reshape",
    "numpy.testing.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_sidechain_torsions_invalid_which": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_sidechain_torsions_selstr": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "all",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_sidechain_torsions_which": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "all",
    "len",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_sidechain_torsions_which2": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizerNoDubs": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurizer.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizerNoDubs.tearDown": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurizer.check_serialized_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizerNoDubs.testAddFeaturesWithDuplicates": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.data.featurization.featurizer.CustomFeature",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.pdbfile",
    "pyemma.coordinates.tests.test_featurizer.xtcfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizerNoDubs.testAddFeaturesWithDuplicates.foo": {
  "data": {
   "lineno": 888
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizerNoDubs.testAddFeaturesWithDuplicates.my_func": {
  "data": {
   "lineno": 885
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizerNoDubs.testAddVerySimilarResidueCOMs": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.mdtraj",
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_aa"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizerNoDubs.test_labels": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.data.featurization.featurizer.CustomFeature",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.pdbfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestPairwiseInputParser": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurizer.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurizer.TestPairwiseInputParser.setUp": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.pdbfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestPairwiseInputParser.test_one_unique": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "itertools.combinations",
    "list",
    "numpy.allclose",
    "numpy.array",
    "numpy.asarray",
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestPairwiseInputParser.test_trivial": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestPairwiseInputParser.test_two_redundants": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.allclose",
    "numpy.array",
    "numpy.asarray",
    "numpy.unique",
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestPairwiseInputParser.test_two_redundants_overlap": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.allclose",
    "numpy.array",
    "numpy.asarray",
    "numpy.unique",
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestPairwiseInputParser.test_two_uniques": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.allclose",
    "numpy.array",
    "numpy.asarray",
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestStaticMethods": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurizer.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurizer.TestStaticMethods.setUp": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "pyemma.coordinates.tests.test_featurizer.pdbfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestStaticMethods.test_pairs": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestUtils": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurizer.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurizer.TestUtils.setUp": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestUtils.setUpClass": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "classmethod",
    "open",
    "print",
    "pyemma.coordinates.tests.test_featurizer.TestUtils",
    "pyemma.coordinates.tests.test_featurizer.bogus_geom_pdbfile",
    "pyemma.coordinates.tests.test_featurizer.tempfile",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestUtils.tearDownClass": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "EnvironmentError",
    "classmethod",
    "pyemma.coordinates.tests.test_featurizer.TestUtils",
    "pyemma.coordinates.tests.test_featurizer.os",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestUtils.test_describe_atom": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.data.featurization.util._describe_atom"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer._atoms_in_residues": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._atoms_in_residues"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer._describe_atom": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._describe_atom"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer._parse_pairwise_input": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._parse_pairwise_input"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.asn_leu_pdb": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurizer.bogus_geom_pdbfile": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurizer.check_serialized_equal": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "feat_equal",
    "pyemma.coordinates.tests.test_featurizer.pyemma",
    "pyemma.util.contexts.named_temporary_file"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.check_serialized_equal.feat_equal": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.data.featurization.featurizer.CustomFeature",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.load": {
  "data": {
   "shadows": "pyemma.load"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.named_temporary_file": {
  "data": {
   "shadows": "pyemma.util.contexts.named_temporary_file"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurizer.pdbfile": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_Ca": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_aa": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurizer.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_featurizer.mdtraj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.verbose_assertion_minrmsd": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.allclose",
    "numpy.arange",
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.xtcfile": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_fragmented_trajectory.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.setUpClass": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_chunked_trajectory_random_access": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_chunked_trajectory_with_lag": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_almost_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_cols": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_fragmented_xtc": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "EnvironmentError",
    "__name__",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_fragmented_trajectory.mdtraj",
    "pyemma.coordinates.tests.test_fragmented_trajectory.os",
    "pyemma.coordinates.tests.test_fragmented_trajectory.pkg_resources",
    "pyemma.coordinates.tests.util.create_traj",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_full_trajectory": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_full_trajectory_random_access": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_full_trajectory_stridden": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_full_trajectory_stridden_with_lag": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_almost_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_index_to_reader_index": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_multiple_input_trajectories": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_multiple_input_trajectories_random_access": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_raise_different_dims": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_with_save_traj": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "__name__",
    "numpy.array",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.save_traj",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_fragmented_trajectory.os",
    "pyemma.coordinates.tests.test_fragmented_trajectory.pkg_resources",
    "reshape"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_frames_from_file.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_frames_from_file.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "__name__",
    "mdtraj.load",
    "numpy.random.randint",
    "pyemma.coordinates.tests.test_frames_from_file.os",
    "pyemma.coordinates.tests.test_frames_from_file.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_gets_the_right_frames_no_stride_no_chunk": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "int",
    "mdtraj.load",
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_gets_the_right_frames_no_stride_with_chunk": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mdtraj.load",
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_gets_the_right_frames_with_stride_no_chunk": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "mdtraj.load",
    "numpy.floor",
    "numpy.random.randint",
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_gets_the_right_frames_with_stride_with_chunk": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "mdtraj.load",
    "numpy.floor",
    "numpy.random.randint",
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_gets_the_right_frames_with_stride_with_chunk_mdTopology_input": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "mdtraj.load",
    "numpy.floor",
    "numpy.random.randint",
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_gets_the_right_frames_with_stride_with_chunk_mdTrajectory_input": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "mdtraj.load",
    "numpy.floor",
    "numpy.random.randint",
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_gets_the_right_frames_with_stride_with_copy": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mdtraj.load",
    "numpy.allclose",
    "numpy.floor",
    "numpy.random.randint",
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_pass_reader": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.vstack",
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files",
    "pyemma.coordinates.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_returns_trajectory": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "isinstance",
    "mdtraj.Trajectory",
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_trajs_larger_than_frame_index": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.vstack",
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files",
    "pyemma.coordinates.tests.test_frames_from_file.re",
    "pyemma.coordinates.tests.util.create_traj",
    "pyemma.coordinates.tests.util.get_top",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file._frames_from_file": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.frames_from_file.frames_from_files"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.allclose": {
  "data": {
   "shadows": "numpy.allclose"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.compare_coords_md_trajectory_objects": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.floor": {
  "data": {
   "shadows": "numpy.floor"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.get_top": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.get_top"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.md": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_h5reader.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_h5reader.H5Reader": {
  "data": {
   "shadows": "pyemma.coordinates.data.h5_reader.H5Reader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.MockLoggingHandler": {
  "data": {
   "shadows": "pyemma.util.testing_tools.MockLoggingHandler"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_h5reader.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.setUpClass": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "classmethod",
    "numpy.arange",
    "pyemma.coordinates.data.h5_reader.H5Reader",
    "pyemma.coordinates.tests.test_h5reader.h5py",
    "pyemma.coordinates.tests.test_h5reader.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.tearDownClass": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.tests.test_h5reader.shutil"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.test_1d": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyemma.coordinates.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.test_5d": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pyemma.coordinates.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.test_ndim": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.test_non_matching_selection": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.data.h5_reader.H5Reader",
    "pyemma.coordinates.tests.test_h5reader.logging",
    "pyemma.util.testing_tools.MockLoggingHandler"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.test_output": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.test_source": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pyemma.coordinates.data.h5_reader.H5Reader",
    "pyemma.coordinates.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.test_udpate_selection": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_koopman_estimator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_koopman_estimator.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_koopman_estimator.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman.setUpClass": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "__name__",
    "classmethod",
    "float",
    "numpy.abs",
    "numpy.argmax",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.hstack",
    "numpy.load",
    "numpy.maximum",
    "numpy.min",
    "numpy.minimum",
    "numpy.real",
    "numpy.sign",
    "numpy.sum",
    "numpy.vstack",
    "numpy.where",
    "numpy.zeros",
    "pyemma._ext.variational.solvers.direct.sort_by_norm",
    "pyemma.coordinates.estimation.koopman._KoopmanEstimator",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_koopman_estimator.pkg_resources",
    "range",
    "scipy.linalg.eig",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman.test_K_pc_1": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman.test_R": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman.test_mean": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman.test_u": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman.test_u_pc_1": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman.test_weights": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.dot",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_koopman_estimator._KoopmanEstimator": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.koopman._KoopmanEstimator"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.scl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.sort_by_norm": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.sort_by_norm"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_numpyfilereader": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_numpyfilereader.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.NumPyFileReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_numpyfilereader.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.setUpClass": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "classmethod",
    "logging.getLogger",
    "numpy.arange",
    "numpy.random.random",
    "numpy.save",
    "numpy.savez",
    "pyemma.coordinates.tests.test_numpyfilereader.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.tearDownClass": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.tests.test_numpyfilereader.shutil"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.testSingleFile": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_describe": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_different_shapes_value_error": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "numpy.save",
    "numpy.zeros",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader",
    "pyemma.coordinates.tests.test_numpyfilereader.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_lagged_stridden_access": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_lagged_stridden_access_multiple_files": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "enumerate",
    "numpy.load",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_npz": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.load",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader",
    "pyemma.coordinates.tests.test_numpyfilereader.unittest",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_only_npy": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "numpy.load",
    "numpy.testing.assert_array_almost_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_skip": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_skip_input_list": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_almost_equal",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_small_chunks": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "len",
    "numpy.load",
    "numpy.testing.assert_array_almost_equal",
    "numpy.vstack",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_stridden_access": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.load",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_usecols": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_nystroem_tica.sys",
    "pyemma.coordinates.tests.test_nystroem_tica.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.SelectionStrategySpectralOasis": {
  "data": {
   "shadows": "pyemma.coordinates.transform.nystroem_tica.SelectionStrategySpectralOasis"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_DoubleWell": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_nystroem_tica.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_DoubleWell.setUpClass": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "classmethod",
    "numpy.exp",
    "numpy.linspace",
    "numpy.zeros",
    "pyemma.coordinates.tica",
    "pyemma.datasets.load_2well_discrete",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_DoubleWell.test": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.tica_nystroem"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_nystroem_tica.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple._compare_tica": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple.setUpClass": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "classmethod",
    "numpy.arange",
    "numpy.ones",
    "numpy.random.choice",
    "numpy.random.rand",
    "numpy.setdiff1d",
    "pyemma.coordinates.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple.test_describe": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.tica_nystroem"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple.test_multiple": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyemma.coordinates.tica_nystroem"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple.test_multiple_issues_warning": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.random.choice",
    "numpy.random.rand",
    "pyemma.coordinates.tests.test_nystroem_tica.use_assert_warns",
    "pyemma.coordinates.tica_nystroem"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple.test_single": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pyemma.coordinates.tica_nystroem"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple.test_single_issues_warning": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_nystroem_tica.use_assert_warns",
    "pyemma.coordinates.tica_nystroem"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_nystroem_tica.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS._test_oasis_single": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.transform.nystroem_tica.oASIS_Nystroem",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS.setUpClass": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "classmethod",
    "numpy.arange",
    "numpy.diag",
    "numpy.dot",
    "numpy.ones",
    "numpy.random.choice",
    "numpy.random.randn",
    "numpy.setdiff1d"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS.test_constant_evec": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.random.randn",
    "numpy.vstack",
    "pyemma.coordinates.transform.nystroem_tica.SelectionStrategySpectralOasis",
    "pyemma.coordinates.transform.nystroem_tica.oASIS_Nystroem"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS.test_initial_zero": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "pyemma.coordinates.transform.nystroem_tica.oASIS_Nystroem"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS.test_oasis": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.equal"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS.test_random": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.in1d",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.transform.nystroem_tica.oASIS_Nystroem"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS.test_spectral_oasis_multiple": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.equal",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.transform.nystroem_tica.oASIS_Nystroem"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.load_2well_discrete": {
  "data": {
   "shadows": "pyemma.datasets.load_2well_discrete"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.oASIS_Nystroem": {
  "data": {
   "shadows": "pyemma.coordinates.transform.nystroem_tica.oASIS_Nystroem"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.tica": {
  "data": {
   "shadows": "pyemma.coordinates.tica"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.tica_nystroem": {
  "data": {
   "shadows": "pyemma.coordinates.tica_nystroem"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.use_assert_warns": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_pca": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger",
    "pyemma.coordinates.tests.test_pca.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_pca.PCA": {
  "data": {
   "shadows": "pyemma.coordinates.transform.PCA"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_pca.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.setUpClass": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "classmethod",
    "msmtools.generation.generate_traj",
    "numpy.array",
    "numpy.random.get_state",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.zeros",
    "pyemma.coordinates.pca",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.tearDownClass": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.set_state"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_api_cs": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "pyemma.coordinates.pca"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_chunksize": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_cov": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "float",
    "numpy.all",
    "numpy.dot",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_cumvar": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_data_producer": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_describe": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pyemma.util.types.is_list_of_string",
    "pyemma.util.types.is_string"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_dimension": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.pca",
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_eigenvalues": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "eval",
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_eigenvectors": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_feature_correlation_MD": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "__name__",
    "numpy.corrcoef",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.pca",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_pca.os",
    "pyemma.coordinates.tests.test_pca.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_feature_correlation_data": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "len",
    "numpy.corrcoef",
    "numpy.linspace",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "pyemma.coordinates.pca"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_get_output": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "len",
    "pyemma.util.types.is_float_matrix",
    "pyemma.util.types.is_list"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_in_memory": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_iterator": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pyemma.util.types.is_float_matrix",
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_map": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_mean": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "len",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_n_frames_total": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_number_of_trajectories": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_output_type": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_partial_fit": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.pca"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_pipelining_sklearn_compat": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.transform.PCA"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_provided_means": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.pca"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_trajectory_length": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_trajectory_lengths": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_variances": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.var",
    "pyemma.coordinates.pca",
    "vars"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.logger": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_pca.msmgen": {
  "data": {
   "shadows": "msmtools.generation"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.pca": {
  "data": {
   "shadows": "pyemma.coordinates.pca"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_pipeline.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_pipeline.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.MDFeaturizer": {
  "data": {
   "shadows": "pyemma.coordinates.data.MDFeaturizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_pipeline.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.setUpClass": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "__name__",
    "classmethod",
    "msmtools.generation.generate_traj",
    "numpy.array",
    "numpy.random.randn",
    "numpy.zeros",
    "pyemma.coordinates.data.MDFeaturizer",
    "pyemma.coordinates.tests.test_pipeline.os",
    "pyemma.coordinates.tests.test_pipeline.pkg_resources",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_add_element": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyemma.coordinates.api.cluster_kmeans",
    "pyemma.coordinates.api.pipeline",
    "pyemma.coordinates.api.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_chunksize": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pyemma.coordinates.api.cluster_mini_batch_kmeans",
    "pyemma.coordinates.api.pipeline",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.api.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_discretizer": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pyemma.coordinates.api.cluster_regspace",
    "pyemma.coordinates.api.cluster_uniform_time",
    "pyemma.coordinates.api.discretizer",
    "pyemma.coordinates.api.pca",
    "pyemma.coordinates.api.tica",
    "pyemma.coordinates.data.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_is_parametrized": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pyemma.coordinates.api.cluster_kmeans",
    "pyemma.coordinates.api.cluster_regspace",
    "pyemma.coordinates.api.cluster_uniform_time",
    "pyemma.coordinates.api.pca",
    "pyemma.coordinates.api.pipeline",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.api.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_no_cluster": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "pyemma.coordinates.api.pca",
    "pyemma.coordinates.api.pipeline",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.api.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_no_transform": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pyemma.coordinates.api.cluster_kmeans",
    "pyemma.coordinates.api.cluster_regspace",
    "pyemma.coordinates.api.cluster_uniform_time",
    "pyemma.coordinates.api.pipeline",
    "pyemma.coordinates.api.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_np_reader_in_pipeline": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.save",
    "pyemma.coordinates.api.pipeline",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.tests.test_pipeline.os",
    "pyemma.util.files.TemporaryDirectory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_replace_data_source": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array_equal",
    "print",
    "pyemma.coordinates.api.cluster_kmeans",
    "pyemma.coordinates.api.pipeline",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.DataInMemory",
    "pyemma.coordinates.tests.test_pipeline.unittest"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_set_element": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.array_equal",
    "pyemma.coordinates.api.pca",
    "pyemma.coordinates.api.pipeline",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.api.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.msmgen": {
  "data": {
   "shadows": "msmtools.generation"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_random_access_stride.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_random_access_stride.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.DataInMemoryJaggedRandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemoryJaggedRandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.StreamingTransformerRandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingTransformerRandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride._get_reader_instance": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pyemma.coordinates.data.DataInMemory",
    "pyemma.coordinates.data.FeatureReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.setUpClass": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "__name__",
    "classmethod",
    "numpy.asarray",
    "numpy.float32",
    "numpy.random.random",
    "pyemma.coordinates.tests.test_featurereader.create_traj",
    "pyemma.coordinates.tests.test_random_access_stride.pkg_resources",
    "pyemma.coordinates.tests.test_random_access_stride.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.tearDownClass": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.tests.test_random_access_stride.shutil"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_RA_high_stride": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "int",
    "next",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.tests.test_featurereader.create_traj",
    "pyemma.coordinates.tests.util.get_top",
    "pyemma.coordinates.util.patches.iterload.MAX_STRIDE_SWITCH_TO_RA",
    "pyemma.coordinates.util.patches.iterload._DEACTIVATE_RANDOM_ACCESS_OPTIMIZATION",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_csv_filereader_random_access": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "EnvironmentError",
    "enumerate",
    "len",
    "numpy.savetxt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.unique",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.tests.test_random_access_stride.os",
    "pyemma.coordinates.tests.test_random_access_stride.tempfile",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_cuboid_random_access_with_mixed_trajs": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_data_in_memory_random_access": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "numpy.unique",
    "pyemma.coordinates.api.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_data_in_memory_without_first_two_trajs": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "pyemma.coordinates.api.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_dcd": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_gro": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format",
    "pyemma.coordinates.tests.test_random_access_stride.unittest"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_hdf5": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_lampstr": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_netcdf": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_trr": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_xtc": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_xyz": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_fragmented_reader_random_access": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader",
    "pyemma.coordinates.tests.test_featurereader.create_traj",
    "pyemma.coordinates.tests.test_random_access_stride.mdtraj",
    "pyemma.coordinates.tests.util.get_top",
    "pyemma.util.files.TemporaryDirectory",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_fragmented_reader_random_access1": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "collections.defaultdict",
    "enumerate",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader",
    "pyemma.coordinates.tests.test_featurereader.create_traj",
    "pyemma.coordinates.tests.test_random_access_stride.mdtraj",
    "pyemma.coordinates.tests.util.get_top",
    "pyemma.util.files.TemporaryDirectory",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_is_random_accessible": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "pyemma.coordinates.data.DataInMemory",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_iterator_context": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "pyemma.coordinates.data.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_jagged_random_access_with_mixed_trajs": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_linear_itraj_random_access_with_mixed_trajs": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_linear_random_access_with_mixed_trajs": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_numpy_filereader_random_access": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "EnvironmentError",
    "enumerate",
    "len",
    "numpy.save",
    "numpy.testing.assert_array_almost_equal",
    "numpy.unique",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.tests.test_random_access_stride.os",
    "pyemma.coordinates.tests.test_random_access_stride.tempfile",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_slice_random_access": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_slice_random_access_jagged": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.DataInMemory",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_slice_random_access_linear": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_slice_random_access_linear_itraj": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_transfomer_random_access": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "enumerate",
    "numpy.squeeze",
    "numpy.testing.assert_array_equal",
    "pyemma.coordinates.api.tica",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_transformer_iterator_random_access": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "len",
    "list",
    "pyemma.coordinates.api.cluster_kmeans",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_transformer_random_access_in_memory": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.api.tica",
    "pyemma.coordinates.data._base.transformer.StreamingTransformerRandomAccessStrategy",
    "pyemma.coordinates.data.data_in_memory.DataInMemoryJaggedRandomAccessStrategy"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "EnvironmentError",
    "__name__",
    "enumerate",
    "format",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.unique",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.tests.test_featurereader.create_traj",
    "pyemma.coordinates.tests.test_random_access_stride.mdtraj",
    "pyemma.coordinates.tests.test_random_access_stride.os",
    "pyemma.coordinates.tests.test_random_access_stride.pkg_resources",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.coor": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.test_featurereader.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.get_top": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.get_top"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.iterload": {
  "data": {
   "shadows": "pyemma.coordinates.util.patches.iterload"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_readers.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_readers.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.GenerateTestMatrix": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_readers.GenerateTestMatrix.__new__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "partialmethod",
    "str",
    "type.__new__"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.GenerateTestMatrix.__new__.partialmethod": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "functools.partial"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_readers.GenerateTestMatrix.__new__.partialmethod.__get__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.array",
    "numpy.finfo",
    "numpy.float32",
    "pyemma.coordinates.tests.test_readers.GenerateTestMatrix",
    "pyemma.coordinates.tests.test_readers.itertools",
    "pyemma.coordinates.tests.test_readers.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders._test_base_reader": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "collections.defaultdict",
    "enumerate",
    "len",
    "list",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.vstack",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_readers.max_chunksize_from_config",
    "pyemma.coordinates.tests.util.create_transform",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders._test_base_reader_with_random_access_stride": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_readers.max_chunksize_from_config"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders._test_fragment_reader": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.testing.assert_allclose",
    "numpy.vstack",
    "pyemma.coordinates.data.FragmentedTrajectoryReader",
    "pyemma.coordinates.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders._test_lagged_reader": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "collections.defaultdict",
    "enumerate",
    "len",
    "list",
    "numpy.testing.assert_allclose",
    "numpy.vstack",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_readers.max_chunksize_from_config",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders.setUp": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders.setup_class": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "classmethod",
    "numpy.float32",
    "numpy.random.random",
    "pyemma.coordinates.tests.test_readers.tempfile",
    "pyemma.coordinates.tests.util.create_dummy_pdb",
    "pyemma.coordinates.tests.util.create_trajectory_csv",
    "pyemma.coordinates.tests.util.create_trajectory_dcd",
    "pyemma.coordinates.tests.util.create_trajectory_h5",
    "pyemma.coordinates.tests.util.create_trajectory_numpy",
    "pyemma.coordinates.tests.util.create_trajectory_trr",
    "pyemma.coordinates.tests.util.create_trajectory_xtc"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders.tearDown": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders.teardown_class": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.tests.test_readers.shutil"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.config": {
  "data": {
   "shadows": "pyemma.config"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.max_chunksize_from_config": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "int",
    "max",
    "numpy.floor",
    "pyemma.config.default_chunksize",
    "pyemma.util.units.string_to_bytes"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.string_to_bytes": {
  "data": {
   "shadows": "pyemma.util.units.string_to_bytes"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.util": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_save_traj.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_save_traj.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_save_traj.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.setUp": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "__name__",
    "len",
    "numpy.random.permutation",
    "numpy.random.randint",
    "numpy.vstack",
    "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_save_traj.os",
    "pyemma.coordinates.tests.test_save_traj.pkg_resources",
    "pyemma.coordinates.tests.test_save_traj.tempfile",
    "pyemma.util.contexts.numpy_random_seed",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.tearDown": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_save_traj.shutil"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_invalid_maximum_traj_index": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.api.save_traj",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader",
    "set"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_invalid_readers_in_frag_traj": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pyemma.coordinates.api.save_traj",
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_list_input_returns_trajectory": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "isinstance",
    "mdtraj.Trajectory",
    "pyemma.coordinates.api.save_traj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_list_input_save_IO": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pyemma.coordinates.api.save_traj",
    "pyemma.coordinates.tests.test_save_traj.os"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_list_input_save_correct_frames_disk": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "mdtraj.load",
    "pyemma.coordinates.api.save_traj",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_list_input_save_correct_frames_mem": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pyemma.coordinates.api.save_traj",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_reader_input_returns_trajectory": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "isinstance",
    "mdtraj.Trajectory",
    "pyemma.coordinates.api.save_traj"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_reader_input_returns_trajectory_w_image_molecules": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "isinstance",
    "mdtraj.Trajectory",
    "pyemma.coordinates.api.save_traj",
    "pyemma.coordinates.tests.test_save_traj.unittest"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_reader_input_save_IO": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pyemma.coordinates.api.save_traj",
    "pyemma.coordinates.tests.test_save_traj.os"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_reader_input_save_correct_frames_disk": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "mdtraj.load",
    "pyemma.coordinates.api.save_traj",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_reader_input_save_correct_frames_mem": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pyemma.coordinates.api.save_traj",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_reader_input_save_correct_frames_with_stride_in_memory": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.random.randint",
    "numpy.shape",
    "pyemma.coordinates.api.save_traj",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects",
    "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_with_fragmented_reader": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "numpy.vstack",
    "pyemma.coordinates.api.save_traj",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.util.create_traj",
    "pyemma.coordinates.tests.util.get_top",
    "pyemma.util.files.TemporaryDirectory",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_with_fragmented_reader_chunksize_0": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.coordinates.api.save_traj",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects",
    "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame",
    "pyemma.coordinates.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.compare_coords_md_trajectory_objects": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.get_top": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.get_top"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.md": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.numpy_random_seed": {
  "data": {
   "shadows": "pyemma.util.contexts.numpy_random_seed"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.save_traj": {
  "data": {
   "shadows": "pyemma.coordinates.api.save_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.save_traj_w_md_load_frame": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.single_traj_from_n_files": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.single_traj_from_n_files"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_save_trajs.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_save_trajs.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.setUp": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "__name__",
    "len",
    "numpy.random.permutation",
    "numpy.random.randint",
    "numpy.vstack",
    "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_save_trajs.os",
    "pyemma.coordinates.tests.test_save_trajs.pkg_resources",
    "pyemma.coordinates.tests.test_save_trajs.tempfile",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.tearDown": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_save_trajs.shutil"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.test_out_of_bound_indexes": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.api.save_trajs"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.test_save_SaveTrajs_IO": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pyemma.coordinates.api.save_trajs",
    "pyemma.coordinates.tests.test_save_trajs.os"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.test_save_SaveTrajs_multipass": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pyemma.coordinates.api.save_trajs",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects",
    "pyemma.coordinates.data.util.reader_utils.single_traj_from_n_files"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.test_save_SaveTrajs_multipass_with_stride": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.random.randint",
    "numpy.shape",
    "pyemma.coordinates.api.save_trajs",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects",
    "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame",
    "pyemma.coordinates.data.util.reader_utils.single_traj_from_n_files"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.test_save_SaveTrajs_onepass": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pyemma.coordinates.api.save_trajs",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects",
    "pyemma.coordinates.data.util.reader_utils.single_traj_from_n_files"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.test_save_SaveTrajs_onepass_with_stride": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.random.randint",
    "numpy.shape",
    "pyemma.coordinates.api.save_trajs",
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects",
    "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame",
    "pyemma.coordinates.data.util.reader_utils.single_traj_from_n_files"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.compare_coords_md_trajectory_objects": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.save_traj_w_md_load_frame": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.save_trajs": {
  "data": {
   "shadows": "pyemma.coordinates.api.save_trajs"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.single_traj_from_n_files": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.single_traj_from_n_files"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_serialization.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_serialization.NumPyFileReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.PyCSVReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.PyCSVReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_serialization.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.compare": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "list",
    "numpy.ndarray",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.tests.test_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.setUp": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_serialization.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.setUpClass": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.tearDown": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_serialization.os"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_clustering_kmeans": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.cluster_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_clustering_minibatch_kmeans": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pyemma.coordinates.cluster_mini_batch_kmeans"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_clustering_regspace": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_clustering_uniform_time": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_csv_reader": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.savetxt",
    "pyemma.coordinates.data.PyCSVReader",
    "pyemma.coordinates.tests.test_serialization.os",
    "pyemma.util.files.TemporaryDirectory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_feature_reader": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "hasattr",
    "pyemma.coordinates.tests.test_serialization.pyemma",
    "pyemma.datasets.get_bpti_test_data"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_featurizer": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_serialization.pyemma",
    "pyemma.datasets.get_bpti_test_data"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_featurizer_empty": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_serialization.pyemma",
    "pyemma.datasets.get_bpti_test_data"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_fragmented_reader": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_serialization.pkg_resources",
    "pyemma.coordinates.tests.util.create_traj",
    "pyemma.util.files.TemporaryDirectory",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_h5_reader": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "__name__",
    "dict",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_serialization.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_numpy_reader": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.save",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader",
    "pyemma.coordinates.tests.test_serialization.os",
    "pyemma.util.files.TemporaryDirectory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_pca": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_pca_estimated": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_save_chain": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_serialization.pyemma",
    "pyemma.datasets.get_bpti_test_data",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_tica": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_tica_estimated": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.get_bpti_test_data": {
  "data": {
   "shadows": "pyemma.datasets.get_bpti_test_data"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger",
    "pyemma.coordinates.tests.test_source.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_source.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.H5Reader": {
  "data": {
   "shadows": "pyemma.coordinates.data.h5_reader.H5Reader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.MDFeaturizer": {
  "data": {
   "shadows": "pyemma.coordinates.data.MDFeaturizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.TestSource": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_source.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_source.TestSource.setUp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_source.os",
    "pyemma.coordinates.tests.test_source.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSource.test_h5_mdtraj_vs_plain": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.FeatureReader",
    "pyemma.coordinates.data.h5_reader.H5Reader",
    "pyemma.coordinates.tests.test_source.convert_traj",
    "pyemma.coordinates.tests.test_source.h5py",
    "pyemma.coordinates.tests.test_source.os",
    "pyemma.util.files.TemporaryDirectory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSource.test_invalid_files": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.tests.test_source.os"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSource.test_invalid_input": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.MDFeaturizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSource.test_read_multiple_files_featurizer": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.MDFeaturizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSource.test_read_multiple_files_topology_file": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pyemma.coordinates.api.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSource.test_read_single_file_featurizer": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.MDFeaturizer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSource.test_read_single_file_toplogy_file": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pyemma.coordinates.api.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_source.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.setUp": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.setUpClass": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "__name__",
    "classmethod",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.tests.test_source.os",
    "pyemma.coordinates.tests.test_source.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_chunksize": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_describe": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "pyemma.util.types.is_list_of_string",
    "pyemma.util.types.is_string"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_dimension": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_featurizer": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_get_output": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "len",
    "pyemma.util.types.is_float_matrix",
    "pyemma.util.types.is_list"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_in_memory": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_iterator": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "pyemma.util.types.is_float_matrix",
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_n_frames_total": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_number_of_trajectories": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_output_type": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_topfile": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "pyemma.util.types.is_string"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_trajectory_length": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_trajectory_lengths": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_trajfiles": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pyemma.util.types.is_list_of_string"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.convert_traj": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dir",
    "format",
    "pyemma.coordinates.tests.test_source.os",
    "pyemma.coordinates.tests.test_source.subprocess",
    "pyemma.coordinates.tests.test_source.sys"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_source.mdconvert": {
  "data": {
   "shadows": "mdtraj.scripts.mdconvert"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.tests.test_sources_merger.SourcesMerger": {
  "data": {
   "shadows": "pyemma.coordinates.data.sources_merger.SourcesMerger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.TestSourcesMerger": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_sources_merger.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_sources_merger.TestSourcesMerger._get_output_compare": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "collections.defaultdict",
    "enumerate",
    "len",
    "list",
    "numpy.float32",
    "numpy.hstack",
    "numpy.testing.assert_equal",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_sources_merger.TestSourcesMerger.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "glob.glob",
    "numpy.random.random",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_sources_merger.os",
    "pyemma.coordinates.tests.test_sources_merger.pkg_resources",
    "pyemma.coordinates.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_sources_merger.TestSourcesMerger.test_combined_output": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pyemma.coordinates.data.sources_merger.SourcesMerger"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_sources_merger.TestSourcesMerger.test_fragmented_trajs": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.atleast_2d",
    "numpy.concatenate",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.sources_merger.SourcesMerger",
    "pyemma.coordinates.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_sources_merger.TestSourcesMerger.test_non_matching_lengths": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.data.sources_merger.SourcesMerger",
    "pyemma.coordinates.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_sources_merger.TestSourcesMerger.test_ra_stride": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.array",
    "pyemma.coordinates.data.sources_merger.SourcesMerger"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_sources_merger.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.tica": {
  "data": {
   "shadows": "pyemma.coordinates.tica"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_streaming_transformer": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.MyTransformer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.transformer.StreamingTransformer"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.MyTransformer._transform_array": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.MyTransformer.describe": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.MyTransformer.dimension": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.StreamingTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.TestStreamingTransformer": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_streaming_transformer.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.TestStreamingTransformer.test_get_output": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_streaming_transformer.MyTransformer"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_stride": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_stride.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_stride.TestStride": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_stride.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_stride.TestStride.setUpClass": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "numpy.arange",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randn",
    "open",
    "print",
    "pyemma.coordinates.tests.test_stride.mdtraj",
    "pyemma.coordinates.tests.test_stride.tempfile",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_stride.TestStride.tearDownClass": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.tests.test_stride.TestStride",
    "pyemma.coordinates.tests.test_stride.os",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_stride.TestStride.test_content_data_in_memory": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "int",
    "numpy.all",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randn",
    "pyemma.coordinates.source",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_stride.TestStride.test_length_and_content_feature_reader_and_TICA": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tica",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_stride.TestStride.test_parametrize_with_stride": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.all",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tica",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_stride.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_stride.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_stride.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_stride.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_stride.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_stride.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger",
    "pyemma.coordinates.tests.test_tica.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_tica.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.MockLoggingHandler": {
  "data": {
   "shadows": "pyemma.util.testing_tools.MockLoggingHandler"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.TICA": {
  "data": {
   "shadows": "pyemma.coordinates.transform.TICA"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_tica.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman.setUpClass": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "__name__",
    "classmethod",
    "float",
    "numpy.abs",
    "numpy.dot",
    "numpy.eye",
    "numpy.hstack",
    "numpy.load",
    "numpy.log",
    "numpy.ones",
    "numpy.real",
    "numpy.sum",
    "numpy.vstack",
    "numpy.zeros",
    "pyemma._ext.variational.solvers.direct.sort_by_norm",
    "pyemma.coordinates.estimation.koopman._KoopmanWeights",
    "pyemma.coordinates.tests.test_tica.pkg_resources",
    "pyemma.coordinates.tests.test_tica.scale_eigenvectors",
    "pyemma.coordinates.tests.test_tica.transform_C0",
    "pyemma.coordinates.tica",
    "range",
    "scipy.linalg.eig",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman.test_C0": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman.test_Ct": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman.test_eigenvalues": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman.test_eigenvectors": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman.test_get_output": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman.test_mean_x": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAErrors": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_tica.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAErrors.test_constant_features": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros",
    "pyemma._ext.variational.util.ZeroRankError",
    "pyemma.coordinates.transform.TICA"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_tica.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.setUp": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.setUpClass": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "msmtools.generation.generate_traj",
    "numpy.array",
    "numpy.dot",
    "numpy.random.randn",
    "numpy.sum",
    "numpy.zeros",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.api.tica",
    "pyemma.util.contexts.numpy_random_seed",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_chunksize": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_cov": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_cov_tau": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_cumvar": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "len",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_data_producer": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_describe": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "pyemma.coordinates.tica",
    "pyemma.util.types.is_list_of_string",
    "pyemma.util.types.is_string"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_dimension": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.api.tica",
    "pyemma.coordinates.tica",
    "pyemma.coordinates.tica.dimension",
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_eigenvalues": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "eval",
    "len",
    "numpy.abs",
    "numpy.max",
    "numpy.testing.assert_allclose",
    "pyemma._ext.variational.solvers.direct.eig_corr"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_eigenvectors": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.testing.assert_allclose",
    "pyemma._ext.variational.solvers.direct.eig_corr"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_feature_correlation_MD": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_tica.mycorrcoef",
    "pyemma.coordinates.tests.test_tica.os",
    "pyemma.coordinates.tests.test_tica.pkg_resources",
    "pyemma.coordinates.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_feature_correlation_data": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "len",
    "numpy.linspace",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "pyemma.coordinates.tests.test_tica.mycorrcoef",
    "pyemma.coordinates.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_get_output": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "len",
    "pyemma.util.types.is_float_matrix",
    "pyemma.util.types.is_list"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_in_memory": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_iterator": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "pyemma.util.types.is_float_matrix",
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_kinetic_map": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.var",
    "pyemma.coordinates.api.tica",
    "vars"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_lag": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_map": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_mean": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "len",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_mu": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "len",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_n_frames_total": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_number_of_trajectories": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_output_type": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_timescales": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.allclose",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_too_short_traj_partial_fit": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "pyemma.coordinates.tests.test_tica.logging",
    "pyemma.coordinates.tica",
    "pyemma.util.testing_tools.MockLoggingHandler"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_trajectory_length": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_trajectory_lengths": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_variances": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.var",
    "vars"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_tica.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyemma.coordinates.api.tica",
    "pyemma.util.contexts.numpy_random_seed",
    "pyemma.util.types.is_float_matrix"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.testChunksizeResultsTica": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.api.tica",
    "pyemma.coordinates.data.data_in_memory.DataInMemory",
    "pyemma.coordinates.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_MD_data": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.source",
    "pyemma.coordinates.tests.test_tica.os",
    "pyemma.coordinates.tests.test_tica.pkg_resources",
    "pyemma.coordinates.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_commute_map": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.arange",
    "pyemma.coordinates.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_default_cs": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "pyemma.coordinates.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_duplicated_data": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.hstack",
    "numpy.newaxis",
    "numpy.random.randn",
    "pyemma.coordinates.api.tica",
    "pyemma.coordinates.data.data_in_memory.DataInMemory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_duplicated_data_in_fit_transform": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_array_almost_equal",
    "pyemma.coordinates.api.tica",
    "pyemma.coordinates.data.data_in_memory.DataInMemory",
    "pyemma.coordinates.tica",
    "pyemma.coordinates.tica.fit_transform",
    "pyemma.coordinates.tica.get_output"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_fit_transform": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_array_almost_equal",
    "pyemma.coordinates.api.tica",
    "pyemma.coordinates.tica",
    "pyemma.coordinates.tica.fit_transform",
    "pyemma.coordinates.transform.TICA"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_in_memory": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.api.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_pipelining_sklearn_compat": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.testing.assert_allclose",
    "pyemma.coordinates.transform.TICA"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_singular_zeros": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.hstack",
    "numpy.random.randn",
    "numpy.zeros",
    "pyemma.coordinates.api.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_too_short_trajs": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "numpy.empty",
    "pyemma.coordinates.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_with_skip": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.random.random",
    "pyemma.coordinates.api.tica"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.ZeroRankError": {
  "data": {
   "shadows": "pyemma._ext.variational.util.ZeroRankError"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica._KoopmanWeights": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.koopman._KoopmanWeights"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica._internal_tica": {
  "data": {
   "shadows": "pyemma.coordinates.transform.TICA"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.eig_corr": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.eig_corr"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_tica.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.msmgen": {
  "data": {
   "shadows": "msmtools.generation"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.mycorrcoef": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.float64",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.numpy_random_seed": {
  "data": {
   "shadows": "pyemma.util.contexts.numpy_random_seed"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.scale_eigenvectors": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax",
    "numpy.sign",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.scl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.sort_by_norm": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.sort_by_norm"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.tica": {
  "data": {
   "shadows": "pyemma.coordinates.tica"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.transform_C0": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.diag",
    "numpy.dot",
    "numpy.maximum",
    "numpy.min",
    "numpy.minimum",
    "numpy.where",
    "pyemma._ext.variational.solvers.direct.sort_by_norm",
    "pyemma.coordinates.tests.test_tica.scale_eigenvectors",
    "scipy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.test_traj_info_cache.unittest",
    "pyemma.datasets.get_bpti_test_data"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.Config": {
  "data": {
   "shadows": "pyemma.util._config.Config"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.ConfigDirectoryException": {
  "data": {
   "shadows": "pyemma.util.exceptions.ConfigDirectoryException"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.DictDB": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_backends.DictDB"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.feature_reader.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.NumPyFileReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.PyCSVReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.SqliteDB": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_backends.SqliteDB"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_traj_info_cache.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.setUp": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache",
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache._instance",
    "pyemma.coordinates.tests.test_traj_info_cache.tempfile",
    "pyemma.util.config.use_trajectory_lengths_cache"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.setUpClass": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.instance",
    "pyemma.util.config.use_trajectory_lengths_cache"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.tearDown": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.test_traj_info_cache.os",
    "pyemma.coordinates.tests.test_traj_info_cache.shutil"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.tearDownClass": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache._instance",
    "pyemma.util.config.use_trajectory_lengths_cache"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_corrupted_db": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache",
    "pyemma.coordinates.tests.test_traj_info_cache.pdbfile",
    "pyemma.coordinates.tests.test_traj_info_cache.warnings",
    "pyemma.coordinates.tests.test_traj_info_cache.xtcfiles",
    "str",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_csvreader": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.savetxt",
    "numpy.testing.assert_equal",
    "open",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader",
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader.DEFAULT_OPEN_MODE",
    "pyemma.coordinates.tests.test_traj_info_cache.os",
    "pyemma.coordinates.tests.test_traj_info_cache.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_data_in_mem": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.empty",
    "pyemma.coordinates.api.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_exceptions": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "chr",
    "numpy.array",
    "numpy.random.randint",
    "numpy.save",
    "open",
    "pyemma.coordinates.api.source",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_feature_reader_xyz": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.tests.test_traj_info_cache.mdtraj",
    "pyemma.coordinates.tests.test_traj_info_cache.pdbfile",
    "pyemma.coordinates.tests.test_traj_info_cache.pyemma",
    "pyemma.coordinates.tests.test_traj_info_cache.xtcfiles",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_featurereader_xtc": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.feature_reader.FeatureReader",
    "pyemma.coordinates.tests.test_traj_info_cache.mdtraj",
    "pyemma.coordinates.tests.test_traj_info_cache.pdbfile",
    "pyemma.coordinates.tests.test_traj_info_cache.xtcfiles",
    "pyemma.util.contexts.settings"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_fragmented_reader": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.tests.test_traj_info_cache.pkg_resources",
    "pyemma.coordinates.tests.util.create_traj",
    "pyemma.util.files.TemporaryDirectory",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_get_instance": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.instance"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_in_memory_db": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "pyemma.coordinates.data.util.traj_info_backends.SqliteDB",
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache",
    "pyemma.coordinates.tests.test_traj_info_cache.pdbfile",
    "pyemma.coordinates.tests.test_traj_info_cache.pyemma",
    "pyemma.coordinates.tests.test_traj_info_cache.xtcfiles",
    "pyemma.util.config._cfg_dir",
    "pyemma.util.config.cfg_dir",
    "pyemma.util.exceptions.ConfigDirectoryException"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_max_n_entries": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "enumerate",
    "numpy.random.random",
    "numpy.save",
    "pyemma.coordinates.tests.test_traj_info_cache.os",
    "pyemma.coordinates.tests.test_traj_info_cache.pyemma",
    "pyemma.util.config.traj_info_max_entries",
    "pyemma.util.files.TemporaryDirectory",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_max_size": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "enumerate",
    "numpy.random.random",
    "numpy.savetxt",
    "pyemma.coordinates.tests.test_traj_info_cache.os",
    "pyemma.coordinates.tests.test_traj_info_cache.pyemma",
    "pyemma.util.config.traj_info_max_size",
    "pyemma.util.contexts.settings",
    "pyemma.util.files.TemporaryDirectory",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_n_entries": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "len",
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache._instance",
    "pyemma.coordinates.tests.test_traj_info_cache.pdbfile",
    "pyemma.coordinates.tests.test_traj_info_cache.pyemma",
    "pyemma.coordinates.tests.test_traj_info_cache.xtcfiles",
    "pyemma.util.config.use_trajectory_lengths_cache"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_no_sqlite": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "len",
    "meta_ldr",
    "pyemma.coordinates.data.util.traj_info_backends.SqliteDB",
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache",
    "pyemma.coordinates.tests.test_traj_info_cache.sys",
    "pyemma.coordinates.tests.test_traj_info_cache.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_no_sqlite.meta_ldr": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_no_sqlite.meta_ldr.find_module": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_no_sqlite.meta_ldr.load_module": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_no_working_directory": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "pyemma.coordinates.data.util.traj_info_backends.SqliteDB",
    "pyemma.coordinates.tests.test_traj_info_cache.pdbfile",
    "pyemma.coordinates.tests.test_traj_info_cache.pyemma",
    "pyemma.coordinates.tests.test_traj_info_cache.xtcfiles"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_npy_reader": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.save",
    "numpy.testing.assert_equal",
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader",
    "pyemma.coordinates.tests.test_traj_info_cache.os",
    "pyemma.util.files.TemporaryDirectory"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_old_db_conversion": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "hash",
    "numpy.save",
    "pyemma.coordinates.api.source",
    "pyemma.coordinates.data.util.traj_info_backends.DictDB",
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_store_load_traj_info": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.savetxt",
    "pyemma.coordinates.api.source",
    "pyemma.util._config.Config",
    "tempfile.NamedTemporaryFile",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_stress": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "numpy.save",
    "print",
    "pyemma.coordinates.tests.test_traj_info_cache.os",
    "pyemma.coordinates.tests.test_traj_info_cache.subprocess",
    "pyemma.coordinates.tests.test_traj_info_cache.sys",
    "pyemma.coordinates.tests.test_traj_info_cache.time",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TrajectoryInfoCache": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.config": {
  "data": {
   "shadows": "pyemma.util.config"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.get_bpti_test_data": {
  "data": {
   "shadows": "pyemma.datasets.get_bpti_test_data"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.pdbfile": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.settings": {
  "data": {
   "shadows": "pyemma.util.contexts.settings"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.xtcfiles": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.tests.util.DCDTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.core.trajectory.DCDTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.StreamingTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.TRRTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.core.trajectory.TRRTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.XTCTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.core.trajectory.XTCTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.create_dummy_pdb": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "open",
    "print",
    "pyemma.coordinates.tests.util.tempfile",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_traj": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dir",
    "format",
    "numpy.arange",
    "numpy.array",
    "pyemma.coordinates.tests.util.get_top",
    "pyemma.coordinates.tests.util.mdtraj",
    "pyemma.coordinates.tests.util.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_trajectory_csv": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.savetxt",
    "pyemma.coordinates.tests.util.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_trajectory_dcd": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "mdtraj.core.trajectory.DCDTrajectoryFile",
    "pyemma.coordinates.tests.util.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_trajectory_h5": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyemma.coordinates.tests.util.h5py",
    "pyemma.coordinates.tests.util.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_trajectory_numpy": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.save",
    "pyemma.coordinates.tests.util.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_trajectory_trr": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mdtraj.core.trajectory.TRRTrajectoryFile",
    "pyemma.coordinates.tests.util.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_trajectory_xtc": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "mdtraj.core.trajectory.XTCTrajectoryFile",
    "pyemma.coordinates.tests.util.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_transform": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "IdentityTransform"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_transform.IdentityTransform": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.transformer.StreamingTransformer"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.util.create_transform.IdentityTransform._transform_array": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_transform.IdentityTransform.describe": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_transform.IdentityTransform.dimension": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.get_top": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "__name__",
    "pyemma.coordinates.tests.util.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.transform._tica_base": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.transform._tica_base.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform._tica_base.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform._tica_base.StreamingEstimationTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform._tica_base.TICABase": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.transform._tica_base.TICABase._transform_array": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.cov": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.cov_tau": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.cumvar": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "property",
    "pyemma.coordinates.transform._tica_base._lazy_estimation"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.dim": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.dimension": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "min",
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.eigenvalues": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "property",
    "pyemma.coordinates.transform._tica_base._lazy_estimation"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.eigenvectors": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "property",
    "pyemma.coordinates.transform._tica_base._lazy_estimation"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.feature_TIC_correlation": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.sqrt",
    "property",
    "pyemma.coordinates.transform._tica_base._lazy_estimation"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.lag": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.mean": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.model": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.output_type": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "numpy.complex64",
    "numpy.imag",
    "numpy.isreal",
    "pyemma.coordinates.transform._tica_base.TICABase",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.timescales": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.log",
    "property",
    "pyemma.coordinates.transform._tica_base._lazy_estimation"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.var_cutoff": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "float",
    "hasattr",
    "pyemma.coordinates.transform._tica_base.TICABase"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICAModelBase": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pyemma._base.model.Model",
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.transform._tica_base.TICAModelBase.set_model_params": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.__author__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyemma.coordinates.transform._tica_base._lazy_estimation": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "decorator.decorator",
    "func",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform._tica_base.decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform._tica_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.transform.pca.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.PCA": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.transform.pca.PCA.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.coordinates.transform.pca.PCA",
    "pyemma.coordinates.transform.pca.PCAModel",
    "pyemma.util.reflection.get_default_args",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA._diagonalize": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.cumsum",
    "numpy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA._estimate": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pyemma._base.progress.ProgressReporter"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA._init_covar": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "max",
    "pyemma._ext.variational.estimators.running_moments.running_covar",
    "pyemma.coordinates.transform.pca.math"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA._transform_array": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.cumvar": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.describe": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.dimension": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "min",
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.eigenvalues": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.eigenvectors": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.feature_PC_correlation": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.sqrt",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.mean": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.partial_fit": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "pyemma.coordinates.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCAModel": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pyemma._base.model.Model",
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.transform.pca.PCAModel.set_model_params": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.StreamingEstimationTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyemma.coordinates.transform.pca.__author__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.coordinates.transform.pca._lazy_estimation": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "decorator.decorator",
    "func",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.get_default_args": {
  "data": {
   "shadows": "pyemma.util.reflection.get_default_args"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.running_covar": {
  "data": {
   "shadows": "pyemma._ext.variational.estimators.running_moments.running_covar"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.transform.tica.LaggedCovariance": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.LaggedCovariance"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.TICA": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.coordinates.transform._tica_base.TICABase",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.transform.tica.TICA.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "pyemma.coordinates.transform.tica.TICA",
    "pyemma.coordinates.transform.tica.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.tica.TICA._diagonalize": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.cumsum",
    "numpy.log",
    "numpy.maximum",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.tanh",
    "pyemma._ext.variational.solvers.direct.eig_corr",
    "pyemma._ext.variational.util.ZeroRankError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.tica.TICA._estimate": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "RuntimeError",
    "pyemma.coordinates.estimation.covariance.LaggedCovariance"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.tica.TICA.describe": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.tica.TICA.estimate": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "pyemma.coordinates.transform.tica.TICA",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.tica.TICA.model": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "hasattr",
    "property",
    "pyemma.coordinates.transform._tica_base.TICAModelBase"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.tica.TICA.partial_fit": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "RuntimeError",
    "pyemma.coordinates.estimation.covariance.LaggedCovariance",
    "pyemma.coordinates.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.tica.TICABase": {
  "data": {
   "shadows": "pyemma.coordinates.transform._tica_base.TICABase"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.TICAModelBase": {
  "data": {
   "shadows": "pyemma.coordinates.transform._tica_base.TICAModelBase"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.ZeroRankError": {
  "data": {
   "shadows": "pyemma._ext.variational.util.ZeroRankError"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyemma.coordinates.transform.tica.eig_corr": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.eig_corr"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.transform.vamp.LaggedCovariance": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.LaggedCovariance"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.LaggedModelValidator": {
  "data": {
   "shadows": "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.StreamingEstimationTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.VAMP": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.transform.vamp.VAMP.__init__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "float",
    "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer.__init__"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP._estimate": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP._init_covar": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "pyemma.coordinates.estimation.covariance.LaggedCovariance"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP._transform_array": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.cktest": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.coordinates.transform.vamp.VAMPChapmanKolmogorovValidator",
    "pyemma.coordinates.transform.vamp.warnings",
    "pyemma.util.types.ensure_ndarray",
    "pyemma.util.types.ensure_ndarray_or_None",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.cumvar": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.describe": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.dim": {
  "data": {
   "lineno": 541
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.dimension": {
  "data": {
   "lineno": 652
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.epsilon": {
  "data": {
   "lineno": 554
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.expectation": {
  "data": {
   "lineno": 757
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.model": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "hasattr",
    "property",
    "pyemma.coordinates.transform.vamp.VAMPModel"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.partial_fit": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "isinstance",
    "pyemma.coordinates.source"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.scaling": {
  "data": {
   "lineno": 569
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.score": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "pyemma._ext.sklearn.base.clone",
    "pyemma.coordinates.transform.vamp.VAMPModel"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.show_progress": {
  "data": {
   "lineno": 752
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.singular_values": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.singular_vectors_left": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.singular_vectors_right": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPChapmanKolmogorovValidator": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.transform.vamp.VAMPChapmanKolmogorovValidator.__init__": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.__init__"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPChapmanKolmogorovValidator._compute_observables": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPChapmanKolmogorovValidator._compute_observables_conf": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPChapmanKolmogorovValidator.statistics": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyemma._base.model.Model",
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.C00": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.C0t": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.Ctt": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.U": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.V": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel._cumvar": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.cumsum",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel._diagonalize": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.newaxis",
    "pyemma._ext.variational.solvers.direct.spd_inv_split",
    "pyemma.coordinates.transform.vamp.VAMPModel",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel._dimension": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "min",
    "numpy.min",
    "numpy.searchsorted",
    "pyemma.coordinates.transform.vamp.VAMPModel",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.cumvar": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "property",
    "pyemma.coordinates.transform.vamp.VAMPModel"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.dimension": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "isinstance",
    "pyemma.coordinates.transform.vamp.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.expectation": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.diag",
    "numpy.linalg.matrix_power",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.scaling": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.score": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "ValueError",
    "numpy.diag",
    "numpy.linalg.norm",
    "numpy.trace",
    "pyemma._ext.variational.solvers.direct.spd_inv_sqrt",
    "pyemma.util.linalg.mdot"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.set_model_params": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.singular_values": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.coordinates.transform.vamp.clone_estimator": {
  "data": {
   "shadows": "pyemma._ext.sklearn.base.clone"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.ensure_ndarray": {
  "data": {
   "shadows": "pyemma.util.types.ensure_ndarray"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.ensure_ndarray_or_None": {
  "data": {
   "shadows": "pyemma.util.types.ensure_ndarray_or_None"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.mdot": {
  "data": {
   "shadows": "pyemma.util.linalg.mdot"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.spd_inv_split": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.spd_inv_split"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.spd_inv_sqrt": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.spd_inv_sqrt"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.util.patches": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "pyemma.coordinates.util.patches.DCDTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.DCDTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.DTRTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.DTRTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.GroTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.GroTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.HDF5TrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.HDF5TrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.LAMMPSTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.LAMMPSTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.MDCRDTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.MDCRDTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.NetCDFTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.NetCDFTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.TRRTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.TRRTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.Topology": {
  "data": {
   "shadows": "mdtraj.Topology"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.TrajData": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyemma.coordinates.util.patches.Trajectory": {
  "data": {
   "shadows": "mdtraj.Trajectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.XTCTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.XTCTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches._TOPOLOGY_EXTS": {
  "data": {
   "shadows": "mdtraj.core.trajectory._TOPOLOGY_EXTS"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches._get_extension": {
  "data": {
   "shadows": "mdtraj.core.trajectory._get_extension"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches._join_traj_data": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "all",
    "map",
    "mdtraj.Trajectory",
    "numpy.concatenate",
    "operator.itemgetter",
    "pyemma.coordinates.util.patches.load_topology_cached",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches._load": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "functools.lru_cache",
    "mdtraj.core.trajectory.load_topology"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches._read_traj_data": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mdtraj.Trajectory._distance_unit",
    "mdtraj.formats.DCDTrajectoryFile",
    "mdtraj.formats.DTRTrajectoryFile",
    "mdtraj.formats.GroTrajectoryFile",
    "mdtraj.formats.HDF5TrajectoryFile",
    "mdtraj.formats.LAMMPSTrajectoryFile",
    "mdtraj.formats.MDCRDTrajectoryFile",
    "mdtraj.formats.NetCDFTrajectoryFile",
    "mdtraj.formats.TRRTrajectoryFile",
    "mdtraj.formats.XTCTrajectoryFile",
    "mdtraj.utils.in_units_of",
    "numpy.ndarray",
    "numpy.ones_like",
    "pyemma.coordinates.util.patches.TrajData"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.cast_indices": {
  "data": {
   "shadows": "mdtraj.utils.validation.cast_indices"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.groupby": {
  "data": {
   "shadows": "itertools.groupby"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.in_units_of": {
  "data": {
   "shadows": "mdtraj.utils.in_units_of"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.iterload": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "int",
    "next",
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.coordinates.util.patches.iterload.__enter__": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.__exit__": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception",
    "hasattr",
    "isinstance",
    "len",
    "mdtraj.core.trajectory._TOPOLOGY_EXTS",
    "mdtraj.core.trajectory._get_extension",
    "mdtraj.core.trajectory.open",
    "mdtraj.utils.validation.cast_indices",
    "numpy.arange",
    "numpy.ndarray",
    "pyemma.coordinates.util.patches.iterload",
    "pyemma.coordinates.util.patches.load_topology_cached"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.__iter__": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.__next__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "IOError",
    "IndexError",
    "StopIteration",
    "len",
    "mdtraj.core.trajectory._TOPOLOGY_EXTS",
    "next"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload._random_access_generator": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "StopIteration",
    "enumerate",
    "int",
    "itertools.groupby",
    "len",
    "list",
    "map",
    "min",
    "numpy.iinfo",
    "operator.itemgetter",
    "pyemma.coordinates.util.patches._join_traj_data",
    "pyemma.coordinates.util.patches._read_traj_data"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.chunksize": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.close": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.is_ra_iter": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.skip": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.load_topology": {
  "data": {
   "shadows": "mdtraj.core.trajectory.load_topology"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.load_topology_cached": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "mdtraj.Topology",
    "mdtraj.Trajectory",
    "pyemma.coordinates.util.patches._load",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.md_open": {
  "data": {
   "shadows": "mdtraj.core.trajectory.open"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.trajectory_set_item": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "isinstance",
    "len",
    "list",
    "numpy.index_exp",
    "pyemma.coordinates.util.patches.mdtraj",
    "slice",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.util.stat": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.util.stat.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyemma.coordinates.util.stat.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.coordinates.util.stat.deprecated": {
  "data": {
   "shadows": "pyemma.util.annotators.deprecated"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.stat.hist": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyemma.coordinates.util.stat.histogram",
    "pyemma.util.annotators.deprecated"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.util.stat.histogram": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.histogramdd",
    "numpy.inf",
    "numpy.linspace",
    "numpy.max",
    "numpy.min",
    "numpy.ones",
    "numpy.vstack",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.coordinates.util.stat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.datasets": {
  "data": {},
  "type": "module"
 },
 "pyemma.datasets.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyemma.datasets.api": {
  "data": {},
  "type": "module"
 },
 "pyemma.datasets.api._DWS": {
  "data": {
   "shadows": "pyemma.datasets.double_well_thermo.DoubleWellSampler"
  },
  "type": "import"
 },
 "pyemma.datasets.api.__author__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pyemma.datasets.api.get_bpti_test_data": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "filter",
    "glob.glob",
    "len",
    "pyemma.datasets.api.os",
    "pyemma.datasets.api.pkg_resources",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.api.get_multi_temperature_data": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pyemma.datasets.double_well_thermo.DoubleWellSampler"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.api.get_quadwell_data": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "PrinzModel",
    "RuntimeError",
    "numpy.all",
    "numpy.isfinite",
    "pyemma.datasets.api.warnings",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.api.get_umbrella_sampling_data": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pyemma.datasets.double_well_thermo.DoubleWellSampler"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.api.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "pyemma.datasets.api.load_2well_discrete": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "DoubleWell_Discrete_Data"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.datasets.api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.datasets.api.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.datasets.api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.datasets.double_well_discrete": {
  "data": {},
  "type": "module"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.load",
    "pkg_resources.resource_filename",
    "pyemma.msm.markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.dtraj_T100K_dt10": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.dtraj_T100K_dt10_n": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.concatenate",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.dtraj_T100K_dt10_n2": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.dtraj_T100K_dt10_n2bad": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.dtraj_T100K_dt10_n2good": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.dtraj_T100K_dt10_n6good": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.generate_traj": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "msmtools.generation.generate_traj"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.generate_trajs": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "msmtools.generation.generate_trajs"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.msm": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.transition_matrix": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.__author__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pyemma.datasets.double_well_discrete.generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.datasets.double_well_discrete.generate_trajs": {
  "data": {
   "shadows": "msmtools.generation.generate_trajs"
  },
  "type": "import"
 },
 "pyemma.datasets.double_well_discrete.markov_model": {
  "data": {
   "shadows": "pyemma.msm.markov_model"
  },
  "type": "import"
 },
 "pyemma.datasets.double_well_discrete.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.datasets.double_well_discrete.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "pyemma.datasets.double_well_thermo": {
  "data": {},
  "type": "module"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.linspace",
    "numpy.log",
    "numpy.random",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler._bias": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "TypeError",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler._draw": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler._potential": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "TypeError",
    "map",
    "numpy.asarray",
    "numpy.inf",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler.centers": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler.mcmc": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.ascontiguousarray",
    "numpy.exp",
    "numpy.float64",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler.mt_sample": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "dict",
    "numpy.asarray",
    "pyemma.coordinates.assign_to_centers",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler.potential": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler.sample": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "dict",
    "pyemma.coordinates.assign_to_centers",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler.us_sample": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.linspace",
    "pyemma.coordinates.assign_to_centers",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pyemma.datasets.double_well_thermo._assign_to_centers": {
  "data": {
   "shadows": "pyemma.coordinates.assign_to_centers"
  },
  "type": "import"
 },
 "pyemma.datasets.double_well_thermo._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.datasets.potentials": {
  "data": {},
  "type": "module"
 },
 "pyemma.datasets.potentials.AsymmetricDoubleWell": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pyemma.datasets.potentials.BrownianDynamics"
   ]
  },
  "type": "class"
 },
 "pyemma.datasets.potentials.AsymmetricDoubleWell.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pyemma.datasets.potentials.AsymmetricDoubleWell",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.AsymmetricDoubleWell.gradient": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pyemma.datasets.potentials.asymmetric_double_well_gradient"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.AsymmetricDoubleWell.sample": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.BrownianDynamics": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.datasets.potentials.BrownianDynamics.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.BrownianDynamics.gradient": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.BrownianDynamics.step": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.FoldingModel": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pyemma.datasets.potentials.BrownianDynamics"
   ]
  },
  "type": "class"
 },
 "pyemma.datasets.potentials.FoldingModel.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyemma.datasets.potentials.FoldingModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.FoldingModel.gradient": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pyemma.datasets.potentials.folding_model_gradient"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.FoldingModel.sample": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.PrinzModel": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pyemma.datasets.potentials.BrownianDynamics"
   ]
  },
  "type": "class"
 },
 "pyemma.datasets.potentials.PrinzModel.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pyemma.datasets.potentials.PrinzModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.PrinzModel.gradient": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "pyemma.datasets.potentials.prinz_gradient"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.PrinzModel.sample": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.asymmetric_double_well_energy": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.asymmetric_double_well_gradient": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.folding_model_energy": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.folding_model_gradient": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.get_asymmetric_double_well_data": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "pyemma.datasets.potentials.AsymmetricDoubleWell"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.get_folding_model_data": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyemma.datasets.potentials.FoldingModel"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.get_prinz_pot": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "pyemma.datasets.potentials.PrinzModel"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.datasets.potentials.prinz_energy": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.prinz_gradient": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma.datasets.tests.test_datasets": {
  "data": {},
  "type": "module"
 },
 "pyemma.datasets.tests.test_datasets.TestPrinzPotential": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pyemma.datasets.tests.test_datasets.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.datasets.tests.test_datasets.TestPrinzPotential.test_prinz_potential": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "numpy.all",
    "numpy.isfinite",
    "pyemma.datasets.get_quadwell_data"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.tests.test_datasets.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pyemma.datasets.tests.test_datasets.estimate_multi_temperature": {
  "data": {
   "shadows": "pyemma.thermo.estimate_multi_temperature"
  },
  "type": "import"
 },
 "pyemma.datasets.tests.test_datasets.estimate_umbrella_sampling": {
  "data": {
   "shadows": "pyemma.thermo.estimate_umbrella_sampling"
  },
  "type": "import"
 },
 "pyemma.datasets.tests.test_datasets.get_multi_temperature_data": {
  "data": {
   "shadows": "pyemma.datasets.get_multi_temperature_data"
  },
  "type": "import"
 },
 "pyemma.datasets.tests.test_datasets.get_quadwell_data": {
  "data": {
   "shadows": "pyemma.datasets.get_quadwell_data"
  },
  "type": "import"
 },
 "pyemma.datasets.tests.test_datasets.get_umbrella_sampling_data": {
  "data": {
   "shadows": "pyemma.datasets.get_umbrella_sampling_data"
  },
  "type": "import"
 },
 "pyemma.datasets.tests.test_datasets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.datasets.tests.test_datasets.test_multi_temperature_data": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.datasets.get_multi_temperature_data",
    "pyemma.thermo.estimate_multi_temperature"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.tests.test_datasets.test_umbrella_sampling_data": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.datasets.get_umbrella_sampling_data",
    "pyemma.thermo.estimate_umbrella_sampling"
   ]
  },
  "type": "function"
 },
 "pyemma.datasets.tests.test_datasets.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyemma.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.msm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.PCCA": {
  "data": {
   "shadows": "msmtools.analysis.dense.pcca.PCCA"
  },
  "type": "import"
 },
 "pyemma.msm.api": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.api._Bayes_HMSM": {
  "data": {
   "shadows": "BayesianHMSM"
  },
  "type": "import"
 },
 "pyemma.msm.api._Bayes_MSM": {
  "data": {
   "shadows": "BayesianMSM"
  },
  "type": "import"
 },
 "pyemma.msm.api._ImpliedTimescales": {
  "data": {
   "shadows": "ImpliedTimescales"
  },
  "type": "import"
 },
 "pyemma.msm.api._ML_AMM": {
  "data": {
   "shadows": "AugmentedMarkovModel"
  },
  "type": "import"
 },
 "pyemma.msm.api._ML_HMSM": {
  "data": {
   "shadows": "MaximumLikelihoodHMSM"
  },
  "type": "import"
 },
 "pyemma.msm.api._ML_MSM": {
  "data": {
   "shadows": "MaximumLikelihoodMSM"
  },
  "type": "import"
 },
 "pyemma.msm.api._OOM_MSM": {
  "data": {
   "shadows": "OOMReweightedMSM"
  },
  "type": "import"
 },
 "pyemma.msm.api.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyemma.msm.api.__author__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyemma.msm.api.__copyright__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyemma.msm.api.__credits__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyemma.msm.api.__docformat__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyemma.msm.api.__email__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyemma.msm.api.__maintainer__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyemma.msm.api._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.api._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.api.bayesian_hidden_markov_model": {
  "data": {
   "lineno": 1164
  },
  "type": "function"
 },
 "pyemma.msm.api.bayesian_markov_model": {
  "data": {
   "lineno": 628
  },
  "type": "function"
 },
 "pyemma.msm.api.estimate_augmented_markov_model": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "numpy.all",
    "numpy.concatenate",
    "numpy.where",
    "numpy.zeros",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.api.estimate_hidden_markov_model": {
  "data": {
   "lineno": 981
  },
  "type": "function"
 },
 "pyemma.msm.api.estimate_markov_model": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pyemma.msm.api.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.api.flux_matrix": {
  "data": {
   "shadows": "msmtools.flux.flux_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.api.markov_model": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "MSM"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.api.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.api.shortcut": {
  "data": {
   "shadows": "pyemma.util.annotators.shortcut"
  },
  "type": "import"
 },
 "pyemma.msm.api.timescales_hmsm": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyemma.util.types.ensure_dtraj_list",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.api.timescales_msm": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "hasattr",
    "isinstance",
    "pyemma.util.annotators.shortcut",
    "pyemma.util.types.ensure_dtraj_list",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.api.to_netflux": {
  "data": {
   "shadows": "msmtools.flux.to_netflux"
  },
  "type": "import"
 },
 "pyemma.msm.api.tpt": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "ReactiveFlux",
    "ValueError",
    "len",
    "max",
    "msmtools.analysis.committor",
    "msmtools.analysis.is_reversible",
    "msmtools.flux.flux_matrix",
    "msmtools.flux.to_netflux",
    "pyemma.util.types.ensure_ndarray"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.estimators": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators._OOM_MSM": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators._OOM_MSM.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyemma.msm.estimators._OOM_MSM._reshape_sparse": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "ValueError",
    "divmod",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._OOM_MSM._sort_by_norm": {
  "data": {
   "shadows": "pyemma.util.linalg._sort_by_norm"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._OOM_MSM.bootstrapping_count_matrix": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.mean",
    "numpy.random.multinomial",
    "numpy.reshape",
    "numpy.std",
    "numpy.zeros",
    "range",
    "scipy.linalg.svdvals"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._OOM_MSM.bootstrapping_dtrajs": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.choice",
    "numpy.std",
    "numpy.zeros",
    "pyemma.util.linalg.submatrix",
    "range",
    "scipy.linalg.svdvals"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._OOM_MSM.equilibrium_transition_matrix": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "msmtools.estimation.largest_connected_set",
    "msmtools.estimation.largest_connected_submatrix",
    "numpy.einsum",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._OOM_MSM.me": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._OOM_MSM.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._OOM_MSM.oom_components": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "float",
    "msmtools.estimation.largest_connected_submatrix",
    "numpy.abs",
    "numpy.diag",
    "numpy.dot",
    "numpy.finfo",
    "numpy.logical_and",
    "numpy.real",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "pyemma.msm.estimators._OOM_MSM._reshape_sparse",
    "pyemma.util.linalg._sort_by_norm",
    "range",
    "scipy.linalg.eig",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._OOM_MSM.rank_decision": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "pyemma.msm.estimators._OOM_MSM.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._OOM_MSM.scl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._OOM_MSM.submatrix": {
  "data": {
   "shadows": "pyemma.util.linalg.submatrix"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._OOM_MSM.twostep_count_matrix": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyemma.msm.estimators._dtraj_stats": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "object",
    "pyemma.util.annotators.aliased"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "msmtools.dtraj.count_states",
    "msmtools.estimation.number_of_states",
    "numpy.sum",
    "pyemma.util.types.ensure_dtraj_list"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats._assert_counted_at_lag": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats._assert_subset": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.size"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats._compute_connected_sets": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "msmtools.estimation.connected_sets",
    "numpy.where",
    "scipy.sparse.issparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.connected_set_sizes": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.connected_sets": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.count_lagged": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "msmtools.estimation.connected_sets",
    "msmtools.estimation.count_matrix",
    "msmtools.estimation.effective_count_matrix",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.object",
    "numpy.ones",
    "numpy.shape",
    "numpy.zeros",
    "pyemma._base.parallel.get_n_jobs",
    "pyemma._base.progress.ProgressReporter",
    "pyemma.util.contexts.nullcontext",
    "pyemma.util.linalg.submatrix",
    "pyemma.util.reflection.getargspec_no_self",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.count_matrix": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "pyemma.util.linalg.submatrix"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.count_matrix_largest": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.discrete_trajectories": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "property",
    "pyemma.util.annotators.alias"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.histogram": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "property",
    "pyemma.util.annotators.alias"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.histogram_lagged": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "pyemma.util.annotators.alias"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.lag": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.largest_connected_set": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.nstates": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.to_coreset": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "eval",
    "int",
    "numpy.array",
    "numpy.logical_not",
    "numpy.where",
    "pyemma.msm.estimators._dtraj_stats.copy",
    "to_ranges"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.to_coreset.to_ranges": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "len",
    "numpy.diff",
    "numpy.max",
    "numpy.min",
    "numpy.split",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.total_count": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.total_count_lagged": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.visited_set": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "property",
    "pyemma.util.discrete_trajectories.visited_set"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.__author__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyemma.msm.estimators._dtraj_stats.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "len",
    "min",
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.count_states": {
  "data": {
   "shadows": "msmtools.dtraj.count_states"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.cvsplit_dtrajs": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.random.choice",
    "set"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.ensure_dtraj_list": {
  "data": {
   "shadows": "pyemma.util.types.ensure_dtraj_list"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.get_n_jobs": {
  "data": {
   "shadows": "pyemma._base.parallel.get_n_jobs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.getargspec_no_self": {
  "data": {
   "shadows": "pyemma.util.reflection.getargspec_no_self"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.nullcontext": {
  "data": {
   "shadows": "pyemma.util.contexts.nullcontext"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.scs": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.submatrix": {
  "data": {
   "shadows": "pyemma.util.linalg.submatrix"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.visited_set": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.visited_set"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators._msm_estimator_base.ChapmanKolmogorovValidator": {
  "data": {
   "shadows": "pyemma.msm.estimators.ChapmanKolmogorovValidator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.MaximumLikelihoodHMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._DiscreteTrajectoryStats": {
  "data": {
   "shadows": "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSM": {
  "data": {
   "shadows": "pyemma.msm.MSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pyemma._base.estimator.Estimator",
    "pyemma.msm.MSM",
    "pyemma.util.annotators.aliased",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator._blocksplit_dtrajs": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator._check_is_estimated": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator._get_dtraj_stats": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.active_count_fraction": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "float",
    "numpy.sum",
    "property",
    "pyemma.util.discrete_trajectories.count_states"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.active_set": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.active_state_fraction": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.active_state_indexes": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "hasattr",
    "property",
    "pyemma.util.discrete_trajectories.index_states"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.cktest": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "pyemma.msm.estimators.ChapmanKolmogorovValidator"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.coarse_grain": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.connected_sets": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.connectivity": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.count_matrix_active": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.count_matrix_full": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.discrete_trajectories_active": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "property",
    "pyemma.util.annotators.alias"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.discrete_trajectories_full": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "property",
    "pyemma.util.annotators.alias"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.dt_traj": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "pyemma.util.units.TimeUnit"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.estimate": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pyemma.msm.estimators._msm_estimator_base._MSMEstimator",
    "pyemma.util.types.ensure_dtraj_list",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.generate_traj": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "msmtools.generation.generate_traj",
    "pyemma.util.discrete_trajectories.sample_indexes_by_sequence"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.hmm": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.lag": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.largest_connected_set": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.nstates_full": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.sample_by_distributions": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "pyemma.util.discrete_trajectories.sample_indexes_by_distribution"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.sample_by_state": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "pyemma.util.discrete_trajectories.sample_indexes_by_state"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.score": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "len",
    "msmtools.estimation.count_matrix",
    "numpy.arange",
    "numpy.diag",
    "numpy.ix_",
    "numpy.where",
    "numpy.zeros",
    "pyemma.util.metrics.vamp_score",
    "pyemma.util.types.ensure_dtraj_list",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.score_cv": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pyemma._ext.sklearn.base.clone",
    "pyemma.msm.estimators._dtraj_stats.cvsplit_dtrajs",
    "pyemma.util.types.ensure_dtraj_list",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.trajectory_weights": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "msmtools.dtraj.count_states",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.blocksplit_dtrajs": {
  "data": {
   "shadows": "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.clone": {
  "data": {
   "shadows": "pyemma._ext.sklearn.base.clone"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.count_states": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.count_states"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.cvsplit_dtrajs": {
  "data": {
   "shadows": "pyemma.msm.estimators._dtraj_stats.cvsplit_dtrajs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.dt": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.ensure_dtraj_list": {
  "data": {
   "shadows": "pyemma.util.types.ensure_dtraj_list"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.index_states": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.index_states"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.msmtraj": {
  "data": {
   "shadows": "msmtools.dtraj"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.sample_indexes_by_sequence": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.sample_indexes_by_sequence"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.vamp_score": {
  "data": {
   "shadows": "pyemma.util.metrics.vamp_score"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.augmented_msm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pyemma.msm.estimators.MaximumLikelihoodMSM",
    "pyemma.util.annotators.aliased",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.shape",
    "numpy.sqrt",
    "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._estimate": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "int",
    "len",
    "list",
    "msmtools.estimation.connected_sets",
    "msmtools.estimation.tmatrix",
    "numpy.abs",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.floor",
    "numpy.max",
    "numpy.min",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.shape",
    "numpy.size",
    "numpy.sum",
    "numpy.zeros",
    "pyemma.util.discrete_trajectories.index_states",
    "pyemma.util.statistics.confidence_interval",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._get_Rk": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "int",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._log_likelihood_biased": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "msmtools.estimation.log_likelihood",
    "numpy.sum",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._newton_lagrange": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "float",
    "numpy.any",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._update_G": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._update_Q": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._update_Rslices": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._update_S": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._update_X_and_pi": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._update_mhat": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._update_pihat": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel.hmm": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel.score": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.MaximumLikelihoodMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.MaximumLikelihoodMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.augmented_msm.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.augmented_msm.__author__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.augmented_msm._ci": {
  "data": {
   "shadows": "pyemma.util.statistics.confidence_interval"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.augmented_msm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.augmented_msm.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.augmented_msm.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.augmented_msm.index_states": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.index_states"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.augmented_msm.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pyemma._base.progress.ProgressReporterMixin",
    "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM",
    "pyemma.msm.models.hmsm_sampled.SampledHMSM",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM._estimate": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "NotImplementedError",
    "UserWarning",
    "all",
    "bhmm.bayesian_hmm",
    "bhmm.discrete_hmm",
    "bhmm.lag_observations",
    "getattr",
    "int",
    "len",
    "max",
    "min",
    "msmtools.estimation.is_connected",
    "msmtools.estimation.number_of_states",
    "numpy.arange",
    "numpy.array_equal",
    "numpy.concatenate",
    "numpy.float64",
    "numpy.maximum",
    "numpy.ones",
    "numpy.setxor1d",
    "pyemma.msm.estimate_markov_model",
    "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM",
    "pyemma.msm.models.hmsm.HMSM",
    "pyemma.util.types.ensure_dtraj_list",
    "pyemma.util.units.TimeUnit",
    "range",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM._estimate.call_back": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM.init_hmsm": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "issubclass",
    "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM.submodel": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "hasattr",
    "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.submodel"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_hmsm.ProgressReporterMixin": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporterMixin"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm._HMSM": {
  "data": {
   "shadows": "pyemma.msm.models.hmsm.HMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm._MaximumLikelihoodHMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm._SampledHMSM": {
  "data": {
   "shadows": "pyemma.msm.models.hmsm_sampled.SampledHMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.bayesian_hmsm._lag_observations": {
  "data": {
   "shadows": "bhmm.lag_observations"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm._number_of_states": {
  "data": {
   "shadows": "msmtools.estimation.number_of_states"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.bayesian_hmm": {
  "data": {
   "shadows": "bhmm.bayesian_hmm"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.discrete_hmm": {
  "data": {
   "shadows": "bhmm.discrete_hmm"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.ensure_dtraj_list": {
  "data": {
   "shadows": "pyemma.util.types.ensure_dtraj_list"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.estimate_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.bayesian_msm.BayesianMSM": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pyemma._base.parallel.NJobsMixIn",
    "pyemma._base.progress.ProgressReporterMixin",
    "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM",
    "pyemma.msm.models.msm_sampled.SampledMSM",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.estimators.bayesian_msm.BayesianMSM.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM.__init__"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_msm.BayesianMSM._estimate": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "int",
    "math.sqrt",
    "msmtools.estimation.tmatrix_sampler",
    "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM._estimate",
    "pyemma.msm.models.msm.MSM",
    "pyemma.util.types.ensure_dtraj_list",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_msm.BayesianMSM.estimate": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "pyemma.msm.estimators.bayesian_msm.BayesianMSM",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_msm._MLMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm._MSM": {
  "data": {
   "shadows": "pyemma.msm.models.msm.MSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm._NJobsMixIn": {
  "data": {
   "shadows": "pyemma._base.parallel.NJobsMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm._ProgressReporterMixin": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporterMixin"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm._SampledMSM": {
  "data": {
   "shadows": "pyemma.msm.models.msm_sampled.SampledMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm.__author__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.bayesian_msm.ensure_dtraj_list": {
  "data": {
   "shadows": "pyemma.util.types.ensure_dtraj_list"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm.tmatrix_sampler": {
  "data": {
   "shadows": "msmtools.estimation.tmatrix_sampler"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.implied_timescales.Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pyemma._base.estimator.Estimator",
    "pyemma._base.parallel.NJobsMixIn",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.util.annotators.aliased"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyemma._base.estimator.get_estimator"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales._estimate": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "dummy",
    "float",
    "hasattr",
    "int",
    "len",
    "list",
    "numpy.fromiter",
    "numpy.max",
    "numpy.sum",
    "numpy.where",
    "pyemma._base.estimator.estimate_param_scan",
    "pyemma._base.estimator.param_grid",
    "pyemma._base.progress.ProgressReporter",
    "pyemma.msm.estimators.implied_timescales._DummyModel",
    "pyemma.msm.estimators.implied_timescales._generate_lags",
    "pyemma.msm.estimators.implied_timescales._hash_dtrajs",
    "pyemma.util.types.ensure_dtraj_list",
    "set",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales._estimate.dummy": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales._estimator_produces_samples": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales._postprocess_results": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "_format_failed_models",
    "all",
    "check",
    "enumerate",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.NAN",
    "numpy.any",
    "numpy.array",
    "numpy.empty",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.shape",
    "numpy.vstack",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales._postprocess_results._format_failed_models": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "pprint.pformat"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.estimate": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pyemma.msm.estimators.implied_timescales.ImpliedTimescales",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.estimators": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "RuntimeError",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.fraction_of_frames": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "enumerate",
    "hasattr",
    "numpy.argwhere",
    "numpy.zeros_like",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.get_sample_conf": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "RuntimeError",
    "pyemma.util.statistics.confidence_interval"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.get_sample_mean": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.get_sample_std": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.get_timescales": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.lags": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "frozenset",
    "hasattr",
    "len",
    "numpy.arange",
    "numpy.array",
    "pyemma.msm.estimators.implied_timescales._generate_lags",
    "pyemma.util.types.ensure_int_vector_or_None",
    "pyemma.util.types.is_int",
    "set"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.models": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "RuntimeError",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.nits": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.sample_mean": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.sample_std": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.samples_available": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.timescales": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.NJobsMixIn": {
  "data": {
   "shadows": "pyemma._base.parallel.NJobsMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.SampledModel": {
  "data": {
   "shadows": "pyemma._base.model.SampledModel"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales._DummyModel": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.estimators.implied_timescales._DummyModel.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales._DummyModel.sample_f": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales._DummyModel.timescales": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.__all__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.implied_timescales.__docformat__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.implied_timescales._generate_lags": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "pyemma.msm.estimators.implied_timescales.decimal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales._hash_dtrajs": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyemma.util.numeric._hash_numpy_array"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales._hash_numpy_array": {
  "data": {
   "shadows": "pyemma.util.numeric._hash_numpy_array"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.confidence_interval": {
  "data": {
   "shadows": "pyemma.util.statistics.confidence_interval"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.estimate_param_scan": {
  "data": {
   "shadows": "pyemma._base.estimator.estimate_param_scan"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.get_estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.get_estimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.param_grid": {
  "data": {
   "shadows": "pyemma._base.estimator.param_grid"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.pformat": {
  "data": {
   "shadows": "pprint.pformat"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.lagged_model_validators.ChapmanKolmogorovValidator": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.estimators.lagged_model_validators.ChapmanKolmogorovValidator.__init__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.ChapmanKolmogorovValidator._compute_observables": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.ChapmanKolmogorovValidator._compute_observables_conf": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.eye",
    "numpy.float",
    "numpy.fromiter",
    "numpy.zeros",
    "pyemma.util.statistics.confidence_interval",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.ChapmanKolmogorovValidator.memberships": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.ones",
    "pyemma.util.types.ensure_ndarray"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.ChapmanKolmogorovValidator.test_estimator": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.array",
    "numpy.max",
    "numpy.zeros",
    "pyemma.util.types.ensure_ndarray"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.ChapmanKolmogorovValidator.test_model": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.EigenvalueDecayValidator": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.estimators.lagged_model_validators.EigenvalueDecayValidator.__init__": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.EigenvalueDecayValidator._compute_observables": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.EigenvalueDecayValidator._compute_observables_conf": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "numpy.power",
    "pyemma.util.statistics.confidence_interval",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyemma._base.estimator.Estimator",
    "pyemma._base.parallel.NJobsMixIn",
    "pyemma._base.progress.ProgressReporterMixin",
    "pyemma._base.serialization.serialization.Modifications",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.msm.estimators.lagged_model_validators._serial_fix_lagged_model_validatior_version_1"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "copy.deepcopy",
    "int",
    "issubclass",
    "len",
    "numpy.any",
    "numpy.arange",
    "numpy.max",
    "numpy.where",
    "pyemma._base.model.SampledModel",
    "pyemma.msm.estimators.lagged_model_validators.math",
    "pyemma.util.types.ensure_ndarray",
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.__setstate__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "KeyError",
    "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator._compute_observables": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator._compute_observables_conf": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator._estimate": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "list",
    "numpy.array",
    "pyemma._base.estimator.estimate_param_scan",
    "pyemma._base.estimator.param_grid",
    "pyemma._base.model.SampledModel"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.estimates": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.estimates_conf": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.lagtimes": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.predictions": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.predictions_conf": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.Modifications": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.Modifications"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.NJobsMixIn": {
  "data": {
   "shadows": "pyemma._base.parallel.NJobsMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.ProgressReporterMixin": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporterMixin"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.SampledModel": {
  "data": {
   "shadows": "pyemma._base.model.SampledModel"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.__author__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.lagged_model_validators._serial_fix_lagged_model_validatior_version_1": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "issubclass",
    "pyemma._base.model.SampledModel"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.confidence_interval": {
  "data": {
   "shadows": "pyemma.util.statistics.confidence_interval"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.estimate_param_scan": {
  "data": {
   "shadows": "pyemma._base.estimator.estimate_param_scan"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.param_grid": {
  "data": {
   "shadows": "pyemma._base.estimator.param_grid"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.ChapmanKolmogorovValidator": {
  "data": {
   "shadows": "pyemma.msm.estimators.ChapmanKolmogorovValidator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.ImaginaryEigenValueWarning": {
  "data": {
   "shadows": "msmtools.util.exceptions.ImaginaryEigenValueWarning"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyemma._base.estimator.Estimator",
    "pyemma.msm.models.hmsm.HMSM",
    "pyemma.util.annotators.aliased",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM._estimate": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "bhmm.estimators.maximum_likelihood.MaximumLikelihoodEstimator",
    "bhmm.init.discrete.init_discrete_hmm_spectral",
    "bhmm.init_discrete_hmm",
    "int",
    "isinstance",
    "max",
    "min",
    "msmtools.estimation.number_of_states",
    "msmtools.util.exceptions.ImaginaryEigenValueWarning",
    "numpy.arange",
    "numpy.max",
    "numpy.mean",
    "numpy.size",
    "pyemma.msm.estimate_markov_model",
    "pyemma.msm.estimators.MaximumLikelihoodMSM",
    "pyemma.msm.estimators.OOMReweightedMSM",
    "pyemma.msm.estimators.maximum_likelihood_hmsm.bhmm",
    "pyemma.msm.estimators.maximum_likelihood_hmsm.warnings",
    "pyemma.util.types.ensure_dtraj_list",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.active_set": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "hasattr",
    "numpy.arange",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.cktest": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "numpy.eye",
    "pyemma.msm.estimators.ChapmanKolmogorovValidator"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.discrete_trajectories_full": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "property",
    "pyemma.util.annotators.alias"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.discrete_trajectories_lagged": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "property",
    "pyemma.util.annotators.alias"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.discrete_trajectories_obs": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "property",
    "pyemma.util.annotators.alias"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.dt_traj": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pyemma.util.units.TimeUnit"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.lagtime": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.msm_init": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pyemma.msm.estimators.MaximumLikelihoodMSM",
    "pyemma.msm.estimators.OOMReweightedMSM"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.nstates": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.nstates_obs": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.observable_set": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.observable_state_indexes": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "AttributeError",
    "property",
    "pyemma.util.discrete_trajectories.index_states"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.sample_by_observation_probabilities": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "pyemma.util.discrete_trajectories.sample_indexes_by_distribution"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.submodel": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "bhmm.estimators._tmatrix_disconnected.connected_sets",
    "bhmm.estimators._tmatrix_disconnected.estimate_P",
    "bhmm.estimators._tmatrix_disconnected.stationary_distribution",
    "copy.deepcopy",
    "float",
    "int",
    "isinstance",
    "len",
    "msmtools.estimation.count_states",
    "numpy.arange",
    "numpy.argmax",
    "numpy.array",
    "numpy.ix_",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.submodel_disconnect": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.submodel_largest": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.submodel_populous": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.trajectory_weights": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "msmtools.dtraj.count_states",
    "numpy.append",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.MaximumLikelihoodMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.OOMReweightedMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.OOMReweightedMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm._Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm._HMSM": {
  "data": {
   "shadows": "pyemma.msm.models.hmsm.HMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm._MaximumLikelihoodEstimator": {
  "data": {
   "shadows": "bhmm.estimators.maximum_likelihood.MaximumLikelihoodEstimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm._tmatrix_disconnected": {
  "data": {
   "shadows": "bhmm.estimators._tmatrix_disconnected"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.bhmm": {
  "data": {
   "shadows": "bhmm"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.dt": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.estimate_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.init_discrete_hmm": {
  "data": {
   "shadows": "bhmm.init_discrete_hmm"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.init_discrete_hmm_spectral": {
  "data": {
   "shadows": "bhmm.init.discrete.init_discrete_hmm_spectral"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.msmtraj": {
  "data": {
   "shadows": "msmtools.dtraj"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyemma.msm.estimators._msm_estimator_base._MSMEstimator",
    "pyemma.util.annotators.aliased",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM",
    "pyemma.util.types.ensure_ndarray_or_None",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM._estimate": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "ValueError",
    "int",
    "isinstance",
    "len",
    "msmtools.estimation.is_connected",
    "msmtools.estimation.transition_matrix",
    "numpy.arange",
    "numpy.ones",
    "numpy.size",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM._prepare_input_revpi": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "msmtools.estimation.connected_cmatrix",
    "msmtools.estimation.largest_connected_set",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM.effective_count_matrix": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "msmtools.estimation.effective_count_matrix",
    "property",
    "pyemma.util.linalg.submatrix"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm._MSMEstimator": {
  "data": {
   "shadows": "pyemma.msm.estimators._msm_estimator_base._MSMEstimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.submatrix": {
  "data": {
   "shadows": "pyemma.util.linalg.submatrix"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyemma.msm.estimators._msm_estimator_base._MSMEstimator",
    "pyemma.util.annotators.aliased",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM.OOM_components": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM.OOM_omega": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM.OOM_rank": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM.OOM_sigma": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM._blocksplit_dtrajs": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "NotImplementedError",
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM._estimate": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "int",
    "len",
    "msmtools.estimation.connected_sets",
    "msmtools.estimation.effective_count_matrix",
    "numpy.arange",
    "numpy.ones",
    "numpy.size",
    "pyemma.msm.estimators._OOM_MSM.bootstrapping_count_matrix",
    "pyemma.msm.estimators._OOM_MSM.bootstrapping_dtrajs",
    "pyemma.msm.estimators._OOM_MSM.equilibrium_transition_matrix",
    "pyemma.msm.estimators._OOM_MSM.oom_components",
    "pyemma.msm.estimators._OOM_MSM.rank_decision",
    "pyemma.msm.estimators._OOM_MSM.twostep_count_matrix",
    "pyemma.msm.estimators.oom_reweighted_msm.warnings",
    "pyemma.util.linalg.submatrix"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM.eigenvalues_OOM": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM.timescales_OOM": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.log",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm._MSMEstimator": {
  "data": {
   "shadows": "pyemma.msm.estimators._msm_estimator_base._MSMEstimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.__author__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.oom_reweighted_msm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.bootstrapping_count_matrix": {
  "data": {
   "shadows": "pyemma.msm.estimators._OOM_MSM.bootstrapping_count_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.bootstrapping_dtrajs": {
  "data": {
   "shadows": "pyemma.msm.estimators._OOM_MSM.bootstrapping_dtrajs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.equilibrium_transition_matrix": {
  "data": {
   "shadows": "pyemma.msm.estimators._OOM_MSM.equilibrium_transition_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.oom_components": {
  "data": {
   "shadows": "pyemma.msm.estimators._OOM_MSM.oom_components"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.rank_decision": {
  "data": {
   "shadows": "pyemma.msm.estimators._OOM_MSM.rank_decision"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.submatrix": {
  "data": {
   "shadows": "pyemma.util.linalg.submatrix"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.twostep_count_matrix": {
  "data": {
   "shadows": "pyemma.msm.estimators._OOM_MSM.twostep_count_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.models": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.models.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyemma.msm.models.hmsm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.models.hmsm.HMSM": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma.msm.models.msm.MSM",
    "pyemma.util.annotators.fix_docs"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.models.hmsm.HMSM.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyemma.msm.models.msm.MSM.__init__"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.correlation": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.dot",
    "pyemma.msm.models.msm.MSM.correlation",
    "pyemma.util.types.ensure_ndarray",
    "pyemma.util.types.ensure_ndarray_or_None"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.eigenvectors_left_obs": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.dot",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.eigenvectors_right_obs": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.dot",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.expectation": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.dot",
    "pyemma.msm.models.msm.MSM.expectation",
    "pyemma.util.types.ensure_float_vector"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.fingerprint_correlation": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.dot",
    "pyemma.msm.models.msm.MSM.fingerprint_correlation",
    "pyemma.util.types.ensure_ndarray",
    "pyemma.util.types.ensure_ndarray_or_None"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.fingerprint_relaxation": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.dot",
    "pyemma.msm.models.msm.MSM.fingerprint_relaxation",
    "pyemma.util.types.ensure_ndarray"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.lifetimes": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.log",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.metastable_assignments": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.argmax",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.metastable_distributions": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.metastable_memberships": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.nonzero",
    "numpy.transpose",
    "numpy.zeros",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.metastable_sets": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.where",
    "property",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.nstates_obs": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.observation_probabilities": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.pcca": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.propagate": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "len",
    "numpy.diag",
    "numpy.dot",
    "numpy.power",
    "pyemma.util.linalg.mdot",
    "pyemma.util.types.ensure_ndarray",
    "pyemma.util.types.is_int"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.relaxation": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.dot",
    "pyemma.msm.models.msm.MSM.relaxation",
    "pyemma.util.types.ensure_ndarray"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.set_model_params": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.msm.models.msm.MSM.set_model_params",
    "pyemma.util.types.is_float_matrix"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.simulate": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "msmtools.generation.generate_traj",
    "numpy.arange",
    "numpy.zeros",
    "scipy.stats.rv_discrete"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.stationary_distribution_obs": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.dot",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.submodel": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ix_",
    "pyemma.msm.models.hmsm.HMSM"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.transition_matrix_obs": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.matrix_power"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm._MSM": {
  "data": {
   "shadows": "pyemma.msm.models.msm.MSM"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm.mdot": {
  "data": {
   "shadows": "pyemma.util.linalg.mdot"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm.msmgen": {
  "data": {
   "shadows": "msmtools.generation"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm_sampled": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.models.hmsm_sampled.SampledHMSM": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pyemma._base.model.SampledModel",
    "pyemma.msm.models.hmsm.HMSM"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.models.hmsm_sampled.SampledHMSM.set_model_params": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyemma._base.model.SampledModel.set_model_params",
    "pyemma.msm.models.hmsm.HMSM.set_model_params"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm_sampled.SampledHMSM.submodel": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyemma.msm.models.hmsm_sampled.SampledHMSM",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm_sampled._HMSM": {
  "data": {
   "shadows": "pyemma.msm.models.hmsm.HMSM"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm_sampled._SampledModel": {
  "data": {
   "shadows": "pyemma._base.model.SampledModel"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm_sampled.is_iterable": {
  "data": {
   "shadows": "pyemma.util.types.is_iterable"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.models.msm.MSM": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pyemma._base.model.Model",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.util.annotators.aliased"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.models.msm.MSM.P": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "msmtools.analysis.is_reversible",
    "msmtools.analysis.is_transition_matrix",
    "numpy.shape",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.__eq__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "id",
    "isinstance",
    "numpy.allclose",
    "pyemma.msm.models.msm.MSM"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.__init__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._assert_in_active": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._assert_metastable": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._committor_backward": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "msmtools.analysis.committor"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._committor_forward": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "msmtools.analysis.committor"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._compute_eigendecomposition": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "msmtools.analysis.rdl_decomposition",
    "numpy.all",
    "numpy.diag",
    "numpy.real",
    "pyemma.util.numeric._hash_numpy_array"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._compute_eigenvalues": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "msmtools.analysis.eigenvalues",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._ensure_eigendecomposition": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "AttributeError",
    "pyemma.util.numeric._hash_numpy_array"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._ensure_eigenvalues": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "AttributeError",
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._mfpt": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "msmtools.analysis.mfpt"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.committor_backward": {
  "data": {
   "lineno": 554
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.committor_forward": {
  "data": {
   "lineno": 536
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.correlation": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "float",
    "int",
    "math.ceil",
    "msmtools.analysis.correlation",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.dt_model": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "pyemma.util.units.TimeUnit"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.eigenvalues": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.eigenvectors_left": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.eigenvectors_right": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.expectation": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "numpy.dot",
    "pyemma.util.types.ensure_ndarray"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.fingerprint_correlation": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "msmtools.analysis.fingerprint_correlation"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.fingerprint_relaxation": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "msmtools.analysis.fingerprint_relaxation"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.metastable_assignments": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.metastable_distributions": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.metastable_memberships": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.metastable_sets": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.mfpt": {
  "data": {
   "lineno": 518
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.n_metastable": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.neig": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.nstates": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.pcca": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "int",
    "pyemma.msm.models.msm.copy",
    "pyemma.msm.models.pcca.PCCA"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.pi": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "msmtools.analysis.stationary_distribution",
    "numpy.sum",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.propagate": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.power",
    "pyemma.util.linalg.mdot",
    "pyemma.util.types.ensure_ndarray",
    "pyemma.util.types.is_int",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.relaxation": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "float",
    "int",
    "list",
    "math.ceil",
    "msmtools.analysis.relaxation",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.reversible": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.set_model_params": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.simulate": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "msmtools.generation.generate_traj"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.sparse": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.timescales": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "msmtools.analysis.dense.decomposition.timescales_from_eigenvalues"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.timestep_model": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.PCCA": {
  "data": {
   "shadows": "pyemma.msm.models.pcca.PCCA"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.__committor": {
  "data": {
   "shadows": "msmtools.analysis.committor"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.__docformat__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.msm.models.msm.__mfpt": {
  "data": {
   "shadows": "msmtools.analysis.mfpt"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._correlation": {
  "data": {
   "shadows": "msmtools.analysis.correlation"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._fc": {
  "data": {
   "shadows": "msmtools.analysis.fingerprint_correlation"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._fr": {
  "data": {
   "shadows": "msmtools.analysis.fingerprint_relaxation"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._hash_numpy_array": {
  "data": {
   "shadows": "pyemma.util.numeric._hash_numpy_array"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._relaxation": {
  "data": {
   "shadows": "msmtools.analysis.relaxation"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._statdist": {
  "data": {
   "shadows": "msmtools.analysis.stationary_distribution"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._timescales": {
  "data": {
   "shadows": "msmtools.analysis.dense.decomposition.timescales_from_eigenvalues"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.anaeig": {
  "data": {
   "shadows": "msmtools.analysis.eigenvalues"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.mdot": {
  "data": {
   "shadows": "pyemma.util.linalg.mdot"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.msmgen": {
  "data": {
   "shadows": "msmtools.generation"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.rdl_decomposition": {
  "data": {
   "shadows": "msmtools.analysis.rdl_decomposition"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm_sampled": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.models.msm_sampled.MSM": {
  "data": {
   "shadows": "pyemma.msm.models.msm.MSM"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm_sampled.SampledMSM": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pyemma._base.model.SampledModel",
    "pyemma.msm.models.msm.MSM"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.models.msm_sampled.SampledMSM.set_model_params": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pyemma._base.model.SampledModel.set_model_params",
    "pyemma.msm.models.msm.MSM.set_model_params"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.msm_sampled.SampledModel": {
  "data": {
   "shadows": "pyemma._base.model.SampledModel"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm_sampled.__author__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pyemma.msm.models.pcca": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.models.pcca.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.msm.models.pcca.PCCA": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pyemma._base.model.Model",
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.models.pcca.PCCA.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.coarse_grained_stationary_probability": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.coarse_grained_transition_matrix": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.memberships": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.metastable_assignment": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.argmax",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.metastable_sets": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.where",
    "property",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.n_metastable": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.output_probabilities": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.set_model_params": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "msmtools.analysis.dense.pcca.pcca",
    "msmtools.analysis.stationary_distribution",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.inv",
    "pyemma.msm.models.pcca.warnings",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.stationary_probability": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.transition_matrix": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.models.pcca.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pyemma.msm.models.pcca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.models.pcca.pcca": {
  "data": {
   "shadows": "msmtools.analysis.dense.pcca.pcca"
  },
  "type": "import"
 },
 "pyemma.msm.models.pcca.stationary_distribution": {
  "data": {
   "shadows": "msmtools.analysis.stationary_distribution"
  },
  "type": "import"
 },
 "pyemma.msm.models.pcca.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.models.reactive_flux.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma._base.model.Model",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.util.annotators.aliased"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.A": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.B": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.I": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "list",
    "property",
    "pyemma._ext.orderedset.OrderedSet",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "msmtools.flux"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux._compute_coarse_sets": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "len",
    "list",
    "pyemma._ext.orderedset.OrderedSet",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux._pathways_to_flux": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.max",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.backward_committor": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "property",
    "pyemma.util.annotators.alias"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.coarse_grain": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "len",
    "list",
    "msmtools.flux.coarsegrain",
    "msmtools.flux.to_netflux",
    "numpy.dot",
    "numpy.sum",
    "numpy.zeros",
    "pyemma.msm.models.reactive_flux.ReactiveFlux",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.committor": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "property",
    "pyemma.util.annotators.alias"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.dt_model": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pyemma.util.units.TimeUnit"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.flux": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.gross_flux": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.major_flux": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.mfpt": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.net_flux": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.nstates": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.shape",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.pathways": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "msmtools.flux.pathways"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.rate": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.set_model_params": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "msmtools.flux",
    "msmtools.flux.rate",
    "msmtools.flux.total_flux"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.stationary_distribution": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.total_flux": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.msm.models.reactive_flux.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux.set": {
  "data": {
   "shadows": "pyemma._ext.orderedset.OrderedSet"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux.tptapi": {
  "data": {
   "shadows": "msmtools.flux"
  },
  "type": "import"
 },
 "pyemma.msm.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.tests.birth_death_chain": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.committor_backward": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.committor_forward": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.cumprod",
    "numpy.cumsum",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.flux": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.diag_indices",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.netflux": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.rate": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.stationary_distribution": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.cumprod",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.totalflux": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.transition_matrix": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.transition_matrix_sparse": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "scipy.sparse.diags"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.diags": {
  "data": {
   "shadows": "scipy.sparse.diags"
  },
  "type": "import"
 },
 "pyemma.msm.tests.birth_death_chain.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.msm.tests.test_amm.unittest",
    "pyemma.msm.tests.test_msm.TestMSMDoubleWell"
   ]
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_amm.AugmentedMarkovModel": {
  "data": {
   "shadows": "pyemma.msm.estimators.AugmentedMarkovModel"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.BirthDeathChain": {
  "data": {
   "shadows": "pyemma.msm.tests.birth_death_chain.BirthDeathChain"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_msm.TestMSMDoubleWell"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell._expectation": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "list",
    "numpy.abs",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell._mfpt": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell._relaxation": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.allclose",
    "numpy.shape",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell._timescales": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.isreal",
    "numpy.testing.assert_almost_equal",
    "pyemma.msm.tests.test_amm.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.setUpClass": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "classmethod",
    "list",
    "numpy.array",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sqrt",
    "pyemma.msm.estimate_augmented_markov_model",
    "set"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_active_count_fraction": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_active_set": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_active_state_fraction": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_active_state_indexes": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_committor": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_connected_sets": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_connectivity": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_correlation": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_count_matrix_active": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_count_matrix_full": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_discrete_trajectories_active": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_discrete_trajectories_full": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_dt_model": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_effective_count_matrix": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_eigenvalues": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_eigenvectors_RDL": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_eigenvectors_left": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_eigenvectors_right": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_expectation": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_fingerprint_correlation": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_fingerprint_relaxation": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_generate_traj": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_lagtime": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_largest_connected_set": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_mfpt": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_nstates": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_pcca_assignment": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_pcca_distributions": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_pcca_memberships": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_pcca_sets": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_relaxation": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_reversible": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_sample_by_state": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_score": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_score_cv": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_serialize": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.msm.tests.test_amm.os",
    "pyemma.msm.tests.test_amm.pyemma",
    "pyemma.msm.tests.test_amm.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_simulate_MSM": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_sparse": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_statdist": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_timescales": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_timestep": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_trajectory_weights": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_transition_matrix": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_two_state_kinetics": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMSimple": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_amm.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_amm.TestAMMSimple.setUp": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "msmtools.generation.generate_traj",
    "numpy.array",
    "numpy.linspace",
    "numpy.random.mtrand.get_state",
    "numpy.random.mtrand.seed",
    "numpy.sqrt",
    "numpy.vstack",
    "numpy.zeros",
    "pyemma.msm.estimators.AugmentedMarkovModel",
    "pyemma.msm.tests.birth_death_chain.BirthDeathChain"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMSimple.tearDown": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.random.mtrand.set_state"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMSimple.test_AMM": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.msm.estimate_augmented_markov_model",
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm._tmsm": {
  "data": {
   "shadows": "pyemma.msm.tests.test_msm.TestMSMDoubleWell"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.assert_allclose": {
  "data": {
   "shadows": "pyemma.util.numeric.assert_allclose"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.estimate_augmented_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_augmented_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.msm.tests.test_bayesian_hmsm.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_bayesian_hmsm.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._eigenvalues_samples": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isclose",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._eigenvalues_stats": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array_equal",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._eigenvectors_left_samples": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.shape",
    "numpy.sign",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._eigenvectors_left_stats": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array_equal",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._eigenvectors_right_samples": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.shape",
    "numpy.sign",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._eigenvectors_right_stats": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array_equal",
    "numpy.sign",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._lag": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._lifetimes_samples": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array_equal",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._lifetimes_stats": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._nstates": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._reversible": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._stationary_distribution_samples": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array_equal",
    "numpy.isclose",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._stationary_distribution_stats": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.array_equal",
    "numpy.isclose",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._timescales_samples": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.shape",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._timescales_stats": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._transition_matrix_samples": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "msmtools.analysis.is_reversible",
    "msmtools.analysis.is_transition_matrix",
    "numpy.array_equal",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._transition_matrix_stats": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "msmtools.analysis.is_transition_matrix",
    "numpy.all",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.setUpClass": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.msm.bayesian_hidden_markov_model",
    "pyemma.msm.tests.test_bayesian_hmsm.bhmm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_eigenvalues_samples": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_eigenvalues_stats": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_eigenvectors_left_samples": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_eigenvectors_left_stats": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_eigenvectors_right_samples": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_eigenvectors_right_stats": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_lag": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_lifetimes_samples": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_lifetimes_stats": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_nstates": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_reversible": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_stationary_distribution_samples": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_stationary_distribution_stats": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_submodel_simple": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "copy.deepcopy",
    "pyemma.msm.bayesian_hidden_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_timescales_samples": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_timescales_stats": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_transition_matrix_samples": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_transition_matrix_stats": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMMSpecialCases": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_bayesian_hmsm.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMMSpecialCases.test_initialized_bhmm": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.copy",
    "numpy.isclose",
    "numpy.min",
    "pyemma.msm.tests.test_bayesian_hmsm.pyemma.datasets"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMMSpecialCases.test_initialized_bhmm_newstride": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "numpy.isclose",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMMSpecialCases.test_separate_states": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyemma.msm.bayesian_hidden_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.bayesian_hidden_markov_model": {
  "data": {
   "shadows": "pyemma.msm.bayesian_hidden_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.bhmm": {
  "data": {
   "shadows": "bhmm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.d": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.pyemma.msm": {
  "data": {
   "shadows": "pyemma.msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_msm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.msm.tests.test_bayesian_msm.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_bayesian_msm.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._eigenvalues_samples": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isclose",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._eigenvalues_stats": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array_equal",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._eigenvectors_left_samples": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.shape",
    "numpy.sign",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._eigenvectors_left_stats": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array_equal",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._eigenvectors_right_samples": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.shape",
    "numpy.sign",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._eigenvectors_right_stats": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array_equal",
    "numpy.sign",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._lag": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._nstates": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._reversible": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._stationary_distribution_samples": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array_equal",
    "numpy.isclose",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._stationary_distribution_stats": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.array_equal",
    "numpy.isclose",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._timescales_samples": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.shape",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._timescales_stats": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._transition_matrix_samples": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "AssertionError",
    "msmtools.analysis.is_reversible",
    "msmtools.analysis.is_transition_matrix",
    "msmtools.analysis.stationary_distribution",
    "numpy.array_equal",
    "numpy.newaxis",
    "numpy.shape",
    "numpy.testing.assert_allclose",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._transition_matrix_stats": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "msmtools.analysis.is_transition_matrix",
    "numpy.all",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.setUpClass": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "numpy.zeros",
    "pyemma.msm.bayesian_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_dt_model": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "pyemma.util.units.TimeUnit"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_eigenvalues_samples": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_eigenvalues_stats": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_eigenvectors_left_samples": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_eigenvectors_left_stats": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_eigenvectors_right_samples": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_eigenvectors_right_stats": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_lag": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_nstates": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_reversible": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_stationary_distribution_samples": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_stationary_distribution_stats": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_timescales_samples": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_timescales_stats": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_transition_matrix_samples": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_transition_matrix_stats": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_msm.bayesian_markov_model": {
  "data": {
   "shadows": "pyemma.msm.bayesian_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_msm.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_msm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_msm.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_msm.stationary_distribution": {
  "data": {
   "shadows": "msmtools.analysis.stationary_distribution"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_msm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.msm.tests.test_cktest.sys",
    "pyemma.msm.tests.test_cktest.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_cktest.BirthDeathChain": {
  "data": {
   "shadows": "pyemma.msm.tests.birth_death_chain.BirthDeathChain"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.TestCK_AllEstimators": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_cktest.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_cktest.TestCK_AllEstimators.setUpClass": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "classmethod",
    "pyemma.msm.tests.test_cktest.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_AllEstimators.tearDown": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "hasattr",
    "pyemma.msm.tests.test_cktest.py3",
    "pyemma.msm.tests.test_cktest.pyemma",
    "pyemma.msm.tests.test_cktest.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_AllEstimators.test_ck_msm": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyemma.msm.estimate_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_AllEstimators.test_its_bhmm": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyemma.msm.bayesian_hidden_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_AllEstimators.test_its_bmsm": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyemma.msm.bayesian_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_AllEstimators.test_its_hmsm": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyemma.msm.estimate_hidden_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_MSM": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_cktest.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_cktest.TestCK_MSM.setUp": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "msmtools.estimation.count_matrix",
    "msmtools.estimation.largest_connected_set",
    "msmtools.estimation.largest_connected_submatrix",
    "msmtools.estimation.transition_matrix",
    "msmtools.generation.generate_traj",
    "numpy.dot",
    "numpy.random.mtrand.get_state",
    "numpy.random.mtrand.seed",
    "numpy.sqrt",
    "numpy.zeros",
    "pyemma.msm.estimate_markov_model",
    "pyemma.msm.tests.birth_death_chain.BirthDeathChain",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_MSM.tearDown": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.random.mtrand.set_state"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_MSM.test_cktest_njobs_1": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.vstack",
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_MSM.test_cktest_njobs_2": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.vstack",
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_MSM.test_cktest_njobs_3": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.vstack",
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.assert_allclose": {
  "data": {
   "shadows": "pyemma.util.numeric.assert_allclose"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.count_matrix": {
  "data": {
   "shadows": "msmtools.estimation.count_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.estimate_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.largest_connected_set": {
  "data": {
   "shadows": "msmtools.estimation.largest_connected_set"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.largest_connected_submatrix": {
  "data": {
   "shadows": "msmtools.estimation.largest_connected_submatrix"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.msm": {
  "data": {
   "shadows": "pyemma.msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.on_win": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyemma.msm.tests.test_cktest.py3": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyemma.msm.tests.test_cktest.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.transition_matrix": {
  "data": {
   "shadows": "msmtools.estimation.transition_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.msm.tests.test_dtraj_stats.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_dtraj_stats.DiscreteTrajectoryStats": {
  "data": {
   "shadows": "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_dtraj_stats.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_blocksplit_dtrajs_cvsplit": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs",
    "pyemma.msm.estimators._dtraj_stats.cvsplit_dtrajs",
    "pyemma.util.types.ensure_dtraj_list",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_blocksplit_dtrajs_sampling": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs",
    "pyemma.msm.tests.test_dtraj_stats.msmtools",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_blocksplit_dtrajs_sliding": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs",
    "pyemma.msm.tests.test_dtraj_stats.msmtools",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_core_sets": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_equal",
    "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_core_sets_2": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_equal",
    "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_core_sets_3": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_equal",
    "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_core_sets_4": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_core_sets_5": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones_like",
    "numpy.testing.assert_equal",
    "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_mincount_connectivity": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_realistic_random": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "naive",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_realistic_random.naive": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "numpy.array",
    "print",
    "pyemma.msm.tests.test_dtraj_stats.copy"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.blocksplit_dtrajs": {
  "data": {
   "shadows": "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats.cvsplit_dtrajs": {
  "data": {
   "shadows": "pyemma.msm.estimators._dtraj_stats.cvsplit_dtrajs"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats.ensure_dtraj_list": {
  "data": {
   "shadows": "pyemma.util.types.ensure_dtraj_list"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats.msmtools": {
  "data": {
   "shadows": "msmtools"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.tests.test_estimator.BayesianMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.BayesianMSM"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.MaximumLikelihoodMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.MaximumLikelihoodMSM"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_estimator.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_evaluate_bmsm_single_arg": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "list",
    "pyemma._base.estimator.estimate_param_scan",
    "pyemma._base.estimator.param_grid",
    "pyemma.msm.estimators.BayesianMSM"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_evaluate_msm": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "list",
    "pyemma._base.estimator.estimate_param_scan",
    "pyemma._base.estimator.param_grid",
    "pyemma.msm.estimators.MaximumLikelihoodMSM"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_evaluate_msm_multi_arg": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "all",
    "len",
    "list",
    "pyemma._base.estimator.estimate_param_scan",
    "pyemma._base.estimator.param_grid",
    "pyemma.msm.estimators.MaximumLikelihoodMSM"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_failfast_false": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pyemma.msm.estimate_hidden_markov_model",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_failfast_false.worker_wrapper": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "functools.wraps",
    "list",
    "pyemma._base.estimator._estimate_param_scan_worker"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_failfast_true": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyemma.msm.estimate_hidden_markov_model",
    "pyemma.msm.tests.test_estimator.os",
    "pyemma.msm.tests.test_estimator.unittest",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_failfast_true.worker_wrapper": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "functools.wraps",
    "list",
    "pyemma._base.estimator._estimate_param_scan_worker"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_keyboard_interrupt": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "pyemma._base.estimator.estimate_param_scan"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_keyboard_interrupt.sleeping_estimator": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pyemma._base.estimator.Estimator"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_keyboard_interrupt.sleeping_estimator.__init__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_keyboard_interrupt.sleeping_estimator._estimate": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "pyemma.msm.tests.test_estimator.time"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator._estimate_param_scan_worker": {
  "data": {
   "shadows": "pyemma._base.estimator._estimate_param_scan_worker"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.estimate_param_scan": {
  "data": {
   "shadows": "pyemma._base.estimator.estimate_param_scan"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.msm": {
  "data": {
   "shadows": "pyemma.msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.param_grid": {
  "data": {
   "shadows": "pyemma._base.estimator.param_grid"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.msm.tests.test_hmsm.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_hmsm.MaximumLikelihoodHMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.TestHMMSpecialCases": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_hmsm.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_hmsm.TestHMMSpecialCases.test_separate_states": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyemma.msm.estimate_hidden_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_hmsm.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.setUpClass": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "classmethod",
    "numpy.min",
    "pyemma.msm.estimate_hidden_markov_model",
    "pyemma.msm.estimate_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_cktest_simple": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pyemma.msm.estimate_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_committor": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_correlation": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "len",
    "list",
    "numpy.allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_dt_model": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "pyemma.util.units.TimeUnit"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_eigenvalues": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "len",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_eigenvectors_left": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_eigenvectors_left_obs": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.allclose",
    "numpy.array_equal",
    "numpy.isreal",
    "numpy.max",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_eigenvectors_right": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.array_equal",
    "numpy.isclose",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_eigenvectors_right_obs": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "numpy.array_equal",
    "numpy.isreal",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_expectation": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.abs",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_fingerprint_correlation": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "list",
    "numpy.all",
    "numpy.allclose",
    "numpy.inf",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_fingerprint_relaxation": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "list",
    "numpy.abs",
    "numpy.allclose",
    "numpy.inf",
    "numpy.max",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_hmm_type": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_lag": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_metastable_assignment": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_metastable_distributions": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_metastable_memberships": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "numpy.ones",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_metastable_sets": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_mfpt": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_nstates": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_nstates_obs": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_observable_state_indexes": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "len",
    "pyemma.util.discrete_trajectories.count_states",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_observation_probabilities": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array_equal",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_relaxation": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.allclose",
    "numpy.shape",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_reversible": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_sample_by_observation_probabilities": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_simulate_HMSM": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_stationary_distribution": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.isclose",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_stationary_distribution_obs": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_submodel_simple": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "copy.deepcopy",
    "pyemma.msm.estimate_hidden_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_timescales": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_transition_matrix": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "msmtools.analysis.is_reversible",
    "msmtools.analysis.is_transition_matrix"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_transition_matrix_obs": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "msmtools.analysis.is_reversible",
    "msmtools.analysis.is_transition_matrix",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_two_state_kinetics": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.dt": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.msm": {
  "data": {
   "shadows": "pyemma.msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.msm.tests.test_its.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_its.ImpliedTimescales": {
  "data": {
   "shadows": "pyemma.msm.ImpliedTimescales"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.MockLoggingHandler": {
  "data": {
   "shadows": "pyemma.util.testing_tools.MockLoggingHandler"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.TestITS_AllEstimators": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_its.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_its.TestITS_AllEstimators.setUpClass": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_AllEstimators.test_its_bhmm": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.testing.assert_array_less",
    "pyemma.msm.timescales_hmsm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_AllEstimators.test_its_bmsm": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.testing.assert_array_less",
    "pyemma.msm.its"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_AllEstimators.test_its_hmsm": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyemma.msm.timescales_hmsm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_AllEstimators.test_its_msm": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyemma.msm.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_its.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.compute_nice": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "pyemma.msm.timescales_msm",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.setUpClass": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "msmtools.generation.generate_traj",
    "numpy.array",
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_2": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "msmtools.analysis.timescales",
    "numpy.testing.assert_array_less",
    "pyemma.msm.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_2_parallel": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "msmtools.analysis.timescales",
    "numpy.testing.assert_array_less",
    "pyemma.msm.api.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_4_2": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "int",
    "msmtools.analysis.timescales",
    "numpy.testing.assert_array_less",
    "pyemma.msm.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_errors": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "RuntimeError",
    "pyemma.msm.api.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_fraction_of_frames": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "numpy.array",
    "numpy.sum",
    "pyemma.msm.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_insert_lag_time": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.concatenate",
    "numpy.testing.assert_equal",
    "pyemma.msm.api.timescales_msm",
    "pyemma.util.testing_tools.MockLoggingHandler",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_insert_remove_lag_time": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.msm.api.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_lag_generation": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyemma.msm.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_nice_sliding_nonrev": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_nice_sliding_rev": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_no_return_estimators": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "len",
    "numpy.ndarray",
    "numpy.random.randint",
    "pyemma.msm.api.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_no_return_estimators_samples": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "len",
    "numpy.ndarray",
    "numpy.random.randint",
    "pyemma.msm.api.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_too_large_lagtime": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.msm.tests.test_its.warnings",
    "pyemma.msm.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.msm": {
  "data": {
   "shadows": "pyemma.msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.timescales": {
  "data": {
   "shadows": "msmtools.analysis.timescales"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.timescales_msm": {
  "data": {
   "shadows": "pyemma.msm.api.timescales_msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.msm.tests.test_its_oom.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_its_oom.TestITSFiveState": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_its_oom.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_its_oom.TestITSFiveState.setUpClass": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "classmethod",
    "numpy.arange",
    "numpy.load",
    "numpy.sum",
    "numpy.zeros",
    "pyemma.msm.tests.test_its_oom.its_oom",
    "pyemma.msm.tests.test_its_oom.pkg_resources",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.TestITSFiveState.test_exceptions": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.msm.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.TestITSFiveState.test_ignore_errors": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.msm.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.TestITSFiveState.test_its_nonreversible": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "pyemma.msm.tests.test_its_oom.warnings",
    "pyemma.msm.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.TestITSFiveState.test_its_reversible": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "pyemma.msm.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.TransitionMatrix": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom._sort_by_norm": {
  "data": {
   "shadows": "pyemma.util.linalg._sort_by_norm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom._ts_msm": {
  "data": {
   "shadows": "pyemma.msm.timescales_msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom.its_oom": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pyemma.msm.markov_model",
    "pyemma.msm.tests.test_its_oom.TransitionMatrix",
    "pyemma.msm.tests.test_its_oom.oom_transformations"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.markov_model": {
  "data": {
   "shadows": "pyemma.msm.markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom.oom_transformations": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.dot",
    "numpy.real",
    "numpy.sum",
    "numpy.zeros",
    "pyemma.util.linalg._sort_by_norm",
    "range",
    "scipy.linalg.eig",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom.scl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom.timescales_msm": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_its_oom.sys",
    "pyemma.msm.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.msm.tests.test_msm.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_msm.BirthDeathChain": {
  "data": {
   "shadows": "pyemma.msm.tests.birth_death_chain.BirthDeathChain"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.MaximumLikelihoodMSM": {
  "data": {
   "shadows": "pyemma.msm.MaximumLikelihoodMSM"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_msm.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._active_count_fraction": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._active_set": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._active_state_fraction": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._active_state_indexes": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "len",
    "pyemma.util.discrete_trajectories.count_states",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._committor": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._connected_sets": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._connectivity": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._correlation": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "AssertionError",
    "len",
    "list",
    "numpy.allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._count_matrix_active": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._count_matrix_full": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._discrete_trajectories_active": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._discrete_trajectories_full": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._dt_model": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "pyemma.util.units.TimeUnit"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._effective_count_matrix": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._eigenvalues": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.all",
    "numpy.isreal",
    "numpy.max",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._eigenvectors_RDL": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._eigenvectors_left": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.allclose",
    "numpy.isreal",
    "numpy.max",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._eigenvectors_right": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "numpy.isreal",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._expectation": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "list",
    "numpy.abs",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._fingerprint_correlation": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "list",
    "numpy.all",
    "numpy.allclose",
    "numpy.inf",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._fingerprint_relaxation": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "list",
    "numpy.abs",
    "numpy.allclose",
    "numpy.inf",
    "numpy.max",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._generate_traj": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._lagtime": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._largest_connected_set": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._mfpt": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._nstates": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._pcca_assignment": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.all",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._pcca_distributions": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.all",
    "numpy.array",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._pcca_memberships": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.allclose",
    "numpy.ones",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._pcca_sets": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._relaxation": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.allclose",
    "numpy.shape",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._sample_by_state": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._score": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._score_cv": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._sparse": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._statdist": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._timescales": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "numpy.isreal",
    "numpy.testing.assert_almost_equal",
    "pyemma.msm.tests.test_msm.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._timestep": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._trajectory_weights": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._transition_matrix": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "isinstance",
    "msmtools.analysis.is_connected",
    "msmtools.analysis.is_reversible",
    "msmtools.analysis.is_transition_matrix",
    "numpy.all",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._two_state_kinetics": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmax",
    "numpy.argmin"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.setUpClass": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "classmethod",
    "numpy.bincount",
    "pyemma.msm.estimate_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_active_count_fraction": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_active_set": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_active_state_fraction": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_active_state_indexes": {
  "data": {
   "lineno": 943
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_committor": {
  "data": {
   "lineno": 647
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_connected_sets": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_connectivity": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_correlation": {
  "data": {
   "lineno": 805
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_count_matrix_active": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_count_matrix_full": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_discrete_trajectories_active": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_discrete_trajectories_full": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_dt_model": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_effective_count_matrix": {
  "data": {
   "lineno": 453
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_eigenvalues": {
  "data": {
   "lineno": 498
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_eigenvectors_RDL": {
  "data": {
   "lineno": 584
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_eigenvectors_left": {
  "data": {
   "lineno": 525
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_eigenvectors_right": {
  "data": {
   "lineno": 549
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_expectation": {
  "data": {
   "lineno": 772
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_fingerprint_correlation": {
  "data": {
   "lineno": 874
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_fingerprint_relaxation": {
  "data": {
   "lineno": 920
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_generate_traj": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_msm.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_lagtime": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_largest_connected_set": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_mfpt": {
  "data": {
   "lineno": 664
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_nstates": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_pcca_assignment": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_msm.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_pcca_distributions": {
  "data": {
   "lineno": 717
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_pcca_memberships": {
  "data": {
   "lineno": 738
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_pcca_sets": {
  "data": {
   "lineno": 757
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_relaxation": {
  "data": {
   "lineno": 829
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_reversible": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_sample_by_state": {
  "data": {
   "lineno": 984
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_score": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_score_cv": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pyemma.msm.MaximumLikelihoodMSM"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_simulate_MSM": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_sparse": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_statdist": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_timescales": {
  "data": {
   "lineno": 620
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_timestep": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_trajectory_weights": {
  "data": {
   "lineno": 997
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_transition_matrix": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_two_state_kinetics": {
  "data": {
   "lineno": 1039
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMMinCountConnectivity": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_msm.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_msm.TestMSMMinCountConnectivity._test_connectivity": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMMinCountConnectivity.setUpClass": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMMinCountConnectivity.test_bmsm": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "pyemma.msm.bayesian_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMMinCountConnectivity.test_msm": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "pyemma.msm.estimate_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMMinCountConnectivity.test_oom": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "pyemma.msm.estimate_markov_model",
    "pyemma.msm.tests.test_msm.unittest"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMMinCountConnectivity.test_timescales": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "pyemma.msm.timescales_msm"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMRevPi": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_msm.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_msm.TestMSMRevPi.setUp": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMRevPi.tearDown": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMRevPi.test_valid_stationary_vector": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.array",
    "pyemma.msm.estimate_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMRevPi.test_valid_trajectory": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.array",
    "pyemma.msm.estimate_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMSimple": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_msm.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_msm.TestMSMSimple.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "msmtools.analysis.stationary_distribution",
    "msmtools.analysis.timescales",
    "msmtools.estimation.count_matrix",
    "msmtools.estimation.largest_connected_set",
    "msmtools.estimation.largest_connected_submatrix",
    "msmtools.estimation.transition_matrix",
    "msmtools.generation.generate_traj",
    "numpy.random.mtrand.get_state",
    "numpy.random.mtrand.seed",
    "numpy.zeros",
    "pyemma.msm.tests.birth_death_chain.BirthDeathChain"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMSimple.tearDown": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.random.mtrand.set_state"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMSimple.test_MSM": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.msm.estimate_markov_model",
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMSimple.test_MSM_sparse": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.allclose",
    "pyemma.msm.estimate_markov_model",
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMSimple.test_pcca_recompute": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pyemma.msm.estimate_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMSimple.test_rdl_recompute": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pyemma.msm.estimate_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.assert_allclose": {
  "data": {
   "shadows": "pyemma.util.numeric.assert_allclose"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.bayesian_markov_model": {
  "data": {
   "shadows": "pyemma.msm.bayesian_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.count_matrix": {
  "data": {
   "shadows": "msmtools.estimation.count_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.dt": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.estimate_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.largest_connected_set": {
  "data": {
   "shadows": "msmtools.estimation.largest_connected_set"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.largest_connected_submatrix": {
  "data": {
   "shadows": "msmtools.estimation.largest_connected_submatrix"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.msm": {
  "data": {
   "shadows": "pyemma.msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.stationary_distribution": {
  "data": {
   "shadows": "msmtools.analysis.stationary_distribution"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.timescales": {
  "data": {
   "shadows": "msmtools.analysis.timescales"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.timescales_msm": {
  "data": {
   "shadows": "pyemma.msm.timescales_msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.transition_matrix": {
  "data": {
   "shadows": "msmtools.estimation.transition_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.msm.tests.test_msm_serialization.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_msm_serialization.BayesianHMSM": {
  "data": {
   "shadows": "pyemma.msm.BayesianHMSM"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_msm_serialization.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization._compare_MLHMM": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "isinstance",
    "numpy.testing.assert_equal",
    "pyemma.msm.BayesianHMSM",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.setUp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_msm_serialization.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.setUpClass": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "numpy.zeros",
    "pyemma.datasets.load_2well_discrete",
    "pyemma.msm.bayesian_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.tearDown": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_msm_serialization.os"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_ML_MSM_estimated": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.testing.assert_equal",
    "pyemma.load",
    "pyemma.msm.tests.test_msm_serialization.pyemma",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_bhmm": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pyemma.load",
    "pyemma.msm.tests.test_msm_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_cktest": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.load"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_hmsm": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pyemma.load",
    "pyemma.msm.tests.test_msm_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_its": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.load",
    "pyemma.msm.tests.test_msm_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_its_bmsm_njobs": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.msm.tests.test_msm_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_its_sampled": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.load",
    "pyemma.msm.tests.test_msm_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_its_sampled_only_ts": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.load",
    "pyemma.msm.tests.test_msm_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_ml_msm_sparse": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pyemma.load",
    "pyemma.msm.tests.test_msm_serialization.pyemma",
    "pyemma.util.contexts.numpy_random_seed"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_msm_coarse_grain": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.load"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_msm_save_load": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.load"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_oom": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.load",
    "pyemma.msm.tests.test_msm_serialization.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_sampled_MSM_save_load": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.testing.assert_equal",
    "pyemma.load"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.bayesian_markov_model": {
  "data": {
   "shadows": "pyemma.msm.bayesian_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.load": {
  "data": {
   "shadows": "pyemma.load"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.numpy_random_seed": {
  "data": {
   "shadows": "pyemma.util.contexts.numpy_random_seed"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.msm.tests.test_oom_msm.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_oom_msm.OOMReweightedMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.OOMReweightedMSM"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_oom_msm.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._active_count_fraction": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._active_state_fraction": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._active_state_indexes": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "len",
    "pyemma.util.discrete_trajectories.count_states",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._committor": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._connected_sets": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._connectivity": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._correlation": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._count_matrix_active": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._count_matrix_full": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._discrete_trajectories_active": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._discrete_trajectories_full": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._eigenvalues": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.all",
    "numpy.isreal",
    "numpy.max",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._eigenvalues_OOM": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._eigenvectors_RDL": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._eigenvectors_left": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.allclose",
    "numpy.isreal",
    "numpy.max",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._eigenvectors_right": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "numpy.isreal",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._expectation": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._fingerprint_correlation": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.allclose",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._fingerprint_relaxation": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "numpy.abs",
    "numpy.allclose",
    "numpy.inf",
    "numpy.max",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._generate_traj": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._lagtime": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._mfpt": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._nstates": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._oom_components": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._pcca_assignment": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._pcca_distributions": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._pcca_memberships": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.allclose",
    "numpy.ones",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._pcca_sets": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._relaxation": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.shape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._sample_by_state": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._score": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._score_cv": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._sparse": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._statdist": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.allclose",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._timescales": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isreal",
    "numpy.testing.assert_almost_equal",
    "pyemma.msm.tests.test_oom_msm.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._timestep": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._trajectory_weights": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._transition_matrix": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "isinstance",
    "msmtools.analysis.is_connected",
    "msmtools.analysis.is_reversible",
    "msmtools.analysis.is_transition_matrix",
    "numpy.all",
    "numpy.allclose",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.setUpClass": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "classmethod",
    "msmtools.analysis.rdl_decomposition",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.matrix_power",
    "numpy.load",
    "numpy.sum",
    "numpy.zeros",
    "pyemma.msm.estimate_markov_model",
    "pyemma.msm.estimators.OOMReweightedMSM",
    "pyemma.msm.markov_model",
    "pyemma.msm.tests.test_oom_msm.TransitionMatrix",
    "pyemma.msm.tests.test_oom_msm.oom_transformations",
    "pyemma.msm.tests.test_oom_msm.pkg_resources",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_active_count_fraction": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_active_set": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "int",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_active_state_fraction": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_active_state_indexes": {
  "data": {
   "lineno": 829
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_committor": {
  "data": {
   "lineno": 581
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_connected_sets": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_connectivity": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_correlation": {
  "data": {
   "lineno": 727
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_count_matrix_active": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_count_matrix_full": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_discrete_trajectories_active": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_discrete_trajectories_full": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_eigenvalues": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_eigenvalues_OOM": {
  "data": {
   "lineno": 538
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_eigenvectors_RDL": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_eigenvectors_left": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_eigenvectors_right": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_expectation": {
  "data": {
   "lineno": 710
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_fingerprint_correlation": {
  "data": {
   "lineno": 770
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_fingerprint_relaxation": {
  "data": {
   "lineno": 806
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_generate_traj": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_oom_msm.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_lagtime": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_largest_connected_set": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "int",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_mfpt": {
  "data": {
   "lineno": 599
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_nstates": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_oom_components": {
  "data": {
   "lineno": 553
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_pcca_assignment": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_oom_msm.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_pcca_distributions": {
  "data": {
   "lineno": 646
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_pcca_memberships": {
  "data": {
   "lineno": 670
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_pcca_sets": {
  "data": {
   "lineno": 690
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_relaxation": {
  "data": {
   "lineno": 744
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_reversible": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_sample_by_state": {
  "data": {
   "lineno": 864
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_score": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_score_cv": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "pyemma.msm.estimators.OOMReweightedMSM"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_simulate_MSM": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_sparse": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_statdist": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_timescales": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_timestep": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_trajectory_weights": {
  "data": {
   "lineno": 879
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_transition_matrix": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_oom_msm.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._active_count_fraction": {
  "data": {
   "lineno": 1169
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._active_state_fraction": {
  "data": {
   "lineno": 1156
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._active_state_indexes": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "len",
    "pyemma.util.discrete_trajectories.count_states",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._committor": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._connected_sets": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._connectivity": {
  "data": {
   "lineno": 1057
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._correlation": {
  "data": {
   "lineno": 1481,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._count_matrix_active": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._count_matrix_full": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._discrete_trajectories_active": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._discrete_trajectories_full": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._eigenvalues": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.all",
    "numpy.isreal",
    "numpy.max",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._eigenvalues_OOM": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._eigenvectors_RDL": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._eigenvectors_left": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.allclose",
    "numpy.isreal",
    "numpy.max",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._eigenvectors_right": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "numpy.isreal",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._expectation": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._fingerprint_correlation": {
  "data": {
   "lineno": 1513,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.allclose",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._fingerprint_relaxation": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "numpy.abs",
    "numpy.allclose",
    "numpy.inf",
    "numpy.max",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._generate_traj": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._lagtime": {
  "data": {
   "lineno": 1011
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._mfpt": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._nstates": {
  "data": {
   "lineno": 1033
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._oom_components": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._pcca_assignment": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._pcca_distributions": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._pcca_memberships": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.allclose",
    "numpy.ones",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._pcca_sets": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._relaxation": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.shape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._sample_by_state": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._sparse": {
  "data": {
   "lineno": 1004
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._statdist": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.all",
    "numpy.allclose",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._timescales": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isreal",
    "numpy.testing.assert_almost_equal",
    "pyemma.msm.tests.test_oom_msm.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._timestep": {
  "data": {
   "lineno": 1115
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._trajectory_weights": {
  "data": {
   "lineno": 1628,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._transition_matrix": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "isinstance",
    "msmtools.analysis.is_connected",
    "msmtools.analysis.is_reversible",
    "msmtools.analysis.is_transition_matrix",
    "numpy.all",
    "numpy.allclose",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.setUpClass": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "classmethod",
    "msmtools.analysis.rdl_decomposition",
    "msmtools.estimation.largest_connected_set",
    "msmtools.estimation.largest_connected_submatrix",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.matrix_power",
    "numpy.load",
    "numpy.sum",
    "numpy.zeros",
    "pyemma.msm.estimate_markov_model",
    "pyemma.msm.markov_model",
    "pyemma.msm.tests.test_oom_msm.TransitionMatrix",
    "pyemma.msm.tests.test_oom_msm.oom_transformations",
    "pyemma.msm.tests.test_oom_msm.pkg_resources",
    "pyemma.util.discrete_trajectories.count_states",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_active_count_fraction": {
  "data": {
   "lineno": 1175
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_active_set": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "int",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_active_state_fraction": {
  "data": {
   "lineno": 1162
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_active_state_indexes": {
  "data": {
   "lineno": 1589
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_committor": {
  "data": {
   "lineno": 1352
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_connected_sets": {
  "data": {
   "lineno": 1051
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_connectivity": {
  "data": {
   "lineno": 1061
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_correlation": {
  "data": {
   "lineno": 1491
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_count_matrix_active": {
  "data": {
   "lineno": 1074
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_count_matrix_full": {
  "data": {
   "lineno": 1087
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_discrete_trajectories_active": {
  "data": {
   "lineno": 1109
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_discrete_trajectories_full": {
  "data": {
   "lineno": 1097
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_eigenvalues": {
  "data": {
   "lineno": 1218
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_eigenvalues_OOM": {
  "data": {
   "lineno": 1311
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_eigenvectors_RDL": {
  "data": {
   "lineno": 1276
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_eigenvectors_left": {
  "data": {
   "lineno": 1239
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_eigenvectors_right": {
  "data": {
   "lineno": 1257
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_expectation": {
  "data": {
   "lineno": 1475
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_fingerprint_correlation": {
  "data": {
   "lineno": 1532
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_fingerprint_relaxation": {
  "data": {
   "lineno": 1567
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_generate_traj": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_oom_msm.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_invalid_inputs": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.msm.estimate_markov_model"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_lagtime": {
  "data": {
   "lineno": 1014
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_largest_connected_set": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "int",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_mfpt": {
  "data": {
   "lineno": 1369
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_nstates": {
  "data": {
   "lineno": 1039
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_oom_components": {
  "data": {
   "lineno": 1325
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_pcca_assignment": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_oom_msm.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_pcca_distributions": {
  "data": {
   "lineno": 1414
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_pcca_memberships": {
  "data": {
   "lineno": 1437
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_pcca_sets": {
  "data": {
   "lineno": 1456
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_relaxation": {
  "data": {
   "lineno": 1507
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_reversible": {
  "data": {
   "lineno": 996
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_sample_by_state": {
  "data": {
   "lineno": 1622
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_simulate_MSM": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": [
    "len",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_sparse": {
  "data": {
   "lineno": 1007
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_statdist": {
  "data": {
   "lineno": 1198
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_timescales": {
  "data": {
   "lineno": 1302
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_timestep": {
  "data": {
   "lineno": 1119
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_trajectory_weights": {
  "data": {
   "lineno": 1637
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_transition_matrix": {
  "data": {
   "lineno": 1146
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TransitionMatrix": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm._sort_by_norm": {
  "data": {
   "shadows": "pyemma.util.linalg._sort_by_norm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.count_states": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.count_states"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.dt": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.estimate_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.ma": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.markov_model": {
  "data": {
   "shadows": "pyemma.msm.markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.oom_transformations": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.diag",
    "numpy.dot",
    "numpy.logical_and",
    "numpy.real",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "pyemma.util.linalg._sort_by_norm",
    "range",
    "scipy.linalg.eig",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.scl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.msm.tests.test_reactive_flux.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_reactive_flux.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.setUp": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "msmtools.analysis.statdist",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.sum",
    "pyemma.msm.MSM",
    "pyemma.msm.tpt",
    "set"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_A": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_B": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_I": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_backwardcommittor": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_coarse_grain": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_committor": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_flux": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_forwardcommittor": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_grossflux": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_major_flux": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_netflux": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_nstates": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_pathways": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_rate": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_serialization": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "numpy.ndarray",
    "numpy.testing.assert_equal",
    "pyemma.msm.tests.test_reactive_flux.os",
    "pyemma.msm.tests.test_reactive_flux.pyemma",
    "pyemma.msm.tests.test_reactive_flux.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_total_flux": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux.msmapi": {
  "data": {
   "shadows": "pyemma.msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_subset": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.msm.tests.test_subset.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_subset.SubSet": {
  "data": {
   "shadows": "pyemma.msm.util.subset.SubSet"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_subset.TestSubset": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_subset.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_subset.TestSubset.test_has_member": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "hasattr",
    "pyemma.msm.tests.test_subset.test_class",
    "pyemma.msm.tests.test_subset.types"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.TestSubset.test_property": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.testing.assert_equal",
    "property",
    "pyemma.msm.tests.test_subset.test_class"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.TestSubset.test_shape_left_ev": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.testing.assert_equal",
    "pyemma.msm.tests.test_subset.test_class"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.TestSubset.test_shape_right_ev": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.testing.assert_equal",
    "pyemma.msm.tests.test_subset.test_class"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.add_full_state_methods": {
  "data": {
   "shadows": "pyemma.msm.util.subset.add_full_state_methods"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_subset.k_global": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyemma.msm.tests.test_subset.map_to_full_state": {
  "data": {
   "shadows": "pyemma.msm.util.subset.map_to_full_state"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_subset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_subset.test_class": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pyemma.msm.util.subset.SubSet",
    "pyemma.msm.util.subset.add_full_state_methods"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_subset.test_class.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.test_class.left_eigenvectors": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.inf",
    "pyemma.msm.util.subset.map_to_full_state"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.test_class.right_eigenvectors": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.inf",
    "pyemma.msm.util.subset.map_to_full_state"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.test_class.test_property": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "property",
    "pyemma.msm.util.subset.map_to_full_state"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_subset.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_tpt": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.msm.tests.test_tpt.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyemma.msm.tests.test_tpt.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.setUp": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "msmtools.analysis.statdist",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.sum",
    "pyemma.msm.markov_model",
    "pyemma.msm.tpt",
    "set"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_A": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_B": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_I": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_backwardcommittor": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_coarse_grain": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_committor": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_flux": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_forwardcommittor": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_grossflux": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_netflux": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_nstates": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_rate": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_time_units": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "msmtools.analysis.mfpt",
    "numpy.dot",
    "numpy.random.randint",
    "pyemma.msm.estimate_markov_model",
    "pyemma.msm.tpt",
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_total_flux": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pyemma.util.numeric.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.assert_allclose": {
  "data": {
   "shadows": "pyemma.util.numeric.assert_allclose"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_tpt.estimate_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_tpt.markov_model": {
  "data": {
   "shadows": "pyemma.msm.markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_tpt.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_tpt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_tpt.tpt": {
  "data": {
   "shadows": "pyemma.msm.tpt"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_tpt.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.util.subset": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.util.subset.SubSet": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.util.subset.SubSet.active_set": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.intc"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.util.subset.SubSet.nstates_full": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "TypeError",
    "int"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.util.subset._call_member": {
  "data": {
   "shadows": "pyemma._base.estimator._call_member"
  },
  "type": "import"
 },
 "pyemma.msm.util.subset._globalize": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.util.subset._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.util.subset._wrap_to_full_state": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pyemma.msm.util.subset._wrap_to_full_state.alias_to_full_state": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.asarray",
    "pyemma._base.estimator._call_member",
    "pyemma.msm.util.subset._globalize"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.util.subset.add_full_state_methods": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "property",
    "pyemma.msm.util.subset._wrap_to_full_state",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.util.subset.map_to_full_state": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.msm.util.subset.map_to_full_state.__call__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.msm.util.subset.map_to_full_state.__init__": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "pyemma.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.parse": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyemma.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pyemma.plots": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots._ext": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots._ext.fruchterman_reingold": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots._ext.fruchterman_reingold._fruchterman_reingold": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "float",
    "numpy.asarray",
    "numpy.random.random",
    "numpy.sqrt",
    "numpy.transpose",
    "numpy.where",
    "numpy.zeros",
    "pyemma.plots._ext.fruchterman_reingold._rescale_layout",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.plots._ext.fruchterman_reingold._rescale_layout": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.plots._ext.fruchterman_reingold.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.markovtests": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.markovtests.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyemma.plots.markovtests._add_ck_subplot": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.markovtests.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.plots.markovtests.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.markovtests.plot_cktest": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "list",
    "matplotlib.pylab.subplots",
    "matplotlib.pylab.subplots_adjust",
    "min",
    "numpy.array",
    "numpy.max",
    "pyemma.plots.markovtests._add_ck_subplot",
    "pyemma.plots.markovtests.math"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.markovtests.plt": {
  "data": {
   "shadows": "matplotlib.pylab"
  },
  "type": "import"
 },
 "pyemma.plots.networks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.plots.networks.logging"
   ]
  },
  "type": "module"
 },
 "pyemma.plots.networks.NetworkPlot": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.plots.networks.NetworkPlot.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pyemma.plots.networks.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.networks.NetworkPlot._draw_arrow": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "dict",
    "float",
    "math.sqrt",
    "max",
    "numpy.abs",
    "numpy.array",
    "numpy.cross",
    "numpy.divide",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.networks.NetworkPlot._find_best_positions": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.max",
    "numpy.min",
    "numpy.random.random",
    "numpy.vstack",
    "numpy.zeros_like",
    "pyemma.plots._ext.fruchterman_reingold._fruchterman_reingold"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.networks.NetworkPlot.layout_automatic": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "len",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.networks.NetworkPlot.plot_network": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "abs",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "math.sqrt",
    "matplotlib.pyplot.Circle",
    "matplotlib.pyplot.cm.binary",
    "matplotlib.pyplot.figure",
    "min",
    "numpy.arange",
    "numpy.diag",
    "numpy.empty",
    "numpy.max",
    "numpy.min",
    "numpy.ndarray",
    "numpy.ones",
    "numpy.shape",
    "object",
    "pyemma.plots.networks.logger",
    "pyemma.util.types.ensure_ndarray",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.networks.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyemma.plots.networks.__author__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyemma.plots.networks._fruchterman_reingold": {
  "data": {
   "shadows": "pyemma.plots._ext.fruchterman_reingold._fruchterman_reingold"
  },
  "type": "import"
 },
 "pyemma.plots.networks._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.networks._plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.networks._sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pyemma.plots.networks._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.plots.networks.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyemma.plots.networks.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.plots.networks.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.plots.networks.plot_flux": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "isinstance",
    "len",
    "list",
    "matplotlib.pylab.xlabel",
    "numpy.array",
    "numpy.ndarray",
    "numpy.where",
    "pyemma.plots.networks.NetworkPlot",
    "range",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.networks.plot_markov_model": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "isinstance",
    "msmtools.analysis.stationary_distribution",
    "numpy.diag",
    "numpy.dot",
    "numpy.ndarray",
    "numpy.where",
    "pyemma.plots.networks.NetworkPlot"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.networks.plot_network": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "pyemma.plots.networks.NetworkPlot"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.networks.plt": {
  "data": {
   "shadows": "matplotlib.pylab"
  },
  "type": "import"
 },
 "pyemma.plots.networks.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.plots.plots1d": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.plots1d._MDFeaturizer": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
  },
  "type": "import"
 },
 "pyemma.plots.plots1d.__author__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pyemma.plots.plots1d._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.plots1d._plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.plots1d.plot_feature_histograms": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.subplots",
    "numpy.NaN",
    "numpy.array",
    "numpy.histogram",
    "numpy.log",
    "numpy.ndarray",
    "numpy.zeros_like",
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer",
    "range",
    "reversed",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.plots2d": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.plots2d.LogLocator": {
  "data": {
   "shadows": "matplotlib.ticker.LogLocator"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d.LogNorm": {
  "data": {
   "shadows": "matplotlib.colors.LogNorm"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d.__author__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyemma.plots.plots2d.__version__": {
  "data": {
   "shadows": "matplotlib.__version__"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d._get_cmap": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "matplotlib.__version__",
    "pyemma.plots.plots2d._matplotlib_version"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.plots2d._matplotlib_version": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyemma.plots.plots2d._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d._plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d._prune_kwargs": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.plots2d._to_density": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.plots2d._to_free_energy": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.log",
    "numpy.min",
    "numpy.ones",
    "pyemma.plots.plots2d._to_density"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.plots2d._warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d.contour": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "DeprecationWarning",
    "matplotlib.pyplot.subplots",
    "pyemma.plots.plots2d._get_cmap",
    "pyemma.plots.plots2d.plot_contour",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.get_cmap": {
  "data": {
   "shadows": "matplotlib.cm.get_cmap"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d.get_grid_data": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.hstack",
    "numpy.linspace",
    "numpy.meshgrid",
    "scipy.interpolate.griddata"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.get_histogram": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.histogram2d",
    "numpy.maximum",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.griddata": {
  "data": {
   "shadows": "scipy.interpolate.griddata"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d.plot_contour": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "float",
    "numpy.inf",
    "numpy.linspace",
    "numpy.ma.masked_where",
    "numpy.max",
    "numpy.min",
    "pyemma.plots.plots2d.get_grid_data",
    "pyemma.plots.plots2d.get_histogram",
    "pyemma.plots.plots2d.plot_map"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.plot_density": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "matplotlib.colors.LogNorm",
    "matplotlib.ticker.LogLocator",
    "numpy.ceil",
    "numpy.floor",
    "numpy.log10",
    "numpy.logspace",
    "numpy.ma.masked_where",
    "pyemma.plots.plots2d._to_density",
    "pyemma.plots.plots2d.get_histogram",
    "pyemma.plots.plots2d.plot_map",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.plot_free_energy": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "pyemma.plots.plots2d._get_cmap",
    "pyemma.plots.plots2d._to_free_energy",
    "pyemma.plots.plots2d.get_histogram",
    "pyemma.plots.plots2d.plot_map",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.plot_map": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "matplotlib.pyplot.subplots",
    "pyemma.plots.plots2d._prune_kwargs"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.plot_state_map": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "float",
    "int",
    "matplotlib.cm.get_cmap",
    "numpy.arange",
    "numpy.max",
    "pyemma.plots.plots2d.plot_contour"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.scatter_contour": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pyemma.plots.plots2d.contour",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.tests.plt": {
  "data": {
   "shadows": "matplotlib.pylab"
  },
  "type": "import"
 },
 "pyemma.plots.tests.teardown_module": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "matplotlib.pylab.close"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_its": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.plots.tests.test_its.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.plots.tests.test_its.BayesianMSM": {
  "data": {
   "shadows": "pyemma.msm.BayesianMSM"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_its.ImpliedTimescales": {
  "data": {
   "shadows": "pyemma.msm.ImpliedTimescales"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_its.MaximumLikelihoodMSM": {
  "data": {
   "shadows": "pyemma.msm.MaximumLikelihoodMSM"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_its.TestItsPlot": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyemma.plots.tests.test_its.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.plots.tests.test_its.TestItsPlot.setUpClass": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "classmethod",
    "msmtools.generation.generate_traj",
    "numpy.array",
    "pyemma.msm.ImpliedTimescales",
    "pyemma.msm.MaximumLikelihoodMSM"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_its.TestItsPlot.test_its_estimated_with_only_ts": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pyemma.msm.ImpliedTimescales",
    "pyemma.plots.plot_implied_timescales"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_its.TestItsPlot.test_its_estimated_with_only_ts_samples": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pyemma.msm.BayesianMSM",
    "pyemma.msm.ImpliedTimescales",
    "pyemma.plots.plot_implied_timescales"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_its.TestItsPlot.test_nits": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyemma.plots.plot_implied_timescales"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_its.TestItsPlot.test_plot": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyemma.plots.plot_implied_timescales"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_its.TestItsPlot.test_process": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pyemma.plots.plot_implied_timescales"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_its.generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_its.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_its.plot_implied_timescales": {
  "data": {
   "shadows": "pyemma.plots.plot_implied_timescales"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_its.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_markovtests": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.tests.test_markovtests.TestItsPlot": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyemma.plots.tests.test_markovtests.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.plots.tests.test_markovtests.TestItsPlot.setUpClass": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "classmethod",
    "msmtools.generation.generate_trajs",
    "numpy.array",
    "pyemma.plots.tests.test_markovtests.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_markovtests.TestItsPlot.test_plot": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pyemma.plots.plot_cktest"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_markovtests.TestItsPlot.test_plot_kwargs": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyemma.plots.plot_cktest"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_markovtests.TestItsPlot.test_plot_kwargs_no_def_overriding": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyemma.plots.plot_cktest"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_markovtests.generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_markovtests.generate_trajs": {
  "data": {
   "shadows": "msmtools.generation.generate_trajs"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_markovtests.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_markovtests.plot_cktest": {
  "data": {
   "shadows": "pyemma.plots.plot_cktest"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_markovtests.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_markovtests.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.plots.tests.test_networks.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.plots.tests.test_networks.MSM": {
  "data": {
   "shadows": "pyemma.msm.MSM"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pyemma.plots.tests.test_networks.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.setUpClass": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "classmethod",
    "numpy.arange",
    "numpy.array",
    "numpy.zeros_like",
    "pyemma.msm.MSM"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_alphanumeric_arrow_labels": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pyemma.plots.networks.plot_markov_model",
    "pyemma.plots.tests.test_networks.matplotlib",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_alphanumeric_arrow_labels_using_ax": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "matplotlib.pyplot.subplots",
    "pyemma.plots.networks.plot_markov_model",
    "pyemma.plots.tests.test_networks.matplotlib",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_flux": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "pyemma.msm.tpt",
    "pyemma.plots.networks.plot_flux",
    "pyemma.plots.tests.test_networks.matplotlib",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_forced_no_arrows_labels": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyemma.plots.networks.plot_markov_model",
    "pyemma.plots.tests.test_networks.matplotlib",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_numeric_arrow_labels": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyemma.plots.networks.plot_markov_model",
    "pyemma.plots.tests.test_networks.matplotlib",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_plot_markov_model": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pyemma.plots.networks.plot_markov_model",
    "pyemma.plots.tests.test_networks.matplotlib",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_state_labels_flux": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.array",
    "pyemma.msm.tpt",
    "pyemma.plots.networks.plot_flux"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_state_labels_flux_auto": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pyemma.msm.tpt",
    "pyemma.plots.networks.plot_flux"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_state_labels_network": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "pyemma.plots.networks.plot_network",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_string_arrow_labels_using_ax": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "matplotlib.pyplot.subplots",
    "numpy.array",
    "pyemma.plots.networks.plot_network",
    "pyemma.plots.tests.test_networks.matplotlib",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.plot_flux": {
  "data": {
   "shadows": "pyemma.plots.networks.plot_flux"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.plot_markov_model": {
  "data": {
   "shadows": "pyemma.plots.networks.plot_markov_model"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.plot_network": {
  "data": {
   "shadows": "pyemma.plots.networks.plot_network"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.tpt": {
  "data": {
   "shadows": "pyemma.msm.tpt"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots1d": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.tests.test_plots1d.TestPlots1d": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyemma.plots.tests.test_plots1d.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.plots.tests.test_plots1d.TestPlots1d.setUpClass": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots1d.TestPlots1d.test_feature_histograms": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "pyemma.plots.plots1d.plot_feature_histograms"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots1d.TestPlots1d.test_feature_histograms_ax_argument": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplots",
    "pyemma.plots.plots1d.plot_feature_histograms"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots1d.TestPlots1d.test_feature_histograms_mpl_arguments": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "pyemma.plots.plots1d.plot_feature_histograms",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots1d.TestPlots1d.test_invalid_input": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.close",
    "numpy.random.rand",
    "pyemma.plots.plots1d.plot_feature_histograms"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots1d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots1d.plot_feature_histograms": {
  "data": {
   "shadows": "pyemma.plots.plots1d.plot_feature_histograms"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots1d.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots1d.subplots": {
  "data": {
   "shadows": "matplotlib.pyplot.subplots"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots1d.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pyemma.plots.tests.test_plots2d.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.setUpClass": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "classmethod",
    "numpy.random.binomial"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.test_contour": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "pyemma.plots.plots2d.contour"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.test_free_energy": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "pyemma.plots.plots2d.plot_free_energy"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.test_plot_contour": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "pyemma.plots.plots2d.plot_contour"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.test_plot_density": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "pyemma.plots.plots2d.plot_density"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.test_plot_free_energy": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.close",
    "pyemma.plots.plots2d.plot_free_energy"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.test_plot_state_map": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.close",
    "pyemma.plots.plots2d.plot_state_map"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.test_scatter_contour": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "pyemma.plots.plots2d.scatter_contour"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.contour": {
  "data": {
   "shadows": "pyemma.plots.plots2d.contour"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.plot_contour": {
  "data": {
   "shadows": "pyemma.plots.plots2d.plot_contour"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.plot_density": {
  "data": {
   "shadows": "pyemma.plots.plots2d.plot_density"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.plot_free_energy": {
  "data": {
   "shadows": "pyemma.plots.plots2d.plot_free_energy"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.plot_state_map": {
  "data": {
   "shadows": "pyemma.plots.plots2d.plot_state_map"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.scatter_contour": {
  "data": {
   "shadows": "pyemma.plots.plots2d.scatter_contour"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.thermoplots._DTRAM": {
  "data": {
   "shadows": "pyemma.thermo.DTRAM"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots._MBAR": {
  "data": {
   "shadows": "pyemma.thermo.MBAR"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots._MSM": {
  "data": {
   "shadows": "pyemma.msm.MSM"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots._TRAM": {
  "data": {
   "shadows": "pyemma.thermo.TRAM"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots._WHAM": {
  "data": {
   "shadows": "pyemma.thermo.WHAM"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.plots.thermoplots._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots._plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots.get_estimator_label": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.thermo.DTRAM",
    "pyemma.thermo.MBAR",
    "pyemma.thermo.TRAM",
    "pyemma.thermo.WHAM"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.thermoplots.plot_convergence_info": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.rcParams",
    "matplotlib.pyplot.subplots",
    "pyemma.plots.thermoplots.plot_increments",
    "pyemma.plots.thermoplots.plot_loglikelihoods"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.thermoplots.plot_increments": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "matplotlib.pyplot.subplots",
    "numpy.arange",
    "pyemma.plots.thermoplots.get_estimator_label",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.thermoplots.plot_loglikelihoods": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "matplotlib.pyplot.subplots",
    "numpy.arange",
    "pyemma.plots.thermoplots.get_estimator_label",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.thermoplots.plot_memm_implied_timescales": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.subplots",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.max",
    "numpy.ones",
    "pyemma.msm.MSM",
    "pyemma.thermo.DTRAM",
    "pyemma.thermo.TRAM",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.plots.timescales": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.timescales.__author__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyemma.plots.timescales._is_int": {
  "data": {
   "shadows": "pyemma.util.types.is_int"
  },
  "type": "import"
 },
 "pyemma.plots.timescales._is_iterable_of_int": {
  "data": {
   "shadows": "pyemma.util.types.is_iterable_of_int"
  },
  "type": "import"
 },
 "pyemma.plots.timescales._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.timescales._plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.timescales.plot_implied_timescales": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.savefig",
    "min",
    "numpy.arange",
    "numpy.argsort",
    "numpy.max",
    "numpy.ones",
    "pyemma.util.types.is_int",
    "pyemma.util.types.is_iterable_of_int",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.thermo": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.DTRAM": {
  "data": {
   "shadows": "pyemma.thermo.estimators.DTRAM"
  },
  "type": "import"
 },
 "pyemma.thermo.EmptyState": {
  "data": {
   "shadows": "pyemma.thermo.estimators.EmptyState"
  },
  "type": "import"
 },
 "pyemma.thermo.MBAR": {
  "data": {
   "shadows": "pyemma.thermo.estimators.MBAR"
  },
  "type": "import"
 },
 "pyemma.thermo.MEMM": {
  "data": {
   "shadows": "pyemma.thermo.models.MEMM"
  },
  "type": "import"
 },
 "pyemma.thermo.MultiThermModel": {
  "data": {
   "shadows": "pyemma.thermo.models.MultiThermModel"
  },
  "type": "import"
 },
 "pyemma.thermo.StationaryModel": {
  "data": {
   "shadows": "pyemma.thermo.models.StationaryModel"
  },
  "type": "import"
 },
 "pyemma.thermo.TRAM": {
  "data": {
   "shadows": "pyemma.thermo.estimators.TRAM"
  },
  "type": "import"
 },
 "pyemma.thermo.WHAM": {
  "data": {
   "shadows": "pyemma.thermo.estimators.WHAM"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.estimators.DTRAM_estimator": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.estimators.DTRAM_estimator.DTRAM": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyemma._base.estimator.Estimator",
    "pyemma.thermo.MEMM",
    "pyemma.thermo.estimators._base.ThermoBase"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.estimators.DTRAM_estimator.DTRAM.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyemma.util.types.ensure_ndarray"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.DTRAM_estimator.DTRAM._estimate": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "list",
    "msmtools.estimation.largest_connected_set",
    "numpy.ascontiguousarray",
    "numpy.exp",
    "numpy.float64",
    "numpy.intc",
    "numpy.newaxis",
    "numpy.require",
    "numpy.shape",
    "numpy.zeros",
    "pyemma._base.progress.ProgressReporter",
    "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack",
    "pyemma.thermo.extensions.cset",
    "pyemma.thermo.extensions.cset.compute_csets_dTRAM",
    "pyemma.thermo.extensions.dtram.estimate",
    "pyemma.thermo.extensions.dtram.estimate_transition_matrix",
    "pyemma.thermo.extensions.util.count_matrices",
    "pyemma.thermo.extensions.util.state_counts",
    "pyemma.thermo.extensions.wham.estimate",
    "pyemma.thermo.models.memm.ThermoMSM",
    "pyemma.util.types.assert_array",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.DTRAM_estimator.DTRAM.estimate": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "pyemma.thermo.estimators.DTRAM_estimator.DTRAM",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.DTRAM_estimator.DTRAM.log_likelihood": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.zeros",
    "pyemma.thermo.extensions.dtram.estimate_transition_matrices",
    "pyemma.thermo.extensions.dtram.get_loglikelihood"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.DTRAM_estimator.ThermoBase": {
  "data": {
   "shadows": "pyemma.thermo.estimators._base.ThermoBase"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._ConvergenceProgressIndicatorCallBack": {
  "data": {
   "shadows": "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._MEMM": {
  "data": {
   "shadows": "pyemma.thermo.MEMM"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._ThermoMSM": {
  "data": {
   "shadows": "pyemma.thermo.models.memm.ThermoMSM"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator.__author__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._cset": {
  "data": {
   "shadows": "pyemma.thermo.extensions.cset"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._dtram": {
  "data": {
   "shadows": "pyemma.thermo.extensions.dtram"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._largest_connected_set": {
  "data": {
   "shadows": "msmtools.estimation.largest_connected_set"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._util": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._wham": {
  "data": {
   "shadows": "pyemma.thermo.extensions.wham"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.estimators.MBAR_estimator.MBAR": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pyemma._base.estimator.Estimator",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.thermo.MultiThermModel",
    "pyemma.thermo.estimators._base.ThermoBase"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.estimators.MBAR_estimator.MBAR.__init__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.MBAR_estimator.MBAR._estimate": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "max",
    "numpy.ascontiguousarray",
    "numpy.float64",
    "numpy.intc",
    "numpy.max",
    "numpy.nan",
    "numpy.require",
    "numpy.sort",
    "numpy.where",
    "pyemma._base.progress.ProgressReporter",
    "pyemma.thermo.StationaryModel",
    "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack",
    "pyemma.thermo.extensions.mbar",
    "pyemma.thermo.extensions.mbar.estimate",
    "pyemma.thermo.extensions.mbar_direct",
    "pyemma.thermo.extensions.util.state_counts",
    "pyemma.util.types.assert_array",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.MBAR_estimator.MBAR.estimate": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pyemma.thermo.estimators.MBAR_estimator.MBAR",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.MBAR_estimator.MBAR.pointwise_free_energies": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.log",
    "numpy.zeros",
    "pyemma.thermo.extensions.mbar.get_pointwise_unbiased_free_energies"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.MBAR_estimator.ThermoBase": {
  "data": {
   "shadows": "pyemma.thermo.estimators._base.ThermoBase"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._ConvergenceProgressIndicatorCallBack": {
  "data": {
   "shadows": "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._MultiThermModel": {
  "data": {
   "shadows": "pyemma.thermo.MultiThermModel"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._StationaryModel": {
  "data": {
   "shadows": "pyemma.thermo.StationaryModel"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyemma.thermo.estimators.MBAR_estimator._mbar": {
  "data": {
   "shadows": "pyemma.thermo.extensions.mbar"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._mbar_direct": {
  "data": {
   "shadows": "pyemma.thermo.extensions.mbar_direct"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._util": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.estimators.TRAM_estimator.EmptyState": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyemma._base.estimator.Estimator",
    "pyemma.thermo.MEMM",
    "pyemma.thermo.estimators._base.ThermoBase"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM.__getstate__": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "pyemma.thermo.estimators.TRAM_estimator.TRAM",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM._estimate": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "len",
    "max",
    "msmtools.estimation.largest_connected_set",
    "numpy.all",
    "numpy.ascontiguousarray",
    "numpy.bincount",
    "numpy.exp",
    "numpy.float64",
    "numpy.intc",
    "numpy.max",
    "numpy.maximum",
    "numpy.require",
    "numpy.sum",
    "numpy.zeros",
    "pyemma._base.progress.ProgressReporter",
    "pyemma.thermo.estimators.TRAM_estimator.EmptyState",
    "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack",
    "pyemma.thermo.estimators._callback._IterationProgressIndicatorCallBack",
    "pyemma.thermo.extensions.cset.compute_csets_TRAM",
    "pyemma.thermo.extensions.cset.restrict_to_csets",
    "pyemma.thermo.extensions.mbar",
    "pyemma.thermo.extensions.mbar.estimate",
    "pyemma.thermo.extensions.mbar_direct",
    "pyemma.thermo.extensions.tram",
    "pyemma.thermo.extensions.tram.estimate",
    "pyemma.thermo.extensions.tram.estimate_transition_matrix",
    "pyemma.thermo.extensions.tram_direct",
    "pyemma.thermo.extensions.trammbar",
    "pyemma.thermo.extensions.trammbar.estimate",
    "pyemma.thermo.extensions.trammbar_direct",
    "pyemma.thermo.extensions.util.count_matrices",
    "pyemma.thermo.extensions.util.state_counts",
    "pyemma.thermo.models.memm.ThermoMSM",
    "pyemma.util.types.assert_array",
    "range",
    "warnings.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM.estimate": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "pyemma.thermo.estimators.TRAM_estimator.TRAM",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM.log_likelihood": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "pyemma.thermo.extensions.tram.log_likelihood_lower_bound"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM.mbar_pointwise_free_energies": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.log",
    "numpy.zeros",
    "pyemma.thermo.extensions.mbar.get_pointwise_unbiased_free_energies"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM.pointwise_free_energies": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.intc",
    "numpy.zeros",
    "pyemma.thermo.extensions.tram.get_pointwise_unbiased_free_energies",
    "pyemma.thermo.extensions.trammbar.get_pointwise_unbiased_free_energies"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.TRAM_estimator.ThermoBase": {
  "data": {
   "shadows": "pyemma.thermo.estimators._base.ThermoBase"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._ConvergenceProgressIndicatorCallBack": {
  "data": {
   "shadows": "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._IterationProgressIndicatorCallBack": {
  "data": {
   "shadows": "pyemma.thermo.estimators._callback._IterationProgressIndicatorCallBack"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._MEMM": {
  "data": {
   "shadows": "pyemma.thermo.MEMM"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._ThermoMSM": {
  "data": {
   "shadows": "pyemma.thermo.models.memm.ThermoMSM"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._cset": {
  "data": {
   "shadows": "pyemma.thermo.extensions.cset"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._largest_connected_set": {
  "data": {
   "shadows": "msmtools.estimation.largest_connected_set"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._mbar": {
  "data": {
   "shadows": "pyemma.thermo.extensions.mbar"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._mbar_direct": {
  "data": {
   "shadows": "pyemma.thermo.extensions.mbar_direct"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._tram": {
  "data": {
   "shadows": "pyemma.thermo.extensions.tram"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._tram_direct": {
  "data": {
   "shadows": "pyemma.thermo.extensions.tram_direct"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._trammbar": {
  "data": {
   "shadows": "pyemma.thermo.extensions.trammbar"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._trammbar_direct": {
  "data": {
   "shadows": "pyemma.thermo.extensions.trammbar_direct"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._util": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.estimators.WHAM_estimator.ThermoBase": {
  "data": {
   "shadows": "pyemma.thermo.estimators._base.ThermoBase"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator.WHAM": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pyemma._base.estimator.Estimator",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.thermo.MultiThermModel",
    "pyemma.thermo.estimators._base.ThermoBase"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.estimators.WHAM_estimator.WHAM.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pyemma.util.types.ensure_ndarray"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.WHAM_estimator.WHAM._estimate": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.ascontiguousarray",
    "numpy.exp",
    "numpy.float64",
    "numpy.intc",
    "numpy.newaxis",
    "numpy.shape",
    "numpy.where",
    "pyemma._base.progress.ProgressReporter",
    "pyemma.thermo.StationaryModel",
    "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack",
    "pyemma.thermo.extensions.util.state_counts",
    "pyemma.thermo.extensions.wham.estimate",
    "pyemma.util.types.assert_array",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.WHAM_estimator.WHAM.estimate": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pyemma.thermo.estimators.WHAM_estimator.WHAM",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.WHAM_estimator.WHAM.log_likelihood": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.intc",
    "numpy.zeros",
    "pyemma.thermo.extensions.wham.get_loglikelihood"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.WHAM_estimator._ConvergenceProgressIndicatorCallBack": {
  "data": {
   "shadows": "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._MultiThermModel": {
  "data": {
   "shadows": "pyemma.thermo.MultiThermModel"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._StationaryModel": {
  "data": {
   "shadows": "pyemma.thermo.StationaryModel"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyemma.thermo.estimators.WHAM_estimator._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._util": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._wham": {
  "data": {
   "shadows": "pyemma.thermo.extensions.wham"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators._base": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.estimators._base.ThermoBase": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.estimators._base.ThermoBase.dt_traj": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyemma.util.units.TimeUnit"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._base.ThermoBase.force_constants": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._base.ThermoBase.temperatures": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._base.ThermoBase.umbrella_centers": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._base.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators._base.Undefined": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.estimators._callback": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyemma.thermo.estimators._callback._ProgressIndicatorCallBack"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack.__call__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dict",
    "int",
    "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._callback._IterationProgressIndicatorCallBack": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyemma.thermo.estimators._callback._ProgressIndicatorCallBack"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.estimators._callback._IterationProgressIndicatorCallBack.__call__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._callback._IterationProgressIndicatorCallBack.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dict",
    "pyemma.thermo.estimators._callback._IterationProgressIndicatorCallBack",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._callback._ProgressIndicatorCallBack": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.estimators._callback._ProgressIndicatorCallBack.__init__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._callback._ProgressIndicatorCallBack.waiting": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyemma.thermo.estimators._callback.time"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._callback.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyemma.thermo.extensions": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.extensions.callback": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.extensions.callback.CallbackInterrupt": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.extensions.callback.CallbackInterrupt.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "pyemma.thermo.extensions.callback.CallbackInterrupt.__str__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "pyemma.thermo.extensions.callback.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pyemma.thermo.extensions.callback.generic_callback_stop": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyemma.thermo.extensions.callback.CallbackInterrupt"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.models.memm": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.models.memm.MEMM": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "pyemma.thermo.models.multi_therm.MultiThermModel"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.models.memm.MEMM.msm": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm.ThermoMSM": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pyemma.msm.MSM",
    "pyemma.msm.util.subset.SubSet",
    "pyemma.msm.util.subset.add_full_state_methods",
    "pyemma.util.annotators.aliased"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.models.memm.ThermoMSM.__init__": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm.ThermoMSM.eigenvectors_left": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.inf",
    "pyemma.msm.util.subset.map_to_full_state",
    "pyemma.thermo.models.memm.ThermoMSM",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm.ThermoMSM.eigenvectors_right": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.inf",
    "pyemma.msm.util.subset.map_to_full_state",
    "pyemma.thermo.models.memm.ThermoMSM",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm.ThermoMSM.f": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.log",
    "property",
    "pyemma.msm.util.subset.map_to_full_state",
    "pyemma.util.annotators.alias"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm.ThermoMSM.models": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm.ThermoMSM.pi": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pyemma.msm.MSM.pi.getter",
    "pyemma.msm.util.subset.map_to_full_state",
    "pyemma.thermo.models.memm.ThermoMSM",
    "pyemma.util.annotators.alias",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm.ThermoMSM.set_model_params": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pyemma.thermo.models.memm.ThermoMSM",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm._MSM": {
  "data": {
   "shadows": "pyemma.msm.MSM"
  },
  "type": "import"
 },
 "pyemma.thermo.models.memm._MultiThermModel": {
  "data": {
   "shadows": "pyemma.thermo.models.multi_therm.MultiThermModel"
  },
  "type": "import"
 },
 "pyemma.thermo.models.memm._SubSet": {
  "data": {
   "shadows": "pyemma.msm.util.subset.SubSet"
  },
  "type": "import"
 },
 "pyemma.thermo.models.memm._add_full_state_methods": {
  "data": {
   "shadows": "pyemma.msm.util.subset.add_full_state_methods"
  },
  "type": "import"
 },
 "pyemma.thermo.models.memm._alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.thermo.models.memm._aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.thermo.models.memm._map_to_full_state": {
  "data": {
   "shadows": "pyemma.msm.util.subset.map_to_full_state"
  },
  "type": "import"
 },
 "pyemma.thermo.models.memm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.models.multi_therm": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.models.multi_therm.MultiThermModel": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyemma.thermo.models.stationary.StationaryModel"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.models.multi_therm.MultiThermModel.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "pyemma.thermo.models.multi_therm.MultiThermModel.meval": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyemma._base.model.call_member"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models.multi_therm.MultiThermModel.set_model_params": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "float",
    "issubclass",
    "numpy.array",
    "pyemma._base.model.Model",
    "pyemma.thermo.models.stationary.StationaryModel.set_model_params",
    "pyemma.util.types.assert_array"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models.multi_therm.MultiThermModel.unbiased_state": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models.multi_therm._Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.thermo.models.multi_therm._StationaryModel": {
  "data": {
   "shadows": "pyemma.thermo.models.stationary.StationaryModel"
  },
  "type": "import"
 },
 "pyemma.thermo.models.multi_therm.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.thermo.models.multi_therm._call_member": {
  "data": {
   "shadows": "pyemma._base.model.call_member"
  },
  "type": "import"
 },
 "pyemma.thermo.models.multi_therm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.models.multi_therm._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.models.stationary.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary.StationaryModel": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyemma._base.model.Model",
    "pyemma._base.serialization.serialization.SerializableMixIn",
    "pyemma.msm.util.subset.SubSet",
    "pyemma.msm.util.subset.add_full_state_methods",
    "pyemma.util.annotators.aliased"
   ]
  },
  "type": "class"
 },
 "pyemma.thermo.models.stationary.StationaryModel.__eq__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array_equal",
    "pyemma.thermo.models.stationary.StationaryModel"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary.StationaryModel.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary.StationaryModel.expectation": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.dot",
    "pyemma.util.types.ensure_ndarray"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary.StationaryModel.f": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary.StationaryModel.label": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary.StationaryModel.nstates": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary.StationaryModel.pi": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary.StationaryModel.set_model_params": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.array",
    "numpy.exp",
    "numpy.log",
    "pyemma.thermo.extensions.util.logsumexp",
    "pyemma.util.types.assert_array"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary._Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary._SubSet": {
  "data": {
   "shadows": "pyemma.msm.util.subset.SubSet"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary.__author__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyemma.thermo.models.stationary._add_full_state_methods": {
  "data": {
   "shadows": "pyemma.msm.util.subset.add_full_state_methods"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary._alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary._aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary._logsumexp": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util.logsumexp"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary._map_to_full_state": {
  "data": {
   "shadows": "pyemma.msm.util.subset.map_to_full_state"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.thermo.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.util.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.util.util.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pyemma.thermo.util.util._ensure_force_constant": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "numpy.asarray",
    "numpy.float64",
    "numpy.ones",
    "numpy.zeros",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.util.util._ensure_umbrella_center": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.float64",
    "numpy.ones",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.util.util._get_multi_temperature_bias_sequences": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "isinstance",
    "numpy.newaxis",
    "pyemma.thermo.util.util.boltzmann_constant_in_kcal_per_mol",
    "pyemma.thermo.util.util.conversion_factor_J_per_cal",
    "pyemma.thermo.util.util.conversion_shift_Celsius_to_Kelvin",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.util.util._get_multi_temperature_parameters": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.intc",
    "numpy.unique",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.util.util._get_umbrella_bias": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util.get_umbrella_bias"
  },
  "type": "import"
 },
 "pyemma.thermo.util.util._get_umbrella_bias_sequences": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "isinstance",
    "numpy.ndarray",
    "numpy.require",
    "pyemma.thermo.extensions.util.get_umbrella_bias",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.util.util._get_umbrella_sampling_parameters": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.float64",
    "numpy.intc",
    "numpy.ones",
    "pyemma.thermo.util.util._ensure_force_constant",
    "pyemma.thermo.util.util._ensure_umbrella_center",
    "range",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.util.util._logsumexp": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util.logsumexp"
  },
  "type": "import"
 },
 "pyemma.thermo.util.util._logsumexp_pair": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util.logsumexp_pair"
  },
  "type": "import"
 },
 "pyemma.thermo.util.util._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.util.util.assign_unbiased_state_label": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.util.util.boltzmann_constant_in_kcal_per_mol": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "pyemma.thermo.util.util.conversion_factor_J_per_cal": {
  "data": {
   "lineno": 301
  },
  "type": "constant"
 },
 "pyemma.thermo.util.util.conversion_shift_Celsius_to_Kelvin": {
  "data": {
   "lineno": 302
  },
  "type": "constant"
 },
 "pyemma.thermo.util.util.get_averaged_bias_matrix": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.ascontiguousarray",
    "numpy.float64",
    "numpy.inf",
    "numpy.intc",
    "numpy.log",
    "numpy.max",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.zeros",
    "pyemma.thermo.extensions.util.logsumexp",
    "pyemma.thermo.extensions.util.logsumexp_pair",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.util.util.get_multi_temperature_data": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "IndexError",
    "float",
    "int",
    "isinstance",
    "numpy.where",
    "pyemma.thermo.util.util._get_multi_temperature_bias_sequences",
    "pyemma.thermo.util.util._get_multi_temperature_parameters"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.util.util.get_umbrella_sampling_data": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "map",
    "numpy.asarray",
    "numpy.float64",
    "numpy.zeros",
    "pyemma.thermo.util.util._get_umbrella_bias_sequences",
    "pyemma.thermo.util.util._get_umbrella_sampling_parameters"
   ]
  },
  "type": "function"
 },
 "pyemma.thermo.util.util.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyemma.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "pyemma.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.util._Config": {
  "data": {
   "shadows": "Config"
  },
  "type": "import"
 },
 "pyemma.util._config": {
  "data": {},
  "type": "module"
 },
 "pyemma.util._config.Config": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object",
    "pyemma.util._config.os"
   ]
  },
  "type": "class"
 },
 "pyemma.util._config.Config.__call__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pyemma.util._config.Config"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.__copy_default_files_to_cfg_dir": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "OSError",
    "pyemma.util._config.os",
    "pyemma.util._config.shutil",
    "pyemma.util.exceptions.ConfigDirectoryException",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.__getitem__": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "RuntimeError",
    "pyemma.util._config.os",
    "pyemma.util._config.warnings",
    "pyemma.util.log.LoggingConfigurationError",
    "pyemma.util.log.setup_logging"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.__read_cfg": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "EnvironmentError",
    "configparser.ConfigParser",
    "pyemma.util._config.ReadConfigException"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.__repr__": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "pyemma.util._config.Config.__setattr__": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.util._config.Config",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.__setitem__": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config._cfgs_to_read": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "glob.glob",
    "pyemma.util._config.Config",
    "pyemma.util._config.os"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config._format_msg": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "pyemma.__version__",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.cfg_dir": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "EnvironmentError",
    "NotADirectoryError",
    "print",
    "pyemma.util._config.os",
    "pyemma.util.exceptions.ConfigDirectoryException",
    "pyemma.util.files.mkdir_p"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.check_version": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "pyemma.util._config._invalidate_cache",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.coordinates_check_output": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "pyemma.util._config.sys",
    "pyemma.util._config.warnings"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.default_chunksize": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "pyemma.util._config._invalidate_cache",
    "pyemma.util.units.string_to_bytes",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.default_config_file": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "os.path.join",
    "property",
    "pyemma.util._config.Config",
    "pyemma.util._config.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.default_logging_file": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "os.path.join",
    "property",
    "pyemma.util._config.Config",
    "pyemma.util._config.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.keys": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "pyemma.util._config.Config.load": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "print",
    "pyemma.util._config.Config",
    "pyemma.util._config.ReadConfigException"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.logging_config": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "property",
    "pyemma.util._config.Config",
    "pyemma.util._config.os"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.mute": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "bool",
    "pyemma.util._config._invalidate_cache",
    "pyemma.util._config.logging",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.save": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "IOError",
    "open",
    "print",
    "pyemma.util._config.Config",
    "pyemma.util._config.os",
    "pyemma.util.exceptions.ConfigDirectoryException",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.show_config_notification": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "pyemma.util._config._invalidate_cache",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.show_progress_bars": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "pyemma.util._config._invalidate_cache",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.traj_info_max_entries": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "pyemma.util._config._invalidate_cache",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.traj_info_max_size": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "int",
    "pyemma.util._config._invalidate_cache",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.use_trajectory_lengths_cache": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "pyemma.util._config._invalidate_cache",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.Config.used_filenames": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.ConfigDirectoryException": {
  "data": {
   "shadows": "pyemma.util.exceptions.ConfigDirectoryException"
  },
  "type": "import"
 },
 "pyemma.util._config.ConfigParser": {
  "data": {
   "shadows": "configparser.ConfigParser"
  },
  "type": "import"
 },
 "pyemma.util._config.LoggingConfigurationError": {
  "data": {
   "shadows": "pyemma.util.log.LoggingConfigurationError"
  },
  "type": "import"
 },
 "pyemma.util._config.ReadConfigException": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pyemma.util._config.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyemma.util._config.__version__": {
  "data": {
   "shadows": "pyemma.__version__"
  },
  "type": "import"
 },
 "pyemma.util._config._cached": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pyemma.util._config._cached.wrapper": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "cfg_getter",
    "functools.wraps",
    "id"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config._invalidate_cache": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pyemma.util._config._invalidate_cache.wrapper": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "cfg_setter",
    "functools.wraps",
    "id"
   ]
  },
  "type": "function"
 },
 "pyemma.util._config.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "pyemma.util._config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.util._config.mkdir_p": {
  "data": {
   "shadows": "pyemma.util.files.mkdir_p"
  },
  "type": "import"
 },
 "pyemma.util._config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.util._config.p": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyemma.util._config.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.util._config.setup_logging": {
  "data": {
   "shadows": "pyemma.util.log.setup_logging"
  },
  "type": "import"
 },
 "pyemma.util._config.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.util._config.string_to_bytes": {
  "data": {
   "shadows": "pyemma.util.units.string_to_bytes"
  },
  "type": "import"
 },
 "pyemma.util._config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.util._config.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.util._config.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pyemma.util.annotators": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.annotators.PyEMMA_DeprecationWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
  },
  "type": "import"
 },
 "pyemma.util.annotators.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.util.annotators.alias": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.util.annotators.alias.__call__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.util.annotators.alias.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "aliases",
    "set"
   ]
  },
  "type": "function"
 },
 "pyemma.util.annotators.aliased": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "aliases",
    "hasattr",
    "isinstance",
    "property",
    "pyemma.util.annotators.alias",
    "set",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyemma.util.annotators.decorate": {
  "data": {
   "shadows": "decorator.decorate"
  },
  "type": "import"
 },
 "pyemma.util.annotators.decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "pyemma.util.annotators.deprecated": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "callable",
    "decorator.decorate",
    "decorator.decorator",
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.util.annotators.deprecated._deprecated": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "func",
    "pyemma.util.annotators.get_culprit",
    "pyemma.util.annotators.warnings",
    "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "pyemma.util.annotators.fix_docs": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "isinstance",
    "property",
    "pyemma.util.annotators.inspect",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyemma.util.annotators.get_culprit": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "OSError",
    "inspect.stack",
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.util.annotators.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pyemma.util.annotators.shortcut": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "pyemma.util.annotators.shortcut.wrap": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "pyemma.util.annotators.stack": {
  "data": {
   "shadows": "inspect.stack"
  },
  "type": "import"
 },
 "pyemma.util.annotators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.util.config": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pyemma.util.contexts": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.contexts.Capturing": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "pyemma.util.contexts.Capturing.__enter__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "getattr",
    "io.StringIO",
    "pyemma.util.contexts.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyemma.util.contexts.Capturing.__exit__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyemma.util.contexts.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyemma.util.contexts.Capturing.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pyemma.util.contexts.Capturing",
    "super"
   ]
  },
  "type": "function"
 },
 "pyemma.util.contexts.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "pyemma.util.contexts.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "pyemma.util.contexts.conditional": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.util.contexts.conditional.__enter__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "pyemma.util.contexts.conditional.__exit__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "pyemma.util.contexts.conditional.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "pyemma.util.contexts.config": {
  "data": {
   "shadows": "pyemma.config"
  },
  "type": "import"
 },
 "pyemma.util.contexts.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyemma.util.contexts.named_temporary_file": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "OSError",
    "contextlib.contextmanager",
    "dir",
    "pyemma.util.contexts.os",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "pyemma.util.contexts.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.contexts.nullcontext": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.util.contexts.nullcontext.__enter__": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyemma.util.contexts.nullcontext.__exit__": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "pyemma.util.contexts.nullcontext.__init__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "pyemma.util.contexts.numpy_random_seed": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "numpy.random.get_state",
    "numpy.random.seed",
    "numpy.random.set_state"
   ]
  },
  "type": "function"
 },
 "pyemma.util.contexts.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.util.contexts.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyemma.util.contexts.random_seed": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "pyemma.util.contexts.random"
   ]
  },
  "type": "function"
 },
 "pyemma.util.contexts.settings": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "getattr",
    "pyemma.config",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyemma.util.contexts.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.util.debug": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.debug.SIGNAL_PDB": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.util.debug.SIGNAL_STACKTRACE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.util.debug.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "pyemma.util.debug._handle_pdb": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyemma.util.debug.pdb"
   ]
  },
  "type": "function"
 },
 "pyemma.util.debug._logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.util.debug._show_stacktrace": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "io.StringIO",
    "logging.getLogger",
    "pyemma.util.debug._logger",
    "pyemma.util.debug.traceback"
   ]
  },
  "type": "function"
 },
 "pyemma.util.debug.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.util.debug.pdb": {
  "data": {
   "shadows": "pdb"
  },
  "type": "import"
 },
 "pyemma.util.debug.register_signal_handlers": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pyemma.util.debug.SIGNAL_PDB",
    "pyemma.util.debug.SIGNAL_STACKTRACE",
    "pyemma.util.debug._handle_pdb",
    "pyemma.util.debug._show_stacktrace",
    "pyemma.util.debug.signal"
   ]
  },
  "type": "function"
 },
 "pyemma.util.debug.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "pyemma.util.debug.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "pyemma.util.debug.unregister_signal_handlers": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pyemma.util.debug.SIGNAL_PDB",
    "pyemma.util.debug.SIGNAL_STACKTRACE",
    "pyemma.util.debug.signal"
   ]
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.discrete_trajectories.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.util.discrete_trajectories._ensure_dtraj_list": {
  "data": {
   "shadows": "pyemma.util.types.ensure_dtraj_list"
  },
  "type": "import"
 },
 "pyemma.util.discrete_trajectories.count_states": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "max",
    "numpy.bincount",
    "numpy.where",
    "numpy.zeros",
    "pyemma.util.annotators.shortcut",
    "pyemma.util.types.ensure_dtraj_list"
   ]
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.index_states": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "enumerate",
    "int",
    "len",
    "numpy.arange",
    "numpy.max",
    "numpy.ndarray",
    "numpy.zeros",
    "object",
    "pyemma.util.discrete_trajectories.count_states",
    "pyemma.util.discrete_trajectories.number_of_states",
    "pyemma.util.types.ensure_dtraj_list",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.load_discrete_trajectory": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.load",
    "pyemma.util.annotators.shortcut"
   ]
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.discrete_trajectories.number_of_states": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "max",
    "numpy.count_nonzero",
    "numpy.max",
    "pyemma.util.annotators.shortcut",
    "pyemma.util.discrete_trajectories.count_states",
    "pyemma.util.types.ensure_dtraj_list"
   ]
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.read_discrete_trajectory": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "int",
    "numpy.fromstring",
    "open",
    "pyemma.util.annotators.shortcut"
   ]
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.sample_indexes_by_distribution": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "numpy.ndarray",
    "numpy.random.choice",
    "object",
    "pyemma.util.discrete_trajectories.sample_indexes_by_sequence"
   ]
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.sample_indexes_by_sequence": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.random.randint",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.sample_indexes_by_state": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "min",
    "numpy.arange",
    "numpy.ndarray",
    "numpy.random.choice",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.save_discrete_trajectory": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.save",
    "pyemma.util.annotators.shortcut"
   ]
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.shortcut": {
  "data": {
   "shadows": "pyemma.util.annotators.shortcut"
  },
  "type": "import"
 },
 "pyemma.util.discrete_trajectories.visited_set": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.argwhere",
    "pyemma.util.discrete_trajectories.count_states"
   ]
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.write_discrete_trajectory": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.asarray",
    "open",
    "pyemma.util.annotators.shortcut"
   ]
  },
  "type": "function"
 },
 "pyemma.util.exceptions": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.exceptions.ConfigDirectoryException": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pyemma.util.exceptions.EfficiencyWarning": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "pyemma.util.exceptions.ImaginaryEigenValueWarning": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pyemma.util.exceptions.SpectralWarning"
   ]
  },
  "type": "class"
 },
 "pyemma.util.exceptions.NotConvergedWarning": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "pyemma.util.exceptions.ParserWarning": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "pyemma.util.exceptions.PrecisionWarning": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "pyemma.util.exceptions.PyEMMA_DeprecationWarning": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "pyemma.util.exceptions.PyEMMA_UserWarning": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "pyemma.util.exceptions.SpectralWarning": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "pyemma.util.files": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.files.TemporaryDirectory": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyemma.util.files.TemporaryDirectory.__enter__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyemma.util.files.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.util.files.TemporaryDirectory.__exit__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyemma.util.files.shutil"
   ]
  },
  "type": "function"
 },
 "pyemma.util.files.TemporaryDirectory.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "pyemma.util.files.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "pyemma.util.files.mkdir_p": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "OSError",
    "pyemma.util.files.errno",
    "pyemma.util.files.os"
   ]
  },
  "type": "function"
 },
 "pyemma.util.files.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.util.files.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.util.files.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.util.indices": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.indices._combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "pyemma.util.indices.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "pyemma.util.indices.comb": {
  "data": {
   "shadows": "scipy.special.comb"
  },
  "type": "import"
 },
 "pyemma.util.indices.combinations": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "int",
    "itertools.chain.from_iterable",
    "itertools.combinations",
    "len",
    "numpy.fromiter",
    "scipy.special.comb"
   ]
  },
  "type": "function"
 },
 "pyemma.util.indices.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.indices.product": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.empty_like",
    "numpy.indices"
   ]
  },
  "type": "function"
 },
 "pyemma.util.linalg": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.linalg.__author__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyemma.util.linalg._sort_by_norm": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argsort"
   ]
  },
  "type": "function"
 },
 "pyemma.util.linalg.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma.util.linalg.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.util.linalg.mdot": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "pyemma.util.linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.linalg.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.util.linalg.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pyemma.util.linalg.submatrix": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.util.log": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.log.LoggingConfigurationError": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "pyemma.util.log.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyemma.util.log.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "pyemma.util.log.dictConfig": {
  "data": {
   "shadows": "logging.config.dictConfig"
  },
  "type": "import"
 },
 "pyemma.util.log.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.util.log.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyemma.util.log.setup_logging": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "EnvironmentError",
    "ValueError",
    "dict",
    "distutils.version.LooseVersion",
    "getattr",
    "logging.config.dictConfig",
    "open",
    "print",
    "pyemma.util.log.LoggingConfigurationError",
    "pyemma.util.log.logging",
    "pyemma.util.log.warnings",
    "pyemma.util.log.yaml",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util.log.setup_logging.clean_empty_log_files": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "OSError",
    "print",
    "pyemma.util.log.atexit",
    "pyemma.util.log.logging"
   ]
  },
  "type": "function"
 },
 "pyemma.util.log.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.util.log.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "pyemma.util.metrics": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.metrics.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma.util.metrics._svd_sym_koopman": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.linalg.svd",
    "pyemma._ext.variational.solvers.direct.spd_inv_sqrt",
    "pyemma.util.linalg.mdot"
   ]
  },
  "type": "function"
 },
 "pyemma.util.metrics.mdot": {
  "data": {
   "shadows": "pyemma.util.linalg.mdot"
  },
  "type": "import"
 },
 "pyemma.util.metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.metrics.spd_inv_sqrt": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.spd_inv_sqrt"
  },
  "type": "import"
 },
 "pyemma.util.metrics.vamp_1_score": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "pyemma._ext.variational.solvers.direct.spd_inv_sqrt",
    "pyemma.util.linalg.mdot",
    "pyemma.util.metrics._svd_sym_koopman"
   ]
  },
  "type": "function"
 },
 "pyemma.util.metrics.vamp_2_score": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "pyemma._ext.variational.solvers.direct.spd_inv_sqrt",
    "pyemma.util.linalg.mdot",
    "pyemma.util.metrics._svd_sym_koopman"
   ]
  },
  "type": "function"
 },
 "pyemma.util.metrics.vamp_e_score": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.trace",
    "pyemma.util.linalg.mdot",
    "pyemma.util.metrics._svd_sym_koopman"
   ]
  },
  "type": "function"
 },
 "pyemma.util.metrics.vamp_score": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.util.metrics.vamp_1_score",
    "pyemma.util.metrics.vamp_2_score",
    "pyemma.util.metrics.vamp_e_score",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util.numeric": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.numeric.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyemma.util.numeric.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyemma.util.numeric._hash_numpy_array": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "hash",
    "pyemma.util.numeric.hashlib",
    "scipy.sparse.issparse",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util.numeric.assert_allclose": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "pyemma.util.numeric.assert_allclose_np": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pyemma.util.numeric.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pyemma.util.numeric.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pyemma.util.numeric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.reflection": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "pyemma.util.reflection.ArgSpec": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyemma.util.reflection.__author__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyemma.util.reflection.call_member": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "method",
    "pyemma.util.reflection.inspect",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util.reflection.get_default_args": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "dict",
    "len",
    "pyemma.util.reflection.getargspec_no_self",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyemma.util.reflection.getargspec_no_self": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pyemma.util.reflection.ArgSpec",
    "pyemma.util.reflection.inspect"
   ]
  },
  "type": "function"
 },
 "pyemma.util.reflection.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pyemma.util.reflection.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyemma.util.statistics": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.statistics._column": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "NotImplementedError",
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.util.statistics._confidence_interval_1d": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "max",
    "min",
    "numpy.any",
    "numpy.isclose",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.nan",
    "numpy.searchsorted",
    "numpy.sort",
    "pyemma.util.statistics.math",
    "pyemma.util.statistics.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util.statistics._indexes": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "list",
    "numpy.array",
    "pyemma.util.statistics.itertools",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.util.statistics._maxlength": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyemma.util.statistics.confidence_interval": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "numpy.ndim",
    "numpy.zeros",
    "pyemma.util.statistics._column",
    "pyemma.util.statistics._confidence_interval_1d",
    "pyemma.util.statistics._indexes",
    "range",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyemma.util.statistics.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.util.statistics.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.util.statistics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.statistics.statistical_inefficiency": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.concatenate",
    "numpy.mean",
    "numpy.ndim",
    "numpy.sum",
    "pyemma.util.statistics._maxlength",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.util.statistics.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.util.testing_tools": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.testing_tools.MockLoggingHandler": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "pyemma.util.testing_tools.logging"
   ]
  },
  "type": "class"
 },
 "pyemma.util.testing_tools.MockLoggingHandler.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pyemma.util.testing_tools.logging"
   ]
  },
  "type": "function"
 },
 "pyemma.util.testing_tools.MockLoggingHandler.emit": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "pyemma.util.testing_tools.MockLoggingHandler.reset": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "pyemma.util.testing_tools.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.util.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.tests.__author__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pyemma.util.tests.statistics_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.util.tests.statistics_test.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.util.tests.statistics_test.TestStatistics": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyemma.util.tests.statistics_test.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.util.tests.statistics_test.TestStatistics.assertConfidence": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "pyemma.util.statistics.confidence_interval",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.statistics_test.TestStatistics.test_confidence_interval": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.random.exponential",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.statistics_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.tests.statistics_test.statistics": {
  "data": {
   "shadows": "pyemma.util.statistics"
  },
  "type": "import"
 },
 "pyemma.util.tests.statistics_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.util.tests.test_config.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.util.tests.test_config.ConfigDirectoryException": {
  "data": {
   "shadows": "pyemma.util.exceptions.ConfigDirectoryException"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.ProgressReporterMixin": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporterMixin"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.TestConfig": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyemma.util.tests.test_config.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.util.tests.test_config.TestConfig.setUp": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma.util.tests.test_config.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.tearDown": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "KeyError",
    "pyemma.util.tests.test_config.os"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_can_not_create_cfg_dir": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pyemma.util.exceptions.ConfigDirectoryException",
    "pyemma.util.tests.test_config.sys",
    "pyemma.util.tests.test_config.unittest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_config_vals_match_properties_in_wrapper": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "hasattr",
    "pyemma.config",
    "pyemma.config.default_config_file",
    "pyemma.config.keys",
    "pyemma.util.files.TemporaryDirectory",
    "pyemma.util.tests.test_config.configparser",
    "pyemma.util.tests.test_config.os",
    "pyemma.util.tests.test_config.pkg_resources",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_default_chunksize": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_interpolation_from_multiple_files": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_keys": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_load": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyemma.util.files.TemporaryDirectory",
    "pyemma.util.tests.test_config.os"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_mute_logging": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "pyemma.util.tests.test_config.logging"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_mute_progress": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "pyemma._base.progress.ProgressReporterMixin",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_non_writeable_cfg_dir": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pyemma.util.exceptions.ConfigDirectoryException",
    "pyemma.util.files.TemporaryDirectory",
    "pyemma.util.tests.test_config.os",
    "pyemma.util.tests.test_config.sys",
    "pyemma.util.tests.test_config.unittest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_save_load_no_cfg_file_given": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pyemma.util.files.TemporaryDirectory",
    "pyemma.util.tests.test_config.configparser",
    "pyemma.util.tests.test_config.os",
    "pyemma.util.tests.test_config.pyemma"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_save_load_user_cfg_file": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "pyemma.util.tests.test_config.configparser",
    "pyemma.util.tests.test_config.tempfile"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_set": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_set_non_existing_key": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_shortcut3": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_shortcuts": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_shortcuts2": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_traj_info_max_entries": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_types": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.config_module": {
  "data": {
   "shadows": "pyemma.config"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.configparser": {
  "data": {
   "shadows": "configparser"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_discrete_trajectories": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.util.tests.test_discrete_trajectories.os",
    "pyemma.util.tests.test_discrete_trajectories.pkg_resources",
    "pyemma.util.tests.test_discrete_trajectories.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestDiscreteTrajectoryStatistics": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pyemma.util.tests.test_discrete_trajectories.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestDiscreteTrajectoryStatistics.setUp": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestDiscreteTrajectoryStatistics.tearDown": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestDiscreteTrajectoryStatistics.test_count_1": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyemma.util.discrete_trajectories.count_states",
    "pyemma.util.discrete_trajectories.number_of_states"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestDiscreteTrajectoryStatistics.test_count_2": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyemma.util.discrete_trajectories.count_states",
    "pyemma.util.discrete_trajectories.number_of_states"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestDiscreteTrajectoryStatistics.test_count_3": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pyemma.util.discrete_trajectories.count_states",
    "pyemma.util.discrete_trajectories.number_of_states"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestDiscreteTrajectoryStatistics.test_count_big": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pyemma.util.discrete_trajectories.count_states",
    "pyemma.util.discrete_trajectories.number_of_states"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestIndexStates": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyemma.util.tests.test_discrete_trajectories.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestIndexStates.test_big": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "pyemma.util.discrete_trajectories.index_states"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestIndexStates.test_onetraj": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len",
    "numpy.alltrue",
    "numpy.array",
    "pyemma.util.discrete_trajectories.index_states",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestIndexStates.test_onetraj_sub": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "len",
    "numpy.alltrue",
    "numpy.array",
    "pyemma.util.discrete_trajectories.index_states",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestIndexStates.test_subset_error": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "pyemma.util.discrete_trajectories.index_states"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestIndexStates.test_twotraj": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "len",
    "numpy.alltrue",
    "numpy.array",
    "pyemma.util.discrete_trajectories.index_states",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestLoadDiscreteTrajectory": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pyemma.util.tests.test_discrete_trajectories.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestLoadDiscreteTrajectory.setUp": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pyemma.util.tests.test_discrete_trajectories.testpath"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestLoadDiscreteTrajectory.tearDown": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestLoadDiscreteTrajectory.test_load_discrete_trajectory": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.load",
    "pyemma.util.discrete_trajectories.load_discrete_trajectory"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestReadDiscreteTrajectory": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyemma.util.tests.test_discrete_trajectories.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestReadDiscreteTrajectory.setUp": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyemma.util.tests.test_discrete_trajectories.testpath"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestReadDiscreteTrajectory.tearDown": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestReadDiscreteTrajectory.test_read_discrete_trajectory": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "int",
    "numpy.all",
    "numpy.loadtxt",
    "pyemma.util.discrete_trajectories.read_discrete_trajectory"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSampleIndexes": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "pyemma.util.tests.test_discrete_trajectories.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSampleIndexes.test_sample_by_sequence": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "len",
    "numpy.alltrue",
    "pyemma.util.discrete_trajectories.index_states",
    "pyemma.util.discrete_trajectories.sample_indexes_by_sequence",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSampleIndexes.test_sample_by_state_replace": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pyemma.util.discrete_trajectories.index_states",
    "pyemma.util.discrete_trajectories.sample_indexes_by_state",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSampleIndexes.test_sample_by_state_replace_subset": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "len",
    "pyemma.util.discrete_trajectories.index_states",
    "pyemma.util.discrete_trajectories.sample_indexes_by_state",
    "range"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSaveDiscreteTrajectory": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pyemma.util.tests.test_discrete_trajectories.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSaveDiscreteTrajectory.setUp": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.arange",
    "pyemma.util.tests.test_discrete_trajectories.testpath"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSaveDiscreteTrajectory.tearDown": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pyemma.util.tests.test_discrete_trajectories.os"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSaveDiscreteTrajectory.test_save_discrete_trajectory": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.load",
    "pyemma.util.discrete_trajectories.save_discrete_trajectory"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestWriteDiscreteTrajectory": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pyemma.util.tests.test_discrete_trajectories.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestWriteDiscreteTrajectory.setUp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.arange",
    "pyemma.util.tests.test_discrete_trajectories.testpath"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestWriteDiscreteTrajectory.tearDown": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyemma.util.tests.test_discrete_trajectories.os"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestWriteDiscreteTrajectory.test_write_discrete_trajectory": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.loadtxt",
    "pyemma.util.discrete_trajectories.write_discrete_trajectory"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.dt": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_discrete_trajectories.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_discrete_trajectories.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_discrete_trajectories.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_discrete_trajectories.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_discrete_trajectories.testpath": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.util.tests.test_discrete_trajectories.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyemma.util.tests.test_log.unittest"
   ]
  },
  "type": "module"
 },
 "pyemma.util.tests.test_log.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.TestNonWriteableLogFile": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyemma.util.tests.test_log.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.util.tests.test_log.TestNonWriteableLogFile.tearDown": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyemma.util.config",
    "pyemma.util.log.setup_logging"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_log.TestNonWriteableLogFile.test": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "open",
    "pyemma.util.config",
    "pyemma.util.config.cfg_dir",
    "pyemma.util.log.setup_logging",
    "pyemma.util.tests.test_log.logging",
    "pyemma.util.tests.test_log.sys",
    "pyemma.util.tests.test_log.unittest",
    "tempfile.NamedTemporaryFile",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_log.TestNonWriteableLogFile.test_set_new_log_conf": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "open",
    "pyemma.config.logging_config",
    "pyemma.util.tests.test_log.copy",
    "pyemma.util.tests.test_log.logging",
    "pyemma.util.tests.test_log.tempfile",
    "pyemma.util.tests.test_log.unittest"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_log.config": {
  "data": {
   "shadows": "pyemma.config"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.log": {
  "data": {
   "shadows": "pyemma.util.log"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_shortcut": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.tests.test_shortcut.Foo": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object",
    "pyemma.util.annotators.aliased"
   ]
  },
  "type": "class"
 },
 "pyemma.util.tests.test_shortcut.Foo.bar": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pyemma.util.annotators.alias"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_shortcut.TestShortcut_and_Aliases": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pyemma.util.tests.test_shortcut.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.util.tests.test_shortcut.TestShortcut_and_Aliases.test_alias_class": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "hasattr",
    "pyemma.util.tests.test_shortcut.Foo"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_shortcut.TestShortcut_and_Aliases.test_alias_class_inst": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "hasattr",
    "pyemma.util.tests.test_shortcut.Foo"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_shortcut.TestShortcut_and_Aliases.test_shortcut": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bar",
    "bar2",
    "pyemma.util.tests.test_shortcut.foo"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_shortcut.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_shortcut.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_shortcut.foo": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pyemma.util.annotators.shortcut"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_shortcut.shortcut": {
  "data": {
   "shadows": "pyemma.util.annotators.shortcut"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_shortcut.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_units": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.tests.test_units.TestUnits": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "pyemma.util.tests.test_units.unittest"
   ]
  },
  "type": "class"
 },
 "pyemma.util.tests.test_units.TestUnits.test_human_readable_byte_size": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pyemma.util.units.bytes_to_string"
   ]
  },
  "type": "function"
 },
 "pyemma.util.tests.test_units.bytes_to_string": {
  "data": {
   "shadows": "pyemma.util.units.bytes_to_string"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_units.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.util.units": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.units.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.util.units.TimeUnit": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyemma._base.serialization.serialization.SerializableMixIn"
   ]
  },
  "type": "class"
 },
 "pyemma.util.units.TimeUnit.__eq__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "isinstance",
    "pyemma.util.units.TimeUnit"
   ]
  },
  "type": "function"
 },
 "pyemma.util.units.TimeUnit.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "len",
    "pyemma.util.units.TimeUnit",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util.units.TimeUnit.__repr__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pyemma.util.units.TimeUnit.__str__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyemma.util.units.TimeUnit.dt": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.util.units.TimeUnit.get_scaled": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pyemma.util.units.TimeUnit"
   ]
  },
  "type": "function"
 },
 "pyemma.util.units.TimeUnit.rescale_around1": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "pyemma.util.units.TimeUnit.unit": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyemma.util.units.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.util.units.bytes_to_string": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "abs",
    "float",
    "int",
    "numpy.sign",
    "pyemma.util.units.math"
   ]
  },
  "type": "function"
 },
 "pyemma.util.units.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.util.units.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.units.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyemma.util.units.string_to_bytes": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "RuntimeError",
    "float",
    "int",
    "pyemma.util.units.re"
   ]
  },
  "type": "function"
 },
 "pyemma.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "pyemma.version": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyemma.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}