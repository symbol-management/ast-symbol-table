{
 "feature_sel": {
  "data": {},
  "type": "module"
 },
 "feature_sel.analysis": {
  "data": {},
  "type": "module"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented": {
  "data": {
   "symbols_in_volume": {
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.combined_estimator": {
     "line number": [
      48,
      49
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.contacts": {
     "line number": [
      34,
      36,
      40,
      51,
      51
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.covariances": {
     "line number": [
      77,
      78
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.data": {
     "line number": [
      37,
      38,
      42,
      47,
      49
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.data_flex": {
     "line number": [
      25,
      36,
      39,
      50,
      50
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.dim": {
     "line number": [
      47,
      50,
      51,
      53
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.feat_flex": {
     "line number": [
      21,
      22,
      24
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.feat_res_mindist": {
     "line number": [
      28,
      29
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.first_half": {
     "line number": [
      47,
      50,
      51
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.lag": {
     "line number": [
      47,
      50,
      51
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.length": {
     "line number": [
      43,
      44,
      44
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.mask": {
     "line number": [
      34
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.path": {
     "line number": [
      9,
      10
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.pyemma": {
     "line number": [
      16,
      17,
      18,
      20,
      24,
      27,
      29,
      38,
      39,
      40,
      47,
      50,
      51
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.res_mindist": {
     "line number": [
      30,
      32,
      33
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.score_combined": {
     "line number": [
      53
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.score_contacts": {
     "line number": [
      55
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.score_flex": {
     "line number": [
      54
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.snd_half": {
     "line number": [
      49,
      50,
      51
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.top": {
     "line number": [
      20,
      27
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.trajs": {
     "line number": [
      24,
      29
     ]
    },
    "glob.glob": {
     "line number": [
      9,
      10
     ]
    },
    "numpy.concatenate": {
     "line number": [
      36
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      33
     ]
    },
    "print": {
     "line number": [
      25,
      30,
      37,
      53,
      54,
      55,
      80,
      81,
      82,
      84,
      85,
      86
     ]
    },
    "slice": {
     "line number": [
      43,
      44
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.Covariances": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.Covariances"
  },
  "type": "import"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.combined_estimator": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.contacts": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.covariances": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.combined_estimator": {
     "line number": [
      62
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.contacts": {
     "line number": [
      72
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.data": {
     "line number": [
      60
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.data_flex": {
     "line number": [
      69
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.dim": {
     "line number": [
      67,
      70,
      73
     ]
    },
    "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.lag": {
     "line number": [
      59
     ]
    },
    "max": {
     "line number": [
      61
     ]
    },
    "numpy.arange": {
     "line number": [
      65
     ]
    },
    "numpy.random.random_integers": {
     "line number": [
      64
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      65
     ]
    },
    "pyemma.coordinates.estimation.covariance.Covariances": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.data": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.data_flex": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.dim": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.feat_flex": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.feat_res_mindist": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.first_half": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.lag": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.length": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.mask": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.path": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.res_mindist": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.score_combined": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.score_contacts": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.score_flex": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.snd_half": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.top": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "feature_sel.analysis.best_contact_flex_torsions_chignolin_fragmented.trajs": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      169
     ]
    },
    "enumerate": {
     "line number": [
      40
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.argparse": {
     "line number": [
      174
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.args": {
     "line number": [
      182,
      186,
      186
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.grid": {
     "line number": [
      39,
      40
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.os": {
     "line number": [
      12,
      183
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.output_path": {
     "line number": [
      183
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.parser": {
     "line number": [
      175,
      176,
      177,
      178,
      179,
      180
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.pyemma": {
     "line number": [
      6
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.run": {
     "line number": [
      186
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.sys": {
     "line number": [
      12,
      184
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.test_systems": {
     "line number": [
      33
     ]
    },
    "int": {
     "line number": [
      176,
      179
     ]
    },
    "len": {
     "line number": [
      39
     ]
    },
    "print": {
     "line number": [
      6,
      39,
      41
     ]
    },
    "pyemma._ext.sklearn.parameter_search.ParameterGrid": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.ParameterGrid": {
  "data": {
   "shadows": "pyemma._ext.sklearn.parameter_search.ParameterGrid"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.args": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.best_scoring_contact_feature": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "cmp": {
     "line number": [
      65
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.re": {
     "line number": [
      74
     ]
    },
    "float": {
     "line number": [
      50,
      76
     ]
    },
    "glob.glob": {
     "line number": [
      48
     ]
    },
    "numpy.load": {
     "line number": [
      62
     ]
    },
    "print": {
     "line number": [
      52,
      66,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.best_scoring_contact_feature.cmp": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.combine_sources": {
  "data": {
   "shadows": "pyemma.coordinates.combine_sources"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.e": {
  "data": {
   "shadows": "estimate"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.estimate": {
  "data": {
   "shadows": "estimate"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.get_best_contact_flex_torsions_reader": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      162
     ]
    },
    "paths.DistTrans": {
     "line number": [
      159,
      162
     ]
    },
    "paths.create_fragmented_reader": {
     "line number": [
      153,
      154
     ]
    },
    "pyemma.coordinates.combine_sources": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.grid": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.output_path": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.p": {
  "data": {
   "shadows": "paths"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.parser": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.run": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      137
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.best_scoring_contact_feature": {
     "line number": [
      106
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.estimate": {
     "line number": [
      109,
      127,
      138
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.get_best_contact_flex_torsions_reader": {
     "line number": [
      108
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.grid": {
     "line number": [
      83,
      96,
      97,
      103
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.os": {
     "line number": [
      97,
      99,
      103,
      104
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.pyemma": {
     "line number": [
      115
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.socket": {
     "line number": [
      139
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.sys": {
     "line number": [
      144
     ]
    },
    "feature_sel.analysis.calc_cov_best_contacts_torsions.traceback": {
     "line number": [
      141
     ]
    },
    "numpy.array": {
     "line number": [
      119
     ]
    },
    "paths.get_output_file_name": {
     "line number": [
      97,
      103
     ]
    },
    "print": {
     "line number": [
      82,
      98,
      100,
      105,
      111,
      114,
      135,
      138,
      139,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.test_systems": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_best_contacts_torsions.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_expd_torsions": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      132
     ]
    },
    "enumerate": {
     "line number": [
      40
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.argparse": {
     "line number": [
      137
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.args": {
     "line number": [
      145,
      149,
      149
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.grid": {
     "line number": [
      39,
      40
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.os": {
     "line number": [
      12,
      146
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.output_path": {
     "line number": [
      146
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.parser": {
     "line number": [
      138,
      139,
      140,
      141,
      142,
      143
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.pyemma": {
     "line number": [
      6
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.run": {
     "line number": [
      149
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.sys": {
     "line number": [
      12,
      147
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.test_systems": {
     "line number": [
      33
     ]
    },
    "int": {
     "line number": [
      139,
      142
     ]
    },
    "len": {
     "line number": [
      39
     ]
    },
    "print": {
     "line number": [
      6,
      39,
      41
     ]
    },
    "pyemma._ext.sklearn.parameter_search.ParameterGrid": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.ParameterGrid": {
  "data": {
   "shadows": "pyemma._ext.sklearn.parameter_search.ParameterGrid"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.args": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.combine_sources": {
  "data": {
   "shadows": "pyemma.coordinates.combine_sources"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.e": {
  "data": {
   "shadows": "estimate"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.estimate": {
  "data": {
   "shadows": "estimate"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.get_expd_flex_torsions_reader": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      125
     ]
    },
    "paths.DistTrans": {
     "line number": [
      125
     ]
    },
    "paths.create_fragmented_reader": {
     "line number": [
      116,
      117
     ]
    },
    "pyemma.coordinates.combine_sources": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.grid": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.output_path": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.p": {
  "data": {
   "shadows": "paths"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.parser": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.run": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      100
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.estimate": {
     "line number": [
      74,
      90,
      101
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.get_expd_flex_torsions_reader": {
     "line number": [
      56
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.grid": {
     "line number": [
      45,
      59,
      60,
      66
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.os": {
     "line number": [
      60,
      62,
      66,
      68
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.pyemma": {
     "line number": [
      80
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.socket": {
     "line number": [
      102
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.sys": {
     "line number": [
      107
     ]
    },
    "feature_sel.analysis.calc_cov_expd_torsions.traceback": {
     "line number": [
      104
     ]
    },
    "numpy.array": {
     "line number": [
      83
     ]
    },
    "paths.get_output_file_name": {
     "line number": [
      60,
      66
     ]
    },
    "print": {
     "line number": [
      44,
      61,
      63,
      67,
      69,
      76,
      79,
      98,
      101,
      102,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.test_systems": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_expd_torsions.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      132
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.argparse": {
     "line number": [
      49
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.args": {
     "line number": [
      55,
      60,
      133
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.features": {
     "line number": [
      61
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.grid": {
     "line number": [
      65
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.os": {
     "line number": [
      56
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.output_path": {
     "line number": [
      56
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.parser": {
     "line number": [
      50,
      51,
      52,
      53
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.pyemma": {
     "line number": [
      9
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.run": {
     "line number": [
      133
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.sys": {
     "line number": [
      11,
      12
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.test_systems": {
     "line number": [
      59
     ]
    },
    "int": {
     "line number": [
      51,
      52
     ]
    },
    "len": {
     "line number": [
      65
     ]
    },
    "list": {
     "line number": [
      61
     ]
    },
    "print": {
     "line number": [
      9,
      65
     ]
    },
    "pyemma._ext.sklearn.parameter_search.ParameterGrid": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.calc_cov_single_feat.ParameterGrid": {
  "data": {
   "shadows": "pyemma._ext.sklearn.parameter_search.ParameterGrid"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat.__myrepr__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "str": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat.args": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat.e": {
  "data": {
   "shadows": "estimate"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat.features": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat.get_output_file_name": {
  "data": {
   "shadows": "paths.get_output_file_name"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat.grid": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat.missing": {
  "data": {
   "shadows": "paths.missing"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat.output_path": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat.parser": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat.run": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      124
     ]
    },
    "estimate": {
     "line number": [
      125
     ]
    },
    "estimate.estimate_covs": {
     "line number": [
      110
     ]
    },
    "estimate.score_and_save": {
     "line number": [
      116
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.grid": {
     "line number": [
      79,
      89,
      91,
      94
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.os": {
     "line number": [
      92,
      94,
      96,
      108
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.output_path": {
     "line number": [
      92,
      94
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.pyemma": {
     "line number": [
      83,
      114
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat.traceback": {
     "line number": [
      127
     ]
    },
    "numpy.array": {
     "line number": [
      99
     ]
    },
    "paths.get_output_file_name": {
     "line number": [
      91,
      94
     ]
    },
    "print": {
     "line number": [
      78,
      95,
      97,
      109,
      113,
      125,
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat.test_systems": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d": {
  "data": {
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      240
     ]
    },
    "ValueError": {
     "line number": [
      240
     ]
    },
    "__name__": {
     "line number": [
      236
     ]
    },
    "celery.Celery": {
     "line number": [
      133
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.PRE_CALC_FEATURES_PATH": {
     "line number": [
      52
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.broker_url": {
     "line number": [
      133
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.features": {
     "line number": [
      53,
      92
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.grid": {
     "line number": [
      98
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.id_": {
     "line number": [
      239
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.pyemma": {
     "line number": [
      6
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.run": {
     "line number": [
      239
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.sys": {
     "line number": [
      238
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.test_systems": {
     "line number": [
      56,
      90
     ]
    },
    "glob.glob": {
     "line number": [
      52
     ]
    },
    "int": {
     "line number": [
      238
     ]
    },
    "len": {
     "line number": [
      98
     ]
    },
    "list": {
     "line number": [
      92
     ]
    },
    "print": {
     "line number": [
      6,
      98
     ]
    },
    "pyemma._ext.sklearn.parameter_search.ParameterGrid": {
     "line number": [
      90
     ]
    },
    "sorted": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.Celery": {
  "data": {
   "shadows": "celery.Celery"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.Covariances": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.Covariances"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.DistTrans": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "class"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.DistTrans.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "feature_sel.analysis.calc_cov_single_feat_a3d.DistTrans": {
     "line number": [
      106
     ]
    },
    "super": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.DistTrans._transform_array": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      117
     ]
    },
    "numpy.sqrt": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.DistTrans.describe": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.DistTrans.dimension": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "feature_sel.analysis.calc_cov_single_feat_a3d.DistTrans": {
     "line number": [
      129
     ]
    },
    "super": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.PRE_CALC_FEATURES_PATH": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.ParameterGrid": {
  "data": {
   "shadows": "pyemma._ext.sklearn.parameter_search.ParameterGrid"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.RAW_TRAJS_PATH": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.StreamingTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingTransformer"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.app": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.broker_url": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.create_traj_top_pairs": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "feature_sel.analysis.calc_cov_single_feat_a3d.RAW_TRAJS_PATH": {
     "line number": [
      64,
      66,
      68,
      69
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.re": {
     "line number": [
      77
     ]
    },
    "filter": {
     "line number": [
      81
     ]
    },
    "glob.glob": {
     "line number": [
      66,
      69,
      70
     ]
    },
    "int": {
     "line number": [
      79
     ]
    },
    "list": {
     "line number": [
      81
     ]
    },
    "print": {
     "line number": [
      65
     ]
    },
    "sorted": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.features": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.featurizer": {
  "data": {
   "shadows": "pyemma.coordinates.featurizer"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.files": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.grid": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.group": {
  "data": {
   "shadows": "celery.group"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.id_": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.output_path": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.run": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      228
     ]
    },
    "create_featurizer": {
     "line number": [
      175
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.DistTrans": {
     "line number": [
      207
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.app": {
     "line number": [
      137
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.create_traj_top_pairs": {
     "line number": [
      160
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.files": {
     "line number": [
      179,
      181
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.grid": {
     "line number": [
      140
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.os": {
     "line number": [
      154
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.output_path": {
     "line number": [
      145
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.re": {
     "line number": [
      187,
      202,
      206
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_a3d.traceback": {
     "line number": [
      231
     ]
    },
    "filter": {
     "line number": [
      193
     ]
    },
    "float": {
     "line number": [
      204
     ]
    },
    "id": {
     "line number": [
      139,
      140,
      229
     ]
    },
    "int": {
     "line number": [
      189
     ]
    },
    "list": {
     "line number": [
      192
     ]
    },
    "numpy.array": {
     "line number": [
      217
     ]
    },
    "numpy.savez_compressed": {
     "line number": [
      226
     ]
    },
    "print": {
     "line number": [
      139,
      153,
      155,
      229,
      233
     ]
    },
    "pyemma.coordinates.estimation.covariance.Covariances": {
     "line number": [
      213
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      175,
      197
     ]
    },
    "sklearn.model_selection.KFold": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.run.create_featurizer": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "feature_sel.analysis.calc_cov_single_feat_a3d.mdtraj": {
     "line number": [
      166
     ]
    },
    "pyemma.coordinates.featurizer": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.run.create_featurizer.center": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "len": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.test_systems": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_a3d.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      133
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.__myrepr__": {
     "line number": [
      72
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.argparse": {
     "line number": [
      47
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.args": {
     "line number": [
      53,
      58,
      134
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.features": {
     "line number": [
      59
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.grid": {
     "line number": [
      64,
      72
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.os": {
     "line number": [
      54
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.output_path": {
     "line number": [
      54,
      72
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.parser": {
     "line number": [
      48,
      49,
      50,
      51
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.pyemma": {
     "line number": [
      9
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.run": {
     "line number": [
      134
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.sys": {
     "line number": [
      11,
      12
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.test_systems": {
     "line number": [
      57
     ]
    },
    "int": {
     "line number": [
      49,
      50
     ]
    },
    "len": {
     "line number": [
      64
     ]
    },
    "list": {
     "line number": [
      59
     ]
    },
    "paths.missing": {
     "line number": [
      72
     ]
    },
    "print": {
     "line number": [
      9,
      64,
      72
     ]
    },
    "pyemma._ext.sklearn.parameter_search.ParameterGrid": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.ParameterGrid": {
  "data": {
   "shadows": "pyemma._ext.sklearn.parameter_search.ParameterGrid"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.__myrepr__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "str": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.args": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.e": {
  "data": {
   "shadows": "estimate"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.features": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.get_output_file_name": {
  "data": {
   "shadows": "paths.get_output_file_name"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.grid": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.missing": {
  "data": {
   "shadows": "paths.missing"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.output_path": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.parser": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.run": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      125
     ]
    },
    "estimate": {
     "line number": [
      126
     ]
    },
    "estimate.estimate_covs": {
     "line number": [
      111
     ]
    },
    "estimate.score_and_save": {
     "line number": [
      117
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.grid": {
     "line number": [
      78,
      88,
      90,
      92,
      95
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.os": {
     "line number": [
      93,
      95,
      97,
      109
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.output_path": {
     "line number": [
      93,
      95
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.pyemma": {
     "line number": [
      82,
      115
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_lags.traceback": {
     "line number": [
      128
     ]
    },
    "numpy.array": {
     "line number": [
      100
     ]
    },
    "paths.get_output_file_name": {
     "line number": [
      92,
      95
     ]
    },
    "print": {
     "line number": [
      77,
      96,
      98,
      110,
      114,
      126,
      130
     ]
    },
    "range": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.test_systems": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_lags.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist": {
  "data": {
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      229
     ]
    },
    "ValueError": {
     "line number": [
      229
     ]
    },
    "__name__": {
     "line number": [
      225
     ]
    },
    "celery.Celery": {
     "line number": [
      145
     ]
    },
    "enumerate": {
     "line number": [
      110
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.PRE_CALC_FEATURES_PATH": {
     "line number": [
      60
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.broker_url": {
     "line number": [
      145
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.features": {
     "line number": [
      61
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.grid": {
     "line number": [
      109,
      110
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.id_": {
     "line number": [
      228
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.pyemma": {
     "line number": [
      6
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.run": {
     "line number": [
      228
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.sys": {
     "line number": [
      227,
      231
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.test_systems": {
     "line number": [
      64,
      99
     ]
    },
    "glob.glob": {
     "line number": [
      60
     ]
    },
    "int": {
     "line number": [
      227
     ]
    },
    "len": {
     "line number": [
      109
     ]
    },
    "print": {
     "line number": [
      6,
      109,
      111,
      230
     ]
    },
    "pyemma._ext.sklearn.parameter_search.ParameterGrid": {
     "line number": [
      98
     ]
    },
    "sorted": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.Celery": {
  "data": {
   "shadows": "celery.Celery"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.Covariances": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.Covariances"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.DistTrans": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "class"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.DistTrans.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.DistTrans": {
     "line number": [
      117
     ]
    },
    "super": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.DistTrans._transform_array": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      129
     ]
    },
    "numpy.sqrt": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.DistTrans.describe": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.DistTrans.dimension": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.DistTrans": {
     "line number": [
      141
     ]
    },
    "super": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.PRE_CALC_FEATURES_PATH": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.ParameterGrid": {
  "data": {
   "shadows": "pyemma._ext.sklearn.parameter_search.ParameterGrid"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.RAW_TRAJS_PATH": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.StreamingTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingTransformer"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.app": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.broker_url": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.create_traj_top_pairs": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.RAW_TRAJS_PATH": {
     "line number": [
      72,
      74,
      76,
      77
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.re": {
     "line number": [
      85
     ]
    },
    "filter": {
     "line number": [
      89
     ]
    },
    "glob.glob": {
     "line number": [
      74,
      77,
      78
     ]
    },
    "int": {
     "line number": [
      87
     ]
    },
    "list": {
     "line number": [
      89
     ]
    },
    "print": {
     "line number": [
      73
     ]
    },
    "sorted": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.features": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.featurizer": {
  "data": {
   "shadows": "pyemma.coordinates.featurizer"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.files": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.grid": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.id_": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.output_path": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.run": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      217
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.DistTrans": {
     "line number": [
      196
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.app": {
     "line number": [
      148
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.files": {
     "line number": [
      170
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.grid": {
     "line number": [
      151
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.os": {
     "line number": [
      165
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.output_path": {
     "line number": [
      156
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.re": {
     "line number": [
      176,
      191,
      195
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist.traceback": {
     "line number": [
      220
     ]
    },
    "filter": {
     "line number": [
      182
     ]
    },
    "float": {
     "line number": [
      193
     ]
    },
    "id": {
     "line number": [
      150,
      151,
      218
     ]
    },
    "int": {
     "line number": [
      178
     ]
    },
    "list": {
     "line number": [
      181
     ]
    },
    "numpy.array": {
     "line number": [
      206
     ]
    },
    "numpy.savez_compressed": {
     "line number": [
      215
     ]
    },
    "print": {
     "line number": [
      150,
      164,
      166,
      218,
      222
     ]
    },
    "pyemma.coordinates.estimation.covariance.Covariances": {
     "line number": [
      202
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      186
     ]
    },
    "sklearn.model_selection.KFold": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.test_systems": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new": {
  "data": {
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      229
     ]
    },
    "ValueError": {
     "line number": [
      229
     ]
    },
    "__name__": {
     "line number": [
      225
     ]
    },
    "celery.Celery": {
     "line number": [
      145
     ]
    },
    "enumerate": {
     "line number": [
      110
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.PRE_CALC_FEATURES_PATH": {
     "line number": [
      60
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.broker_url": {
     "line number": [
      145
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.features": {
     "line number": [
      61,
      100
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.grid": {
     "line number": [
      109,
      110
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.id_": {
     "line number": [
      228
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.pyemma": {
     "line number": [
      6
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.run": {
     "line number": [
      228
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.sys": {
     "line number": [
      227,
      231
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.test_systems": {
     "line number": [
      64,
      99
     ]
    },
    "glob.glob": {
     "line number": [
      60
     ]
    },
    "int": {
     "line number": [
      227
     ]
    },
    "len": {
     "line number": [
      109
     ]
    },
    "print": {
     "line number": [
      6,
      109,
      111,
      230
     ]
    },
    "pyemma._ext.sklearn.parameter_search.ParameterGrid": {
     "line number": [
      98
     ]
    },
    "sorted": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.Celery": {
  "data": {
   "shadows": "celery.Celery"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.Covariances": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.Covariances"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.DistTrans": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "class"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.DistTrans.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.DistTrans": {
     "line number": [
      117
     ]
    },
    "super": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.DistTrans._transform_array": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      129
     ]
    },
    "numpy.sqrt": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.DistTrans.describe": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.DistTrans.dimension": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.DistTrans": {
     "line number": [
      141
     ]
    },
    "super": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.PRE_CALC_FEATURES_PATH": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.ParameterGrid": {
  "data": {
   "shadows": "pyemma._ext.sklearn.parameter_search.ParameterGrid"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.RAW_TRAJS_PATH": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.StreamingTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingTransformer"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.app": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.broker_url": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.create_traj_top_pairs": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.RAW_TRAJS_PATH": {
     "line number": [
      72,
      74,
      76,
      77
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.re": {
     "line number": [
      85
     ]
    },
    "filter": {
     "line number": [
      89
     ]
    },
    "glob.glob": {
     "line number": [
      74,
      77,
      78
     ]
    },
    "int": {
     "line number": [
      87
     ]
    },
    "list": {
     "line number": [
      89
     ]
    },
    "print": {
     "line number": [
      73
     ]
    },
    "sorted": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.features": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.files": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.grid": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.id_": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.output_path": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.run": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      217
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.DistTrans": {
     "line number": [
      196
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.app": {
     "line number": [
      148
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.files": {
     "line number": [
      170
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.grid": {
     "line number": [
      151
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.os": {
     "line number": [
      165
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.output_path": {
     "line number": [
      156
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.re": {
     "line number": [
      176,
      191,
      195
     ]
    },
    "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.traceback": {
     "line number": [
      220
     ]
    },
    "filter": {
     "line number": [
      182
     ]
    },
    "float": {
     "line number": [
      193
     ]
    },
    "id": {
     "line number": [
      150,
      151,
      218
     ]
    },
    "int": {
     "line number": [
      178
     ]
    },
    "list": {
     "line number": [
      181
     ]
    },
    "numpy.array": {
     "line number": [
      206
     ]
    },
    "numpy.savez_compressed": {
     "line number": [
      215
     ]
    },
    "print": {
     "line number": [
      150,
      164,
      166,
      218,
      222
     ]
    },
    "pyemma.coordinates.estimation.covariance.Covariances": {
     "line number": [
      202
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      186
     ]
    },
    "sklearn.model_selection.KFold": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.test_systems": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "feature_sel.analysis.calc_cov_single_feat_res_mindist_new.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      189
     ]
    },
    "enumerate": {
     "line number": [
      66
     ]
    },
    "feature_sel.analysis.clustering_cv.argparse": {
     "line number": [
      71
     ]
    },
    "feature_sel.analysis.clustering_cv.args": {
     "line number": [
      77,
      190
     ]
    },
    "feature_sel.analysis.clustering_cv.features": {
     "line number": [
      61
     ]
    },
    "feature_sel.analysis.clustering_cv.grid": {
     "line number": [
      66
     ]
    },
    "feature_sel.analysis.clustering_cv.h": {
     "line number": [
      12,
      13
     ]
    },
    "feature_sel.analysis.clustering_cv.hashlib": {
     "line number": [
      11
     ]
    },
    "feature_sel.analysis.clustering_cv.matplotlib": {
     "line number": [
      6
     ]
    },
    "feature_sel.analysis.clustering_cv.os": {
     "line number": [
      79
     ]
    },
    "feature_sel.analysis.clustering_cv.output_path": {
     "line number": [
      79
     ]
    },
    "feature_sel.analysis.clustering_cv.parser": {
     "line number": [
      72,
      73,
      74,
      75
     ]
    },
    "feature_sel.analysis.clustering_cv.pyemma": {
     "line number": [
      15
     ]
    },
    "feature_sel.analysis.clustering_cv.run": {
     "line number": [
      190
     ]
    },
    "feature_sel.analysis.clustering_cv.sys": {
     "line number": [
      80
     ]
    },
    "feature_sel.analysis.clustering_cv.test_systems": {
     "line number": [
      58
     ]
    },
    "int": {
     "line number": [
      74
     ]
    },
    "open": {
     "line number": [
      12
     ]
    },
    "print": {
     "line number": [
      13,
      15,
      67
     ]
    },
    "pyemma._ext.sklearn.parameter_search.ParameterGrid": {
     "line number": [
      58
     ]
    },
    "pyemma.util.debug.register_signal_handlers": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.clustering_cv.H5File": {
  "data": {
   "shadows": "pyemma._base.serialization.h5file.H5File"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.ParameterGrid": {
  "data": {
   "shadows": "pyemma._ext.sklearn.parameter_search.ParameterGrid"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv._recreate_vamp_obj_from_covs": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "feature_sel.analysis.clustering_cv.args": {
     "line number": [
      107
     ]
    },
    "feature_sel.analysis.clustering_cv.grid": {
     "line number": [
      102,
      103,
      107
     ]
    },
    "feature_sel.analysis.clustering_cv.os": {
     "line number": [
      107
     ]
    },
    "feature_sel.analysis.clustering_cv.pyemma": {
     "line number": [
      105,
      108
     ]
    },
    "paths.get_output_file_name": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.clustering_cv.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.args": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "feature_sel.analysis.clustering_cv.blocksplit_dtrajs": {
  "data": {
   "shadows": "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.features": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "feature_sel.analysis.clustering_cv.get_expd_flex_torsions_reader": {
  "data": {
   "shadows": "calc_cov_expd_torsions.get_expd_flex_torsions_reader"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.get_output_file_name": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "collections.namedtuple": {
     "line number": [
      97
     ]
    },
    "feature_sel.analysis.clustering_cv.grid": {
     "line number": [
      84
     ]
    },
    "feature_sel.analysis.clustering_cv.os": {
     "line number": [
      89,
      92
     ]
    },
    "feature_sel.analysis.clustering_cv.output_path": {
     "line number": [
      89,
      92
     ]
    },
    "t": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.clustering_cv.grid": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "feature_sel.analysis.clustering_cv.h": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "feature_sel.analysis.clustering_cv.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.k_per_system": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "feature_sel.analysis.clustering_cv.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.out_name_score": {
  "data": {
   "shadows": "paths.get_output_file_name"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.output_path": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "feature_sel.analysis.clustering_cv.p": {
  "data": {
   "shadows": "paths"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.parser": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "feature_sel.analysis.clustering_cv.pdb": {
  "data": {
   "shadows": "pdb"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.reg": {
  "data": {
   "shadows": "pyemma.util.debug.register_signal_handlers"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.run": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      178
     ]
    },
    "calc_cov_expd_torsions.get_expd_flex_torsions_reader": {
     "line number": [
      136
     ]
    },
    "dict": {
     "line number": [
      163
     ]
    },
    "feature_sel.analysis.clustering_cv._recreate_vamp_obj_from_covs": {
     "line number": [
      143
     ]
    },
    "feature_sel.analysis.clustering_cv.grid": {
     "line number": [
      121,
      123,
      124,
      127,
      143,
      149
     ]
    },
    "feature_sel.analysis.clustering_cv.h5py": {
     "line number": [
      176
     ]
    },
    "feature_sel.analysis.clustering_cv.os": {
     "line number": [
      128
     ]
    },
    "feature_sel.analysis.clustering_cv.pdb": {
     "line number": [
      183
     ]
    },
    "feature_sel.analysis.clustering_cv.pyemma": {
     "line number": [
      164,
      170
     ]
    },
    "feature_sel.analysis.clustering_cv.sys": {
     "line number": [
      181
     ]
    },
    "feature_sel.analysis.clustering_cv.traceback": {
     "line number": [
      181
     ]
    },
    "filter": {
     "line number": [
      155
     ]
    },
    "list": {
     "line number": [
      155
     ]
    },
    "next": {
     "line number": [
      145
     ]
    },
    "numpy.all": {
     "line number": [
      140
     ]
    },
    "numpy.array": {
     "line number": [
      153,
      177
     ]
    },
    "paths.create_cartesian_reader": {
     "line number": [
      133
     ]
    },
    "paths.create_fragmented_reader": {
     "line number": [
      138
     ]
    },
    "paths.get_output_file_name": {
     "line number": [
      127,
      149
     ]
    },
    "print": {
     "line number": [
      120,
      128,
      162,
      179,
      186
     ]
    },
    "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs": {
     "line number": [
      153
     ]
    },
    "range": {
     "line number": [
      158
     ]
    },
    "sklearn.model_selection.train_test_split": {
     "line number": [
      159
     ]
    },
    "str": {
     "line number": [
      173
     ]
    },
    "sum": {
     "line number": [
      160,
      161
     ]
    },
    "t": {
     "line number": [
      143
     ]
    },
    "t.data_producer": {
     "line number": [
      144
     ]
    },
    "t.get_output": {
     "line number": [
      147
     ]
    },
    "t.iterator": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.clustering_cv.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.test_systems": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "feature_sel.analysis.clustering_cv.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "feature_sel.analysis.clustering_cv.train_test_split": {
  "data": {
   "shadows": "sklearn.model_selection.train_test_split"
  },
  "type": "import"
 },
 "feature_sel.analysis.dbg": {
  "data": {
   "symbols_in_volume": {
    "feature_sel.analysis.dbg.pydevd": {
     "line number": [
      6
     ]
    },
    "feature_sel.analysis.dbg.sys": {
     "line number": [
      2
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.dbg.pydevd": {
  "data": {
   "shadows": "pydevd"
  },
  "type": "import"
 },
 "feature_sel.analysis.dbg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.analysis.estimate": {
  "data": {
   "symbols_in_volume": {
    "feature_sel.analysis.estimate.os": {
     "line number": [
      6
     ]
    },
    "feature_sel.analysis.estimate.sys": {
     "line number": [
      6,
      7
     ]
    },
    "print": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.estimate.Covariances": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.Covariances"
  },
  "type": "import"
 },
 "feature_sel.analysis.estimate.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "feature_sel.analysis.estimate.LeaveOneOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeaveOneOut"
  },
  "type": "import"
 },
 "feature_sel.analysis.estimate.estimate_covs": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "feature_sel.analysis.estimate.os": {
     "line number": [
      25
     ]
    },
    "numpy.all": {
     "line number": [
      33
     ]
    },
    "paths.create_cartesian_reader": {
     "line number": [
      29
     ]
    },
    "paths.create_fragmented_reader": {
     "line number": [
      31
     ]
    },
    "print": {
     "line number": [
      25
     ]
    },
    "pyemma.coordinates.estimation.covariance.Covariances": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.estimate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.estimate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.analysis.estimate.p": {
  "data": {
   "shadows": "paths"
  },
  "type": "import"
 },
 "feature_sel.analysis.estimate.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "feature_sel.analysis.estimate.score_and_save": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      52
     ]
    },
    "numpy.array": {
     "line number": [
      53
     ]
    },
    "numpy.savez_compressed": {
     "line number": [
      59
     ]
    },
    "print": {
     "line number": [
      57
     ]
    },
    "sklearn.model_selection.KFold": {
     "line number": [
      45
     ]
    },
    "sklearn.model_selection.LeaveOneOut": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.estimate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.analysis.grid": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      30
     ]
    },
    "enumerate": {
     "line number": [
      70
     ]
    },
    "feature_sel.analysis.grid.GroupGrid": {
     "line number": [
      64
     ]
    },
    "feature_sel.analysis.grid.features": {
     "line number": [
      66
     ]
    },
    "feature_sel.analysis.grid.grid": {
     "line number": [
      69,
      70
     ]
    },
    "feature_sel.analysis.grid.scores": {
     "line number": [
      67
     ]
    },
    "feature_sel.analysis.grid.test_systems": {
     "line number": [
      65
     ]
    },
    "len": {
     "line number": [
      69
     ]
    },
    "print": {
     "line number": [
      69,
      71
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.grid.GroupGrid": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "sklearn.model_selection.ParameterGrid": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "class"
 },
 "feature_sel.analysis.grid.GroupGrid.__iter__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      26
     ]
    },
    "itertools.product": {
     "line number": [
      25
     ]
    },
    "sorted": {
     "line number": [
      19
     ]
    },
    "zip": {
     "line number": [
      24,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.grid.ParameterGrid": {
  "data": {
   "shadows": "sklearn.model_selection.ParameterGrid"
  },
  "type": "import"
 },
 "feature_sel.analysis.grid.features": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "feature_sel.analysis.grid.grid": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "feature_sel.analysis.grid.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "feature_sel.analysis.grid.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "feature_sel.analysis.grid.scores": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "feature_sel.analysis.grid.test_systems": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      198
     ]
    },
    "feature_sel.analysis.msm.__myrepr__": {
     "line number": [
      106
     ]
    },
    "feature_sel.analysis.msm.argparse": {
     "line number": [
      15
     ]
    },
    "feature_sel.analysis.msm.args": {
     "line number": [
      20,
      199
     ]
    },
    "feature_sel.analysis.msm.features": {
     "line number": [
      59
     ]
    },
    "feature_sel.analysis.msm.grid": {
     "line number": [
      106
     ]
    },
    "feature_sel.analysis.msm.matplotlib": {
     "line number": [
      2
     ]
    },
    "feature_sel.analysis.msm.missing": {
     "line number": [
      106
     ]
    },
    "feature_sel.analysis.msm.os": {
     "line number": [
      22
     ]
    },
    "feature_sel.analysis.msm.output_path": {
     "line number": [
      22,
      106
     ]
    },
    "feature_sel.analysis.msm.parser": {
     "line number": [
      16,
      17,
      18
     ]
    },
    "feature_sel.analysis.msm.pyemma": {
     "line number": [
      7
     ]
    },
    "feature_sel.analysis.msm.run": {
     "line number": [
      199
     ]
    },
    "feature_sel.analysis.msm.sys": {
     "line number": [
      23
     ]
    },
    "feature_sel.analysis.msm.test_systems": {
     "line number": [
      57
     ]
    },
    "int": {
     "line number": [
      17
     ]
    },
    "list": {
     "line number": [
      59
     ]
    },
    "print": {
     "line number": [
      7,
      106
     ]
    },
    "pyemma._ext.sklearn.parameter_search.ParameterGrid": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.msm.ParameterGrid": {
  "data": {
   "shadows": "pyemma._ext.sklearn.parameter_search.ParameterGrid"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.VAMP": {
  "data": {
   "shadows": "pyemma.coordinates.transform.VAMP"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.__myrepr__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "str": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.msm.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.args": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm.features": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm.figure": {
  "data": {
   "shadows": "matplotlib.pylab.figure"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.get_output_file_name": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "collections.namedtuple": {
     "line number": [
      84
     ]
    },
    "feature_sel.analysis.msm.grid": {
     "line number": [
      66
     ]
    },
    "feature_sel.analysis.msm.os": {
     "line number": [
      71,
      76,
      81
     ]
    },
    "feature_sel.analysis.msm.output_path": {
     "line number": [
      71,
      76,
      81
     ]
    },
    "t": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.msm.grid": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.missing": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "feature_sel.analysis.msm.get_output_file_name": {
     "line number": [
      92
     ]
    },
    "feature_sel.analysis.msm.grid": {
     "line number": [
      91,
      92
     ]
    },
    "feature_sel.analysis.msm.os": {
     "line number": [
      94,
      95
     ]
    },
    "feature_sel.analysis.msm.output_path": {
     "line number": [
      94
     ]
    },
    "len": {
     "line number": [
      91
     ]
    },
    "print": {
     "line number": [
      98
     ]
    },
    "range": {
     "line number": [
      91
     ]
    },
    "set": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.msm.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.output_path": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm.p": {
  "data": {
   "shadows": "paths"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.parser": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm.pdb": {
  "data": {
   "shadows": "pdb"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.run": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      188
     ]
    },
    "feature_sel.analysis.msm.get_output_file_name": {
     "line number": [
      116
     ]
    },
    "feature_sel.analysis.msm.grid": {
     "line number": [
      111,
      116,
      139
     ]
    },
    "feature_sel.analysis.msm.os": {
     "line number": [
      122,
      125,
      139
     ]
    },
    "feature_sel.analysis.msm.output_path": {
     "line number": [
      139
     ]
    },
    "feature_sel.analysis.msm.pdb": {
     "line number": [
      190
     ]
    },
    "feature_sel.analysis.msm.pyemma": {
     "line number": [
      128,
      140,
      165,
      175,
      185
     ]
    },
    "feature_sel.analysis.msm.sys": {
     "line number": [
      193
     ]
    },
    "feature_sel.analysis.msm.traceback": {
     "line number": [
      193
     ]
    },
    "id": {
     "line number": [
      110,
      111,
      116,
      139,
      191
     ]
    },
    "matplotlib.pylab.figure": {
     "line number": [
      174,
      181
     ]
    },
    "matplotlib.pylab.savefig": {
     "line number": [
      177,
      186
     ]
    },
    "matplotlib.pylab.title": {
     "line number": [
      176
     ]
    },
    "numpy.all": {
     "line number": [
      136,
      142,
      143,
      144,
      145
     ]
    },
    "numpy.isfinite": {
     "line number": [
      142,
      143,
      144,
      145
     ]
    },
    "paths.create_cartesian_reader": {
     "line number": [
      132
     ]
    },
    "paths.create_fragmented_reader": {
     "line number": [
      134
     ]
    },
    "paths.get_output_file_name": {
     "line number": [
      139
     ]
    },
    "print": {
     "line number": [
      110,
      123,
      125,
      191,
      195
     ]
    },
    "pyemma.coordinates.transform.VAMP": {
     "line number": [
      157
     ]
    },
    "pyemma.msm.timescales_msm": {
     "line number": [
      173
     ]
    },
    "t": {
     "line number": [
      157,
      166
     ]
    },
    "t.data_producer": {
     "line number": [
      158
     ]
    },
    "t.model.C00": {
     "line number": [
      161
     ]
    },
    "t.model.C0t": {
     "line number": [
      162
     ]
    },
    "t.model.Ctt": {
     "line number": [
      163
     ]
    },
    "t.model.mean_0": {
     "line number": [
      159
     ]
    },
    "t.model.mean_t": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.msm.savefig": {
  "data": {
   "shadows": "matplotlib.pylab.savefig"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.test_systems": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm.timescales_msm": {
  "data": {
   "shadows": "pyemma.msm.timescales_msm"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.title": {
  "data": {
   "shadows": "matplotlib.pylab.title"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      239
     ]
    },
    "enumerate": {
     "line number": [
      66
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.argparse": {
     "line number": [
      71
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.args": {
     "line number": [
      77,
      240
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.features": {
     "line number": [
      61
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.grid": {
     "line number": [
      66
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.h": {
     "line number": [
      9,
      10
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.hashlib": {
     "line number": [
      8
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.matplotlib": {
     "line number": [
      3
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.os": {
     "line number": [
      79
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.output_path": {
     "line number": [
      79
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.parser": {
     "line number": [
      72,
      73,
      74,
      75
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.pyemma": {
     "line number": [
      12
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.run": {
     "line number": [
      240
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.sys": {
     "line number": [
      80
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.test_systems": {
     "line number": [
      58
     ]
    },
    "int": {
     "line number": [
      74
     ]
    },
    "open": {
     "line number": [
      9
     ]
    },
    "print": {
     "line number": [
      10,
      12,
      67
     ]
    },
    "pyemma._ext.sklearn.parameter_search.ParameterGrid": {
     "line number": [
      58
     ]
    },
    "pyemma.util.debug.register_signal_handlers": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.msm_on_lowrank.ParameterGrid": {
  "data": {
   "shadows": "pyemma._ext.sklearn.parameter_search.ParameterGrid"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank._recreate_vamp_obj_from_covs": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "feature_sel.analysis.msm_on_lowrank.args": {
     "line number": [
      118
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.grid": {
     "line number": [
      113,
      114,
      115,
      118
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.k_per_system": {
     "line number": [
      115
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.os": {
     "line number": [
      118
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.pyemma": {
     "line number": [
      116,
      119
     ]
    },
    "paths.get_output_file_name": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.msm_on_lowrank.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.args": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm_on_lowrank.features": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm_on_lowrank.figure": {
  "data": {
   "shadows": "matplotlib.pylab.figure"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.get_expd_flex_torsions_reader": {
  "data": {
   "shadows": "calc_cov_expd_torsions.get_expd_flex_torsions_reader"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.get_output_file_name": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "collections.namedtuple": {
     "line number": [
      108
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.grid": {
     "line number": [
      84
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.os": {
     "line number": [
      89,
      94,
      100,
      103
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.output_path": {
     "line number": [
      89,
      94,
      100,
      103
     ]
    },
    "t": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.msm_on_lowrank.grid": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm_on_lowrank.h": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm_on_lowrank.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.k_per_system": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm_on_lowrank.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.out_name_score": {
  "data": {
   "shadows": "paths.get_output_file_name"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.output_path": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm_on_lowrank.p": {
  "data": {
   "shadows": "paths"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.parser": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm_on_lowrank.pdb": {
  "data": {
   "shadows": "pdb"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.reg": {
  "data": {
   "shadows": "pyemma.util.debug.register_signal_handlers"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.run": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      228
     ]
    },
    "calc_cov_expd_torsions.get_expd_flex_torsions_reader": {
     "line number": [
      151
     ]
    },
    "feature_sel.analysis.msm_on_lowrank._recreate_vamp_obj_from_covs": {
     "line number": [
      158
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.grid": {
     "line number": [
      132,
      134,
      137,
      158,
      168,
      169
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.k_per_system": {
     "line number": [
      203
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.os": {
     "line number": [
      138,
      172,
      177
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.pdb": {
     "line number": [
      233
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.pyemma": {
     "line number": [
      179,
      185,
      202,
      217
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.sys": {
     "line number": [
      231
     ]
    },
    "feature_sel.analysis.msm_on_lowrank.traceback": {
     "line number": [
      231
     ]
    },
    "len": {
     "line number": [
      180
     ]
    },
    "matplotlib.pylab.figure": {
     "line number": [
      216
     ]
    },
    "matplotlib.pylab.savefig": {
     "line number": [
      220
     ]
    },
    "matplotlib.pylab.title": {
     "line number": [
      219
     ]
    },
    "next": {
     "line number": [
      160
     ]
    },
    "numpy.all": {
     "line number": [
      155
     ]
    },
    "numpy.save": {
     "line number": [
      206
     ]
    },
    "paths.create_cartesian_reader": {
     "line number": [
      144
     ]
    },
    "paths.create_fragmented_reader": {
     "line number": [
      153
     ]
    },
    "paths.get_output_file_name": {
     "line number": [
      137,
      169
     ]
    },
    "print": {
     "line number": [
      131,
      138,
      167,
      173,
      178,
      205,
      229,
      236
     ]
    },
    "pyemma.msm.timescales_msm": {
     "line number": [
      212
     ]
    },
    "t": {
     "line number": [
      158
     ]
    },
    "t.data_producer": {
     "line number": [
      159
     ]
    },
    "t.get_output": {
     "line number": [
      162
     ]
    },
    "t.iterator": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.msm_on_lowrank.savefig": {
  "data": {
   "shadows": "matplotlib.pylab.savefig"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.test_systems": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "feature_sel.analysis.msm_on_lowrank.timescales_msm": {
  "data": {
   "shadows": "pyemma.msm.timescales_msm"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.title": {
  "data": {
   "shadows": "matplotlib.pylab.title"
  },
  "type": "import"
 },
 "feature_sel.analysis.msm_on_lowrank.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "feature_sel.analysis.paths": {
  "data": {
   "symbols_in_volume": {
    "feature_sel.analysis.paths.hostname": {
     "line number": [
      11,
      14,
      14
     ]
    },
    "feature_sel.analysis.paths.on_allegro": {
     "line number": [
      15
     ]
    },
    "feature_sel.analysis.paths.socket": {
     "line number": [
      10
     ]
    },
    "print": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.paths.DistTrans": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "class"
 },
 "feature_sel.analysis.paths.DistTrans.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "feature_sel.analysis.paths.DistTrans": {
     "line number": [
      128
     ]
    },
    "super": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.paths.DistTrans._transform_array": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      141
     ]
    },
    "numpy.log": {
     "line number": [
      143
     ]
    },
    "numpy.sqrt": {
     "line number": [
      139
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.paths.DistTrans.describe": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "feature_sel.analysis.paths.DistTrans.dimension": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "feature_sel.analysis.paths.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "feature_sel.analysis.paths.PRE_CALC_FEATURES_PATH": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "feature_sel.analysis.paths.RAW_TRAJS_PATH": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "feature_sel.analysis.paths.StreamingTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingTransformer"
  },
  "type": "import"
 },
 "feature_sel.analysis.paths.create_cartesian_reader": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "create_featurizer": {
     "line number": [
      102
     ]
    },
    "feature_sel.analysis.paths.create_traj_top_pairs": {
     "line number": [
      82
     ]
    },
    "isinstance": {
     "line number": [
      103
     ]
    },
    "pyemma.coordinates.data.FragmentedTrajectoryReader": {
     "line number": [
      103
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.paths.create_cartesian_reader.create_featurizer": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "feature_sel.analysis.paths.mdtraj": {
     "line number": [
      94
     ]
    },
    "feature_sel.analysis.paths.os": {
     "line number": [
      90,
      90
     ]
    },
    "glob.glob": {
     "line number": [
      91
     ]
    },
    "print": {
     "line number": [
      92
     ]
    },
    "pyemma.coordinates.featurizer": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.paths.create_cartesian_reader.create_featurizer.center": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "len": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.paths.create_fragmented_reader": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "feature_sel.analysis.paths.DistTrans": {
     "line number": [
      191
     ]
    },
    "feature_sel.analysis.paths.files_by_test_system": {
     "line number": [
      160,
      162
     ]
    },
    "feature_sel.analysis.paths.re": {
     "line number": [
      167,
      185,
      189
     ]
    },
    "filter": {
     "line number": [
      173
     ]
    },
    "float": {
     "line number": [
      187
     ]
    },
    "int": {
     "line number": [
      169
     ]
    },
    "list": {
     "line number": [
      172
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.paths.create_traj_top_pairs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "feature_sel.analysis.paths.RAW_TRAJS_PATH": {
     "line number": [
      46,
      48,
      50,
      51,
      54,
      56,
      58,
      59
     ]
    },
    "feature_sel.analysis.paths.on_allegro": {
     "line number": [
      44
     ]
    },
    "feature_sel.analysis.paths.re": {
     "line number": [
      67
     ]
    },
    "filter": {
     "line number": [
      71
     ]
    },
    "glob.glob": {
     "line number": [
      48,
      51,
      56,
      59,
      61
     ]
    },
    "int": {
     "line number": [
      69
     ]
    },
    "list": {
     "line number": [
      71
     ]
    },
    "print": {
     "line number": [
      47,
      55,
      75
     ]
    },
    "sorted": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.paths.featurizer": {
  "data": {
   "shadows": "pyemma.coordinates.featurizer"
  },
  "type": "import"
 },
 "feature_sel.analysis.paths.files_by_test_system": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "feature_sel.analysis.paths.PRE_CALC_FEATURES_PATH": {
     "line number": [
      26
     ]
    },
    "glob.glob": {
     "line number": [
      26
     ]
    },
    "sorted": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.paths.get_output_file_name": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "feature_sel.analysis.paths.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "feature_sel.analysis.paths.hostname": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "feature_sel.analysis.paths.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "feature_sel.analysis.paths.missing": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "feature_sel.analysis.paths.get_output_file_name": {
     "line number": [
      224
     ]
    },
    "feature_sel.analysis.paths.os": {
     "line number": [
      225,
      226
     ]
    },
    "len": {
     "line number": [
      223
     ]
    },
    "range": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.paths.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.paths.on_allegro": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "feature_sel.analysis.paths.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.analysis.paths.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "feature_sel.analysis.paths.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "feature_sel.analysis.paths.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "feature_sel.analysis.paths.test_create_cartesian_reader": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "feature_sel.analysis.paths.create_cartesian_reader": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.rescore": {
  "data": {
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      144
     ]
    },
    "ValueError": {
     "line number": [
      144
     ]
    },
    "__name__": {
     "line number": [
      140
     ]
    },
    "celery.Celery": {
     "line number": [
      62
     ]
    },
    "enumerate": {
     "line number": [
      56
     ]
    },
    "feature_sel.analysis.rescore.broker_url": {
     "line number": [
      62
     ]
    },
    "feature_sel.analysis.rescore.features": {
     "line number": [
      52
     ]
    },
    "feature_sel.analysis.rescore.grid": {
     "line number": [
      55,
      56
     ]
    },
    "feature_sel.analysis.rescore.id_": {
     "line number": [
      143
     ]
    },
    "feature_sel.analysis.rescore.os": {
     "line number": [
      10
     ]
    },
    "feature_sel.analysis.rescore.pyemma": {
     "line number": [
      6
     ]
    },
    "feature_sel.analysis.rescore.run": {
     "line number": [
      143
     ]
    },
    "feature_sel.analysis.rescore.scores": {
     "line number": [
      53
     ]
    },
    "feature_sel.analysis.rescore.sys": {
     "line number": [
      10,
      11,
      142,
      146
     ]
    },
    "feature_sel.analysis.rescore.test_systems": {
     "line number": [
      51
     ]
    },
    "int": {
     "line number": [
      142
     ]
    },
    "len": {
     "line number": [
      55
     ]
    },
    "print": {
     "line number": [
      6,
      11,
      55,
      57,
      145
     ]
    },
    "sklearn.model_selection.ParameterGrid": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.rescore.Celery": {
  "data": {
   "shadows": "celery.Celery"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore.Covariances": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.Covariances"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore.ParameterGrid": {
  "data": {
   "shadows": "sklearn.model_selection.ParameterGrid"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore.app": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore.broker_url": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore.estimate_covs": {
  "data": {
   "shadows": "estimate.estimate_covs"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore.features": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore.files_by_test_system": {
  "data": {
   "shadows": "paths.files_by_test_system"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore.grid": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore.id_": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore.output_path": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore.paths": {
  "data": {
   "shadows": "paths"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore.run": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      131
     ]
    },
    "KeyError": {
     "line number": [
      101,
      105
     ]
    },
    "estimate.estimate_covs": {
     "line number": [
      108
     ]
    },
    "feature_sel.analysis.rescore.app": {
     "line number": [
      65
     ]
    },
    "feature_sel.analysis.rescore.grid": {
     "line number": [
      68
     ]
    },
    "feature_sel.analysis.rescore.os": {
     "line number": [
      82
     ]
    },
    "feature_sel.analysis.rescore.output_path": {
     "line number": [
      73
     ]
    },
    "feature_sel.analysis.rescore.paths": {
     "line number": [
      87
     ]
    },
    "feature_sel.analysis.rescore.scores": {
     "line number": [
      114,
      122
     ]
    },
    "feature_sel.analysis.rescore.sys": {
     "line number": [
      135
     ]
    },
    "feature_sel.analysis.rescore.traceback": {
     "line number": [
      135
     ]
    },
    "id": {
     "line number": [
      67,
      68,
      132
     ]
    },
    "numpy.array": {
     "line number": [
      115
     ]
    },
    "numpy.load": {
     "line number": [
      98,
      126
     ]
    },
    "numpy.savez_compressed": {
     "line number": [
      124,
      129
     ]
    },
    "print": {
     "line number": [
      67,
      81,
      83,
      132,
      137
     ]
    },
    "pyemma.coordinates.estimation.covariance.Covariances": {
     "line number": [
      103
     ]
    },
    "sklearn.model_selection.KFold": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.rescore.scores": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore.test_systems": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined": {
  "data": {
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      204
     ]
    },
    "ValueError": {
     "line number": [
      204
     ]
    },
    "__name__": {
     "line number": [
      200
     ]
    },
    "celery.Celery": {
     "line number": [
      46
     ]
    },
    "enumerate": {
     "line number": [
      40
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.broker_url": {
     "line number": [
      46
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.features": {
     "line number": [
      36
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.grid": {
     "line number": [
      39,
      40
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.id_": {
     "line number": [
      203
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.os": {
     "line number": [
      11
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.pyemma": {
     "line number": [
      7
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.run": {
     "line number": [
      203
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.scores": {
     "line number": [
      37
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.sys": {
     "line number": [
      11,
      12,
      202,
      206
     ]
    },
    "int": {
     "line number": [
      202
     ]
    },
    "len": {
     "line number": [
      39
     ]
    },
    "print": {
     "line number": [
      7,
      12,
      39,
      41,
      205
     ]
    },
    "pyemma._ext.sklearn.parameter_search.ParameterGrid": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.rescore_1FME_joined.Celery": {
  "data": {
   "shadows": "celery.Celery"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.Covariances": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.Covariances"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.ParameterGrid": {
  "data": {
   "shadows": "pyemma._ext.sklearn.parameter_search.ParameterGrid"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.app": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore_1FME_joined.backbone": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "feature_sel.analysis.rescore_1FME_joined.broker_url": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore_1FME_joined.compute_dihedrals": {
  "data": {
   "shadows": "mdtraj.compute_dihedrals"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.dist_ca": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "feature_sel.analysis.rescore_1FME_joined.e": {
  "data": {
   "shadows": "estimate"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.features": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore_1FME_joined.grid": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore_1FME_joined.id_": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore_1FME_joined.indices_chi1": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral.indices_chi1"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.indices_chi2": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral.indices_chi2"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.indices_chi3": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral.indices_chi3"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.indices_chi4": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral.indices_chi4"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.indices_chi5": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral.indices_chi5"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.indices_omega": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral.indices_omega"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.output_path": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore_1FME_joined.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.res_mindist": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "feature_sel.analysis.rescore_1FME_joined.run": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      191
     ]
    },
    "estimate": {
     "line number": [
      192
     ]
    },
    "estimate.DistTrans": {
     "line number": [
      169
     ]
    },
    "estimate.score_and_save": {
     "line number": [
      187
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.app": {
     "line number": [
      105
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.dist_ca": {
     "line number": [
      152
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.grid": {
     "line number": [
      108
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.mdtraj": {
     "line number": [
      144
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.os": {
     "line number": [
      113,
      122
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.output_path": {
     "line number": [
      113
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.pyemma": {
     "line number": [
      128
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.re": {
     "line number": [
      163,
      167
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.res_mindist": {
     "line number": [
      150,
      159
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.shrake_ruply": {
     "line number": [
      156
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.side_sidechain_torsions": {
     "line number": [
      154
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.sys": {
     "line number": [
      195
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.traceback": {
     "line number": [
      195
     ]
    },
    "feature_sel.analysis.rescore_1FME_joined.xyz": {
     "line number": [
      148
     ]
    },
    "float": {
     "line number": [
      165
     ]
    },
    "id": {
     "line number": [
      107,
      108,
      192
     ]
    },
    "numpy.array": {
     "line number": [
      179
     ]
    },
    "numpy.savez_compressed": {
     "line number": [
      190
     ]
    },
    "print": {
     "line number": [
      107,
      121,
      123,
      175,
      177,
      192,
      197
     ]
    },
    "pyemma.coordinates.estimation.covariance.Covariances": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.rescore_1FME_joined.scores": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "feature_sel.analysis.rescore_1FME_joined.shrake_ruply": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "feature_sel.analysis.rescore_1FME_joined.shrake_ruply.featurize": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "feature_sel.analysis.rescore_1FME_joined.mdtraj": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.rescore_1FME_joined.side_sidechain_torsions": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "len": {
     "line number": [
      102
     ]
    },
    "mdtraj.geometry.dihedral.indices_chi1": {
     "line number": [
      85
     ]
    },
    "mdtraj.geometry.dihedral.indices_chi2": {
     "line number": [
      86
     ]
    },
    "mdtraj.geometry.dihedral.indices_chi3": {
     "line number": [
      87
     ]
    },
    "mdtraj.geometry.dihedral.indices_chi4": {
     "line number": [
      88
     ]
    },
    "mdtraj.geometry.dihedral.indices_chi5": {
     "line number": [
      89
     ]
    },
    "mdtraj.geometry.dihedral.indices_omega": {
     "line number": [
      90
     ]
    },
    "numpy.vstack": {
     "line number": [
      85
     ]
    },
    "print": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.rescore_1FME_joined.side_sidechain_torsions.compute_side_chains": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "mdtraj.compute_dihedrals": {
     "line number": [
      95
     ]
    },
    "numpy.cos": {
     "line number": [
      97
     ]
    },
    "numpy.dstack": {
     "line number": [
      97
     ]
    },
    "numpy.sin": {
     "line number": [
      97
     ]
    },
    "print": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.rescore_1FME_joined.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "feature_sel.analysis.rescore_1FME_joined.xyz": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "feature_sel.analysis.rescore_1FME_joined.xyz.center": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "feature_sel.analysis.rescore_1FME_joined.xyz": {
     "line number": [
      52,
      53,
      53
     ]
    },
    "len": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.analysis.run_failed_rescore": {
  "data": {
   "symbols_in_volume": {
    "celery.group": {
     "line number": [
      31
     ]
    },
    "feature_sel.analysis.run_failed_rescore.failed": {
     "line number": [
      31
     ]
    },
    "feature_sel.analysis.run_failed_rescore.rescore": {
     "line number": [
      31
     ]
    },
    "feature_sel.analysis.run_failed_rescore.tasks": {
     "line number": [
      32
     ]
    },
    "id": {
     "line number": [
      31,
      31
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.run_failed_rescore.failed": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "feature_sel.analysis.run_failed_rescore.group": {
  "data": {
   "shadows": "celery.group"
  },
  "type": "import"
 },
 "feature_sel.analysis.run_failed_rescore.rescore": {
  "data": {
   "shadows": "rescore"
  },
  "type": "import"
 },
 "feature_sel.analysis.run_failed_rescore.tasks": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "feature_sel.analysis.run_mindist_contacts": {
  "data": {
   "symbols_in_volume": {
    "celery.group": {
     "line number": [
      5
     ]
    },
    "feature_sel.analysis.run_mindist_contacts.calc_cov_single_feat_res_mindist": {
     "line number": [
      5
     ]
    },
    "feature_sel.analysis.run_mindist_contacts.tasks": {
     "line number": [
      6
     ]
    },
    "range": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.analysis.run_mindist_contacts.calc_cov_single_feat_res_mindist": {
  "data": {
   "shadows": "calc_cov_single_feat_res_mindist"
  },
  "type": "import"
 },
 "feature_sel.analysis.run_mindist_contacts.group": {
  "data": {
   "shadows": "celery.group"
  },
  "type": "import"
 },
 "feature_sel.analysis.run_mindist_contacts.tasks": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "feature_sel.backbone_remove_plain": {
  "data": {
   "symbols_in_volume": {
    "feature_sel.backbone_remove_plain.files": {
     "line number": [
      25
     ]
    },
    "feature_sel.backbone_remove_plain.h5py": {
     "line number": [
      26
     ]
    },
    "feature_sel.backbone_remove_plain.itertools": {
     "line number": [
      22
     ]
    },
    "feature_sel.backbone_remove_plain.test_systems": {
     "line number": [
      22
     ]
    },
    "feature_sel.backbone_remove_plain.tqdm": {
     "line number": [
      25
     ]
    },
    "glob.glob": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.backbone_remove_plain.files": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "feature_sel.backbone_remove_plain.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "feature_sel.backbone_remove_plain.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "feature_sel.backbone_remove_plain.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "feature_sel.backbone_remove_plain.tables": {
  "data": {
   "shadows": "tables"
  },
  "type": "import"
 },
 "feature_sel.backbone_remove_plain.test_systems": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "feature_sel.backbone_remove_plain.tqdm": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "feature_sel.cache_features": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      111
     ]
    },
    "feature_sel.cache_features.backbone": {
     "line number": [
      60
     ]
    },
    "feature_sel.cache_features.client": {
     "line number": [
      124,
      126
     ]
    },
    "feature_sel.cache_features.create_traj_top_pairs": {
     "line number": [
      67
     ]
    },
    "feature_sel.cache_features.dist_ca": {
     "line number": [
      60
     ]
    },
    "feature_sel.cache_features.features": {
     "line number": [
      69
     ]
    },
    "feature_sel.cache_features.first_arg": {
     "line number": [
      114,
      128
     ]
    },
    "feature_sel.cache_features.grid": {
     "line number": [
      74,
      123
     ]
    },
    "feature_sel.cache_features.hosts": {
     "line number": [
      120
     ]
    },
    "feature_sel.cache_features.itertools": {
     "line number": [
      68
     ]
    },
    "feature_sel.cache_features.out": {
     "line number": [
      125
     ]
    },
    "feature_sel.cache_features.outs": {
     "line number": [
      125,
      126
     ]
    },
    "feature_sel.cache_features.param_grid": {
     "line number": [
      72
     ]
    },
    "feature_sel.cache_features.pyemma": {
     "line number": [
      11,
      12
     ]
    },
    "feature_sel.cache_features.res_mindist": {
     "line number": [
      60
     ]
    },
    "feature_sel.cache_features.shrake_ruply": {
     "line number": [
      60
     ]
    },
    "feature_sel.cache_features.spawn": {
     "line number": [
      128
     ]
    },
    "feature_sel.cache_features.stuff": {
     "line number": [
      68
     ]
    },
    "feature_sel.cache_features.sys": {
     "line number": [
      113,
      124
     ]
    },
    "feature_sel.cache_features.test_systems": {
     "line number": [
      67
     ]
    },
    "id": {
     "line number": [
      123,
      124
     ]
    },
    "len": {
     "line number": [
      74,
      123
     ]
    },
    "list": {
     "line number": [
      68,
      74
     ]
    },
    "map": {
     "line number": [
      126
     ]
    },
    "print": {
     "line number": [
      74
     ]
    },
    "pssh.ParallelSSHClient": {
     "line number": [
      120
     ]
    },
    "range": {
     "line number": [
      123
     ]
    },
    "sklearn.model_selection.ParameterGrid": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.cache_features.ParallelSSHClient": {
  "data": {
   "shadows": "pssh.ParallelSSHClient"
  },
  "type": "import"
 },
 "feature_sel.cache_features.ParameterGrid": {
  "data": {
   "shadows": "sklearn.model_selection.ParameterGrid"
  },
  "type": "import"
 },
 "feature_sel.cache_features.backbone": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "feature_sel.cache_features.client": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "feature_sel.cache_features.copy_data": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "distutils.dir_util.copy_tree": {
     "line number": [
      29
     ]
    },
    "feature_sel.cache_features.fast_folders_dir_dest": {
     "line number": [
      29
     ]
    },
    "feature_sel.cache_features.fast_folders_dir_src": {
     "line number": [
      25
     ]
    },
    "feature_sel.cache_features.test_systems": {
     "line number": [
      24
     ]
    },
    "glob.glob": {
     "line number": [
      26
     ]
    },
    "print": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.cache_features.copy_tree": {
  "data": {
   "shadows": "distutils.dir_util.copy_tree"
  },
  "type": "import"
 },
 "feature_sel.cache_features.create_traj_top_pairs": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "feature_sel.cache_features.fast_folders_dir_dest": {
     "line number": [
      33,
      35
     ]
    },
    "glob.glob": {
     "line number": [
      34,
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.cache_features.dist_ca": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "feature_sel.cache_features.fast_folders_dir_dest": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "feature_sel.cache_features.fast_folders_dir_src": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "feature_sel.cache_features.features": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "feature_sel.cache_features.first_arg": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "feature_sel.cache_features.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "feature_sel.cache_features.grid": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "feature_sel.cache_features.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "feature_sel.cache_features.hosts": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "feature_sel.cache_features.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "feature_sel.cache_features.max": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "feature_sel.cache_features.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "feature_sel.cache_features.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.cache_features.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.cache_features.out": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "feature_sel.cache_features.outs": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "feature_sel.cache_features.param_grid": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "feature_sel.cache_features.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "feature_sel.cache_features.res_mindist": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "feature_sel.cache_features.run": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "feature": {
     "line number": [
      87
     ]
    },
    "feature.__name__": {
     "line number": [
      89
     ]
    },
    "feature_sel.cache_features.h5py": {
     "line number": [
      92
     ]
    },
    "feature_sel.cache_features.os": {
     "line number": [
      79,
      90
     ]
    },
    "feature_sel.cache_features.pyemma": {
     "line number": [
      84
     ]
    },
    "len": {
     "line number": [
      99,
      100
     ]
    },
    "print": {
     "line number": [
      82,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.cache_features.shrake_ruply": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "feature_sel.cache_features.shrake_ruply.featurize": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "feature_sel.cache_features.mdtraj": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.cache_features.spawn": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "feature_sel.cache_features.grid": {
     "line number": [
      104
     ]
    },
    "feature_sel.cache_features.run": {
     "line number": [
      107
     ]
    },
    "id": {
     "line number": [
      104,
      105,
      106,
      108
     ]
    },
    "print": {
     "line number": [
      105,
      106,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.cache_features.stuff": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "feature_sel.cache_features.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.cache_features.tables": {
  "data": {
   "shadows": "tables"
  },
  "type": "import"
 },
 "feature_sel.cache_features.test_systems": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "feature_sel.cache_features.utils": {
  "data": {
   "shadows": "pssh.utils"
  },
  "type": "import"
 },
 "feature_sel.check_backbone": {
  "data": {
   "symbols_in_volume": {
    "feature_sel.check_backbone.PRE_CALC_FEATURES_PATH": {
     "line number": [
      10
     ]
    },
    "feature_sel.check_backbone.files": {
     "line number": [
      11,
      14
     ]
    },
    "feature_sel.check_backbone.h5py": {
     "line number": [
      16
     ]
    },
    "feature_sel.check_backbone.os": {
     "line number": [
      435
     ]
    },
    "feature_sel.check_backbone.rm": {
     "line number": [
      434
     ]
    },
    "feature_sel.check_backbone.to_delete": {
     "line number": [
      18,
      20
     ]
    },
    "glob.glob": {
     "line number": [
      10
     ]
    },
    "len": {
     "line number": [
      17
     ]
    },
    "print": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.check_backbone.PRE_CALC_FEATURES_PATH": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "feature_sel.check_backbone.files": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "feature_sel.check_backbone.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "feature_sel.check_backbone.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "feature_sel.check_backbone.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.check_backbone.rm": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "feature_sel.check_backbone.tables": {
  "data": {
   "shadows": "tables"
  },
  "type": "import"
 },
 "feature_sel.check_backbone.to_delete": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "feature_sel.dbg": {
  "data": {
   "symbols_in_volume": {
    "feature_sel.dbg.pydevd": {
     "line number": [
      6
     ]
    },
    "feature_sel.dbg.sys": {
     "line number": [
      2
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.dbg.pydevd": {
  "data": {
   "shadows": "pydevd"
  },
  "type": "import"
 },
 "feature_sel.dbg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.generate_run": {
  "data": {
   "symbols_in_volume": {
    "feature_sel.generate_run.argparse": {
     "line number": [
      3
     ]
    },
    "feature_sel.generate_run.args": {
     "line number": [
      26,
      28
     ]
    },
    "feature_sel.generate_run.parser": {
     "line number": [
      5,
      6,
      7
     ]
    },
    "feature_sel.generate_run.template": {
     "line number": [
      29
     ]
    },
    "open": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.generate_run.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "feature_sel.generate_run.args": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "feature_sel.generate_run.parser": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "feature_sel.generate_run.template": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "feature_sel.jobs_logger": {
  "data": {},
  "type": "module"
 },
 "feature_sel.jobs_logger.get_logger": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": {
    "feature_sel.jobs_logger.logging": {
     "line number": [
      4,
      5,
      6
     ]
    },
    "feature_sel.jobs_logger.sys": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.jobs_logger.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "feature_sel.jobs_logger.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "feature_sel.mk_output_dirs": {
  "data": {
   "symbols_in_volume": {
    "feature_sel.mk_output_dirs.base": {
     "line number": [
      6
     ]
    },
    "feature_sel.mk_output_dirs.lags": {
     "line number": [
      5
     ]
    },
    "feature_sel.mk_output_dirs.os": {
     "line number": [
      6,
      6
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.mk_output_dirs.base": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "feature_sel.mk_output_dirs.lags": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "feature_sel.mk_output_dirs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "feature_sel.restart_workers": {
  "data": {
   "symbols_in_volume": {
    "celery.Celery": {
     "line number": [
      4
     ]
    },
    "feature_sel.restart_workers.app": {
     "line number": [
      6
     ]
    },
    "feature_sel.restart_workers.broker_url": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.restart_workers.Celery": {
  "data": {
   "shadows": "celery.Celery"
  },
  "type": "import"
 },
 "feature_sel.restart_workers.app": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "feature_sel.restart_workers.broker_url": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "feature_sel.run_celery": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      4
     ]
    },
    "celery.group": {
     "line number": [
      6
     ]
    },
    "feature_sel.run_celery.cache_features_celery": {
     "line number": [
      5
     ]
    },
    "feature_sel.run_celery.jobs": {
     "line number": [
      7
     ]
    },
    "feature_sel.run_celery.tasks": {
     "line number": [
      6
     ]
    },
    "range": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.run_celery.cache_features_celery": {
  "data": {
   "shadows": "cache_features_celery"
  },
  "type": "import"
 },
 "feature_sel.run_celery.group": {
  "data": {
   "shadows": "celery.group"
  },
  "type": "import"
 },
 "feature_sel.run_celery.jobs": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "feature_sel.run_celery.result": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "feature_sel.run_celery.tasks": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "feature_sel.run_celery_a3d": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      4
     ]
    },
    "analysis.calc_cov_single_feat_a3d.run.s": {
     "line number": [
      5
     ]
    },
    "celery.group": {
     "line number": [
      6
     ]
    },
    "feature_sel.run_celery_a3d.jobs": {
     "line number": [
      7
     ]
    },
    "feature_sel.run_celery_a3d.tasks": {
     "line number": [
      6
     ]
    },
    "range": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.run_celery_a3d.calc_cov_single_feat_a3d": {
  "data": {
   "shadows": "analysis.calc_cov_single_feat_a3d"
  },
  "type": "import"
 },
 "feature_sel.run_celery_a3d.group": {
  "data": {
   "shadows": "celery.group"
  },
  "type": "import"
 },
 "feature_sel.run_celery_a3d.jobs": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "feature_sel.run_celery_a3d.result": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "feature_sel.run_celery_a3d.tasks": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "feature_sel.run_exceeded_memory": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      6
     ]
    },
    "analysis.calc_cov_single_feat.run.s": {
     "line number": [
      7
     ]
    },
    "celery.group": {
     "line number": [
      8
     ]
    },
    "feature_sel.run_exceeded_memory.jobs": {
     "line number": [
      9
     ]
    },
    "feature_sel.run_exceeded_memory.tasks": {
     "line number": [
      8
     ]
    },
    "range": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.run_exceeded_memory.calc_cov_single_feat": {
  "data": {
   "shadows": "analysis.calc_cov_single_feat"
  },
  "type": "import"
 },
 "feature_sel.run_exceeded_memory.group": {
  "data": {
   "shadows": "celery.group"
  },
  "type": "import"
 },
 "feature_sel.run_exceeded_memory.jobs": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "feature_sel.run_exceeded_memory.result": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "feature_sel.run_exceeded_memory.tasks": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "feature_sel.run_trans": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      6
     ]
    },
    "celery.group": {
     "line number": [
      11
     ]
    },
    "feature_sel.run_trans.files": {
     "line number": [
      9
     ]
    },
    "feature_sel.run_trans.jobs": {
     "line number": [
      12
     ]
    },
    "feature_sel.run_trans.tasks": {
     "line number": [
      10,
      11
     ]
    },
    "glob.glob": {
     "line number": [
      8
     ]
    },
    "len": {
     "line number": [
      10
     ]
    },
    "print": {
     "line number": [
      10
     ]
    },
    "tasks.transform_angles_cossin.s": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.run_trans.files": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "feature_sel.run_trans.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "feature_sel.run_trans.group": {
  "data": {
   "shadows": "celery.group"
  },
  "type": "import"
 },
 "feature_sel.run_trans.jobs": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "feature_sel.run_trans.result": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "feature_sel.run_trans.tasks": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "feature_sel.run_trans.transform_angles_cossin": {
  "data": {
   "shadows": "tasks.transform_angles_cossin"
  },
  "type": "import"
 },
 "feature_sel.test_forkmemory": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      12
     ]
    },
    "feature_sel.test_forkmemory.children": {
     "line number": [
      21
     ]
    },
    "feature_sel.test_forkmemory.func": {
     "line number": [
      18
     ]
    },
    "feature_sel.test_forkmemory.n": {
     "line number": [
      17,
      18
     ]
    },
    "feature_sel.test_forkmemory.parent": {
     "line number": [
      16,
      16,
      20
     ]
    },
    "feature_sel.test_forkmemory.psutil": {
     "line number": [
      15
     ]
    },
    "feature_sel.test_forkmemory.tasks": {
     "line number": [
      19
     ]
    },
    "feature_sel.test_forkmemory.x": {
     "line number": [
      7
     ]
    },
    "int": {
     "line number": [
      6
     ]
    },
    "multiprocess.Pool": {
     "line number": [
      17
     ]
    },
    "numpy.zeros": {
     "line number": [
      6
     ]
    },
    "print": {
     "line number": [
      7,
      16,
      22
     ]
    },
    "range": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.test_forkmemory.Pool": {
  "data": {
   "shadows": "multiprocess.Pool"
  },
  "type": "import"
 },
 "feature_sel.test_forkmemory.children": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "feature_sel.test_forkmemory.func": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "feature_sel.test_forkmemory.x": {
     "line number": [
      10
     ]
    },
    "id": {
     "line number": [
      10
     ]
    },
    "print": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.test_forkmemory.n": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "feature_sel.test_forkmemory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.test_forkmemory.parent": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "feature_sel.test_forkmemory.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "feature_sel.test_forkmemory.tasks": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "feature_sel.test_forkmemory.x": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "feature_sel.transform_task": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      33
     ]
    },
    "celery.Celery": {
     "line number": [
      4
     ]
    },
    "feature_sel.transform_task.broker_url": {
     "line number": [
      4
     ]
    },
    "feature_sel.transform_task.transform_angles_cossin": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "feature_sel.transform_task.Celery": {
  "data": {
   "shadows": "celery.Celery"
  },
  "type": "import"
 },
 "feature_sel.transform_task.app": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "feature_sel.transform_task.broker_url": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "feature_sel.transform_task.group": {
  "data": {
   "shadows": "celery.group"
  },
  "type": "import"
 },
 "feature_sel.transform_task.h": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "feature_sel.transform_task.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "feature_sel.transform_task.tables": {
  "data": {
   "shadows": "tables"
  },
  "type": "import"
 },
 "feature_sel.transform_task.test_systems": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "feature_sel.transform_task.transform_angles_cossin": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      28
     ]
    },
    "feature_sel.transform_task.app": {
     "line number": [
      11
     ]
    },
    "h5py.File": {
     "line number": [
      23
     ]
    },
    "print": {
     "line number": [
      13
     ]
    },
    "t": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "feature_sel.transform_task.transform_angles_cossin.t": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      19
     ]
    },
    "numpy.dstack": {
     "line number": [
      19
     ]
    },
    "numpy.sin": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma": {
  "data": {
   "symbols_in_volume": {
    "get_versions": {
     "line number": [
      27,
      29
     ]
    },
    "pyemma.__version__": {
     "line number": [
      28
     ]
    },
    "pyemma._version_check": {
     "line number": [
      104
     ]
    },
    "pyemma.version": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.Request": {
  "data": {
   "shadows": "urllib.request.Request"
  },
  "type": "import"
 },
 "pyemma.__version__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyemma._base": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyemma._base.estimator": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.estimator.Estimator": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "pyemma._base.loggable.Loggable": {
     "line number": [
      374
     ]
    },
    "pyemma._ext.sklearn.base.BaseEstimator": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.estimator.Estimator.__my_getstate__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      497
     ]
    },
    "getattr": {
     "line number": [
      499
     ]
    },
    "hasattr": {
     "line number": [
      497
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.estimator.Estimator.__my_setstate__": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      506
     ]
    },
    "hasattr": {
     "line number": [
      506
     ]
    },
    "list": {
     "line number": [
      505
     ]
    },
    "setattr": {
     "line number": [
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.estimator.Estimator._check_estimated": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.estimator.Estimator._estimate": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      414
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.estimator.Estimator.estimate": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "pyemma._base.estimator.Estimator.fit": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "pyemma._base.estimator.Estimator.get_params": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      472,
      477
     ]
    },
    "dict": {
     "line number": [
      463
     ]
    },
    "getattr": {
     "line number": [
      476
     ]
    },
    "hasattr": {
     "line number": [
      485
     ]
    },
    "len": {
     "line number": [
      477
     ]
    },
    "list": {
     "line number": [
      486
     ]
    },
    "pyemma._base.estimator.warnings": {
     "line number": [
      472,
      473,
      475,
      481,
      482
     ]
    },
    "pyemma.util.exceptions.PyEMMA_DeprecationWarning": {
     "line number": [
      473,
      477
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.estimator.Estimator.model": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      438,
      440,
      441
     ]
    },
    "property": {
     "line number": [
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.estimator.Loggable": {
  "data": {
   "shadows": "pyemma._base.loggable.Loggable"
  },
  "type": "import"
 },
 "pyemma._base.estimator.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "pyemma._base.estimator.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma._base.estimator.ParameterGrid": {
  "data": {
   "shadows": "pyemma._ext.sklearn.parameter_search.ParameterGrid"
  },
  "type": "import"
 },
 "pyemma._base.estimator.Pool": {
  "data": {
   "shadows": "pathos.multiprocessing.Pool"
  },
  "type": "import"
 },
 "pyemma._base.estimator.PyEMMA_DeprecationWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
  },
  "type": "import"
 },
 "pyemma._base.estimator._BaseEstimator": {
  "data": {
   "shadows": "pyemma._ext.sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "pyemma._base.estimator.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma._base.estimator._call_member": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      108
     ]
    },
    "Exception": {
     "line number": [
      120
     ]
    },
    "attr": {
     "line number": [
      115,
      116,
      119
     ]
    },
    "getattr": {
     "line number": [
      107
     ]
    },
    "isinstance": {
     "line number": [
      116
     ]
    },
    "property": {
     "line number": [
      116
     ]
    },
    "pyemma._base.estimator.inspect": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.estimator._estimate_param_scan_worker": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      176
     ]
    },
    "KeyboardInterrupt": {
     "line number": [
      139
     ]
    },
    "ValueError": {
     "line number": [
      187
     ]
    },
    "enumerate": {
     "line number": [
      162
     ]
    },
    "estimator": {
     "line number": [
      144
     ]
    },
    "estimator.estimate": {
     "line number": [
      137
     ]
    },
    "estimator.logger.warning": {
     "line number": [
      145
     ]
    },
    "estimator.model": {
     "line number": [
      138,
      174
     ]
    },
    "isinstance": {
     "line number": [
      144
     ]
    },
    "len": {
     "line number": [
      183,
      189
     ]
    },
    "pyemma._base.estimator._call_member": {
     "line number": [
      174
     ]
    },
    "pyemma._base.estimator.sys": {
     "line number": [
      143
     ]
    },
    "pyemma._base.loggable.Loggable": {
     "line number": [
      144
     ]
    },
    "pyemma.util.types.is_iterable": {
     "line number": [
      160
     ]
    },
    "pyemma.util.types.is_string": {
     "line number": [
      169
     ]
    },
    "str": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.estimator._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma._base.estimator.clone_estimator": {
  "data": {
   "shadows": "pyemma._ext.sklearn.base.clone"
  },
  "type": "import"
 },
 "pyemma._base.estimator.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "pyemma._base.estimator.estimate_param_scan": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      308
     ]
    },
    "contextlib.closing": {
     "line number": [
      347
     ]
    },
    "estimator": {
     "line number": [
      277,
      277,
      278,
      283,
      291,
      292,
      294,
      327,
      329,
      334,
      356,
      359,
      360
     ]
    },
    "estimator.__class__.__name__": {
     "line number": [
      322
     ]
    },
    "estimator.show_progress": {
     "line number": [
      279
     ]
    },
    "getattr": {
     "line number": [
      283
     ]
    },
    "hasattr": {
     "line number": [
      278,
      297,
      310
     ]
    },
    "isinstance": {
     "line number": [
      291
     ]
    },
    "len": {
     "line number": [
      307,
      307,
      308,
      308,
      321
     ]
    },
    "list": {
     "line number": [
      338
     ]
    },
    "pathos.multiprocessing.Pool": {
     "line number": [
      337
     ]
    },
    "pyemma._base.estimator._estimate_param_scan_worker": {
     "line number": [
      348,
      360
     ]
    },
    "pyemma._base.estimator.get_estimator": {
     "line number": [
      277
     ]
    },
    "pyemma._base.estimator.os": {
     "line number": [
      325
     ]
    },
    "pyemma._base.model.Model": {
     "line number": [
      291
     ]
    },
    "pyemma._base.parallel.get_n_jobs": {
     "line number": [
      283
     ]
    },
    "pyemma._ext.sklearn.base.clone": {
     "line number": [
      292
     ]
    },
    "pyemma.util.types.is_string": {
     "line number": [
      302,
      304
     ]
    },
    "str": {
     "line number": [
      322
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      315
     ]
    },
    "zip": {
     "line number": [
      334,
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.estimator.estimate_param_scan.error_callback": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.estimator.get_estimator": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "estimator": {
     "line number": [
      50,
      51
     ]
    },
    "pyemma._base.estimator.inspect": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.estimator.get_n_jobs": {
  "data": {
   "shadows": "pyemma._base.parallel.get_n_jobs"
  },
  "type": "import"
 },
 "pyemma._base.estimator.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pyemma._base.estimator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma._base.estimator.param_grid": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "pyemma._ext.sklearn.parameter_search.ParameterGrid": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.estimator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma._base.estimator.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._base.loggable": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.loggable.Loggable": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "itertools.count": {
     "line number": [
      33
     ]
    },
    "object": {
     "line number": [
      31
     ]
    },
    "pyemma._base.loggable.logging": {
     "line number": [
      37,
      38,
      39,
      40,
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.loggable.Loggable.__create_logger": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "id": {
     "line number": [
      73
     ]
    },
    "pyemma._base.loggable.Loggable": {
     "line number": [
      68,
      74
     ]
    },
    "pyemma._base.loggable.logging": {
     "line number": [
      70
     ]
    },
    "pyemma._base.loggable.weakref": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.loggable.Loggable._cleanup_logger": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.loggable.Loggable._cleanup_logger.remove_logger": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "pyemma._base.loggable.Loggable": {
     "line number": [
      85
     ]
    },
    "pyemma._base.loggable.logging": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.loggable.Loggable._logger_is_active": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyemma._base.loggable.Loggable.logger": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      59
     ]
    },
    "property": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.loggable.Loggable.name": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      48
     ]
    },
    "next": {
     "line number": [
      51
     ]
    },
    "property": {
     "line number": [
      43
     ]
    },
    "pyemma._base.loggable.Loggable": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.loggable.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyemma._base.loggable.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "pyemma._base.loggable.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma._base.loggable.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyemma._base.model": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.model.Model": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "object": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.model.Model.__my_getstate__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      41
     ]
    },
    "getattr": {
     "line number": [
      43
     ]
    },
    "hasattr": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.model.Model.__my_setstate__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      49
     ]
    },
    "hasattr": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.model.Model.__repr__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "len": {
     "line number": [
      128
     ]
    },
    "pyemma._ext.sklearn.base._pprint": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.model.Model._get_model_param_names": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      63
     ]
    },
    "classmethod": {
     "line number": [
      54
     ]
    },
    "hasattr": {
     "line number": [
      58
     ]
    },
    "pyemma.util.reflection.getargspec_no_self": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.model.Model.get_model_params": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      106,
      111
     ]
    },
    "dict": {
     "line number": [
      99
     ]
    },
    "getattr": {
     "line number": [
      110
     ]
    },
    "hasattr": {
     "line number": [
      119
     ]
    },
    "len": {
     "line number": [
      111
     ]
    },
    "list": {
     "line number": [
      120
     ]
    },
    "pyemma._base.model.warnings": {
     "line number": [
      106,
      107,
      109,
      115,
      116
     ]
    },
    "pyemma.util.exceptions.PyEMMA_DeprecationWarning": {
     "line number": [
      107,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.model.Model.set_model_params": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.model.Model.update_model_params": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      80
     ]
    },
    "hasattr": {
     "line number": [
      78
     ]
    },
    "setattr": {
     "line number": [
      79,
      81,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.model.PyEMMA_DeprecationWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
  },
  "type": "import"
 },
 "pyemma._base.model.SampledModel": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "pyemma._base.model.Model": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.model.SampledModel.__init__": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "pyemma._base.model.SampledModel._check_samples_available": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      152
     ]
    },
    "str": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.model.SampledModel.sample_conf": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "pyemma.util.statistics.confidence_interval": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.model.SampledModel.sample_f": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "pyemma.util.reflection.call_member": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.model.SampledModel.sample_mean": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "numpy.mean": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.model.SampledModel.sample_std": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "numpy.std": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.model.SampledModel.samples": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "len": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.model.SampledModel.set_model_params": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "pyemma._base.model.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyemma._base.model._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._base.model._pprint": {
  "data": {
   "shadows": "pyemma._ext.sklearn.base._pprint"
  },
  "type": "import"
 },
 "pyemma._base.model.call_member": {
  "data": {
   "shadows": "pyemma.util.reflection.call_member"
  },
  "type": "import"
 },
 "pyemma._base.model.confidence_interval": {
  "data": {
   "shadows": "pyemma.util.statistics.confidence_interval"
  },
  "type": "import"
 },
 "pyemma._base.model.getargspec_no_self": {
  "data": {
   "shadows": "pyemma.util.reflection.getargspec_no_self"
  },
  "type": "import"
 },
 "pyemma._base.model.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._base.parallel": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.parallel.NJobsMixIn": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "object": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.parallel.NJobsMixIn.n_jobs": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      63
     ]
    },
    "int": {
     "line number": [
      64
     ]
    },
    "pyemma._base.parallel.get_n_jobs": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.parallel.get_n_jobs": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": {
    "_from_env": {
     "line number": [
      21,
      22
     ]
    },
    "_from_hardware": {
     "line number": [
      32
     ]
    },
    "pyemma._base.parallel.warnings": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.parallel.get_n_jobs._from_env": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      14
     ]
    },
    "int": {
     "line number": [
      13
     ]
    },
    "pyemma._base.parallel.os": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.parallel.get_n_jobs._from_hardware": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "pyemma._base.parallel.psutil": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.parallel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma._base.parallel.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "pyemma._base.parallel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._base.progress": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.progress.reporter": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.progress.reporter.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.ProgressReporter": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "pyemma._base.progress.reporter.ProgressReporterMixin": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.progress.reporter.ProgressReporter.context": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporter.finish": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporter.num_registered": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "property": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporter.register": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporter.registered_stages": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "property": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporter.set_description": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporter.update": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "object": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin.__check_stage_registered": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._prog_rep_callbacks": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      79
     ]
    },
    "property": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._prog_rep_descriptions": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      72
     ]
    },
    "property": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._prog_rep_progressbars": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      65
     ]
    },
    "property": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_context": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "ctx": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_context.ctx": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      95
     ]
    },
    "isinstance": {
     "line number": [
      104
     ]
    },
    "list": {
     "line number": [
      104
     ]
    },
    "tuple": {
     "line number": [
      101,
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_force_finish": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "int": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_num_registered": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "len": {
     "line number": [
      207
     ]
    },
    "property": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_register": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      136
     ]
    },
    "dict": {
     "line number": [
      142
     ]
    },
    "isinstance": {
     "line number": [
      135
     ]
    },
    "numbers.Integral": {
     "line number": [
      135
     ]
    },
    "pyemma._base.progress.reporter.ProgressReporterMixin": {
     "line number": [
      139
     ]
    },
    "pyemma._base.progress.reporter._attached_to_ipy_notebook_with_widgets": {
     "line number": [
      143
     ]
    },
    "pyemma._base.progress.reporter.tqdm": {
     "line number": [
      148
     ]
    },
    "tqdm.notebook.tqdm_notebook": {
     "line number": [
      145
     ]
    },
    "type": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_registered_stages": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "property": {
     "line number": [
      209
     ]
    },
    "tuple": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_set_description": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin._progress_update": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "int": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.ProgressReporterMixin.show_progress": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter._attached_to_ipy_notebook_with_widgets": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "IPython.get_ipython": {
     "line number": [
      24
     ]
    },
    "ImportError": {
     "line number": [
      21,
      31
     ]
    },
    "getattr": {
     "line number": [
      27
     ]
    },
    "pyemma._base.progress.reporter._simple_memorize": {
     "line number": [
      15
     ]
    },
    "pyemma._base.progress.reporter.ipywidgets": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter._simple_memorize": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter._simple_memorize.wrapper": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "f": {
     "line number": [
      10,
      7
     ]
    },
    "f.res": {
     "line number": [
      11
     ]
    },
    "functools.wraps": {
     "line number": [
      7
     ]
    },
    "hasattr": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.reporter.config": {
  "data": {
   "shadows": "pyemma.config"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.get_ipython": {
  "data": {
   "shadows": "IPython.get_ipython"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.ipywidgets": {
  "data": {
   "shadows": "ipywidgets"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.tqdm": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.tqdm_notebook": {
  "data": {
   "shadows": "tqdm.notebook.tqdm_notebook"
  },
  "type": "import"
 },
 "pyemma._base.progress.reporter.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pyemma._base.progress.test_progress": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      111
     ]
    },
    "pyemma._base.progress.test_progress.unittest": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma._base.progress.test_progress.ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma._base.progress.test_progress.ProgressReporterMixin": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporterMixin"
  },
  "type": "import"
 },
 "pyemma._base.progress.test_progress.TestProgress": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "pyemma._base.progress.test_progress.unittest": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.progress.test_progress.TestProgress.setUp": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "pyemma._base.progress.ProgressReporterMixin": {
     "line number": [
      40
     ]
    },
    "pyemma._base.progress.test_progress.pyemma": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.setUpClass": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      26
     ]
    },
    "pyemma._base.progress.test_progress.os": {
     "line number": [
      30
     ]
    },
    "pyemma._base.progress.test_progress.sys": {
     "line number": [
      29,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.tearDownClass": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      32
     ]
    },
    "pyemma._base.progress.test_progress.pyemma": {
     "line number": [
      34
     ]
    },
    "pyemma._base.progress.test_progress.sys": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.test_below_threshold": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.test_config_2": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "pyemma.util.contexts.settings": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.test_config_override": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "pyemma.util.contexts.settings": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.test_ctx": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      60,
      61
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.test_ctx2": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      72,
      73
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.test_ctx3": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      87,
      88
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.TestProgress.test_ctx4": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      99,
      100
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.progress.test_progress.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma._base.progress.test_progress.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma._base.progress.test_progress.settings": {
  "data": {
   "shadows": "pyemma.util.contexts.settings"
  },
  "type": "import"
 },
 "pyemma._base.progress.test_progress.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma._base.progress.test_progress.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._base.serialization": {
  "data": {
   "symbols_in_volume": {
    "pyemma._base.serialization.load": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma._base.serialization.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pyemma._base.serialization.cli": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      91
     ]
    },
    "pyemma._base.serialization.cli.main": {
     "line number": [
      92
     ]
    },
    "pyemma._base.serialization.cli.sys": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma._base.serialization.cli.H5File": {
  "data": {
   "shadows": "pyemma._base.serialization.h5file.H5File"
  },
  "type": "import"
 },
 "pyemma._base.serialization.cli.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "pyemma._base.serialization.cli.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "pyemma._base.serialization.cli.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyemma._base.serialization.cli.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyemma._base.serialization.cli.load": {
  "data": {
   "shadows": "pyemma.load"
  },
  "type": "import"
 },
 "pyemma._base.serialization.cli.main": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      50
     ]
    },
    "collections.defaultdict": {
     "line number": [
      38
     ]
    },
    "dict": {
     "line number": [
      38
     ]
    },
    "enumerate": {
     "line number": [
      71,
      80
     ]
    },
    "io.StringIO": {
     "line number": [
      61
     ]
    },
    "print": {
     "line number": [
      51,
      85
     ]
    },
    "pyemma._base.serialization.cli.argparse": {
     "line number": [
      27
     ]
    },
    "pyemma._base.serialization.cli.json": {
     "line number": [
      88
     ]
    },
    "pyemma._base.serialization.cli.sys": {
     "line number": [
      88
     ]
    },
    "pyemma._base.serialization.cli.traceback": {
     "line number": [
      55
     ]
    },
    "pyemma._base.serialization.h5file.H5File": {
     "line number": [
      42
     ]
    },
    "pyemma.load": {
     "line number": [
      48
     ]
    },
    "repr": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma._base.serialization.cli.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      26
     ]
    },
    "pyemma._base.serialization.h5file.logging": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma._base.serialization.h5file.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.H5File": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "object": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.h5file.H5File.__enter__": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.__exit__": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "pyemma._base.serialization.h5file.h5py": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File._current_model_group": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File._hash": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "hex": {
     "line number": [
      210,
      211
     ]
    },
    "pyemma._base.serialization.h5file.H5File": {
     "line number": [
      200
     ]
    },
    "pyemma._base.serialization.h5file.hashlib": {
     "line number": [
      198
     ]
    },
    "pyemma._base.serialization.serialization.IntegrityError": {
     "line number": [
      213
     ]
    },
    "staticmethod": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File._pickle_and_attach_object": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "HDF5PersistentPickler": {
     "line number": [
      169
     ]
    },
    "io.BytesIO": {
     "line number": [
      168
     ]
    },
    "numpy.void": {
     "line number": [
      175
     ]
    },
    "pyemma._base.serialization.h5file.H5File": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File._save_attributes": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "pyemma._base.serialization.h5file.time": {
     "line number": [
      159,
      160
     ]
    },
    "pyemma.version": {
     "line number": [
      164
     ]
    },
    "repr": {
     "line number": [
      162
     ]
    },
    "str": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File._set_group": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      79
     ]
    },
    "pyemma._base.serialization.h5file.logger": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.add_object": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.add_serializable": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      132
     ]
    },
    "isinstance": {
     "line number": [
      129
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.class_repr": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.class_str": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.created": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.created_readable": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.delete": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.model": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "HDF5PersistentUnpickler": {
     "line number": [
      120
     ]
    },
    "io.BytesIO": {
     "line number": [
      117
     ]
    },
    "property": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.models_descriptive": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "property": {
     "line number": [
      180
     ]
    },
    "pyemma._base.serialization.h5file.H5File": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.pyemma_version": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.rename": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      47
     ]
    },
    "RuntimeError": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.save_streaming_chain": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.H5File.select_model": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.h5file.IntegrityError": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.IntegrityError"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.__author__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyemma._base.serialization.h5file.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyemma._base.serialization.h5file.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyemma._base.serialization.h5file.version": {
  "data": {
   "shadows": "pyemma.version"
  },
  "type": "import"
 },
 "pyemma._base.serialization.list_models": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "H5File": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.load": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "pyemma._base.serialization.mdtraj_helpers": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.serialization.mdtraj_helpers.Atom": {
  "data": {
   "shadows": "mdtraj.core.topology.Atom"
  },
  "type": "import"
 },
 "pyemma._base.serialization.mdtraj_helpers.elem": {
  "data": {
   "shadows": "mdtraj.core.element"
  },
  "type": "import"
 },
 "pyemma._base.serialization.mdtraj_helpers.getstate": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      134
     ]
    },
    "pyemma._base.serialization.mdtraj_helpers.topology_to_numpy": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.mdtraj_helpers.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma._base.serialization.mdtraj_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._base.serialization.mdtraj_helpers.setstate": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "pyemma._base.serialization.mdtraj_helpers.topology_from_numpy": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.mdtraj_helpers.topology_from_numpy": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      76,
      108
     ]
    },
    "enumerate": {
     "line number": [
      112
     ]
    },
    "int": {
     "line number": [
      115
     ]
    },
    "len": {
     "line number": [
      90,
      92
     ]
    },
    "mdtraj.core.element.get_by_symbol": {
     "line number": [
      114
     ]
    },
    "mdtraj.core.topology.Atom": {
     "line number": [
      114
     ]
    },
    "numpy.all": {
     "line number": [
      107
     ]
    },
    "numpy.arange": {
     "line number": [
      92
     ]
    },
    "numpy.array": {
     "line number": [
      104,
      106
     ]
    },
    "numpy.unique": {
     "line number": [
      94,
      99
     ]
    },
    "numpy.zeros": {
     "line number": [
      71
     ]
    },
    "pyemma._base.serialization.mdtraj_helpers.mdtraj": {
     "line number": [
      83
     ]
    },
    "range": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.mdtraj_helpers.topology_to_numpy": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      39
     ]
    },
    "numpy.fromiter": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      23
     ]
    },
    "pyemma._base.serialization.pickle_extensions._check_blosc_avail": {
     "line number": [
      68
     ]
    },
    "pyemma._base.serialization.pickle_extensions.logging": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentPickler": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "pickle.Pickler": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentPickler.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "set": {
     "line number": [
      76
     ]
    },
    "super": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentPickler._store": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "id": {
     "line number": [
      86
     ]
    },
    "pyemma._base.serialization.pickle_extensions._DEFAULT_BLOSC_OPTIONS": {
     "line number": [
      95
     ]
    },
    "str": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentPickler.dump": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "pyemma._base.serialization.mdtraj_helpers.getstate": {
     "line number": [
      82
     ]
    },
    "pyemma._base.serialization.pickle_extensions.HDF5PersistentPickler": {
     "line number": [
      83
     ]
    },
    "super": {
     "line number": [
      83
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentPickler.persistent_id": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "id": {
     "line number": [
      100
     ]
    },
    "isinstance": {
     "line number": [
      99
     ]
    },
    "len": {
     "line number": [
      102
     ]
    },
    "numpy.ndarray": {
     "line number": [
      99
     ]
    },
    "numpy.object_": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "pickle.Unpickler": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler.__check_allowed": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "pickle.UnpicklingError": {
     "line number": [
      151
     ]
    },
    "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler": {
     "line number": [
      150
     ]
    },
    "staticmethod": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "super": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler.find_class": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler": {
     "line number": [
      159
     ]
    },
    "super": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler.load": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "pyemma._base.serialization.mdtraj_helpers.setstate": {
     "line number": [
      139
     ]
    },
    "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler": {
     "line number": [
      140
     ]
    },
    "super": {
     "line number": [
      140
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.HDF5PersistentUnpickler.persistent_load": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "pickle.UnpicklingError": {
     "line number": [
      133
     ]
    },
    "str": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.Pickler": {
  "data": {
   "shadows": "pickle.Pickler"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.Unpickler": {
  "data": {
   "shadows": "pickle.Unpickler"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.UnpicklingError": {
  "data": {
   "shadows": "pickle.UnpicklingError"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions._DEFAULT_BLOSC_OPTIONS": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pyemma._base.serialization.pickle_extensions.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma._base.serialization.pickle_extensions._blosc_opts": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions._check_blosc_avail": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      49
     ]
    },
    "pyemma._base.serialization.pickle_extensions._blosc_opts": {
     "line number": [
      43
     ]
    },
    "pyemma._base.serialization.pickle_extensions.h5py": {
     "line number": [
      46
     ]
    },
    "pyemma._base.serialization.pickle_extensions.os": {
     "line number": [
      62
     ]
    },
    "pyemma._base.serialization.pickle_extensions.tempfile": {
     "line number": [
      44
     ]
    },
    "pyemma._base.serialization.pickle_extensions.warnings": {
     "line number": [
      52
     ]
    },
    "str": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.pickle_extensions.getstate": {
  "data": {
   "shadows": "pyemma._base.serialization.mdtraj_helpers.getstate"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pyemma._base.serialization.pickle_extensions.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.setstate": {
  "data": {
   "shadows": "pyemma._base.serialization.mdtraj_helpers.setstate"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma._base.serialization.pickle_extensions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      24
     ]
    },
    "pyemma._base.serialization.serialization._debug": {
     "line number": [
      27
     ]
    },
    "pyemma._base.serialization.serialization.logger": {
     "line number": [
      28
     ]
    },
    "pyemma._base.serialization.serialization.logging": {
     "line number": [
      24,
      28
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma._base.serialization.serialization.ClassVersionException": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.serialization.Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.H5File": {
  "data": {
   "shadows": "pyemma._base.serialization.h5file.H5File"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.IntegrityError": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.serialization.Loggable": {
  "data": {
   "shadows": "pyemma._base.loggable.Loggable"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.Modifications": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "object": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.serialization.Modifications.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.Modifications.apply": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      106
     ]
    },
    "callable": {
     "line number": [
      113,
      122
     ]
    },
    "func": {
     "line number": [
      114
     ]
    },
    "hasattr": {
     "line number": [
      111
     ]
    },
    "len": {
     "line number": [
      96,
      116,
      126
     ]
    },
    "pyemma._base.serialization.serialization.ClassVersionException": {
     "line number": [
      107
     ]
    },
    "pyemma._base.serialization.serialization._debug": {
     "line number": [
      93
     ]
    },
    "pyemma._base.serialization.serialization.logger": {
     "line number": [
      95
     ]
    },
    "staticmethod": {
     "line number": [
      81
     ]
    },
    "str": {
     "line number": [
      95
     ]
    },
    "value": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.Modifications.list": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.Modifications.map": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.Modifications.mv": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.Modifications.rm": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.Modifications.set": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.Modifications.transform": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      74
     ]
    },
    "callable": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.OldVersionUnsupported": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.serialization.PyEMMA_DeprecationWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "object": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn.__getstate__": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      383
     ]
    },
    "hasattr": {
     "line number": [
      389
     ]
    },
    "isinstance": {
     "line number": [
      399,
      403
     ]
    },
    "pyemma._base.estimator.Estimator": {
     "line number": [
      399
     ]
    },
    "pyemma._base.estimator.Estimator.__my_getstate__": {
     "line number": [
      400
     ]
    },
    "pyemma._base.model.Model": {
     "line number": [
      403
     ]
    },
    "pyemma._base.model.Model.__my_getstate__": {
     "line number": [
      404
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      382
     ]
    },
    "pyemma._base.serialization.serialization._debug": {
     "line number": [
      374,
      393
     ]
    },
    "pyemma._base.serialization.serialization.logger": {
     "line number": [
      375,
      394,
      411
     ]
    },
    "pyemma._base.serialization.util._importable_name": {
     "line number": [
      380
     ]
    },
    "pyemma.version": {
     "line number": [
      407
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn.__init_subclass__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      473
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn.__interpolate": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.Modifications": {
     "line number": [
      331
     ]
    },
    "pyemma._base.serialization.serialization.OldVersionUnsupported": {
     "line number": [
      316
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      306,
      310,
      311
     ]
    },
    "pyemma._base.serialization.serialization._debug": {
     "line number": [
      313,
      320,
      325,
      328,
      332
     ]
    },
    "pyemma._base.serialization.serialization.logger": {
     "line number": [
      314,
      321,
      326,
      329,
      333
     ]
    },
    "sorted": {
     "line number": [
      322
     ]
    },
    "staticmethod": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn.__new__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      176,
      177,
      178
     ]
    },
    "super": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn.__setstate__": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      422
     ]
    },
    "hasattr": {
     "line number": [
      423,
      450
     ]
    },
    "isinstance": {
     "line number": [
      440,
      444
     ]
    },
    "pyemma._base.estimator.Estimator": {
     "line number": [
      440
     ]
    },
    "pyemma._base.estimator.Estimator.__my_setstate__": {
     "line number": [
      441
     ]
    },
    "pyemma._base.model.Model": {
     "line number": [
      444
     ]
    },
    "pyemma._base.model.Model.__my_setstate__": {
     "line number": [
      445
     ]
    },
    "pyemma._base.serialization.serialization.OldVersionUnsupported": {
     "line number": [
      453
     ]
    },
    "pyemma._base.serialization.serialization.logger": {
     "line number": [
      454,
      457
     ]
    },
    "pyemma._base.serialization.serialization.warnings": {
     "line number": [
      422
     ]
    },
    "setattr": {
     "line number": [
      426
     ]
    },
    "str": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._get_classes_to_inspect": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      465
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      466,
      467,
      468
     ]
    },
    "tuple": {
     "line number": [
      465
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._get_interpolation_map": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "map": {
     "line number": [
      209,
      210
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      209
     ]
    },
    "staticmethod": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._get_private_field": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      187
     ]
    },
    "staticmethod": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._get_serialize_fields": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "all": {
     "line number": [
      204
     ]
    },
    "isinstance": {
     "line number": [
      204
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      203
     ]
    },
    "staticmethod": {
     "line number": [
      201
     ]
    },
    "str": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._get_state_of_serializeable_fields": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      298
     ]
    },
    "hasattr": {
     "line number": [
      295
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      293
     ]
    },
    "pyemma._base.serialization.serialization._debug": {
     "line number": [
      296
     ]
    },
    "pyemma._base.serialization.serialization.logger": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._get_version": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "int": {
     "line number": [
      196
     ]
    },
    "isinstance": {
     "line number": [
      196
     ]
    },
    "issubclass": {
     "line number": [
      193
     ]
    },
    "pyemma._base.serialization.serialization.ClassVersionException": {
     "line number": [
      195,
      197
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      191,
      193
     ]
    },
    "staticmethod": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._get_version_for_class_from_state": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      346
     ]
    },
    "float": {
     "line number": [
      351
     ]
    },
    "pyemma._base.serialization.serialization._debug": {
     "line number": [
      349
     ]
    },
    "pyemma._base.serialization.serialization.logger": {
     "line number": [
      350
     ]
    },
    "pyemma._base.serialization.util._importable_name": {
     "line number": [
      339
     ]
    },
    "staticmethod": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._save_data_producer": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      287,
      287
     ]
    },
    "RuntimeError": {
     "line number": [
      288
     ]
    },
    "hasattr": {
     "line number": [
      284
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      286
     ]
    },
    "value": {
     "line number": [
      281,
      283,
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn._set_state_from_serializeable_fields_and_state": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      363
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      358
     ]
    },
    "pyemma._base.serialization.serialization._debug": {
     "line number": [
      355,
      366
     ]
    },
    "pyemma._base.serialization.serialization.logger": {
     "line number": [
      356,
      364,
      367
     ]
    },
    "setattr": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn.load": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      251
     ]
    },
    "pyemma._base.serialization.h5file.H5File": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization.SerializableMixIn.save": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      242
     ]
    },
    "isinstance": {
     "line number": [
      245
     ]
    },
    "pyemma._base.loggable.Loggable": {
     "line number": [
      245
     ]
    },
    "pyemma._base.serialization.h5file.H5File": {
     "line number": [
      240
     ]
    },
    "pyemma._base.serialization.serialization.logger": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.serialization._debug": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma._base.serialization.serialization._importable_name": {
  "data": {
   "shadows": "pyemma._base.serialization.util._importable_name"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyemma._base.serialization.serialization.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.version": {
  "data": {
   "shadows": "pyemma.version"
  },
  "type": "import"
 },
 "pyemma._base.serialization.serialization.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.serialization.tests._test_classes": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.serialization.tests._test_classes.Modifications": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.Modifications"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests._test_classes.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests._test_classes._deleted_in_old_version": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests._test_classes.test_cls_v3": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests._test_classes._deleted_in_old_version.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests._test_classes._deleted_in_old_version": {
     "line number": [
      73
     ]
    },
    "super": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v1": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v1.__eq__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v1.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v2": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.Modifications": {
     "line number": [
      42
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v2.__eq__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v2.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v3": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.Modifications": {
     "line number": [
      58,
      59
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v3.__eq__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_v3.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_with_old_locations": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests._test_classes._deleted_in_old_version": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests._test_classes.test_cls_with_old_locations.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests._test_classes.test_cls_with_old_locations": {
     "line number": [
      80
     ]
    },
    "super": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests._test_classes.to_interpolate_with_functions": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.Modifications": {
     "line number": [
      91
     ]
    },
    "pyemma._base.serialization.tests._test_classes.test_cls_v1": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests._test_classes.to_interpolate_with_functions.map_y": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_cli": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      59
     ]
    },
    "pyemma._base.serialization.tests.test_cli.unittest": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma._base.serialization.tests.test_cli.Capturing": {
  "data": {
   "shadows": "pyemma.util.contexts.Capturing"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.TestListModelCLI": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests.test_cli.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests.test_cli.TestListModelCLI.setUpClass": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      28
     ]
    },
    "pyemma._base.serialization.tests.test_cli.tempfile": {
     "line number": [
      39
     ]
    },
    "pyemma.coordinates.cluster_kmeans": {
     "line number": [
      38
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      34
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      36
     ]
    },
    "pyemma.datasets.get_bpti_test_data": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_cli.TestListModelCLI.tearDownClass": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      42
     ]
    },
    "pyemma._base.serialization.tests.test_cli.os": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_cli.TestListModelCLI.test_recursive": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "pyemma._base.serialization.cli.main": {
     "line number": [
      51
     ]
    },
    "pyemma.util.contexts.Capturing": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_cli.cluster_kmeans": {
  "data": {
   "shadows": "pyemma.coordinates.cluster_kmeans"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.get_bpti_test_data": {
  "data": {
   "shadows": "pyemma.datasets.get_bpti_test_data"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.main": {
  "data": {
   "shadows": "pyemma._base.serialization.cli.main"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.tica": {
  "data": {
   "shadows": "pyemma.coordinates.tica"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_cli.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      248
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.unittest": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma._base.serialization.tests.test_serialization.ClassVersionException": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.ClassVersionException"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.H5File": {
  "data": {
   "shadows": "pyemma._base.serialization.h5file.H5File"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.OldVersionUnsupported": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.OldVersionUnsupported"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests.test_serialization.unittest": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.setUp": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests.test_serialization.tempfile": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.tearDown": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests.test_serialization.os": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_delete": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "pyemma._base.serialization.h5file.H5File": {
     "line number": [
      236
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.np_container": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_developer_forgot_to_add_version": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "broken": {
     "line number": [
      191
     ]
    },
    "pyemma._base.serialization.serialization.ClassVersionException": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_developer_forgot_to_add_version.broken": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_evil_things_not_allowed": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      203
     ]
    },
    "pickle.UnpicklingError": {
     "line number": [
      210
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn.__getstate__": {
     "line number": [
      204,
      207,
      215
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.np_container": {
     "line number": [
      203,
      216
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.pyemma": {
     "line number": [
      211
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.types": {
     "line number": [
      208
     ]
    },
    "str": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_evil_things_not_allowed.evil": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests.test_serialization.subprocess": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_interpolation_with_map": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests.test_serialization.patch_old_location": {
     "line number": [
      153
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.pyemma": {
     "line number": [
      154
     ]
    },
    "pyemma._base.serialization.util.class_rename_registry": {
     "line number": [
      151
     ]
    },
    "pyemma._base.serialization.util.class_rename_registry.save": {
     "line number": [
      152
     ]
    },
    "test_cls_v1": {
     "line number": [
      151,
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_model_not_existant": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      243
     ]
    },
    "pyemma._base.serialization.h5file.H5File": {
     "line number": [
      244
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.np_container": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_numpy_container": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "numpy.random.randint": {
     "line number": [
      96
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.np_container": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_numpy_container_object_array": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      103,
      103
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.np_container": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_private": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests.test_serialization.private_attr": {
     "line number": [
      219
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.pyemma": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_recent_model_with_old_version": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "_set_version": {
     "line number": [
      179,
      185
     ]
    },
    "pyemma._base.serialization.serialization.OldVersionUnsupported": {
     "line number": [
      181
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn._get_version": {
     "line number": [
      176
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.pyemma": {
     "line number": [
      182,
      183
     ]
    },
    "pyemma._base.serialization.util.class_rename_registry": {
     "line number": [
      181
     ]
    },
    "pyemma._base.serialization.util.class_rename_registry.exception.args": {
     "line number": [
      183
     ]
    },
    "test_cls_v3": {
     "line number": [
      173,
      179,
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_recent_model_with_old_version._set_version": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_rename": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "pyemma._base.serialization.h5file.H5File": {
     "line number": [
      227
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.np_container": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_renamed_class": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "_deleted_in_old_version": {
     "line number": [
      161,
      165
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.patch_old_location": {
     "line number": [
      165
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.pyemma": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_save_interface": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "test_cls_v1": {
     "line number": [
      110
     ]
    },
    "test_cls_v1.load": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_updated_class_v1_to_v2": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      125
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.patch_old_location": {
     "line number": [
      120
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.pyemma": {
     "line number": [
      121
     ]
    },
    "test_cls_v1": {
     "line number": [
      117,
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_updated_class_v1_to_v3": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      148
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      147
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.patch_old_location": {
     "line number": [
      142
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.pyemma": {
     "line number": [
      143
     ]
    },
    "test_cls_v1": {
     "line number": [
      139,
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.TestSerialisation.test_updated_class_v2_to_v3": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      136
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.patch_old_location": {
     "line number": [
      131
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.pyemma": {
     "line number": [
      132
     ]
    },
    "test_cls_v2": {
     "line number": [
      128,
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.UnpicklingError": {
  "data": {
   "shadows": "pickle.UnpicklingError"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.c": {
  "data": {
   "shadows": "pyemma._base.serialization.util.class_rename_registry"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.class_rename_registry": {
  "data": {
   "shadows": "pyemma._base.serialization.util.class_rename_registry"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.handle_old_classes": {
  "data": {
   "shadows": "pyemma._base.serialization.util.handle_old_classes"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.np_container": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests.test_serialization.np_container.__eq__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      43
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      47
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.np_container": {
     "line number": [
      43
     ]
    },
    "zip": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.np_container.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.patch_old_location": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      66
     ]
    },
    "pyemma._base.serialization.tests.test_serialization.copy": {
     "line number": [
      72
     ]
    },
    "pyemma._base.serialization.util.class_rename_registry": {
     "line number": [
      72
     ]
    },
    "pyemma._base.serialization.util.class_rename_registry.find_replacement_for_old": {
     "line number": [
      79
     ]
    },
    "pyemma._base.serialization.util.handle_old_classes": {
     "line number": [
      77
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.private_attr": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests.test_serialization.private_attr.__init__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.private_attr.has_private_attr": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_serialization.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_serialization.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.serialization.tests.test_topology.H5File": {
  "data": {
   "shadows": "pyemma._base.serialization.h5file.H5File"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology.Residue": {
  "data": {
   "shadows": "mdtraj.core.topology.Residue"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology.TestTopology": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests.test_topology.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.tests.test_topology.TestTopology._load_cmp": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "pyemma._base.serialization.h5file.H5File": {
     "line number": [
      38
     ]
    },
    "pyemma._base.serialization.tests.test_topology.mdtraj": {
     "line number": [
      37
     ]
    },
    "tuple": {
     "line number": [
      43,
      43,
      44,
      44,
      58,
      58
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_topology.TestTopology._load_cmp.eq": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      49
     ]
    },
    "mdtraj.core.topology.Residue": {
     "line number": [
      49
     ]
    },
    "tuple": {
     "line number": [
      54,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_topology.TestTopology.setUp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests.test_topology.tempfile": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_topology.TestTopology.tearDown": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests.test_topology.os": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_topology.TestTopology.test_bpti": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests.test_topology.pkg_resources": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_topology.TestTopology.test_opsin": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "pyemma._base.serialization.tests.test_topology.pkg_resources": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.tests.test_topology.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma._base.serialization.tests.test_topology.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._base.serialization.util": {
  "data": {
   "symbols_in_volume": {
    "pyemma._base.serialization.util._ClassRenameRegistry": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma._base.serialization.util._ClassRenameRegistry": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "object": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.util._ClassRenameRegistry.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "collections.defaultdict": {
     "line number": [
      29
     ]
    },
    "list": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.util._ClassRenameRegistry.add_mapping": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      34
     ]
    },
    "isinstance": {
     "line number": [
      32
     ]
    },
    "str": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.util._ClassRenameRegistry.clear": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "pyemma._base.serialization.util._ClassRenameRegistry.find_replacement_for_old": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pyemma._base.serialization.util._ClassRenameRegistry.old_handled_by": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pyemma._base.serialization.util.__author_": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pyemma._base.serialization.util._importable_name": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "pyemma._base.serialization.util.class_rename_registry": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyemma._base.serialization.util.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyemma._base.serialization.util.handle_old_classes": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "object": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.serialization.util.handle_old_classes.__call__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "pyemma._base.serialization.util.class_rename_registry": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.serialization.util.handle_old_classes.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "all": {
     "line number": [
      68
     ]
    },
    "isinstance": {
     "line number": [
      66,
      68
     ]
    },
    "list": {
     "line number": [
      66
     ]
    },
    "str": {
     "line number": [
      68
     ]
    },
    "tuple": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma._base.tests.test_estimator": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma._base.tests.test_estimator.Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma._base.tests.test_estimator.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "pyemma._base.tests.test_estimator.TestBaseEstimator": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "pyemma._base.tests.test_estimator.unittest": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.tests.test_estimator.TestBaseEstimator.test_sklearn_compat_fit": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "T": {
     "line number": [
      22
     ]
    },
    "pyemma._base.tests.test_estimator.have_sklearn": {
     "line number": [
      15
     ]
    },
    "pyemma._base.tests.test_estimator.unittest": {
     "line number": [
      15
     ]
    },
    "sklearn.pipeline.Pipeline": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._base.tests.test_estimator.TestBaseEstimator.test_sklearn_compat_fit.T": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "pyemma._base.estimator.Estimator": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._base.tests.test_estimator.TestBaseEstimator.test_sklearn_compat_fit.T._estimate": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "pyemma._base.tests.test_estimator.have_sklearn": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyemma._base.tests.test_estimator.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "pyemma._base.tests.test_estimator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._ext": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyemma._ext.orderedset": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.orderedset.__version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "pyemma._ext.sklearn": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.sklearn.base": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.sklearn.base.BaseEstimator": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "object": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._ext.sklearn.base.BaseEstimator.__repr__": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "len": {
     "line number": [
      288
     ]
    },
    "pyemma._ext.sklearn.base._pprint": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.BaseEstimator._get_param_names": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      208
     ]
    },
    "classmethod": {
     "line number": [
      194
     ]
    },
    "getattr": {
     "line number": [
      199
     ]
    },
    "object.__init__": {
     "line number": [
      200
     ]
    },
    "pyemma.util.reflection.getargspec_no_self": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.BaseEstimator.get_params": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      236,
      240
     ]
    },
    "dict": {
     "line number": [
      230
     ]
    },
    "getattr": {
     "line number": [
      239
     ]
    },
    "hasattr": {
     "line number": [
      247
     ]
    },
    "len": {
     "line number": [
      240
     ]
    },
    "list": {
     "line number": [
      248
     ]
    },
    "pyemma._ext.sklearn.base.warnings": {
     "line number": [
      236,
      238,
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.BaseEstimator.set_params": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      273,
      280
     ]
    },
    "len": {
     "line number": [
      269
     ]
    },
    "setattr": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.ClusterMixin": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "object": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._ext.sklearn.base.ClusterMixin.fit_predict": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.MetaEstimatorMixin": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": {
    "object": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._ext.sklearn.base.TransformerMixin": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "object": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._ext.sklearn.base.TransformerMixin.fit_transform": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base._first_and_last_element": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      29
     ]
    },
    "isinstance": {
     "line number": [
      29
     ]
    },
    "numpy.ndarray": {
     "line number": [
      29
     ]
    },
    "scipy.sparse.issparse": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base._pprint": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      155
     ]
    },
    "float": {
     "line number": [
      156
     ]
    },
    "len": {
     "line number": [
      164,
      167,
      169,
      174
     ]
    },
    "list": {
     "line number": [
      152
     ]
    },
    "numpy.get_printoptions": {
     "line number": [
      150
     ]
    },
    "numpy.set_printoptions": {
     "line number": [
      151,
      176
     ]
    },
    "printer": {
     "line number": [
      163
     ]
    },
    "repr": {
     "line number": [
      137
     ]
    },
    "sorted": {
     "line number": [
      155
     ]
    },
    "str": {
     "line number": [
      160
     ]
    },
    "type": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.clone": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      127
     ]
    },
    "RuntimeError": {
     "line number": [
      129
     ]
    },
    "TypeError": {
     "line number": [
      60
     ]
    },
    "estimator_type": {
     "line number": [
      55
     ]
    },
    "frozenset": {
     "line number": [
      54
     ]
    },
    "hasattr": {
     "line number": [
      56,
      68
     ]
    },
    "isinstance": {
     "line number": [
      85,
      87,
      91
     ]
    },
    "klass": {
     "line number": [
      75
     ]
    },
    "list": {
     "line number": [
      54
     ]
    },
    "numpy.all": {
     "line number": [
      101
     ]
    },
    "numpy.ndarray": {
     "line number": [
      85,
      91
     ]
    },
    "pyemma._ext.sklearn.base._first_and_last_element": {
     "line number": [
      97,
      98,
      115,
      116
     ]
    },
    "pyemma._ext.sklearn.base.copy": {
     "line number": [
      58,
      69
     ]
    },
    "pyemma._ext.sklearn.base.warnings": {
     "line number": [
      124
     ]
    },
    "repr": {
     "line number": [
      63
     ]
    },
    "scipy.sparse.issparse": {
     "line number": [
      102,
      104
     ]
    },
    "set": {
     "line number": [
      54
     ]
    },
    "tuple": {
     "line number": [
      54
     ]
    },
    "type": {
     "line number": [
      52,
      63,
      87,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.base.getargspec_no_self": {
  "data": {
   "shadows": "pyemma.util.reflection.getargspec_no_self"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.base.is_classifier": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      453
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.is_regressor": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.base.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.parameter_search": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.sklearn.parameter_search.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.parameter_search.ParameterGrid": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "object": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._ext.sklearn.parameter_search.ParameterGrid.__getitem__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      147
     ]
    },
    "divmod": {
     "line number": [
      143
     ]
    },
    "len": {
     "line number": [
      134
     ]
    },
    "numpy.product": {
     "line number": [
      135
     ]
    },
    "sorted": {
     "line number": [
      133
     ]
    },
    "zip": {
     "line number": [
      133,
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.parameter_search.ParameterGrid.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "collections.Mapping": {
     "line number": [
      75
     ]
    },
    "isinstance": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.parameter_search.ParameterGrid.__iter__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      98
     ]
    },
    "itertools.product": {
     "line number": [
      97
     ]
    },
    "sorted": {
     "line number": [
      92
     ]
    },
    "zip": {
     "line number": [
      96,
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.parameter_search.ParameterGrid.__len__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      104
     ]
    },
    "functools.reduce": {
     "line number": [
      104
     ]
    },
    "itertools.product": {
     "line number": [
      104,
      105
     ]
    },
    "len": {
     "line number": [
      105
     ]
    },
    "pyemma._ext.sklearn.parameter_search.operator": {
     "line number": [
      104
     ]
    },
    "sum": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.sklearn.parameter_search.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.parameter_search.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.parameter_search.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.parameter_search.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pyemma._ext.sklearn.parameter_search.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "pyemma._ext.variational": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.estimators.covar_c": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.estimators.covar_c.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools.variable_cols": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      50
     ]
    },
    "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_char": {
     "line number": [
      48
     ]
    },
    "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_double": {
     "line number": [
      40
     ]
    },
    "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_float": {
     "line number": [
      42
     ]
    },
    "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_int": {
     "line number": [
      44
     ]
    },
    "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_long": {
     "line number": [
      46
     ]
    },
    "pyemma._ext.variational.estimators.covar_c.covartools.numpy": {
     "line number": [
      37,
      37,
      39,
      41,
      43,
      45,
      47,
      54,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools.variable_cols_char": {
  "data": {
   "shadows": "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_char"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools.variable_cols_double": {
  "data": {
   "shadows": "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_double"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools.variable_cols_float": {
  "data": {
   "shadows": "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_float"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools.variable_cols_int": {
  "data": {
   "shadows": "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_int"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.covar_c.covartools.variable_cols_long": {
  "data": {
   "shadows": "pyemma._ext.variational.estimators.covar_c._covartools.variable_cols_long"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.moments": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.estimators.moments._M2": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": {
    "float": {
     "line number": [
      535,
      538
     ]
    },
    "numpy.bool": {
     "line number": [
      534,
      537
     ]
    },
    "numpy.ones": {
     "line number": [
      534,
      535,
      537,
      538
     ]
    },
    "pyemma._ext.variational.estimators.moments._M2_const": {
     "line number": [
      542
     ]
    },
    "pyemma._ext.variational.estimators.moments._M2_dense": {
     "line number": [
      530
     ]
    },
    "pyemma._ext.variational.estimators.moments._M2_sparse": {
     "line number": [
      540
     ]
    },
    "pyemma._ext.variational.estimators.moments._is_zero": {
     "line number": [
      539,
      539,
      539,
      539
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._M2_const": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "len": {
     "line number": [
      461,
      461
     ]
    },
    "numpy.ix_": {
     "line number": [
      463,
      480,
      481,
      484
     ]
    },
    "numpy.outer": {
     "line number": [
      480,
      481,
      484
     ]
    },
    "numpy.sum": {
     "line number": [
      474,
      475,
      476
     ]
    },
    "numpy.zeros": {
     "line number": [
      461
     ]
    },
    "pyemma._ext.variational.estimators.moments._M2_dense": {
     "line number": [
      463
     ]
    },
    "pyemma._ext.variational.estimators.moments._is_zero": {
     "line number": [
      465,
      466,
      467,
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._M2_dense": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      396,
      401
     ]
    },
    "numpy.sum": {
     "line number": [
      394,
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._M2_sparse": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "len": {
     "line number": [
      490,
      490
     ]
    },
    "numpy.ix_": {
     "line number": [
      491
     ]
    },
    "numpy.zeros": {
     "line number": [
      490
     ]
    },
    "pyemma._ext.variational.estimators.moments._M2_dense": {
     "line number": [
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._M2_sparse_sym": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "len": {
     "line number": [
      501,
      501,
      514,
      514,
      518,
      518
     ]
    },
    "numpy.ix_": {
     "line number": [
      515,
      516,
      521,
      522
     ]
    },
    "numpy.zeros": {
     "line number": [
      514,
      518
     ]
    },
    "pyemma._ext.variational.estimators.moments._M2_dense": {
     "line number": [
      515,
      516,
      519,
      520
     ]
    },
    "pyemma._ext.variational.estimators.moments._filter_variable_indices": {
     "line number": [
      511,
      512
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._M2_symmetric": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": {
    "float": {
     "line number": [
      564,
      567
     ]
    },
    "numpy.bool": {
     "line number": [
      563,
      566
     ]
    },
    "numpy.ones": {
     "line number": [
      563,
      564,
      566,
      567
     ]
    },
    "pyemma._ext.variational.estimators.moments._M2_const": {
     "line number": [
      593,
      594,
      595,
      596
     ]
    },
    "pyemma._ext.variational.estimators.moments._M2_dense": {
     "line number": [
      555,
      556,
      557,
      558
     ]
    },
    "pyemma._ext.variational.estimators.moments._M2_sparse_sym": {
     "line number": [
      569
     ]
    },
    "pyemma._ext.variational.estimators.moments._filter_variable_indices": {
     "line number": [
      583,
      587,
      588,
      592
     ]
    },
    "pyemma._ext.variational.estimators.moments._is_zero": {
     "line number": [
      568,
      568,
      568,
      568
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments.__author__": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators.moments._center": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "float": {
     "line number": [
      351
     ]
    },
    "numpy.subtract": {
     "line number": [
      353,
      355,
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._copy_convert": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      213
     ]
    },
    "numpy.float64": {
     "line number": [
      211,
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._filter_variable_indices": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "numpy.in1d": {
     "line number": [
      378
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      379
     ]
    },
    "numpy.where": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._is_zero": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      87,
      89
     ]
    },
    "numpy.all": {
     "line number": [
      90
     ]
    },
    "numpy.ndarray": {
     "line number": [
      89
     ]
    },
    "pyemma._ext.variational.estimators.moments.numbers": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._sparsify": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "int": {
     "line number": [
      146
     ]
    },
    "len": {
     "line number": [
      150
     ]
    },
    "max": {
     "line number": [
      135
     ]
    },
    "numpy.where": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._sparsify_pair": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "pyemma._ext.variational.estimators.moments._is_zero": {
     "line number": [
      174,
      174
     ]
    },
    "pyemma._ext.variational.estimators.moments._sparsify": {
     "line number": [
      170,
      171
     ]
    },
    "pyemma._ext.variational.estimators.moments.math": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._sum": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "numpy.sum": {
     "line number": [
      294,
      301
     ]
    },
    "numpy.zeros": {
     "line number": [
      315,
      317
     ]
    },
    "pyemma._ext.variational.estimators.moments._sum_sparse": {
     "line number": [
      280,
      282,
      285,
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments._sum_sparse": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "len": {
     "line number": [
      228
     ]
    },
    "numpy.zeros": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments.covar": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1026
     ]
    },
    "pyemma._ext.variational.estimators.moments.moments_XX": {
     "line number": [
      1024
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments.covars": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1093,
      1093
     ]
    },
    "pyemma._ext.variational.estimators.moments.moments_XXXY": {
     "line number": [
      1091
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.moments.moments_XX": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": {
    "pyemma._ext.variational.estimators.moments._M2": {
     "line number": [
      687,
      691,
      694
     ]
    },
    "pyemma._ext.variational.estimators.moments._center": {
     "line number": [
      674
     ]
    },
    "pyemma._ext.variational.estimators.moments._copy_convert": {
     "line number": [
      668,
      685
     ]
    },
    "pyemma._ext.variational.estimators.moments._sparsify": {
     "line number": [
      663
     ]
    },
    "pyemma._ext.variational.estimators.moments._sum": {
     "line number": [
      671
     ]
    },
    "pyemma._ext.variational.estimators.moments.warnings": {
     "line number": [
      660
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments.moments_XXXY": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      783
     ]
    },
    "pyemma._ext.variational.estimators.moments._M2": {
     "line number": [
      822,
      824,
      829,
      831,
      834,
      836
     ]
    },
    "pyemma._ext.variational.estimators.moments._M2_symmetric": {
     "line number": [
      800
     ]
    },
    "pyemma._ext.variational.estimators.moments._center": {
     "line number": [
      796,
      797
     ]
    },
    "pyemma._ext.variational.estimators.moments._copy_convert": {
     "line number": [
      790,
      791,
      811,
      819
     ]
    },
    "pyemma._ext.variational.estimators.moments._sparsify_pair": {
     "line number": [
      785
     ]
    },
    "pyemma._ext.variational.estimators.moments._sum": {
     "line number": [
      793
     ]
    },
    "pyemma._ext.variational.estimators.moments.warnings": {
     "line number": [
      780
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments.moments_block": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": {
    "pyemma._ext.variational.estimators.moments._M2": {
     "line number": [
      938,
      940,
      942,
      944,
      949,
      952,
      955,
      958,
      962,
      965,
      969
     ]
    },
    "pyemma._ext.variational.estimators.moments._center": {
     "line number": [
      917,
      918
     ]
    },
    "pyemma._ext.variational.estimators.moments._copy_convert": {
     "line number": [
      911,
      912,
      927,
      935
     ]
    },
    "pyemma._ext.variational.estimators.moments._sparsify": {
     "line number": [
      906,
      907
     ]
    },
    "pyemma._ext.variational.estimators.moments._sum": {
     "line number": [
      914
     ]
    },
    "pyemma._ext.variational.estimators.moments.warnings": {
     "line number": [
      903
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.moments.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.moments.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.running_moments": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.estimators.running_moments.Moments": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "object": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._ext.variational.estimators.running_moments.Moments.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "float": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.Moments.combine": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "len": {
     "line number": [
      54
     ]
    },
    "numpy.outer": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.Moments.copy": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "pyemma._ext.variational.estimators.running_moments.Moments": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.Moments.covar": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.Moments.mean_x": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "property": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.Moments.mean_y": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "property": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.MomentsStorage": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "object": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._ext.variational.estimators.running_moments.MomentsStorage.__init__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.MomentsStorage._can_merge_tail": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "len": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.MomentsStorage.moments": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "len": {
     "line number": [
      143
     ]
    },
    "property": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.MomentsStorage.store": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "len": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "object": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.__init__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      201,
      203,
      207
     ]
    },
    "pyemma._ext.variational.estimators.running_moments.MomentsStorage": {
     "line number": [
      215,
      218,
      221
     ]
    },
    "pyemma._ext.variational.estimators.running_moments.warnings": {
     "line number": [
      205,
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.add": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      266
     ]
    },
    "ValueError": {
     "line number": [
      256,
      264
     ]
    },
    "float": {
     "line number": [
      260
     ]
    },
    "isinstance": {
     "line number": [
      259,
      262
     ]
    },
    "len": {
     "line number": [
      263,
      264,
      264
     ]
    },
    "moments_XX": {
     "line number": [
      269
     ]
    },
    "moments_XXXY": {
     "line number": [
      279
     ]
    },
    "moments_block": {
     "line number": [
      294
     ]
    },
    "numpy.ndarray": {
     "line number": [
      262
     ]
    },
    "numpy.ones": {
     "line number": [
      260
     ]
    },
    "pyemma._ext.variational.estimators.running_moments.Moments": {
     "line number": [
      276,
      289,
      290,
      305,
      307,
      308
     ]
    },
    "pyemma._ext.variational.estimators.running_moments.numbers": {
     "line number": [
      259
     ]
    },
    "type": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.cov_XX": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.cov_XY": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.cov_YY": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.mean_X": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.mean_Y": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.moments_XX": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.moments_XY": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.moments_YY": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.sum_X": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.sum_Y": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.weight_XX": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.weight_XY": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.RunningCovar.weight_YY": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.__author__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators.running_moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.running_moments.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.running_moments.running_covar": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": {
    "pyemma._ext.variational.estimators.running_moments.RunningCovar": {
     "line number": [
      414
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.running_moments.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.estimators.tests.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      158
     ]
    },
    "pyemma._ext.variational.estimators.tests.benchmark_moments.main": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.benchmark_moments": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      108
     ]
    },
    "len": {
     "line number": [
      107,
      118
     ]
    },
    "numpy.zeros": {
     "line number": [
      107,
      118
     ]
    },
    "print": {
     "line number": [
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      138
     ]
    },
    "pyemma._ext.variational.estimators.tests.benchmark_moments.genS": {
     "line number": [
      96
     ]
    },
    "pyemma._ext.variational.estimators.tests.benchmark_moments.genX": {
     "line number": [
      99,
      109
     ]
    },
    "pyemma._ext.variational.estimators.tests.benchmark_moments.genY": {
     "line number": [
      101,
      111
     ]
    },
    "pyemma._ext.variational.estimators.tests.benchmark_moments.mytime_momentsXX": {
     "line number": [
      114
     ]
    },
    "pyemma._ext.variational.estimators.tests.benchmark_moments.mytime_momentsXXXY": {
     "line number": [
      112
     ]
    },
    "pyemma._ext.variational.estimators.tests.benchmark_moments.reftime_momentsXX": {
     "line number": [
      104
     ]
    },
    "pyemma._ext.variational.estimators.tests.benchmark_moments.reftime_momentsXXXY": {
     "line number": [
      102
     ]
    },
    "str": {
     "line number": [
      131,
      131,
      131
     ]
    },
    "tuple": {
     "line number": [
      132,
      133,
      134,
      135,
      136,
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.genS": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.genX": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      17
     ]
    },
    "numpy.random.rand": {
     "line number": [
      14
     ]
    },
    "numpy.zeros": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.genY": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      29
     ]
    },
    "numpy.random.rand": {
     "line number": [
      26
     ]
    },
    "numpy.zeros": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.main": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "pyemma._ext.variational.estimators.tests.benchmark_moments.benchmark_moments": {
     "line number": [
      144,
      145,
      146,
      147,
      148,
      149,
      150,
      151,
      152,
      153,
      154,
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.mytime_momentsXX": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "float": {
     "line number": [
      57
     ]
    },
    "pyemma._ext.variational.estimators.tests.benchmark_moments.time": {
     "line number": [
      52,
      55
     ]
    },
    "range": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.mytime_momentsXXXY": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "float": {
     "line number": [
      91
     ]
    },
    "pyemma._ext.variational.estimators.tests.benchmark_moments.time": {
     "line number": [
      86,
      89
     ]
    },
    "range": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.reftime_momentsXX": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "float": {
     "line number": [
      43,
      47
     ]
    },
    "numpy.dot": {
     "line number": [
      44
     ]
    },
    "pyemma._ext.variational.estimators.tests.benchmark_moments.time": {
     "line number": [
      39,
      45
     ]
    },
    "range": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.reftime_momentsXXXY": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "float": {
     "line number": [
      70,
      71,
      81
     ]
    },
    "numpy.dot": {
     "line number": [
      73,
      73,
      74,
      77,
      78
     ]
    },
    "pyemma._ext.variational.estimators.tests.benchmark_moments.time": {
     "line number": [
      62,
      79
     ]
    },
    "range": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.benchmark_moments.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.tests.test_moments": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      433
     ]
    },
    "pyemma._ext.variational.estimators.tests.test_moments.unittest": {
     "line number": [
      434
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "pyemma._ext.variational.estimators.tests.test_moments.unittest": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments._test_moments_X": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      78,
      79,
      84,
      89
     ]
    },
    "numpy.diag": {
     "line number": [
      89
     ]
    },
    "numpy.dot": {
     "line number": [
      76
     ]
    },
    "numpy.float64": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments._test_moments_XY": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "float": {
     "line number": [
      176,
      177
     ]
    },
    "numpy.allclose": {
     "line number": [
      191,
      192,
      193,
      194,
      195,
      200,
      201,
      207,
      208
     ]
    },
    "numpy.diag": {
     "line number": [
      207,
      208
     ]
    },
    "numpy.dot": {
     "line number": [
      185,
      185,
      186,
      186,
      188,
      189
     ]
    },
    "numpy.sum": {
     "line number": [
      167,
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments._test_moments_block": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "float": {
     "line number": [
      370,
      371
     ]
    },
    "numpy.allclose": {
     "line number": [
      377,
      378,
      379,
      380,
      381,
      382,
      383,
      387,
      388,
      389,
      390,
      395,
      396,
      397,
      398
     ]
    },
    "numpy.diag": {
     "line number": [
      395,
      396,
      397,
      398
     ]
    },
    "numpy.dot": {
     "line number": [
      372,
      373,
      374,
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.setUpClass": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      9
     ]
    },
    "numpy.array": {
     "line number": [
      48
     ]
    },
    "numpy.bool": {
     "line number": [
      38,
      40,
      41
     ]
    },
    "numpy.ones": {
     "line number": [
      28,
      30,
      32,
      34
     ]
    },
    "numpy.random.choice": {
     "line number": [
      49,
      50
     ]
    },
    "numpy.random.rand": {
     "line number": [
      11,
      12,
      14,
      15,
      16,
      17,
      44
     ]
    },
    "numpy.random.randint": {
     "line number": [
      37,
      39
     ]
    },
    "numpy.zeros": {
     "line number": [
      19,
      21,
      23,
      25,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_boolean_moments": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "numpy.array_equal": {
     "line number": [
      145,
      146
     ]
    },
    "numpy.dot": {
     "line number": [
      140
     ]
    },
    "numpy.int64": {
     "line number": [
      140,
      140,
      143,
      144
     ]
    },
    "numpy.round": {
     "line number": [
      143,
      144
     ]
    },
    "numpy.sum": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_X": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_sparseconst": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_sparsezero": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_sym": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_sym_sparseconst": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_sym_sparsezero": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_weighted": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_weighted_sparseconst": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_weighted_sparsezero": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_weighted_sym": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_weighted_sym_sparseconst": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_XY_weighted_sym_sparsezero": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_X_sparseconst": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_X_sparsezero": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_block": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_block_sparseconst": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.TestMoments.test_moments_block_sparsezero": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.tests.test_moments.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      326
     ]
    },
    "pyemma._ext.variational.estimators.tests.test_running_moments.unittest": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "pyemma._ext.variational.estimators.tests.test_running_moments.unittest": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.setUpClass": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      10
     ]
    },
    "float": {
     "line number": [
      39,
      40,
      51,
      63,
      64,
      74
     ]
    },
    "numpy.array": {
     "line number": [
      29
     ]
    },
    "numpy.dot": {
     "line number": [
      36,
      37,
      38,
      43,
      44,
      45,
      49,
      49,
      50,
      50,
      54,
      54,
      55,
      55,
      61,
      62,
      67,
      68,
      72,
      72,
      73,
      73,
      77,
      77,
      78,
      78
     ]
    },
    "numpy.random.rand": {
     "line number": [
      12,
      13,
      22,
      24
     ]
    },
    "numpy.shape": {
     "line number": [
      32,
      33
     ]
    },
    "numpy.sum": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_meanfree": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      153,
      154
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      141,
      142,
      143,
      144,
      148,
      149,
      153,
      154
     ]
    },
    "range": {
     "line number": [
      139,
      146,
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_sym_meanfree": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      251,
      252
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      239,
      240,
      241,
      242,
      246,
      247,
      251,
      252
     ]
    },
    "range": {
     "line number": [
      237,
      244,
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_sym_withmean": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      231,
      232
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      219,
      220,
      221,
      222,
      226,
      227,
      231,
      232
     ]
    },
    "range": {
     "line number": [
      217,
      224,
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_weighted_meanfree": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      211,
      212
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      193,
      194,
      195,
      196,
      203,
      204,
      211,
      212
     ]
    },
    "range": {
     "line number": [
      188,
      198,
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_weighted_sym_meanfree": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      297,
      298
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      283,
      284,
      285,
      286,
      291,
      292,
      297,
      298
     ]
    },
    "range": {
     "line number": [
      280,
      288,
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_weighted_sym_withmean": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      274,
      275
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      260,
      261,
      262,
      263,
      268,
      269,
      274,
      275
     ]
    },
    "range": {
     "line number": [
      257,
      265,
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_weighted_withmean": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      182,
      183
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      164,
      165,
      166,
      167,
      174,
      175,
      182,
      183
     ]
    },
    "range": {
     "line number": [
      159,
      169,
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXXY_withmean": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      133,
      134
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      121,
      122,
      123,
      124,
      128,
      129,
      133,
      134
     ]
    },
    "range": {
     "line number": [
      119,
      126,
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XXYY_meanfree": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      321,
      322,
      323
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      305,
      306,
      307,
      308,
      309,
      314,
      315,
      316,
      321,
      322,
      323
     ]
    },
    "range": {
     "line number": [
      303,
      312,
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XX_meanfree": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      114
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      104,
      105,
      106,
      110,
      114
     ]
    },
    "range": {
     "line number": [
      102,
      108,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.TestRunningMoments.test_XX_withmean": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      97
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      87,
      88,
      89,
      93,
      97
     ]
    },
    "range": {
     "line number": [
      85,
      91,
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.estimators.tests.test_running_moments.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.solvers.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma._ext.variational.solvers.direct": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.solvers.direct._ZeroRankError": {
  "data": {
   "shadows": "ZeroRankError"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers.direct.__author__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pyemma._ext.variational.solvers.direct._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers.direct.eig": {
  "data": {
   "shadows": "scipy.linalg.eig"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers.direct.eig_corr": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      291
     ]
    },
    "numpy.allclose": {
     "line number": [
      275
     ]
    },
    "numpy.argmax": {
     "line number": [
      291
     ]
    },
    "numpy.dot": {
     "line number": [
      272,
      272,
      286
     ]
    },
    "numpy.sign": {
     "line number": [
      292
     ]
    },
    "pyemma._ext.variational.solvers.direct.sort_by_norm": {
     "line number": [
      283
     ]
    },
    "pyemma._ext.variational.solvers.direct.spd_inv_split": {
     "line number": [
      271
     ]
    },
    "range": {
     "line number": [
      290
     ]
    },
    "scipy.linalg.eig": {
     "line number": [
      280
     ]
    },
    "scipy.linalg.eigh": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.direct.eigh": {
  "data": {
   "shadows": "scipy.linalg.eigh"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers.direct.schur": {
  "data": {
   "shadows": "scipy.linalg.schur"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers.direct.sort_by_norm": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      25
     ]
    },
    "numpy.argsort": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.direct.spd_eig": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      75
     ]
    },
    "eig_qr": {
     "line number": [
      68
     ]
    },
    "max": {
     "line number": [
      83
     ]
    },
    "numpy.abs": {
     "line number": [
      86,
      97
     ]
    },
    "numpy.allclose": {
     "line number": [
      64
     ]
    },
    "numpy.argmax": {
     "line number": [
      97
     ]
    },
    "numpy.diag": {
     "line number": [
      73
     ]
    },
    "numpy.min": {
     "line number": [
      81
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      88
     ]
    },
    "numpy.shape": {
     "line number": [
      87
     ]
    },
    "numpy.sign": {
     "line number": [
      98
     ]
    },
    "pyemma._ext.variational.solvers.direct.sort_by_norm": {
     "line number": [
      77
     ]
    },
    "range": {
     "line number": [
      96
     ]
    },
    "scipy.linalg.schur": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.direct.spd_inv": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      136
     ]
    },
    "numpy.dot": {
     "line number": [
      136
     ]
    },
    "numpy.shape": {
     "line number": [
      129
     ]
    },
    "pyemma._ext.variational.solvers.direct.spd_eig": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.direct.spd_inv_split": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      219
     ]
    },
    "numpy.dot": {
     "line number": [
      219
     ]
    },
    "numpy.shape": {
     "line number": [
      212
     ]
    },
    "numpy.sqrt": {
     "line number": [
      216,
      219
     ]
    },
    "pyemma._ext.variational.solvers.direct.spd_eig": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.direct.spd_inv_sqrt": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      175
     ]
    },
    "numpy.dot": {
     "line number": [
      175
     ]
    },
    "numpy.ones": {
     "line number": [
      172
     ]
    },
    "numpy.shape": {
     "line number": [
      167
     ]
    },
    "numpy.sqrt": {
     "line number": [
      171,
      175
     ]
    },
    "pyemma._ext.variational.solvers.direct.spd_eig": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.eig_qr": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.solvers.eig_qr.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma._ext.variational.solvers.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.solvers.tests.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma._ext.variational.solvers.tests.test_direct": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      74
     ]
    },
    "pyemma._ext.variational.solvers.tests.test_direct.unittest": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.TestDirect": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "pyemma._ext.variational.solvers.tests.test_direct.unittest": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.TestDirect.test_eig_corr": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      57,
      64
     ]
    },
    "numpy.array": {
     "line number": [
      37,
      40,
      43
     ]
    },
    "numpy.diag": {
     "line number": [
      70
     ]
    },
    "numpy.dot": {
     "line number": [
      69
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      69,
      70
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      56,
      58,
      62,
      65,
      70
     ]
    },
    "pyemma._ext.variational.solvers.tests.test_direct.scipy": {
     "line number": [
      49
     ]
    },
    "pyemma._ext.variational.solvers.tests.test_direct.sort_by_norm_and_imag_sign": {
     "line number": [
      50,
      54
     ]
    },
    "range": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.TestDirect.test_spd_inv_split": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      33
     ]
    },
    "numpy.abs": {
     "line number": [
      28
     ]
    },
    "numpy.allclose": {
     "line number": [
      25
     ]
    },
    "numpy.array": {
     "line number": [
      19,
      31
     ]
    },
    "numpy.diag": {
     "line number": [
      28,
      28
     ]
    },
    "numpy.dot": {
     "line number": [
      25,
      27
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      25
     ]
    },
    "numpy.max": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.__author__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.sort_by_norm_and_imag_sign": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "len": {
     "line number": [
      9
     ]
    },
    "numpy.abs": {
     "line number": [
      10
     ]
    },
    "numpy.argsort": {
     "line number": [
      12
     ]
    },
    "numpy.float64": {
     "line number": [
      9,
      9
     ]
    },
    "numpy.imag": {
     "line number": [
      11
     ]
    },
    "numpy.sign": {
     "line number": [
      11
     ]
    },
    "numpy.zeros": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._ext.variational.solvers.tests.test_direct.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma._ext.variational.util": {
  "data": {},
  "type": "module"
 },
 "pyemma._ext.variational.util.ZeroRankError": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "numpy.linalg.LinAlgError": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma._ext.variational.util.__author__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pyemma._ext.variational.util._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma._ext.variational.util.features_to_basis": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "pyemma._version": {
  "data": {},
  "type": "module"
 },
 "pyemma._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "pyemma._version.json": {
     "line number": [
      21
     ]
    },
    "pyemma._version.version_json": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyemma._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pyemma._version_check": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "_dummy": {
     "line number": [
      61
     ]
    },
    "pyemma.os": {
     "line number": [
      72
     ]
    },
    "pyemma.sys": {
     "line number": [
      72
     ]
    },
    "pyemma.threading": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma._version_check._dummy": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "pyemma._version_check._dummy.start": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyemma._version_check._impl": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      97
     ]
    },
    "UserWarning": {
     "line number": [
      92,
      96
     ]
    },
    "contextlib.closing": {
     "line number": [
      84
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      88,
      89
     ]
    },
    "filter": {
     "line number": [
      87
     ]
    },
    "pyemma.json": {
     "line number": [
      86
     ]
    },
    "pyemma.logging": {
     "line number": [
      99
     ]
    },
    "pyemma.platform": {
     "line number": [
      82,
      83
     ]
    },
    "pyemma.sys": {
     "line number": [
      93
     ]
    },
    "pyemma.uuid": {
     "line number": [
      83
     ]
    },
    "pyemma.warnings": {
     "line number": [
      90,
      94
     ]
    },
    "str": {
     "line number": [
      85
     ]
    },
    "tuple": {
     "line number": [
      87
     ]
    },
    "urllib.request.Request": {
     "line number": [
      80
     ]
    },
    "urllib.request.urlopen": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "pyemma.coordinates": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.acf": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.acf.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.coordinates.acf.__author__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyemma.coordinates.acf.acf": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      66,
      79,
      110
     ]
    },
    "enumerate": {
     "line number": [
      77,
      89
     ]
    },
    "int": {
     "line number": [
      95
     ]
    },
    "isinstance": {
     "line number": [
      56
     ]
    },
    "len": {
     "line number": [
      59,
      60
     ]
    },
    "list": {
     "line number": [
      56
     ]
    },
    "numpy.array": {
     "line number": [
      85,
      87
     ]
    },
    "numpy.ceil": {
     "line number": [
      95
     ]
    },
    "numpy.conjugate": {
     "line number": [
      96
     ]
    },
    "numpy.fft.fft": {
     "line number": [
      95
     ]
    },
    "numpy.fft.ifft": {
     "line number": [
      96
     ]
    },
    "numpy.linspace": {
     "line number": [
      106
     ]
    },
    "numpy.log2": {
     "line number": [
      95
     ]
    },
    "numpy.resize": {
     "line number": [
      113,
      114
     ]
    },
    "numpy.transpose": {
     "line number": [
      120,
      120
     ]
    },
    "pyemma.coordinates.acf.sys": {
     "line number": [
      103
     ]
    },
    "range": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.acf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.acf.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.coordinates.api": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      33
     ]
    },
    "logging.getLogger": {
     "line number": [
      33
     ]
    },
    "str": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.api.AssignCenters": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.assign.AssignCenters"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.Discretizer": {
  "data": {
   "shadows": "pyemma.coordinates.pipelines.Discretizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.feature_reader.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.Iterable": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.iterable.Iterable"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.KmeansClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.kmeans.KmeansClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.LaggedCovariance": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.LaggedCovariance"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.MDFeaturizer": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.MiniBatchKmeansClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.NystroemTICA": {
  "data": {
   "shadows": "pyemma.coordinates.transform.nystroem_tica.NystroemTICA"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.PCA": {
  "data": {
   "shadows": "pyemma.coordinates.transform.pca.PCA"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.Pipeline": {
  "data": {
   "shadows": "pyemma.coordinates.pipelines.Pipeline"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.SourcesMerger": {
  "data": {
   "shadows": "pyemma.coordinates.data.sources_merger.SourcesMerger"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.TICA": {
  "data": {
   "shadows": "pyemma.coordinates.transform.tica.TICA"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.Topology": {
  "data": {
   "shadows": "mdtraj.Topology"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.Trajectory": {
  "data": {
   "shadows": "mdtraj.Trajectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.UniformTimeClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.VAMP": {
  "data": {
   "shadows": "pyemma.coordinates.transform.vamp.VAMP"
  },
  "type": "import"
 },
 "pyemma.coordinates.api._DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.api._KoopmanEstimator": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.koopman._KoopmanEstimator"
  },
  "type": "import"
 },
 "pyemma.coordinates.api._PyEMMA_DeprecationWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
  },
  "type": "import"
 },
 "pyemma.coordinates.api._RegularSpaceClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.regspace.RegularSpaceClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.__all__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyemma.coordinates.api.__author__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.coordinates.api.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyemma.coordinates.api.__credits__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyemma.coordinates.api.__docformat__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.coordinates.api.__email__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyemma.coordinates.api.__maintainer__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyemma.coordinates.api._check_old_chunksize_arg": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      76,
      95
     ]
    },
    "pyemma.coordinates.api.warnings": {
     "line number": [
      87,
      91
     ]
    },
    "pyemma.util.annotators.get_culprit": {
     "line number": [
      85
     ]
    },
    "pyemma.util.exceptions.PyEMMA_DeprecationWarning": {
     "line number": [
      88,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api._logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.coordinates.api._logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.coordinates.api._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.api._string_types": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pyemma.coordinates.api._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.assign_to_centers": {
  "data": {
   "lineno": 2011,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2089
     ]
    },
    "pyemma.coordinates.api._check_old_chunksize_arg": {
     "line number": [
      2094
     ]
    },
    "pyemma.coordinates.clustering.assign.AssignCenters": {
     "line number": [
      2092
     ]
    },
    "pyemma.util.reflection.get_default_args": {
     "line number": [
      2094
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.cluster_kmeans": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": {
    "pyemma.coordinates.api._check_old_chunksize_arg": {
     "line number": [
      1823
     ]
    },
    "pyemma.coordinates.clustering.kmeans.KmeansClustering": {
     "line number": [
      1819
     ]
    },
    "pyemma.util.reflection.get_default_args": {
     "line number": [
      1823
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.cluster_mini_batch_kmeans": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": {
    "pyemma.coordinates.api._check_old_chunksize_arg": {
     "line number": [
      1686
     ]
    },
    "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering": {
     "line number": [
      1683
     ]
    },
    "pyemma.util.reflection.get_default_args": {
     "line number": [
      1686
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.cluster_regspace": {
  "data": {
   "lineno": 1910,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1998
     ]
    },
    "pyemma.coordinates.api._check_old_chunksize_arg": {
     "line number": [
      2003
     ]
    },
    "pyemma.coordinates.clustering.regspace.RegularSpaceClustering": {
     "line number": [
      2000
     ]
    },
    "pyemma.util.reflection.get_default_args": {
     "line number": [
      2003
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.cluster_uniform_time": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": {
    "pyemma.coordinates.api._check_old_chunksize_arg": {
     "line number": [
      1902
     ]
    },
    "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering": {
     "line number": [
      1900
     ]
    },
    "pyemma.util.reflection.get_default_args": {
     "line number": [
      1902
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.combine_sources": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "pyemma.coordinates.data.sources_merger.SourcesMerger": {
     "line number": [
      435
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.covariance_lagged": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1610,
      1617,
      1624
     ]
    },
    "float": {
     "line number": [
      1537
     ]
    },
    "getattr": {
     "line number": [
      1619
     ]
    },
    "hasattr": {
     "line number": [
      1619
     ]
    },
    "isinstance": {
     "line number": [
      1607,
      1621
     ]
    },
    "list": {
     "line number": [
      1621
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1621
     ]
    },
    "pyemma.coordinates.api._string_types": {
     "line number": [
      1607
     ]
    },
    "pyemma.coordinates.estimation.covariance.LaggedCovariance": {
     "line number": [
      1627
     ]
    },
    "pyemma.coordinates.estimation.koopman._KoopmanEstimator": {
     "line number": [
      1611
     ]
    },
    "pyemma.util.types.MethodType": {
     "line number": [
      1619
     ]
    },
    "tuple": {
     "line number": [
      1621
     ]
    },
    "type": {
     "line number": [
      1619
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.create_file_reader": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.create_file_reader"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.discretizer": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": {
    "pyemma.coordinates.api._logger": {
     "line number": [
      626
     ]
    },
    "pyemma.coordinates.clustering.kmeans.KmeansClustering": {
     "line number": [
      628
     ]
    },
    "pyemma.coordinates.pipelines.Discretizer": {
     "line number": [
      629
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.enforce_top": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.enforce_top"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.featurizer": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.frames_from_files": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.frames_from_file.frames_from_files"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.get_culprit": {
  "data": {
   "shadows": "pyemma.util.annotators.get_culprit"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.get_default_args": {
  "data": {
   "shadows": "pyemma.util.reflection.get_default_args"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.histogram": {
  "data": {
   "shadows": "pyemma.coordinates.util.stat.histogram"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.load": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      250
     ]
    },
    "any": {
     "line number": [
      241
     ]
    },
    "isinstance": {
     "line number": [
      239,
      240,
      241
     ]
    },
    "len": {
     "line number": [
      242,
      245
     ]
    },
    "list": {
     "line number": [
      240,
      241
     ]
    },
    "pyemma.coordinates.api._check_old_chunksize_arg": {
     "line number": [
      238
     ]
    },
    "pyemma.coordinates.api._string_types": {
     "line number": [
      239
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.create_file_reader": {
     "line number": [
      243
     ]
    },
    "pyemma.util.reflection.get_default_args": {
     "line number": [
      238
     ]
    },
    "str": {
     "line number": [
      241
     ]
    },
    "tuple": {
     "line number": [
      240,
      241
     ]
    },
    "type": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.pca": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      1015
     ]
    },
    "pyemma.coordinates.api._check_old_chunksize_arg": {
     "line number": [
      1019
     ]
    },
    "pyemma.coordinates.api.warnings": {
     "line number": [
      1015
     ]
    },
    "pyemma.coordinates.transform.pca.PCA": {
     "line number": [
      1017
     ]
    },
    "pyemma.util.reflection.get_default_args": {
     "line number": [
      1019
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.pipeline": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      518
     ]
    },
    "list": {
     "line number": [
      518
     ]
    },
    "pyemma.coordinates.pipelines.Pipeline": {
     "line number": [
      520
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.save_traj": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      725,
      727
     ]
    },
    "ValueError": {
     "line number": [
      714,
      741
     ]
    },
    "all": {
     "line number": [
      712
     ]
    },
    "isinstance": {
     "line number": [
      709,
      710,
      712,
      724,
      726
     ]
    },
    "len": {
     "line number": [
      740,
      743
     ]
    },
    "list": {
     "line number": [
      724
     ]
    },
    "mdtraj.Topology": {
     "line number": [
      726
     ]
    },
    "mdtraj.Trajectory": {
     "line number": [
      726
     ]
    },
    "numpy.vstack": {
     "line number": [
      737
     ]
    },
    "pyemma.coordinates.api._logger": {
     "line number": [
      758
     ]
    },
    "pyemma.coordinates.api._string_types": {
     "line number": [
      726
     ]
    },
    "pyemma.coordinates.api.itertools": {
     "line number": [
      713
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      709,
      712
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      709,
      710
     ]
    },
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files": {
     "line number": [
      745
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.enforce_top": {
     "line number": [
      734
     ]
    },
    "tuple": {
     "line number": [
      724
     ]
    },
    "type": {
     "line number": [
      725,
      729
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.save_trajs": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      856
     ]
    },
    "isinstance": {
     "line number": [
      828,
      834
     ]
    },
    "len": {
     "line number": [
      851,
      855,
      855,
      856,
      856,
      871
     ]
    },
    "numpy.ndarray": {
     "line number": [
      828,
      834
     ]
    },
    "pyemma.coordinates.api._logger": {
     "line number": [
      874
     ]
    },
    "pyemma.coordinates.api.os": {
     "line number": [
      844
     ]
    },
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      863,
      867
     ]
    },
    "pyemma.util.types.is_iterable": {
     "line number": [
      826
     ]
    },
    "range": {
     "line number": [
      851
     ]
    },
    "zip": {
     "line number": [
      861,
      869
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.source": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      401
     ]
    },
    "any": {
     "line number": [
      384,
      388
     ]
    },
    "isinstance": {
     "line number": [
      382,
      383,
      384,
      387,
      387,
      388,
      397
     ]
    },
    "len": {
     "line number": [
      384,
      388
     ]
    },
    "list": {
     "line number": [
      383,
      384,
      387
     ]
    },
    "numpy.ndarray": {
     "line number": [
      387,
      388
     ]
    },
    "pyemma.coordinates.api._check_old_chunksize_arg": {
     "line number": [
      378
     ]
    },
    "pyemma.coordinates.api._string_types": {
     "line number": [
      382,
      384
     ]
    },
    "pyemma.coordinates.data._base.iterable.Iterable": {
     "line number": [
      397
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      396
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.create_file_reader": {
     "line number": [
      385
     ]
    },
    "pyemma.util.reflection.get_default_args": {
     "line number": [
      378
     ]
    },
    "tuple": {
     "line number": [
      383,
      384,
      387
     ]
    },
    "type": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.tica": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1231,
      1233,
      1240,
      1246,
      1248
     ]
    },
    "all": {
     "line number": [
      1244
     ]
    },
    "float": {
     "line number": [
      1028
     ]
    },
    "getattr": {
     "line number": [
      1242
     ]
    },
    "hasattr": {
     "line number": [
      1242
     ]
    },
    "isinstance": {
     "line number": [
      1228,
      1244,
      1244
     ]
    },
    "len": {
     "line number": [
      1245,
      1245,
      1246,
      1246
     ]
    },
    "list": {
     "line number": [
      1244
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1244
     ]
    },
    "pyemma.coordinates.api._check_old_chunksize_arg": {
     "line number": [
      1226
     ]
    },
    "pyemma.coordinates.api._string_types": {
     "line number": [
      1228
     ]
    },
    "pyemma.coordinates.api.warnings": {
     "line number": [
      1256
     ]
    },
    "pyemma.coordinates.estimation.koopman._KoopmanEstimator": {
     "line number": [
      1234
     ]
    },
    "pyemma.coordinates.transform.tica.TICA": {
     "line number": [
      1260
     ]
    },
    "pyemma.util.exceptions.PyEMMA_DeprecationWarning": {
     "line number": [
      1258
     ]
    },
    "pyemma.util.reflection.get_default_args": {
     "line number": [
      1226
     ]
    },
    "pyemma.util.types.MethodType": {
     "line number": [
      1242
     ]
    },
    "tuple": {
     "line number": [
      1244
     ]
    },
    "type": {
     "line number": [
      1242
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.tica_nystroem": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1430
     ]
    },
    "pyemma.coordinates.transform.nystroem_tica.NystroemTICA": {
     "line number": [
      1523
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pyemma.coordinates.api.vamp": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1269
     ]
    },
    "pyemma.coordinates.transform.vamp.VAMP": {
     "line number": [
      1420
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.assign": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.assign.AbstractClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.interface.AbstractClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.assign.AssignCenters": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.interface.AbstractClustering": {
     "line number": [
      33
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.assign.AssignCenters.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      77
     ]
    },
    "isinstance": {
     "line number": [
      68
     ]
    },
    "numpy.array": {
     "line number": [
      73
     ]
    },
    "numpy.float32": {
     "line number": [
      73
     ]
    },
    "pyemma.coordinates.clustering.assign.AssignCenters": {
     "line number": [
      66
     ]
    },
    "pyemma.coordinates.data.create_file_reader": {
     "line number": [
      70
     ]
    },
    "str": {
     "line number": [
      68
     ]
    },
    "super": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.assign.AssignCenters._estimate": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.assign.AssignCenters.data_producer": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      93
     ]
    },
    "pyemma.coordinates.clustering.interface.AbstractClustering.data_producer.fset": {
     "line number": [
      95
     ]
    },
    "pyemma.coordinates.clustering.interface.AbstractClustering.data_producer.setter": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.assign.AssignCenters.describe": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.assign.create_file_reader": {
  "data": {
   "shadows": "pyemma.coordinates.data.create_file_reader"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.assign.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.assign.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "pyemma._base.model.Model": {
     "line number": [
      42
     ]
    },
    "pyemma._base.parallel.NJobsMixIn": {
     "line number": [
      42
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      42
     ]
    },
    "pyemma._ext.sklearn.base.ClusterMixin": {
     "line number": [
      42
     ]
    },
    "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer": {
     "line number": [
      42
     ]
    },
    "pyemma.util.annotators.aliased": {
     "line number": [
      41
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.interface.AbstractClustering": {
     "line number": [
      58
     ]
    },
    "super": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering._transform_array": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "ClusteringBase_f": {
     "line number": [
      159
     ]
    },
    "hasattr": {
     "line number": [
      156
     ]
    },
    "numpy.float32": {
     "line number": [
      155
     ]
    },
    "numpy.require": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.assign": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      223
     ]
    },
    "hasattr": {
     "line number": [
      214
     ]
    },
    "isinstance": {
     "line number": [
      228
     ]
    },
    "len": {
     "line number": [
      211
     ]
    },
    "numpy.ndarray": {
     "line number": [
      228
     ]
    },
    "numpy.transpose": {
     "line number": [
      218,
      229,
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.clustercenters": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.dimension": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.dtrajs": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "len": {
     "line number": [
      99
     ]
    },
    "property": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.index_clusters": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "len": {
     "line number": [
      116,
      119
     ]
    },
    "property": {
     "line number": [
      104
     ]
    },
    "pyemma.util.discrete_trajectories.index_states": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.output_type": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "numpy.int32": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.overwrite_dtrajs": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.sample_indexes_by_cluster": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "len": {
     "line number": [
      148
     ]
    },
    "pyemma.util.discrete_trajectories.index_states": {
     "line number": [
      149
     ]
    },
    "pyemma.util.discrete_trajectories.sample_indexes_by_state": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.save_dtrajs": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      298
     ]
    },
    "IOError": {
     "line number": [
      301
     ]
    },
    "len": {
     "line number": [
      281,
      288,
      288
     ]
    },
    "msmtools.dtraj.save_discrete_trajectory": {
     "line number": [
      300
     ]
    },
    "os.path.exists": {
     "line number": [
      297
     ]
    },
    "os.path.join": {
     "line number": [
      294
     ]
    },
    "os.path.split": {
     "line number": [
      272
     ]
    },
    "os.path.splitext": {
     "line number": [
      273
     ]
    },
    "pyemma.coordinates.clustering.interface.os": {
     "line number": [
      290
     ]
    },
    "pyemma.util.files.mkdir_p": {
     "line number": [
      291
     ]
    },
    "range": {
     "line number": [
      281
     ]
    },
    "str": {
     "line number": [
      285
     ]
    },
    "zip": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.AbstractClustering.set_model_params": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.interface.ClusterMixin": {
  "data": {
   "shadows": "pyemma._ext.sklearn.base.ClusterMixin"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.NJobsMixIn": {
  "data": {
   "shadows": "pyemma._base.parallel.NJobsMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.StreamingEstimationTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.index_states": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.index_states"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.mkdir_p": {
  "data": {
   "shadows": "pyemma.util.files.mkdir_p"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.sample_indexes_by_state": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.sample_indexes_by_state"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.interface.write_dtraj": {
  "data": {
   "shadows": "msmtools.dtraj.save_discrete_trajectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.kmeans.AbstractClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.interface.AbstractClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "pyemma._base.progress.reporter.ProgressReporterMixin": {
     "line number": [
      45
     ]
    },
    "pyemma.coordinates.clustering.interface.AbstractClustering": {
     "line number": [
      45
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.kmeans.KmeansClustering": {
     "line number": [
      106
     ]
    },
    "super": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering._check_resume_iteration": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering._collect_data": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "len": {
     "line number": [
      328,
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering._estimate": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      225
     ]
    },
    "len": {
     "line number": [
      223,
      226
     ]
    },
    "pyemma.util.contexts.nullcontext": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering._finish_estimate": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      248
     ]
    },
    "isinstance": {
     "line number": [
      256
     ]
    },
    "numpy.memmap": {
     "line number": [
      256
     ]
    },
    "pyemma.coordinates.clustering.kmeans.os": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering._init_estimate": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      291
     ]
    },
    "float": {
     "line number": [
      293
     ]
    },
    "int": {
     "line number": [
      274,
      292
     ]
    },
    "isinstance": {
     "line number": [
      277
     ]
    },
    "list": {
     "line number": [
      292
     ]
    },
    "min": {
     "line number": [
      274
     ]
    },
    "pyemma.coordinates.clustering.kmeans.math": {
     "line number": [
      274,
      293
     ]
    },
    "pyemma.coordinates.clustering.kmeans.random": {
     "line number": [
      292
     ]
    },
    "pyemma.util.contexts.random_seed": {
     "line number": [
      290
     ]
    },
    "range": {
     "line number": [
      292
     ]
    },
    "sum": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering._init_in_memory_chunks": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "MemoryError": {
     "line number": [
      183
     ]
    },
    "hasattr": {
     "line number": [
      163,
      164
     ]
    },
    "numpy.empty": {
     "line number": [
      175
     ]
    },
    "numpy.float32": {
     "line number": [
      173,
      176,
      191
     ]
    },
    "numpy.memmap": {
     "line number": [
      189
     ]
    },
    "pyemma.coordinates.clustering.kmeans.psutil": {
     "line number": [
      172
     ]
    },
    "pyemma.coordinates.clustering.kmeans.tempfile": {
     "line number": [
      189
     ]
    },
    "pyemma.util.units.bytes_to_string": {
     "line number": [
      182,
      182,
      188,
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering._initialize_centers": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "len": {
     "line number": [
      303,
      307,
      308
     ]
    },
    "list": {
     "line number": [
      306
     ]
    },
    "numpy.empty": {
     "line number": [
      304
     ]
    },
    "numpy.vstack": {
     "line number": [
      309
     ]
    },
    "pyemma.util.contexts.nullcontext": {
     "line number": [
      317
     ]
    },
    "range": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering.converged": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "property": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering.describe": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering.fixed_seed": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      153
     ]
    },
    "bool": {
     "line number": [
      140
     ]
    },
    "isinstance": {
     "line number": [
      140
     ]
    },
    "pyemma.coordinates.clustering.kmeans.random": {
     "line number": [
      144
     ]
    },
    "pyemma.util.types.is_int": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.KmeansClustering.init_strategy": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.kmeans.KmeansClustering": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering.__init__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      347,
      349,
      351
     ]
    },
    "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering": {
     "line number": [
      353
     ]
    },
    "super": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering._draw_mini_batch_sample": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      365
     ]
    },
    "int": {
     "line number": [
      370
     ]
    },
    "numpy.ones": {
     "line number": [
      369
     ]
    },
    "numpy.random.choice": {
     "line number": [
      373
     ]
    },
    "numpy.sort": {
     "line number": [
      375
     ]
    },
    "slice": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering._estimate": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      411
     ]
    },
    "numpy.abs": {
     "line number": [
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering._init_estimate": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      386
     ]
    },
    "float": {
     "line number": [
      387
     ]
    },
    "int": {
     "line number": [
      383,
      387,
      391
     ]
    },
    "numpy.empty": {
     "line number": [
      391
     ]
    },
    "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering": {
     "line number": [
      392
     ]
    },
    "pyemma.coordinates.clustering.kmeans.math": {
     "line number": [
      383,
      387
     ]
    },
    "sum": {
     "line number": [
      382
     ]
    },
    "super": {
     "line number": [
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering._init_in_memory_chunks": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.kmeans.MiniBatchKmeansClustering": {
     "line number": [
      361
     ]
    },
    "super": {
     "line number": [
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.kmeans.ProgressReporterMixin": {
  "data": {
   "shadows": "pyemma._base.progress.reporter.ProgressReporterMixin"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.__all__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyemma.coordinates.clustering.kmeans.bytes_to_string": {
  "data": {
   "shadows": "pyemma.util.units.bytes_to_string"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.kmeans_mod": {
  "data": {
   "shadows": "kmeans"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.nullcontext": {
  "data": {
   "shadows": "pyemma.util.contexts.nullcontext"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.random_seed": {
  "data": {
   "shadows": "pyemma.util.contexts.random_seed"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.kmeans.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.regspace": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.regspace.AbstractClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.interface.AbstractClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.regspace.NotConvergedWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.NotConvergedWarning"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.regspace.RegularSpaceClustering": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.interface.AbstractClustering": {
     "line number": [
      40
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.regspace.RegularSpaceClustering.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.regspace.RegularSpaceClustering": {
     "line number": [
      81
     ]
    },
    "super": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.regspace.RegularSpaceClustering._estimate": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "float": {
     "line number": [
      155
     ]
    },
    "len": {
     "line number": [
      143,
      159,
      162,
      164
     ]
    },
    "numpy.array": {
     "line number": [
      160
     ]
    },
    "numpy.float32": {
     "line number": [
      144
     ]
    },
    "pyemma.coordinates.clustering.regspace.warnings": {
     "line number": [
      153
     ]
    },
    "pyemma.util.exceptions.NotConvergedWarning": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.regspace.RegularSpaceClustering.describe": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.regspace.RegularSpaceClustering.dmin": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      98
     ]
    },
    "float": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.regspace.RegularSpaceClustering.max_centers": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      114
     ]
    },
    "int": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.regspace.RegularSpaceClustering.n_clusters": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.regspace.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.coordinates.clustering.regspace.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.regspace.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.regspace.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_assign": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      277
     ]
    },
    "logging.getLogger": {
     "line number": [
      32
     ]
    },
    "pyemma.coordinates.clustering.tests.test_assign.unittest": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.tests.test_assign.unittest": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.setUpClass": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      50
     ]
    },
    "len": {
     "line number": [
      65,
      67
     ]
    },
    "numpy.array": {
     "line number": [
      53,
      54,
      55,
      56,
      57,
      58,
      59,
      60,
      61,
      62,
      71
     ]
    },
    "numpy.random.choice": {
     "line number": [
      76
     ]
    },
    "numpy.random.randn": {
     "line number": [
      68,
      69
     ]
    },
    "numpy.zeros": {
     "line number": [
      66
     ]
    },
    "pyemma.coordinates.assign_to_centers": {
     "line number": [
      78
     ]
    },
    "range": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_assignment_multithread": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      239
     ]
    },
    "pyemma.coordinates.assign_to_centers": {
     "line number": [
      236,
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_assignment_multithread_minrsmd": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      248
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      257
     ]
    },
    "pyemma.coordinates.assign_to_centers": {
     "line number": [
      254,
      255
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      245
     ]
    },
    "pyemma.datasets.get_bpti_test_data": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_chunksize": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "pyemma.util.types.is_int": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_clustercenters": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_data_producer": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_describe": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "pyemma.util.types.is_list_of_string": {
     "line number": [
      95
     ]
    },
    "pyemma.util.types.is_string": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_dimension": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "pyemma.util.types.is_int": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_dtrajs": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "int": {
     "line number": [
      109
     ]
    },
    "len": {
     "line number": [
      104,
      106
     ]
    },
    "range": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_get_output": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "len": {
     "line number": [
      120
     ]
    },
    "pyemma.util.types.is_int_matrix": {
     "line number": [
      121
     ]
    },
    "pyemma.util.types.is_list": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_in_memory": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      127
     ]
    },
    "isinstance": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_iterator": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "pyemma.util.types.is_int": {
     "line number": [
      132
     ]
    },
    "pyemma.util.types.is_int_matrix": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_map": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_min_rmsd": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "len": {
     "line number": [
      271
     ]
    },
    "numpy.asarray": {
     "line number": [
      265
     ]
    },
    "numpy.concatenate": {
     "line number": [
      271
     ]
    },
    "numpy.unique": {
     "line number": [
      271
     ]
    },
    "pyemma.coordinates.assign_to_centers": {
     "line number": [
      269
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      262
     ]
    },
    "pyemma.datasets.get_bpti_test_data": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_n_frames_total": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_number_of_trajectories": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_output_type": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "numpy.int32": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_return_dtrajs": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "pyemma.coordinates.assign_to_centers": {
     "line number": [
      112
     ]
    },
    "pyemma.util.types.is_int_vector": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_save_dtrajs": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.tests.test_assign.os": {
     "line number": [
      166,
      170
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      161
     ]
    },
    "range": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_threads_cpu_count_def_arg": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "int": {
     "line number": [
      225
     ]
    },
    "pyemma.coordinates.assign_to_centers": {
     "line number": [
      229
     ]
    },
    "pyemma.coordinates.clustering.tests.test_assign.os": {
     "line number": [
      225
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_threads_cpu_count_def_arg.fake_cpu_count": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_threads_env_num_threads_fixed": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "pyemma.coordinates.assign_to_centers": {
     "line number": [
      203
     ]
    },
    "pyemma.coordinates.clustering.tests.test_assign.os": {
     "line number": [
      202
     ]
    },
    "pyemma.coordinates.clustering.tests.test_assign.temporary_env": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_threads_env_num_threads_fixed_def_arg": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "pyemma.coordinates.assign_to_centers": {
     "line number": [
      212
     ]
    },
    "pyemma.coordinates.clustering.tests.test_assign.os": {
     "line number": [
      210
     ]
    },
    "pyemma.coordinates.clustering.tests.test_assign.temporary_env": {
     "line number": [
      209
     ]
    },
    "str": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_threads_omp_env_arg_borked": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "pyemma.coordinates.assign_to_centers": {
     "line number": [
      221
     ]
    },
    "pyemma.coordinates.clustering.tests.test_assign.temporary_env": {
     "line number": [
      220
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_threads_omp_env_arg_borked.fake_cpu_count": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_trajectory_length": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_trajectory_lengths": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "len": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_wrong_centers_argument": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      188
     ]
    },
    "numpy.empty": {
     "line number": [
      185,
      186
     ]
    },
    "pyemma.coordinates.assign_to_centers": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.TestClusterAssign.test_wrong_centers_argument2": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      196
     ]
    },
    "numpy.empty": {
     "line number": [
      193,
      194
     ]
    },
    "pyemma.coordinates.assign_to_centers": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.data": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyemma.coordinates.clustering.tests.test_assign.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.temporary_env": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      35
     ]
    },
    "pyemma.coordinates.clustering.tests.test_assign.os": {
     "line number": [
      37,
      38,
      43,
      45
     ]
    },
    "str": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_assign.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_assign.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      197
     ]
    },
    "logging.getLogger": {
     "line number": [
      33
     ]
    },
    "pyemma.coordinates.clustering.tests.test_cluster.unittest": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.KmeansClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.KmeansClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.RegularSpaceClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.RegularSpaceClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.tests.test_cluster.unittest": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.setUpClass": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      38
     ]
    },
    "len": {
     "line number": [
      56,
      58
     ]
    },
    "numpy.array": {
     "line number": [
      44,
      45,
      46,
      47,
      48,
      49,
      50,
      51,
      52,
      53
     ]
    },
    "numpy.random.randn": {
     "line number": [
      59,
      60
     ]
    },
    "numpy.zeros": {
     "line number": [
      57
     ]
    },
    "pyemma.coordinates.cluster_kmeans": {
     "line number": [
      62
     ]
    },
    "pyemma.coordinates.cluster_regspace": {
     "line number": [
      63
     ]
    },
    "pyemma.coordinates.cluster_uniform_time": {
     "line number": [
      64
     ]
    },
    "pyemma.coordinates.clustering.tests.test_cluster.TestCluster": {
     "line number": [
      40
     ]
    },
    "pyemma.coordinates.clustering.tests.test_cluster.tempfile": {
     "line number": [
      41
     ]
    },
    "range": {
     "line number": [
      58
     ]
    },
    "super": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_chunksize": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "pyemma.util.types.is_int": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_clustercenters": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_data_producer": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_describe": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "pyemma.util.types.is_list_of_string": {
     "line number": [
      83
     ]
    },
    "pyemma.util.types.is_string": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_dimension": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "pyemma.util.types.is_int": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_dtrajs": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "len": {
     "line number": [
      92,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_get_output": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "len": {
     "line number": [
      100
     ]
    },
    "pyemma.util.types.is_int_matrix": {
     "line number": [
      101
     ]
    },
    "pyemma.util.types.is_list": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_in_memory": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      107
     ]
    },
    "isinstance": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_iterator": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "pyemma.util.types.is_int": {
     "line number": [
      112
     ]
    },
    "pyemma.util.types.is_int_matrix": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_map": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_n_frames_total": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_number_of_trajectories": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_output_type": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "numpy.int32": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_save_dtrajs": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.tests.test_cluster.os": {
     "line number": [
      146,
      150
     ]
    },
    "range": {
     "line number": [
      145
     ]
    },
    "type": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_trajectory_length": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestCluster.test_trajectory_lengths": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "len": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestClusterDirect": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.tests.test_cluster.TestCluster": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.TestClusterDirect.setUpClass": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      166
     ]
    },
    "len": {
     "line number": [
      184,
      186
     ]
    },
    "numpy.array": {
     "line number": [
      172,
      173,
      174,
      175,
      176,
      177,
      178,
      179,
      180,
      181
     ]
    },
    "numpy.random.randn": {
     "line number": [
      187,
      188
     ]
    },
    "numpy.zeros": {
     "line number": [
      185
     ]
    },
    "pyemma.coordinates.clustering.KmeansClustering": {
     "line number": [
      190
     ]
    },
    "pyemma.coordinates.clustering.RegularSpaceClustering": {
     "line number": [
      191
     ]
    },
    "pyemma.coordinates.clustering.UniformTimeClustering": {
     "line number": [
      192
     ]
    },
    "pyemma.coordinates.clustering.tests.test_cluster.tempfile": {
     "line number": [
      169
     ]
    },
    "range": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.UniformTimeClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.UniformTimeClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      73
     ]
    },
    "pyemma.coordinates.clustering.tests.test_cluster_samples.unittest": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.TestClusterSamples": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.tests.test_cluster_samples.unittest": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.TestClusterSamples.setUp": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "pyemma.coordinates.cluster_regspace": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.TestClusterSamples.setUpClass": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      34
     ]
    },
    "pyemma.coordinates.clustering.tests.test_cluster_samples.TestClusterSamples": {
     "line number": [
      36
     ]
    },
    "super": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.TestClusterSamples.test_index_states": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      63
     ]
    },
    "numpy.arange": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.TestClusterSamples.test_sample_indexes_by_state": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      69
     ]
    },
    "numpy.arange": {
     "line number": [
      66
     ]
    },
    "numpy.in1d": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_cluster_samples.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      345
     ]
    },
    "pyemma.coordinates.clustering.tests.test_kmeans.unittest": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.Capturing": {
  "data": {
   "shadows": "pyemma.util.contexts.Capturing"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.MockLoggingHandler": {
  "data": {
   "shadows": "pyemma.util.testing_tools.MockLoggingHandler"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.tests.test_kmeans.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.testDtraj": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      39,
      40
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      41
     ]
    },
    "pyemma.coordinates.clustering.tests.test_kmeans.os": {
     "line number": [
      53,
      57
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      47
     ]
    },
    "range": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_3gaussian_1d_singletraj": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "len": {
     "line number": [
      83,
      84
     ]
    },
    "numpy.all": {
     "line number": [
      76
     ]
    },
    "numpy.any": {
     "line number": [
      77,
      78,
      79
     ]
    },
    "numpy.hstack": {
     "line number": [
      67
     ]
    },
    "numpy.isfinite": {
     "line number": [
      76
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      95
     ]
    },
    "numpy.random.randn": {
     "line number": [
      64,
      65,
      66
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      96
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      88
     ]
    },
    "pyemma._base.estimator.param_grid": {
     "line number": [
      70
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      74,
      81,
      82
     ]
    },
    "pyemma.util.contexts.numpy_random_seed": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_3gaussian_2d_multitraj": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      146,
      147,
      148
     ]
    },
    "numpy.random.randn": {
     "line number": [
      138,
      140,
      142
     ]
    },
    "numpy.zeros": {
     "line number": [
      137,
      139,
      141
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_check_convergence_serial_parallel": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      122
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      120
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      117,
      118
     ]
    },
    "pyemma.coordinates.clustering.tests.test_kmeans.random": {
     "line number": [
      116
     ]
    },
    "pyemma.coordinates.clustering.tests.util.make_blobs": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_kmeans_converge_outlier_to_equilibrium_state": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      175
     ]
    },
    "numpy.all": {
     "line number": [
      175
     ]
    },
    "numpy.array": {
     "line number": [
      165,
      166,
      167,
      167,
      168,
      168,
      169,
      169,
      170,
      170
     ]
    },
    "numpy.float32": {
     "line number": [
      167,
      167,
      168,
      168,
      169,
      169,
      170,
      170
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_kmeans_convex_hull": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "float": {
     "line number": [
      207,
      210,
      211,
      213,
      215,
      217,
      220,
      222,
      223,
      225,
      226,
      227,
      228,
      229
     ]
    },
    "numpy.array": {
     "line number": [
      207,
      210,
      211,
      213,
      215,
      217,
      220,
      222,
      223,
      225,
      226,
      227,
      228,
      229
     ]
    },
    "numpy.asarray": {
     "line number": [
      204
     ]
    },
    "numpy.float32": {
     "line number": [
      204
     ]
    },
    "numpy.inner": {
     "line number": [
      207,
      210,
      211,
      213,
      215,
      217,
      220,
      222,
      223,
      225,
      226,
      227,
      228,
      229
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_kmeans_equilibrium_state": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "len": {
     "line number": [
      159
     ]
    },
    "numpy.array": {
     "line number": [
      151,
      152,
      153,
      153,
      154,
      154,
      155,
      155,
      156,
      156
     ]
    },
    "numpy.float32": {
     "line number": [
      153,
      153,
      154,
      154,
      155,
      155,
      156,
      156
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      162
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      158
     ]
    },
    "str": {
     "line number": [
      160
     ]
    },
    "type": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_negative_seed": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      128
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_seed_too_large": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      132
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_skip": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "len": {
     "line number": [
      237
     ]
    },
    "numpy.random.rand": {
     "line number": [
      236
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_with_n_jobs_minrmsd": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "numpy.random.rand": {
     "line number": [
      232
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_with_pg": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "numpy.random.rand": {
     "line number": [
      241
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      241
     ]
    },
    "pyemma.util.contexts.Capturing": {
     "line number": [
      240
     ]
    },
    "pyemma.util.contexts.settings": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeans.test_with_pg_data_not_in_memory": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      258
     ]
    },
    "pyemma.coordinates.clustering.tests.test_kmeans.os": {
     "line number": [
      248,
      249,
      251,
      252,
      253
     ]
    },
    "pyemma.coordinates.clustering.tests.test_kmeans.pkg_resources": {
     "line number": [
      248
     ]
    },
    "pyemma.coordinates.clustering.tests.test_kmeans.pyemma": {
     "line number": [
      255
     ]
    },
    "pyemma.util.contexts.Capturing": {
     "line number": [
      257
     ]
    },
    "pyemma.util.contexts.settings": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeansResume": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.tests.test_kmeans.unittest": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeansResume.setUpClass": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      264
     ]
    },
    "numpy.hstack": {
     "line number": [
      272
     ]
    },
    "numpy.random.randn": {
     "line number": [
      269,
      270,
      271
     ]
    },
    "pyemma.util.contexts.numpy_random_seed": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeansResume.test_converged_memory_freed": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      316
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      309
     ]
    },
    "numpy.random.choice": {
     "line number": [
      309
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeansResume.test_inefficient_args_log": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      296
     ]
    },
    "pyemma.util.testing_tools.MockLoggingHandler": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeansResume.test_non_converged_keep_memory": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      326
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      320
     ]
    },
    "numpy.random.choice": {
     "line number": [
      320
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeansResume.test_resume": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      276,
      284
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      288,
      289
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.TestKmeansResume.test_syntetic_trivial": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      339
     ]
    },
    "numpy.all": {
     "line number": [
      340,
      343
     ]
    },
    "numpy.array": {
     "line number": [
      335,
      335,
      335,
      335
     ]
    },
    "numpy.zeros": {
     "line number": [
      329
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.cluster_kmeans": {
  "data": {
   "shadows": "pyemma.coordinates.api.cluster_kmeans"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.make_blobs": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.tests.util.make_blobs"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.numpy_random_seed": {
  "data": {
   "shadows": "pyemma.util.contexts.numpy_random_seed"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.param_grid": {
  "data": {
   "shadows": "pyemma._base.estimator.param_grid"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.settings": {
  "data": {
   "shadows": "pyemma.util.contexts.settings"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_kmeans.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      86
     ]
    },
    "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.unittest": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.TestMiniBatchKmeans": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "unittest.TestCase": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.TestMiniBatchKmeans.test_3gaussian_1d_singletraj": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      34,
      35,
      36
     ]
    },
    "numpy.hstack": {
     "line number": [
      31
     ]
    },
    "numpy.random.randn": {
     "line number": [
      28,
      29,
      30
     ]
    },
    "pyemma.coordinates.api.cluster_mini_batch_kmeans": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.TestMiniBatchKmeans.test_3gaussian_2d_multitraj": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "numpy.any": {
     "line number": [
      49,
      50,
      51
     ]
    },
    "numpy.random.randn": {
     "line number": [
      41,
      43,
      45
     ]
    },
    "numpy.zeros": {
     "line number": [
      40,
      42,
      44
     ]
    },
    "pyemma.coordinates.api.cluster_mini_batch_kmeans": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.TestMiniBatchKmeansResume": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.unittest": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.TestMiniBatchKmeansResume.setUpClass": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      56
     ]
    },
    "numpy.hstack": {
     "line number": [
      64
     ]
    },
    "numpy.random.randn": {
     "line number": [
      61,
      62,
      63
     ]
    },
    "pyemma.util.contexts.numpy_random_seed": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.TestMiniBatchKmeansResume.test_resume": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      69,
      77
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      81,
      82
     ]
    },
    "pyemma.coordinates.api.cluster_mini_batch_kmeans": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.cluster_mini_batch_kmeans": {
  "data": {
   "shadows": "pyemma.coordinates.api.cluster_mini_batch_kmeans"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.numpy_random_seed": {
  "data": {
   "shadows": "pyemma.util.contexts.numpy_random_seed"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_mini_batch_kmeans.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      144
     ]
    },
    "pyemma.coordinates.clustering.tests.test_regspace.unittest": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.RandomDataSource": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.RandomDataSource.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      45
     ]
    },
    "pyemma.coordinates.clustering.tests.test_regspace.RandomDataSource": {
     "line number": [
      49
     ]
    },
    "super": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.RegularSpaceClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.regspace.RegularSpaceClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.tests.test_regspace.unittest": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.setUp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.regspace.RegularSpaceClustering": {
     "line number": [
      56
     ]
    },
    "pyemma.coordinates.clustering.tests.test_regspace.RandomDataSource": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test1d_data": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      97
     ]
    },
    "pyemma.coordinates.api.cluster_regspace": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test_algorithm": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      67
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      70
     ]
    },
    "pyemma.coordinates.clustering.tests.test_regspace.itertools": {
     "line number": [
      66
     ]
    },
    "pyemma.util.types.is_int_vector": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test_assignment": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "len": {
     "line number": [
      80,
      83,
      83
     ]
    },
    "numpy.random.random": {
     "line number": [
      87
     ]
    },
    "numpy.unique": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test_minRMSD_metric": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      113
     ]
    },
    "pyemma.coordinates.clustering.tests.test_regspace.RandomDataSource": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test_non_existent_metric": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      104
     ]
    },
    "pyemma.coordinates.clustering.tests.test_regspace.RandomDataSource": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test_regspace_nthreads": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      141
     ]
    },
    "pyemma.coordinates.api.cluster_regspace": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test_spread_data": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.tests.test_regspace.RandomDataSource": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.TestRegSpaceClustering.test_too_small_dmin_should_warn": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "len": {
     "line number": [
      128,
      130,
      134,
      135
     ]
    },
    "pyemma.coordinates.clustering.tests.test_regspace.warnings": {
     "line number": [
      122,
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.cluster_regspace": {
  "data": {
   "shadows": "pyemma.coordinates.api.cluster_regspace"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_regspace.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      70
     ]
    },
    "pyemma.coordinates.clustering.tests.test_uniform_time.unittest": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.TestUniformTimeClustering": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.tests.test_uniform_time.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.TestUniformTimeClustering.test_1d": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      37
     ]
    },
    "pyemma.coordinates.api.cluster_uniform_time": {
     "line number": [
      41
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.TestUniformTimeClustering.test_2d": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      44
     ]
    },
    "pyemma.coordinates.api.cluster_uniform_time": {
     "line number": [
      48
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.TestUniformTimeClustering.test_2d_skip": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      53
     ]
    },
    "pyemma.coordinates.api.cluster_uniform_time": {
     "line number": [
      57
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.TestUniformTimeClustering.test_big_k": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      62
     ]
    },
    "pyemma.coordinates.api.cluster_uniform_time": {
     "line number": [
      65
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.test_uniform_time.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.tests.util.check_array": {
  "data": {
   "shadows": "bhmm._external.sklearn.utils.check_array"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.util.check_random_state": {
  "data": {
   "shadows": "scipy._lib._util.check_random_state"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.util.make_blobs": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "bhmm._external.sklearn.utils.check_array": {
     "line number": [
      63
     ]
    },
    "enumerate": {
     "line number": [
      78
     ]
    },
    "int": {
     "line number": [
      73
     ]
    },
    "isinstance": {
     "line number": [
      58,
      66
     ]
    },
    "len": {
     "line number": [
      67
     ]
    },
    "numpy.arange": {
     "line number": [
      87
     ]
    },
    "numpy.array": {
     "line number": [
      84
     ]
    },
    "numpy.concatenate": {
     "line number": [
      83
     ]
    },
    "numpy.ones": {
     "line number": [
      67
     ]
    },
    "pyemma.coordinates.clustering.tests.util.numbers": {
     "line number": [
      58,
      66
     ]
    },
    "range": {
     "line number": [
      75
     ]
    },
    "scipy._lib._util.check_random_state": {
     "line number": [
      56
     ]
    },
    "zip": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.tests.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.tests.util.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.uniform_time": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.clustering.uniform_time.AbstractClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.interface.AbstractClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.interface.AbstractClustering": {
     "line number": [
      33
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering": {
     "line number": [
      57
     ]
    },
    "super": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering._estimate": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "int": {
     "line number": [
      69
     ]
    },
    "len": {
     "line number": [
      93
     ]
    },
    "min": {
     "line number": [
      69
     ]
    },
    "numpy.arange": {
     "line number": [
      87
     ]
    },
    "numpy.array": {
     "line number": [
      89
     ]
    },
    "numpy.concatenate": {
     "line number": [
      91
     ]
    },
    "numpy.cumsum": {
     "line number": [
      85
     ]
    },
    "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering": {
     "line number": [
      89
     ]
    },
    "pyemma.coordinates.clustering.uniform_time.math": {
     "line number": [
      69
     ]
    },
    "sum": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering._idx_to_traj_idx": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      103
     ]
    },
    "enumerate": {
     "line number": [
      99
     ]
    },
    "staticmethod": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering.describe": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyemma.coordinates.clustering.uniform_time.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyemma.coordinates.clustering.uniform_time.__author__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyemma.coordinates.clustering.uniform_time.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.uniform_time.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.coordinates.clustering.uniform_time.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data._base": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data._base._in_memory_mixin": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data._base._in_memory_mixin.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base._in_memory_mixin.InMemoryMixin": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": {
    "object": {
     "line number": [
      2
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base._in_memory_mixin.InMemoryMixin.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base._in_memory_mixin.InMemoryMixin": {
     "line number": [
      10
     ]
    },
    "super": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base._in_memory_mixin.InMemoryMixin._clear_in_memory": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base._in_memory_mixin.InMemoryMixin._map_to_memory": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base._in_memory_mixin.InMemoryMixin.in_memory": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data._base.datasource.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.DataSource": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.iterable.Iterable": {
     "line number": [
      30
     ]
    },
    "pyemma.coordinates.data._base.random_accessible.TrajectoryRandomAccessible": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.DataSource": {
     "line number": [
      40
     ]
    },
    "super": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource._chunk_finite": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      214
     ]
    },
    "isinstance": {
     "line number": [
      212
     ]
    },
    "numpy.isfinite": {
     "line number": [
      213,
      215
     ]
    },
    "numpy.ndarray": {
     "line number": [
      212
     ]
    },
    "staticmethod": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource._data_flow_chain": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource._get_traj_info": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource._source_from_memory": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      223,
      225
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      223,
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.data_producer": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "property": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.filenames": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      98
     ]
    },
    "ValueError": {
     "line number": [
      92,
      100,
      103,
      106,
      153
     ]
    },
    "hasattr": {
     "line number": [
      126
     ]
    },
    "isinstance": {
     "line number": [
      74,
      85
     ]
    },
    "len": {
     "line number": [
      78,
      78,
      90,
      118,
      138
     ]
    },
    "list": {
     "line number": [
      80,
      151
     ]
    },
    "numpy.argsort": {
     "line number": [
      146
     ]
    },
    "numpy.array": {
     "line number": [
      144
     ]
    },
    "numpy.asarray": {
     "line number": [
      145
     ]
    },
    "numpy.unique": {
     "line number": [
      142
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      117
     ]
    },
    "pyemma.coordinates.data._base.datasource.itertools": {
     "line number": [
      149
     ]
    },
    "pyemma.coordinates.data._base.datasource.operator": {
     "line number": [
      150
     ]
    },
    "pyemma.coordinates.data._base.datasource.os": {
     "line number": [
      97,
      102
     ]
    },
    "pyemma.coordinates.data._base.datasource.warnings": {
     "line number": [
      87
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      85
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.instance": {
     "line number": [
      122
     ]
    },
    "pyemma.util.config.use_trajectory_lengths_cache": {
     "line number": [
      121
     ]
    },
    "set": {
     "line number": [
      77
     ]
    },
    "str": {
     "line number": [
      74
     ]
    },
    "zip": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.get_output": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "MemoryError": {
     "line number": [
      391
     ]
    },
    "RuntimeError": {
     "line number": [
      419,
      420
     ]
    },
    "ValueError": {
     "line number": [
      362,
      365
     ]
    },
    "enumerate": {
     "line number": [
      413
     ]
    },
    "hasattr": {
     "line number": [
      361
     ]
    },
    "int": {
     "line number": [
      357
     ]
    },
    "isinstance": {
     "line number": [
      357,
      360
     ]
    },
    "len": {
     "line number": [
      363,
      407,
      418
     ]
    },
    "list": {
     "line number": [
      360
     ]
    },
    "numpy.all": {
     "line number": [
      415
     ]
    },
    "numpy.empty": {
     "line number": [
      389
     ]
    },
    "numpy.full": {
     "line number": [
      386
     ]
    },
    "numpy.logical_not": {
     "line number": [
      417
     ]
    },
    "numpy.nan": {
     "line number": [
      386
     ]
    },
    "numpy.ndarray": {
     "line number": [
      360
     ]
    },
    "numpy.where": {
     "line number": [
      417
     ]
    },
    "numpy.zeros": {
     "line number": [
      363
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      403
     ]
    },
    "pyemma.config.coordinates_check_output": {
     "line number": [
      385,
      412
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      376
     ]
    },
    "slice": {
     "line number": [
      334,
      359,
      360,
      407
     ]
    },
    "str": {
     "line number": [
      397
     ]
    },
    "tuple": {
     "line number": [
      360
     ]
    },
    "type": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.is_reader": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "property": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.n_chunks": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "float": {
     "line number": [
      281
     ]
    },
    "int": {
     "line number": [
      282
     ]
    },
    "math.ceil": {
     "line number": [
      282
     ]
    },
    "sum": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.n_frames_total": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "len": {
     "line number": [
      329
     ]
    },
    "sum": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.ntraj": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      51
     ]
    },
    "property": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.number_of_trajectories": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "len": {
     "line number": [
      239
     ]
    },
    "numpy.unique": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.trajectory_length": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      262
     ]
    },
    "int": {
     "line number": [
      268
     ]
    },
    "len": {
     "line number": [
      266
     ]
    },
    "max": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.trajectory_lengths": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "int": {
     "line number": [
      307,
      311
     ]
    },
    "numpy.fromiter": {
     "line number": [
      305,
      309
     ]
    },
    "range": {
     "line number": [
      306,
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.write_to_csv": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      581,
      582
     ]
    },
    "TypeError": {
     "line number": [
      574
     ]
    },
    "hasattr": {
     "line number": [
      563
     ]
    },
    "isinstance": {
     "line number": [
      569
     ]
    },
    "numpy.savetxt": {
     "line number": [
      604
     ]
    },
    "open": {
     "line number": [
      602
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      591
     ]
    },
    "pyemma.coordinates.data._base.datasource.errno": {
     "line number": [
      581,
      583,
      586
     ]
    },
    "pyemma.coordinates.data._base.datasource.os": {
     "line number": [
      567,
      580
     ]
    },
    "range": {
     "line number": [
      572
     ]
    },
    "str": {
     "line number": [
      569,
      570,
      571
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSource.write_to_hdf5": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      500,
      510
     ]
    },
    "len": {
     "line number": [
      516
     ]
    },
    "numpy.arange": {
     "line number": [
      504
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      487
     ]
    },
    "pyemma.coordinates.data._base.datasource.h5py": {
     "line number": [
      490
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": {
    "abc.ABCMeta": {
     "line number": [
      674
     ]
    },
    "next": {
     "line number": [
      1082
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.__enter__": {
  "data": {
   "lineno": 1087
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.__exit__": {
  "data": {
   "lineno": 1090
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.__init__": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.DataSourceIterator": {
     "line number": [
      689
     ]
    },
    "pyemma.coordinates.data._base.datasource.IteratorState": {
     "line number": [
      680
     ]
    },
    "super": {
     "line number": [
      689
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.__init_stride": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      698,
      709
     ]
    },
    "isinstance": {
     "line number": [
      693
     ]
    },
    "numpy.ndarray": {
     "line number": [
      693
     ]
    },
    "numpy.unique": {
     "line number": [
      700
     ]
    },
    "pyemma.coordinates.data._base.datasource.IteratorState": {
     "line number": [
      706,
      707
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.__iter__": {
  "data": {
   "lineno": 1084
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.__next__": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      1044,
      1051
     ]
    },
    "len": {
     "line number": [
      1050,
      1074
     ]
    },
    "numpy.all": {
     "line number": [
      1069
     ]
    },
    "numpy.logical_not": {
     "line number": [
      1071
     ]
    },
    "numpy.where": {
     "line number": [
      1071
     ]
    },
    "pyemma.config.coordinates_check_output": {
     "line number": [
      1067
     ]
    },
    "pyemma.coordinates.data._base.datasource.InvalidDataInStreamException": {
     "line number": [
      1075
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.__str__": {
  "data": {
   "lineno": 1094
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._itraj": {
  "data": {
   "lineno": 864
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._next_chunk": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1027
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      1025
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._select_file": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      778
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      765
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._select_file_guard": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      752
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._select_file_guard.wrapper": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": {
    "datasource_method": {
     "line number": [
      761,
      756
     ]
    },
    "functools.wraps": {
     "line number": [
      756
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._skip_unselected_or_too_short_trajs": {
  "data": {
   "lineno": 878
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._t": {
  "data": {
   "lineno": 837
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._t_abs": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": {
    "property": {
     "line number": [
      848
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator._use_cols": {
  "data": {
   "lineno": 1029
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.chunksize": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      926
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.close": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      750
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      747
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.current_trajindex": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": {
    "property": {
     "line number": [
      799
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.is_stride_sorted": {
  "data": {
   "lineno": 725
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.is_uniform_stride": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.IteratorState": {
     "line number": [
      998
     ]
    },
    "staticmethod": {
     "line number": [
      996
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.last_chunk": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1000
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.last_chunk_in_traj": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1011
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.n_chunks": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": {
    "property": {
     "line number": [
      728
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.n_frames_total": {
  "data": {
   "lineno": 744
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.number_of_trajectories": {
  "data": {
   "lineno": 733
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.pos": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": {
    "property": {
     "line number": [
      786
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.ra_indices_for_traj": {
  "data": {
   "lineno": 714
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.ra_trajectory_length": {
  "data": {
   "lineno": 722
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.reset": {
  "data": {
   "lineno": 780
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.return_traj_index": {
  "data": {
   "lineno": 985
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.skip": {
  "data": {
   "lineno": 894
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.stride": {
  "data": {
   "lineno": 940
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.traj_keys": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": {
    "property": {
     "line number": [
      962
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.trajectory_length": {
  "data": {
   "lineno": 736
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.trajectory_lengths": {
  "data": {
   "lineno": 741
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.uniform_stride": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": {
    "property": {
     "line number": [
      973
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.DataSourceIterator.use_cols": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": {
    "property": {
     "line number": [
      810
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.DataSourceIterator": {
     "line number": [
      1109
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator.__init__": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      1131
     ]
    },
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator": {
     "line number": [
      1124
     ]
    },
    "super": {
     "line number": [
      1124
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator._next_chunk": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      1165
     ]
    },
    "next": {
     "line number": [
      1168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator._select_file": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.DataSourceIterator": {
     "line number": [
      1156
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator.chunksize": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      1137
     ]
    },
    "pyemma.coordinates.data._base.datasource.DataSourceIterator": {
     "line number": [
      1134
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator.close": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      1161
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator.skip": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      1143
     ]
    },
    "pyemma.coordinates.data._base.datasource.DataSourceIterator": {
     "line number": [
      1140
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.EncapsulatedIterator.transform_function": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1153
     ]
    },
    "callable": {
     "line number": [
      1152
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.InvalidDataInStreamException": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1175
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.datasource.Iterable": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.iterable.Iterable"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.IteratorState": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "object": {
     "line number": [
      611
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.datasource.IteratorState.__init__": {
  "data": {
   "lineno": 616
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.IteratorState.is_stride_sorted": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": {
    "all": {
     "line number": [
      664,
      668
     ]
    },
    "numpy.diff": {
     "line number": [
      664,
      668
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.IteratorState.is_uniform_stride": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      659
     ]
    },
    "numpy.ndarray": {
     "line number": [
      659
     ]
    },
    "staticmethod": {
     "line number": [
      657
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.IteratorState.pos": {
  "data": {
   "lineno": 637
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.IteratorState.ra_indices_for_traj": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      651
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.IteratorState.ra_trajectory_length": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": {
    "int": {
     "line number": [
      655
     ]
    },
    "numpy.where": {
     "line number": [
      655
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.datasource.ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.TrajectoryInfoCache": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.TrajectoryRandomAccessible": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.random_accessible.TrajectoryRandomAccessible"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.config": {
  "data": {
   "shadows": "pyemma.config"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.datasource.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.streaming_estimator": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data._base.streaming_estimator.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.streaming_estimator.Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.streaming_estimator.Iterable": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.iterable.Iterable"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.streaming_estimator.NotConvergedWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.NotConvergedWarning"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "pyemma._base.estimator.Estimator": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator.estimate": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      35
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      38
     ]
    },
    "pyemma.coordinates.data._base.iterable.Iterable": {
     "line number": [
      35
     ]
    },
    "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator": {
     "line number": [
      44
     ]
    },
    "pyemma.util.exceptions.NotConvergedWarning": {
     "line number": [
      45
     ]
    },
    "pyemma.util.types.ensure_traj_list": {
     "line number": [
      37
     ]
    },
    "super": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.streaming_estimator.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data._base.transformer.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer.EncapsulatedIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.EncapsulatedIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer.RandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator": {
     "line number": [
      208
     ]
    },
    "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer.__init__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer": {
     "line number": [
      210
     ]
    },
    "super": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer.estimate": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer": {
     "line number": [
      215
     ]
    },
    "super": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer.get_output": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
     "line number": [
      226
     ]
    },
    "slice": {
     "line number": [
      222
     ]
    },
    "super": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingEstimator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.DataSource": {
     "line number": [
      102
     ]
    },
    "pyemma.coordinates.data._base.transformer.Transformer": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
     "line number": [
      116
     ]
    },
    "super": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer._clear_in_memory": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
     "line number": [
      166
     ]
    },
    "super": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer._create_iterator": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer._map_to_memory": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
     "line number": [
      162
     ]
    },
    "super": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer._set_random_access_strategies": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingTransformerRandomAccessStrategy": {
     "line number": [
      148,
      150,
      152,
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.chunksize": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      188,
      190
     ]
    },
    "int": {
     "line number": [
      187,
      189
     ]
    },
    "isinstance": {
     "line number": [
      187,
      189
     ]
    },
    "type": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.data_producer": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      135
     ]
    },
    "isinstance": {
     "line number": [
      134
     ]
    },
    "pyemma.coordinates.data._base.datasource.DataSource": {
     "line number": [
      134
     ]
    },
    "type": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.dimension": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      122
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.n_frames_total": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.number_of_trajectories": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.trajectory_length": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformer.trajectory_lengths": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformerRandomAccessStrategy": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformerRandomAccessStrategy.__init__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingTransformerRandomAccessStrategy": {
     "line number": [
      231
     ]
    },
    "super": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.StreamingTransformerRandomAccessStrategy._handle_slice": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      257
     ]
    },
    "isinstance": {
     "line number": [
      241,
      243
     ]
    },
    "len": {
     "line number": [
      237,
      248
     ]
    },
    "list": {
     "line number": [
      241
     ]
    },
    "numpy.empty": {
     "line number": [
      251
     ]
    },
    "numpy.ndarray": {
     "line number": [
      243
     ]
    },
    "range": {
     "line number": [
      252
     ]
    },
    "slice": {
     "line number": [
      236
     ]
    },
    "str": {
     "line number": [
      257
     ]
    },
    "type": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.Transformer": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "abc.ABCMeta": {
     "line number": [
      34
     ]
    },
    "pyemma._ext.sklearn.base.TransformerMixin": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data._base.transformer.Transformer._transform_array": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      99
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.Transformer.describe": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      40
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.Transformer.transform": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      67,
      77
     ]
    },
    "isinstance": {
     "line number": [
      62,
      70
     ]
    },
    "list": {
     "line number": [
      70
     ]
    },
    "numpy.ndarray": {
     "line number": [
      62
     ]
    },
    "str": {
     "line number": [
      69,
      79
     ]
    },
    "tuple": {
     "line number": [
      70
     ]
    },
    "type": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data._base.transformer.TransformerMixin": {
  "data": {
   "shadows": "pyemma._ext.sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyemma.coordinates.data._base.transformer.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyemma.coordinates.data._base.transformer.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "pyemma.coordinates.data._base.transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      34
     ]
    },
    "pyemma.coordinates.data._base.datasource.DataSource": {
     "line number": [
      34
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      75
     ]
    },
    "all": {
     "line number": [
      71
     ]
    },
    "isinstance": {
     "line number": [
      64,
      71
     ]
    },
    "list": {
     "line number": [
      64
     ]
    },
    "numpy.ndarray": {
     "line number": [
      71
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      55,
      79
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy": {
     "line number": [
      59
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemoryJaggedRandomAccessStrategy": {
     "line number": [
      60
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearItrajRandomAccessStrategy": {
     "line number": [
      62
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearRandomAccessStrategy": {
     "line number": [
      61
     ]
    },
    "str": {
     "line number": [
      76
     ]
    },
    "super": {
     "line number": [
      55
     ]
    },
    "tuple": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory.__reduce__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory.__str__": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory._add_array_to_storage": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "numpy.atleast_2d": {
     "line number": [
      97
     ]
    },
    "numpy.reshape": {
     "line number": [
      104
     ]
    },
    "pyemma.coordinates.data.data_in_memory.functools": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory._create_iterator": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory._set_dimensions_and_lenghts": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      115,
      123
     ]
    },
    "len": {
     "line number": [
      113
     ]
    },
    "numpy.shape": {
     "line number": [
      118,
      121
     ]
    },
    "numpy.unique": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory.data": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "property": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory.describe": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory.load_from_files": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      128
     ]
    },
    "cls": {
     "line number": [
      142
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemory.output_type": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy._get_itraj_random_accessible": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      172,
      175
     ]
    },
    "list": {
     "line number": [
      175
     ]
    },
    "min": {
     "line number": [
      174
     ]
    },
    "numpy.array": {
     "line number": [
      176,
      180
     ]
    },
    "pyemma.coordinates.data.data_in_memory.numbers": {
     "line number": [
      172
     ]
    },
    "tuple": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy._handle_slice": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      168
     ]
    },
    "isinstance": {
     "line number": [
      160
     ]
    },
    "len": {
     "line number": [
      161,
      163,
      165,
      167,
      167
     ]
    },
    "list": {
     "line number": [
      160
     ]
    },
    "numpy.index_exp": {
     "line number": [
      158
     ]
    },
    "slice": {
     "line number": [
      162,
      162,
      164
     ]
    },
    "tuple": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.DataSourceIterator": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator._next_chunk": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator._next_chunk_impl": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "min": {
     "line number": [
      269
     ]
    },
    "slice": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator._select_file": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.DataSourceIterator._select_file_guard": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator.close": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryJaggedRandomAccessStrategy": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryJaggedRandomAccessStrategy._get_itraj_random_accessible": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearItrajRandomAccessStrategy": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearItrajRandomAccessStrategy._get_itraj_random_accessible": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      228
     ]
    },
    "enumerate": {
     "line number": [
      235
     ]
    },
    "len": {
     "line number": [
      224,
      225
     ]
    },
    "max": {
     "line number": [
      227,
      229
     ]
    },
    "numpy.cumsum": {
     "line number": [
      231
     ]
    },
    "numpy.empty": {
     "line number": [
      232
     ]
    },
    "pyemma.coordinates.clustering.UniformTimeClustering._idx_to_traj_idx": {
     "line number": [
      236
     ]
    },
    "sum": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearItrajRandomAccessStrategy._map_to_absolute_traj_idx": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearRandomAccessStrategy": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearRandomAccessStrategy._handle_slice": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      199
     ]
    },
    "enumerate": {
     "line number": [
      212
     ]
    },
    "isinstance": {
     "line number": [
      193,
      202
     ]
    },
    "len": {
     "line number": [
      194,
      196,
      198,
      206,
      207
     ]
    },
    "list": {
     "line number": [
      193,
      202
     ]
    },
    "numpy.cumsum": {
     "line number": [
      201
     ]
    },
    "numpy.empty": {
     "line number": [
      209
     ]
    },
    "numpy.index_exp": {
     "line number": [
      191
     ]
    },
    "numpy.ndarray": {
     "line number": [
      202
     ]
    },
    "pyemma.coordinates.clustering.UniformTimeClustering._idx_to_traj_idx": {
     "line number": [
      213
     ]
    },
    "slice": {
     "line number": [
      195
     ]
    },
    "tuple": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.data_in_memory.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.DataSourceIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSourceIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.NumPyFileReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.RandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.UniformTimeClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.UniformTimeClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.__author__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.data_in_memory.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.data_in_memory.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.feature_reader.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.EncapsulatedIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.EncapsulatedIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      36
     ]
    },
    "pyemma.coordinates.data._base.datasource.DataSource": {
     "line number": [
      36
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "all": {
     "line number": [
      97
     ]
    },
    "any": {
     "line number": [
      102
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      104,
      104
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      91,
      98
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReaderCuboidRandomAccessStrategy": {
     "line number": [
      107
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReaderJaggedRandomAccessStrategy": {
     "line number": [
      108
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReaderLinearItrajRandomAccessStrategy": {
     "line number": [
      110
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReaderLinearRandomAccessStrategy": {
     "line number": [
      109
     ]
    },
    "pyemma.coordinates.data.feature_reader.mdtraj": {
     "line number": [
      104
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      117
     ]
    },
    "super": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader.__reduce__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader._assert_toptraj_consistency": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "pyemma.coordinates.data.feature_reader.mdtraj": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader._create_iterator": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "pyemma.coordinates.data.feature_reader.FeatureReaderIterator": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader._create_iterator.transform": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader._get_traj_info": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      135
     ]
    },
    "TypeError": {
     "line number": [
      135
     ]
    },
    "hasattr": {
     "line number": [
      144
     ]
    },
    "len": {
     "line number": [
      133
     ]
    },
    "numpy.shape": {
     "line number": [
      137,
      142
     ]
    },
    "pyemma.coordinates.data.feature_reader.mdtraj": {
     "line number": [
      131
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajInfo": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader.describe": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader.dimension": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "len": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader.supports_format": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      194
     ]
    },
    "mdtraj.formats.registry.FormatRegistry.loaders.keys": {
     "line number": [
      200
     ]
    },
    "pyemma.coordinates.data.feature_reader.os": {
     "line number": [
      197
     ]
    },
    "staticmethod": {
     "line number": [
      182
     ]
    },
    "str": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReader.trajfiles": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "property": {
     "line number": [
      125
     ]
    },
    "pyemma.util.annotators.deprecated": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderCuboidRandomAccessStrategy": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderCuboidRandomAccessStrategy._get_itraj_random_accessible": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      250
     ]
    },
    "enumerate": {
     "line number": [
      254
     ]
    },
    "int": {
     "line number": [
      253,
      255
     ]
    },
    "len": {
     "line number": [
      238,
      239,
      240,
      253
     ]
    },
    "max": {
     "line number": [
      249,
      251
     ]
    },
    "min": {
     "line number": [
      235
     ]
    },
    "numpy.empty": {
     "line number": [
      253,
      258
     ]
    },
    "numpy.ones": {
     "line number": [
      255
     ]
    },
    "numpy.sort": {
     "line number": [
      243,
      246
     ]
    },
    "numpy.unique": {
     "line number": [
      247
     ]
    },
    "range": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderCuboidRandomAccessStrategy._handle_slice": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      230
     ]
    },
    "isinstance": {
     "line number": [
      222
     ]
    },
    "len": {
     "line number": [
      223,
      225,
      227,
      229,
      229
     ]
    },
    "list": {
     "line number": [
      222
     ]
    },
    "numpy.index_exp": {
     "line number": [
      220
     ]
    },
    "slice": {
     "line number": [
      224,
      224,
      226
     ]
    },
    "tuple": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderIterator": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderIterator._create_mditer": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderIterator._create_patched_iter": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "pyemma.coordinates.util.patches.iterload": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderIterator._select_file": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator._select_file_guard": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderIterator.chunksize": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator.chunksize.setter": {
     "line number": [
      369
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReaderIterator": {
     "line number": [
      371
     ]
    },
    "super": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderJaggedRandomAccessStrategy": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "pyemma.coordinates.data.feature_reader.FeatureReaderCuboidRandomAccessStrategy": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderJaggedRandomAccessStrategy._get_itraj_random_accessible": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderLinearItrajRandomAccessStrategy": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "pyemma.coordinates.data.feature_reader.FeatureReaderCuboidRandomAccessStrategy": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderLinearItrajRandomAccessStrategy._get_itraj_random_accessible": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      285
     ]
    },
    "len": {
     "line number": [
      281,
      282,
      301
     ]
    },
    "max": {
     "line number": [
      284,
      286
     ]
    },
    "numpy.array": {
     "line number": [
      291
     ]
    },
    "numpy.cumsum": {
     "line number": [
      288
     ]
    },
    "numpy.empty": {
     "line number": [
      297
     ]
    },
    "numpy.lexsort": {
     "line number": [
      294
     ]
    },
    "pyemma.coordinates.clustering.UniformTimeClustering._idx_to_traj_idx": {
     "line number": [
      291
     ]
    },
    "sum": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderLinearItrajRandomAccessStrategy._map_to_absolute_traj_idx": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderLinearRandomAccessStrategy": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.feature_reader.FeatureReaderLinearRandomAccessStrategy._handle_slice": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      321
     ]
    },
    "isinstance": {
     "line number": [
      315
     ]
    },
    "len": {
     "line number": [
      316,
      318,
      320,
      327,
      328,
      339
     ]
    },
    "list": {
     "line number": [
      315
     ]
    },
    "numpy.array": {
     "line number": [
      334
     ]
    },
    "numpy.cumsum": {
     "line number": [
      323
     ]
    },
    "numpy.empty": {
     "line number": [
      335
     ]
    },
    "numpy.index_exp": {
     "line number": [
      313
     ]
    },
    "numpy.sort": {
     "line number": [
      331
     ]
    },
    "pyemma.coordinates.clustering.UniformTimeClustering._idx_to_traj_idx": {
     "line number": [
      334
     ]
    },
    "slice": {
     "line number": [
      317
     ]
    },
    "tuple": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.feature_reader.FormatRegistry": {
  "data": {
   "shadows": "mdtraj.formats.registry.FormatRegistry"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.MDFeaturizer": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.RandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.random_accessible.RandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.TrajInfo": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajInfo"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.UniformTimeClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.UniformTimeClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.feature_reader.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.feature_reader.deprecated": {
  "data": {
   "shadows": "pyemma.util.annotators.deprecated"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.feature_reader.patches": {
  "data": {
   "shadows": "pyemma.coordinates.util.patches"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.featurization._base": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.featurization._base.Feature": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization._base.Feature.__eq__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      50
     ]
    },
    "pyemma.coordinates.data.featurization._base.Feature": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization._base.Feature.__repr__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "str": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization._base.Feature.describe": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization._base.Feature.dimension": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "int": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization._base.Feature.top": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization._base.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.featurization.angles.AngleFeature": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization._base.Feature": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.angles.AngleFeature.__eq__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      80
     ]
    },
    "numpy.all": {
     "line number": [
      82
     ]
    },
    "pyemma.coordinates.data.featurization.angles.AngleFeature": {
     "line number": [
      79,
      80
     ]
    },
    "super": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.AngleFeature.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      43
     ]
    },
    "len": {
     "line number": [
      42,
      47
     ]
    },
    "numpy.array": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.AngleFeature.describe": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.util._describe_atom": {
     "line number": [
      55,
      56,
      57,
      62,
      63,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.AngleFeature.transform": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      71
     ]
    },
    "numpy.dstack": {
     "line number": [
      71
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      74
     ]
    },
    "numpy.sin": {
     "line number": [
      71
     ]
    },
    "pyemma.coordinates.data.featurization.angles.mdtraj": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.BackboneTorsionFeature": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.angles.DihedralFeature": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.angles.BackboneTorsionFeature.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "list": {
     "line number": [
      150
     ]
    },
    "mdtraj.geometry.dihedral.indices_phi": {
     "line number": [
      133
     ]
    },
    "mdtraj.geometry.dihedral.indices_psi": {
     "line number": [
      142
     ]
    },
    "numpy.array": {
     "line number": [
      150
     ]
    },
    "numpy.in1d": {
     "line number": [
      139,
      146
     ]
    },
    "pyemma.coordinates.data.featurization.angles.BackboneTorsionFeature": {
     "line number": [
      153
     ]
    },
    "super": {
     "line number": [
      153
     ]
    },
    "zip": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.BackboneTorsionFeature.describe": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "getlbl": {
     "line number": [
      163,
      164,
      167,
      168,
      176,
      178
     ]
    },
    "list": {
     "line number": [
      172,
      179
     ]
    },
    "pyemma.coordinates.data.featurization.angles.itertools": {
     "line number": [
      172,
      173,
      179
     ]
    },
    "zip": {
     "line number": [
      173,
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.DihedralFeature": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.angles.AngleFeature": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.angles.DihedralFeature.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.angles.DihedralFeature": {
     "line number": [
      89
     ]
    },
    "super": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.DihedralFeature.describe": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.util._describe_atom": {
     "line number": [
      100,
      101,
      102,
      103,
      108,
      109,
      110,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.DihedralFeature.transform": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      118
     ]
    },
    "numpy.dstack": {
     "line number": [
      118
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      122
     ]
    },
    "numpy.sin": {
     "line number": [
      118
     ]
    },
    "pyemma.coordinates.data.featurization.angles.mdtraj": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.Feature": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization._base.Feature"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.SideChainTorsions": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.angles.DihedralFeature": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.angles.SideChainTorsions.__init__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      192,
      209
     ]
    },
    "getattr": {
     "line number": [
      198
     ]
    },
    "isinstance": {
     "line number": [
      189
     ]
    },
    "len": {
     "line number": [
      210
     ]
    },
    "list": {
     "line number": [
      189,
      193
     ]
    },
    "mdtraj.geometry.dihedral": {
     "line number": [
      198
     ]
    },
    "numpy.array": {
     "line number": [
      210
     ]
    },
    "numpy.in1d": {
     "line number": [
      203
     ]
    },
    "numpy.vstack": {
     "line number": [
      211
     ]
    },
    "pyemma.coordinates.data.featurization.angles.SideChainTorsions": {
     "line number": [
      213
     ]
    },
    "set": {
     "line number": [
      191,
      191
     ]
    },
    "super": {
     "line number": [
      213
     ]
    },
    "tuple": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles.SideChainTorsions.describe": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      226,
      230
     ]
    },
    "getlbl": {
     "line number": [
      216,
      225,
      229
     ]
    },
    "zip": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.angles._describe_atom": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._describe_atom"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.dihedral": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.indices_chi1": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral.indices_chi1"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.indices_omega": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral.indices_omega"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.indices_phi": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral.indices_phi"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.indices_psi": {
  "data": {
   "shadows": "mdtraj.geometry.dihedral.indices_psi"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.angles.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.distances": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.featurization.distances.ContactFeature": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.distances.DistanceFeature": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.distances.ContactFeature.__eq__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      212
     ]
    },
    "pyemma.coordinates.data.featurization.distances.ContactFeature": {
     "line number": [
      211,
      212
     ]
    },
    "super": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.ContactFeature.__init__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "len": {
     "line number": [
      196
     ]
    },
    "pyemma.coordinates.data.featurization.distances.DistanceFeature": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.ContactFeature.transform": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "len": {
     "line number": [
      202
     ]
    },
    "numpy.argwhere": {
     "line number": [
      203
     ]
    },
    "numpy.float32": {
     "line number": [
      202
     ]
    },
    "numpy.zeros": {
     "line number": [
      201
     ]
    },
    "pyemma.coordinates.data.featurization.distances.mdtraj": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.DistanceFeature": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization._base.Feature": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.distances.DistanceFeature.__eq__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      55
     ]
    },
    "numpy.all": {
     "line number": [
      57
     ]
    },
    "pyemma.coordinates.data.featurization.distances.DistanceFeature": {
     "line number": [
      54,
      55
     ]
    },
    "super": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.DistanceFeature.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      39
     ]
    },
    "len": {
     "line number": [
      38,
      41
     ]
    },
    "numpy.array": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.DistanceFeature.describe": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.util._describe_atom": {
     "line number": [
      45,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.DistanceFeature.transform": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.distances.mdtraj": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.Feature": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization._base.Feature"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.distances.GroupMinDistanceFeature": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.distances.DistanceFeature": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.distances.GroupMinDistanceFeature.__eq__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      173
     ]
    },
    "numpy.all": {
     "line number": [
      175,
      176,
      177
     ]
    },
    "pyemma.coordinates.data.featurization.distances.GroupMinDistanceFeature": {
     "line number": [
      172,
      173
     ]
    },
    "super": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.GroupMinDistanceFeature.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "len": {
     "line number": [
      142
     ]
    },
    "numpy.array": {
     "line number": [
      137
     ]
    },
    "pyemma.coordinates.data.featurization.distances.GroupMinDistanceFeature": {
     "line number": [
      135
     ]
    },
    "super": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.GroupMinDistanceFeature.describe": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.util._describe_atom": {
     "line number": [
      146,
      147,
      148,
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.GroupMinDistanceFeature.transform": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      160
     ]
    },
    "numpy.argwhere": {
     "line number": [
      164
     ]
    },
    "numpy.zeros": {
     "line number": [
      157
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      158
     ]
    },
    "pyemma.coordinates.data.featurization.distances.mdtraj": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.InverseDistanceFeature": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.distances.DistanceFeature": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.distances.InverseDistanceFeature.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.distances.DistanceFeature": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.InverseDistanceFeature.transform": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.distances.mdtraj": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.ResidueMinDistanceFeature": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.distances.DistanceFeature": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.distances.ResidueMinDistanceFeature.__eq__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      119
     ]
    },
    "numpy.all": {
     "line number": [
      121
     ]
    },
    "pyemma.coordinates.data.featurization.distances.ResidueMinDistanceFeature": {
     "line number": [
      118,
      119
     ]
    },
    "super": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.ResidueMinDistanceFeature.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      91
     ]
    },
    "pyemma.coordinates.data.featurization.distances.mdtraj": {
     "line number": [
      91,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.ResidueMinDistanceFeature.describe": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances.ResidueMinDistanceFeature.transform": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "numpy.argwhere": {
     "line number": [
      111
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      108
     ]
    },
    "pyemma.coordinates.data.featurization.distances.mdtraj": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.distances._describe_atom": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._describe_atom"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.distances.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.distances.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.featurization.featurizer.Loggable": {
  "data": {
   "shadows": "pyemma._base.loggable.Loggable"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "pyemma._base.loggable.Loggable": {
     "line number": [
      40
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.__add_feature": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.__repr__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.featurizer.pprint": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer._check_indices": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      243,
      246,
      249
     ]
    },
    "numpy.array": {
     "line number": [
      240
     ]
    },
    "numpy.int": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_all": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "list": {
     "line number": [
      272
     ]
    },
    "range": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_angles": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": {
    "AngleFeature": {
     "line number": [
      647
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_backbone_torsions": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": {
    "BackboneTorsionFeature": {
     "line number": [
      701
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_chi1_torsions": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": {
    "SideChainTorsions": {
     "line number": [
      729
     ]
    },
    "pyemma.util.annotators.deprecated": {
     "line number": [
      705
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_contacts": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "ContactFeature": {
     "line number": [
      449
     ]
    },
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_custom_feature": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      771,
      775,
      777
     ]
    },
    "callable": {
     "line number": [
      776
     ]
    },
    "getattr": {
     "line number": [
      776
     ]
    },
    "hasattr": {
     "line number": [
      774
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_custom_func": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": {
    "CustomFeature": {
     "line number": [
      840
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_dihedrals": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": {
    "DihedralFeature": {
     "line number": [
      674
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_distances": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "DistanceFeature": {
     "line number": [
      338
     ]
    },
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_distances_ca": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_group_COM": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": {
    "GroupCOMFeature": {
     "line number": [
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_group_mindist": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": {
    "GroupMinDistanceFeature": {
     "line number": [
      621
     ]
    },
    "pyemma.coordinates.data.featurization.util._parse_groupwise_input": {
     "line number": [
      618
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_inverse_distances": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "InverseDistanceFeature": {
     "line number": [
      406
     ]
    },
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_minrmsd_to_ref": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": {
    "MinRmsdFeature": {
     "line number": [
      810
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_residue_COM": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "ResidueCOMFeature": {
     "line number": [
      582
     ]
    },
    "numpy.asarray": {
     "line number": [
      582
     ]
    },
    "pyemma.coordinates.data.featurization.util._atoms_in_residues": {
     "line number": [
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_residue_mindist": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "ResidueMinDistanceFeature": {
     "line number": [
      504
     ]
    },
    "pyemma.util.types.is_string": {
     "line number": [
      499
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_selection": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "AlignFeature": {
     "line number": [
      300
     ]
    },
    "SelectionFeature": {
     "line number": [
      296
     ]
    },
    "ValueError": {
     "line number": [
      299
     ]
    },
    "isinstance": {
     "line number": [
      298
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.mdtraj": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.add_sidechain_torsions": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": {
    "SideChainTorsions": {
     "line number": [
      757
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.describe": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.dimension": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      859
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.pairs": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "int": {
     "line number": [
      220
     ]
    },
    "isinstance": {
     "line number": [
      220
     ]
    },
    "len": {
     "line number": [
      223,
      224
     ]
    },
    "numpy.array": {
     "line number": [
      234
     ]
    },
    "range": {
     "line number": [
      223,
      224
     ]
    },
    "staticmethod": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.remove_all_custom_funcs": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": {
    "CustomFeature": {
     "line number": [
      846
     ]
    },
    "isinstance": {
     "line number": [
      846
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.select": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.select_Backbone": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.select_Ca": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.select_Heavy": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.topologyfile": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      79
     ]
    },
    "isinstance": {
     "line number": [
      71,
      74,
      76
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.mdtraj": {
     "line number": [
      74,
      76
     ]
    },
    "pyemma.coordinates.util.patches.load_topology_cached": {
     "line number": [
      72
     ]
    },
    "str": {
     "line number": [
      71
     ]
    },
    "type": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer.transform": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": {
    "CustomFeature": {
     "line number": [
      890
     ]
    },
    "ValueError": {
     "line number": [
      897,
      900,
      905
     ]
    },
    "isinstance": {
     "line number": [
      890,
      896
     ]
    },
    "len": {
     "line number": [
      915
     ]
    },
    "numpy.arange": {
     "line number": [
      880
     ]
    },
    "numpy.empty": {
     "line number": [
      894
     ]
    },
    "numpy.float32": {
     "line number": [
      892,
      912
     ]
    },
    "numpy.hstack": {
     "line number": [
      916
     ]
    },
    "numpy.ndarray": {
     "line number": [
      896
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.warnings": {
     "line number": [
      881
     ]
    },
    "str": {
     "line number": [
      898,
      902,
      903,
      908
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.featurizer.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.__all__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.featurization.featurizer.__author__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.featurization.featurizer._atoms_in_residues": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._atoms_in_residues"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer._parse_groupwise_input": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._parse_groupwise_input"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer._parse_pairwise_input": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._parse_pairwise_input"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.deprecated": {
  "data": {
   "shadows": "pyemma.util.annotators.deprecated"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.is_string": {
  "data": {
   "shadows": "pyemma.util.types.is_string"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.load_topology_cached": {
  "data": {
   "shadows": "pyemma.coordinates.util.patches.load_topology_cached"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.load_topology_uncached": {
  "data": {
   "shadows": "mdtraj.load_topology"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.featurizer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.misc": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.featurization.misc.AlignFeature": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.misc.SelectionFeature": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.misc.AlignFeature.__eq__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      254
     ]
    },
    "numpy.all": {
     "line number": [
      257
     ]
    },
    "pyemma.coordinates.data.featurization.misc.AlignFeature": {
     "line number": [
      254
     ]
    },
    "pyemma.coordinates.data.featurization.util.cmp_traj": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.AlignFeature.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.misc.AlignFeature": {
     "line number": [
      247
     ]
    },
    "super": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.AlignFeature.transform": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.misc.AlignFeature": {
     "line number": [
      266
     ]
    },
    "slice": {
     "line number": [
      262
     ]
    },
    "super": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "itertools.count": {
     "line number": [
      76
     ]
    },
    "pyemma.coordinates.data.featurization._base.Feature": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature.__eq__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      122
     ]
    },
    "pyemma.coordinates.data.featurization.misc.CustomFeature": {
     "line number": [
      121,
      122
     ]
    },
    "super": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature.__getstate__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.misc.CustomFeature": {
     "line number": [
      130
     ]
    },
    "pyemma.coordinates.data.featurization.misc.warnings": {
     "line number": [
      128
     ]
    },
    "super": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      102
     ]
    },
    "isinstance": {
     "line number": [
      90
     ]
    },
    "len": {
     "line number": [
      101,
      101,
      106
     ]
    },
    "next": {
     "line number": [
      92
     ]
    },
    "pyemma.coordinates.data.featurization.misc.CustomFeature": {
     "line number": [
      92
     ]
    },
    "str": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature.__setstate__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.misc.CustomFeature": {
     "line number": [
      133
     ]
    },
    "super": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature.__setstate__._warn": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature.describe": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.CustomFeature.transform": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      117
     ]
    },
    "isinstance": {
     "line number": [
      116
     ]
    },
    "numpy.ndarray": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.Feature": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization._base.Feature"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.misc.GroupCOMFeature": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization._base.Feature": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.misc.GroupCOMFeature.__eq__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "all": {
     "line number": [
      318,
      319
     ]
    },
    "isinstance": {
     "line number": [
      315
     ]
    },
    "numpy.array_equal": {
     "line number": [
      318,
      319
     ]
    },
    "pyemma.coordinates.data.featurization.misc.GroupCOMFeature": {
     "line number": [
      314,
      315
     ]
    },
    "pyemma.coordinates.data.featurization.util.cmp_traj": {
     "line number": [
      317
     ]
    },
    "super": {
     "line number": [
      314
     ]
    },
    "zip": {
     "line number": [
      318,
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.GroupCOMFeature.__init__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      276
     ]
    },
    "isinstance": {
     "line number": [
      275
     ]
    },
    "len": {
     "line number": [
      296
     ]
    },
    "numpy.array": {
     "line number": [
      283
     ]
    },
    "numpy.asarray": {
     "line number": [
      282
     ]
    },
    "numpy.ones_like": {
     "line number": [
      288
     ]
    },
    "pyemma.coordinates.data.featurization.misc.mdtraj": {
     "line number": [
      275
     ]
    },
    "type": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.GroupCOMFeature.describe": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.GroupCOMFeature.transform": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "numpy.average": {
     "line number": [
      310
     ]
    },
    "numpy.hstack": {
     "line number": [
      311
     ]
    },
    "zip": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.MinRmsdFeature": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization._base.Feature": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.misc.MinRmsdFeature.__eq__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      230
     ]
    },
    "numpy.all": {
     "line number": [
      235
     ]
    },
    "pyemma.coordinates.data.featurization.misc.MinRmsdFeature": {
     "line number": [
      230,
      232
     ]
    },
    "pyemma.coordinates.data.featurization.util.cmp_traj": {
     "line number": [
      233
     ]
    },
    "super": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.MinRmsdFeature.__init__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      209
     ]
    },
    "int": {
     "line number": [
      194
     ]
    },
    "isinstance": {
     "line number": [
      193,
      198,
      206
     ]
    },
    "pyemma.coordinates.data.featurization.misc.mdtraj": {
     "line number": [
      201,
      206
     ]
    },
    "str": {
     "line number": [
      198
     ]
    },
    "type": {
     "line number": [
      194,
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.MinRmsdFeature.describe": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.MinRmsdFeature.transform": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      227
     ]
    },
    "pyemma.coordinates.data.featurization.misc.mdtraj": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.ResidueCOMFeature": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.misc.GroupCOMFeature": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.misc.ResidueCOMFeature.__eq__": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      346
     ]
    },
    "numpy.all": {
     "line number": [
      348
     ]
    },
    "pyemma.coordinates.data.featurization.misc.ResidueCOMFeature": {
     "line number": [
      345,
      346
     ]
    },
    "super": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.ResidueCOMFeature.__init__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.misc.ResidueCOMFeature": {
     "line number": [
      330
     ]
    },
    "super": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.SelectionFeature": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization._base.Feature": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.featurization.misc.SelectionFeature.__eq__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      180
     ]
    },
    "numpy.all": {
     "line number": [
      182
     ]
    },
    "pyemma.coordinates.data.featurization.misc.SelectionFeature": {
     "line number": [
      179,
      180
     ]
    },
    "super": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.SelectionFeature.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      160
     ]
    },
    "len": {
     "line number": [
      159,
      161
     ]
    },
    "numpy.array": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.SelectionFeature.describe": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.util._describe_atom": {
     "line number": [
      167,
      169,
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc.SelectionFeature.transform": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "numpy.reshape": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.misc._describe_atom": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._describe_atom"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.misc.cmp_traj": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util.cmp_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.misc.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.misc.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.misc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.featurization.util._atoms_in_residues": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      243
     ]
    },
    "len": {
     "line number": [
      235,
      243
     ]
    },
    "numpy.arange": {
     "line number": [
      230
     ]
    },
    "numpy.array": {
     "line number": [
      234,
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.util._catch_unhashable": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      48
     ]
    },
    "hasattr": {
     "line number": [
      46
     ]
    },
    "isinstance": {
     "line number": [
      49,
      54
     ]
    },
    "list": {
     "line number": [
      47
     ]
    },
    "numpy.ndarray": {
     "line number": [
      49,
      54
     ]
    },
    "pyemma.util.numeric._hash_numpy_array": {
     "line number": [
      50,
      55
     ]
    },
    "tuple": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.util._describe_atom": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.util._hash_numpy_array": {
  "data": {
   "shadows": "pyemma.util.numeric._hash_numpy_array"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.util._parse_groupwise_input": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      176,
      177,
      193,
      203
     ]
    },
    "isinstance": {
     "line number": [
      164,
      186
     ]
    },
    "len": {
     "line number": [
      166,
      178,
      178,
      184,
      188,
      189,
      211,
      212
     ]
    },
    "list": {
     "line number": [
      164
     ]
    },
    "numpy.allclose": {
     "line number": [
      179
     ]
    },
    "numpy.arange": {
     "line number": [
      184
     ]
    },
    "numpy.array": {
     "line number": [
      167
     ]
    },
    "numpy.ndarray": {
     "line number": [
      186
     ]
    },
    "numpy.ndim": {
     "line number": [
      172,
      172
     ]
    },
    "numpy.sort": {
     "line number": [
      196
     ]
    },
    "numpy.unique": {
     "line number": [
      173
     ]
    },
    "numpy.vstack": {
     "line number": [
      214
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      192,
      201
     ]
    },
    "pyemma.util.indices.combinations": {
     "line number": [
      184,
      209
     ]
    },
    "pyemma.util.indices.product": {
     "line number": [
      205
     ]
    },
    "pyemma.util.types.is_string": {
     "line number": [
      182
     ]
    },
    "type": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.util._parse_pairwise_input": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "numpy.in1d": {
     "line number": [
      126
     ]
    },
    "numpy.unique": {
     "line number": [
      113,
      123
     ]
    },
    "pyemma.util.indices.combinations": {
     "line number": [
      117
     ]
    },
    "pyemma.util.indices.product": {
     "line number": [
      128
     ]
    },
    "pyemma.util.types.is_iterable_of_int": {
     "line number": [
      107,
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.util.cmp_traj": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      85,
      88
     ]
    },
    "numpy.allclose": {
     "line number": [
      84
     ]
    },
    "numpy.array_equal": {
     "line number": [
      86,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.util.combinations": {
  "data": {
   "shadows": "pyemma.util.indices.combinations"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.util.hash_top": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "hash": {
     "line number": [
      62,
      64,
      65,
      66,
      67
     ]
    },
    "tuple": {
     "line number": [
      65,
      66,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.featurization.util.is_iterable_of_int": {
  "data": {
   "shadows": "pyemma.util.types.is_iterable_of_int"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.util.is_string": {
  "data": {
   "shadows": "pyemma.util.types.is_string"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.featurization.util.product": {
  "data": {
   "shadows": "pyemma.util.indices.product"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.DataSourceIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSourceIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.EncapsulatedIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.EncapsulatedIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.feature_reader.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentIterator": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentIterator._select_file": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator._select_file_guard": {
     "line number": [
      252
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentIterator.chunksize": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.EncapsulatedIterator.chunksize.setter": {
     "line number": [
      262
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentIterator": {
     "line number": [
      264
     ]
    },
    "super": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      269
     ]
    },
    "pyemma.coordinates.data._base.datasource.DataSource": {
     "line number": [
      269
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader.__init__": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      316
     ]
    },
    "any": {
     "line number": [
      290
     ]
    },
    "collections.defaultdict": {
     "line number": [
      320
     ]
    },
    "isinstance": {
     "line number": [
      288,
      290,
      293
     ]
    },
    "len": {
     "line number": [
      295,
      300,
      308
     ]
    },
    "list": {
     "line number": [
      288,
      290,
      293,
      320
     ]
    },
    "numpy.cumsum": {
     "line number": [
      332
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      304
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      297
     ]
    },
    "range": {
     "line number": [
      305,
      328,
      330,
      332
     ]
    },
    "set": {
     "line number": [
      308
     ]
    },
    "sum": {
     "line number": [
      330
     ]
    },
    "super": {
     "line number": [
      297
     ]
    },
    "tuple": {
     "line number": [
      288,
      290,
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader.__reduce__": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader._create_iterator": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentIterator": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader._get_traj_info": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader._index_to_reader_index": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      373
     ]
    },
    "enumerate": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader.describe": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader.dimension": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader.filenames_flat": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "property": {
     "line number": [
      341
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.itertools": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader.reader_by_filename": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      348
     ]
    },
    "len": {
     "line number": [
      348
     ]
    },
    "list": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "next": {
     "line number": [
      120
     ]
    },
    "object": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.__chunk_contained_in_current_reader": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.__get_chunk_expected_length": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "len": {
     "line number": [
      135
     ]
    },
    "min": {
     "line number": [
      135,
      137
     ]
    },
    "sum": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.__get_ifrag_ra_indices": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "int": {
     "line number": [
      196
     ]
    },
    "len": {
     "line number": [
      192,
      196
     ]
    },
    "numpy.zeros": {
     "line number": [
      196
     ]
    },
    "tuple": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.__get_ra_index_indices": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      207
     ]
    },
    "numpy.argwhere": {
     "line number": [
      209
     ]
    },
    "numpy.logical_and": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "numpy.cumsum": {
     "line number": [
      44
     ]
    },
    "sum": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.__iter__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.__next__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      105
     ]
    },
    "len": {
     "line number": [
      81,
      96,
      104
     ]
    },
    "next": {
     "line number": [
      80,
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator._allocate_chunk": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "all": {
     "line number": [
      146
     ]
    },
    "isinstance": {
     "line number": [
      146
     ]
    },
    "numpy.empty": {
     "line number": [
      150
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      146
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.preallocate_empty_trajectory": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator._calculate_new_overlap": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator._read_full": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      161,
      177
     ]
    },
    "len": {
     "line number": [
      158,
      163,
      167,
      174,
      185
     ]
    },
    "min": {
     "line number": [
      181
     ]
    },
    "numpy.zeros": {
     "line number": [
      174
     ]
    },
    "sum": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator._select_next_ra_iterator": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      130
     ]
    },
    "len": {
     "line number": [
      123,
      125,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator._traj_lengths": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "int": {
     "line number": [
      215
     ]
    },
    "numpy.array": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.close": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader._FragmentedTrajectoryIterator.ra_indices": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.preallocate_empty_trajectory": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.preallocate_empty_trajectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.fragmented_trajectory_reader.source": {
  "data": {
   "shadows": "pyemma.coordinates.api.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.h5_reader.DataInMemoryCuboidRandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.DataInMemoryJaggedRandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemoryJaggedRandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.DataInMemoryLinearItrajRandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearItrajRandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.DataInMemoryLinearRandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearRandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.DataSourceIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSourceIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.H5Iterator": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.DataSourceIterator": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.h5_reader.H5Iterator._next_chunk": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "len": {
     "line number": [
      208,
      208
     ]
    },
    "list": {
     "line number": [
      207
     ]
    },
    "min": {
     "line number": [
      202
     ]
    },
    "numpy.iinfo": {
     "line number": [
      198
     ]
    },
    "numpy.int64": {
     "line number": [
      198
     ]
    },
    "numpy.unique": {
     "line number": [
      206
     ]
    },
    "slice": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Iterator._select_file": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.DataSourceIterator._select_file_guard": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Iterator.close": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      11
     ]
    },
    "pyemma.coordinates.data._base.datasource.DataSource": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      68
     ]
    },
    "collections.defaultdict": {
     "line number": [
      55
     ]
    },
    "int": {
     "line number": [
      55
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemoryCuboidRandomAccessStrategy": {
     "line number": [
      46
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemoryJaggedRandomAccessStrategy": {
     "line number": [
      47
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearItrajRandomAccessStrategy": {
     "line number": [
      49
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemoryLinearRandomAccessStrategy": {
     "line number": [
      48
     ]
    },
    "pyemma.coordinates.data.h5_reader.H5Reader": {
     "line number": [
      37
     ]
    },
    "pyemma.util.contexts.settings": {
     "line number": [
      60
     ]
    },
    "super": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader.__reduce__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "pyemma.coordinates.data.h5_reader.H5Reader": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader._create_iterator": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "pyemma.coordinates.data.h5_reader.H5Iterator": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader._get_traj_info": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      128
     ]
    },
    "TypeError": {
     "line number": [
      128
     ]
    },
    "enumerate": {
     "line number": [
      134
     ]
    },
    "functools.partial": {
     "line number": [
      147
     ]
    },
    "list": {
     "line number": [
      133
     ]
    },
    "pyemma.coordinates.data.h5_reader.h5py": {
     "line number": [
      125
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajInfo": {
     "line number": [
      160,
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader._get_traj_info.name_matches_selection": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      139
     ]
    },
    "pyemma.coordinates.data.h5_reader.h5py": {
     "line number": [
      139
     ]
    },
    "pyemma.coordinates.data.h5_reader.re": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader._load_file": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "pyemma.coordinates.data.h5_reader.h5py": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader._reshape": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "numpy.reshape": {
     "line number": [
      117
     ]
    },
    "pyemma.coordinates.data.h5_reader.functools": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader.n_datasets": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "property": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.H5Reader.selection": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      91
     ]
    },
    "any": {
     "line number": [
      84
     ]
    },
    "dict": {
     "line number": [
      82
     ]
    },
    "isinstance": {
     "line number": [
      82,
      89
     ]
    },
    "str": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.h5_reader.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.TrajInfo": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajInfo"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.h5_reader.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.settings": {
  "data": {
   "shadows": "pyemma.util.contexts.settings"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.h5_reader.tables": {
  "data": {
   "shadows": "tables"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.numpy_filereader.DataInMemoryIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader.DataSourceIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSourceIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader.NPYIterator": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.numpy_filereader.NPYIterator._next_chunk": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NPYIterator._select_file": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator._select_file_guard": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NPYIterator.close": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      36
     ]
    },
    "pyemma.coordinates.data._base.datasource.DataSource": {
     "line number": [
      36
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      61
     ]
    },
    "isinstance": {
     "line number": [
      56
     ]
    },
    "list": {
     "line number": [
      56
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      53
     ]
    },
    "super": {
     "line number": [
      53
     ]
    },
    "tuple": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader.__reduce__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader._create_iterator": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "pyemma.coordinates.data.numpy_filereader.NPYIterator": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader._get_traj_info": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "numpy.shape": {
     "line number": [
      104
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajInfo": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader._load_file": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      97
     ]
    },
    "numpy.load": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader._reshape": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "numpy.atleast_2d": {
     "line number": [
      82
     ]
    },
    "numpy.reshape": {
     "line number": [
      88
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.functools": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.NumPyFileReader.describe": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pyemma.coordinates.data.numpy_filereader.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader.TrajInfo": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajInfo"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.numpy_filereader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.py_csv_reader.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.DataSourceIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSourceIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVIterator": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.DataSourceIterator": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVIterator.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma.coordinates.data.py_csv_reader.PyCSVIterator": {
     "line number": [
      39
     ]
    },
    "super": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVIterator._convert_to_np_chunk": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      94,
      101,
      106
     ]
    },
    "bool": {
     "line number": [
      87
     ]
    },
    "enumerate": {
     "line number": [
      97
     ]
    },
    "filter": {
     "line number": [
      87
     ]
    },
    "float": {
     "line number": [
      100
     ]
    },
    "list": {
     "line number": [
      87
     ]
    },
    "numpy.float32": {
     "line number": [
      93
     ]
    },
    "numpy.vstack": {
     "line number": [
      88
     ]
    },
    "pyemma.coordinates.data.py_csv_reader._dialect_to_str": {
     "line number": [
      96
     ]
    },
    "repr": {
     "line number": [
      104
     ]
    },
    "str": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVIterator._next_chunk": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "len": {
     "line number": [
      63,
      69
     ]
    },
    "range": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVIterator._open_file": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      120,
      123,
      126,
      128,
      130
     ]
    },
    "numpy.empty": {
     "line number": [
      116
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      124,
      131
     ]
    },
    "numpy.zeros": {
     "line number": [
      119
     ]
    },
    "open": {
     "line number": [
      136
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.csv": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVIterator._select_file": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.DataSourceIterator._select_file_guard": {
     "line number": [
      73
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.csv": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVIterator.close": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      162
     ]
    },
    "pyemma.coordinates.data._base.datasource.DataSource": {
     "line number": [
      162
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      208
     ]
    },
    "int": {
     "line number": [
      217
     ]
    },
    "isinstance": {
     "line number": [
      203,
      205
     ]
    },
    "len": {
     "line number": [
      204
     ]
    },
    "list": {
     "line number": [
      203
     ]
    },
    "numpy.zeros": {
     "line number": [
      217
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      200,
      209,
      210
     ]
    },
    "str": {
     "line number": [
      205
     ]
    },
    "super": {
     "line number": [
      200
     ]
    },
    "tuple": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader.__parse_args": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      225
     ]
    },
    "len": {
     "line number": [
      226
     ]
    },
    "list": {
     "line number": [
      225
     ]
    },
    "staticmethod": {
     "line number": [
      221
     ]
    },
    "tuple": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader.__reduce__": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._calc_offsets": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "len": {
     "line number": [
      336,
      346,
      347,
      356
     ]
    },
    "new_size": {
     "line number": [
      336,
      347
     ]
    },
    "numpy.diff": {
     "line number": [
      352
     ]
    },
    "numpy.empty": {
     "line number": [
      337
     ]
    },
    "numpy.insert": {
     "line number": [
      354
     ]
    },
    "numpy.int64": {
     "line number": [
      337
     ]
    },
    "numpy.resize": {
     "line number": [
      347
     ]
    },
    "open": {
     "line number": [
      342
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.os": {
     "line number": [
      336
     ]
    },
    "staticmethod": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._calc_offsets.new_size": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "int": {
     "line number": [
      330
     ]
    },
    "math.ceil": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._create_iterator": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "pyemma.coordinates.data.py_csv_reader.PyCSVIterator": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._determine_dialect": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      278
     ]
    },
    "custom_dialect": {
     "line number": [
      294
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.csv": {
     "line number": [
      272,
      275
     ]
    },
    "range": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._determine_dialect.custom_dialect": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "pyemma.coordinates.data.py_csv_reader.csv": {
     "line number": [
      285,
      292
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._get_dialect": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._get_dimension": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      371,
      373
     ]
    },
    "float": {
     "line number": [
      370
     ]
    },
    "len": {
     "line number": [
      375
     ]
    },
    "next": {
     "line number": [
      366
     ]
    },
    "numpy.array": {
     "line number": [
      370
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.csv": {
     "line number": [
      364
     ]
    },
    "range": {
     "line number": [
      365
     ]
    },
    "staticmethod": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader._get_traj_info": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "open": {
     "line number": [
      385
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      386,
      388
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajInfo": {
     "line number": [
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.PyCSVReader.describe": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.TrajInfo": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajInfo"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader._dialect_to_str": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "io.StringIO": {
     "line number": [
      146
     ]
    },
    "str": {
     "line number": [
      148,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.py_csv_reader.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.py_csv_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.sources_merger": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.sources_merger.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.sources_merger.DataSourceIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSourceIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.sources_merger.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.sources_merger.SourcesMerger": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      9
     ]
    },
    "pyemma.coordinates.data._base.datasource.DataSource": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.sources_merger.SourcesMerger.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      32,
      41
     ]
    },
    "numpy.any": {
     "line number": [
      40
     ]
    },
    "pyemma.coordinates.data.sources_merger.SourcesMerger": {
     "line number": [
      25
     ]
    },
    "pyemma.coordinates.data.sources_merger.itertools": {
     "line number": [
      39
     ]
    },
    "sum": {
     "line number": [
      28
     ]
    },
    "super": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.sources_merger.SourcesMerger.__reduce__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "pyemma.coordinates.data.sources_merger.SourcesMerger": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.sources_merger.SourcesMerger._create_iterator": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "pyemma.coordinates.data.sources_merger._JoiningIterator": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.sources_merger._JoiningIterator": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.DataSourceIterator": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.sources_merger._JoiningIterator.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      58
     ]
    },
    "pyemma.coordinates.data.sources_merger._JoiningIterator": {
     "line number": [
      55
     ]
    },
    "super": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.sources_merger._JoiningIterator._next_chunk": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "next": {
     "line number": [
      73,
      76
     ]
    },
    "numpy.hstack": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.sources_merger._JoiningIterator._select_file": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.datasource.DataSourceIterator._select_file_guard": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.sources_merger._JoiningIterator.close": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyemma.coordinates.data.sources_merger.__author__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.sources_merger.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.sources_merger.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.util.frames_from_file": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      33
     ]
    },
    "logging.getLogger": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.data.util.frames_from_file.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.util.frames_from_file._copy_traj_attributes": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.copy_traj_attributes"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file._enforce_top": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.enforce_top"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file._preallocate_empty_trajectory": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.preallocate_empty_trajectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file.frames_from_files": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      56,
      62,
      107
     ]
    },
    "int": {
     "line number": [
      65
     ]
    },
    "isinstance": {
     "line number": [
      57,
      59,
      69
     ]
    },
    "len": {
     "line number": [
      84,
      84,
      96,
      139,
      143
     ]
    },
    "numpy.arange": {
     "line number": [
      96
     ]
    },
    "numpy.array": {
     "line number": [
      66,
      90
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      73
     ]
    },
    "numpy.insert": {
     "line number": [
      73
     ]
    },
    "numpy.lexsort": {
     "line number": [
      82
     ]
    },
    "numpy.max": {
     "line number": [
      104
     ]
    },
    "numpy.unique": {
     "line number": [
      86
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      73
     ]
    },
    "pyemma.coordinates.data.FeatureReader": {
     "line number": [
      59
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      57
     ]
    },
    "pyemma.coordinates.data.util.frames_from_file.itertools": {
     "line number": [
      92
     ]
    },
    "pyemma.coordinates.data.util.frames_from_file.log": {
     "line number": [
      78
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.copy_traj_attributes": {
     "line number": [
      142
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.enforce_top": {
     "line number": [
      52
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.preallocate_empty_trajectory": {
     "line number": [
      139
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      90,
      131
     ]
    },
    "set_reader_return_traj_objects": {
     "line number": [
      133,
      149
     ]
    },
    "str": {
     "line number": [
      69
     ]
    },
    "zip": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.frames_from_file.frames_from_files.set_reader_return_traj_objects": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      117,
      119,
      122
     ]
    },
    "pyemma.coordinates.data.FeatureReader": {
     "line number": [
      117,
      122
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.frames_from_file.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file.log": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.util.frames_from_file.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.frames_from_file.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.util.reader_utils.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.H5Reader": {
  "data": {
   "shadows": "pyemma.coordinates.data.h5_reader.H5Reader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.NumPyFileReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.PyCSVReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.StringIO": {
  "data": {
   "shadows": "six.StringIO"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils._is_mdtraj_hdf5_file": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      219,
      227
     ]
    },
    "isinstance": {
     "line number": [
      204,
      205
     ]
    },
    "mdtraj.Trajectory": {
     "line number": [
      204,
      205
     ]
    },
    "numpy.argwhere": {
     "line number": [
      233
     ]
    },
    "numpy.random.randint": {
     "line number": [
      211
     ]
    },
    "numpy.sqrt": {
     "line number": [
      229
     ]
    },
    "numpy.zeros": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.copy_traj_attributes": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.create_file_reader": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      65,
      67,
      88,
      103,
      107,
      118,
      120
     ]
    },
    "all": {
     "line number": [
      61,
      76
     ]
    },
    "any": {
     "line number": [
      49,
      55
     ]
    },
    "isinstance": {
     "line number": [
      48,
      49,
      53,
      54,
      55,
      59,
      61
     ]
    },
    "len": {
     "line number": [
      48,
      56,
      61,
      64
     ]
    },
    "list": {
     "line number": [
      48,
      49,
      54
     ]
    },
    "pyemma.coordinates.data.FeatureReader": {
     "line number": [
      110
     ]
    },
    "pyemma.coordinates.data.FeatureReader.supports_format": {
     "line number": [
      99
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      50
     ]
    },
    "pyemma.coordinates.data.h5_reader.H5Reader": {
     "line number": [
      97
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      113
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      116
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.os": {
     "line number": [
      71,
      83
     ]
    },
    "six.StringIO": {
     "line number": [
      81
     ]
    },
    "str": {
     "line number": [
      53,
      55,
      59,
      61,
      73
     ]
    },
    "tuple": {
     "line number": [
      48,
      49,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.enforce_top": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      185
     ]
    },
    "isinstance": {
     "line number": [
      178,
      180,
      182
     ]
    },
    "mdtraj.Topology": {
     "line number": [
      182
     ]
    },
    "mdtraj.Trajectory": {
     "line number": [
      180
     ]
    },
    "mdtraj.load": {
     "line number": [
      179
     ]
    },
    "str": {
     "line number": [
      178
     ]
    },
    "type": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.md": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.preallocate_empty_trajectory": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "mdtraj.Trajectory": {
     "line number": [
      169
     ]
    },
    "mdtraj.Trajectory.__setitem__": {
     "line number": [
      167
     ]
    },
    "numpy.zeros": {
     "line number": [
      169,
      171,
      172,
      173
     ]
    },
    "pyemma.coordinates.util.patches.trajectory_set_item": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "mdtraj.load_frame": {
     "line number": [
      195,
      197
     ]
    },
    "numpy.vstack": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.single_traj_from_n_files": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "mdtraj.load": {
     "line number": [
      131,
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.reader_utils.trajectory_set_item": {
  "data": {
   "shadows": "pyemma.coordinates.util.patches.trajectory_set_item"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.reader_utils.vstack": {
  "data": {
   "shadows": "numpy.vstack"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.data.util.traj_info_backends.AbstractDB": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "object": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.util.traj_info_backends.AbstractDB.close": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.AbstractDB.db_version": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.AbstractDB.get": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.AbstractDB.set": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.AbstractDB.sync": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.AbstractDB.update": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.DictDB": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "pyemma.coordinates.data.util.traj_info_backends.AbstractDB": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.util.traj_info_backends.DictDB.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.DB_VERSION": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.DictDB.db_version": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.DictDB.num_entries": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "len": {
     "line number": [
      88
     ]
    },
    "property": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.DictDB.set": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.DictDB.update": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "pyemma.coordinates.data.util.traj_info_backends.AbstractDB": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      116
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.SqliteDB": {
     "line number": [
      148
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.shutil": {
     "line number": [
      147
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.sqlite3": {
     "line number": [
      116,
      119,
      120,
      121,
      138,
      142
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.warnings": {
     "line number": [
      144
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.DB_VERSION": {
     "line number": [
      131,
      135,
      141
     ]
    },
    "str": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.__init__.adapt_array": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      103
     ]
    },
    "numpy.savez_compressed": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.__init__.convert_array": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      109
     ]
    },
    "numpy.load": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB._clean": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "float": {
     "line number": [
      350
     ]
    },
    "int": {
     "line number": [
      331
     ]
    },
    "len": {
     "line number": [
      341,
      354,
      374
     ]
    },
    "list": {
     "line number": [
      338
     ]
    },
    "map": {
     "line number": [
      356,
      357
     ]
    },
    "operator.itemgetter": {
     "line number": [
      334,
      337,
      353,
      356,
      367,
      368
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.SqliteDB": {
     "line number": [
      359,
      372
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.itertools": {
     "line number": [
      337,
      368
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.os": {
     "line number": [
      341
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.sqlite3": {
     "line number": [
      347,
      370
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.logger.debug": {
     "line number": [
      332,
      342
     ]
    },
    "str": {
     "line number": [
      342,
      357
     ]
    },
    "tuple": {
     "line number": [
      357,
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB._create_new_db": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB._create_traj_info": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      313
     ]
    },
    "ValueError": {
     "line number": [
      311
     ]
    },
    "hash": {
     "line number": [
      294,
      305
     ]
    },
    "isinstance": {
     "line number": [
      298
     ]
    },
    "numpy.ndarray": {
     "line number": [
      298
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajInfo": {
     "line number": [
      302
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.UnknownDBFormatException": {
     "line number": [
      315
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.logger.exception": {
     "line number": [
      314
     ]
    },
    "staticmethod": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB._database_from_key": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "int": {
     "line number": [
      251
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.os": {
     "line number": [
      255,
      255,
      257
     ]
    },
    "pyemma.util.files.mkdir_p": {
     "line number": [
      256
     ]
    },
    "str": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB._format_tuple_for_sql": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "len": {
     "line number": [
      320
     ]
    },
    "repr": {
     "line number": [
      320
     ]
    },
    "staticmethod": {
     "line number": [
      317
     ]
    },
    "str": {
     "line number": [
      319
     ]
    },
    "tuple": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB._update_time_stamp": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "_update": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB._update_time_stamp._update": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "pyemma.coordinates.data.util.traj_info_backends.sqlite3": {
     "line number": [
      269,
      281
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.time": {
     "line number": [
      277,
      279
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.logger.debug": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.close": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.db_version": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "pyemma.coordinates.data.util.traj_info_backends.sqlite3": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.get": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.num_entries": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "int": {
     "line number": [
      193
     ]
    },
    "property": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.SqliteDB.set": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      199
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.os": {
     "line number": [
      215
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.sqlite3": {
     "line number": [
      208
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.DB_VERSION": {
     "line number": [
      199
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.logger.debug": {
     "line number": [
      209
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.logger.info": {
     "line number": [
      219
     ]
    },
    "pyemma.util.config.traj_info_max_entries": {
     "line number": [
      216,
      222
     ]
    },
    "pyemma.util.config.traj_info_max_size": {
     "line number": [
      218,
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_backends.TrajInfo": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajInfo"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.TrajectoryInfoCache": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.UnknownDBFormatException": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.UnknownDBFormatException"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.config": {
  "data": {
   "shadows": "pyemma.util.config"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.logger": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.logger"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.mkdir_p": {
  "data": {
   "shadows": "pyemma.util.files.mkdir_p"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_backends.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      35
     ]
    },
    "logging.getLogger": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.data.util.traj_info_cache.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.DictDB": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_backends.DictDB"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.PyCSVReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.PyCSVReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.SqliteDB": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_backends.SqliteDB"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "object": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.__eq__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      103
     ]
    },
    "numpy.all": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.__str__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.abs_path": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.hash_value": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.length": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "property": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.ndim": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "property": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.offsets": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      77
     ]
    },
    "numpy.int64": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.offsets_to_bytes": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      97
     ]
    },
    "numpy.savez_compressed": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajInfo.version": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "property": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "object": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.__getitem__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "BaseException": {
     "line number": [
      199
     ]
    },
    "IOError": {
     "line number": [
      200
     ]
    },
    "KeyError": {
     "line number": [
      188,
      196
     ]
    },
    "hasattr": {
     "line number": [
      208
     ]
    },
    "isinstance": {
     "line number": [
      187
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajInfo": {
     "line number": [
      187
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.os": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      159
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.DictDB": {
     "line number": [
      162
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.SqliteDB": {
     "line number": [
      158
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.warnings": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.__setitem__": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache._get_file_hash": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "hash": {
     "line number": [
      218,
      219,
      220,
      226
     ]
    },
    "open": {
     "line number": [
      223
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.os": {
     "line number": [
      214,
      218
     ]
    },
    "str": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache._get_file_hash_v2": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "int": {
     "line number": [
      236
     ]
    },
    "open": {
     "line number": [
      232
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.hashlib": {
     "line number": [
      238
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.os": {
     "line number": [
      230,
      239
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.sys": {
     "line number": [
      235
     ]
    },
    "str": {
     "line number": [
      240,
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache._handle_csv": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      176
     ]
    },
    "open": {
     "line number": [
      178
     ]
    },
    "pyemma.coordinates.data.PyCSVReader": {
     "line number": [
      176
     ]
    },
    "pyemma.coordinates.data.PyCSVReader.DEFAULT_OPEN_MODE": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.clear": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.close": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.current_db_version": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "property": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.instance": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache": {
     "line number": [
      138,
      144,
      144,
      146
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.os": {
     "line number": [
      143
     ]
    },
    "pyemma.util.config.cfg_dir": {
     "line number": [
      140,
      143
     ]
    },
    "staticmethod": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.num_entries": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "property": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.data.util.traj_info_cache.UnknownDBFormatException": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.data.util.traj_info_cache.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.util.traj_info_cache.config": {
  "data": {
   "shadows": "pyemma.util.config"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.coordinates.data.util.traj_info_cache.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.coordinates.data.util.traj_info_cache.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.estimation.covariance": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.estimation.covariance.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      36
     ]
    },
    "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.C00_": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "property": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.C0t_": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "property": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.Ctt_": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "property": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      93,
      95
     ]
    },
    "ValueError": {
     "line number": [
      102,
      105,
      109
     ]
    },
    "float": {
     "line number": [
      93
     ]
    },
    "pyemma.coordinates.estimation.covariance.LaggedCovariance": {
     "line number": [
      94
     ]
    },
    "pyemma.coordinates.estimation.covariance.warnings": {
     "line number": [
      98
     ]
    },
    "pyemma.util.exceptions.PyEMMA_DeprecationWarning": {
     "line number": [
      99
     ]
    },
    "pyemma.util.types.ensure_float_vector": {
     "line number": [
      107
     ]
    },
    "super": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance._estimate": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "MemoryError": {
     "line number": [
      235,
      236
     ]
    },
    "ValueError": {
     "line number": [
      173,
      182,
      199
     ]
    },
    "any": {
     "line number": [
      175
     ]
    },
    "hasattr": {
     "line number": [
      193,
      194
     ]
    },
    "isinstance": {
     "line number": [
      220
     ]
    },
    "len": {
     "line number": [
      221
     ]
    },
    "max": {
     "line number": [
      179,
      183
     ]
    },
    "numpy.ndarray": {
     "line number": [
      220
     ]
    },
    "numpy.newaxis": {
     "line number": [
      229,
      231
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      209
     ]
    },
    "pyemma.coordinates.estimation.covariance.itertools": {
     "line number": [
      204
     ]
    },
    "zip": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance._init_covar": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "int": {
     "line number": [
      155
     ]
    },
    "math.log": {
     "line number": [
      155
     ]
    },
    "max": {
     "line number": [
      155
     ]
    },
    "min": {
     "line number": [
      155
     ]
    },
    "pyemma._ext.variational.estimators.running_moments.running_covar": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.column_selection": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.cov": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "property": {
     "line number": [
      273
     ]
    },
    "pyemma.util.annotators.deprecated": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.cov_tau": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "property": {
     "line number": [
      285
     ]
    },
    "pyemma.util.annotators.deprecated": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.mean": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "property": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.mean_tau": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "property": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.nsave": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.partial_fit": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "pyemma.coordinates.source": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.weights": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "compute_weights_streamer": {
     "line number": [
      150
     ]
    },
    "float": {
     "line number": [
      137
     ]
    },
    "getattr": {
     "line number": [
      138
     ]
    },
    "hasattr": {
     "line number": [
      138
     ]
    },
    "isinstance": {
     "line number": [
      134,
      136
     ]
    },
    "list": {
     "line number": [
      134
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      133,
      135
     ]
    },
    "pyemma.coordinates.estimation.covariance.numbers": {
     "line number": [
      136
     ]
    },
    "pyemma.coordinates.estimation.covariance.types": {
     "line number": [
      138
     ]
    },
    "pyemma.util.types.is_float_vector": {
     "line number": [
      132
     ]
    },
    "tuple": {
     "line number": [
      134
     ]
    },
    "type": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.weights.compute_weights_streamer": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.weights.compute_weights_streamer.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "super": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.weights.compute_weights_streamer._transform_array": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.weights.compute_weights_streamer.describe": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.LaggedCovariance.weights.compute_weights_streamer.dimension": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.covariance.ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.PyEMMA_DeprecationWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.StreamingEstimator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.StreamingTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyemma.coordinates.estimation.covariance.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.coordinates.estimation.covariance.deprecated": {
  "data": {
   "shadows": "pyemma.util.annotators.deprecated"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.ensure_float_vector": {
  "data": {
   "shadows": "pyemma.util.types.ensure_float_vector"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.is_float_vector": {
  "data": {
   "shadows": "pyemma.util.types.is_float_vector"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.running_covar": {
  "data": {
   "shadows": "pyemma._ext.variational.estimators.running_moments.running_covar"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.covariance.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.koopman": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.estimation.koopman.LaggedCovariance": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.LaggedCovariance"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.koopman.StreamingEstimator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.streaming_estimator.StreamingEstimator": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.K_pc_1": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "property": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.R": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "property": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "float": {
     "line number": [
      67
     ]
    },
    "pyemma.coordinates.estimation.covariance.LaggedCovariance": {
     "line number": [
      71
     ]
    },
    "pyemma.coordinates.estimation.koopman._KoopmanEstimator": {
     "line number": [
      69
     ]
    },
    "super": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator._estimate": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator._finish_estimation": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      88,
      88,
      89
     ]
    },
    "numpy.hstack": {
     "line number": [
      92
     ]
    },
    "numpy.vstack": {
     "line number": [
      89
     ]
    },
    "numpy.zeros": {
     "line number": [
      90
     ]
    },
    "pyemma._ext.variational.solvers.direct.spd_inv_split": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.mean": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "property": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.partial_fit": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "pyemma.coordinates.source": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.u": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      123
     ]
    },
    "property": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.u_pc_1": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "property": {
     "line number": [
      111
     ]
    },
    "pyemma.coordinates.estimation.koopman._compute_u": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanEstimator.weights": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "property": {
     "line number": [
      128
     ]
    },
    "pyemma.coordinates.estimation.koopman._KoopmanWeights": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanWeights": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "object": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanWeights.__init__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman._KoopmanWeights.weights": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyemma.coordinates.estimation.koopman._compute_u": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      49
     ]
    },
    "numpy.real": {
     "line number": [
      46
     ]
    },
    "numpy.zeros": {
     "line number": [
      47
     ]
    },
    "pyemma._ext.variational.solvers.direct.sort_by_norm": {
     "line number": [
      44
     ]
    },
    "scipy.linalg.eig": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.estimation.koopman.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.koopman.scl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.koopman.sort_by_norm": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.sort_by_norm"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.koopman.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.estimation.koopman.spd_inv_split": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.spd_inv_split"
  },
  "type": "import"
 },
 "pyemma.coordinates.pipelines": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.pipelines.AbstractClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.interface.AbstractClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.pipelines.DataSource": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.DataSource"
  },
  "type": "import"
 },
 "pyemma.coordinates.pipelines.Discretizer": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "pyemma.coordinates.pipelines.Pipeline": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.pipelines.Discretizer.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      186,
      189,
      193,
      196
     ]
    },
    "hasattr": {
     "line number": [
      202
     ]
    },
    "isinstance": {
     "line number": [
      185,
      192,
      199
     ]
    },
    "pyemma.coordinates.clustering.interface.AbstractClustering": {
     "line number": [
      199
     ]
    },
    "pyemma.coordinates.data._base.datasource.DataSource": {
     "line number": [
      185
     ]
    },
    "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
     "line number": [
      192
     ]
    },
    "pyemma.coordinates.pipelines.Pipeline": {
     "line number": [
      181
     ]
    },
    "str": {
     "line number": [
      194
     ]
    },
    "type": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.Discretizer.dtrajs": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "property": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.Discretizer.save_dtrajs": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      247,
      250
     ]
    },
    "pyemma.coordinates.clustering.interface.AbstractClustering": {
     "line number": [
      247
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.feature_reader.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.pipelines.Iterable": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.iterable.Iterable"
  },
  "type": "import"
 },
 "pyemma.coordinates.pipelines.Loggable": {
  "data": {
   "shadows": "pyemma._base.loggable.Loggable"
  },
  "type": "import"
 },
 "pyemma.coordinates.pipelines.Pipeline": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pyemma._base.loggable.Loggable": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.pipelines.Pipeline.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.Pipeline._is_estimated": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.Pipeline.add_element": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      80
     ]
    },
    "isinstance": {
     "line number": [
      79
     ]
    },
    "len": {
     "line number": [
      84
     ]
    },
    "pyemma.coordinates.data._base.iterable.Iterable": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.Pipeline.chunksize": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.Pipeline.parametrize": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.Pipeline.set_element": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      98,
      125
     ]
    },
    "ValueError": {
     "line number": [
      102
     ]
    },
    "int": {
     "line number": [
      101
     ]
    },
    "len": {
     "line number": [
      97,
      99
     ]
    },
    "str": {
     "line number": [
      103
     ]
    },
    "type": {
     "line number": [
      101,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.pipelines.StreamingTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.pipelines.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyemma.coordinates.pipelines.__author__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyemma.coordinates.pipelines.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.tests.test_acf": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      46
     ]
    },
    "pyemma.coordinates.tests.test_acf.unittest": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_acf.TestACF": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_acf.unittest": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_acf.TestACF.test": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "numpy.concatenate": {
     "line number": [
      39
     ]
    },
    "numpy.mean": {
     "line number": [
      38
     ]
    },
    "numpy.random.rand": {
     "line number": [
      31
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      44
     ]
    },
    "numpy.zeros": {
     "line number": [
      37,
      39
     ]
    },
    "pyemma.coordinates.acf.acf": {
     "line number": [
      33
     ]
    },
    "range": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_acf.acf": {
  "data": {
   "shadows": "pyemma.coordinates.acf.acf"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_acf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_acf.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_load": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      34,
      121
     ]
    },
    "pyemma.coordinates.tests.test_api_load.os": {
     "line number": [
      34,
      36,
      38,
      39
     ]
    },
    "pyemma.coordinates.tests.test_api_load.path": {
     "line number": [
      36,
      38,
      39
     ]
    },
    "pyemma.coordinates.tests.test_api_load.pkg_resources": {
     "line number": [
      34
     ]
    },
    "pyemma.coordinates.tests.test_api_load.unittest": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_api_load.unittest": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.setUpClass": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      47
     ]
    },
    "classmethod": {
     "line number": [
      45
     ]
    },
    "pyemma.coordinates.tests.test_api_load.os": {
     "line number": [
      47,
      48,
      53
     ]
    },
    "pyemma.coordinates.tests.test_api_load.path": {
     "line number": [
      47,
      48,
      53
     ]
    },
    "pyemma.coordinates.tests.test_api_load.pkg_resources": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.testUnicodeString": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "pyemma.coordinates.api.featurizer": {
     "line number": [
      63
     ]
    },
    "pyemma.coordinates.api.load": {
     "line number": [
      65
     ]
    },
    "pyemma.coordinates.tests.test_api_load.pdb_file": {
     "line number": [
      63
     ]
    },
    "pyemma.coordinates.tests.test_api_load.traj_files": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.testUnicodeString_without_featurizer": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      58
     ]
    },
    "pyemma.coordinates.api.load": {
     "line number": [
      59
     ]
    },
    "pyemma.coordinates.tests.test_api_load.traj_files": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.test_empty_list": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      110
     ]
    },
    "pyemma.coordinates.api.load": {
     "line number": [
      111
     ]
    },
    "pyemma.coordinates.tests.test_api_load.pdb_file": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.test_load_features_pass_trajectory_as_topology": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "pyemma.coordinates.api.featurizer": {
     "line number": [
      116
     ]
    },
    "pyemma.coordinates.api.load": {
     "line number": [
      119
     ]
    },
    "pyemma.coordinates.tests.test_api_load.mdtraj": {
     "line number": [
      115
     ]
    },
    "pyemma.coordinates.tests.test_api_load.pdb_file": {
     "line number": [
      115
     ]
    },
    "pyemma.coordinates.tests.test_api_load.traj_files": {
     "line number": [
      118,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.test_load_traj": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      85
     ]
    },
    "pyemma.coordinates.api.featurizer": {
     "line number": [
      82
     ]
    },
    "pyemma.coordinates.api.load": {
     "line number": [
      83
     ]
    },
    "pyemma.coordinates.tests.test_api_load.pdb_file": {
     "line number": [
      82
     ]
    },
    "pyemma.coordinates.tests.test_api_load.traj_files": {
     "line number": [
      81
     ]
    },
    "type": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.test_load_trajs": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "all": {
     "line number": [
      92
     ]
    },
    "list": {
     "line number": [
      91
     ]
    },
    "numpy.ndarray": {
     "line number": [
      92
     ]
    },
    "pyemma.coordinates.api.featurizer": {
     "line number": [
      88
     ]
    },
    "pyemma.coordinates.api.load": {
     "line number": [
      89
     ]
    },
    "pyemma.coordinates.tests.test_api_load.pdb_file": {
     "line number": [
      88
     ]
    },
    "pyemma.coordinates.tests.test_api_load.traj_files": {
     "line number": [
      89
     ]
    },
    "type": {
     "line number": [
      91,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.test_non_existant_input": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      106
     ]
    },
    "pyemma.coordinates.api.load": {
     "line number": [
      107
     ]
    },
    "pyemma.coordinates.tests.test_api_load.pdb_file": {
     "line number": [
      107
     ]
    },
    "pyemma.coordinates.tests.test_api_load.traj_files": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.test_various_formats_load": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      75
     ]
    },
    "pyemma.coordinates.api.load": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.TestAPILoad.test_with_trajs_without_featurizer_or_top": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      96
     ]
    },
    "len": {
     "line number": [
      101,
      101
     ]
    },
    "list": {
     "line number": [
      100
     ]
    },
    "pyemma.coordinates.api.load": {
     "line number": [
      97,
      99
     ]
    },
    "pyemma.coordinates.tests.test_api_load.pdb_file": {
     "line number": [
      99
     ]
    },
    "pyemma.coordinates.tests.test_api_load.traj_files": {
     "line number": [
      97,
      99,
      101
     ]
    },
    "type": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_load.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_load.load": {
  "data": {
   "shadows": "pyemma.coordinates.api.load"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_load.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_load.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_load.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_load.path": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_api_load.pdb_file": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_api_load.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_load.traj_files": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_api_load.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      213
     ]
    },
    "logging.getLogger": {
     "line number": [
      34
     ]
    },
    "pyemma.coordinates.tests.test_api_source.unittest": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_api_source.CSVReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.MDFeaturizer": {
  "data": {
   "shadows": "pyemma.coordinates.data.MDFeaturizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.NumPyFileReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_api_source.unittest": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader.setUp": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      137
     ]
    },
    "pyemma.coordinates.tests.test_api_source.os": {
     "line number": [
      137,
      139,
      141,
      142
     ]
    },
    "pyemma.coordinates.tests.test_api_source.pkg_resources": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader.test_invalid_files": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      202,
      206,
      210
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      202,
      206,
      210
     ]
    },
    "pyemma.coordinates.tests.test_api_source.os": {
     "line number": [
      208,
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader.test_invalid_input": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      189,
      191,
      194,
      196,
      198
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      189,
      191,
      194,
      196,
      198
     ]
    },
    "pyemma.coordinates.data.MDFeaturizer": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader.test_read_multiple_files_featurizer": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "pyemma.coordinates.api.source": {
     "line number": [
      157
     ]
    },
    "pyemma.coordinates.data.MDFeaturizer": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader.test_read_multiple_files_topology_file": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "pyemma.coordinates.api.source": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader.test_read_single_file_featurizer": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "pyemma.coordinates.api.source": {
     "line number": [
      178
     ]
    },
    "pyemma.coordinates.data.MDFeaturizer": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFeatureReader.test_read_single_file_toplogy_file": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "pyemma.coordinates.api.source": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_api_source.unittest": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.setUpClass": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      63
     ]
    },
    "classmethod": {
     "line number": [
      39
     ]
    },
    "numpy.arange": {
     "line number": [
      43
     ]
    },
    "numpy.random.random": {
     "line number": [
      42
     ]
    },
    "numpy.save": {
     "line number": [
      58
     ]
    },
    "numpy.savetxt": {
     "line number": [
      60,
      61
     ]
    },
    "numpy.savez": {
     "line number": [
      59
     ]
    },
    "open": {
     "line number": [
      54
     ]
    },
    "pyemma.coordinates.tests.test_api_source.os": {
     "line number": [
      63,
      64,
      66
     ]
    },
    "pyemma.coordinates.tests.test_api_source.pkg_resources": {
     "line number": [
      63
     ]
    },
    "pyemma.coordinates.tests.test_api_source.tempfile": {
     "line number": [
      45,
      47,
      48,
      49,
      50,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.tearDownClass": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      68
     ]
    },
    "pyemma.coordinates.tests.test_api_source.shutil": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_bullshit_csv": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      110
     ]
    },
    "IOError": {
     "line number": [
      113
     ]
    },
    "ValueError": {
     "line number": [
      113
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      111
     ]
    },
    "str": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_obtain_csv_file_reader_csv": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      106
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      104
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_obtain_csv_file_reader_dat": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      101
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      99
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_obtain_numpy_file_reader_npy": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      89
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      86
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_obtain_numpy_file_reader_npz": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      96
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      93
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      96
     ]
    },
    "pyemma.coordinates.tests.test_api_source.unittest": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_pdb_traj_unsupported": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      129
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      130
     ]
    },
    "pyemma.coordinates.tests.test_api_source.tempfile": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_source_set_chunksize": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      117
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      118,
      120,
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.TestApiSourceFileReader.test_various_formats_source": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      80
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_api_source.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_api_source.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_api_source.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      336
     ]
    },
    "pyemma.coordinates.tests.test_coordinates_iterator.unittest": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.InvalidDataInStreamException": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.InvalidDataInStreamException"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_coordinates_iterator.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator._count_chunks": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      15
     ]
    },
    "numpy.random.random": {
     "line number": [
      15
     ]
    },
    "range": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_chunksize": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "len": {
     "line number": [
      109,
      111,
      113
     ]
    },
    "numpy.arange": {
     "line number": [
      104
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_chunksize_max_memory": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      119
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      122
     ]
    },
    "pyemma.util.contexts.settings": {
     "line number": [
      121
     ]
    },
    "str": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_current_trajindex": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_invalid_data_in_input_inf": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "numpy.inf": {
     "line number": [
      265
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      266
     ]
    },
    "pyemma.coordinates.data._base.datasource.InvalidDataInStreamException": {
     "line number": [
      270
     ]
    },
    "pyemma.util.contexts.settings": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_invalid_data_in_input_nan": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      255
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      256
     ]
    },
    "pyemma.coordinates.data._base.datasource.InvalidDataInStreamException": {
     "line number": [
      260
     ]
    },
    "pyemma.util.contexts.settings": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_lagged_iterator": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      295,
      296
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      293,
      294
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      287
     ]
    },
    "pyemma.coordinates.tests.util.create_traj": {
     "line number": [
      283
     ]
    },
    "pyemma.coordinates.tests.util.get_top": {
     "line number": [
      282
     ]
    },
    "range": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_lagged_iterator_optimized": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "len": {
     "line number": [
      328
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      329,
      330
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      327
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      314
     ]
    },
    "pyemma.coordinates.tests.util.create_traj": {
     "line number": [
      309
     ]
    },
    "pyemma.coordinates.tests.util.get_top": {
     "line number": [
      308
     ]
    },
    "pyemma.coordinates.util.patches.iterload.MAX_STRIDE_SWITCH_TO_RA": {
     "line number": [
      306
     ]
    },
    "pyemma.coordinates.util.patches.iterload.MEMORY_CUTOFF": {
     "line number": [
      316,
      318,
      333
     ]
    },
    "range": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_last_chunk": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_n_chunks": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      63,
      63,
      63
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      59,
      71
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      32,
      64
     ]
    },
    "range": {
     "line number": [
      54,
      55,
      67,
      68
     ]
    },
    "sum": {
     "line number": [
      58,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_n_chunks_ra": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "gen_sorted_stride": {
     "line number": [
      95
     ]
    },
    "len": {
     "line number": [
      96
     ]
    },
    "numpy.random.randint": {
     "line number": [
      95
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      84
     ]
    },
    "range": {
     "line number": [
      95,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_n_chunks_ra.gen_sorted_stride": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "numpy.lexsort": {
     "line number": [
      92
     ]
    },
    "numpy.random.randint": {
     "line number": [
      87,
      88
     ]
    },
    "numpy.sort": {
     "line number": [
      90
     ]
    },
    "numpy.stack": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_pos": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "len": {
     "line number": [
      174
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_return_trajindex": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "len": {
     "line number": [
      151,
      161
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      157,
      164
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_stride": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "len": {
     "line number": [
      141
     ]
    },
    "numpy.arange": {
     "line number": [
      136
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_write_h5": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      231,
      236,
      248
     ]
    },
    "numpy.random.randint": {
     "line number": [
      205
     ]
    },
    "numpy.random.random": {
     "line number": [
      205
     ]
    },
    "perform": {
     "line number": [
      226
     ]
    },
    "pyemma.coordinates.tests.test_coordinates_iterator.h5py": {
     "line number": [
      246
     ]
    },
    "pyemma.coordinates.tests.test_coordinates_iterator.os": {
     "line number": [
      234,
      240,
      244,
      252
     ]
    },
    "pyemma.coordinates.tests.test_coordinates_iterator.tempfile": {
     "line number": [
      208
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      206,
      206
     ]
    },
    "pyemma.coordinates.tica.write_to_hdf5": {
     "line number": [
      230,
      232,
      235,
      237,
      241,
      242,
      249,
      250
     ]
    },
    "range": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_write_h5.perform": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "len": {
     "line number": [
      217,
      217
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      219
     ]
    },
    "pyemma.coordinates.tests.test_coordinates_iterator.h5py": {
     "line number": [
      216
     ]
    },
    "pyemma.coordinates.tests.test_coordinates_iterator.os": {
     "line number": [
      222
     ]
    },
    "pyemma.coordinates.tica.get_output": {
     "line number": [
      212
     ]
    },
    "pyemma.coordinates.tica.write_to_hdf5": {
     "line number": [
      213
     ]
    },
    "zip": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.TestCoordinatesIterator.test_write_to_csv_propagate_filenames": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "glob.glob": {
     "line number": [
      190
     ]
    },
    "len": {
     "line number": [
      191,
      191,
      198,
      198
     ]
    },
    "list": {
     "line number": [
      197
     ]
    },
    "numpy.random.random": {
     "line number": [
      181
     ]
    },
    "numpy.save": {
     "line number": [
      185
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      200
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      186,
      197
     ]
    },
    "pyemma.coordinates.tests.test_coordinates_iterator.os": {
     "line number": [
      182,
      190,
      190
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      188
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      180
     ]
    },
    "sorted": {
     "line number": [
      190,
      192
     ]
    },
    "zip": {
     "line number": [
      184,
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.get_top": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.get_top"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.iterload": {
  "data": {
   "shadows": "pyemma.coordinates.util.patches.iterload"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.settings": {
  "data": {
   "shadows": "pyemma.util.contexts.settings"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.tica": {
  "data": {
   "shadows": "pyemma.coordinates.tica"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_coordinates_iterator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_covar_estimator": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      552
     ]
    },
    "len": {
     "line number": [
      12
     ]
    },
    "numpy.random.rand": {
     "line number": [
      11,
      13
     ]
    },
    "numpy.random.randn": {
     "line number": [
      12
     ]
    },
    "pyemma.coordinates.tests.test_covar_estimator.data": {
     "line number": [
      12
     ]
    },
    "pyemma.coordinates.tests.test_covar_estimator.unittest": {
     "line number": [
      553
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_covar_estimator.unittest": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.setUpClass": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      17
     ]
    },
    "float": {
     "line number": [
      58,
      59,
      60,
      75,
      76,
      77,
      86,
      94,
      110,
      111,
      112,
      127,
      143,
      144,
      145,
      149
     ]
    },
    "numpy.array": {
     "line number": [
      45
     ]
    },
    "numpy.dot": {
     "line number": [
      55,
      56,
      57,
      64,
      65,
      66,
      78,
      79,
      80,
      84,
      84,
      85,
      85,
      89,
      89,
      90,
      90,
      95,
      95,
      96,
      96,
      107,
      108,
      109,
      116,
      117,
      119,
      123,
      124,
      125,
      126,
      130,
      131,
      132,
      133,
      139,
      140,
      142,
      150,
      151,
      152,
      153
     ]
    },
    "numpy.shape": {
     "line number": [
      48,
      49,
      50,
      51
     ]
    },
    "numpy.sum": {
     "line number": [
      72,
      73,
      74,
      101,
      102,
      103
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      25
     ]
    },
    "pyemma.coordinates.tests.test_covar_estimator.data": {
     "line number": [
      20
     ]
    },
    "pyemma.coordinates.tests.test_covar_estimator.mean_const": {
     "line number": [
      41
     ]
    },
    "weight_object": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.setUpClass.weight_object": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "object": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.setUpClass.weight_object.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "numpy.random.rand": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.setUpClass.weight_object.weights": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_meanfree": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      212,
      213,
      214,
      215,
      218,
      219
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_sym_meanfree": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      263,
      264,
      265,
      268,
      269
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_sym_withmean": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      251,
      252,
      253,
      256,
      257
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_weightobj_meanfree": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      238,
      239,
      240,
      241,
      244,
      245
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_weightobj_sym_meanfree": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      287,
      288,
      289,
      292,
      293
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_weightobj_sym_withmean": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      275,
      276,
      277,
      280,
      281
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_weightobj_withmean": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      225,
      226,
      227,
      228,
      231,
      232
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XXXY_withmean": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      199,
      200,
      201,
      202,
      205,
      206
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XX_meanconst": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      298,
      299,
      302
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XX_meanfree": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      169,
      170,
      173
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XX_weighted_meanconst": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      307,
      308,
      311
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XX_weightobj_meanfree": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      189,
      190,
      193
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XX_weightobj_withmean": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      179,
      180,
      183
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XX_withmean": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      160,
      161,
      164
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XY_meanconst": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      316,
      317,
      318,
      319,
      322,
      323
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      314
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XY_sym_meanconst": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      340,
      341,
      342,
      345,
      346
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XY_sym_weighted_meanconst": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      351,
      352,
      353,
      356,
      357
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator.test_XY_weighted_meanconst": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      328,
      329,
      330,
      331,
      334,
      335
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimatorWeightsList": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_covar_estimator.unittest": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimatorWeightsList.test_non_matching_length": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      537,
      540
     ]
    },
    "numpy.random.random": {
     "line number": [
      534,
      535
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      538,
      541
     ]
    },
    "pyemma.coordinates.tests.test_covar_estimator.data": {
     "line number": [
      534,
      538,
      541
     ]
    },
    "pyemma.coordinates.tests.test_covar_estimator.weights": {
     "line number": [
      535,
      536,
      536,
      538,
      541
     ]
    },
    "range": {
     "line number": [
      534,
      535
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimatorWeightsList.test_re_estimate_weight_types": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      545
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      546
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimatorWeightsList.test_weights_close_to_zero": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      508
     ]
    },
    "numpy.float32": {
     "line number": [
      503
     ]
    },
    "numpy.ones": {
     "line number": [
      503
     ]
    },
    "numpy.random.randint": {
     "line number": [
      501
     ]
    },
    "numpy.random.random": {
     "line number": [
      498
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      507
     ]
    },
    "pyemma.coordinates.tests.test_covar_estimator.data": {
     "line number": [
      498,
      501,
      507
     ]
    },
    "pyemma.coordinates.tests.test_covar_estimator.weights": {
     "line number": [
      503,
      505,
      507
     ]
    },
    "range": {
     "line number": [
      498,
      503
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimatorWeightsList.test_weights_equal_to_zero": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      525,
      526
     ]
    },
    "numpy.float32": {
     "line number": [
      518
     ]
    },
    "numpy.ones": {
     "line number": [
      518
     ]
    },
    "numpy.random.randint": {
     "line number": [
      516
     ]
    },
    "numpy.random.random": {
     "line number": [
      513
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      523
     ]
    },
    "pyemma.coordinates.tests.test_covar_estimator.data": {
     "line number": [
      513,
      516,
      523
     ]
    },
    "pyemma.coordinates.tests.test_covar_estimator.unittest": {
     "line number": [
      510
     ]
    },
    "pyemma.coordinates.tests.test_covar_estimator.weights": {
     "line number": [
      518,
      520,
      521,
      523,
      524
     ]
    },
    "range": {
     "line number": [
      513,
      518
     ]
    },
    "sum": {
     "line number": [
      524,
      524
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarianceEstimatorGivenWeights": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_covar_estimator.TestCovarEstimator": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_covar_estimator.TestCovarianceEstimatorGivenWeights.setUpClass": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      363
     ]
    },
    "float": {
     "line number": [
      394,
      395,
      396,
      411,
      412,
      413,
      422,
      430,
      446,
      447,
      448,
      463,
      479,
      480,
      481,
      485
     ]
    },
    "numpy.dot": {
     "line number": [
      391,
      392,
      393,
      400,
      401,
      402,
      414,
      415,
      416,
      420,
      420,
      421,
      421,
      425,
      425,
      426,
      426,
      431,
      431,
      432,
      432,
      443,
      444,
      445,
      452,
      453,
      455,
      459,
      460,
      461,
      462,
      466,
      467,
      468,
      469,
      475,
      476,
      478,
      486,
      487,
      488,
      489
     ]
    },
    "numpy.shape": {
     "line number": [
      384,
      385,
      386,
      387
     ]
    },
    "numpy.sum": {
     "line number": [
      408,
      409,
      410,
      437,
      438,
      439
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      371
     ]
    },
    "pyemma.coordinates.tests.test_covar_estimator.data": {
     "line number": [
      366
     ]
    },
    "pyemma.coordinates.tests.test_covar_estimator.mean_const": {
     "line number": [
      379
     ]
    },
    "pyemma.coordinates.tests.test_covar_estimator.weights": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_covar_estimator.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_covar_estimator.covariance_lagged": {
  "data": {
   "shadows": "pyemma.coordinates.covariance_lagged"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_covar_estimator.data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_covar_estimator.mean_const": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_covar_estimator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_covar_estimator.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_covar_estimator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_covar_estimator.weights": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_csvreader": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      313
     ]
    },
    "pyemma.coordinates.tests.test_csvreader.unittest": {
     "line number": [
      314
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_csvreader.CSVReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_csvreader.unittest": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.setUpClass": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      35
     ]
    },
    "numpy.arange": {
     "line number": [
      40
     ]
    },
    "numpy.savetxt": {
     "line number": [
      43,
      44,
      49,
      50
     ]
    },
    "pyemma.coordinates.tests.test_csvreader.os": {
     "line number": [
      41,
      42
     ]
    },
    "pyemma.coordinates.tests.test_csvreader.tempfile": {
     "line number": [
      37,
      46,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.tearDownClass": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      53
     ]
    },
    "pyemma.coordinates.tests.test_csvreader.shutil": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_compare_readline": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      248
     ]
    },
    "numpy.arange": {
     "line number": [
      234
     ]
    },
    "numpy.savetxt": {
     "line number": [
      237
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      247
     ]
    },
    "open": {
     "line number": [
      243
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      239
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader.DEFAULT_OPEN_MODE": {
     "line number": [
      243
     ]
    },
    "pyemma.coordinates.tests.test_csvreader.tempfile": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_holes_in_file": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      295
     ]
    },
    "numpy.fromstring": {
     "line number": [
      295
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      301
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      299
     ]
    },
    "pyemma.coordinates.tests.test_csvreader.tempfile": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_newline_at_eof": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "len": {
     "line number": [
      266
     ]
    },
    "numpy.float32": {
     "line number": [
      265
     ]
    },
    "numpy.fromstring": {
     "line number": [
      265
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      272
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      270
     ]
    },
    "pyemma.coordinates.tests.test_csvreader.tempfile": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_newline_at_eof_carriage_return": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      285
     ]
    },
    "numpy.fromstring": {
     "line number": [
      285
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      291
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      289
     ]
    },
    "pyemma.coordinates.tests.test_csvreader.tempfile": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_newline_at_eof_with_header": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      278
     ]
    },
    "numpy.genfromtxt": {
     "line number": [
      278
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      281
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      279
     ]
    },
    "pyemma.coordinates.tests.test_csvreader.tempfile": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_1file": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      66
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_1file_oneline": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      69
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      74
     ]
    },
    "numpy.savetxt": {
     "line number": [
      71
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      74
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      73
     ]
    },
    "pyemma.coordinates.tests.test_csvreader.tempfile": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_1file_with_header": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      92
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_1file_with_header_2lines": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      77
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      82
     ]
    },
    "numpy.savetxt": {
     "line number": [
      79
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      82
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      81
     ]
    },
    "pyemma.coordinates.tests.test_csvreader.tempfile": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_2file_with_header": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      102,
      103
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_lagged_small_chunks": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "len": {
     "line number": [
      142
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      147
     ]
    },
    "numpy.vstack": {
     "line number": [
      145
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_with_skipping_first_few_couple_lines": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "len": {
     "line number": [
      110,
      110
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      115
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      108,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_read_with_skipping_first_few_couple_lines_multiple_trajectoryfiles": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      125,
      128
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      121,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_reset": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      310
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_use_cols": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      261
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_with_binary_written_file": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      171
     ]
    },
    "numpy.savetxt": {
     "line number": [
      173
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      176
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      175
     ]
    },
    "pyemma.coordinates.tests.test_csvreader.tempfile": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_with_kwargs": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      155
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_with_lag": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      188
     ]
    },
    "numpy.vstack": {
     "line number": [
      187
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_with_multiple_files": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "len": {
     "line number": [
      161
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_with_stride": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      168
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_with_stride_and_lag": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "len": {
     "line number": [
      205
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      205,
      209
     ]
    },
    "numpy.vstack": {
     "line number": [
      202,
      203
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.TestCSVReader.test_with_stride_and_lag_with_header": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "len": {
     "line number": [
      228
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      228,
      229
     ]
    },
    "numpy.vstack": {
     "line number": [
      225,
      226
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_csvreader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_csvreader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_csvreader.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_csvreader.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_csvreader.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      285
     ]
    },
    "logging.getLogger": {
     "line number": [
      34
     ]
    },
    "pyemma.coordinates.tests.test_datainmemory.unittest": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_datainmemory.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory.InvalidDataInStreamException": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.datasource.InvalidDataInStreamException"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_datainmemory.unittest": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.setUpClass": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      38
     ]
    },
    "numpy.float32": {
     "line number": [
      40,
      41
     ]
    },
    "numpy.random.random": {
     "line number": [
      40,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test1dData": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      99
     ]
    },
    "numpy.array": {
     "line number": [
      102
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test1dDataList": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      109,
      109
     ]
    },
    "numpy.array": {
     "line number": [
      112
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      112
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.testDataArray": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      95
     ]
    },
    "numpy.random.random": {
     "line number": [
      91
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      94
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      92
     ]
    },
    "range": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.testListOfArrays": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      85
     ]
    },
    "numpy.random.random": {
     "line number": [
      78
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      84
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      80
     ]
    },
    "range": {
     "line number": [
      78,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.testNotEqualDims": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      121
     ]
    },
    "numpy.zeros": {
     "line number": [
      119,
      119
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.testWrongArguments": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      71
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_chunksize": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      167
     ]
    },
    "pyemma.coordinates.tests.test_datainmemory.pyemma": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_cols": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      272
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_exception_getoutput_invalid_data": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      278
     ]
    },
    "numpy.ones": {
     "line number": [
      277
     ]
    },
    "pyemma.coordinates.data._base.datasource.InvalidDataInStreamException": {
     "line number": [
      281
     ]
    },
    "pyemma.coordinates.tests.test_datainmemory.pyemma": {
     "line number": [
      279
     ]
    },
    "pyemma.util.contexts.settings": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_lagged_iterator_1d": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      245,
      251
     ]
    },
    "len": {
     "line number": [
      233,
      234,
      248
     ]
    },
    "numpy.arange": {
     "line number": [
      221,
      221,
      221
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      248,
      252
     ]
    },
    "numpy.vstack": {
     "line number": [
      241,
      242
     ]
    },
    "pyemma.coordinates.data._base.iterable._LaggedIterator": {
     "line number": [
      227
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      223
     ]
    },
    "range": {
     "line number": [
      233,
      234
     ]
    },
    "sum": {
     "line number": [
      230
     ]
    },
    "zip": {
     "line number": [
      245,
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_lagged_iterator_1d_legacy": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      204,
      211
     ]
    },
    "len": {
     "line number": [
      192,
      193,
      207
     ]
    },
    "numpy.arange": {
     "line number": [
      180,
      180,
      180
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      207,
      212
     ]
    },
    "numpy.vstack": {
     "line number": [
      200,
      201
     ]
    },
    "pyemma.coordinates.data._base.iterable._LegacyLaggedIterator": {
     "line number": [
      186
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      182
     ]
    },
    "range": {
     "line number": [
      192,
      193
     ]
    },
    "sum": {
     "line number": [
      189
     ]
    },
    "zip": {
     "line number": [
      204,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_lagged_stridden_access": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      256
     ]
    },
    "numpy.random.random": {
     "line number": [
      256
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      266
     ]
    },
    "numpy.vstack": {
     "line number": [
      265
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_ndim_input": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      133
     ]
    },
    "numpy.empty": {
     "line number": [
      125
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      132
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_skip": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      53
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      49,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_skip_input_list": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      63,
      66
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      59,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_stride": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      163
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory.TestDataInMemory.test_time_lagged_chunked_access": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      137,
      138
     ]
    },
    "numpy.zeros": {
     "line number": [
      137
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_datainmemory._LaggedIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.iterable._LaggedIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory._LegacyLaggedIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.iterable._LegacyLaggedIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_datainmemory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory.settings": {
  "data": {
   "shadows": "pyemma.util.contexts.settings"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_datainmemory.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      152
     ]
    },
    "pyemma.coordinates.tests.test_discretizer.unittest": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_discretizer.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.Discretizer": {
  "data": {
   "shadows": "pyemma.coordinates.pipelines.Discretizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.TestDiscretizer": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_discretizer.unittest": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_discretizer.TestDiscretizer.setUpClass": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      72
     ]
    },
    "pyemma.coordinates.tests.test_discretizer.TestDiscretizer": {
     "line number": [
      74
     ]
    },
    "pyemma.coordinates.tests.test_discretizer.create_traj_on_disc": {
     "line number": [
      82,
      85
     ]
    },
    "pyemma.coordinates.tests.test_discretizer.create_water_topology_on_disc": {
     "line number": [
      79
     ]
    },
    "pyemma.coordinates.tests.test_discretizer.tempfile": {
     "line number": [
      90
     ]
    },
    "super": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_discretizer.TestDiscretizer.tearDownClass": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      94
     ]
    },
    "pyemma.coordinates.tests.test_discretizer.os": {
     "line number": [
      97,
      99
     ]
    },
    "pyemma.coordinates.tests.test_discretizer.shutil": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_discretizer.TestDiscretizer.test": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "len": {
     "line number": [
      114,
      114
     ]
    },
    "numpy.unique": {
     "line number": [
      117
     ]
    },
    "pyemma.coordinates.api.pca": {
     "line number": [
      106
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      105
     ]
    },
    "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering": {
     "line number": [
      109
     ]
    },
    "pyemma.coordinates.pipelines.Discretizer": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_discretizer.TestDiscretizer.test_save_dtrajs": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      145
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      144
     ]
    },
    "pyemma.coordinates.pipelines.Discretizer": {
     "line number": [
      146
     ]
    },
    "pyemma.coordinates.tests.test_discretizer.os": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_discretizer.TestDiscretizer.test_with_data_in_mem": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      127
     ]
    },
    "numpy.max": {
     "line number": [
      139
     ]
    },
    "numpy.random.random": {
     "line number": [
      123,
      124,
      125
     ]
    },
    "numpy.unique": {
     "line number": [
      139
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      126
     ]
    },
    "pyemma.coordinates.cluster_kmeans": {
     "line number": [
      132
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      127
     ]
    },
    "pyemma.coordinates.discretizer": {
     "line number": [
      134
     ]
    },
    "pyemma.coordinates.pca": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_discretizer.Topology": {
  "data": {
   "shadows": "mdtraj.core.topology.Topology"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.Trajectory": {
  "data": {
   "shadows": "mdtraj.core.trajectory.Trajectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.UniformTimeClustering": {
  "data": {
   "shadows": "pyemma.coordinates.clustering.uniform_time.UniformTimeClustering"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.api": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.cluster_kmeans": {
  "data": {
   "shadows": "pyemma.coordinates.api.cluster_kmeans"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.create_traj_on_disc": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      65
     ]
    },
    "numpy.random.random": {
     "line number": [
      62
     ]
    },
    "pyemma.coordinates.tests.test_discretizer.mdtraj": {
     "line number": [
      63
     ]
    },
    "pyemma.coordinates.tests.test_discretizer.tempfile": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_discretizer.create_water_topology_on_disc": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "mdtraj.core.element.hydrogen": {
     "line number": [
      49,
      51
     ]
    },
    "mdtraj.core.element.oxygen": {
     "line number": [
      50
     ]
    },
    "mdtraj.core.topology.Topology": {
     "line number": [
      44
     ]
    },
    "mdtraj.core.trajectory.Trajectory": {
     "line number": [
      56
     ]
    },
    "numpy.zeros": {
     "line number": [
      55
     ]
    },
    "pyemma.coordinates.tests.test_discretizer.tempfile": {
     "line number": [
      43
     ]
    },
    "range": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_discretizer.hydrogen": {
  "data": {
   "shadows": "mdtraj.core.element.hydrogen"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.oxygen": {
  "data": {
   "shadows": "mdtraj.core.element.oxygen"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.pca": {
  "data": {
   "shadows": "pyemma.coordinates.api.pca"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.source": {
  "data": {
   "shadows": "pyemma.coordinates.api.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_discretizer.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      216
     ]
    },
    "pyemma.coordinates.tests.test_eq_covar_estimator.unittest": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_eq_covar_estimator.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.setUpClass": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      21
     ]
    },
    "classmethod": {
     "line number": [
      12
     ]
    },
    "float": {
     "line number": [
      16
     ]
    },
    "numpy.dot": {
     "line number": [
      69,
      70,
      71,
      72,
      73,
      73,
      74,
      74,
      75,
      75,
      76,
      76,
      101,
      102,
      103,
      103,
      104,
      104
     ]
    },
    "numpy.load": {
     "line number": [
      21
     ]
    },
    "numpy.random.rand": {
     "line number": [
      34
     ]
    },
    "numpy.sum": {
     "line number": [
      65,
      66,
      67,
      68
     ]
    },
    "numpy.zeros": {
     "line number": [
      16,
      42,
      43,
      44,
      45,
      46,
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      57
     ]
    },
    "pyemma.coordinates.estimation.koopman._KoopmanEstimator": {
     "line number": [
      37
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      24
     ]
    },
    "pyemma.coordinates.tests.test_eq_covar_estimator.pkg_resources": {
     "line number": [
      21
     ]
    },
    "range": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XX": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      113,
      114,
      115,
      116
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      111,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XX_removeconstantmean": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      123,
      124,
      125,
      126
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      119,
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XX_removedatamean": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      133,
      134,
      135,
      136
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      129,
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XY": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      141,
      142,
      143,
      144,
      145,
      146,
      147,
      148
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      139,
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XY_removeconstantmean": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      156,
      157,
      158,
      159,
      160,
      161,
      162,
      163
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      152,
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XY_removedatamean": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      170,
      171,
      172,
      173,
      174,
      175,
      176,
      177
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      166,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XY_sym": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      184,
      185,
      186,
      187,
      188,
      189
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      180,
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XY_sym_removeconstantmean": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      196,
      197,
      198,
      199,
      200,
      201
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      192,
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.TestEqCovar.test_XY_sym_removedatamean": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      208,
      209,
      210,
      211,
      212,
      213
     ]
    },
    "pyemma.coordinates.covariance_lagged": {
     "line number": [
      204,
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator._KoopmanEstimator": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.koopman._KoopmanEstimator"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.covariance_lagged": {
  "data": {
   "shadows": "pyemma.coordinates.covariance_lagged"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.scl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_eq_covar_estimator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      275
     ]
    },
    "logging.getLogger": {
     "line number": [
      41
     ]
    },
    "pyemma.coordinates.tests.test_featurereader.unittest": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_featurereader.DataInMemoryIterator": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.feature_reader.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurereader.unittest": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.setUpClass": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      51
     ]
    },
    "classmethod": {
     "line number": [
      45
     ]
    },
    "pyemma.coordinates.tests.test_featurereader.pkg_resources": {
     "line number": [
      51
     ]
    },
    "pyemma.coordinates.tests.test_featurereader.tempfile": {
     "line number": [
      49
     ]
    },
    "pyemma.coordinates.tests.util.create_traj": {
     "line number": [
      52,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.tearDownClass": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      57
     ]
    },
    "pyemma.coordinates.tests.test_featurereader.shutil": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.testIteratorAccess": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      64,
      69
     ]
    },
    "numpy.allclose": {
     "line number": [
      78
     ]
    },
    "numpy.ndarray": {
     "line number": [
      69
     ]
    },
    "numpy.vstack": {
     "line number": [
      74
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      63
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.testIteratorAccess2": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      93,
      94
     ]
    },
    "numpy.vstack": {
     "line number": [
      90,
      91
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      81
     ]
    },
    "range": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.testTimeLaggedIterator": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "len": {
     "line number": [
      130,
      130,
      144
     ]
    },
    "numpy.allclose": {
     "line number": [
      138,
      144
     ]
    },
    "numpy.concatenate": {
     "line number": [
      132
     ]
    },
    "numpy.vstack": {
     "line number": [
      141
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_cols": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      149
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      159
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      147
     ]
    },
    "pyemma.coordinates.tests.test_featurereader.mdtraj": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_cols_with_features": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      169
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      177
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      164
     ]
    },
    "pyemma.coordinates.tests.test_featurereader.glob": {
     "line number": [
      162
     ]
    },
    "pyemma.coordinates.tests.test_featurereader.mdtraj": {
     "line number": [
      170,
      171
     ]
    },
    "pyemma.coordinates.tests.test_featurereader.pkg_resources": {
     "line number": [
      162,
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_flip_in_memory_exception": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      272
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_flip_in_memory_exception.dummy": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_in_memory": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "len": {
     "line number": [
      196,
      196
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      197,
      198,
      199
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      188,
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_in_memory_switch_stride_dim": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "pyemma.coordinates.api.source": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_in_memory_with_stride": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      210
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      216
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      207,
      213
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemoryIterator": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_lagged_access_small_files": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "pyemma.coordinates.api.source": {
     "line number": [
      255
     ]
    },
    "pyemma.coordinates.tests.util.create_traj": {
     "line number": [
      252,
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_lagged_stridden_access": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      242,
      246
     ]
    },
    "numpy.vstack": {
     "line number": [
      241,
      245
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      231
     ]
    },
    "range": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_skip": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      102
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      98,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_skip_input_list": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      112,
      115
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      108,
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.TestFeatureReader.test_with_pipeline_time_lagged": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      181
     ]
    },
    "pyemma.coordinates.api.discretizer": {
     "line number": [
      184
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      180
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      183
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.discretizer": {
  "data": {
   "shadows": "pyemma.coordinates.api.discretizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.log": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurereader.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.source": {
  "data": {
   "shadows": "pyemma.coordinates.api.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.tica": {
  "data": {
   "shadows": "pyemma.coordinates.api.tica"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      113
     ]
    },
    "logging.getLogger": {
     "line number": [
      36
     ]
    },
    "pyemma.coordinates.tests.test_featurereader_and_tica.unittest": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.feature_reader.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.TestFeatureReaderAndTICA": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurereader_and_tica.unittest": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.TestFeatureReaderAndTICA.setUpClass": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      40
     ]
    },
    "numpy.arange": {
     "line number": [
      59
     ]
    },
    "numpy.cos": {
     "line number": [
      64
     ]
    },
    "numpy.newaxis": {
     "line number": [
      64
     ]
    },
    "numpy.pi": {
     "line number": [
      46,
      50
     ]
    },
    "numpy.random.randn": {
     "line number": [
      49,
      51
     ]
    },
    "numpy.random.random_sample": {
     "line number": [
      50
     ]
    },
    "open": {
     "line number": [
      55
     ]
    },
    "print": {
     "line number": [
      57
     ]
    },
    "pyemma.coordinates.tests.test_featurereader_and_tica.mdtraj": {
     "line number": [
      67
     ]
    },
    "pyemma.coordinates.tests.test_featurereader_and_tica.tempfile": {
     "line number": [
      54,
      70
     ]
    },
    "range": {
     "line number": [
      56,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.TestFeatureReaderAndTICA.tearDownClass": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      75
     ]
    },
    "pyemma.coordinates.tests.test_featurereader_and_tica.TestFeatureReaderAndTICA": {
     "line number": [
      80
     ]
    },
    "pyemma.coordinates.tests.test_featurereader_and_tica.os": {
     "line number": [
      78,
      79
     ]
    },
    "super": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.TestFeatureReaderAndTICA.test_covariances_and_eigenvalues": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      96
     ]
    },
    "numpy.allclose": {
     "line number": [
      93,
      94
     ]
    },
    "numpy.cos": {
     "line number": [
      90,
      91
     ]
    },
    "numpy.max": {
     "line number": [
      95
     ]
    },
    "numpy.newaxis": {
     "line number": [
      90,
      90
     ]
    },
    "numpy.pi": {
     "line number": [
      87
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      85
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      83
     ]
    },
    "pyemma.coordinates.tests.test_featurereader_and_tica.log": {
     "line number": [
      86,
      87,
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.TestFeatureReaderAndTICA.test_partial_fit": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      110,
      111
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      108,
      110
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      102,
      103
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.log": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      150
     ]
    },
    "logging.getLogger": {
     "line number": [
      41
     ]
    },
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.unittest": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.feature_reader.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.TestFeatureReaderAndTICAProjection": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.unittest": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.TestFeatureReaderAndTICAProjection.setUpClass": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      53
     ]
    },
    "numpy.arange": {
     "line number": [
      72
     ]
    },
    "numpy.cumsum": {
     "line number": [
      77
     ]
    },
    "numpy.dot": {
     "line number": [
      78
     ]
    },
    "numpy.random.randn": {
     "line number": [
      64,
      76
     ]
    },
    "open": {
     "line number": [
      68
     ]
    },
    "print": {
     "line number": [
      70
     ]
    },
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.TestFeatureReaderAndTICAProjection": {
     "line number": [
      56
     ]
    },
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.mdtraj": {
     "line number": [
      82
     ]
    },
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.random_invertible": {
     "line number": [
      62
     ]
    },
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.tempfile": {
     "line number": [
      67,
      85
     ]
    },
    "pyemma.util.contexts.numpy_random_seed": {
     "line number": [
      55
     ]
    },
    "range": {
     "line number": [
      69,
      74
     ]
    },
    "super": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.TestFeatureReaderAndTICAProjection.tearDownClass": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      89
     ]
    },
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.TestFeatureReaderAndTICAProjection": {
     "line number": [
      94
     ]
    },
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.os": {
     "line number": [
      92,
      93
     ]
    },
    "super": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.TestFeatureReaderAndTICAProjection.test_covariances_and_eigenvalues": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      105
     ]
    },
    "numpy.diag_indices": {
     "line number": [
      112
     ]
    },
    "numpy.eye": {
     "line number": [
      109
     ]
    },
    "numpy.max": {
     "line number": [
      104
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      109,
      110,
      113
     ]
    },
    "numpy.zeros": {
     "line number": [
      111
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      99,
      107
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      97
     ]
    },
    "pyemma.coordinates.tests.test_featurereader_and_tica_projection.log": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.TestFeatureReaderAndTICAProjection.test_partial_fit": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      143,
      144,
      146
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      124,
      141
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.log": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.numpy_random_seed": {
  "data": {
   "shadows": "pyemma.util.contexts.numpy_random_seed"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.random_invertible": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      49
     ]
    },
    "numpy.linalg.svd": {
     "line number": [
      47
     ]
    },
    "numpy.maximum": {
     "line number": [
      48
     ]
    },
    "numpy.random.randn": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.tica": {
  "data": {
   "shadows": "pyemma.coordinates.api.tica"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurereader_and_tica_projection.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      35,
      1179
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.os": {
     "line number": [
      35,
      36,
      37,
      38,
      39
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.path": {
     "line number": [
      36,
      37,
      38,
      39
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pkg_resources": {
     "line number": [
      35
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.unittest": {
     "line number": [
      1180
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_featurizer.CustomFeature": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.featurizer.CustomFeature"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.MDFeaturizer": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.TestAtomsInResidues": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurizer.unittest": {
     "line number": [
      792
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurizer.TestAtomsInResidues.setUp": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      796
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      794
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_aa": {
     "line number": [
      794
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestAtomsInResidues.testAtomsInResidues_All_Schemes_FallBack": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      836
     ]
    },
    "len": {
     "line number": [
      837
     ]
    },
    "numpy.allclose": {
     "line number": [
      839
     ]
    },
    "numpy.arange": {
     "line number": [
      831
     ]
    },
    "pyemma.coordinates.data.featurization.util._atoms_in_residues": {
     "line number": [
      830
     ]
    },
    "range": {
     "line number": [
      828
     ]
    },
    "zip": {
     "line number": [
      836
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestAtomsInResidues.testAtomsInResidues_All_Schemes_NoFallBack": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      822
     ]
    },
    "numpy.allclose": {
     "line number": [
      823
     ]
    },
    "numpy.arange": {
     "line number": [
      817
     ]
    },
    "pyemma.coordinates.data.featurization.util._atoms_in_residues": {
     "line number": [
      816
     ]
    },
    "range": {
     "line number": [
      814
     ]
    },
    "zip": {
     "line number": [
      822
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestAtomsInResidues.testAtomsInResidues_All_Schemes_NoFallBack_NoSubset": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      807
     ]
    },
    "numpy.allclose": {
     "line number": [
      808
     ]
    },
    "numpy.arange": {
     "line number": [
      803
     ]
    },
    "pyemma.coordinates.data.featurization.util._atoms_in_residues": {
     "line number": [
      802
     ]
    },
    "range": {
     "line number": [
      800
     ]
    },
    "zip": {
     "line number": [
      807
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurizer.unittest": {
     "line number": [
      1083
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.setUp": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1091
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      1086
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      1087
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile": {
     "line number": [
      1086,
      1087
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.xtcfile": {
     "line number": [
      1087
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_describe": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1114
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg": {
     "line number": [
      1108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_describe_1_element_expand": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg": {
     "line number": [
      1144
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_describe_given": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1124
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg": {
     "line number": [
      1117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_describe_given_str": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1133
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg": {
     "line number": [
      1127
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_describe_given_wrong": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1137
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg": {
     "line number": [
      1138
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_dimensionality": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg": {
     "line number": [
      1152
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_serializable": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1172
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.os": {
     "line number": [
      1177
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg": {
     "line number": [
      1164
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.tempfile": {
     "line number": [
      1162
     ]
    },
    "pyemma.load": {
     "line number": [
      1171
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestCustomFeature.test_some_feature": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      1105
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg": {
     "line number": [
      1096,
      1104
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurizer.unittest": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.setUp": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      176
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      173
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      172
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile": {
     "line number": [
      171
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.xtcfile": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.setUpClass": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      133
     ]
    },
    "numpy.arange": {
     "line number": [
      155
     ]
    },
    "numpy.empty": {
     "line number": [
      151
     ]
    },
    "numpy.random.random": {
     "line number": [
      152
     ]
    },
    "open": {
     "line number": [
      138,
      144
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.asn_leu_pdb": {
     "line number": [
      139
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.bogus_geom_pdbfile": {
     "line number": [
      145
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      149
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.tempfile": {
     "line number": [
      137,
      141,
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.tearDown": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurizer.check_serialized_equal": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.tearDownClass": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      162,
      167
     ]
    },
    "classmethod": {
     "line number": [
      158
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.os": {
     "line number": [
      161,
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Group_COM_with_all_atom_geoms": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      746,
      754,
      760
     ]
    },
    "numpy.array": {
     "line number": [
      732
     ]
    },
    "numpy.hstack": {
     "line number": [
      744,
      752
     ]
    },
    "numpy.mean": {
     "line number": [
      752
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      740,
      749,
      757,
      763
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      730,
      744
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_aa": {
     "line number": [
      730
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Group_Mindist_All_Three_Groups": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": {
    "itertools.product": {
     "line number": [
      668,
      669,
      670
     ]
    },
    "len": {
     "line number": [
      677
     ]
    },
    "list": {
     "line number": [
      668,
      669,
      670
     ]
    },
    "numpy.allclose": {
     "line number": [
      676
     ]
    },
    "numpy.array": {
     "line number": [
      668,
      669,
      670
     ]
    },
    "numpy.unique": {
     "line number": [
      668,
      668,
      669,
      669,
      670,
      670
     ]
    },
    "numpy.vstack": {
     "line number": [
      674
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      671,
      672,
      673
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Group_Mindist_All_Three_Groups_threshold": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": {
    "itertools.product": {
     "line number": [
      688,
      689,
      690
     ]
    },
    "len": {
     "line number": [
      701
     ]
    },
    "list": {
     "line number": [
      688,
      689,
      690
     ]
    },
    "numpy.allclose": {
     "line number": [
      700
     ]
    },
    "numpy.argwhere": {
     "line number": [
      697
     ]
    },
    "numpy.array": {
     "line number": [
      688,
      689,
      690
     ]
    },
    "numpy.unique": {
     "line number": [
      688,
      688,
      689,
      689,
      690,
      690
     ]
    },
    "numpy.vstack": {
     "line number": [
      694
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      696
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      691,
      692,
      693
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Group_Mindist_One_Group": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": {
    "itertools.combinations": {
     "line number": [
      655
     ]
    },
    "len": {
     "line number": [
      658
     ]
    },
    "list": {
     "line number": [
      655
     ]
    },
    "numpy.allclose": {
     "line number": [
      657
     ]
    },
    "numpy.unique": {
     "line number": [
      655
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      656
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Group_Mindist_Some_Three_Groups": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": {
    "itertools.combinations": {
     "line number": [
      718
     ]
    },
    "itertools.product": {
     "line number": [
      716,
      717
     ]
    },
    "len": {
     "line number": [
      725
     ]
    },
    "list": {
     "line number": [
      716,
      717,
      718
     ]
    },
    "numpy.allclose": {
     "line number": [
      724
     ]
    },
    "numpy.array": {
     "line number": [
      708,
      716,
      717,
      718
     ]
    },
    "numpy.unique": {
     "line number": [
      716,
      716,
      717,
      717,
      718
     ]
    },
    "numpy.vstack": {
     "line number": [
      722
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      719,
      720,
      721
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_MinRmsd_ref_file": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": {
    "len": {
     "line number": [
      580
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      577
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.verbose_assertion_minrmsd": {
     "line number": [
      578
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.xtcfile": {
     "line number": [
      574
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_MinRmsd_ref_traj": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": {
    "len": {
     "line number": [
      570
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      567
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.verbose_assertion_minrmsd": {
     "line number": [
      568
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_MinRmsd_with_atom_indices": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": {
    "len": {
     "line number": [
      590
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      587
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.verbose_assertion_minrmsd": {
     "line number": [
      588
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_MinRmsd_with_atom_indices_precentered": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": {
    "len": {
     "line number": [
      600
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      597
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.verbose_assertion_minrmsd": {
     "line number": [
      598
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Residue_COM_with_all_atom_geoms": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      789
     ]
    },
    "numpy.arange": {
     "line number": [
      776,
      786
     ]
    },
    "numpy.hstack": {
     "line number": [
      784
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      775,
      785
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      770,
      784
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_aa": {
     "line number": [
      770
     ]
    },
    "range": {
     "line number": [
      782
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Residue_Mindist_Ca_all": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": {
    "len": {
     "line number": [
      608
     ]
    },
    "numpy.allclose": {
     "line number": [
      607
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      606
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Residue_Mindist_Ca_all_threshold": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": {
    "len": {
     "line number": [
      619
     ]
    },
    "numpy.allclose": {
     "line number": [
      618
     ]
    },
    "numpy.argwhere": {
     "line number": [
      616
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      615
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      614
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Residue_Mindist_Ca_array": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": {
    "len": {
     "line number": [
      627
     ]
    },
    "numpy.allclose": {
     "line number": [
      626
     ]
    },
    "numpy.array": {
     "line number": [
      622
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      625
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_Residue_Mindist_Ca_array_periodic": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": {
    "len": {
     "line number": [
      649
     ]
    },
    "numpy.allclose": {
     "line number": [
      646,
      648
     ]
    },
    "numpy.array": {
     "line number": [
      637
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      630,
      643,
      644
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile": {
     "line number": [
      630
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_all_dihedrals": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      517
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_all_dihedrals_cossin": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      523
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_angles": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "int": {
     "line number": [
      381
     ]
    },
    "len": {
     "line number": [
      387
     ]
    },
    "numpy.alltrue": {
     "line number": [
      385,
      386
     ]
    },
    "numpy.array": {
     "line number": [
      379
     ]
    },
    "numpy.pi": {
     "line number": [
      385,
      386
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_angles_cossin": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "int": {
     "line number": [
      402
     ]
    },
    "len": {
     "line number": [
      411
     ]
    },
    "numpy.alltrue": {
     "line number": [
      407,
      408
     ]
    },
    "numpy.array": {
     "line number": [
      400
     ]
    },
    "numpy.pi": {
     "line number": [
      407,
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_angles_deg": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "int": {
     "line number": [
      392
     ]
    },
    "numpy.alltrue": {
     "line number": [
      396,
      397
     ]
    },
    "numpy.array": {
     "line number": [
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_backbone_dihedrals": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": {
    "len": {
     "line number": [
      457
     ]
    },
    "numpy.alltrue": {
     "line number": [
      453,
      454
     ]
    },
    "numpy.pi": {
     "line number": [
      453,
      454
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      462,
      463,
      464,
      465
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      448
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_backbone_dihedrals_cossin": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": {
    "len": {
     "line number": [
      484,
      488
     ]
    },
    "numpy.alltrue": {
     "line number": [
      485,
      486
     ]
    },
    "numpy.pi": {
     "line number": [
      485,
      486
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      479
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      482
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_backbone_dihedrals_deg": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "len": {
     "line number": [
      476
     ]
    },
    "numpy.alltrue": {
     "line number": [
      473,
      474
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      468
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_backbone_dihedrials_chi1": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": {
    "len": {
     "line number": [
      501
     ]
    },
    "numpy.alltrue": {
     "line number": [
      498,
      499
     ]
    },
    "numpy.pi": {
     "line number": [
      498,
      499
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      493
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_backbone_dihedrials_chi1_cossin": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": {
    "len": {
     "line number": [
      514
     ]
    },
    "numpy.alltrue": {
     "line number": [
      509,
      510
     ]
    },
    "numpy.pi": {
     "line number": [
      509,
      510
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      504
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      507
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_ca_distances": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "list": {
     "line number": [
      252
     ]
    },
    "numpy.all": {
     "line number": [
      252
     ]
    },
    "numpy.allclose": {
     "line number": [
      260
     ]
    },
    "numpy.sqrt": {
     "line number": [
      259
     ]
    },
    "numpy.sum": {
     "line number": [
      259
     ]
    },
    "range": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_ca_distances_with_all_atom_geometries": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      271
     ]
    },
    "numpy.arange": {
     "line number": [
      269
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      263,
      268
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      265,
      270
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_Ca": {
     "line number": [
      268,
      270
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_aa": {
     "line number": [
      263,
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_ca_distances_with_all_atom_geometries_and_exclusions": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      283
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      274,
      279
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      276,
      282
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_Ca": {
     "line number": [
      279,
      282
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_aa": {
     "line number": [
      274,
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_ca_distances_with_residues_not_containing_cas_no_exclusions": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      297,
      300,
      310,
      312
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      289,
      304
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      287,
      299,
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_ca_distances_with_residues_not_containing_cas_with_exclusions": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      325,
      328,
      338,
      340
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      318,
      332
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      316,
      327,
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_contacts": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "int": {
     "line number": [
      343
     ]
    },
    "numpy.all": {
     "line number": [
      347
     ]
    },
    "numpy.allclose": {
     "line number": [
      356
     ]
    },
    "numpy.argwhere": {
     "line number": [
      354
     ]
    },
    "numpy.array": {
     "line number": [
      343,
      344
     ]
    },
    "numpy.sqrt": {
     "line number": [
      352
     ]
    },
    "numpy.sum": {
     "line number": [
      352
     ]
    },
    "numpy.zeros": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_contacts_count_contacts": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "int": {
     "line number": [
      359
     ]
    },
    "numpy.all": {
     "line number": [
      363
     ]
    },
    "numpy.allclose": {
     "line number": [
      376
     ]
    },
    "numpy.argwhere": {
     "line number": [
      372
     ]
    },
    "numpy.array": {
     "line number": [
      359,
      360
     ]
    },
    "numpy.sqrt": {
     "line number": [
      370
     ]
    },
    "numpy.sum": {
     "line number": [
      370
     ]
    },
    "numpy.zeros": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_custom_feature": {
  "data": {
   "lineno": 557
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_dihedrals": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "int": {
     "line number": [
      416
     ]
    },
    "len": {
     "line number": [
      422
     ]
    },
    "numpy.alltrue": {
     "line number": [
      420,
      421
     ]
    },
    "numpy.array": {
     "line number": [
      414
     ]
    },
    "numpy.pi": {
     "line number": [
      420,
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_dihedrals_deg": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "int": {
     "line number": [
      427
     ]
    },
    "len": {
     "line number": [
      433
     ]
    },
    "numpy.alltrue": {
     "line number": [
      431,
      432
     ]
    },
    "numpy.array": {
     "line number": [
      425
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_dihedrials_cossin": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "int": {
     "line number": [
      438
     ]
    },
    "len": {
     "line number": [
      445
     ]
    },
    "numpy.alltrue": {
     "line number": [
      442,
      443
     ]
    },
    "numpy.array": {
     "line number": [
      436
     ]
    },
    "numpy.pi": {
     "line number": [
      442,
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_distances": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "int": {
     "line number": [
      225
     ]
    },
    "numpy.all": {
     "line number": [
      229
     ]
    },
    "numpy.allclose": {
     "line number": [
      235
     ]
    },
    "numpy.array": {
     "line number": [
      225,
      226
     ]
    },
    "numpy.sqrt": {
     "line number": [
      234
     ]
    },
    "numpy.sum": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_inverse_distances": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "int": {
     "line number": [
      238
     ]
    },
    "numpy.all": {
     "line number": [
      242
     ]
    },
    "numpy.allclose": {
     "line number": [
      248
     ]
    },
    "numpy.array": {
     "line number": [
      238,
      239
     ]
    },
    "numpy.sqrt": {
     "line number": [
      247
     ]
    },
    "numpy.sum": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_select": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "int": {
     "line number": [
      210
     ]
    },
    "len": {
     "line number": [
      213
     ]
    },
    "numpy.all": {
     "line number": [
      214
     ]
    },
    "numpy.array": {
     "line number": [
      210
     ]
    },
    "numpy.reshape": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_select_all": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "len": {
     "line number": [
      199
     ]
    },
    "numpy.all": {
     "line number": [
      200
     ]
    },
    "numpy.reshape": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_select_all_reference": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "len": {
     "line number": [
      206
     ]
    },
    "numpy.all": {
     "line number": [
      207
     ]
    },
    "numpy.reshape": {
     "line number": [
      206
     ]
    },
    "slice": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_select_backbone": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_select_non_symmetry_heavy_atoms": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      194
     ]
    },
    "RuntimeError": {
     "line number": [
      191
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.sys": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_select_reference": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "int": {
     "line number": [
      217
     ]
    },
    "len": {
     "line number": [
      221
     ]
    },
    "numpy.array": {
     "line number": [
      217
     ]
    },
    "numpy.reshape": {
     "line number": [
      221
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      222
     ]
    },
    "slice": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_sidechain_torsions_invalid_which": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      554
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      553
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_sidechain_torsions_selstr": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "all": {
     "line number": [
      550
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      547
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_sidechain_torsions_which": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": {
    "all": {
     "line number": [
      536
     ]
    },
    "len": {
     "line number": [
      537
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      532
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizer.test_sidechain_torsions_which2": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": {
    "len": {
     "line number": [
      544
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      540
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizerNoDubs": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurizer.unittest": {
     "line number": [
      842
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizerNoDubs.tearDown": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurizer.check_serialized_equal": {
     "line number": [
      848
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizerNoDubs.testAddFeaturesWithDuplicates": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": {
    "len": {
     "line number": [
      858,
      862,
      864,
      871,
      873,
      877,
      881,
      883,
      895,
      897,
      904,
      910,
      915,
      920,
      925
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.CustomFeature": {
     "line number": [
      892,
      901
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      853
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      907
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile": {
     "line number": [
      853,
      907
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.xtcfile": {
     "line number": [
      907
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizerNoDubs.testAddFeaturesWithDuplicates.foo": {
  "data": {
   "lineno": 888
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizerNoDubs.testAddFeaturesWithDuplicates.my_func": {
  "data": {
   "lineno": 885
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizerNoDubs.testAddVerySimilarResidueCOMs": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": {
    "len": {
     "line number": [
      939
     ]
    },
    "numpy.array": {
     "line number": [
      930
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      932
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      928
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_aa": {
     "line number": [
      928
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestFeaturizerNoDubs.test_labels": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      945
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.CustomFeature": {
     "line number": [
      951
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      943
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile": {
     "line number": [
      943,
      953
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestPairwiseInputParser": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurizer.unittest": {
     "line number": [
      961
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurizer.TestPairwiseInputParser.setUp": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      964
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile": {
     "line number": [
      964
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestPairwiseInputParser.test_one_unique": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": {
    "itertools.combinations": {
     "line number": [
      976,
      981
     ]
    },
    "list": {
     "line number": [
      976,
      981
     ]
    },
    "numpy.allclose": {
     "line number": [
      977,
      982
     ]
    },
    "numpy.array": {
     "line number": [
      980
     ]
    },
    "numpy.asarray": {
     "line number": [
      976,
      981
     ]
    },
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input": {
     "line number": [
      977,
      982
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestPairwiseInputParser.test_trivial": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      971
     ]
    },
    "numpy.array": {
     "line number": [
      967
     ]
    },
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input": {
     "line number": [
      971
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestPairwiseInputParser.test_two_redundants": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": {
    "itertools.product": {
     "line number": [
      1000
     ]
    },
    "list": {
     "line number": [
      1000
     ]
    },
    "numpy.allclose": {
     "line number": [
      1003
     ]
    },
    "numpy.array": {
     "line number": [
      998,
      999
     ]
    },
    "numpy.asarray": {
     "line number": [
      1000
     ]
    },
    "numpy.unique": {
     "line number": [
      1000,
      1001
     ]
    },
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input": {
     "line number": [
      1003
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestPairwiseInputParser.test_two_redundants_overlap": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": {
    "itertools.product": {
     "line number": [
      1008
     ]
    },
    "list": {
     "line number": [
      1008
     ]
    },
    "numpy.allclose": {
     "line number": [
      1011
     ]
    },
    "numpy.array": {
     "line number": [
      1006,
      1007
     ]
    },
    "numpy.asarray": {
     "line number": [
      1008
     ]
    },
    "numpy.unique": {
     "line number": [
      1008,
      1009
     ]
    },
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input": {
     "line number": [
      1011
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestPairwiseInputParser.test_two_uniques": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": {
    "itertools.product": {
     "line number": [
      988,
      994
     ]
    },
    "list": {
     "line number": [
      988,
      994
     ]
    },
    "numpy.allclose": {
     "line number": [
      989,
      995
     ]
    },
    "numpy.array": {
     "line number": [
      992,
      993
     ]
    },
    "numpy.asarray": {
     "line number": [
      988,
      994
     ]
    },
    "pyemma.coordinates.data.featurization.util._parse_pairwise_input": {
     "line number": [
      989,
      995
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestStaticMethods": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurizer.unittest": {
     "line number": [
      1046
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurizer.TestStaticMethods.setUp": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": {
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      1049
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pdbfile": {
     "line number": [
      1049
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestStaticMethods.test_pairs": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      1054,
      1057,
      1061,
      1066
     ]
    },
    "numpy.arange": {
     "line number": [
      1053,
      1056,
      1060,
      1065
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestUtils": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurizer.unittest": {
     "line number": [
      1014
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_featurizer.TestUtils.setUp": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1033
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      1035
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestUtils.setUpClass": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1015
     ]
    },
    "open": {
     "line number": [
      1020
     ]
    },
    "print": {
     "line number": [
      1019
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.TestUtils": {
     "line number": [
      1022
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.bogus_geom_pdbfile": {
     "line number": [
      1021
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.tempfile": {
     "line number": [
      1018
     ]
    },
    "super": {
     "line number": [
      1022
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestUtils.tearDownClass": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      1028
     ]
    },
    "classmethod": {
     "line number": [
      1024
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.TestUtils": {
     "line number": [
      1031
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.os": {
     "line number": [
      1027
     ]
    },
    "super": {
     "line number": [
      1031
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.TestUtils.test_describe_atom": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1040,
      1041
     ]
    },
    "pyemma.coordinates.data.featurization.util._describe_atom": {
     "line number": [
      1038,
      1039
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer._atoms_in_residues": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._atoms_in_residues"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer._describe_atom": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._describe_atom"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer._parse_pairwise_input": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.util._parse_pairwise_input"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.asn_leu_pdb": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurizer.bogus_geom_pdbfile": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurizer.check_serialized_equal": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "feat_equal": {
     "line number": [
      128
     ]
    },
    "pyemma.coordinates.tests.test_featurizer.pyemma": {
     "line number": [
      127
     ]
    },
    "pyemma.util.contexts.named_temporary_file": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.check_serialized_equal.feat_equal": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      112,
      113,
      118,
      118
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.CustomFeature": {
     "line number": [
      118,
      118
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      112,
      113
     ]
    },
    "zip": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.load": {
  "data": {
   "shadows": "pyemma.load"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.named_temporary_file": {
  "data": {
   "shadows": "pyemma.util.contexts.named_temporary_file"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurizer.pdbfile": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_Ca": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurizer.pdbfile_ops_aa": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_featurizer.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.some_call_to_mdtraj_some_operations_some_linalg": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_featurizer.mdtraj": {
     "line number": [
      1077
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_featurizer.verbose_assertion_minrmsd": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      101
     ]
    },
    "numpy.allclose": {
     "line number": [
      102
     ]
    },
    "numpy.arange": {
     "line number": [
      100
     ]
    },
    "numpy.argmax": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_featurizer.xtcfile": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_fragmented_trajectory.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.setUpClass": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      28
     ]
    },
    "numpy.array": {
     "line number": [
      30
     ]
    },
    "range": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_chunked_trajectory_random_access": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      51,
      51
     ]
    },
    "numpy.asarray": {
     "line number": [
      49
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      51
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_chunked_trajectory_with_lag": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "len": {
     "line number": [
      142
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      142,
      146,
      151
     ]
    },
    "numpy.vstack": {
     "line number": [
      130,
      140,
      141,
      150
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_cols": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      171
     ]
    },
    "numpy.arange": {
     "line number": [
      166
     ]
    },
    "numpy.concatenate": {
     "line number": [
      172
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      175
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      168
     ]
    },
    "tuple": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_fragmented_xtc": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      100
     ]
    },
    "__name__": {
     "line number": [
      79
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      93,
      94,
      95
     ]
    },
    "numpy.vstack": {
     "line number": [
      93,
      95
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      87
     ]
    },
    "pyemma.coordinates.tests.test_fragmented_trajectory.mdtraj": {
     "line number": [
      91
     ]
    },
    "pyemma.coordinates.tests.test_fragmented_trajectory.os": {
     "line number": [
      99
     ]
    },
    "pyemma.coordinates.tests.test_fragmented_trajectory.pkg_resources": {
     "line number": [
      79
     ]
    },
    "pyemma.coordinates.tests.util.create_traj": {
     "line number": [
      82
     ]
    },
    "range": {
     "line number": [
      81,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_full_trajectory": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      39
     ]
    },
    "numpy.vstack": {
     "line number": [
      37
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_full_trajectory_random_access": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      45,
      45
     ]
    },
    "numpy.asarray": {
     "line number": [
      43
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      45
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_full_trajectory_stridden": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      59
     ]
    },
    "numpy.vstack": {
     "line number": [
      57
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_full_trajectory_stridden_with_lag": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "len": {
     "line number": [
      73
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      73,
      74
     ]
    },
    "numpy.vstack": {
     "line number": [
      63
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_index_to_reader_index": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      159,
      161
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_multiple_input_trajectories": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      124,
      125,
      126,
      127
     ]
    },
    "numpy.vstack": {
     "line number": [
      122
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      117
     ]
    },
    "range": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_multiple_input_trajectories_random_access": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      109,
      109,
      109
     ]
    },
    "numpy.asarray": {
     "line number": [
      104
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      114
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      111
     ]
    },
    "range": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_raise_different_dims": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      179
     ]
    },
    "numpy.array": {
     "line number": [
      178
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.TestFragmentedTrajectory.test_with_save_traj": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      183
     ]
    },
    "numpy.array": {
     "line number": [
      206,
      214
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      202,
      206,
      210,
      214
     ]
    },
    "pyemma.coordinates.save_traj": {
     "line number": [
      201,
      205,
      209,
      213
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      192
     ]
    },
    "pyemma.coordinates.tests.test_fragmented_trajectory.os": {
     "line number": [
      183,
      185,
      187,
      188,
      189
     ]
    },
    "pyemma.coordinates.tests.test_fragmented_trajectory.pkg_resources": {
     "line number": [
      183
     ]
    },
    "reshape": {
     "line number": [
      202,
      206,
      210,
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_fragmented_trajectory.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      173
     ]
    },
    "pyemma.coordinates.tests.test_frames_from_file.unittest": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_frames_from_file.unittest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      45
     ]
    },
    "mdtraj.load": {
     "line number": [
      54
     ]
    },
    "numpy.random.randint": {
     "line number": [
      51
     ]
    },
    "pyemma.coordinates.tests.test_frames_from_file.os": {
     "line number": [
      45,
      46,
      47
     ]
    },
    "pyemma.coordinates.tests.test_frames_from_file.pkg_resources": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_gets_the_right_frames_no_stride_no_chunk": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "int": {
     "line number": [
      63
     ]
    },
    "mdtraj.load": {
     "line number": [
      64
     ]
    },
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files": {
     "line number": [
      63
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_gets_the_right_frames_no_stride_with_chunk": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "mdtraj.load": {
     "line number": [
      72
     ]
    },
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files": {
     "line number": [
      71
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_gets_the_right_frames_with_stride_no_chunk": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "mdtraj.load": {
     "line number": [
      85
     ]
    },
    "numpy.floor": {
     "line number": [
      82
     ]
    },
    "numpy.random.randint": {
     "line number": [
      82
     ]
    },
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files": {
     "line number": [
      84
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_gets_the_right_frames_with_stride_with_chunk": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "mdtraj.load": {
     "line number": [
      100
     ]
    },
    "numpy.floor": {
     "line number": [
      94
     ]
    },
    "numpy.random.randint": {
     "line number": [
      94
     ]
    },
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files": {
     "line number": [
      96
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_gets_the_right_frames_with_stride_with_chunk_mdTopology_input": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "mdtraj.load": {
     "line number": [
      130
     ]
    },
    "numpy.floor": {
     "line number": [
      124
     ]
    },
    "numpy.random.randint": {
     "line number": [
      124
     ]
    },
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files": {
     "line number": [
      126
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_gets_the_right_frames_with_stride_with_chunk_mdTrajectory_input": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "mdtraj.load": {
     "line number": [
      115
     ]
    },
    "numpy.floor": {
     "line number": [
      109
     ]
    },
    "numpy.random.randint": {
     "line number": [
      109
     ]
    },
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files": {
     "line number": [
      111
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_gets_the_right_frames_with_stride_with_copy": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "mdtraj.load": {
     "line number": [
      147
     ]
    },
    "numpy.allclose": {
     "line number": [
      151,
      152
     ]
    },
    "numpy.floor": {
     "line number": [
      139
     ]
    },
    "numpy.random.randint": {
     "line number": [
      139
     ]
    },
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files": {
     "line number": [
      141
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_pass_reader": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "numpy.random.randint": {
     "line number": [
      170,
      170
     ]
    },
    "numpy.vstack": {
     "line number": [
      170
     ]
    },
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files": {
     "line number": [
      171
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_returns_trajectory": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      57
     ]
    },
    "mdtraj.Trajectory": {
     "line number": [
      58
     ]
    },
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file.TestFramesFromFile.test_trajs_larger_than_frame_index": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      160
     ]
    },
    "numpy.arange": {
     "line number": [
      158,
      158
     ]
    },
    "numpy.vstack": {
     "line number": [
      158
     ]
    },
    "pyemma.coordinates.data.util.frames_from_file.frames_from_files": {
     "line number": [
      161
     ]
    },
    "pyemma.coordinates.tests.test_frames_from_file.re": {
     "line number": [
      163
     ]
    },
    "pyemma.coordinates.tests.util.create_traj": {
     "line number": [
      157
     ]
    },
    "pyemma.coordinates.tests.util.get_top": {
     "line number": [
      161
     ]
    },
    "range": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_frames_from_file._frames_from_file": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.frames_from_file.frames_from_files"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.allclose": {
  "data": {
   "shadows": "numpy.allclose"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.compare_coords_md_trajectory_objects": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.floor": {
  "data": {
   "shadows": "numpy.floor"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.get_top": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.get_top"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.md": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_frames_from_file.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      82
     ]
    },
    "pyemma.coordinates.tests.test_h5reader.unittest": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_h5reader.H5Reader": {
  "data": {
   "shadows": "pyemma.coordinates.data.h5_reader.H5Reader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.MockLoggingHandler": {
  "data": {
   "shadows": "pyemma.util.testing_tools.MockLoggingHandler"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_h5reader.unittest": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.setUpClass": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      11
     ]
    },
    "numpy.arange": {
     "line number": [
      19,
      26,
      27
     ]
    },
    "pyemma.coordinates.data.h5_reader.H5Reader": {
     "line number": [
      30
     ]
    },
    "pyemma.coordinates.tests.test_h5reader.h5py": {
     "line number": [
      20
     ]
    },
    "pyemma.coordinates.tests.test_h5reader.tempfile": {
     "line number": [
      15,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.tearDownClass": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      32
     ]
    },
    "pyemma.coordinates.tests.test_h5reader.shutil": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.test_1d": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "pyemma.coordinates.source": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.test_5d": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "pyemma.coordinates.source": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.test_ndim": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.test_non_matching_selection": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      50
     ]
    },
    "pyemma.coordinates.data.h5_reader.H5Reader": {
     "line number": [
      54
     ]
    },
    "pyemma.coordinates.tests.test_h5reader.logging": {
     "line number": [
      53
     ]
    },
    "pyemma.util.testing_tools.MockLoggingHandler": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.test_output": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.test_source": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "pyemma.coordinates.data.h5_reader.H5Reader": {
     "line number": [
      67
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.TestH5Reader.test_udpate_selection": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_h5reader.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_h5reader.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_koopman_estimator": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      114
     ]
    },
    "pyemma.coordinates.tests.test_koopman_estimator.unittest": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_koopman_estimator.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman.setUpClass": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      21
     ]
    },
    "classmethod": {
     "line number": [
      12
     ]
    },
    "float": {
     "line number": [
      16
     ]
    },
    "numpy.abs": {
     "line number": [
      59,
      63
     ]
    },
    "numpy.argmax": {
     "line number": [
      63
     ]
    },
    "numpy.diag": {
     "line number": [
      65
     ]
    },
    "numpy.dot": {
     "line number": [
      49,
      50,
      65,
      68,
      68,
      69,
      82,
      86,
      87,
      87
     ]
    },
    "numpy.eye": {
     "line number": [
      70,
      81
     ]
    },
    "numpy.hstack": {
     "line number": [
      70
     ]
    },
    "numpy.load": {
     "line number": [
      21
     ]
    },
    "numpy.maximum": {
     "line number": [
      57
     ]
    },
    "numpy.min": {
     "line number": [
      56
     ]
    },
    "numpy.minimum": {
     "line number": [
      56
     ]
    },
    "numpy.real": {
     "line number": [
      80
     ]
    },
    "numpy.sign": {
     "line number": [
      64
     ]
    },
    "numpy.sum": {
     "line number": [
      38,
      39
     ]
    },
    "numpy.vstack": {
     "line number": [
      69
     ]
    },
    "numpy.where": {
     "line number": [
      59
     ]
    },
    "numpy.zeros": {
     "line number": [
      16,
      34,
      35,
      45,
      46,
      85
     ]
    },
    "pyemma._ext.variational.solvers.direct.sort_by_norm": {
     "line number": [
      58,
      75,
      79
     ]
    },
    "pyemma.coordinates.estimation.koopman._KoopmanEstimator": {
     "line number": [
      90
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      24
     ]
    },
    "pyemma.coordinates.tests.test_koopman_estimator.pkg_resources": {
     "line number": [
      21
     ]
    },
    "range": {
     "line number": [
      17,
      62
     ]
    },
    "scipy.linalg.eig": {
     "line number": [
      74,
      78
     ]
    },
    "scipy.linalg.eigh": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman.test_K_pc_1": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman.test_R": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman.test_mean": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman.test_u": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman.test_u_pc_1": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.TestKoopman.test_weights": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      106
     ]
    },
    "numpy.dot": {
     "line number": [
      104
     ]
    },
    "numpy.ones": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_koopman_estimator._KoopmanEstimator": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.koopman._KoopmanEstimator"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.scl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.sort_by_norm": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.sort_by_norm"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_koopman_estimator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_numpyfilereader": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      214
     ]
    },
    "pyemma.coordinates.tests.test_numpyfilereader.unittest": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.NumPyFileReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_numpyfilereader.unittest": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.setUpClass": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      39
     ]
    },
    "logging.getLogger": {
     "line number": [
      42
     ]
    },
    "numpy.arange": {
     "line number": [
      44,
      45
     ]
    },
    "numpy.random.random": {
     "line number": [
      46
     ]
    },
    "numpy.save": {
     "line number": [
      57,
      58,
      61
     ]
    },
    "numpy.savez": {
     "line number": [
      63
     ]
    },
    "pyemma.coordinates.tests.test_numpyfilereader.tempfile": {
     "line number": [
      48,
      50,
      51,
      52,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.tearDownClass": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      75
     ]
    },
    "pyemma.coordinates.tests.test_numpyfilereader.shutil": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.testSingleFile": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_describe": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_different_shapes_value_error": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      206
     ]
    },
    "numpy.save": {
     "line number": [
      202
     ]
    },
    "numpy.zeros": {
     "line number": [
      201
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      207
     ]
    },
    "pyemma.coordinates.tests.test_numpyfilereader.tempfile": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_lagged_stridden_access": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      172
     ]
    },
    "numpy.vstack": {
     "line number": [
      171
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_lagged_stridden_access_multiple_files": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      184
     ]
    },
    "numpy.load": {
     "line number": [
      186
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      187
     ]
    },
    "numpy.vstack": {
     "line number": [
      185
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      175
     ]
    },
    "range": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_npz": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "len": {
     "line number": [
      146
     ]
    },
    "list": {
     "line number": [
      143
     ]
    },
    "numpy.load": {
     "line number": [
      142
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      149
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      138
     ]
    },
    "pyemma.coordinates.tests.test_numpyfilereader.unittest": {
     "line number": [
      136
     ]
    },
    "zip": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_only_npy": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "len": {
     "line number": [
      87
     ]
    },
    "numpy.load": {
     "line number": [
      82
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      91
     ]
    },
    "numpy.vstack": {
     "line number": [
      83
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      80
     ]
    },
    "zip": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_skip": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      114
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      110,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_skip_input_list": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "len": {
     "line number": [
      124
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      125
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      120,
      122
     ]
    },
    "range": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_small_chunks": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "len": {
     "line number": [
      102
     ]
    },
    "numpy.load": {
     "line number": [
      97
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      106
     ]
    },
    "numpy.vstack": {
     "line number": [
      98
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      94
     ]
    },
    "zip": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_stridden_access": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "numpy.load": {
     "line number": [
      155
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      159
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.TestNumPyFileReader.test_usecols": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      197
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_numpyfilereader.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      171
     ]
    },
    "pyemma.coordinates.tests.test_nystroem_tica.sys": {
     "line number": [
      25
     ]
    },
    "pyemma.coordinates.tests.test_nystroem_tica.unittest": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.SelectionStrategySpectralOasis": {
  "data": {
   "shadows": "pyemma.coordinates.transform.nystroem_tica.SelectionStrategySpectralOasis"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_DoubleWell": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_nystroem_tica.unittest": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_DoubleWell.setUpClass": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      74
     ]
    },
    "numpy.exp": {
     "line number": [
      86
     ]
    },
    "numpy.linspace": {
     "line number": [
      81
     ]
    },
    "numpy.zeros": {
     "line number": [
      83
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      88
     ]
    },
    "pyemma.datasets.load_2well_discrete": {
     "line number": [
      77
     ]
    },
    "range": {
     "line number": [
      84,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_DoubleWell.test": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      94
     ]
    },
    "numpy.all": {
     "line number": [
      94
     ]
    },
    "numpy.array": {
     "line number": [
      91
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      92,
      93
     ]
    },
    "pyemma.coordinates.tica_nystroem": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_nystroem_tica.unittest": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple._compare_tica": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      39,
      40,
      41,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple.setUpClass": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      29
     ]
    },
    "numpy.arange": {
     "line number": [
      35
     ]
    },
    "numpy.ones": {
     "line number": [
      31
     ]
    },
    "numpy.random.choice": {
     "line number": [
      32
     ]
    },
    "numpy.random.rand": {
     "line number": [
      33
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      35
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple.test_describe": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      70
     ]
    },
    "pyemma.coordinates.tica_nystroem": {
     "line number": [
      69,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple.test_multiple": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "pyemma.coordinates.tica_nystroem": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple.test_multiple_issues_warning": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      63
     ]
    },
    "numpy.random.choice": {
     "line number": [
      65
     ]
    },
    "numpy.random.rand": {
     "line number": [
      64
     ]
    },
    "pyemma.coordinates.tests.test_nystroem_tica.use_assert_warns": {
     "line number": [
      62
     ]
    },
    "pyemma.coordinates.tica_nystroem": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple.test_single": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "pyemma.coordinates.tica_nystroem": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_Simple.test_single_issues_warning": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_nystroem_tica.use_assert_warns": {
     "line number": [
      49
     ]
    },
    "pyemma.coordinates.tica_nystroem": {
     "line number": [
      51,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_nystroem_tica.unittest": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS._test_oasis_single": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      128
     ]
    },
    "pyemma.coordinates.transform.nystroem_tica.oASIS_Nystroem": {
     "line number": [
      121
     ]
    },
    "range": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS.setUpClass": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      98
     ]
    },
    "numpy.arange": {
     "line number": [
      105
     ]
    },
    "numpy.diag": {
     "line number": [
      104
     ]
    },
    "numpy.dot": {
     "line number": [
      103
     ]
    },
    "numpy.ones": {
     "line number": [
      100
     ]
    },
    "numpy.random.choice": {
     "line number": [
      101
     ]
    },
    "numpy.random.randn": {
     "line number": [
      102
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS.test_constant_evec": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      167
     ]
    },
    "numpy.array": {
     "line number": [
      159,
      160,
      162
     ]
    },
    "numpy.diag": {
     "line number": [
      161,
      162
     ]
    },
    "numpy.dot": {
     "line number": [
      161,
      161
     ]
    },
    "numpy.random.randn": {
     "line number": [
      158
     ]
    },
    "numpy.vstack": {
     "line number": [
      158
     ]
    },
    "pyemma.coordinates.transform.nystroem_tica.SelectionStrategySpectralOasis": {
     "line number": [
      164
     ]
    },
    "pyemma.coordinates.transform.nystroem_tica.oASIS_Nystroem": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS.test_initial_zero": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      151
     ]
    },
    "numpy.array": {
     "line number": [
      149,
      151,
      155
     ]
    },
    "numpy.diag": {
     "line number": [
      150
     ]
    },
    "numpy.dot": {
     "line number": [
      148
     ]
    },
    "numpy.ones": {
     "line number": [
      147
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      151,
      152
     ]
    },
    "numpy.zeros": {
     "line number": [
      146,
      152
     ]
    },
    "pyemma.coordinates.transform.nystroem_tica.oASIS_Nystroem": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS.test_oasis": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      134
     ]
    },
    "numpy.equal": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS.test_random": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "len": {
     "line number": [
      115,
      116
     ]
    },
    "numpy.all": {
     "line number": [
      116
     ]
    },
    "numpy.any": {
     "line number": [
      115
     ]
    },
    "numpy.in1d": {
     "line number": [
      115,
      116
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      118
     ]
    },
    "pyemma.coordinates.transform.nystroem_tica.oASIS_Nystroem": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.TestNystroemTICA_oASIS.test_spectral_oasis_multiple": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      141
     ]
    },
    "numpy.equal": {
     "line number": [
      141
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      143
     ]
    },
    "pyemma.coordinates.transform.nystroem_tica.oASIS_Nystroem": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.load_2well_discrete": {
  "data": {
   "shadows": "pyemma.datasets.load_2well_discrete"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.oASIS_Nystroem": {
  "data": {
   "shadows": "pyemma.coordinates.transform.nystroem_tica.oASIS_Nystroem"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.tica": {
  "data": {
   "shadows": "pyemma.coordinates.tica"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.tica_nystroem": {
  "data": {
   "shadows": "pyemma.coordinates.tica_nystroem"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_nystroem_tica.use_assert_warns": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_pca": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      245
     ]
    },
    "logging.getLogger": {
     "line number": [
      38
     ]
    },
    "pyemma.coordinates.tests.test_pca.unittest": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_pca.PCA": {
  "data": {
   "shadows": "pyemma.coordinates.transform.PCA"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_pca.unittest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.setUpClass": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      43
     ]
    },
    "msmtools.generation.generate_traj": {
     "line number": [
      60
     ]
    },
    "numpy.array": {
     "line number": [
      52,
      55,
      55,
      56,
      56
     ]
    },
    "numpy.random.get_state": {
     "line number": [
      48
     ]
    },
    "numpy.random.randn": {
     "line number": [
      63,
      64
     ]
    },
    "numpy.random.seed": {
     "line number": [
      49
     ]
    },
    "numpy.zeros": {
     "line number": [
      58
     ]
    },
    "pyemma.coordinates.pca": {
     "line number": [
      65
     ]
    },
    "range": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.tearDownClass": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      67
     ]
    },
    "numpy.random.set_state": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_api_cs": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "pyemma.coordinates.pca": {
     "line number": [
      233,
      237,
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_chunksize": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "pyemma.util.types.is_int": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_cov": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "float": {
     "line number": [
      86
     ]
    },
    "numpy.all": {
     "line number": [
      87
     ]
    },
    "numpy.dot": {
     "line number": [
      86
     ]
    },
    "numpy.max": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_cumvar": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "len": {
     "line number": [
      82
     ]
    },
    "numpy.allclose": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_data_producer": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_describe": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "pyemma.util.types.is_list_of_string": {
     "line number": [
      95
     ]
    },
    "pyemma.util.types.is_string": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_dimension": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      106
     ]
    },
    "pyemma.coordinates.pca": {
     "line number": [
      102,
      104,
      107
     ]
    },
    "pyemma.util.types.is_int": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_eigenvalues": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "eval": {
     "line number": [
      110,
      111
     ]
    },
    "len": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_eigenvectors": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_feature_correlation_MD": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      191
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      203
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      204
     ]
    },
    "pyemma.coordinates.pca": {
     "line number": [
      195
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      194
     ]
    },
    "pyemma.coordinates.tests.test_pca.os": {
     "line number": [
      191,
      192,
      193
     ]
    },
    "pyemma.coordinates.tests.test_pca.pkg_resources": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_feature_correlation_data": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "len": {
     "line number": [
      209,
      210,
      211
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      221
     ]
    },
    "numpy.linspace": {
     "line number": [
      209
     ]
    },
    "numpy.random.randn": {
     "line number": [
      210,
      211
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      222
     ]
    },
    "numpy.zeros": {
     "line number": [
      208
     ]
    },
    "pyemma.coordinates.pca": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_get_output": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "len": {
     "line number": [
      120
     ]
    },
    "pyemma.util.types.is_float_matrix": {
     "line number": [
      121
     ]
    },
    "pyemma.util.types.is_list": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_in_memory": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      126
     ]
    },
    "isinstance": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_iterator": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "pyemma.util.types.is_float_matrix": {
     "line number": [
      131
     ]
    },
    "pyemma.util.types.is_int": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_map": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_mean": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "len": {
     "line number": [
      143
     ]
    },
    "numpy.max": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_n_frames_total": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_number_of_trajectories": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_output_type": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_partial_fit": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      178,
      178
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      184,
      186,
      187
     ]
    },
    "pyemma.coordinates.pca": {
     "line number": [
      179,
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_pipelining_sklearn_compat": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      227
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      230
     ]
    },
    "pyemma.coordinates.transform.PCA": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_provided_means": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      167
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      172,
      173,
      175
     ]
    },
    "pyemma.coordinates.pca": {
     "line number": [
      169,
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_trajectory_length": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_trajectory_lengths": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "len": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.TestPCAExtensive.test_variances": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      79
     ]
    },
    "numpy.max": {
     "line number": [
      79
     ]
    },
    "numpy.var": {
     "line number": [
      77
     ]
    },
    "pyemma.coordinates.pca": {
     "line number": [
      75
     ]
    },
    "vars": {
     "line number": [
      77,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pca.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.logger": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_pca.msmgen": {
  "data": {
   "shadows": "msmtools.generation"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.pca": {
  "data": {
   "shadows": "pyemma.coordinates.pca"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pca.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      188
     ]
    },
    "pyemma.coordinates.tests.test_pipeline.unittest": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_pipeline.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.MDFeaturizer": {
  "data": {
   "shadows": "pyemma.coordinates.data.MDFeaturizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_pipeline.unittest": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.setUpClass": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      40
     ]
    },
    "classmethod": {
     "line number": [
      38
     ]
    },
    "msmtools.generation.generate_traj": {
     "line number": [
      57
     ]
    },
    "numpy.array": {
     "line number": [
      50,
      52,
      52,
      53,
      53
     ]
    },
    "numpy.random.randn": {
     "line number": [
      60,
      61
     ]
    },
    "numpy.zeros": {
     "line number": [
      55
     ]
    },
    "pyemma.coordinates.data.MDFeaturizer": {
     "line number": [
      42
     ]
    },
    "pyemma.coordinates.tests.test_pipeline.os": {
     "line number": [
      40,
      41,
      45,
      46
     ]
    },
    "pyemma.coordinates.tests.test_pipeline.pkg_resources": {
     "line number": [
      40
     ]
    },
    "range": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_add_element": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      116,
      117,
      118,
      119
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      102,
      110
     ]
    },
    "pyemma.coordinates.api.pipeline": {
     "line number": [
      92
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_chunksize": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "pyemma.coordinates.api.cluster_mini_batch_kmeans": {
     "line number": [
      182
     ]
    },
    "pyemma.coordinates.api.pipeline": {
     "line number": [
      183
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      180
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_discretizer": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "pyemma.coordinates.api.cluster_regspace": {
     "line number": [
      160
     ]
    },
    "pyemma.coordinates.api.cluster_uniform_time": {
     "line number": [
      159
     ]
    },
    "pyemma.coordinates.api.discretizer": {
     "line number": [
      157,
      158,
      159,
      160
     ]
    },
    "pyemma.coordinates.api.pca": {
     "line number": [
      160
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      158
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_is_parametrized": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      72
     ]
    },
    "pyemma.coordinates.api.cluster_regspace": {
     "line number": [
      73
     ]
    },
    "pyemma.coordinates.api.cluster_uniform_time": {
     "line number": [
      74
     ]
    },
    "pyemma.coordinates.api.pca": {
     "line number": [
      71
     ]
    },
    "pyemma.coordinates.api.pipeline": {
     "line number": [
      67
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      69
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_no_cluster": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "pyemma.coordinates.api.pca": {
     "line number": [
      169
     ]
    },
    "pyemma.coordinates.api.pipeline": {
     "line number": [
      165,
      170,
      171
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      163
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_no_transform": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      175
     ]
    },
    "pyemma.coordinates.api.cluster_regspace": {
     "line number": [
      176
     ]
    },
    "pyemma.coordinates.api.cluster_uniform_time": {
     "line number": [
      177
     ]
    },
    "pyemma.coordinates.api.pipeline": {
     "line number": [
      175,
      176,
      177
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_np_reader_in_pipeline": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      84
     ]
    },
    "numpy.save": {
     "line number": [
      85
     ]
    },
    "pyemma.coordinates.api.pipeline": {
     "line number": [
      87
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      86
     ]
    },
    "pyemma.coordinates.tests.test_pipeline.os": {
     "line number": [
      83
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_replace_data_source": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      143,
      149
     ]
    },
    "numpy.array_equal": {
     "line number": [
      152
     ]
    },
    "print": {
     "line number": [
      147
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      142
     ]
    },
    "pyemma.coordinates.api.pipeline": {
     "line number": [
      144
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      139
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      140
     ]
    },
    "pyemma.coordinates.tests.test_pipeline.unittest": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.TestPipeline.test_set_element": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "numpy.array_equal": {
     "line number": [
      134
     ]
    },
    "pyemma.coordinates.api.pca": {
     "line number": [
      123
     ]
    },
    "pyemma.coordinates.api.pipeline": {
     "line number": [
      124
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      122
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_pipeline.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.msmgen": {
  "data": {
   "shadows": "msmtools.generation"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_pipeline.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      496
     ]
    },
    "pyemma.coordinates.tests.test_random_access_stride.unittest": {
     "line number": [
      497
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_random_access_stride.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.DataInMemoryJaggedRandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemoryJaggedRandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.StreamingTransformerRandomAccessStrategy": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingTransformerRandomAccessStrategy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "unittest.TestCase": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride._get_reader_instance": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      91
     ]
    },
    "pyemma.coordinates.data.FeatureReader": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.setUpClass": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      78
     ]
    },
    "classmethod": {
     "line number": [
      66
     ]
    },
    "numpy.asarray": {
     "line number": [
      73,
      77
     ]
    },
    "numpy.float32": {
     "line number": [
      70,
      71,
      72
     ]
    },
    "numpy.random.random": {
     "line number": [
      70,
      71,
      72
     ]
    },
    "pyemma.coordinates.tests.test_featurereader.create_traj": {
     "line number": [
      79,
      80,
      81
     ]
    },
    "pyemma.coordinates.tests.test_random_access_stride.pkg_resources": {
     "line number": [
      78
     ]
    },
    "pyemma.coordinates.tests.test_random_access_stride.tempfile": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.tearDownClass": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      84
     ]
    },
    "pyemma.coordinates.tests.test_random_access_stride.shutil": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_RA_high_stride": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": {
    "int": {
     "line number": [
      464
     ]
    },
    "next": {
     "line number": [
      477,
      482,
      489,
      493
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      485
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      475
     ]
    },
    "pyemma.coordinates.tests.test_featurereader.create_traj": {
     "line number": [
      470
     ]
    },
    "pyemma.coordinates.tests.util.get_top": {
     "line number": [
      475
     ]
    },
    "pyemma.coordinates.util.patches.iterload.MAX_STRIDE_SWITCH_TO_RA": {
     "line number": [
      488,
      492
     ]
    },
    "pyemma.coordinates.util.patches.iterload._DEACTIVATE_RANDOM_ACCESS_OPTIMIZATION": {
     "line number": [
      478,
      483,
      490,
      494
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      474
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_csv_filereader_random_access": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      323
     ]
    },
    "enumerate": {
     "line number": [
      304
     ]
    },
    "len": {
     "line number": [
      302
     ]
    },
    "numpy.savetxt": {
     "line number": [
      305
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      316,
      318
     ]
    },
    "numpy.unique": {
     "line number": [
      315
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      308,
      312
     ]
    },
    "pyemma.coordinates.tests.test_random_access_stride.os": {
     "line number": [
      322
     ]
    },
    "pyemma.coordinates.tests.test_random_access_stride.tempfile": {
     "line number": [
      302
     ]
    },
    "range": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_cuboid_random_access_with_mixed_trajs": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      182,
      183
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      185,
      186,
      187
     ]
    },
    "range": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_data_in_memory_random_access": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      292,
      293,
      294
     ]
    },
    "numpy.unique": {
     "line number": [
      291
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      280,
      284,
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_data_in_memory_without_first_two_trajs": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      299
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_dcd": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_gro": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format": {
     "line number": [
      389
     ]
    },
    "pyemma.coordinates.tests.test_random_access_stride.unittest": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_hdf5": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_lampstr": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_netcdf": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format": {
     "line number": [
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_trr": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_xtc": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format": {
     "line number": [
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_feature_reader_random_access_xyz": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_fragmented_reader_random_access": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      412
     ]
    },
    "isinstance": {
     "line number": [
      407
     ]
    },
    "numpy.array": {
     "line number": [
      417
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      415
     ]
    },
    "numpy.unique": {
     "line number": [
      411
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      406
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      407
     ]
    },
    "pyemma.coordinates.tests.test_featurereader.create_traj": {
     "line number": [
      401
     ]
    },
    "pyemma.coordinates.tests.test_random_access_stride.mdtraj": {
     "line number": [
      414
     ]
    },
    "pyemma.coordinates.tests.util.get_top": {
     "line number": [
      402
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      398
     ]
    },
    "range": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_fragmented_reader_random_access1": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "collections.defaultdict": {
     "line number": [
      439
     ]
    },
    "enumerate": {
     "line number": [
      452
     ]
    },
    "isinstance": {
     "line number": [
      429,
      432
     ]
    },
    "list": {
     "line number": [
      432,
      439
     ]
    },
    "numpy.array": {
     "line number": [
      457
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      455
     ]
    },
    "numpy.unique": {
     "line number": [
      451
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      428
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      429
     ]
    },
    "pyemma.coordinates.tests.test_featurereader.create_traj": {
     "line number": [
      424
     ]
    },
    "pyemma.coordinates.tests.test_random_access_stride.mdtraj": {
     "line number": [
      454
     ]
    },
    "pyemma.coordinates.tests.util.get_top": {
     "line number": [
      425
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      421
     ]
    },
    "range": {
     "line number": [
      423
     ]
    },
    "tuple": {
     "line number": [
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_is_random_accessible": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      96
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_iterator_context": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      269,
      273
     ]
    },
    "numpy.array": {
     "line number": [
      252,
      263,
      276
     ]
    },
    "numpy.asarray": {
     "line number": [
      260,
      270,
      274
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      263,
      276
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_jagged_random_access_with_mixed_trajs": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      207
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      209,
      210,
      211
     ]
    },
    "range": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_linear_itraj_random_access_with_mixed_trajs": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      194,
      195
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      198,
      199,
      200
     ]
    },
    "range": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_linear_random_access_with_mixed_trajs": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      168
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      169,
      170,
      171,
      172,
      173
     ]
    },
    "range": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_numpy_filereader_random_access": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      353
     ]
    },
    "enumerate": {
     "line number": [
      329
     ]
    },
    "len": {
     "line number": [
      327
     ]
    },
    "numpy.save": {
     "line number": [
      330
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      344,
      346,
      347
     ]
    },
    "numpy.unique": {
     "line number": [
      343
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      332,
      336,
      340
     ]
    },
    "pyemma.coordinates.tests.test_random_access_stride.os": {
     "line number": [
      352
     ]
    },
    "pyemma.coordinates.tests.test_random_access_stride.tempfile": {
     "line number": [
      327
     ]
    },
    "range": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_slice_random_access": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      108,
      110,
      112,
      114,
      114
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      106,
      108,
      110,
      112,
      114
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_slice_random_access_jagged": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      241,
      245,
      249
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      237
     ]
    },
    "range": {
     "line number": [
      240,
      244,
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_slice_random_access_linear": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "numpy.concatenate": {
     "line number": [
      218,
      222
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      218,
      220,
      222
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_slice_random_access_linear_itraj": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "numpy.concatenate": {
     "line number": [
      229,
      232,
      234
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      229,
      232,
      234
     ]
    },
    "pyemma.coordinates.data.DataInMemory": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_transfomer_random_access": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      131
     ]
    },
    "numpy.squeeze": {
     "line number": [
      126,
      128
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      126,
      128,
      132,
      136
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      121
     ]
    },
    "range": {
     "line number": [
      118,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_transformer_iterator_random_access": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "len": {
     "line number": [
      365,
      367
     ]
    },
    "list": {
     "line number": [
      366
     ]
    },
    "pyemma.coordinates.api.cluster_kmeans": {
     "line number": [
      357
     ]
    },
    "range": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.TestRandomAccessStride.test_transformer_random_access_in_memory": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      144,
      150,
      156
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      140
     ]
    },
    "pyemma.coordinates.data._base.transformer.StreamingTransformerRandomAccessStrategy": {
     "line number": [
      144,
      156
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemoryJaggedRandomAccessStrategy": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride._test_ra_with_format": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      60
     ]
    },
    "__name__": {
     "line number": [
      38
     ]
    },
    "enumerate": {
     "line number": [
      49
     ]
    },
    "format": {
     "line number": [
      41
     ]
    },
    "numpy.array": {
     "line number": [
      54
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      52
     ]
    },
    "numpy.unique": {
     "line number": [
      48
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      44
     ]
    },
    "pyemma.coordinates.tests.test_featurereader.create_traj": {
     "line number": [
      41
     ]
    },
    "pyemma.coordinates.tests.test_random_access_stride.mdtraj": {
     "line number": [
      51
     ]
    },
    "pyemma.coordinates.tests.test_random_access_stride.os": {
     "line number": [
      59
     ]
    },
    "pyemma.coordinates.tests.test_random_access_stride.pkg_resources": {
     "line number": [
      38
     ]
    },
    "range": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_random_access_stride.coor": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.test_featurereader.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.get_top": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.get_top"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.iterload": {
  "data": {
   "shadows": "pyemma.coordinates.util.patches.iterload"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_random_access_stride.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      355
     ]
    },
    "pyemma.coordinates.tests.test_readers.unittest": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_readers.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.GenerateTestMatrix": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "type": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_readers.GenerateTestMatrix.__new__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      43
     ]
    },
    "numpy.ndarray": {
     "line number": [
      43
     ]
    },
    "partialmethod": {
     "line number": [
      41
     ]
    },
    "str": {
     "line number": [
      43
     ]
    },
    "type.__new__": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.GenerateTestMatrix.__new__.partialmethod": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_readers.GenerateTestMatrix.__new__.partialmethod.__get__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "functools.partial": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      121,
      125,
      129,
      133
     ]
    },
    "list": {
     "line number": [
      130
     ]
    },
    "numpy.array": {
     "line number": [
      101,
      102
     ]
    },
    "numpy.finfo": {
     "line number": [
      117
     ]
    },
    "numpy.float32": {
     "line number": [
      117
     ]
    },
    "pyemma.coordinates.tests.test_readers.GenerateTestMatrix": {
     "line number": [
      53
     ]
    },
    "pyemma.coordinates.tests.test_readers.itertools": {
     "line number": [
      122,
      126,
      130,
      134
     ]
    },
    "pyemma.coordinates.tests.test_readers.unittest": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders._test_base_reader": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "collections.defaultdict": {
     "line number": [
      283
     ]
    },
    "enumerate": {
     "line number": [
      282
     ]
    },
    "len": {
     "line number": [
      282,
      294,
      295,
      296,
      298,
      298,
      302,
      303,
      313
     ]
    },
    "list": {
     "line number": [
      283
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      311
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      270
     ]
    },
    "numpy.vstack": {
     "line number": [
      310
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      264
     ]
    },
    "pyemma.coordinates.tests.test_readers.max_chunksize_from_config": {
     "line number": [
      276
     ]
    },
    "pyemma.coordinates.tests.util.create_transform": {
     "line number": [
      267
     ]
    },
    "sum": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders._test_base_reader_with_random_access_stride": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      331
     ]
    },
    "len": {
     "line number": [
      342,
      343,
      344,
      346,
      346,
      348,
      350,
      351
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      348
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      321
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      318
     ]
    },
    "pyemma.coordinates.tests.test_readers.max_chunksize_from_config": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders._test_fragment_reader": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      233
     ]
    },
    "len": {
     "line number": [
      246,
      246,
      249
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      249,
      252,
      259
     ]
    },
    "numpy.vstack": {
     "line number": [
      235,
      247,
      248,
      258
     ]
    },
    "pyemma.coordinates.data.FragmentedTrajectoryReader": {
     "line number": [
      233
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders._test_lagged_reader": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "collections.defaultdict": {
     "line number": [
      193,
      194
     ]
    },
    "enumerate": {
     "line number": [
      184
     ]
    },
    "len": {
     "line number": [
      184,
      201,
      202,
      203,
      205,
      205,
      205,
      209,
      210,
      222,
      226
     ]
    },
    "list": {
     "line number": [
      193,
      194
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      223,
      224
     ]
    },
    "numpy.vstack": {
     "line number": [
      219,
      220
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      179
     ]
    },
    "pyemma.coordinates.tests.test_readers.max_chunksize_from_config": {
     "line number": [
      188
     ]
    },
    "set": {
     "line number": [
      216,
      216
     ]
    },
    "sum": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders.setUp": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders.setup_class": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      138
     ]
    },
    "numpy.float32": {
     "line number": [
      150,
      151,
      152,
      153,
      154
     ]
    },
    "numpy.random.random": {
     "line number": [
      150,
      151,
      152,
      153,
      154
     ]
    },
    "pyemma.coordinates.tests.test_readers.tempfile": {
     "line number": [
      149
     ]
    },
    "pyemma.coordinates.tests.util.create_dummy_pdb": {
     "line number": [
      161
     ]
    },
    "pyemma.coordinates.tests.util.create_trajectory_csv": {
     "line number": [
      141
     ]
    },
    "pyemma.coordinates.tests.util.create_trajectory_dcd": {
     "line number": [
      146
     ]
    },
    "pyemma.coordinates.tests.util.create_trajectory_h5": {
     "line number": [
      147
     ]
    },
    "pyemma.coordinates.tests.util.create_trajectory_numpy": {
     "line number": [
      143
     ]
    },
    "pyemma.coordinates.tests.util.create_trajectory_trr": {
     "line number": [
      145
     ]
    },
    "pyemma.coordinates.tests.util.create_trajectory_xtc": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders.tearDown": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.TestReaders.teardown_class": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      163
     ]
    },
    "pyemma.coordinates.tests.test_readers.shutil": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.config": {
  "data": {
   "shadows": "pyemma.config"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.max_chunksize_from_config": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "int": {
     "line number": [
      19
     ]
    },
    "max": {
     "line number": [
      19
     ]
    },
    "numpy.floor": {
     "line number": [
      19
     ]
    },
    "pyemma.config.default_chunksize": {
     "line number": [
      18
     ]
    },
    "pyemma.util.units.string_to_bytes": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_readers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.string_to_bytes": {
  "data": {
   "shadows": "pyemma.util.units.string_to_bytes"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_readers.util": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      241
     ]
    },
    "pyemma.coordinates.tests.test_save_traj.unittest": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_save_traj.FragmentedTrajectoryReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_save_traj.unittest": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.setUp": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      51
     ]
    },
    "len": {
     "line number": [
      77,
      78
     ]
    },
    "numpy.random.permutation": {
     "line number": [
      63,
      66
     ]
    },
    "numpy.random.randint": {
     "line number": [
      64,
      67
     ]
    },
    "numpy.vstack": {
     "line number": [
      63,
      66
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame": {
     "line number": [
      80
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      75
     ]
    },
    "pyemma.coordinates.tests.test_save_traj.os": {
     "line number": [
      51,
      52,
      53,
      54,
      55,
      72
     ]
    },
    "pyemma.coordinates.tests.test_save_traj.pkg_resources": {
     "line number": [
      51
     ]
    },
    "pyemma.coordinates.tests.test_save_traj.tempfile": {
     "line number": [
      71
     ]
    },
    "pyemma.util.contexts.numpy_random_seed": {
     "line number": [
      62
     ]
    },
    "range": {
     "line number": [
      77,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.tearDown": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_save_traj.shutil": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_invalid_maximum_traj_index": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      229
     ]
    },
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      230
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      228
     ]
    },
    "set": {
     "line number": [
      226,
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_invalid_readers_in_frag_traj": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      237
     ]
    },
    "numpy.array": {
     "line number": [
      234
     ]
    },
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      238
     ]
    },
    "pyemma.coordinates.data.fragmented_trajectory_reader.FragmentedTrajectoryReader": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_list_input_returns_trajectory": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      108
     ]
    },
    "mdtraj.Trajectory": {
     "line number": [
      109
     ]
    },
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_list_input_save_IO": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      103
     ]
    },
    "pyemma.coordinates.tests.test_save_traj.os": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_list_input_save_correct_frames_disk": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "mdtraj.load": {
     "line number": [
      138
     ]
    },
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      135
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_list_input_save_correct_frames_mem": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      148
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_reader_input_returns_trajectory": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      93
     ]
    },
    "mdtraj.Trajectory": {
     "line number": [
      94
     ]
    },
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_reader_input_returns_trajectory_w_image_molecules": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      98
     ]
    },
    "mdtraj.Trajectory": {
     "line number": [
      99
     ]
    },
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      98
     ]
    },
    "pyemma.coordinates.tests.test_save_traj.unittest": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_reader_input_save_IO": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      88
     ]
    },
    "pyemma.coordinates.tests.test_save_traj.os": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_reader_input_save_correct_frames_disk": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "mdtraj.load": {
     "line number": [
      116
     ]
    },
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      113
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_reader_input_save_correct_frames_mem": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      126
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_reader_input_save_correct_frames_with_stride_in_memory": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "numpy.copy": {
     "line number": [
      160
     ]
    },
    "numpy.random.randint": {
     "line number": [
      161,
      162
     ]
    },
    "numpy.shape": {
     "line number": [
      161,
      162
     ]
    },
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      164
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      174
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_with_fragmented_reader": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "int": {
     "line number": [
      189
     ]
    },
    "numpy.array": {
     "line number": [
      189,
      202,
      202,
      202
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      209
     ]
    },
    "numpy.vstack": {
     "line number": [
      203
     ]
    },
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      208
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      205
     ]
    },
    "pyemma.coordinates.tests.util.create_traj": {
     "line number": [
      195
     ]
    },
    "pyemma.coordinates.tests.util.get_top": {
     "line number": [
      199
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      190
     ]
    },
    "range": {
     "line number": [
      194,
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.TestSaveTraj.test_with_fragmented_reader_chunksize_0": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      221
     ]
    },
    "pyemma.coordinates.api.save_traj": {
     "line number": [
      216
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      219
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame": {
     "line number": [
      217
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_traj.compare_coords_md_trajectory_objects": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.get_top": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.get_top"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.md": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.numpy_random_seed": {
  "data": {
   "shadows": "pyemma.util.contexts.numpy_random_seed"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.save_traj": {
  "data": {
   "shadows": "pyemma.coordinates.api.save_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.save_traj_w_md_load_frame": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.single_traj_from_n_files": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.single_traj_from_n_files"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_traj.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      166
     ]
    },
    "pyemma.coordinates.tests.test_save_trajs.unittest": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_save_trajs.unittest": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.setUp": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      46
     ]
    },
    "len": {
     "line number": [
      69,
      70
     ]
    },
    "numpy.random.permutation": {
     "line number": [
      56,
      59
     ]
    },
    "numpy.random.randint": {
     "line number": [
      57,
      60
     ]
    },
    "numpy.vstack": {
     "line number": [
      56,
      59
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame": {
     "line number": [
      72
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      67
     ]
    },
    "pyemma.coordinates.tests.test_save_trajs.os": {
     "line number": [
      46,
      47,
      48,
      49,
      50
     ]
    },
    "pyemma.coordinates.tests.test_save_trajs.pkg_resources": {
     "line number": [
      46
     ]
    },
    "pyemma.coordinates.tests.test_save_trajs.tempfile": {
     "line number": [
      64
     ]
    },
    "range": {
     "line number": [
      69,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.tearDown": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_save_trajs.shutil": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.test_out_of_bound_indexes": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      163
     ]
    },
    "pyemma.coordinates.api.save_trajs": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.test_save_SaveTrajs_IO": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "pyemma.coordinates.api.save_trajs": {
     "line number": [
      80
     ]
    },
    "pyemma.coordinates.tests.test_save_trajs.os": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.test_save_SaveTrajs_multipass": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "pyemma.coordinates.api.save_trajs": {
     "line number": [
      89
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      96
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.single_traj_from_n_files": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.test_save_SaveTrajs_multipass_with_stride": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "numpy.copy": {
     "line number": [
      141
     ]
    },
    "numpy.random.randint": {
     "line number": [
      142,
      143
     ]
    },
    "numpy.shape": {
     "line number": [
      142,
      143
     ]
    },
    "pyemma.coordinates.api.save_trajs": {
     "line number": [
      145
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      157
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame": {
     "line number": [
      154
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.single_traj_from_n_files": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.test_save_SaveTrajs_onepass": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "pyemma.coordinates.api.save_trajs": {
     "line number": [
      103
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      109
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.single_traj_from_n_files": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.TestSaveTrajs.test_save_SaveTrajs_onepass_with_stride": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "numpy.copy": {
     "line number": [
      117
     ]
    },
    "numpy.random.randint": {
     "line number": [
      118,
      119
     ]
    },
    "numpy.shape": {
     "line number": [
      118,
      119
     ]
    },
    "pyemma.coordinates.api.save_trajs": {
     "line number": [
      121
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects": {
     "line number": [
      133
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame": {
     "line number": [
      130
     ]
    },
    "pyemma.coordinates.data.util.reader_utils.single_traj_from_n_files": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_save_trajs.compare_coords_md_trajectory_objects": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.compare_coords_md_trajectory_objects"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.save_traj_w_md_load_frame": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.save_traj_w_md_load_frame"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.save_trajs": {
  "data": {
   "shadows": "pyemma.coordinates.api.save_trajs"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.single_traj_from_n_files": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.reader_utils.single_traj_from_n_files"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_save_trajs.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      251
     ]
    },
    "pyemma.coordinates.tests.test_serialization.unittest": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_serialization.NumPyFileReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.PyCSVReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.PyCSVReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_serialization.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.compare": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      62,
      63
     ]
    },
    "isinstance": {
     "line number": [
      64,
      66
     ]
    },
    "list": {
     "line number": [
      66
     ]
    },
    "numpy.ndarray": {
     "line number": [
      64
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      65
     ]
    },
    "pyemma.coordinates.tests.test_serialization.pyemma": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.setUp": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_serialization.tempfile": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.setUpClass": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      32
     ]
    },
    "numpy.random.random": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.tearDown": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_serialization.os": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_clustering_kmeans": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      76
     ]
    },
    "pyemma.coordinates.cluster_kmeans": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_clustering_minibatch_kmeans": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "pyemma.coordinates.cluster_mini_batch_kmeans": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_clustering_regspace": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_serialization.pyemma": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_clustering_uniform_time": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_serialization.pyemma": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_csv_reader": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      207
     ]
    },
    "numpy.savetxt": {
     "line number": [
      212,
      213
     ]
    },
    "pyemma.coordinates.data.PyCSVReader": {
     "line number": [
      219
     ]
    },
    "pyemma.coordinates.tests.test_serialization.os": {
     "line number": [
      211,
      211
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_feature_reader": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      191
     ]
    },
    "pyemma.coordinates.tests.test_serialization.pyemma": {
     "line number": [
      186
     ]
    },
    "pyemma.datasets.get_bpti_test_data": {
     "line number": [
      184,
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_featurizer": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_serialization.pyemma": {
     "line number": [
      174
     ]
    },
    "pyemma.datasets.get_bpti_test_data": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_featurizer_empty": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_serialization.pyemma": {
     "line number": [
      165
     ]
    },
    "pyemma.datasets.get_bpti_test_data": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_fragmented_reader": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      226
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      241
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      237
     ]
    },
    "pyemma.coordinates.tests.test_serialization.pkg_resources": {
     "line number": [
      226
     ]
    },
    "pyemma.coordinates.tests.util.create_traj": {
     "line number": [
      231
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      229
     ]
    },
    "range": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_h5_reader": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      244
     ]
    },
    "dict": {
     "line number": [
      245
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      248
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      246
     ]
    },
    "pyemma.coordinates.tests.test_serialization.pkg_resources": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_numpy_reader": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      196
     ]
    },
    "numpy.save": {
     "line number": [
      200,
      201
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      203
     ]
    },
    "pyemma.coordinates.tests.test_serialization.os": {
     "line number": [
      199,
      199
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_pca": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_serialization.pyemma": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_pca_estimated": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_serialization.pyemma": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_save_chain": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_serialization.pyemma": {
     "line number": [
      149,
      150,
      151,
      154,
      159
     ]
    },
    "pyemma.datasets.get_bpti_test_data": {
     "line number": [
      149,
      149
     ]
    },
    "type": {
     "line number": [
      155,
      156,
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_tica": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_serialization.pyemma": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.TestSerializationCoordinates.test_tica_estimated": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_serialization.pyemma": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_serialization.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.get_bpti_test_data": {
  "data": {
   "shadows": "pyemma.datasets.get_bpti_test_data"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_serialization.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      207
     ]
    },
    "logging.getLogger": {
     "line number": [
      33
     ]
    },
    "pyemma.coordinates.tests.test_source.unittest": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_source.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.H5Reader": {
  "data": {
   "shadows": "pyemma.coordinates.data.h5_reader.H5Reader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.MDFeaturizer": {
  "data": {
   "shadows": "pyemma.coordinates.data.MDFeaturizer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.TestSource": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_source.unittest": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_source.TestSource.setUp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_source.os": {
     "line number": [
      52,
      53,
      55,
      56
     ]
    },
    "pyemma.coordinates.tests.test_source.pkg_resources": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSource.test_h5_mdtraj_vs_plain": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      130
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      122,
      131
     ]
    },
    "pyemma.coordinates.data.FeatureReader": {
     "line number": [
      124
     ]
    },
    "pyemma.coordinates.data.h5_reader.H5Reader": {
     "line number": [
      132
     ]
    },
    "pyemma.coordinates.tests.test_source.convert_traj": {
     "line number": [
      121
     ]
    },
    "pyemma.coordinates.tests.test_source.h5py": {
     "line number": [
      129
     ]
    },
    "pyemma.coordinates.tests.test_source.os": {
     "line number": [
      128
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSource.test_invalid_files": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      112,
      114,
      117
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      112,
      114,
      117
     ]
    },
    "pyemma.coordinates.tests.test_source.os": {
     "line number": [
      116,
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSource.test_invalid_input": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      99,
      101,
      104,
      106,
      108
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      99,
      101,
      104,
      106,
      108
     ]
    },
    "pyemma.coordinates.data.MDFeaturizer": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSource.test_read_multiple_files_featurizer": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "pyemma.coordinates.api.source": {
     "line number": [
      70
     ]
    },
    "pyemma.coordinates.data.MDFeaturizer": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSource.test_read_multiple_files_topology_file": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "pyemma.coordinates.api.source": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSource.test_read_single_file_featurizer": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "pyemma.coordinates.api.source": {
     "line number": [
      89
     ]
    },
    "pyemma.coordinates.data.MDFeaturizer": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSource.test_read_single_file_toplogy_file": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "pyemma.coordinates.api.source": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_source.unittest": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.setUp": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.setUpClass": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      139
     ]
    },
    "classmethod": {
     "line number": [
      137
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      142
     ]
    },
    "pyemma.coordinates.tests.test_source.os": {
     "line number": [
      139,
      140,
      141
     ]
    },
    "pyemma.coordinates.tests.test_source.pkg_resources": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_chunksize": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "pyemma.util.types.is_int": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_describe": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "pyemma.util.types.is_list_of_string": {
     "line number": [
      152
     ]
    },
    "pyemma.util.types.is_string": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_dimension": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "pyemma.util.types.is_int": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_featurizer": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_get_output": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "len": {
     "line number": [
      164
     ]
    },
    "pyemma.util.types.is_float_matrix": {
     "line number": [
      165
     ]
    },
    "pyemma.util.types.is_list": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_in_memory": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      170
     ]
    },
    "isinstance": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_iterator": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "pyemma.util.types.is_float_matrix": {
     "line number": [
      177
     ]
    },
    "pyemma.util.types.is_int": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_n_frames_total": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_number_of_trajectories": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_output_type": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_topfile": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "pyemma.util.types.is_string": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_trajectory_length": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_trajectory_lengths": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "len": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.TestSourceCallAll.test_trajfiles": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "pyemma.util.types.is_list_of_string": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.convert_traj": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "dir": {
     "line number": [
      39,
      43,
      43
     ]
    },
    "format": {
     "line number": [
      43
     ]
    },
    "pyemma.coordinates.tests.test_source.os": {
     "line number": [
      40
     ]
    },
    "pyemma.coordinates.tests.test_source.subprocess": {
     "line number": [
      45
     ]
    },
    "pyemma.coordinates.tests.test_source.sys": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_source.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_source.mdconvert": {
  "data": {
   "shadows": "mdtraj.scripts.mdconvert"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_source.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.tests.test_sources_merger.SourcesMerger": {
  "data": {
   "shadows": "pyemma.coordinates.data.sources_merger.SourcesMerger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.TestSourcesMerger": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_sources_merger.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_sources_merger.TestSourcesMerger._get_output_compare": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "collections.defaultdict": {
     "line number": [
      36
     ]
    },
    "enumerate": {
     "line number": [
      38
     ]
    },
    "len": {
     "line number": [
      31
     ]
    },
    "list": {
     "line number": [
      36
     ]
    },
    "numpy.float32": {
     "line number": [
      40,
      41
     ]
    },
    "numpy.hstack": {
     "line number": [
      40
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      33,
      41
     ]
    },
    "range": {
     "line number": [
      40
     ]
    },
    "sum": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_sources_merger.TestSourcesMerger.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "glob.glob": {
     "line number": [
      17
     ]
    },
    "numpy.random.random": {
     "line number": [
      24
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      19,
      25
     ]
    },
    "pyemma.coordinates.tests.test_sources_merger.os": {
     "line number": [
      18
     ]
    },
    "pyemma.coordinates.tests.test_sources_merger.pkg_resources": {
     "line number": [
      15
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_sources_merger.TestSourcesMerger.test_combined_output": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "pyemma.coordinates.data.sources_merger.SourcesMerger": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_sources_merger.TestSourcesMerger.test_fragmented_trajs": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      65,
      66,
      74
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      74
     ]
    },
    "numpy.concatenate": {
     "line number": [
      75
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      77
     ]
    },
    "pyemma.coordinates.data.sources_merger.SourcesMerger": {
     "line number": [
      71
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      68,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_sources_merger.TestSourcesMerger.test_non_matching_lengths": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      59
     ]
    },
    "pyemma.coordinates.data.sources_merger.SourcesMerger": {
     "line number": [
      60
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_sources_merger.TestSourcesMerger.test_ra_stride": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      51
     ]
    },
    "pyemma.coordinates.data.sources_merger.SourcesMerger": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_sources_merger.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.tica": {
  "data": {
   "shadows": "pyemma.coordinates.tica"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_sources_merger.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_streaming_transformer": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.MyTransformer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.MyTransformer._transform_array": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.MyTransformer.describe": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.MyTransformer.dimension": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.StreamingTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.TestStreamingTransformer": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_streaming_transformer.unittest": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.TestStreamingTransformer.test_get_output": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      20
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      24
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      22
     ]
    },
    "pyemma.coordinates.tests.test_streaming_transformer.MyTransformer": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_streaming_transformer.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_stride": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      120
     ]
    },
    "pyemma.coordinates.tests.test_stride.unittest": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_stride.TestStride": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_stride.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_stride.TestStride.setUpClass": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      32
     ]
    },
    "int": {
     "line number": [
      47
     ]
    },
    "numpy.arange": {
     "line number": [
      50
     ]
    },
    "numpy.float32": {
     "line number": [
      48
     ]
    },
    "numpy.random.rand": {
     "line number": [
      47
     ]
    },
    "numpy.random.randn": {
     "line number": [
      48
     ]
    },
    "open": {
     "line number": [
      39
     ]
    },
    "print": {
     "line number": [
      41
     ]
    },
    "pyemma.coordinates.tests.test_stride.mdtraj": {
     "line number": [
      52
     ]
    },
    "pyemma.coordinates.tests.test_stride.tempfile": {
     "line number": [
      38,
      55
     ]
    },
    "range": {
     "line number": [
      40,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_stride.TestStride.tearDownClass": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      113
     ]
    },
    "pyemma.coordinates.tests.test_stride.TestStride": {
     "line number": [
      118
     ]
    },
    "pyemma.coordinates.tests.test_stride.os": {
     "line number": [
      116,
      117
     ]
    },
    "super": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_stride.TestStride.test_content_data_in_memory": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "int": {
     "line number": [
      90
     ]
    },
    "numpy.all": {
     "line number": [
      100
     ]
    },
    "numpy.float32": {
     "line number": [
      91
     ]
    },
    "numpy.random.rand": {
     "line number": [
      90
     ]
    },
    "numpy.random.randn": {
     "line number": [
      91
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      94
     ]
    },
    "range": {
     "line number": [
      89,
      97
     ]
    },
    "zip": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_stride.TestStride.test_length_and_content_feature_reader_and_TICA": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      83
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      76
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      61
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      62
     ]
    },
    "range": {
     "line number": [
      60
     ]
    },
    "zip": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_stride.TestStride.test_parametrize_with_stride": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      110
     ]
    },
    "numpy.all": {
     "line number": [
      109
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      104
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      107
     ]
    },
    "range": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_stride.coor": {
  "data": {
   "shadows": "pyemma.coordinates"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_stride.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_stride.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_stride.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_stride.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_stride.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      636
     ]
    },
    "logging.getLogger": {
     "line number": [
      46
     ]
    },
    "pyemma.coordinates.tests.test_tica.unittest": {
     "line number": [
      637
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_tica.DataInMemory": {
  "data": {
   "shadows": "pyemma.coordinates.data.data_in_memory.DataInMemory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.MockLoggingHandler": {
  "data": {
   "shadows": "pyemma.util.testing_tools.MockLoggingHandler"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.TICA": {
  "data": {
   "shadows": "pyemma.coordinates.transform.TICA"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_tica.unittest": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman.setUpClass": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      451
     ]
    },
    "classmethod": {
     "line number": [
      442
     ]
    },
    "float": {
     "line number": [
      446
     ]
    },
    "numpy.abs": {
     "line number": [
      500,
      506,
      570
     ]
    },
    "numpy.dot": {
     "line number": [
      479,
      480,
      482,
      483,
      484,
      485,
      496,
      496,
      498,
      502,
      502,
      504,
      509,
      509,
      510,
      519,
      532,
      534,
      553,
      554,
      555,
      556,
      563,
      563,
      568
     ]
    },
    "numpy.eye": {
     "line number": [
      511,
      518
     ]
    },
    "numpy.hstack": {
     "line number": [
      511,
      533
     ]
    },
    "numpy.load": {
     "line number": [
      451
     ]
    },
    "numpy.log": {
     "line number": [
      500,
      506,
      570
     ]
    },
    "numpy.ones": {
     "line number": [
      533
     ]
    },
    "numpy.real": {
     "line number": [
      517
     ]
    },
    "numpy.sum": {
     "line number": [
      465,
      466,
      541,
      542
     ]
    },
    "numpy.vstack": {
     "line number": [
      510
     ]
    },
    "numpy.zeros": {
     "line number": [
      446,
      461,
      462,
      473,
      474,
      475,
      476,
      524,
      537,
      547,
      548
     ]
    },
    "pyemma._ext.variational.solvers.direct.sort_by_norm": {
     "line number": [
      497,
      503,
      516,
      567
     ]
    },
    "pyemma.coordinates.estimation.koopman._KoopmanWeights": {
     "line number": [
      527
     ]
    },
    "pyemma.coordinates.tests.test_tica.pkg_resources": {
     "line number": [
      451
     ]
    },
    "pyemma.coordinates.tests.test_tica.scale_eigenvectors": {
     "line number": [
      499,
      505,
      569
     ]
    },
    "pyemma.coordinates.tests.test_tica.transform_C0": {
     "line number": [
      492,
      493,
      562
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      573,
      574,
      576
     ]
    },
    "range": {
     "line number": [
      447
     ]
    },
    "scipy.linalg.eig": {
     "line number": [
      496,
      502,
      515
     ]
    },
    "scipy.linalg.eigh": {
     "line number": [
      566
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman.test_C0": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      584,
      585,
      586
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman.test_Ct": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      589,
      590,
      591
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman.test_eigenvalues": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      594,
      595,
      596,
      597
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman.test_eigenvectors": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      600,
      601
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman.test_get_output": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      605,
      608
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      610,
      611
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestKoopman.test_mean_x": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      579,
      580,
      581
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAErrors": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_tica.unittest": {
     "line number": [
      614
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAErrors.test_constant_features": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      617
     ]
    },
    "numpy.zeros": {
     "line number": [
      616
     ]
    },
    "pyemma._ext.variational.util.ZeroRankError": {
     "line number": [
      620,
      622,
      628,
      632
     ]
    },
    "pyemma.coordinates.transform.TICA": {
     "line number": [
      618,
      631
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_tica.unittest": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.setUp": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.setUpClass": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      198
     ]
    },
    "float": {
     "line number": [
      221,
      222,
      227,
      228,
      230,
      231
     ]
    },
    "msmtools.generation.generate_traj": {
     "line number": [
      212
     ]
    },
    "numpy.array": {
     "line number": [
      204,
      207,
      207,
      208,
      208
     ]
    },
    "numpy.dot": {
     "line number": [
      226,
      227,
      228,
      229,
      230,
      231
     ]
    },
    "numpy.random.randn": {
     "line number": [
      215,
      216
     ]
    },
    "numpy.sum": {
     "line number": [
      220,
      221,
      222
     ]
    },
    "numpy.zeros": {
     "line number": [
      210
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      234
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      235,
      237
     ]
    },
    "pyemma.util.contexts.numpy_random_seed": {
     "line number": [
      200
     ]
    },
    "range": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_chunksize": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "pyemma.util.types.is_int": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_cov": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      269,
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_cov_tau": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      273,
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_cumvar": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "len": {
     "line number": [
      260,
      262
     ]
    },
    "numpy.allclose": {
     "line number": [
      261,
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_data_producer": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_describe": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "pyemma.coordinates.tica": {
     "line number": [
      283
     ]
    },
    "pyemma.util.types.is_list_of_string": {
     "line number": [
      281
     ]
    },
    "pyemma.util.types.is_string": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_dimension": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      294,
      297,
      299
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      290,
      292,
      295,
      298,
      300
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      290,
      292
     ]
    },
    "pyemma.coordinates.tica.dimension": {
     "line number": [
      291,
      293
     ]
    },
    "pyemma.util.types.is_int": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_eigenvalues": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "eval": {
     "line number": [
      303,
      305,
      306,
      307
     ]
    },
    "len": {
     "line number": [
      305,
      310
     ]
    },
    "numpy.abs": {
     "line number": [
      306,
      311
     ]
    },
    "numpy.max": {
     "line number": [
      306,
      311
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      307,
      312
     ]
    },
    "pyemma._ext.variational.solvers.direct.eig_corr": {
     "line number": [
      304,
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_eigenvectors": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      317,
      321
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      318,
      322
     ]
    },
    "pyemma._ext.variational.solvers.direct.eig_corr": {
     "line number": [
      316,
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_feature_correlation_MD": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      387
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      398
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      390
     ]
    },
    "pyemma.coordinates.tests.test_tica.mycorrcoef": {
     "line number": [
      396
     ]
    },
    "pyemma.coordinates.tests.test_tica.os": {
     "line number": [
      387,
      388,
      389
     ]
    },
    "pyemma.coordinates.tests.test_tica.pkg_resources": {
     "line number": [
      387
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_feature_correlation_data": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "len": {
     "line number": [
      403,
      404,
      405
     ]
    },
    "numpy.linspace": {
     "line number": [
      403
     ]
    },
    "numpy.random.randn": {
     "line number": [
      404,
      405
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      414
     ]
    },
    "numpy.zeros": {
     "line number": [
      402
     ]
    },
    "pyemma.coordinates.tests.test_tica.mycorrcoef": {
     "line number": [
      413
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_get_output": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "len": {
     "line number": [
      327
     ]
    },
    "pyemma.util.types.is_float_matrix": {
     "line number": [
      328
     ]
    },
    "pyemma.util.types.is_list": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_in_memory": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      333
     ]
    },
    "isinstance": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_iterator": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "pyemma.util.types.is_float_matrix": {
     "line number": [
      339
     ]
    },
    "pyemma.util.types.is_int": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_kinetic_map": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      257
     ]
    },
    "numpy.max": {
     "line number": [
      257
     ]
    },
    "numpy.var": {
     "line number": [
      255
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      253
     ]
    },
    "vars": {
     "line number": [
      255,
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_lag": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "pyemma.util.types.is_int": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_map": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_mean": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "len": {
     "line number": [
      357
     ]
    },
    "numpy.max": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_mu": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "len": {
     "line number": [
      362
     ]
    },
    "numpy.max": {
     "line number": [
      363
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_n_frames_total": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_number_of_trajectories": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_output_type": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_timescales": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      418
     ]
    },
    "numpy.allclose": {
     "line number": [
      419
     ]
    },
    "numpy.log": {
     "line number": [
      418
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_too_short_traj_partial_fit": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "len": {
     "line number": [
      435
     ]
    },
    "numpy.empty": {
     "line number": [
      422,
      422
     ]
    },
    "pyemma.coordinates.tests.test_tica.logging": {
     "line number": [
      428
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      424
     ]
    },
    "pyemma.util.testing_tools.MockLoggingHandler": {
     "line number": [
      426
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_trajectory_length": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_trajectory_lengths": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "len": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICAExtensive.test_variances": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      248,
      249
     ]
    },
    "numpy.max": {
     "line number": [
      248,
      249
     ]
    },
    "numpy.var": {
     "line number": [
      246,
      247
     ]
    },
    "vars": {
     "line number": [
      246,
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_tica.unittest": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      88
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      89
     ]
    },
    "pyemma.util.contexts.numpy_random_seed": {
     "line number": [
      87
     ]
    },
    "pyemma.util.types.is_float_matrix": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.testChunksizeResultsTica": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      146
     ]
    },
    "numpy.random.seed": {
     "line number": [
      145
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      161,
      162
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      151
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      149,
      157
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_MD_data": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      98
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      101
     ]
    },
    "pyemma.coordinates.tests.test_tica.os": {
     "line number": [
      98,
      99,
      100
     ]
    },
    "pyemma.coordinates.tests.test_tica.pkg_resources": {
     "line number": [
      98
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_commute_map": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      190
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_default_cs": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "pyemma.coordinates.tica": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_duplicated_data": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      114,
      115
     ]
    },
    "numpy.hstack": {
     "line number": [
      108
     ]
    },
    "numpy.newaxis": {
     "line number": [
      108
     ]
    },
    "numpy.random.randn": {
     "line number": [
      107
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      112
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_duplicated_data_in_fit_transform": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      124
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      129
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      126
     ]
    },
    "pyemma.coordinates.data.data_in_memory.DataInMemory": {
     "line number": [
      125
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      126
     ]
    },
    "pyemma.coordinates.tica.fit_transform": {
     "line number": [
      128
     ]
    },
    "pyemma.coordinates.tica.get_output": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_fit_transform": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      118
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      121
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      121
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      119
     ]
    },
    "pyemma.coordinates.tica.fit_transform": {
     "line number": [
      120
     ]
    },
    "pyemma.coordinates.transform.TICA": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_in_memory": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      165
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      166
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_pipelining_sklearn_compat": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      184
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      187
     ]
    },
    "pyemma.coordinates.transform.TICA": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_singular_zeros": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      139,
      140
     ]
    },
    "numpy.hstack": {
     "line number": [
      135
     ]
    },
    "numpy.random.randn": {
     "line number": [
      134
     ]
    },
    "numpy.zeros": {
     "line number": [
      135
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_too_short_trajs": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      174
     ]
    },
    "numpy.empty": {
     "line number": [
      173
     ]
    },
    "pyemma.coordinates.tica": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.TestTICA_Basic.test_with_skip": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      178
     ]
    },
    "pyemma.coordinates.api.tica": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.ZeroRankError": {
  "data": {
   "shadows": "pyemma._ext.variational.util.ZeroRankError"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica._KoopmanWeights": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.koopman._KoopmanWeights"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica._internal_tica": {
  "data": {
   "shadows": "pyemma.coordinates.transform.TICA"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.eig_corr": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.eig_corr"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_tica.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.msmgen": {
  "data": {
   "shadows": "msmtools.generation"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.mycorrcoef": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      59,
      62
     ]
    },
    "numpy.float64": {
     "line number": [
      50,
      51
     ]
    },
    "numpy.mean": {
     "line number": [
      52,
      52,
      53,
      53
     ]
    },
    "numpy.newaxis": {
     "line number": [
      63
     ]
    },
    "numpy.sqrt": {
     "line number": [
      63,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.numpy_random_seed": {
  "data": {
   "shadows": "pyemma.util.contexts.numpy_random_seed"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.scale_eigenvectors": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      79
     ]
    },
    "numpy.argmax": {
     "line number": [
      79
     ]
    },
    "numpy.sign": {
     "line number": [
      80
     ]
    },
    "range": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.scl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.sort_by_norm": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.sort_by_norm"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.tica": {
  "data": {
   "shadows": "pyemma.coordinates.tica"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.transform_C0": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      70
     ]
    },
    "numpy.diag": {
     "line number": [
      74
     ]
    },
    "numpy.dot": {
     "line number": [
      74
     ]
    },
    "numpy.maximum": {
     "line number": [
      68
     ]
    },
    "numpy.min": {
     "line number": [
      67
     ]
    },
    "numpy.minimum": {
     "line number": [
      67
     ]
    },
    "numpy.where": {
     "line number": [
      70
     ]
    },
    "pyemma._ext.variational.solvers.direct.sort_by_norm": {
     "line number": [
      69
     ]
    },
    "pyemma.coordinates.tests.test_tica.scale_eigenvectors": {
     "line number": [
      73
     ]
    },
    "scipy.linalg.eigh": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_tica.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_tica.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      376
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.unittest": {
     "line number": [
      377
     ]
    },
    "pyemma.datasets.get_bpti_test_data": {
     "line number": [
      48,
      49
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.Config": {
  "data": {
   "shadows": "pyemma.util._config.Config"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.ConfigDirectoryException": {
  "data": {
   "shadows": "pyemma.util.exceptions.ConfigDirectoryException"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.DictDB": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_backends.DictDB"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.FeatureReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.feature_reader.FeatureReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.NumPyFileReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.numpy_filereader.NumPyFileReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.PyCSVReader": {
  "data": {
   "shadows": "pyemma.coordinates.data.py_csv_reader.PyCSVReader"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.SqliteDB": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_backends.SqliteDB"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_traj_info_cache.unittest": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.setUp": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache": {
     "line number": [
      61
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache._instance": {
     "line number": [
      64
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.tempfile": {
     "line number": [
      59,
      60
     ]
    },
    "pyemma.util.config.use_trajectory_lengths_cache": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.setUpClass": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      53
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.instance": {
     "line number": [
      55
     ]
    },
    "pyemma.util.config.use_trajectory_lengths_cache": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.tearDown": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.test_traj_info_cache.os": {
     "line number": [
      69
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.shutil": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.tearDownClass": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      74
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache._instance": {
     "line number": [
      76
     ]
    },
    "pyemma.util.config.use_trajectory_lengths_cache": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_corrupted_db": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "len": {
     "line number": [
      243
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      247
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache": {
     "line number": [
      242
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.pdbfile": {
     "line number": [
      247
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.warnings": {
     "line number": [
      240,
      241
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.xtcfiles": {
     "line number": [
      247,
      248
     ]
    },
    "str": {
     "line number": [
      244
     ]
    },
    "tempfile.NamedTemporaryFile": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_csvreader": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      166
     ]
    },
    "numpy.savetxt": {
     "line number": [
      169
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      178
     ]
    },
    "open": {
     "line number": [
      172
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader": {
     "line number": [
      175
     ]
    },
    "pyemma.coordinates.data.py_csv_reader.PyCSVReader.DEFAULT_OPEN_MODE": {
     "line number": [
      172
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.os": {
     "line number": [
      180
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.tempfile": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_data_in_mem": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "numpy.empty": {
     "line number": [
      211
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_exceptions": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      122
     ]
    },
    "ValueError": {
     "line number": [
      105,
      112
     ]
    },
    "chr": {
     "line number": [
      103
     ]
    },
    "numpy.array": {
     "line number": [
      118
     ]
    },
    "numpy.random.randint": {
     "line number": [
      103
     ]
    },
    "numpy.save": {
     "line number": [
      119
     ]
    },
    "open": {
     "line number": [
      120
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      106,
      113,
      123
     ]
    },
    "tempfile.NamedTemporaryFile": {
     "line number": [
      110,
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_feature_reader_xyz": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "len": {
     "line number": [
      200
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.mdtraj": {
     "line number": [
      199
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.pdbfile": {
     "line number": [
      199,
      206
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.pyemma": {
     "line number": [
      206
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.xtcfiles": {
     "line number": [
      199
     ]
    },
    "tempfile.NamedTemporaryFile": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_featurereader_xtc": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      140
     ]
    },
    "len": {
     "line number": [
      138
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      143
     ]
    },
    "pyemma.coordinates.data.feature_reader.FeatureReader": {
     "line number": [
      128
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.mdtraj": {
     "line number": [
      137
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.pdbfile": {
     "line number": [
      128
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.xtcfiles": {
     "line number": [
      128,
      131,
      136
     ]
    },
    "pyemma.util.contexts.settings": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_fragmented_reader": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      183
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      195
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      193
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.pkg_resources": {
     "line number": [
      183
     ]
    },
    "pyemma.coordinates.tests.util.create_traj": {
     "line number": [
      188
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      186
     ]
    },
    "range": {
     "line number": [
      187
     ]
    },
    "sum": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_get_instance": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache.instance": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_in_memory_db": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "pyemma.coordinates.data.util.traj_info_backends.SqliteDB": {
     "line number": [
      328
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache": {
     "line number": [
      324
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.pdbfile": {
     "line number": [
      325
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.pyemma": {
     "line number": [
      325
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.xtcfiles": {
     "line number": [
      325,
      327
     ]
    },
    "pyemma.util.config._cfg_dir": {
     "line number": [
      323
     ]
    },
    "pyemma.util.config.cfg_dir": {
     "line number": [
      321,
      335
     ]
    },
    "pyemma.util.exceptions.ConfigDirectoryException": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_max_n_entries": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      263
     ]
    },
    "numpy.random.random": {
     "line number": [
      258
     ]
    },
    "numpy.save": {
     "line number": [
      265
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.os": {
     "line number": [
      264
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.pyemma": {
     "line number": [
      267
     ]
    },
    "pyemma.util.config.traj_info_max_entries": {
     "line number": [
      260
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      262
     ]
    },
    "range": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_max_size": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      277
     ]
    },
    "numpy.random.random": {
     "line number": [
      272
     ]
    },
    "numpy.savetxt": {
     "line number": [
      280
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.os": {
     "line number": [
      278,
      284
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.pyemma": {
     "line number": [
      282
     ]
    },
    "pyemma.util.config.traj_info_max_size": {
     "line number": [
      284
     ]
    },
    "pyemma.util.contexts.settings": {
     "line number": [
      276
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      276
     ]
    },
    "range": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_n_entries": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "len": {
     "line number": [
      255
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache._instance": {
     "line number": [
      253
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.pdbfile": {
     "line number": [
      254
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.pyemma": {
     "line number": [
      254
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.xtcfiles": {
     "line number": [
      254,
      255
     ]
    },
    "pyemma.util.config.use_trajectory_lengths_cache": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_no_sqlite": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "len": {
     "line number": [
      314
     ]
    },
    "meta_ldr": {
     "line number": [
      309
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.SqliteDB": {
     "line number": [
      313
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache": {
     "line number": [
      312
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.sys": {
     "line number": [
      297,
      309,
      317
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.warnings": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_no_sqlite.meta_ldr": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "object": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_no_sqlite.meta_ldr.find_module": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_no_sqlite.meta_ldr.load_module": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_no_working_directory": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "pyemma.coordinates.data.util.traj_info_backends.SqliteDB": {
     "line number": [
      289
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.pdbfile": {
     "line number": [
      292
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.pyemma": {
     "line number": [
      292
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.xtcfiles": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_npy_reader": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      151,
      162
     ]
    },
    "len": {
     "line number": [
      161
     ]
    },
    "numpy.empty": {
     "line number": [
      148
     ]
    },
    "numpy.save": {
     "line number": [
      153
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      163
     ]
    },
    "pyemma.coordinates.data.numpy_filereader.NumPyFileReader": {
     "line number": [
      156
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.os": {
     "line number": [
      152
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_old_db_conversion": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "hash": {
     "line number": [
      224
     ]
    },
    "numpy.save": {
     "line number": [
      221
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      223
     ]
    },
    "pyemma.coordinates.data.util.traj_info_backends.DictDB": {
     "line number": [
      226
     ]
    },
    "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache": {
     "line number": [
      219
     ]
    },
    "tempfile.NamedTemporaryFile": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_store_load_traj_info": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "numpy.random.random": {
     "line number": [
      86
     ]
    },
    "numpy.savetxt": {
     "line number": [
      92
     ]
    },
    "pyemma.coordinates.api.source": {
     "line number": [
      93
     ]
    },
    "pyemma.util._config.Config": {
     "line number": [
      88
     ]
    },
    "tempfile.NamedTemporaryFile": {
     "line number": [
      91
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TestTrajectoryInfoCache.test_stress": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "len": {
     "line number": [
      341
     ]
    },
    "numpy.empty": {
     "line number": [
      340
     ]
    },
    "numpy.save": {
     "line number": [
      342
     ]
    },
    "print": {
     "line number": [
      370
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.os": {
     "line number": [
      341,
      343
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.subprocess": {
     "line number": [
      351
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.sys": {
     "line number": [
      351
     ]
    },
    "pyemma.coordinates.tests.test_traj_info_cache.time": {
     "line number": [
      365
     ]
    },
    "range": {
     "line number": [
      341,
      351
     ]
    },
    "zip": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.TrajectoryInfoCache": {
  "data": {
   "shadows": "pyemma.coordinates.data.util.traj_info_cache.TrajectoryInfoCache"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.api": {
  "data": {
   "shadows": "pyemma.coordinates.api"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.config": {
  "data": {
   "shadows": "pyemma.util.config"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.create_traj": {
  "data": {
   "shadows": "pyemma.coordinates.tests.util.create_traj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.get_bpti_test_data": {
  "data": {
   "shadows": "pyemma.datasets.get_bpti_test_data"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.pdbfile": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.settings": {
  "data": {
   "shadows": "pyemma.util.contexts.settings"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.test_traj_info_cache.xtcfiles": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyemma.coordinates.tests.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.tests.util.DCDTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.core.trajectory.DCDTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.StreamingTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.TRRTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.core.trajectory.TRRTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.XTCTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.core.trajectory.XTCTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.create_dummy_pdb": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "open": {
     "line number": [
      44
     ]
    },
    "print": {
     "line number": [
      46
     ]
    },
    "pyemma.coordinates.tests.util.tempfile": {
     "line number": [
      43
     ]
    },
    "range": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_traj": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "dir": {
     "line number": [
      15
     ]
    },
    "format": {
     "line number": [
      15
     ]
    },
    "numpy.arange": {
     "line number": [
      16,
      24
     ]
    },
    "numpy.array": {
     "line number": [
      23
     ]
    },
    "pyemma.coordinates.tests.util.get_top": {
     "line number": [
      19
     ]
    },
    "pyemma.coordinates.tests.util.mdtraj": {
     "line number": [
      21
     ]
    },
    "pyemma.coordinates.tests.util.tempfile": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_trajectory_csv": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "numpy.savetxt": {
     "line number": [
      32
     ]
    },
    "pyemma.coordinates.tests.util.tempfile": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_trajectory_dcd": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "mdtraj.core.trajectory.DCDTrajectoryFile": {
     "line number": [
      85
     ]
    },
    "pyemma.coordinates.tests.util.tempfile": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_trajectory_h5": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "pyemma.coordinates.tests.util.h5py": {
     "line number": [
      75
     ]
    },
    "pyemma.coordinates.tests.util.tempfile": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_trajectory_numpy": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.save": {
     "line number": [
      38
     ]
    },
    "pyemma.coordinates.tests.util.tempfile": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_trajectory_trr": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "mdtraj.core.trajectory.TRRTrajectoryFile": {
     "line number": [
      54
     ]
    },
    "pyemma.coordinates.tests.util.tempfile": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_trajectory_xtc": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "mdtraj.core.trajectory.XTCTrajectoryFile": {
     "line number": [
      65
     ]
    },
    "pyemma.coordinates.tests.util.tempfile": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_transform": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "IdentityTransform": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_transform.IdentityTransform": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingTransformer": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.tests.util.create_transform.IdentityTransform._transform_array": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_transform.IdentityTransform.describe": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.create_transform.IdentityTransform.dimension": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.get_top": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      11
     ]
    },
    "pyemma.coordinates.tests.util.pkg_resources": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.tests.util.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.coordinates.tests.util.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.transform._tica_base": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.transform._tica_base.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform._tica_base.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform._tica_base.StreamingEstimationTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform._tica_base.TICABase": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.transform._tica_base.TICABase._transform_array": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.cov": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.cov_tau": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.cumvar": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "property": {
     "line number": [
      157
     ]
    },
    "pyemma.coordinates.transform._tica_base._lazy_estimation": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.dim": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "int": {
     "line number": [
      58,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.dimension": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      113
     ]
    },
    "len": {
     "line number": [
      106
     ]
    },
    "min": {
     "line number": [
      108
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.eigenvalues": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "property": {
     "line number": [
      135
     ]
    },
    "pyemma.coordinates.transform._tica_base._lazy_estimation": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.eigenvectors": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "property": {
     "line number": [
      146
     ]
    },
    "pyemma.coordinates.transform._tica_base._lazy_estimation": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.feature_TIC_correlation": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      220
     ]
    },
    "numpy.dot": {
     "line number": [
      221
     ]
    },
    "numpy.newaxis": {
     "line number": [
      221
     ]
    },
    "numpy.sqrt": {
     "line number": [
      220
     ]
    },
    "property": {
     "line number": [
      199
     ]
    },
    "pyemma.coordinates.transform._tica_base._lazy_estimation": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.lag": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.mean": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.model": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      87
     ]
    },
    "abc.abstractproperty": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.output_type": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      170
     ]
    },
    "numpy.allclose": {
     "line number": [
      171
     ]
    },
    "numpy.complex64": {
     "line number": [
      174
     ]
    },
    "numpy.imag": {
     "line number": [
      171
     ]
    },
    "numpy.isreal": {
     "line number": [
      170
     ]
    },
    "pyemma.coordinates.transform._tica_base.TICABase": {
     "line number": [
      172
     ]
    },
    "super": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.timescales": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      197
     ]
    },
    "numpy.log": {
     "line number": [
      197
     ]
    },
    "property": {
     "line number": [
      176
     ]
    },
    "pyemma.coordinates.transform._tica_base._lazy_estimation": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICABase.var_cutoff": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      75
     ]
    },
    "ValueError": {
     "line number": [
      78,
      81
     ]
    },
    "float": {
     "line number": [
      73
     ]
    },
    "hasattr": {
     "line number": [
      74
     ]
    },
    "pyemma.coordinates.transform._tica_base.TICABase": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.TICAModelBase": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "pyemma._base.model.Model": {
     "line number": [
      22
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.transform._tica_base.TICAModelBase.set_model_params": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.__author__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pyemma.coordinates.transform._tica_base._lazy_estimation": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "decorator.decorator": {
     "line number": [
      13
     ]
    },
    "func": {
     "line number": [
      19
     ]
    },
    "isinstance": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform._tica_base.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform._tica_base.decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform._tica_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.transform.pca.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.PCA": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      56
     ]
    },
    "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer": {
     "line number": [
      56
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.transform.pca.PCA.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      104
     ]
    },
    "pyemma.coordinates.transform.pca.PCA": {
     "line number": [
      101
     ]
    },
    "pyemma.coordinates.transform.pca.PCAModel": {
     "line number": [
      106
     ]
    },
    "pyemma.util.reflection.get_default_args": {
     "line number": [
      102
     ]
    },
    "super": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA._diagonalize": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "numpy.argsort": {
     "line number": [
      216
     ]
    },
    "numpy.cumsum": {
     "line number": [
      221
     ]
    },
    "numpy.linalg.eigh": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA._estimate": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA._init_covar": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      200
     ]
    },
    "int": {
     "line number": [
      198
     ]
    },
    "max": {
     "line number": [
      198
     ]
    },
    "pyemma._ext.variational.estimators.running_moments.running_covar": {
     "line number": [
      202
     ]
    },
    "pyemma.coordinates.transform.pca.math": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA._transform_array": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.cumvar": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.describe": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.dimension": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      124
     ]
    },
    "len": {
     "line number": [
      117
     ]
    },
    "min": {
     "line number": [
      119
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.eigenvalues": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.eigenvectors": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.feature_PC_correlation": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      193,
      194
     ]
    },
    "numpy.diag": {
     "line number": [
      193
     ]
    },
    "numpy.dot": {
     "line number": [
      195
     ]
    },
    "numpy.sqrt": {
     "line number": [
      193,
      194
     ]
    },
    "property": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.mean": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCA.partial_fit": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "pyemma.coordinates.source": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.PCAModel": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "pyemma._base.model.Model": {
     "line number": [
      47
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.transform.pca.PCAModel.set_model_params": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.StreamingEstimationTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyemma.coordinates.transform.pca.__author__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.coordinates.transform.pca._lazy_estimation": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "decorator.decorator": {
     "line number": [
      38
     ]
    },
    "func": {
     "line number": [
      44
     ]
    },
    "isinstance": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.pca.decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.get_default_args": {
  "data": {
   "shadows": "pyemma.util.reflection.get_default_args"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.running_covar": {
  "data": {
   "shadows": "pyemma._ext.variational.estimators.running_moments.running_covar"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.pca.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.transform.tica.LaggedCovariance": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.LaggedCovariance"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.TICA": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      38
     ]
    },
    "pyemma.coordinates.transform._tica_base.TICABase": {
     "line number": [
      38
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.transform.tica.TICA.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      122
     ]
    },
    "float": {
     "line number": [
      43
     ]
    },
    "pyemma.coordinates.transform.tica.TICA": {
     "line number": [
      120
     ]
    },
    "pyemma.coordinates.transform.tica.warnings": {
     "line number": [
      126
     ]
    },
    "super": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.tica.TICA._diagonalize": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      221
     ]
    },
    "numpy.abs": {
     "line number": [
      225,
      233
     ]
    },
    "numpy.cumsum": {
     "line number": [
      233
     ]
    },
    "numpy.log": {
     "line number": [
      225
     ]
    },
    "numpy.maximum": {
     "line number": [
      227
     ]
    },
    "numpy.pi": {
     "line number": [
      227
     ]
    },
    "numpy.sqrt": {
     "line number": [
      229
     ]
    },
    "numpy.tanh": {
     "line number": [
      227
     ]
    },
    "pyemma._ext.variational.solvers.direct.eig_corr": {
     "line number": [
      217
     ]
    },
    "pyemma._ext.variational.util.ZeroRankError": {
     "line number": [
      218,
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.tica.TICA._estimate": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      199
     ]
    },
    "pyemma.coordinates.estimation.covariance.LaggedCovariance": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.tica.TICA.describe": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.tica.TICA.estimate": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "pyemma.coordinates.transform.tica.TICA": {
     "line number": [
      158
     ]
    },
    "super": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.tica.TICA.model": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      140
     ]
    },
    "property": {
     "line number": [
      138
     ]
    },
    "pyemma.coordinates.transform._tica_base.TICAModelBase": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.tica.TICA.partial_fit": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      177
     ]
    },
    "pyemma.coordinates.estimation.covariance.LaggedCovariance": {
     "line number": [
      180
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.tica.TICABase": {
  "data": {
   "shadows": "pyemma.coordinates.transform._tica_base.TICABase"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.TICAModelBase": {
  "data": {
   "shadows": "pyemma.coordinates.transform._tica_base.TICAModelBase"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.ZeroRankError": {
  "data": {
   "shadows": "pyemma._ext.variational.util.ZeroRankError"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyemma.coordinates.transform.tica.eig_corr": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.eig_corr"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.tica.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.transform.vamp.LaggedCovariance": {
  "data": {
   "shadows": "pyemma.coordinates.estimation.covariance.LaggedCovariance"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.LaggedModelValidator": {
  "data": {
   "shadows": "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.StreamingEstimationTransformer": {
  "data": {
   "shadows": "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.VAMP": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      370
     ]
    },
    "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer": {
     "line number": [
      370
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.transform.vamp.VAMP.__init__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "float": {
     "line number": [
      380
     ]
    },
    "pyemma.coordinates.data._base.transformer.StreamingEstimationTransformer.__init__": {
     "line number": [
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP._estimate": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      604
     ]
    },
    "int": {
     "line number": [
      603
     ]
    },
    "isinstance": {
     "line number": [
      603
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP._init_covar": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      575
     ]
    },
    "hasattr": {
     "line number": [
      579
     ]
    },
    "pyemma.coordinates.estimation.covariance.LaggedCovariance": {
     "line number": [
      580,
      590
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP._transform_array": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      676,
      679
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.cktest": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      924,
      931
     ]
    },
    "pyemma.coordinates.transform.vamp.VAMPChapmanKolmogorovValidator": {
     "line number": [
      938
     ]
    },
    "pyemma.coordinates.transform.vamp.warnings": {
     "line number": [
      918
     ]
    },
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      928
     ]
    },
    "pyemma.util.types.ensure_ndarray_or_None": {
     "line number": [
      935
     ]
    },
    "str": {
     "line number": [
      924,
      931
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.cumvar": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": {
    "property": {
     "line number": [
      735
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.describe": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": {
    "str": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.dim": {
  "data": {
   "lineno": 541
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.dimension": {
  "data": {
   "lineno": 652
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.epsilon": {
  "data": {
   "lineno": 554
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.expectation": {
  "data": {
   "lineno": 757
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.model": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      595
     ]
    },
    "property": {
     "line number": [
      592
     ]
    },
    "pyemma.coordinates.transform.vamp.VAMPModel": {
     "line number": [
      596
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.partial_fit": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      638
     ]
    },
    "int": {
     "line number": [
      635
     ]
    },
    "isinstance": {
     "line number": [
      635
     ]
    },
    "pyemma.coordinates.source": {
     "line number": [
      633
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.scaling": {
  "data": {
   "lineno": 569
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.score": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": {
    "pyemma._ext.sklearn.base.clone": {
     "line number": [
      994
     ]
    },
    "pyemma.coordinates.transform.vamp.VAMPModel": {
     "line number": [
      996
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.show_progress": {
  "data": {
   "lineno": 752
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.singular_values": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": {
    "property": {
     "line number": [
      683
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.singular_vectors_left": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": {
    "property": {
     "line number": [
      714
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMP.singular_vectors_right": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": {
    "property": {
     "line number": [
      693
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPChapmanKolmogorovValidator": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": {
    "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator": {
     "line number": [
      1004
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.transform.vamp.VAMPChapmanKolmogorovValidator.__init__": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": {
    "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.__init__": {
     "line number": [
      1066
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPChapmanKolmogorovValidator._compute_observables": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      1087,
      1089
     ]
    },
    "numpy.zeros": {
     "line number": [
      1087,
      1089
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPChapmanKolmogorovValidator._compute_observables_conf": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1096
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPChapmanKolmogorovValidator.statistics": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": {
    "min": {
     "line number": [
      1081
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "pyemma._base.model.Model": {
     "line number": [
      39
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.C00": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.C0t": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.Ctt": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.U": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "property": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.V": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "property": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel._cumvar": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.cumsum": {
     "line number": [
      119
     ]
    },
    "staticmethod": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel._diagonalize": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      282,
      291,
      292
     ]
    },
    "numpy.newaxis": {
     "line number": [
      296,
      297
     ]
    },
    "pyemma._ext.variational.solvers.direct.spd_inv_split": {
     "line number": [
      277,
      279
     ]
    },
    "pyemma.coordinates.transform.vamp.VAMPModel": {
     "line number": [
      289
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel._dimension": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "float": {
     "line number": [
      131,
      133
     ]
    },
    "isinstance": {
     "line number": [
      131,
      133
     ]
    },
    "min": {
     "line number": [
      132
     ]
    },
    "numpy.min": {
     "line number": [
      136
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      134
     ]
    },
    "pyemma.coordinates.transform.vamp.VAMPModel": {
     "line number": [
      134
     ]
    },
    "staticmethod": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.cumvar": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "property": {
     "line number": [
      123
     ]
    },
    "pyemma.coordinates.transform.vamp.VAMPModel": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.dimension": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      144
     ]
    },
    "int": {
     "line number": [
      141
     ]
    },
    "isinstance": {
     "line number": [
      141
     ]
    },
    "pyemma.coordinates.transform.vamp.warnings": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.expectation": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "numpy.concatenate": {
     "line number": [
      226
     ]
    },
    "numpy.diag": {
     "line number": [
      226
     ]
    },
    "numpy.linalg.matrix_power": {
     "line number": [
      241
     ]
    },
    "numpy.zeros": {
     "line number": [
      237,
      243,
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.scaling": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.score": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      363
     ]
    },
    "numpy.diag": {
     "line number": [
      360
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      356,
      358
     ]
    },
    "numpy.trace": {
     "line number": [
      361
     ]
    },
    "pyemma._ext.variational.solvers.direct.spd_inv_sqrt": {
     "line number": [
      351,
      353
     ]
    },
    "pyemma.util.linalg.mdot": {
     "line number": [
      354,
      361,
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.set_model_params": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.VAMPModel.singular_values": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "property": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.transform.vamp.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.coordinates.transform.vamp.clone_estimator": {
  "data": {
   "shadows": "pyemma._ext.sklearn.base.clone"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.ensure_ndarray": {
  "data": {
   "shadows": "pyemma.util.types.ensure_ndarray"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.ensure_ndarray_or_None": {
  "data": {
   "shadows": "pyemma.util.types.ensure_ndarray_or_None"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.mdot": {
  "data": {
   "shadows": "pyemma.util.linalg.mdot"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.source": {
  "data": {
   "shadows": "pyemma.coordinates.source"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.spd_inv_split": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.spd_inv_split"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.spd_inv_sqrt": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.spd_inv_sqrt"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "pyemma.coordinates.transform.vamp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.coordinates.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.util.patches": {
  "data": {
   "symbols_in_volume": {
    "collections.namedtuple": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.coordinates.util.patches.DCDTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.DCDTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.DTRTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.DTRTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.GroTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.GroTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.HDF5TrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.HDF5TrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.LAMMPSTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.LAMMPSTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.MDCRDTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.MDCRDTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.NetCDFTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.NetCDFTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.TRRTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.TRRTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.Topology": {
  "data": {
   "shadows": "mdtraj.Topology"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.TrajData": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyemma.coordinates.util.patches.Trajectory": {
  "data": {
   "shadows": "mdtraj.Trajectory"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.XTCTrajectoryFile": {
  "data": {
   "shadows": "mdtraj.formats.XTCTrajectoryFile"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches._TOPOLOGY_EXTS": {
  "data": {
   "shadows": "mdtraj.core.trajectory._TOPOLOGY_EXTS"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches._get_extension": {
  "data": {
   "shadows": "mdtraj.core.trajectory._get_extension"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches._join_traj_data": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "all": {
     "line number": [
      362,
      366,
      370
     ]
    },
    "map": {
     "line number": [
      358,
      363,
      367,
      371
     ]
    },
    "mdtraj.Trajectory": {
     "line number": [
      360
     ]
    },
    "numpy.concatenate": {
     "line number": [
      358,
      363,
      367,
      371
     ]
    },
    "operator.itemgetter": {
     "line number": [
      358,
      363,
      367,
      371
     ]
    },
    "pyemma.coordinates.util.patches.load_topology_cached": {
     "line number": [
      357
     ]
    },
    "tuple": {
     "line number": [
      358,
      363,
      367,
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches._load": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "functools.lru_cache": {
     "line number": [
      40
     ]
    },
    "mdtraj.core.trajectory.load_topology": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches._read_traj_data": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      313,
      327,
      329,
      331,
      338,
      340
     ]
    },
    "len": {
     "line number": [
      340,
      342,
      346,
      346
     ]
    },
    "mdtraj.Trajectory._distance_unit": {
     "line number": [
      319,
      349,
      351
     ]
    },
    "mdtraj.formats.DCDTrajectoryFile": {
     "line number": [
      338
     ]
    },
    "mdtraj.formats.DTRTrajectoryFile": {
     "line number": [
      340
     ]
    },
    "mdtraj.formats.GroTrajectoryFile": {
     "line number": [
      329
     ]
    },
    "mdtraj.formats.HDF5TrajectoryFile": {
     "line number": [
      340
     ]
    },
    "mdtraj.formats.LAMMPSTrajectoryFile": {
     "line number": [
      338
     ]
    },
    "mdtraj.formats.MDCRDTrajectoryFile": {
     "line number": [
      331
     ]
    },
    "mdtraj.formats.NetCDFTrajectoryFile": {
     "line number": [
      340
     ]
    },
    "mdtraj.formats.TRRTrajectoryFile": {
     "line number": [
      327
     ]
    },
    "mdtraj.formats.XTCTrajectoryFile": {
     "line number": [
      327
     ]
    },
    "mdtraj.utils.in_units_of": {
     "line number": [
      319,
      349,
      351
     ]
    },
    "numpy.ndarray": {
     "line number": [
      313
     ]
    },
    "numpy.ones_like": {
     "line number": [
      337
     ]
    },
    "pyemma.coordinates.util.patches.TrajData": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.cast_indices": {
  "data": {
   "shadows": "mdtraj.utils.validation.cast_indices"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.groupby": {
  "data": {
   "shadows": "itertools.groupby"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.in_units_of": {
  "data": {
   "shadows": "mdtraj.utils.in_units_of"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.iterload": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "int": {
     "line number": [
      57
     ]
    },
    "next": {
     "line number": [
      224
     ]
    },
    "object": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.coordinates.util.patches.iterload.__enter__": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.__exit__": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      123
     ]
    },
    "hasattr": {
     "line number": [
      157
     ]
    },
    "isinstance": {
     "line number": [
      144
     ]
    },
    "len": {
     "line number": [
      131,
      145
     ]
    },
    "mdtraj.core.trajectory._TOPOLOGY_EXTS": {
     "line number": [
      117
     ]
    },
    "mdtraj.core.trajectory._get_extension": {
     "line number": [
      114
     ]
    },
    "mdtraj.core.trajectory.open": {
     "line number": [
      141,
      143,
      150,
      152
     ]
    },
    "mdtraj.utils.validation.cast_indices": {
     "line number": [
      110
     ]
    },
    "numpy.arange": {
     "line number": [
      145
     ]
    },
    "numpy.ndarray": {
     "line number": [
      144
     ]
    },
    "pyemma.coordinates.util.patches.iterload": {
     "line number": [
      137,
      138
     ]
    },
    "pyemma.coordinates.util.patches.load_topology_cached": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.__iter__": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.__next__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      199
     ]
    },
    "IndexError": {
     "line number": [
      199
     ]
    },
    "StopIteration": {
     "line number": [
      191,
      200,
      220
     ]
    },
    "len": {
     "line number": [
      219
     ]
    },
    "mdtraj.core.trajectory._TOPOLOGY_EXTS": {
     "line number": [
      212
     ]
    },
    "next": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload._random_access_generator": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      271
     ]
    },
    "enumerate": {
     "line number": [
      240
     ]
    },
    "int": {
     "line number": [
      239
     ]
    },
    "itertools.groupby": {
     "line number": [
      240
     ]
    },
    "len": {
     "line number": [
      244,
      250,
      258,
      259,
      261,
      262
     ]
    },
    "list": {
     "line number": [
      241
     ]
    },
    "map": {
     "line number": [
      241
     ]
    },
    "min": {
     "line number": [
      258,
      261
     ]
    },
    "numpy.iinfo": {
     "line number": [
      239
     ]
    },
    "operator.itemgetter": {
     "line number": [
      241
     ]
    },
    "pyemma.coordinates.util.patches._join_traj_data": {
     "line number": [
      252,
      264,
      269
     ]
    },
    "pyemma.coordinates.util.patches._read_traj_data": {
     "line number": [
      248,
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.chunksize": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "min": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.close": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.is_ra_iter": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      179
     ]
    },
    "numpy.ndarray": {
     "line number": [
      179
     ]
    },
    "property": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.iterload.skip": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.load_topology": {
  "data": {
   "shadows": "mdtraj.core.trajectory.load_topology"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.load_topology_cached": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      52
     ]
    },
    "isinstance": {
     "line number": [
      46,
      48,
      50
     ]
    },
    "mdtraj.Topology": {
     "line number": [
      48
     ]
    },
    "mdtraj.Trajectory": {
     "line number": [
      50
     ]
    },
    "pyemma.coordinates.util.patches._load": {
     "line number": [
      47
     ]
    },
    "str": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.util.patches.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.md_open": {
  "data": {
   "shadows": "mdtraj.core.trajectory.open"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.mdtraj": {
  "data": {
   "shadows": "mdtraj"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.patches.trajectory_set_item": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      396
     ]
    },
    "TypeError": {
     "line number": [
      387
     ]
    },
    "isinstance": {
     "line number": [
      385,
      386,
      390
     ]
    },
    "len": {
     "line number": [
      391,
      393,
      395,
      395
     ]
    },
    "list": {
     "line number": [
      390
     ]
    },
    "numpy.index_exp": {
     "line number": [
      388
     ]
    },
    "pyemma.coordinates.util.patches.mdtraj": {
     "line number": [
      385,
      386
     ]
    },
    "slice": {
     "line number": [
      392
     ]
    },
    "tuple": {
     "line number": [
      390
     ]
    },
    "type": {
     "line number": [
      385,
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.util.stat": {
  "data": {},
  "type": "module"
 },
 "pyemma.coordinates.util.stat.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyemma.coordinates.util.stat.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.coordinates.util.stat.deprecated": {
  "data": {
   "shadows": "pyemma.util.annotators.deprecated"
  },
  "type": "import"
 },
 "pyemma.coordinates.util.stat.hist": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "pyemma.coordinates.util.stat.histogram": {
     "line number": [
      31
     ]
    },
    "pyemma.util.annotators.deprecated": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.util.stat.histogram": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "len": {
     "line number": [
      68,
      69
     ]
    },
    "numpy.array": {
     "line number": [
      85
     ]
    },
    "numpy.histogramdd": {
     "line number": [
      88
     ]
    },
    "numpy.inf": {
     "line number": [
      68,
      69
     ]
    },
    "numpy.linspace": {
     "line number": [
      83
     ]
    },
    "numpy.max": {
     "line number": [
      72,
      75
     ]
    },
    "numpy.min": {
     "line number": [
      77,
      80
     ]
    },
    "numpy.ones": {
     "line number": [
      68,
      69
     ]
    },
    "numpy.vstack": {
     "line number": [
      73,
      78
     ]
    },
    "numpy.zeros": {
     "line number": [
      85
     ]
    },
    "zip": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.coordinates.util.stat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.datasets": {
  "data": {},
  "type": "module"
 },
 "pyemma.datasets.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyemma.datasets.api": {
  "data": {},
  "type": "module"
 },
 "pyemma.datasets.api._DWS": {
  "data": {
   "shadows": "pyemma.datasets.double_well_thermo.DoubleWellSampler"
  },
  "type": "import"
 },
 "pyemma.datasets.api.__author__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pyemma.datasets.api.get_bpti_test_data": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      50
     ]
    },
    "glob.glob": {
     "line number": [
      49
     ]
    },
    "len": {
     "line number": [
      53
     ]
    },
    "pyemma.datasets.api.os": {
     "line number": [
      49
     ]
    },
    "pyemma.datasets.api.pkg_resources": {
     "line number": [
      46,
      47
     ]
    },
    "sorted": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.api.get_multi_temperature_data": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "pyemma.datasets.double_well_thermo.DoubleWellSampler": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.api.get_quadwell_data": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "PrinzModel": {
     "line number": [
      150
     ]
    },
    "RuntimeError": {
     "line number": [
      156
     ]
    },
    "numpy.all": {
     "line number": [
      155
     ]
    },
    "numpy.isfinite": {
     "line number": [
      155
     ]
    },
    "pyemma.datasets.api.warnings": {
     "line number": [
      153
     ]
    },
    "range": {
     "line number": [
      154
     ]
    },
    "tuple": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.api.get_umbrella_sampling_data": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "pyemma.datasets.double_well_thermo.DoubleWellSampler": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.api.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "pyemma.datasets.api.load_2well_discrete": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "DoubleWell_Discrete_Data": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.api.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.datasets.api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.datasets.api.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.datasets.api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.datasets.double_well_discrete": {
  "data": {},
  "type": "module"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "object": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "numpy.load": {
     "line number": [
      33
     ]
    },
    "pkg_resources.resource_filename": {
     "line number": [
      32
     ]
    },
    "pyemma.msm.markov_model": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.dtraj_T100K_dt10": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "property": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.dtraj_T100K_dt10_n": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "int": {
     "line number": [
      64
     ]
    },
    "len": {
     "line number": [
      66
     ]
    },
    "numpy.concatenate": {
     "line number": [
      65
     ]
    },
    "numpy.zeros": {
     "line number": [
      64
     ]
    },
    "range": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.dtraj_T100K_dt10_n2": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.dtraj_T100K_dt10_n2bad": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "property": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.dtraj_T100K_dt10_n2good": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "property": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.dtraj_T100K_dt10_n6good": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "property": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.generate_traj": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "msmtools.generation.generate_traj": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.generate_trajs": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "msmtools.generation.generate_trajs": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.msm": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "property": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.DoubleWell_Discrete_Data.transition_matrix": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "property": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_discrete.__author__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pyemma.datasets.double_well_discrete.generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.datasets.double_well_discrete.generate_trajs": {
  "data": {
   "shadows": "msmtools.generation.generate_trajs"
  },
  "type": "import"
 },
 "pyemma.datasets.double_well_discrete.markov_model": {
  "data": {
   "shadows": "pyemma.msm.markov_model"
  },
  "type": "import"
 },
 "pyemma.datasets.double_well_discrete.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.datasets.double_well_discrete.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "pyemma.datasets.double_well_thermo": {
  "data": {},
  "type": "module"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "object": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      37
     ]
    },
    "numpy.linspace": {
     "line number": [
      34
     ]
    },
    "numpy.log": {
     "line number": [
      39
     ]
    },
    "numpy.random": {
     "line number": [
      44
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler._bias": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      62
     ]
    },
    "numpy.asarray": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler._draw": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler._potential": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      54
     ]
    },
    "map": {
     "line number": [
      53
     ]
    },
    "numpy.asarray": {
     "line number": [
      53
     ]
    },
    "numpy.inf": {
     "line number": [
      56
     ]
    },
    "tuple": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler.centers": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "property": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler.mcmc": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "numpy.ascontiguousarray": {
     "line number": [
      83,
      83
     ]
    },
    "numpy.exp": {
     "line number": [
      76
     ]
    },
    "numpy.float64": {
     "line number": [
      69,
      70
     ]
    },
    "numpy.zeros": {
     "line number": [
      69,
      70
     ]
    },
    "range": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler.mt_sample": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      134
     ]
    },
    "numpy.asarray": {
     "line number": [
      127,
      133
     ]
    },
    "pyemma.coordinates.assign_to_centers": {
     "line number": [
      138
     ]
    },
    "range": {
     "line number": [
      122,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler.potential": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler.sample": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      97
     ]
    },
    "pyemma.coordinates.assign_to_centers": {
     "line number": [
      99
     ]
    },
    "range": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.DoubleWellSampler.us_sample": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      110
     ]
    },
    "len": {
     "line number": [
      104
     ]
    },
    "numpy.linspace": {
     "line number": [
      102
     ]
    },
    "pyemma.coordinates.assign_to_centers": {
     "line number": [
      109
     ]
    },
    "range": {
     "line number": [
      108
     ]
    },
    "zip": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.double_well_thermo.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pyemma.datasets.double_well_thermo._assign_to_centers": {
  "data": {
   "shadows": "pyemma.coordinates.assign_to_centers"
  },
  "type": "import"
 },
 "pyemma.datasets.double_well_thermo._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.datasets.potentials": {
  "data": {},
  "type": "module"
 },
 "pyemma.datasets.potentials.AsymmetricDoubleWell": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "pyemma.datasets.potentials.BrownianDynamics": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.datasets.potentials.AsymmetricDoubleWell.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "pyemma.datasets.potentials.AsymmetricDoubleWell": {
     "line number": [
      106
     ]
    },
    "super": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.AsymmetricDoubleWell.gradient": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "pyemma.datasets.potentials.asymmetric_double_well_gradient": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.AsymmetricDoubleWell.sample": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      113
     ]
    },
    "range": {
     "line number": [
      115,
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.BrownianDynamics": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "object": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.datasets.potentials.BrownianDynamics.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "numpy.sqrt": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.BrownianDynamics.gradient": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.BrownianDynamics.step": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "numpy.random.normal": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.FoldingModel": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "pyemma.datasets.potentials.BrownianDynamics": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.datasets.potentials.FoldingModel.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "pyemma.datasets.potentials.FoldingModel": {
     "line number": [
      127
     ]
    },
    "super": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.FoldingModel.gradient": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "pyemma.datasets.potentials.folding_model_gradient": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.FoldingModel.sample": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      135
     ]
    },
    "range": {
     "line number": [
      137,
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.PrinzModel": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "pyemma.datasets.potentials.BrownianDynamics": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.datasets.potentials.PrinzModel.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "pyemma.datasets.potentials.PrinzModel": {
     "line number": [
      149
     ]
    },
    "super": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.PrinzModel.gradient": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "pyemma.datasets.potentials.prinz_gradient": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.PrinzModel.sample": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      156
     ]
    },
    "range": {
     "line number": [
      158,
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.asymmetric_double_well_energy": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.asymmetric_double_well_gradient": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.folding_model_energy": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "numpy.linalg.norm": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.folding_model_gradient": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "numpy.linalg.norm": {
     "line number": [
      87
     ]
    },
    "numpy.zeros": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.get_asymmetric_double_well_data": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "pyemma.datasets.potentials.AsymmetricDoubleWell": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.get_folding_model_data": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      178
     ]
    },
    "pyemma.datasets.potentials.FoldingModel": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.get_prinz_pot": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "pyemma.datasets.potentials.PrinzModel": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.datasets.potentials.prinz_energy": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      67,
      67,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.potentials.prinz_gradient": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "numpy.exp": {
     "line number": [
      72,
      72,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma.datasets.tests.test_datasets": {
  "data": {},
  "type": "module"
 },
 "pyemma.datasets.tests.test_datasets.TestPrinzPotential": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "pyemma.datasets.tests.test_datasets.unittest": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.datasets.tests.test_datasets.TestPrinzPotential.test_prinz_potential": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      95
     ]
    },
    "int": {
     "line number": [
      92
     ]
    },
    "numpy.all": {
     "line number": [
      93
     ]
    },
    "numpy.isfinite": {
     "line number": [
      93
     ]
    },
    "pyemma.datasets.get_quadwell_data": {
     "line number": [
      92,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.tests.test_datasets.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pyemma.datasets.tests.test_datasets.estimate_multi_temperature": {
  "data": {
   "shadows": "pyemma.thermo.estimate_multi_temperature"
  },
  "type": "import"
 },
 "pyemma.datasets.tests.test_datasets.estimate_umbrella_sampling": {
  "data": {
   "shadows": "pyemma.thermo.estimate_umbrella_sampling"
  },
  "type": "import"
 },
 "pyemma.datasets.tests.test_datasets.get_multi_temperature_data": {
  "data": {
   "shadows": "pyemma.datasets.get_multi_temperature_data"
  },
  "type": "import"
 },
 "pyemma.datasets.tests.test_datasets.get_quadwell_data": {
  "data": {
   "shadows": "pyemma.datasets.get_quadwell_data"
  },
  "type": "import"
 },
 "pyemma.datasets.tests.test_datasets.get_umbrella_sampling_data": {
  "data": {
   "shadows": "pyemma.datasets.get_umbrella_sampling_data"
  },
  "type": "import"
 },
 "pyemma.datasets.tests.test_datasets.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.datasets.tests.test_datasets.test_multi_temperature_data": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      83
     ]
    },
    "pyemma.datasets.get_multi_temperature_data": {
     "line number": [
      64
     ]
    },
    "pyemma.thermo.estimate_multi_temperature": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.tests.test_datasets.test_umbrella_sampling_data": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      54
     ]
    },
    "pyemma.datasets.get_umbrella_sampling_data": {
     "line number": [
      35
     ]
    },
    "pyemma.thermo.estimate_umbrella_sampling": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.datasets.tests.test_datasets.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyemma.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.msm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.PCCA": {
  "data": {
   "shadows": "msmtools.analysis.dense.pcca.PCCA"
  },
  "type": "import"
 },
 "pyemma.msm.api": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.api._Bayes_HMSM": {
  "data": {
   "shadows": "BayesianHMSM"
  },
  "type": "import"
 },
 "pyemma.msm.api._Bayes_MSM": {
  "data": {
   "shadows": "BayesianMSM"
  },
  "type": "import"
 },
 "pyemma.msm.api._ImpliedTimescales": {
  "data": {
   "shadows": "ImpliedTimescales"
  },
  "type": "import"
 },
 "pyemma.msm.api._ML_AMM": {
  "data": {
   "shadows": "AugmentedMarkovModel"
  },
  "type": "import"
 },
 "pyemma.msm.api._ML_HMSM": {
  "data": {
   "shadows": "MaximumLikelihoodHMSM"
  },
  "type": "import"
 },
 "pyemma.msm.api._ML_MSM": {
  "data": {
   "shadows": "MaximumLikelihoodMSM"
  },
  "type": "import"
 },
 "pyemma.msm.api._OOM_MSM": {
  "data": {
   "shadows": "OOMReweightedMSM"
  },
  "type": "import"
 },
 "pyemma.msm.api.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyemma.msm.api.__author__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyemma.msm.api.__copyright__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyemma.msm.api.__credits__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyemma.msm.api.__docformat__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyemma.msm.api.__email__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyemma.msm.api.__maintainer__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyemma.msm.api._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.api._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.api.bayesian_hidden_markov_model": {
  "data": {
   "lineno": 1215
  },
  "type": "function"
 },
 "pyemma.msm.api.bayesian_markov_model": {
  "data": {
   "lineno": 665
  },
  "type": "function"
 },
 "pyemma.msm.api.estimate_augmented_markov_model": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1521,
      1523,
      1525,
      1527
     ]
    },
    "enumerate": {
     "line number": [
      1537
     ]
    },
    "len": {
     "line number": [
      1524,
      1524,
      1526,
      1526,
      1536
     ]
    },
    "numpy.all": {
     "line number": [
      1518,
      1526
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1530,
      1531
     ]
    },
    "numpy.where": {
     "line number": [
      1538
     ]
    },
    "numpy.zeros": {
     "line number": [
      1536
     ]
    },
    "set": {
     "line number": [
      1533,
      1535
     ]
    },
    "zip": {
     "line number": [
      1526
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.api.estimate_hidden_markov_model": {
  "data": {
   "lineno": 1032
  },
  "type": "function"
 },
 "pyemma.msm.api.estimate_markov_model": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      656
     ]
    },
    "ValueError": {
     "line number": [
      635,
      637
     ]
    },
    "any": {
     "line number": [
      654
     ]
    },
    "isinstance": {
     "line number": [
      633,
      654
     ]
    },
    "numpy.ndarray": {
     "line number": [
      654
     ]
    },
    "pyemma.msm.api.warnings": {
     "line number": [
      653
     ]
    },
    "str": {
     "line number": [
      633
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.api.flux_matrix": {
  "data": {
   "shadows": "msmtools.flux.flux_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.api.markov_model": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "MSM": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.api.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.api.shortcut": {
  "data": {
   "shadows": "pyemma.util.annotators.shortcut"
  },
  "type": "import"
 },
 "pyemma.msm.api.timescales_hmsm": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1023
     ]
    },
    "pyemma.util.types.ensure_dtraj_list": {
     "line number": [
      1008
     ]
    },
    "str": {
     "line number": [
      1023
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.api.timescales_msm": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      237,
      242,
      247
     ]
    },
    "ValueError": {
     "line number": [
      215,
      217
     ]
    },
    "any": {
     "line number": [
      236,
      241
     ]
    },
    "hasattr": {
     "line number": [
      249
     ]
    },
    "isinstance": {
     "line number": [
      213
     ]
    },
    "pyemma.util.annotators.shortcut": {
     "line number": [
      60
     ]
    },
    "pyemma.util.types.ensure_dtraj_list": {
     "line number": [
      223
     ]
    },
    "str": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.api.to_netflux": {
  "data": {
   "shadows": "msmtools.flux.to_netflux"
  },
  "type": "import"
 },
 "pyemma.msm.api.tpt": {
  "data": {
   "lineno": 1548,
   "symbols_in_volume": {
    "ReactiveFlux": {
     "line number": [
      1690
     ]
    },
    "ValueError": {
     "line number": [
      1670,
      1673
     ]
    },
    "len": {
     "line number": [
      1669,
      1669,
      1672,
      1672
     ]
    },
    "max": {
     "line number": [
      1672,
      1672
     ]
    },
    "msmtools.analysis.committor": {
     "line number": [
      1676,
      1681
     ]
    },
    "msmtools.analysis.is_reversible": {
     "line number": [
      1678
     ]
    },
    "msmtools.flux.flux_matrix": {
     "line number": [
      1683
     ]
    },
    "msmtools.flux.to_netflux": {
     "line number": [
      1685
     ]
    },
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      1666,
      1667
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.estimators": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators._OOM_MSM": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators._OOM_MSM.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyemma.msm.estimators._OOM_MSM._reshape_sparse": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      342
     ]
    },
    "divmod": {
     "line number": [
      345
     ]
    },
    "numpy.array": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._OOM_MSM._sort_by_norm": {
  "data": {
   "shadows": "pyemma.util.linalg._sort_by_norm"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._OOM_MSM.bootstrapping_count_matrix": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.float": {
     "line number": [
      121
     ]
    },
    "numpy.mean": {
     "line number": [
      133
     ]
    },
    "numpy.random.multinomial": {
     "line number": [
      127
     ]
    },
    "numpy.reshape": {
     "line number": [
      121,
      129
     ]
    },
    "numpy.std": {
     "line number": [
      134
     ]
    },
    "numpy.zeros": {
     "line number": [
      124
     ]
    },
    "range": {
     "line number": [
      125
     ]
    },
    "scipy.linalg.svdvals": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._OOM_MSM.bootstrapping_dtrajs": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "len": {
     "line number": [
      56
     ]
    },
    "numpy.asarray": {
     "line number": [
      85
     ]
    },
    "numpy.concatenate": {
     "line number": [
      72,
      73,
      73
     ]
    },
    "numpy.mean": {
     "line number": [
      91
     ]
    },
    "numpy.ones": {
     "line number": [
      68,
      74
     ]
    },
    "numpy.random.choice": {
     "line number": [
      82
     ]
    },
    "numpy.std": {
     "line number": [
      92
     ]
    },
    "numpy.zeros": {
     "line number": [
      79
     ]
    },
    "pyemma.util.linalg.submatrix": {
     "line number": [
      88
     ]
    },
    "range": {
     "line number": [
      80
     ]
    },
    "scipy.linalg.svdvals": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._OOM_MSM.equilibrium_transition_matrix": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "msmtools.estimation.largest_connected_set": {
     "line number": [
      330
     ]
    },
    "msmtools.estimation.largest_connected_submatrix": {
     "line number": [
      331
     ]
    },
    "numpy.einsum": {
     "line number": [
      311
     ]
    },
    "numpy.sum": {
     "line number": [
      315,
      317
     ]
    },
    "numpy.where": {
     "line number": [
      320,
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._OOM_MSM.me": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._OOM_MSM.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._OOM_MSM.oom_components": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "float": {
     "line number": [
      243
     ]
    },
    "msmtools.estimation.largest_connected_submatrix": {
     "line number": [
      236,
      260
     ]
    },
    "numpy.abs": {
     "line number": [
      273
     ]
    },
    "numpy.diag": {
     "line number": [
      249,
      250
     ]
    },
    "numpy.dot": {
     "line number": [
      249,
      250,
      264,
      268,
      279
     ]
    },
    "numpy.finfo": {
     "line number": [
      243
     ]
    },
    "numpy.logical_and": {
     "line number": [
      273
     ]
    },
    "numpy.real": {
     "line number": [
      273,
      278
     ]
    },
    "numpy.sum": {
     "line number": [
      267,
      270
     ]
    },
    "numpy.where": {
     "line number": [
      273
     ]
    },
    "numpy.zeros": {
     "line number": [
      255
     ]
    },
    "pyemma.msm.estimators._OOM_MSM._reshape_sparse": {
     "line number": [
      259,
      263
     ]
    },
    "pyemma.util.linalg._sort_by_norm": {
     "line number": [
      277
     ]
    },
    "range": {
     "line number": [
      256
     ]
    },
    "scipy.linalg.eig": {
     "line number": [
      271
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._OOM_MSM.rank_decision": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "pyemma.msm.estimators._OOM_MSM.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._OOM_MSM.scl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._OOM_MSM.submatrix": {
  "data": {
   "shadows": "pyemma.util.linalg.submatrix"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._OOM_MSM.twostep_count_matrix": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "numpy.concatenate": {
     "line number": [
      166,
      167,
      168
     ]
    },
    "numpy.ones": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyemma.msm.estimators._dtraj_stats": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "object": {
     "line number": [
      92
     ]
    },
    "pyemma.util.annotators.aliased": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      115
     ]
    },
    "any": {
     "line number": [
      114
     ]
    },
    "msmtools.dtraj.count_states": {
     "line number": [
      120
     ]
    },
    "msmtools.estimation.number_of_states": {
     "line number": [
      124
     ]
    },
    "numpy.any": {
     "line number": [
      114
     ]
    },
    "numpy.sum": {
     "line number": [
      122
     ]
    },
    "pyemma.util.types.ensure_dtraj_list": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats._assert_counted_at_lag": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats._assert_subset": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "numpy.max": {
     "line number": [
      294
     ]
    },
    "numpy.size": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats._compute_connected_sets": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "msmtools.estimation.connected_sets": {
     "line number": [
      153
     ]
    },
    "numpy.where": {
     "line number": [
      150
     ]
    },
    "scipy.sparse.issparse": {
     "line number": [
      144
     ]
    },
    "staticmethod": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.connected_set_sizes": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "property": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.connected_sets": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "property": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.count_lagged": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      203
     ]
    },
    "RuntimeError": {
     "line number": [
      212
     ]
    },
    "ValueError": {
     "line number": [
      235
     ]
    },
    "int": {
     "line number": [
      263,
      266
     ]
    },
    "len": {
     "line number": [
      250,
      251,
      252,
      254,
      267
     ]
    },
    "msmtools.estimation.connected_sets": {
     "line number": [
      247
     ]
    },
    "msmtools.estimation.count_matrix": {
     "line number": [
      200,
      207,
      209,
      227
     ]
    },
    "msmtools.estimation.effective_count_matrix": {
     "line number": [
      214,
      233
     ]
    },
    "numpy.arange": {
     "line number": [
      267
     ]
    },
    "numpy.array": {
     "line number": [
      263
     ]
    },
    "numpy.empty": {
     "line number": [
      251
     ]
    },
    "numpy.object": {
     "line number": [
      251
     ]
    },
    "numpy.ones": {
     "line number": [
      266
     ]
    },
    "numpy.roll": {
     "line number": [
      199
     ]
    },
    "numpy.shape": {
     "line number": [
      239
     ]
    },
    "numpy.zeros": {
     "line number": [
      250
     ]
    },
    "pyemma._base.parallel.get_n_jobs": {
     "line number": [
      222
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      225
     ]
    },
    "pyemma.util.contexts.nullcontext": {
     "line number": [
      217
     ]
    },
    "pyemma.util.linalg.submatrix": {
     "line number": [
      262
     ]
    },
    "pyemma.util.reflection.getargspec_no_self": {
     "line number": [
      214
     ]
    },
    "range": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.count_matrix": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      371
     ]
    },
    "float": {
     "line number": [
      382
     ]
    },
    "pyemma.util.linalg.submatrix": {
     "line number": [
      374,
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.count_matrix_largest": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "property": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.discrete_trajectories": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "property": {
     "line number": [
      303
     ]
    },
    "pyemma.util.annotators.alias": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.histogram": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "property": {
     "line number": [
      320
     ]
    },
    "pyemma.util.annotators.alias": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.histogram_lagged": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "pyemma.util.annotators.alias": {
     "line number": [
      386
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.lag": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "property": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.largest_connected_set": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "property": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.nstates": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "property": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.total_count": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "property": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.total_count_lagged": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "property": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats.visited_set": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "property": {
     "line number": [
      415
     ]
    },
    "pyemma.util.discrete_trajectories.visited_set": {
     "line number": [
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.__author__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyemma.msm.estimators._dtraj_stats.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "len": {
     "line number": [
      55
     ]
    },
    "min": {
     "line number": [
      58
     ]
    },
    "numpy.random.randint": {
     "line number": [
      58
     ]
    },
    "range": {
     "line number": [
      64,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.count_states": {
  "data": {
   "shadows": "msmtools.dtraj.count_states"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.cvsplit_dtrajs": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      83
     ]
    },
    "int": {
     "line number": [
      84
     ]
    },
    "len": {
     "line number": [
      82,
      84,
      84,
      85
     ]
    },
    "list": {
     "line number": [
      85,
      85,
      85
     ]
    },
    "numpy.arange": {
     "line number": [
      85
     ]
    },
    "numpy.array": {
     "line number": [
      85
     ]
    },
    "numpy.random.choice": {
     "line number": [
      84
     ]
    },
    "set": {
     "line number": [
      85,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._dtraj_stats.ensure_dtraj_list": {
  "data": {
   "shadows": "pyemma.util.types.ensure_dtraj_list"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.get_n_jobs": {
  "data": {
   "shadows": "pyemma._base.parallel.get_n_jobs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.getargspec_no_self": {
  "data": {
   "shadows": "pyemma.util.reflection.getargspec_no_self"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.nullcontext": {
  "data": {
   "shadows": "pyemma.util.contexts.nullcontext"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.scs": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.submatrix": {
  "data": {
   "shadows": "pyemma.util.linalg.submatrix"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._dtraj_stats.visited_set": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.visited_set"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators._msm_estimator_base.ChapmanKolmogorovValidator": {
  "data": {
   "shadows": "pyemma.msm.estimators.ChapmanKolmogorovValidator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.MaximumLikelihoodHMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._DiscreteTrajectoryStats": {
  "data": {
   "shadows": "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSM": {
  "data": {
   "shadows": "pyemma.msm.MSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma._base.estimator.Estimator": {
     "line number": [
      39
     ]
    },
    "pyemma.msm.MSM": {
     "line number": [
      39
     ]
    },
    "pyemma.util.annotators.aliased": {
     "line number": [
      38
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator._blocksplit_dtrajs": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator._check_is_estimated": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator._get_dtraj_stats": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "any": {
     "line number": [
      199
     ]
    },
    "getattr": {
     "line number": [
      230,
      231
     ]
    },
    "isinstance": {
     "line number": [
      196
     ]
    },
    "numpy.concatenate": {
     "line number": [
      201,
      205
     ]
    },
    "numpy.sort": {
     "line number": [
      201,
      205
     ]
    },
    "numpy.unique": {
     "line number": [
      201,
      205
     ]
    },
    "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats": {
     "line number": [
      196,
      219
     ]
    },
    "pyemma.util.discrete_trajectories.rewrite_dtrajs_to_core_sets": {
     "line number": [
      214
     ]
    },
    "set": {
     "line number": [
      205,
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.active_count_fraction": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "float": {
     "line number": [
      576,
      576
     ]
    },
    "numpy.sum": {
     "line number": [
      576,
      576
     ]
    },
    "property": {
     "line number": [
      566
     ]
    },
    "pyemma.util.discrete_trajectories.count_states": {
     "line number": [
      574
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.active_set": {
  "data": {
   "lineno": 444
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.active_state_fraction": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": {
    "float": {
     "line number": [
      564,
      564
     ]
    },
    "property": {
     "line number": [
      558
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.active_state_indexes": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      627
     ]
    },
    "property": {
     "line number": [
      621
     ]
    },
    "pyemma.util.discrete_trajectories.index_states": {
     "line number": [
      629
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.cktest": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": {
    "pyemma.msm.estimators.ChapmanKolmogorovValidator": {
     "line number": [
      947
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.coarse_grain": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": {
    "pyemma.util.types.is_int": {
     "line number": [
      888
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.connected_sets": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": {
    "property": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.connectivity": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      458,
      460
     ]
    },
    "ValueError": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.core_set": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": {
    "pyemma.util.types.ensure_int_vector": {
     "line number": [
      588
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.count_matrix_active": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "property": {
     "line number": [
      519
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.count_matrix_full": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": {
    "property": {
     "line number": [
      539
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.discrete_trajectories_active": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": {
    "property": {
     "line number": [
      503
     ]
    },
    "pyemma.util.annotators.alias": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.discrete_trajectories_full": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": {
    "property": {
     "line number": [
      493
     ]
    },
    "pyemma.util.annotators.alias": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.discrete_trajectories_unmodified": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": {
    "property": {
     "line number": [
      590
     ]
    },
    "pyemma.util.annotators.alias": {
     "line number": [
      591
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.dt_traj": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "pyemma.util.units.TimeUnit": {
     "line number": [
      473
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.dtrajs_milestone_counting_offsets": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      611
     ]
    },
    "property": {
     "line number": [
      601
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.estimate": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "pyemma.msm.estimators._msm_estimator_base._MSMEstimator": {
     "line number": [
      256
     ]
    },
    "pyemma.util.types.ensure_dtraj_list": {
     "line number": [
      255
     ]
    },
    "super": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.generate_traj": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": {
    "msmtools.generation.generate_traj": {
     "line number": [
      677
     ]
    },
    "pyemma.msm.estimators._msm_estimator_base._remap_indices_coring": {
     "line number": [
      632
     ]
    },
    "pyemma.util.discrete_trajectories.sample_indexes_by_sequence": {
     "line number": [
      681
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.hmm": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": {
    "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM": {
     "line number": [
      860
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.lag": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "int": {
     "line number": [
      427
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.largest_connected_set": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": {
    "property": {
     "line number": [
      475
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.nstates_full": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "property": {
     "line number": [
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.sample_by_distributions": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": {
    "pyemma.msm.estimators._msm_estimator_base._remap_indices_coring": {
     "line number": [
      724
     ]
    },
    "pyemma.util.discrete_trajectories.sample_indexes_by_distribution": {
     "line number": [
      748
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.sample_by_state": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": {
    "pyemma.msm.estimators._msm_estimator_base._remap_indices_coring": {
     "line number": [
      683
     ]
    },
    "pyemma.util.discrete_trajectories.sample_indexes_by_state": {
     "line number": [
      721
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.score": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "len": {
     "line number": [
      334
     ]
    },
    "msmtools.estimation.count_matrix": {
     "line number": [
      331
     ]
    },
    "numpy.arange": {
     "line number": [
      334
     ]
    },
    "numpy.diag": {
     "line number": [
      327,
      328,
      337,
      338
     ]
    },
    "numpy.ix_": {
     "line number": [
      336,
      336
     ]
    },
    "numpy.where": {
     "line number": [
      333
     ]
    },
    "numpy.zeros": {
     "line number": [
      335
     ]
    },
    "pyemma.util.metrics.vamp_score": {
     "line number": [
      342
     ]
    },
    "pyemma.util.types.ensure_dtraj_list": {
     "line number": [
      303
     ]
    },
    "scipy.sparse.issparse": {
     "line number": [
      323,
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.score_cv": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      399
     ]
    },
    "numpy.array": {
     "line number": [
      410
     ]
    },
    "pyemma._ext.sklearn.base.clone": {
     "line number": [
      403
     ]
    },
    "pyemma.msm.estimators._dtraj_stats.cvsplit_dtrajs": {
     "line number": [
      406
     ]
    },
    "pyemma.util.types.ensure_dtraj_list": {
     "line number": [
      395
     ]
    },
    "range": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._MSMEstimator.trajectory_weights": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": {
    "msmtools.dtraj.count_states": {
     "line number": [
      805
     ]
    },
    "numpy.sum": {
     "line number": [
      812
     ]
    },
    "numpy.zeros": {
     "line number": [
      801
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._apply_offsets_to_samples": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories._apply_offsets_to_samples"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base._remap_indices_coring": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      33
     ]
    },
    "any": {
     "line number": [
      22
     ]
    },
    "decorator.decorator": {
     "line number": [
      13
     ]
    },
    "func": {
     "line number": [
      19
     ]
    },
    "isinstance": {
     "line number": [
      27,
      29,
      29
     ]
    },
    "list": {
     "line number": [
      29
     ]
    },
    "numpy.int_": {
     "line number": [
      27
     ]
    },
    "numpy.ndarray": {
     "line number": [
      27,
      29
     ]
    },
    "numpy.object_": {
     "line number": [
      29
     ]
    },
    "pyemma.util.discrete_trajectories._apply_offsets_to_samples": {
     "line number": [
      28,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators._msm_estimator_base._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.blocksplit_dtrajs": {
  "data": {
   "shadows": "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.clone": {
  "data": {
   "shadows": "pyemma._ext.sklearn.base.clone"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.count_states": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.count_states"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.cvsplit_dtrajs": {
  "data": {
   "shadows": "pyemma.msm.estimators._dtraj_stats.cvsplit_dtrajs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.dt": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.ensure_dtraj_list": {
  "data": {
   "shadows": "pyemma.util.types.ensure_dtraj_list"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.index_states": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.index_states"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.msmtraj": {
  "data": {
   "shadows": "msmtools.dtraj"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.rewrite_dtrajs_to_core_sets": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.rewrite_dtrajs_to_core_sets"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.sample_indexes_by_sequence": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.sample_indexes_by_sequence"
  },
  "type": "import"
 },
 "pyemma.msm.estimators._msm_estimator_base.vamp_score": {
  "data": {
   "shadows": "pyemma.util.metrics.vamp_score"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.augmented_msm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "pyemma.msm.estimators.MaximumLikelihoodMSM": {
     "line number": [
      32
     ]
    },
    "pyemma.util.annotators.aliased": {
     "line number": [
      31
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      138,
      173
     ]
    },
    "numpy.any": {
     "line number": [
      172
     ]
    },
    "numpy.shape": {
     "line number": [
      148
     ]
    },
    "numpy.sqrt": {
     "line number": [
      175
     ]
    },
    "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel": {
     "line number": [
      140
     ]
    },
    "str": {
     "line number": [
      136
     ]
    },
    "super": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._estimate": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      332
     ]
    },
    "ValueError": {
     "line number": [
      311
     ]
    },
    "int": {
     "line number": [
      340,
      397
     ]
    },
    "len": {
     "line number": [
      341,
      369,
      370,
      387,
      387,
      455
     ]
    },
    "list": {
     "line number": [
      345
     ]
    },
    "msmtools.estimation.connected_sets": {
     "line number": [
      477
     ]
    },
    "msmtools.estimation.tmatrix": {
     "line number": [
      390,
      475
     ]
    },
    "numpy.abs": {
     "line number": [
      456,
      461,
      465
     ]
    },
    "numpy.all": {
     "line number": [
      432,
      456
     ]
    },
    "numpy.any": {
     "line number": [
      441
     ]
    },
    "numpy.arange": {
     "line number": [
      341
     ]
    },
    "numpy.concatenate": {
     "line number": [
      345
     ]
    },
    "numpy.floor": {
     "line number": [
      397
     ]
    },
    "numpy.max": {
     "line number": [
      361
     ]
    },
    "numpy.min": {
     "line number": [
      360
     ]
    },
    "numpy.nonzero": {
     "line number": [
      355
     ]
    },
    "numpy.ones": {
     "line number": [
      340,
      394
     ]
    },
    "numpy.shape": {
     "line number": [
      367,
      394
     ]
    },
    "numpy.size": {
     "line number": [
      331
     ]
    },
    "numpy.sum": {
     "line number": [
      356
     ]
    },
    "numpy.zeros": {
     "line number": [
      391
     ]
    },
    "pyemma.util.statistics.confidence_interval": {
     "line number": [
      364
     ]
    },
    "set": {
     "line number": [
      345
     ]
    },
    "zip": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._get_Rk": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "int": {
     "line number": [
      229
     ]
    },
    "numpy.floor": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._log_likelihood_biased": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "msmtools.estimation.log_likelihood": {
     "line number": [
      185
     ]
    },
    "numpy.sum": {
     "line number": [
      186
     ]
    },
    "staticmethod": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._newton_lagrange": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "float": {
     "line number": [
      305
     ]
    },
    "numpy.any": {
     "line number": [
      275,
      284
     ]
    },
    "numpy.inf": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._update_G": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._update_Q": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      202
     ]
    },
    "range": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._update_Rslices": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._update_S": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._update_X_and_pi": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "numpy.sum": {
     "line number": [
      260,
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._update_mhat": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel._update_pihat": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "numpy.einsum": {
     "line number": [
      236
     ]
    },
    "numpy.exp": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel.hmm": {
  "data": {
   "lineno": 483
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.AugmentedMarkovModel.score": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "pyemma.msm.estimators.augmented_msm.MaximumLikelihoodMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.MaximumLikelihoodMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.augmented_msm.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.augmented_msm.__author__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.augmented_msm._ci": {
  "data": {
   "shadows": "pyemma.util.statistics.confidence_interval"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.augmented_msm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.augmented_msm.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.augmented_msm.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.augmented_msm.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "pyemma._base.progress.ProgressReporterMixin": {
     "line number": [
      37
     ]
    },
    "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM": {
     "line number": [
      37
     ]
    },
    "pyemma.msm.models.hmsm_sampled.SampledHMSM": {
     "line number": [
      37
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM": {
     "line number": [
      146
     ]
    },
    "super": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM._estimate": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      201,
      257
     ]
    },
    "UserWarning": {
     "line number": [
      196,
      229
     ]
    },
    "all": {
     "line number": [
      200
     ]
    },
    "bhmm.bayesian_hmm": {
     "line number": [
      294
     ]
    },
    "bhmm.discrete_hmm": {
     "line number": [
      292
     ]
    },
    "bhmm.lag_observations": {
     "line number": [
      223
     ]
    },
    "getattr": {
     "line number": [
      195,
      195
     ]
    },
    "int": {
     "line number": [
      219
     ]
    },
    "len": {
     "line number": [
      199,
      199
     ]
    },
    "max": {
     "line number": [
      217
     ]
    },
    "min": {
     "line number": [
      219
     ]
    },
    "msmtools.estimation.is_connected": {
     "line number": [
      256
     ]
    },
    "msmtools.estimation.number_of_states": {
     "line number": [
      224,
      225,
      266
     ]
    },
    "numpy.arange": {
     "line number": [
      237
     ]
    },
    "numpy.array_equal": {
     "line number": [
      200
     ]
    },
    "numpy.concatenate": {
     "line number": [
      227,
      228
     ]
    },
    "numpy.float64": {
     "line number": [
      270
     ]
    },
    "numpy.maximum": {
     "line number": [
      272
     ]
    },
    "numpy.ones": {
     "line number": [
      270
     ]
    },
    "numpy.setxor1d": {
     "line number": [
      227
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      212
     ]
    },
    "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM": {
     "line number": [
      183
     ]
    },
    "pyemma.msm.models.hmsm.HMSM": {
     "line number": [
      310
     ]
    },
    "pyemma.util.types.ensure_dtraj_list": {
     "line number": [
      171
     ]
    },
    "pyemma.util.units.TimeUnit": {
     "line number": [
      252
     ]
    },
    "range": {
     "line number": [
      313
     ]
    },
    "super": {
     "line number": [
      183
     ]
    },
    "zip": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM._estimate.call_back": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM.init_hmsm": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      166
     ]
    },
    "issubclass": {
     "line number": [
      165
     ]
    },
    "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_hmsm.BayesianHMSM.submodel": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      340
     ]
    },
    "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.submodel": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_hmsm.ProgressReporterMixin": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporterMixin"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm._HMSM": {
  "data": {
   "shadows": "pyemma.msm.models.hmsm.HMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm._MaximumLikelihoodHMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm._SampledHMSM": {
  "data": {
   "shadows": "pyemma.msm.models.hmsm_sampled.SampledHMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.bayesian_hmsm._lag_observations": {
  "data": {
   "shadows": "bhmm.lag_observations"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm._number_of_states": {
  "data": {
   "shadows": "msmtools.estimation.number_of_states"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.bayesian_hmm": {
  "data": {
   "shadows": "bhmm.bayesian_hmm"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.discrete_hmm": {
  "data": {
   "shadows": "bhmm.discrete_hmm"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.ensure_dtraj_list": {
  "data": {
   "shadows": "pyemma.util.types.ensure_dtraj_list"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.estimate_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_hmsm.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.bayesian_msm.BayesianMSM": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "pyemma._base.parallel.NJobsMixIn": {
     "line number": [
      32
     ]
    },
    "pyemma._base.progress.ProgressReporterMixin": {
     "line number": [
      32
     ]
    },
    "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM": {
     "line number": [
      32
     ]
    },
    "pyemma.msm.models.msm_sampled.SampledMSM": {
     "line number": [
      32
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.estimators.bayesian_msm.BayesianMSM.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM.__init__": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_msm.BayesianMSM._estimate": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      188
     ]
    },
    "int": {
     "line number": [
      197
     ]
    },
    "math.sqrt": {
     "line number": [
      197
     ]
    },
    "msmtools.estimation.tmatrix_sampler": {
     "line number": [
      200,
      206
     ]
    },
    "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM._estimate": {
     "line number": [
      191
     ]
    },
    "pyemma.msm.models.msm.MSM": {
     "line number": [
      220
     ]
    },
    "zip": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_msm.BayesianMSM.estimate": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "pyemma.msm.estimators.bayesian_msm.BayesianMSM": {
     "line number": [
      183
     ]
    },
    "super": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.bayesian_msm._MLMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm._MSM": {
  "data": {
   "shadows": "pyemma.msm.models.msm.MSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm._NJobsMixIn": {
  "data": {
   "shadows": "pyemma._base.parallel.NJobsMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm._ProgressReporterMixin": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporterMixin"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm._SampledMSM": {
  "data": {
   "shadows": "pyemma.msm.models.msm_sampled.SampledMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm.__author__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.bayesian_msm.ensure_dtraj_list": {
  "data": {
   "shadows": "pyemma.util.types.ensure_dtraj_list"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.bayesian_msm.tmatrix_sampler": {
  "data": {
   "shadows": "msmtools.estimation.tmatrix_sampler"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.implied_timescales.Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "pyemma._base.estimator.Estimator": {
     "line number": [
      100
     ]
    },
    "pyemma._base.parallel.NJobsMixIn": {
     "line number": [
      100
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      100
     ]
    },
    "pyemma.util.annotators.aliased": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "pyemma._base.estimator.get_estimator": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales._estimate": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "dummy": {
     "line number": [
      232
     ]
    },
    "float": {
     "line number": [
      194
     ]
    },
    "hasattr": {
     "line number": [
      180,
      221
     ]
    },
    "int": {
     "line number": [
      189
     ]
    },
    "len": {
     "line number": [
      189,
      189,
      194,
      209
     ]
    },
    "list": {
     "line number": [
      208
     ]
    },
    "numpy.fromiter": {
     "line number": [
      189
     ]
    },
    "numpy.max": {
     "line number": [
      190,
      198
     ]
    },
    "numpy.sum": {
     "line number": [
      194
     ]
    },
    "numpy.where": {
     "line number": [
      199,
      200
     ]
    },
    "pyemma._base.estimator.estimate_param_scan": {
     "line number": [
      235,
      245
     ]
    },
    "pyemma._base.estimator.param_grid": {
     "line number": [
      218
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      224
     ]
    },
    "pyemma.msm.estimators.implied_timescales._DummyModel": {
     "line number": [
      252,
      254
     ]
    },
    "pyemma.msm.estimators.implied_timescales._generate_lags": {
     "line number": [
      195
     ]
    },
    "pyemma.msm.estimators.implied_timescales._hash_dtrajs": {
     "line number": [
      181,
      187
     ]
    },
    "pyemma.util.types.ensure_dtraj_list": {
     "line number": [
      175
     ]
    },
    "set": {
     "line number": [
      208
     ]
    },
    "sorted": {
     "line number": [
      208
     ]
    },
    "tuple": {
     "line number": [
      218
     ]
    },
    "zip": {
     "line number": [
      252,
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales._estimate.dummy": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales._estimator_produces_samples": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales._postprocess_results": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      265
     ]
    },
    "RuntimeError": {
     "line number": [
      277
     ]
    },
    "_format_failed_models": {
     "line number": [
      277,
      280
     ]
    },
    "all": {
     "line number": [
      286
     ]
    },
    "check": {
     "line number": [
      266,
      267
     ]
    },
    "enumerate": {
     "line number": [
      266,
      267,
      308,
      327
     ]
    },
    "hasattr": {
     "line number": [
      286
     ]
    },
    "int": {
     "line number": [
      266,
      267
     ]
    },
    "isinstance": {
     "line number": [
      265
     ]
    },
    "len": {
     "line number": [
      269,
      269,
      295,
      305,
      310,
      314,
      314,
      324
     ]
    },
    "list": {
     "line number": [
      281
     ]
    },
    "max": {
     "line number": [
      295
     ]
    },
    "numpy.NAN": {
     "line number": [
      306,
      325
     ]
    },
    "numpy.any": {
     "line number": [
      309,
      316,
      333
     ]
    },
    "numpy.array": {
     "line number": [
      266,
      267,
      281,
      313
     ]
    },
    "numpy.empty": {
     "line number": [
      305,
      324
     ]
    },
    "numpy.isfinite": {
     "line number": [
      295,
      309
     ]
    },
    "numpy.isnan": {
     "line number": [
      316,
      333
     ]
    },
    "numpy.shape": {
     "line number": [
      323
     ]
    },
    "numpy.vstack": {
     "line number": [
      329
     ]
    },
    "sorted": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales._postprocess_results._format_failed_models": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "pprint.pformat": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.estimate": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "pyemma.msm.estimators.implied_timescales.ImpliedTimescales": {
     "line number": [
      170
     ]
    },
    "super": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.estimators": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      560
     ]
    },
    "property": {
     "line number": [
      554
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.fraction_of_frames": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      593
     ]
    },
    "hasattr": {
     "line number": [
      588
     ]
    },
    "numpy.argwhere": {
     "line number": [
      594
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      589
     ]
    },
    "property": {
     "line number": [
      572
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.get_sample_conf": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      546
     ]
    },
    "pyemma.util.statistics.confidence_interval": {
     "line number": [
      550,
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.get_sample_mean": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      469
     ]
    },
    "numpy.mean": {
     "line number": [
      473,
      475
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.get_sample_std": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      511
     ]
    },
    "numpy.std": {
     "line number": [
      515,
      517
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.get_timescales": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      422
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.lags": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "frozenset": {
     "line number": [
      354
     ]
    },
    "hasattr": {
     "line number": [
      353
     ]
    },
    "len": {
     "line number": [
      365
     ]
    },
    "numpy.arange": {
     "line number": [
      365
     ]
    },
    "numpy.array": {
     "line number": [
      357,
      364
     ]
    },
    "pyemma.msm.estimators.implied_timescales._generate_lags": {
     "line number": [
      374
     ]
    },
    "pyemma.util.types.ensure_int_vector_or_None": {
     "line number": [
      378
     ]
    },
    "pyemma.util.types.is_int": {
     "line number": [
      373
     ]
    },
    "set": {
     "line number": [
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.models": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      569
     ]
    },
    "property": {
     "line number": [
      563
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.nits": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "int": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.sample_mean": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "property": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.sample_std": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "property": {
     "line number": [
      477
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.samples_available": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": {
    "property": {
     "line number": [
      428
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.ImpliedTimescales.timescales": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "property": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.NJobsMixIn": {
  "data": {
   "shadows": "pyemma._base.parallel.NJobsMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.SampledModel": {
  "data": {
   "shadows": "pyemma._base.model.SampledModel"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales._DummyModel": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "object": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.estimators.implied_timescales._DummyModel.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales._DummyModel.sample_f": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales._DummyModel.timescales": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales.__all__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.implied_timescales.__docformat__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.implied_timescales._generate_lags": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "int": {
     "line number": [
      60,
      63
     ]
    },
    "numpy.array": {
     "line number": [
      68
     ]
    },
    "pyemma.msm.estimators.implied_timescales.decimal": {
     "line number": [
      60,
      60,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales._hash_dtrajs": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "pyemma.util.numeric._hash_numpy_array": {
     "line number": [
      73,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.implied_timescales._hash_numpy_array": {
  "data": {
   "shadows": "pyemma.util.numeric._hash_numpy_array"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.confidence_interval": {
  "data": {
   "shadows": "pyemma.util.statistics.confidence_interval"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.estimate_param_scan": {
  "data": {
   "shadows": "pyemma._base.estimator.estimate_param_scan"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.get_estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.get_estimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.param_grid": {
  "data": {
   "shadows": "pyemma._base.estimator.param_grid"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.implied_timescales.pformat": {
  "data": {
   "shadows": "pprint.pformat"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.lagged_model_validators.ChapmanKolmogorovValidator": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": {
    "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.estimators.lagged_model_validators.ChapmanKolmogorovValidator.__init__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator": {
     "line number": [
      418
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.ChapmanKolmogorovValidator._compute_observables": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      469
     ]
    },
    "numpy.eye": {
     "line number": [
      459
     ]
    },
    "numpy.zeros": {
     "line number": [
      461
     ]
    },
    "range": {
     "line number": [
      463,
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.ChapmanKolmogorovValidator._compute_observables_conf": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "len": {
     "line number": [
      487
     ]
    },
    "numpy.dot": {
     "line number": [
      486
     ]
    },
    "numpy.eye": {
     "line number": [
      475,
      475
     ]
    },
    "numpy.float": {
     "line number": [
      487
     ]
    },
    "numpy.fromiter": {
     "line number": [
      486
     ]
    },
    "numpy.zeros": {
     "line number": [
      478,
      479
     ]
    },
    "pyemma.util.statistics.confidence_interval": {
     "line number": [
      488
     ]
    },
    "range": {
     "line number": [
      480,
      485
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.ChapmanKolmogorovValidator.memberships": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      431
     ]
    },
    "numpy.ones": {
     "line number": [
      431
     ]
    },
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.ChapmanKolmogorovValidator.test_estimator": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "int": {
     "line number": [
      442
     ]
    },
    "numpy.arange": {
     "line number": [
      443
     ]
    },
    "numpy.array": {
     "line number": [
      440
     ]
    },
    "numpy.max": {
     "line number": [
      442
     ]
    },
    "numpy.zeros": {
     "line number": [
      442
     ]
    },
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.ChapmanKolmogorovValidator.test_model": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.EigenvalueDecayValidator": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.estimators.lagged_model_validators.EigenvalueDecayValidator.__init__": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.EigenvalueDecayValidator._compute_observables": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      346
     ]
    },
    "numpy.power": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.EigenvalueDecayValidator._compute_observables_conf": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "len": {
     "line number": [
      362
     ]
    },
    "numpy.ones": {
     "line number": [
      358,
      358
     ]
    },
    "numpy.power": {
     "line number": [
      363
     ]
    },
    "pyemma.util.statistics.confidence_interval": {
     "line number": [
      364
     ]
    },
    "range": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "pyemma._base.estimator.Estimator": {
     "line number": [
      38
     ]
    },
    "pyemma._base.parallel.NJobsMixIn": {
     "line number": [
      38
     ]
    },
    "pyemma._base.progress.ProgressReporterMixin": {
     "line number": [
      38
     ]
    },
    "pyemma._base.serialization.serialization.Modifications": {
     "line number": [
      81
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      38
     ]
    },
    "pyemma.msm.estimators.lagged_model_validators._serial_fix_lagged_model_validatior_version_1": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      96
     ]
    },
    "ValueError": {
     "line number": [
      119
     ]
    },
    "copy.deepcopy": {
     "line number": [
      90
     ]
    },
    "int": {
     "line number": [
      98
     ]
    },
    "issubclass": {
     "line number": [
      114
     ]
    },
    "len": {
     "line number": [
      95
     ]
    },
    "numpy.any": {
     "line number": [
      104,
      107
     ]
    },
    "numpy.arange": {
     "line number": [
      102
     ]
    },
    "numpy.max": {
     "line number": [
      95,
      97
     ]
    },
    "numpy.where": {
     "line number": [
      105,
      108
     ]
    },
    "pyemma._base.model.SampledModel": {
     "line number": [
      114
     ]
    },
    "pyemma.msm.estimators.lagged_model_validators.math": {
     "line number": [
      98
     ]
    },
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      103
     ]
    },
    "pyemma.util.types.is_int": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.__setstate__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      325
     ]
    },
    "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator": {
     "line number": [
      328
     ]
    },
    "super": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator._compute_observables": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator._compute_observables_conf": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      314
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator._estimate": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      157
     ]
    },
    "isinstance": {
     "line number": [
      144
     ]
    },
    "list": {
     "line number": [
      127
     ]
    },
    "numpy.array": {
     "line number": [
      126,
      176,
      177,
      179,
      180,
      185,
      186
     ]
    },
    "pyemma._base.estimator.estimate_param_scan": {
     "line number": [
      151
     ]
    },
    "pyemma._base.estimator.param_grid": {
     "line number": [
      127
     ]
    },
    "pyemma._base.model.SampledModel": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.estimates": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "property": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.estimates_conf": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "property": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.lagtimes": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "property": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.predictions": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "property": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.LaggedModelValidator.predictions_conf": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "property": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.Modifications": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.Modifications"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.NJobsMixIn": {
  "data": {
   "shadows": "pyemma._base.parallel.NJobsMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.ProgressReporterMixin": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporterMixin"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.SampledModel": {
  "data": {
   "shadows": "pyemma._base.model.SampledModel"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.__author__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.lagged_model_validators._serial_fix_lagged_model_validatior_version_1": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "issubclass": {
     "line number": [
      34
     ]
    },
    "pyemma._base.model.SampledModel": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.lagged_model_validators.confidence_interval": {
  "data": {
   "shadows": "pyemma.util.statistics.confidence_interval"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.estimate_param_scan": {
  "data": {
   "shadows": "pyemma._base.estimator.estimate_param_scan"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.param_grid": {
  "data": {
   "shadows": "pyemma._base.estimator.param_grid"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.lagged_model_validators.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.ChapmanKolmogorovValidator": {
  "data": {
   "shadows": "pyemma.msm.estimators.ChapmanKolmogorovValidator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.ImaginaryEigenValueWarning": {
  "data": {
   "shadows": "msmtools.util.exceptions.ImaginaryEigenValueWarning"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "pyemma._base.estimator.Estimator": {
     "line number": [
      34
     ]
    },
    "pyemma.msm.models.hmsm.HMSM": {
     "line number": [
      34
     ]
    },
    "pyemma.util.annotators.aliased": {
     "line number": [
      32
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "float": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM._estimate": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      169,
      227
     ]
    },
    "bhmm.estimators.maximum_likelihood.MaximumLikelihoodEstimator": {
     "line number": [
      235
     ]
    },
    "bhmm.init.discrete.init_discrete_hmm_spectral": {
     "line number": [
      220
     ]
    },
    "bhmm.init_discrete_hmm": {
     "line number": [
      211,
      215
     ]
    },
    "int": {
     "line number": [
      195
     ]
    },
    "isinstance": {
     "line number": [
      218
     ]
    },
    "max": {
     "line number": [
      193
     ]
    },
    "min": {
     "line number": [
      195
     ]
    },
    "msmtools.estimation.number_of_states": {
     "line number": [
      262,
      263
     ]
    },
    "msmtools.util.exceptions.ImaginaryEigenValueWarning": {
     "line number": [
      191
     ]
    },
    "numpy.arange": {
     "line number": [
      255,
      264
     ]
    },
    "numpy.max": {
     "line number": [
      168
     ]
    },
    "numpy.mean": {
     "line number": [
      170,
      172
     ]
    },
    "numpy.size": {
     "line number": [
      167
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      182
     ]
    },
    "pyemma.msm.estimators.MaximumLikelihoodMSM": {
     "line number": [
      218
     ]
    },
    "pyemma.msm.estimators.OOMReweightedMSM": {
     "line number": [
      218
     ]
    },
    "pyemma.msm.estimators.maximum_likelihood_hmsm.bhmm": {
     "line number": [
      198,
      224,
      241
     ]
    },
    "pyemma.msm.estimators.maximum_likelihood_hmsm.warnings": {
     "line number": [
      190,
      191
     ]
    },
    "pyemma.util.types.ensure_dtraj_list": {
     "line number": [
      164
     ]
    },
    "str": {
     "line number": [
      169,
      171,
      172,
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.active_set": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      321
     ]
    },
    "numpy.arange": {
     "line number": [
      324
     ]
    },
    "property": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.cktest": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": {
    "numpy.eye": {
     "line number": [
      687
     ]
    },
    "pyemma.msm.estimators.ChapmanKolmogorovValidator": {
     "line number": [
      687
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.discrete_trajectories_full": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "property": {
     "line number": [
      334
     ]
    },
    "pyemma.util.annotators.alias": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.discrete_trajectories_lagged": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "property": {
     "line number": [
      343
     ]
    },
    "pyemma.util.annotators.alias": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.discrete_trajectories_obs": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "property": {
     "line number": [
      352
     ]
    },
    "pyemma.util.annotators.alias": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.dt_traj": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "pyemma.util.units.TimeUnit": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.lagtime": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "property": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.msm_init": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      291
     ]
    },
    "isinstance": {
     "line number": [
      290
     ]
    },
    "pyemma.msm.estimators.MaximumLikelihoodMSM": {
     "line number": [
      290
     ]
    },
    "pyemma.msm.estimators.OOMReweightedMSM": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.nstates": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "int": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.nstates_obs": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "property": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.observable_set": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "property": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.observable_state_indexes": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      612
     ]
    },
    "property": {
     "line number": [
      605
     ]
    },
    "pyemma.util.discrete_trajectories.index_states": {
     "line number": [
      615
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.sample_by_observation_probabilities": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": {
    "pyemma.util.discrete_trajectories.sample_indexes_by_distribution": {
     "line number": [
      640
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.submodel": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "bhmm.estimators._tmatrix_disconnected.connected_sets": {
     "line number": [
      413,
      442
     ]
    },
    "bhmm.estimators._tmatrix_disconnected.estimate_P": {
     "line number": [
      430
     ]
    },
    "bhmm.estimators._tmatrix_disconnected.stationary_distribution": {
     "line number": [
      431,
      454
     ]
    },
    "copy.deepcopy": {
     "line number": [
      420
     ]
    },
    "float": {
     "line number": [
      409
     ]
    },
    "int": {
     "line number": [
      467,
      468
     ]
    },
    "isinstance": {
     "line number": [
      438
     ]
    },
    "len": {
     "line number": [
      422,
      445,
      468
     ]
    },
    "msmtools.estimation.count_states": {
     "line number": [
      461
     ]
    },
    "numpy.arange": {
     "line number": [
      404,
      406,
      468
     ]
    },
    "numpy.argmax": {
     "line number": [
      448
     ]
    },
    "numpy.array": {
     "line number": [
      448
     ]
    },
    "numpy.ix_": {
     "line number": [
      428,
      428,
      447,
      451,
      452,
      475,
      482
     ]
    },
    "numpy.ones": {
     "line number": [
      467
     ]
    },
    "numpy.where": {
     "line number": [
      425,
      461
     ]
    },
    "numpy.zeros": {
     "line number": [
      424
     ]
    },
    "str": {
     "line number": [
      408,
      438,
      459
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.submodel_disconnect": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.submodel_largest": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.submodel_populous": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM.trajectory_weights": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": {
    "msmtools.dtraj.count_states": {
     "line number": [
      587
     ]
    },
    "numpy.append": {
     "line number": [
      584
     ]
    },
    "numpy.sum": {
     "line number": [
      594
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.MaximumLikelihoodMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.OOMReweightedMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.OOMReweightedMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm._Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm._HMSM": {
  "data": {
   "shadows": "pyemma.msm.models.hmsm.HMSM"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm._MaximumLikelihoodEstimator": {
  "data": {
   "shadows": "bhmm.estimators.maximum_likelihood.MaximumLikelihoodEstimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm._tmatrix_disconnected": {
  "data": {
   "shadows": "bhmm.estimators._tmatrix_disconnected"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.bhmm": {
  "data": {
   "shadows": "bhmm"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.dt": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.estimate_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.init_discrete_hmm": {
  "data": {
   "shadows": "bhmm.init_discrete_hmm"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.init_discrete_hmm_spectral": {
  "data": {
   "shadows": "bhmm.init.discrete.init_discrete_hmm_spectral"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.msmtraj": {
  "data": {
   "shadows": "msmtools.dtraj"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_hmsm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "pyemma.msm.estimators._msm_estimator_base._MSMEstimator": {
     "line number": [
      30
     ]
    },
    "pyemma.util.annotators.aliased": {
     "line number": [
      29
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM": {
     "line number": [
      168
     ]
    },
    "pyemma.util.types.ensure_ndarray_or_None": {
     "line number": [
      174
     ]
    },
    "super": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM._estimate": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      296
     ]
    },
    "RuntimeError": {
     "line number": [
      246
     ]
    },
    "ValueError": {
     "line number": [
      216,
      288
     ]
    },
    "int": {
     "line number": [
      263
     ]
    },
    "isinstance": {
     "line number": [
      300
     ]
    },
    "len": {
     "line number": [
      215,
      215,
      264
     ]
    },
    "msmtools.estimation.is_connected": {
     "line number": [
      287
     ]
    },
    "msmtools.estimation.transition_matrix": {
     "line number": [
      280,
      290
     ]
    },
    "numpy.arange": {
     "line number": [
      264
     ]
    },
    "numpy.ones": {
     "line number": [
      263
     ]
    },
    "numpy.size": {
     "line number": [
      245
     ]
    },
    "numpy.zeros": {
     "line number": [
      223
     ]
    },
    "pyemma.msm.estimators.maximum_likelihood_msm.copy": {
     "line number": [
      222
     ]
    },
    "tuple": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM._prepare_input_revpi": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      189,
      201
     ]
    },
    "msmtools.estimation.connected_cmatrix": {
     "line number": [
      195
     ]
    },
    "msmtools.estimation.largest_connected_set": {
     "line number": [
      203
     ]
    },
    "numpy.where": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.MaximumLikelihoodMSM.effective_count_matrix": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "msmtools.estimation.effective_count_matrix": {
     "line number": [
      325
     ]
    },
    "property": {
     "line number": [
      312
     ]
    },
    "pyemma.util.linalg.submatrix": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm._MSMEstimator": {
  "data": {
   "shadows": "pyemma.msm.estimators._msm_estimator_base._MSMEstimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.maximum_likelihood_msm.submatrix": {
  "data": {
   "shadows": "pyemma.util.linalg.submatrix"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pyemma.msm.estimators._msm_estimator_base._MSMEstimator": {
     "line number": [
      35
     ]
    },
    "pyemma.util.annotators.aliased": {
     "line number": [
      34
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM.OOM_components": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "property": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM.OOM_omega": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "property": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM.OOM_rank": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "property": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM.OOM_sigma": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "property": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      153,
      155
     ]
    },
    "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM": {
     "line number": [
      157
     ]
    },
    "str": {
     "line number": [
      151
     ]
    },
    "super": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM._blocksplit_dtrajs": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      265
     ]
    },
    "len": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM._estimate": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      169,
      183,
      223
     ]
    },
    "RuntimeError": {
     "line number": [
      191
     ]
    },
    "int": {
     "line number": [
      199,
      230
     ]
    },
    "len": {
     "line number": [
      200,
      231
     ]
    },
    "msmtools.estimation.connected_sets": {
     "line number": [
      245
     ]
    },
    "msmtools.estimation.effective_count_matrix": {
     "line number": [
      206
     ]
    },
    "numpy.arange": {
     "line number": [
      200,
      231
     ]
    },
    "numpy.ones": {
     "line number": [
      199,
      230
     ]
    },
    "numpy.size": {
     "line number": [
      190
     ]
    },
    "pyemma.msm.estimators._OOM_MSM.bootstrapping_count_matrix": {
     "line number": [
      209
     ]
    },
    "pyemma.msm.estimators._OOM_MSM.bootstrapping_dtrajs": {
     "line number": [
      211
     ]
    },
    "pyemma.msm.estimators._OOM_MSM.equilibrium_transition_matrix": {
     "line number": [
      221
     ]
    },
    "pyemma.msm.estimators._OOM_MSM.oom_components": {
     "line number": [
      218
     ]
    },
    "pyemma.msm.estimators._OOM_MSM.rank_decision": {
     "line number": [
      216
     ]
    },
    "pyemma.msm.estimators._OOM_MSM.twostep_count_matrix": {
     "line number": [
      214
     ]
    },
    "pyemma.msm.estimators.oom_reweighted_msm.warnings": {
     "line number": [
      232
     ]
    },
    "pyemma.util.linalg.submatrix": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM.eigenvalues_OOM": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "property": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.OOMReweightedMSM.timescales_OOM": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      286
     ]
    },
    "numpy.log": {
     "line number": [
      286
     ]
    },
    "property": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.estimators.oom_reweighted_msm._MSMEstimator": {
  "data": {
   "shadows": "pyemma.msm.estimators._msm_estimator_base._MSMEstimator"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.__author__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyemma.msm.estimators.oom_reweighted_msm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.bootstrapping_count_matrix": {
  "data": {
   "shadows": "pyemma.msm.estimators._OOM_MSM.bootstrapping_count_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.bootstrapping_dtrajs": {
  "data": {
   "shadows": "pyemma.msm.estimators._OOM_MSM.bootstrapping_dtrajs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.equilibrium_transition_matrix": {
  "data": {
   "shadows": "pyemma.msm.estimators._OOM_MSM.equilibrium_transition_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.oom_components": {
  "data": {
   "shadows": "pyemma.msm.estimators._OOM_MSM.oom_components"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.rank_decision": {
  "data": {
   "shadows": "pyemma.msm.estimators._OOM_MSM.rank_decision"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.submatrix": {
  "data": {
   "shadows": "pyemma.util.linalg.submatrix"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.twostep_count_matrix": {
  "data": {
   "shadows": "pyemma.msm.estimators._OOM_MSM.twostep_count_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.estimators.oom_reweighted_msm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.models": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.models.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyemma.msm.models.hmsm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.models.hmsm.HMSM": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma.msm.models.msm.MSM": {
     "line number": [
      38
     ]
    },
    "pyemma.util.annotators.fix_docs": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.models.hmsm.HMSM.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "pyemma.msm.models.msm.MSM.__init__": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.correlation": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      300
     ]
    },
    "len": {
     "line number": [
      290,
      292,
      297,
      301
     ]
    },
    "numpy.dot": {
     "line number": [
      293,
      295
     ]
    },
    "pyemma.msm.models.msm.MSM.correlation": {
     "line number": [
      298
     ]
    },
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      289
     ]
    },
    "pyemma.util.types.ensure_ndarray_or_None": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.eigenvectors_left_obs": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      180
     ]
    },
    "property": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.eigenvectors_right_obs": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      184
     ]
    },
    "property": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.expectation": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      284
     ]
    },
    "len": {
     "line number": [
      277,
      281,
      285
     ]
    },
    "numpy.dot": {
     "line number": [
      279
     ]
    },
    "pyemma.msm.models.msm.MSM.expectation": {
     "line number": [
      282
     ]
    },
    "pyemma.util.types.ensure_float_vector": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.fingerprint_correlation": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      316
     ]
    },
    "len": {
     "line number": [
      306,
      308,
      313,
      317
     ]
    },
    "numpy.dot": {
     "line number": [
      309,
      311
     ]
    },
    "pyemma.msm.models.msm.MSM.fingerprint_correlation": {
     "line number": [
      314
     ]
    },
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      305
     ]
    },
    "pyemma.util.types.ensure_ndarray_or_None": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.fingerprint_relaxation": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      346
     ]
    },
    "len": {
     "line number": [
      337,
      339,
      343,
      347
     ]
    },
    "numpy.dot": {
     "line number": [
      340,
      341
     ]
    },
    "pyemma.msm.models.msm.MSM.fingerprint_relaxation": {
     "line number": [
      344
     ]
    },
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      336,
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.lifetimes": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      133
     ]
    },
    "numpy.log": {
     "line number": [
      133
     ]
    },
    "property": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.metastable_assignments": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "numpy.argmax": {
     "line number": [
      441
     ]
    },
    "property": {
     "line number": [
      425
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.metastable_distributions": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "property": {
     "line number": [
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.metastable_memberships": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      378
     ]
    },
    "numpy.nonzero": {
     "line number": [
      376
     ]
    },
    "numpy.transpose": {
     "line number": [
      378
     ]
    },
    "numpy.zeros": {
     "line number": [
      377
     ]
    },
    "property": {
     "line number": [
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.metastable_sets": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "numpy.where": {
     "line number": [
      422
     ]
    },
    "property": {
     "line number": [
      401
     ]
    },
    "range": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.nstates_obs": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "property": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.observation_probabilities": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "property": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.pcca": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.propagate": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "len": {
     "line number": [
      219
     ]
    },
    "numpy.diag": {
     "line number": [
      226
     ]
    },
    "numpy.dot": {
     "line number": [
      222,
      229
     ]
    },
    "numpy.power": {
     "line number": [
      226
     ]
    },
    "pyemma.util.linalg.mdot": {
     "line number": [
      226
     ]
    },
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      212
     ]
    },
    "pyemma.util.types.is_int": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.relaxation": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      331
     ]
    },
    "len": {
     "line number": [
      322,
      324,
      328,
      332
     ]
    },
    "numpy.dot": {
     "line number": [
      325,
      326
     ]
    },
    "pyemma.msm.models.msm.MSM.relaxation": {
     "line number": [
      329
     ]
    },
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      321,
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.set_model_params": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      101
     ]
    },
    "pyemma.msm.models.msm.MSM.set_model_params": {
     "line number": [
      96
     ]
    },
    "pyemma.util.types.is_float_matrix": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.simulate": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      479
     ]
    },
    "int": {
     "line number": [
      477
     ]
    },
    "msmtools.generation.generate_traj": {
     "line number": [
      476
     ]
    },
    "numpy.arange": {
     "line number": [
      474
     ]
    },
    "numpy.zeros": {
     "line number": [
      477
     ]
    },
    "scipy.stats.rv_discrete": {
     "line number": [
      474
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.stationary_distribution_obs": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      176
     ]
    },
    "property": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.submodel": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      253,
      255
     ]
    },
    "numpy.ix_": {
     "line number": [
      258,
      262
     ]
    },
    "pyemma.msm.models.hmsm.HMSM": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm.HMSM.transition_matrix_obs": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      166
     ]
    },
    "numpy.dot": {
     "line number": [
      170,
      170,
      170
     ]
    },
    "numpy.linalg.matrix_power": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm._MSM": {
  "data": {
   "shadows": "pyemma.msm.models.msm.MSM"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm.fix_docs": {
  "data": {
   "shadows": "pyemma.util.annotators.fix_docs"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm.mdot": {
  "data": {
   "shadows": "pyemma.util.linalg.mdot"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm.msmgen": {
  "data": {
   "shadows": "msmtools.generation"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm_sampled": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.models.hmsm_sampled.SampledHMSM": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "pyemma._base.model.SampledModel": {
     "line number": [
      34
     ]
    },
    "pyemma.msm.models.hmsm.HMSM": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.models.hmsm_sampled.SampledHMSM.set_model_params": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "pyemma._base.model.SampledModel.set_model_params": {
     "line number": [
      53
     ]
    },
    "pyemma.msm.models.hmsm.HMSM.set_model_params": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm_sampled.SampledHMSM.submodel": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "pyemma.msm.models.hmsm_sampled.SampledHMSM": {
     "line number": [
      73,
      77
     ]
    },
    "super": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.hmsm_sampled._HMSM": {
  "data": {
   "shadows": "pyemma.msm.models.hmsm.HMSM"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm_sampled._SampledModel": {
  "data": {
   "shadows": "pyemma._base.model.SampledModel"
  },
  "type": "import"
 },
 "pyemma.msm.models.hmsm_sampled.is_iterable": {
  "data": {
   "shadows": "pyemma.util.types.is_iterable"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.models.msm.MSM": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "pyemma._base.model.Model": {
     "line number": [
      45
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      45
     ]
    },
    "pyemma.util.annotators.aliased": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.models.msm.MSM.P": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      186
     ]
    },
    "msmtools.analysis.is_reversible": {
     "line number": [
      190
     ]
    },
    "msmtools.analysis.is_transition_matrix": {
     "line number": [
      185
     ]
    },
    "numpy.shape": {
     "line number": [
      188
     ]
    },
    "scipy.sparse.issparse": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.__eq__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "id": {
     "line number": [
      155,
      155
     ]
    },
    "isinstance": {
     "line number": [
      153
     ]
    },
    "numpy.allclose": {
     "line number": [
      161
     ]
    },
    "pyemma.msm.models.msm.MSM": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.__init__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._assert_in_active": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": {
    "numpy.max": {
     "line number": [
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._assert_metastable": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      897
     ]
    },
    "ValueError": {
     "line number": [
      896,
      898
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._committor_backward": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": {
    "msmtools.analysis.committor": {
     "line number": [
      555
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._committor_forward": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "msmtools.analysis.committor": {
     "line number": [
      537
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._compute_eigendecomposition": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "msmtools.analysis.rdl_decomposition": {
     "line number": [
      325,
      332
     ]
    },
    "numpy.all": {
     "line number": [
      334,
      336,
      338
     ]
    },
    "numpy.diag": {
     "line number": [
      341
     ]
    },
    "numpy.real": {
     "line number": [
      335,
      337,
      339
     ]
    },
    "pyemma.util.numeric._hash_numpy_array": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._compute_eigenvalues": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "msmtools.analysis.eigenvalues": {
     "line number": [
      297,
      300
     ]
    },
    "numpy.all": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._ensure_eigendecomposition": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      360
     ]
    },
    "pyemma.util.numeric._hash_numpy_array": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._ensure_eigenvalues": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      315
     ]
    },
    "len": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM._mfpt": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": {
    "msmtools.analysis.mfpt": {
     "line number": [
      519
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.committor_backward": {
  "data": {
   "lineno": 557
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.committor_forward": {
  "data": {
   "lineno": 539
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.correlation": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": {
    "float": {
     "line number": [
      708
     ]
    },
    "int": {
     "line number": [
      708
     ]
    },
    "math.ceil": {
     "line number": [
      708
     ]
    },
    "msmtools.analysis.correlation": {
     "line number": [
      713
     ]
    },
    "numpy.arange": {
     "line number": [
      708
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.dt_model": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "pyemma.util.units.TimeUnit": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.eigenvalues": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.eigenvectors_left": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.eigenvectors_right": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.expectation": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      595
     ]
    },
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      594
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.fingerprint_correlation": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": {
    "msmtools.analysis.fingerprint_correlation": {
     "line number": [
      761
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.fingerprint_relaxation": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": {
    "msmtools.analysis.fingerprint_relaxation": {
     "line number": [
      884
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.metastable_assignments": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1073
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.metastable_distributions": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1002
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.metastable_memberships": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": {
    "property": {
     "line number": [
      969
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.metastable_sets": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1038
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.mfpt": {
  "data": {
   "lineno": 521
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.n_metastable": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": {
    "property": {
     "line number": [
      961
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.neig": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      253
     ]
    },
    "min": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.nstates": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.pcca": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      947
     ]
    },
    "ValueError": {
     "line number": [
      937
     ]
    },
    "int": {
     "line number": [
      934
     ]
    },
    "pyemma.msm.models.msm.copy": {
     "line number": [
      954,
      955,
      956,
      957
     ]
    },
    "pyemma.msm.models.pcca.PCCA": {
     "line number": [
      946,
      949
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.pi": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "msmtools.analysis.stationary_distribution": {
     "line number": [
      286
     ]
    },
    "numpy.sum": {
     "line number": [
      289
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.propagate": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      483
     ]
    },
    "numpy.diag": {
     "line number": [
      491
     ]
    },
    "numpy.dot": {
     "line number": [
      485
     ]
    },
    "numpy.power": {
     "line number": [
      491
     ]
    },
    "pyemma.util.linalg.mdot": {
     "line number": [
      489
     ]
    },
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      476
     ]
    },
    "pyemma.util.types.is_int": {
     "line number": [
      477
     ]
    },
    "range": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.relaxation": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": {
    "float": {
     "line number": [
      834
     ]
    },
    "int": {
     "line number": [
      834,
      835
     ]
    },
    "list": {
     "line number": [
      835
     ]
    },
    "math.ceil": {
     "line number": [
      834
     ]
    },
    "msmtools.analysis.relaxation": {
     "line number": [
      840
     ]
    },
    "numpy.array": {
     "line number": [
      835
     ]
    },
    "range": {
     "line number": [
      835
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.reversible": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.set_model_params": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.simulate": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": {
    "msmtools.generation.generate_traj": {
     "line number": [
      1132
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.sparse": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.timescales": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "msmtools.analysis.dense.decomposition.timescales_from_eigenvalues": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.MSM.timestep_model": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "property": {
     "line number": [
      221
     ]
    },
    "str": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm.PCCA": {
  "data": {
   "shadows": "pyemma.msm.models.pcca.PCCA"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.__committor": {
  "data": {
   "shadows": "msmtools.analysis.committor"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.__docformat__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.msm.models.msm.__mfpt": {
  "data": {
   "shadows": "msmtools.analysis.mfpt"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._correlation": {
  "data": {
   "shadows": "msmtools.analysis.correlation"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._fc": {
  "data": {
   "shadows": "msmtools.analysis.fingerprint_correlation"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._fr": {
  "data": {
   "shadows": "msmtools.analysis.fingerprint_relaxation"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._hash_numpy_array": {
  "data": {
   "shadows": "pyemma.util.numeric._hash_numpy_array"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._relaxation": {
  "data": {
   "shadows": "msmtools.analysis.relaxation"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._statdist": {
  "data": {
   "shadows": "msmtools.analysis.stationary_distribution"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._timescales": {
  "data": {
   "shadows": "msmtools.analysis.dense.decomposition.timescales_from_eigenvalues"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.anaeig": {
  "data": {
   "shadows": "msmtools.analysis.eigenvalues"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.mdot": {
  "data": {
   "shadows": "pyemma.util.linalg.mdot"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.msmgen": {
  "data": {
   "shadows": "msmtools.generation"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm.rdl_decomposition": {
  "data": {
   "shadows": "msmtools.analysis.rdl_decomposition"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm_sampled": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.models.msm_sampled.MSM": {
  "data": {
   "shadows": "pyemma.msm.models.msm.MSM"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm_sampled.SampledMSM": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "pyemma._base.model.SampledModel": {
     "line number": [
      25
     ]
    },
    "pyemma.msm.models.msm.MSM": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.models.msm_sampled.SampledMSM.set_model_params": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "pyemma._base.model.SampledModel.set_model_params": {
     "line number": [
      44
     ]
    },
    "pyemma.msm.models.msm.MSM.set_model_params": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.msm_sampled.SampledModel": {
  "data": {
   "shadows": "pyemma._base.model.SampledModel"
  },
  "type": "import"
 },
 "pyemma.msm.models.msm_sampled.__author__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pyemma.msm.models.pcca": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.models.pcca.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.msm.models.pcca.PCCA": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "pyemma._base.model.Model": {
     "line number": [
      9
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.models.pcca.PCCA.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.coarse_grained_stationary_probability": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "property": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.coarse_grained_transition_matrix": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "property": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.memberships": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "property": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.metastable_assignment": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "numpy.argmax": {
     "line number": [
      124
     ]
    },
    "property": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.metastable_sets": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "numpy.where": {
     "line number": [
      138
     ]
    },
    "property": {
     "line number": [
      126
     ]
    },
    "range": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.n_metastable": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "property": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.output_probabilities": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "property": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.set_model_params": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "msmtools.analysis.dense.pcca.pcca": {
     "line number": [
      62
     ]
    },
    "msmtools.analysis.stationary_distribution": {
     "line number": [
      67
     ]
    },
    "numpy.diag": {
     "line number": [
      73,
      73,
      84
     ]
    },
    "numpy.dot": {
     "line number": [
      70,
      73,
      73,
      79,
      80,
      80,
      81,
      84
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      79
     ]
    },
    "pyemma.msm.models.pcca.warnings": {
     "line number": [
      51
     ]
    },
    "scipy.sparse.issparse": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.stationary_probability": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "property": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.PCCA.transition_matrix": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "property": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.pcca.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.models.pcca.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pyemma.msm.models.pcca.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.models.pcca.pcca": {
  "data": {
   "shadows": "msmtools.analysis.dense.pcca.pcca"
  },
  "type": "import"
 },
 "pyemma.msm.models.pcca.stationary_distribution": {
  "data": {
   "shadows": "msmtools.analysis.stationary_distribution"
  },
  "type": "import"
 },
 "pyemma.msm.models.pcca.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.models.reactive_flux.Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma._base.model.Model": {
     "line number": [
      38
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      38
     ]
    },
    "pyemma.util.annotators.aliased": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.A": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.B": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.I": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "list": {
     "line number": [
      143
     ]
    },
    "property": {
     "line number": [
      138
     ]
    },
    "pyemma._ext.orderedset.OrderedSet": {
     "line number": [
      143,
      143,
      143
     ]
    },
    "range": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "msmtools.flux": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux._compute_coarse_sets": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "len": {
     "line number": [
      317,
      326,
      329,
      332,
      335,
      336,
      336,
      336
     ]
    },
    "list": {
     "line number": [
      335,
      336
     ]
    },
    "pyemma._ext.orderedset.OrderedSet": {
     "line number": [
      304,
      305,
      306,
      307,
      310,
      314
     ]
    },
    "range": {
     "line number": [
      310,
      335,
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux._pathways_to_flux": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "len": {
     "line number": [
      261,
      263
     ]
    },
    "max": {
     "line number": [
      256
     ]
    },
    "numpy.max": {
     "line number": [
      256
     ]
    },
    "numpy.zeros": {
     "line number": [
      260
     ]
    },
    "range": {
     "line number": [
      261,
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.backward_committor": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "property": {
     "line number": [
      181
     ]
    },
    "pyemma.util.annotators.alias": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.coarse_grain": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "len": {
     "line number": [
      371
     ]
    },
    "list": {
     "line number": [
      382
     ]
    },
    "msmtools.flux.coarsegrain": {
     "line number": [
      374
     ]
    },
    "msmtools.flux.to_netflux": {
     "line number": [
      375
     ]
    },
    "numpy.dot": {
     "line number": [
      386,
      387
     ]
    },
    "numpy.sum": {
     "line number": [
      384
     ]
    },
    "numpy.zeros": {
     "line number": [
      378,
      379,
      380
     ]
    },
    "pyemma.msm.models.reactive_flux.ReactiveFlux": {
     "line number": [
      389
     ]
    },
    "range": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.committor": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "property": {
     "line number": [
      174
     ]
    },
    "pyemma.util.annotators.alias": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.dt_model": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "pyemma.util.units.TimeUnit": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.flux": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "property": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.gross_flux": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "property": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.major_flux": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.mfpt": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "property": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.net_flux": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "property": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.nstates": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "numpy.shape": {
     "line number": [
      114
     ]
    },
    "property": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.pathways": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "msmtools.flux.pathways": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.rate": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "property": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.set_model_params": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "msmtools.flux": {
     "line number": [
      89,
      96
     ]
    },
    "msmtools.flux.rate": {
     "line number": [
      97
     ]
    },
    "msmtools.flux.total_flux": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.stationary_distribution": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.ReactiveFlux.total_flux": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "property": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.models.reactive_flux.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.msm.models.reactive_flux.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux.set": {
  "data": {
   "shadows": "pyemma._ext.orderedset.OrderedSet"
  },
  "type": "import"
 },
 "pyemma.msm.models.reactive_flux.tptapi": {
  "data": {
   "shadows": "msmtools.flux"
  },
  "type": "import"
 },
 "pyemma.msm.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.tests.birth_death_chain": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "object": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      58,
      60,
      62
     ]
    },
    "numpy.all": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.committor_backward": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.committor_forward": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "numpy.cumprod": {
     "line number": [
      131
     ]
    },
    "numpy.cumsum": {
     "line number": [
      144,
      149
     ]
    },
    "numpy.sum": {
     "line number": [
      144,
      149
     ]
    },
    "numpy.zeros": {
     "line number": [
      128,
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.flux": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "numpy.diag_indices": {
     "line number": [
      217
     ]
    },
    "numpy.newaxis": {
     "line number": [
      216,
      216,
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.netflux": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "numpy.transpose": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.rate": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.stationary_distribution": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.cumprod": {
     "line number": [
      99
     ]
    },
    "numpy.sum": {
     "line number": [
      100
     ]
    },
    "numpy.zeros": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.totalflux": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "list": {
     "line number": [
      262,
      263
     ]
    },
    "range": {
     "line number": [
      262,
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.transition_matrix": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      78,
      79,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.BirthDeathChain.transition_matrix_sparse": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "scipy.sparse.diags": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.birth_death_chain.diags": {
  "data": {
   "shadows": "scipy.sparse.diags"
  },
  "type": "import"
 },
 "pyemma.msm.tests.birth_death_chain.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      643
     ]
    },
    "pyemma.msm.tests.test_amm.unittest": {
     "line number": [
      644
     ]
    },
    "pyemma.msm.tests.test_msm.TestMSMDoubleWell": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_amm.AugmentedMarkovModel": {
  "data": {
   "shadows": "pyemma.msm.estimators.AugmentedMarkovModel"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.BirthDeathChain": {
  "data": {
   "shadows": "pyemma.msm.tests.birth_death_chain.BirthDeathChain"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_msm.TestMSMDoubleWell": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell._expectation": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "list": {
     "line number": [
      269
     ]
    },
    "numpy.abs": {
     "line number": [
      271
     ]
    },
    "range": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell._mfpt": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell._relaxation": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "len": {
     "line number": [
      293,
      294
     ]
    },
    "list": {
     "line number": [
      286
     ]
    },
    "numpy.allclose": {
     "line number": [
      290
     ]
    },
    "numpy.shape": {
     "line number": [
      290
     ]
    },
    "numpy.zeros": {
     "line number": [
      290
     ]
    },
    "range": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell._timescales": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      215,
      219
     ]
    },
    "numpy.array": {
     "line number": [
      218,
      223
     ]
    },
    "numpy.isreal": {
     "line number": [
      219
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      221,
      225
     ]
    },
    "pyemma.msm.tests.test_amm.warnings": {
     "line number": [
      202,
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.setUpClass": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      95
     ]
    },
    "list": {
     "line number": [
      103
     ]
    },
    "numpy.array": {
     "line number": [
      100,
      101
     ]
    },
    "numpy.linspace": {
     "line number": [
      99
     ]
    },
    "numpy.pi": {
     "line number": [
      99
     ]
    },
    "numpy.sqrt": {
     "line number": [
      102,
      102
     ]
    },
    "pyemma.msm.estimate_augmented_markov_model": {
     "line number": [
      107
     ]
    },
    "set": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_active_count_fraction": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_active_set": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_active_state_fraction": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_active_state_indexes": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_committor": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_connected_sets": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_connectivity": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_correlation": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_count_matrix_active": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_count_matrix_full": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_discrete_trajectories_active": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_discrete_trajectories_full": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_dt_model": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_effective_count_matrix": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_eigenvalues": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_eigenvectors_RDL": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_eigenvectors_left": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_eigenvectors_right": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_expectation": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_fingerprint_correlation": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_fingerprint_relaxation": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_generate_traj": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_lagtime": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_largest_connected_set": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_mfpt": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_nstates": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_pcca_assignment": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_pcca_distributions": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_pcca_memberships": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_pcca_sets": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_relaxation": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_reversible": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_sample_by_state": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_score": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_score_cv": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_serialize": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      347,
      348,
      349,
      350,
      351,
      352,
      353,
      354,
      355,
      356,
      357,
      358,
      361,
      362,
      363,
      364,
      365,
      366,
      367,
      368,
      370,
      371
     ]
    },
    "pyemma.msm.tests.test_amm.os": {
     "line number": [
      374
     ]
    },
    "pyemma.msm.tests.test_amm.pyemma": {
     "line number": [
      344
     ]
    },
    "pyemma.msm.tests.test_amm.tempfile": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_simulate_MSM": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "len": {
     "line number": [
      327,
      328,
      328
     ]
    },
    "numpy.unique": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_sparse": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_statdist": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_timescales": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_timestep": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_trajectory_weights": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_transition_matrix": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMDoubleWell.test_two_state_kinetics": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMSimple": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_amm.unittest": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_amm.TestAMMSimple.setUp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "msmtools.generation.generate_traj": {
     "line number": [
      60
     ]
    },
    "numpy.array": {
     "line number": [
      66,
      67
     ]
    },
    "numpy.linspace": {
     "line number": [
      65,
      65
     ]
    },
    "numpy.random.mtrand.get_state": {
     "line number": [
      42
     ]
    },
    "numpy.random.mtrand.seed": {
     "line number": [
      45
     ]
    },
    "numpy.sqrt": {
     "line number": [
      68,
      68
     ]
    },
    "numpy.vstack": {
     "line number": [
      65
     ]
    },
    "numpy.zeros": {
     "line number": [
      49,
      50
     ]
    },
    "pyemma.msm.estimators.AugmentedMarkovModel": {
     "line number": [
      73
     ]
    },
    "pyemma.msm.tests.birth_death_chain.BirthDeathChain": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMSimple.tearDown": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "numpy.random.mtrand.set_state": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestAMMSimple.test_AMM": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      85,
      86,
      87,
      88,
      89,
      90
     ]
    },
    "pyemma.msm.estimate_augmented_markov_model": {
     "line number": [
      82
     ]
    },
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell._expectation": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "list": {
     "line number": [
      535
     ]
    },
    "numpy.abs": {
     "line number": [
      538
     ]
    },
    "range": {
     "line number": [
      535
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell._mfpt": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      525
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell._relaxation": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "len": {
     "line number": [
      560,
      561
     ]
    },
    "list": {
     "line number": [
      553
     ]
    },
    "numpy.allclose": {
     "line number": [
      557
     ]
    },
    "numpy.shape": {
     "line number": [
      557
     ]
    },
    "numpy.zeros": {
     "line number": [
      557
     ]
    },
    "range": {
     "line number": [
      553
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell._timescales": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      501,
      504
     ]
    },
    "numpy.array": {
     "line number": [
      503
     ]
    },
    "numpy.isreal": {
     "line number": [
      504
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      506
     ]
    },
    "pyemma.msm.tests.test_amm.warnings": {
     "line number": [
      488,
      495
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.setUpClass": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      381
     ]
    },
    "list": {
     "line number": [
      390
     ]
    },
    "numpy.array": {
     "line number": [
      387,
      388
     ]
    },
    "numpy.linspace": {
     "line number": [
      386
     ]
    },
    "numpy.pi": {
     "line number": [
      386
     ]
    },
    "numpy.sqrt": {
     "line number": [
      389,
      389
     ]
    },
    "pyemma.msm.estimate_augmented_markov_model": {
     "line number": [
      394
     ]
    },
    "pyemma.msm.tests.test_amm.pyemma": {
     "line number": [
      385
     ]
    },
    "set": {
     "line number": [
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_active_count_fraction": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_active_set": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_active_state_fraction": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_active_state_indexes": {
  "data": {
   "lineno": 577
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_committor": {
  "data": {
   "lineno": 515
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_connected_sets": {
  "data": {
   "lineno": 427
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_connectivity": {
  "data": {
   "lineno": 430
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_correlation": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_count_matrix_active": {
  "data": {
   "lineno": 433
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_count_matrix_full": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_discrete_trajectories_active": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_discrete_trajectories_full": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_dt_model": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_eigenvalues": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_eigenvectors_RDL": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_eigenvectors_left": {
  "data": {
   "lineno": 476
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_eigenvectors_right": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_expectation": {
  "data": {
   "lineno": 540
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_fingerprint_correlation": {
  "data": {
   "lineno": 567
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_fingerprint_relaxation": {
  "data": {
   "lineno": 570
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_generate_traj": {
  "data": {
   "lineno": 580
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_lagtime": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_largest_connected_set": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_mfpt": {
  "data": {
   "lineno": 527
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_nstates": {
  "data": {
   "lineno": 424
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_relaxation": {
  "data": {
   "lineno": 564
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_reversible": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_sample_by_state": {
  "data": {
   "lineno": 583
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_score": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_score_cv": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_serialize": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      614,
      615,
      616,
      617,
      618,
      619,
      620,
      621,
      622,
      623,
      624,
      625,
      628,
      629,
      630,
      631,
      632,
      633,
      634,
      635,
      637,
      638
     ]
    },
    "pyemma.msm.tests.test_amm.os": {
     "line number": [
      641
     ]
    },
    "pyemma.msm.tests.test_amm.pyemma": {
     "line number": [
      611
     ]
    },
    "pyemma.msm.tests.test_amm.tempfile": {
     "line number": [
      608
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_simulate_MSM": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": {
    "len": {
     "line number": [
      594,
      595,
      595
     ]
    },
    "numpy.unique": {
     "line number": [
      595
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_sparse": {
  "data": {
   "lineno": 407
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_statdist": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_timescales": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_timestep": {
  "data": {
   "lineno": 445
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_trajectory_weights": {
  "data": {
   "lineno": 586
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_transition_matrix": {
  "data": {
   "lineno": 448
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm.TestCoreAMMDoubleWell.test_two_state_kinetics": {
  "data": {
   "lineno": 602
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_amm._ctmsm": {
  "data": {
   "shadows": "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm._tmsm": {
  "data": {
   "shadows": "pyemma.msm.tests.test_msm.TestMSMDoubleWell"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.assert_allclose": {
  "data": {
   "shadows": "pyemma.util.numeric.assert_allclose"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.estimate_augmented_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_augmented_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_amm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      376
     ]
    },
    "pyemma.msm.tests.test_bayesian_hmsm.unittest": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_bayesian_hmsm.unittest": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._eigenvalues_samples": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      107
     ]
    },
    "numpy.isclose": {
     "line number": [
      106
     ]
    },
    "numpy.shape": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._eigenvalues_stats": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      118,
      129,
      130
     ]
    },
    "numpy.array_equal": {
     "line number": [
      116,
      122,
      126,
      127
     ]
    },
    "numpy.isclose": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._eigenvectors_left_samples": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "numpy.shape": {
     "line number": [
      138
     ]
    },
    "numpy.sign": {
     "line number": [
      141,
      141,
      142,
      142
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._eigenvectors_left_stats": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      164,
      165
     ]
    },
    "numpy.array_equal": {
     "line number": [
      151,
      157,
      161,
      162
     ]
    },
    "numpy.sign": {
     "line number": [
      152,
      152,
      153,
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._eigenvectors_right_samples": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "numpy.shape": {
     "line number": [
      173
     ]
    },
    "numpy.sign": {
     "line number": [
      176,
      176,
      177,
      177
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._eigenvectors_right_stats": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      199,
      200
     ]
    },
    "numpy.array_equal": {
     "line number": [
      192,
      196,
      197
     ]
    },
    "numpy.sign": {
     "line number": [
      187,
      187,
      188,
      188
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._lag": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._lifetimes_samples": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      280
     ]
    },
    "numpy.array_equal": {
     "line number": [
      277
     ]
    },
    "numpy.shape": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._lifetimes_stats": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      290,
      301,
      302
     ]
    },
    "numpy.array_equal": {
     "line number": [
      289,
      294,
      298,
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._nstates": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._reversible": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._stationary_distribution_samples": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      212
     ]
    },
    "numpy.array_equal": {
     "line number": [
      208
     ]
    },
    "numpy.isclose": {
     "line number": [
      211
     ]
    },
    "numpy.shape": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._stationary_distribution_stats": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      224
     ]
    },
    "numpy.all": {
     "line number": [
      223,
      235,
      236
     ]
    },
    "numpy.array_equal": {
     "line number": [
      221,
      228,
      232,
      233
     ]
    },
    "numpy.isclose": {
     "line number": [
      222
     ]
    },
    "numpy.max": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._timescales_samples": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      247
     ]
    },
    "numpy.shape": {
     "line number": [
      244
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._timescales_stats": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      257,
      268,
      269
     ]
    },
    "numpy.array_equal": {
     "line number": [
      256,
      261,
      265,
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._transition_matrix_samples": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "msmtools.analysis.is_reversible": {
     "line number": [
      72
     ]
    },
    "msmtools.analysis.is_transition_matrix": {
     "line number": [
      71
     ]
    },
    "numpy.array_equal": {
     "line number": [
      67
     ]
    },
    "numpy.shape": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM._transition_matrix_stats": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "msmtools.analysis.is_transition_matrix": {
     "line number": [
      83
     ]
    },
    "numpy.all": {
     "line number": [
      94,
      95
     ]
    },
    "numpy.array_equal": {
     "line number": [
      82,
      87,
      91,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.setUpClass": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      26
     ]
    },
    "pyemma.msm.bayesian_hidden_markov_model": {
     "line number": [
      41
     ]
    },
    "pyemma.msm.tests.test_bayesian_hmsm.bhmm": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_eigenvalues_samples": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_eigenvalues_stats": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_eigenvectors_left_samples": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_eigenvectors_left_stats": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_eigenvectors_right_samples": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_eigenvectors_right_stats": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_lag": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_lifetimes_samples": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_lifetimes_stats": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_nstates": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_reversible": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_stationary_distribution_samples": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_stationary_distribution_stats": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_submodel_simple": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      317
     ]
    },
    "pyemma.msm.bayesian_hidden_markov_model": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_timescales_samples": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_timescales_stats": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_transition_matrix_samples": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMM.test_transition_matrix_stats": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMMSpecialCases": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_bayesian_hmsm.unittest": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMMSpecialCases.test_initialized_bhmm": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      357
     ]
    },
    "numpy.copy": {
     "line number": [
      358
     ]
    },
    "numpy.isclose": {
     "line number": [
      355
     ]
    },
    "numpy.min": {
     "line number": [
      359,
      360
     ]
    },
    "pyemma.msm.tests.test_bayesian_hmsm.pyemma.datasets": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMMSpecialCases.test_initialized_bhmm_newstride": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "numpy.isclose": {
     "line number": [
      373
     ]
    },
    "numpy.random.randint": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.TestBHMMSpecialCases.test_separate_states": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      339
     ]
    },
    "numpy.array": {
     "line number": [
      333,
      334
     ]
    },
    "pyemma.msm.bayesian_hidden_markov_model": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.bayesian_hidden_markov_model": {
  "data": {
   "shadows": "pyemma.msm.bayesian_hidden_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.bhmm": {
  "data": {
   "shadows": "bhmm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.d": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.pyemma.msm": {
  "data": {
   "shadows": "pyemma.msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_hmsm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_msm": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      314
     ]
    },
    "pyemma.msm.tests.test_bayesian_msm.unittest": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_bayesian_msm.unittest": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._eigenvalues_samples": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      134
     ]
    },
    "numpy.isclose": {
     "line number": [
      133
     ]
    },
    "numpy.shape": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._eigenvalues_stats": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      146,
      157,
      158
     ]
    },
    "numpy.array_equal": {
     "line number": [
      144,
      150,
      154,
      155
     ]
    },
    "numpy.isclose": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._eigenvectors_left_samples": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "numpy.shape": {
     "line number": [
      167
     ]
    },
    "numpy.sign": {
     "line number": [
      170,
      170,
      171,
      171
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._eigenvectors_left_stats": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      194,
      195
     ]
    },
    "numpy.array_equal": {
     "line number": [
      181,
      187,
      191,
      192
     ]
    },
    "numpy.sign": {
     "line number": [
      182,
      182,
      183,
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._eigenvectors_right_samples": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "numpy.shape": {
     "line number": [
      204
     ]
    },
    "numpy.sign": {
     "line number": [
      207,
      207,
      208,
      208
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._eigenvectors_right_stats": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      231,
      232
     ]
    },
    "numpy.array_equal": {
     "line number": [
      224,
      228,
      229
     ]
    },
    "numpy.sign": {
     "line number": [
      219,
      219,
      220,
      220
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._lag": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._nstates": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._reversible": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._stationary_distribution_samples": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      244
     ]
    },
    "numpy.array_equal": {
     "line number": [
      240
     ]
    },
    "numpy.isclose": {
     "line number": [
      243
     ]
    },
    "numpy.shape": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._stationary_distribution_stats": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      257
     ]
    },
    "numpy.all": {
     "line number": [
      256,
      268,
      269
     ]
    },
    "numpy.array_equal": {
     "line number": [
      254,
      261,
      265,
      266
     ]
    },
    "numpy.isclose": {
     "line number": [
      255
     ]
    },
    "numpy.max": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._timescales_samples": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      281
     ]
    },
    "numpy.shape": {
     "line number": [
      278
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._timescales_stats": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      292,
      303,
      304
     ]
    },
    "numpy.array_equal": {
     "line number": [
      291,
      296,
      300,
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._transition_matrix_samples": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      91
     ]
    },
    "msmtools.analysis.is_reversible": {
     "line number": [
      90
     ]
    },
    "msmtools.analysis.is_transition_matrix": {
     "line number": [
      88
     ]
    },
    "msmtools.analysis.stationary_distribution": {
     "line number": [
      94
     ]
    },
    "numpy.array_equal": {
     "line number": [
      84
     ]
    },
    "numpy.newaxis": {
     "line number": [
      95
     ]
    },
    "numpy.shape": {
     "line number": [
      84
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      96
     ]
    },
    "numpy.transpose": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM._transition_matrix_stats": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "msmtools.analysis.is_transition_matrix": {
     "line number": [
      109
     ]
    },
    "numpy.all": {
     "line number": [
      120,
      121
     ]
    },
    "numpy.array_equal": {
     "line number": [
      108,
      113,
      117,
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.setUpClass": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      26
     ]
    },
    "int": {
     "line number": [
      40
     ]
    },
    "numpy.zeros": {
     "line number": [
      35,
      40
     ]
    },
    "pyemma.msm.bayesian_markov_model": {
     "line number": [
      50,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_dt_model": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "pyemma.util.units.TimeUnit": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_eigenvalues_samples": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_eigenvalues_stats": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_eigenvectors_left_samples": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_eigenvectors_left_stats": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_eigenvectors_right_samples": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_eigenvectors_right_stats": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_lag": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_nstates": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_reversible": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_stationary_distribution_samples": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_stationary_distribution_stats": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_timescales_samples": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_timescales_stats": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_transition_matrix_samples": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TestBMSM.test_transition_matrix_stats": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_bayesian_msm.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_msm.bayesian_markov_model": {
  "data": {
   "shadows": "pyemma.msm.bayesian_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_msm.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_msm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_msm.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_msm.stationary_distribution": {
  "data": {
   "shadows": "msmtools.analysis.stationary_distribution"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_bayesian_msm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      321
     ]
    },
    "pyemma.msm.tests.test_cktest.sys": {
     "line number": [
      40,
      41
     ]
    },
    "pyemma.msm.tests.test_cktest.unittest": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_cktest.BirthDeathChain": {
  "data": {
   "shadows": "pyemma.msm.tests.birth_death_chain.BirthDeathChain"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.TestCK_AllEstimators": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_cktest.unittest": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_cktest.TestCK_AllEstimators.setUpClass": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      187
     ]
    },
    "pyemma.msm.tests.test_cktest.pyemma": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_AllEstimators.tearDown": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      199
     ]
    },
    "pyemma.msm.tests.test_cktest.py3": {
     "line number": [
      194
     ]
    },
    "pyemma.msm.tests.test_cktest.pyemma": {
     "line number": [
      198
     ]
    },
    "pyemma.msm.tests.test_cktest.tempfile": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_AllEstimators.test_ck_msm": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      217,
      220
     ]
    },
    "numpy.array": {
     "line number": [
      204,
      210
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_AllEstimators.test_its_bhmm": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      313,
      316,
      317,
      318
     ]
    },
    "numpy.array": {
     "line number": [
      288,
      294,
      300,
      306
     ]
    },
    "pyemma.msm.bayesian_hidden_markov_model": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_AllEstimators.test_its_bmsm": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      255,
      258,
      259,
      260
     ]
    },
    "numpy.array": {
     "line number": [
      230,
      236,
      242,
      248
     ]
    },
    "pyemma.msm.bayesian_markov_model": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_AllEstimators.test_its_hmsm": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      278,
      281
     ]
    },
    "numpy.array": {
     "line number": [
      265,
      271
     ]
    },
    "pyemma.msm.estimate_hidden_markov_model": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_MSM": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_cktest.unittest": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_cktest.TestCK_MSM.setUp": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "msmtools.estimation.count_matrix": {
     "line number": [
      103
     ]
    },
    "msmtools.estimation.largest_connected_set": {
     "line number": [
      104
     ]
    },
    "msmtools.estimation.largest_connected_submatrix": {
     "line number": [
      105
     ]
    },
    "msmtools.estimation.transition_matrix": {
     "line number": [
      107
     ]
    },
    "msmtools.generation.generate_traj": {
     "line number": [
      65
     ]
    },
    "numpy.dot": {
     "line number": [
      90,
      108
     ]
    },
    "numpy.random.mtrand.get_state": {
     "line number": [
      47
     ]
    },
    "numpy.random.mtrand.seed": {
     "line number": [
      50
     ]
    },
    "numpy.sqrt": {
     "line number": [
      114,
      120
     ]
    },
    "numpy.zeros": {
     "line number": [
      54,
      55,
      80,
      87,
      96,
      97
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      69
     ]
    },
    "pyemma.msm.tests.birth_death_chain.BirthDeathChain": {
     "line number": [
      63
     ]
    },
    "range": {
     "line number": [
      89,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_MSM.tearDown": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "numpy.random.mtrand.set_state": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_MSM.test_cktest_njobs_1": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      139
     ]
    },
    "numpy.vstack": {
     "line number": [
      147,
      149
     ]
    },
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      148,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_MSM.test_cktest_njobs_2": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      154
     ]
    },
    "numpy.vstack": {
     "line number": [
      162,
      164
     ]
    },
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      163,
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.TestCK_MSM.test_cktest_njobs_3": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      169
     ]
    },
    "numpy.vstack": {
     "line number": [
      177,
      179
     ]
    },
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      178,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cktest.assert_allclose": {
  "data": {
   "shadows": "pyemma.util.numeric.assert_allclose"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.count_matrix": {
  "data": {
   "shadows": "msmtools.estimation.count_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.estimate_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.largest_connected_set": {
  "data": {
   "shadows": "msmtools.estimation.largest_connected_set"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.largest_connected_submatrix": {
  "data": {
   "shadows": "msmtools.estimation.largest_connected_submatrix"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.msm": {
  "data": {
   "shadows": "pyemma.msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.on_win": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyemma.msm.tests.test_cktest.py3": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyemma.msm.tests.test_cktest.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.transition_matrix": {
  "data": {
   "shadows": "msmtools.estimation.transition_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cktest.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cmsm": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      830
     ]
    },
    "pyemma.msm.tests.test_cmsm.unittest": {
     "line number": [
      831
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_cmsm.unittest": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._active_count_fraction": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._active_set": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "len": {
     "line number": [
      137,
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._active_state_fraction": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._active_state_indexes": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "len": {
     "line number": [
      603
     ]
    },
    "pyemma.util.discrete_trajectories.count_states": {
     "line number": [
      607
     ]
    },
    "range": {
     "line number": [
      610
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._committor": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      433
     ]
    },
    "numpy.ones": {
     "line number": [
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._connected_sets": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "len": {
     "line number": [
      171
     ]
    },
    "numpy.all": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._connectivity": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._correlation": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      470
     ]
    },
    "len": {
     "line number": [
      475,
      476,
      485,
      486
     ]
    },
    "list": {
     "line number": [
      473,
      478,
      483
     ]
    },
    "numpy.allclose": {
     "line number": [
      481
     ]
    },
    "range": {
     "line number": [
      473,
      478,
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._count_matrix_active": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._count_matrix_full": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._discrete_trajectories_active": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "len": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._discrete_trajectories_full": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      213
     ]
    },
    "numpy.array": {
     "line number": [
      211
     ]
    },
    "numpy.where": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._dt_model": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "pyemma.util.units.TimeUnit": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._eigenvalues": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "len": {
     "line number": [
      322
     ]
    },
    "numpy.abs": {
     "line number": [
      317,
      319,
      321
     ]
    },
    "numpy.all": {
     "line number": [
      326
     ]
    },
    "numpy.isreal": {
     "line number": [
      326
     ]
    },
    "numpy.max": {
     "line number": [
      317,
      319
     ]
    },
    "range": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._eigenvectors_RDL": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      380,
      383,
      385
     ]
    },
    "numpy.diag": {
     "line number": [
      377
     ]
    },
    "numpy.dot": {
     "line number": [
      380,
      383,
      385,
      385
     ]
    },
    "numpy.eye": {
     "line number": [
      380,
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._eigenvectors_left": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      343
     ]
    },
    "numpy.all": {
     "line number": [
      339,
      348
     ]
    },
    "numpy.allclose": {
     "line number": [
      345
     ]
    },
    "numpy.isreal": {
     "line number": [
      348
     ]
    },
    "numpy.max": {
     "line number": [
      343
     ]
    },
    "numpy.sum": {
     "line number": [
      345
     ]
    },
    "numpy.zeros": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._eigenvectors_right": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      361,
      367
     ]
    },
    "numpy.allclose": {
     "line number": [
      364
     ]
    },
    "numpy.isreal": {
     "line number": [
      367
     ]
    },
    "numpy.ones": {
     "line number": [
      364
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._expectation": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      459
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._fingerprint_correlation": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      519
     ]
    },
    "ValueError": {
     "line number": [
      541,
      544
     ]
    },
    "list": {
     "line number": [
      522,
      531,
      536,
      542,
      545,
      546
     ]
    },
    "numpy.all": {
     "line number": [
      529
     ]
    },
    "numpy.allclose": {
     "line number": [
      527,
      533,
      534,
      538,
      539
     ]
    },
    "numpy.inf": {
     "line number": [
      525
     ]
    },
    "range": {
     "line number": [
      522,
      531,
      536,
      542,
      545,
      546
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._fingerprint_relaxation": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      560
     ]
    },
    "ValueError": {
     "line number": [
      583,
      586
     ]
    },
    "list": {
     "line number": [
      563,
      584,
      589
     ]
    },
    "numpy.abs": {
     "line number": [
      570,
      580
     ]
    },
    "numpy.allclose": {
     "line number": [
      568,
      578
     ]
    },
    "numpy.array": {
     "line number": [
      572
     ]
    },
    "numpy.inf": {
     "line number": [
      566,
      576
     ]
    },
    "numpy.max": {
     "line number": [
      570,
      580
     ]
    },
    "range": {
     "line number": [
      563,
      584,
      589
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._generate_traj": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      623,
      625
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._lagtime": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._largest_connected_set": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      149,
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._mfpt": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._nstates": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._relaxation": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": {
    "len": {
     "line number": [
      504,
      505
     ]
    },
    "list": {
     "line number": [
      497
     ]
    },
    "numpy.allclose": {
     "line number": [
      501
     ]
    },
    "numpy.shape": {
     "line number": [
      501
     ]
    },
    "numpy.zeros": {
     "line number": [
      501
     ]
    },
    "range": {
     "line number": [
      497
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._sample_by_state": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      639
     ]
    },
    "len": {
     "line number": [
      636
     ]
    },
    "numpy.all": {
     "line number": [
      641
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._score": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._statdist": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      305
     ]
    },
    "numpy.all": {
     "line number": [
      303
     ]
    },
    "numpy.sum": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._timescales": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      401,
      406
     ]
    },
    "numpy.array": {
     "line number": [
      404
     ]
    },
    "numpy.isreal": {
     "line number": [
      406
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      408,
      411
     ]
    },
    "pyemma.msm.tests.test_cmsm.warnings": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._timestep": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._trajectory_weights": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      654
     ]
    },
    "numpy.sum": {
     "line number": [
      654
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._transition_matrix": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      255,
      255
     ]
    },
    "msmtools.analysis.is_connected": {
     "line number": [
      262
     ]
    },
    "msmtools.analysis.is_reversible": {
     "line number": [
      265
     ]
    },
    "msmtools.analysis.is_transition_matrix": {
     "line number": [
      261
     ]
    },
    "numpy.all": {
     "line number": [
      257
     ]
    },
    "numpy.ndarray": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell._two_state_kinetics": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      690
     ]
    },
    "numpy.argmax": {
     "line number": [
      679
     ]
    },
    "numpy.argmin": {
     "line number": [
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.setUpClass": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      63
     ]
    },
    "numpy.bincount": {
     "line number": [
      69
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      78,
      79,
      81
     ]
    },
    "pyemma.msm.tests.test_cmsm.pyemma": {
     "line number": [
      68
     ]
    },
    "pyemma.msm.tests.test_cmsm.warnings": {
     "line number": [
      75,
      76,
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_active_count_fraction": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_active_set": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_active_state_fraction": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_active_state_indexes": {
  "data": {
   "lineno": 614
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_committor": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_connected_sets": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_connectivity": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_correlation": {
  "data": {
   "lineno": 489
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_count_matrix_active": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_count_matrix_full": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_discrete_trajectories_active": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_discrete_trajectories_full": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_dt_model": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_eigenvalues": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_eigenvectors_RDL": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_eigenvectors_left": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_eigenvectors_right": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_expectation": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_fingerprint_correlation": {
  "data": {
   "lineno": 549
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_fingerprint_relaxation": {
  "data": {
   "lineno": 592
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_generate_traj": {
  "data": {
   "lineno": 627
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_lagtime": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_largest_connected_set": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_mfpt": {
  "data": {
   "lineno": 448
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_nstates": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_relaxation": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_reversible": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_sample_by_state": {
  "data": {
   "lineno": 646
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_score": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_simulate_MSM": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": {
    "len": {
     "line number": [
      666,
      667,
      667
     ]
    },
    "numpy.unique": {
     "line number": [
      667
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_statdist": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_timescales": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_timestep": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_trajectory_weights": {
  "data": {
   "lineno": 656
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_transition_matrix": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMDoubleWell.test_two_state_kinetics": {
  "data": {
   "lineno": 692
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMRevPi": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_cmsm.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMRevPi.test_valid_stationary_vector": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      46
     ]
    },
    "numpy.all": {
     "line number": [
      44
     ]
    },
    "numpy.array": {
     "line number": [
      39,
      40,
      41,
      42
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      45
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      43,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCMSMRevPi.test_valid_trajectory": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      57
     ]
    },
    "numpy.all": {
     "line number": [
      55
     ]
    },
    "numpy.array": {
     "line number": [
      50,
      51,
      52,
      55
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      56
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      54,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCoreMSM": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_cmsm.unittest": {
     "line number": [
      698
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_cmsm.TestCoreMSM.setUpClass": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      699
     ]
    },
    "pyemma.msm.tests.test_cmsm.pyemma.datasets": {
     "line number": [
      702
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCoreMSM.test_compare2hmm": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      748,
      749,
      750
     ]
    },
    "pyemma.msm.tests.test_cmsm.pyemma": {
     "line number": [
      745,
      746
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCoreMSM.test_compare2hmm_bayes": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      758,
      759
     ]
    },
    "pyemma.msm.tests.test_cmsm.pyemma": {
     "line number": [
      755,
      756
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCoreMSM.test_core": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": {
    "len": {
     "line number": [
      709,
      713
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      713
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      707
     ]
    },
    "numpy.unique": {
     "line number": [
      712
     ]
    },
    "pyemma.msm.tests.test_cmsm.pyemma": {
     "line number": [
      706
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCoreMSM.test_indices_remapping_sample_by_dist": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      719
     ]
    },
    "numpy.vstack": {
     "line number": [
      726
     ]
    },
    "pyemma.msm.tests.test_cmsm.pyemma": {
     "line number": [
      718
     ]
    },
    "tuple": {
     "line number": [
      726
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCoreMSM.test_indices_remapping_sample_by_state": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": {
    "numpy.vstack": {
     "line number": [
      738
     ]
    },
    "pyemma.msm.tests.test_cmsm.pyemma": {
     "line number": [
      732
     ]
    },
    "tuple": {
     "line number": [
      738
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCoreMSM.test_last_core_counting": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": {
    "naive": {
     "line number": [
      809
     ]
    },
    "numpy.arange": {
     "line number": [
      774
     ]
    },
    "numpy.concatenate": {
     "line number": [
      775
     ]
    },
    "numpy.random.choice": {
     "line number": [
      774
     ]
    },
    "numpy.random.randint": {
     "line number": [
      769
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      810,
      811
     ]
    },
    "numpy.unique": {
     "line number": [
      776
     ]
    },
    "pyemma.msm.tests.test_cmsm.pyemma": {
     "line number": [
      778
     ]
    },
    "range": {
     "line number": [
      769
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCoreMSM.test_last_core_counting.naive": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      787,
      790
     ]
    },
    "int": {
     "line number": [
      801
     ]
    },
    "numpy.array": {
     "line number": [
      801
     ]
    },
    "numpy.concatenate": {
     "line number": [
      784
     ]
    },
    "numpy.zeros": {
     "line number": [
      785
     ]
    },
    "pyemma.msm.tests.test_cmsm.copy": {
     "line number": [
      783
     ]
    },
    "zip": {
     "line number": [
      804
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TestCoreMSM.test_not_implemented_raises": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      819,
      825
     ]
    },
    "RuntimeError": {
     "line number": [
      814
     ]
    },
    "pyemma.msm.tests.test_cmsm.pyemma": {
     "line number": [
      815,
      820,
      826
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_cmsm.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cmsm.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cmsm.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cmsm.dt": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cmsm.estimate_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cmsm.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cmsm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cmsm.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cmsm.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cmsm.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cmsm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_cmsm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      57
     ]
    },
    "pyemma.msm.tests.test_dtraj_stats.unittest": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_dtraj_stats.DiscreteTrajectoryStats": {
  "data": {
   "shadows": "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_dtraj_stats.unittest": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_blocksplit_dtrajs_cvsplit": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "len": {
     "line number": [
      34,
      35
     ]
    },
    "numpy.array": {
     "line number": [
      28,
      28
     ]
    },
    "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs": {
     "line number": [
      30
     ]
    },
    "pyemma.msm.estimators._dtraj_stats.cvsplit_dtrajs": {
     "line number": [
      31
     ]
    },
    "pyemma.util.types.ensure_dtraj_list": {
     "line number": [
      32,
      33
     ]
    },
    "range": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_blocksplit_dtrajs_sampling": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      25
     ]
    },
    "numpy.array": {
     "line number": [
      20,
      20
     ]
    },
    "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs": {
     "line number": [
      22
     ]
    },
    "pyemma.msm.tests.test_dtraj_stats.msmtools": {
     "line number": [
      23,
      24
     ]
    },
    "range": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_blocksplit_dtrajs_sliding": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      17
     ]
    },
    "numpy.array": {
     "line number": [
      12,
      12
     ]
    },
    "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs": {
     "line number": [
      14
     ]
    },
    "pyemma.msm.tests.test_dtraj_stats.msmtools": {
     "line number": [
      15,
      16
     ]
    },
    "range": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.TestDtrajStats.test_mincount_connectivity": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "int": {
     "line number": [
      38
     ]
    },
    "numpy.array": {
     "line number": [
      47,
      50,
      51
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      47,
      51,
      54
     ]
    },
    "numpy.zeros": {
     "line number": [
      38
     ]
    },
    "pyemma.msm.estimators._dtraj_stats.DiscreteTrajectoryStats": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_dtraj_stats.blocksplit_dtrajs": {
  "data": {
   "shadows": "pyemma.msm.estimators._dtraj_stats.blocksplit_dtrajs"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats.cvsplit_dtrajs": {
  "data": {
   "shadows": "pyemma.msm.estimators._dtraj_stats.cvsplit_dtrajs"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats.ensure_dtraj_list": {
  "data": {
   "shadows": "pyemma.util.types.ensure_dtraj_list"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats.msmtools": {
  "data": {
   "shadows": "msmtools"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_dtraj_stats.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.tests.test_estimator.BayesianMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.BayesianMSM"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.MaximumLikelihoodMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.MaximumLikelihoodMSM"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_estimator.unittest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_evaluate_bmsm_single_arg": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "len": {
     "line number": [
      91,
      92
     ]
    },
    "list": {
     "line number": [
      90
     ]
    },
    "pyemma._base.estimator.estimate_param_scan": {
     "line number": [
      88
     ]
    },
    "pyemma._base.estimator.param_grid": {
     "line number": [
      87
     ]
    },
    "pyemma.msm.estimators.BayesianMSM": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_evaluate_msm": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "list": {
     "line number": [
      80
     ]
    },
    "pyemma._base.estimator.estimate_param_scan": {
     "line number": [
      79
     ]
    },
    "pyemma._base.estimator.param_grid": {
     "line number": [
      78
     ]
    },
    "pyemma.msm.estimators.MaximumLikelihoodMSM": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_evaluate_msm_multi_arg": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "all": {
     "line number": [
      106
     ]
    },
    "len": {
     "line number": [
      105,
      106
     ]
    },
    "list": {
     "line number": [
      104
     ]
    },
    "pyemma._base.estimator.estimate_param_scan": {
     "line number": [
      102
     ]
    },
    "pyemma._base.estimator.param_grid": {
     "line number": [
      99
     ]
    },
    "pyemma.msm.estimators.MaximumLikelihoodMSM": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_failfast_false": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "pyemma.msm.estimate_hidden_markov_model": {
     "line number": [
      57
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_failfast_false.worker_wrapper": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "functools.wraps": {
     "line number": [
      50
     ]
    },
    "list": {
     "line number": [
      52
     ]
    },
    "pyemma._base.estimator._estimate_param_scan_worker": {
     "line number": [
      54,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_failfast_true": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      40
     ]
    },
    "pyemma.msm.estimate_hidden_markov_model": {
     "line number": [
      42
     ]
    },
    "pyemma.msm.tests.test_estimator.os": {
     "line number": [
      28
     ]
    },
    "pyemma.msm.tests.test_estimator.unittest": {
     "line number": [
      28
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_failfast_true.worker_wrapper": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "functools.wraps": {
     "line number": [
      34
     ]
    },
    "list": {
     "line number": [
      36
     ]
    },
    "pyemma._base.estimator._estimate_param_scan_worker": {
     "line number": [
      38,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_keyboard_interrupt": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "KeyboardInterrupt": {
     "line number": [
      71
     ]
    },
    "pyemma._base.estimator.estimate_param_scan": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_keyboard_interrupt.sleeping_estimator": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "pyemma._base.estimator.Estimator": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_keyboard_interrupt.sleeping_estimator.__init__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator.TestCK_MSM.test_keyboard_interrupt.sleeping_estimator._estimate": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "KeyboardInterrupt": {
     "line number": [
      70
     ]
    },
    "pyemma.msm.tests.test_estimator.time": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_estimator._estimate_param_scan_worker": {
  "data": {
   "shadows": "pyemma._base.estimator._estimate_param_scan_worker"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.estimate_param_scan": {
  "data": {
   "shadows": "pyemma._base.estimator.estimate_param_scan"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.msm": {
  "data": {
   "shadows": "pyemma.msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.param_grid": {
  "data": {
   "shadows": "pyemma._base.estimator.param_grid"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_estimator.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      472
     ]
    },
    "pyemma.msm.tests.test_hmsm.unittest": {
     "line number": [
      473
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_hmsm.MaximumLikelihoodHMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.TestHMMSpecialCases": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_hmsm.unittest": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_hmsm.TestHMMSpecialCases.test_separate_states": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      470
     ]
    },
    "numpy.array": {
     "line number": [
      465,
      466
     ]
    },
    "pyemma.msm.estimate_hidden_markov_model": {
     "line number": [
      467
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_hmsm.unittest": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.setUpClass": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      34
     ]
    },
    "numpy.min": {
     "line number": [
      39
     ]
    },
    "pyemma.msm.estimate_hidden_markov_model": {
     "line number": [
      46,
      48
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      45,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_cktest_simple": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "numpy.random.randint": {
     "line number": [
      433
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      434
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_committor": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      133
     ]
    },
    "numpy.ones": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_correlation": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      224
     ]
    },
    "ValueError": {
     "line number": [
      244
     ]
    },
    "len": {
     "line number": [
      229,
      230,
      239,
      240
     ]
    },
    "list": {
     "line number": [
      227,
      232,
      237,
      244
     ]
    },
    "numpy.allclose": {
     "line number": [
      235
     ]
    },
    "range": {
     "line number": [
      227,
      232,
      237,
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_dt_model": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": {
    "pyemma.util.units.TimeUnit": {
     "line number": [
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_eigenvalues": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "len": {
     "line number": [
      79
     ]
    },
    "numpy.isclose": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_eigenvectors_left": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "numpy.array_equal": {
     "line number": [
      85
     ]
    },
    "numpy.sign": {
     "line number": [
      86,
      86,
      87,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_eigenvectors_left_obs": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      187
     ]
    },
    "numpy.all": {
     "line number": [
      192
     ]
    },
    "numpy.allclose": {
     "line number": [
      189
     ]
    },
    "numpy.array_equal": {
     "line number": [
      183
     ]
    },
    "numpy.isreal": {
     "line number": [
      192
     ]
    },
    "numpy.max": {
     "line number": [
      187
     ]
    },
    "numpy.sum": {
     "line number": [
      189
     ]
    },
    "numpy.zeros": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_eigenvectors_right": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "numpy.array_equal": {
     "line number": [
      91
     ]
    },
    "numpy.isclose": {
     "line number": [
      92
     ]
    },
    "numpy.sign": {
     "line number": [
      93,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_eigenvectors_right_obs": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      204
     ]
    },
    "numpy.allclose": {
     "line number": [
      201
     ]
    },
    "numpy.array_equal": {
     "line number": [
      198
     ]
    },
    "numpy.isreal": {
     "line number": [
      204
     ]
    },
    "numpy.ones": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_expectation": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      217
     ]
    },
    "list": {
     "line number": [
      212,
      217
     ]
    },
    "numpy.abs": {
     "line number": [
      214
     ]
    },
    "range": {
     "line number": [
      212,
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_fingerprint_correlation": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      267
     ]
    },
    "ValueError": {
     "line number": [
      290
     ]
    },
    "list": {
     "line number": [
      270,
      279,
      284,
      290
     ]
    },
    "numpy.all": {
     "line number": [
      277
     ]
    },
    "numpy.allclose": {
     "line number": [
      275,
      281,
      282,
      286,
      287
     ]
    },
    "numpy.inf": {
     "line number": [
      273
     ]
    },
    "range": {
     "line number": [
      270,
      279,
      284,
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_fingerprint_relaxation": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      296
     ]
    },
    "ValueError": {
     "line number": [
      318
     ]
    },
    "list": {
     "line number": [
      299,
      319,
      319
     ]
    },
    "numpy.abs": {
     "line number": [
      306,
      315
     ]
    },
    "numpy.allclose": {
     "line number": [
      304,
      313
     ]
    },
    "numpy.inf": {
     "line number": [
      302,
      311
     ]
    },
    "numpy.max": {
     "line number": [
      306,
      315
     ]
    },
    "range": {
     "line number": [
      299,
      319,
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_hmm_type": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      56,
      57
     ]
    },
    "pyemma.msm.estimators.maximum_likelihood_hmsm.MaximumLikelihoodHMSM": {
     "line number": [
      56,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_lag": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_metastable_assignment": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "len": {
     "line number": [
      360
     ]
    },
    "numpy.all": {
     "line number": [
      362,
      363
     ]
    },
    "numpy.std": {
     "line number": [
      365,
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_metastable_distributions": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      345
     ]
    },
    "numpy.all": {
     "line number": [
      339,
      341
     ]
    },
    "numpy.max": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_metastable_memberships": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      329,
      331
     ]
    },
    "numpy.allclose": {
     "line number": [
      333
     ]
    },
    "numpy.ones": {
     "line number": [
      333
     ]
    },
    "numpy.sum": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_metastable_sets": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      352
     ]
    },
    "len": {
     "line number": [
      353
     ]
    },
    "range": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_mfpt": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      144,
      144
     ]
    },
    "numpy.minimum": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_nstates": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_nstates_obs": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_observable_state_indexes": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "len": {
     "line number": [
      375
     ]
    },
    "pyemma.util.discrete_trajectories.count_states": {
     "line number": [
      379
     ]
    },
    "range": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_observation_probabilities": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      157,
      159
     ]
    },
    "numpy.array_equal": {
     "line number": [
      156,
      158
     ]
    },
    "numpy.ones": {
     "line number": [
      157,
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_relaxation": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      261
     ]
    },
    "len": {
     "line number": [
      256,
      257
     ]
    },
    "list": {
     "line number": [
      248,
      261,
      261
     ]
    },
    "numpy.allclose": {
     "line number": [
      252
     ]
    },
    "numpy.shape": {
     "line number": [
      252
     ]
    },
    "numpy.zeros": {
     "line number": [
      252
     ]
    },
    "range": {
     "line number": [
      248,
      261,
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_reversible": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_sample_by_observation_probabilities": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      393
     ]
    },
    "len": {
     "line number": [
      391
     ]
    },
    "numpy.all": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_simulate_HMSM": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "len": {
     "line number": [
      405,
      406,
      406
     ]
    },
    "numpy.unique": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_stationary_distribution": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      102
     ]
    },
    "numpy.all": {
     "line number": [
      100
     ]
    },
    "numpy.isclose": {
     "line number": [
      98
     ]
    },
    "numpy.max": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_stationary_distribution_obs": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "len": {
     "line number": [
      175
     ]
    },
    "numpy.allclose": {
     "line number": [
      176,
      177
     ]
    },
    "numpy.dot": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_submodel_simple": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      451
     ]
    },
    "pyemma.msm.estimate_hidden_markov_model": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_timescales": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "len": {
     "line number": [
      113
     ]
    },
    "numpy.abs": {
     "line number": [
      116
     ]
    },
    "numpy.all": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_transition_matrix": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "msmtools.analysis.is_reversible": {
     "line number": [
      75
     ]
    },
    "msmtools.analysis.is_transition_matrix": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_transition_matrix_obs": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "msmtools.analysis.is_reversible": {
     "line number": [
      169
     ]
    },
    "msmtools.analysis.is_transition_matrix": {
     "line number": [
      168
     ]
    },
    "numpy.array_equal": {
     "line number": [
      162,
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TestMLHMM.test_two_state_kinetics": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_hmsm.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.dt": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.msm": {
  "data": {
   "shadows": "pyemma.msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_hmsm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      318
     ]
    },
    "pyemma.msm.tests.test_its.unittest": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_its.ImpliedTimescales": {
  "data": {
   "shadows": "pyemma.msm.ImpliedTimescales"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.MockLoggingHandler": {
  "data": {
   "shadows": "pyemma.util.testing_tools.MockLoggingHandler"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.TestITS_AllEstimators": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_its.unittest": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_its.TestITS_AllEstimators.setUpClass": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_AllEstimators.test_its_bhmm": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      297
     ]
    },
    "numpy.array": {
     "line number": [
      294
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      301,
      302
     ]
    },
    "pyemma.msm.timescales_hmsm": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_AllEstimators.test_its_bmsm": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      275
     ]
    },
    "numpy.array": {
     "line number": [
      271
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      280,
      281
     ]
    },
    "pyemma.msm.its": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_AllEstimators.test_its_cmsm_defined_core": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      311
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      316
     ]
    },
    "pyemma.msm.ImpliedTimescales": {
     "line number": [
      308
     ]
    },
    "pyemma.msm.estimators.MaximumLikelihoodMSM": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_AllEstimators.test_its_hmsm": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      289
     ]
    },
    "numpy.array": {
     "line number": [
      285
     ]
    },
    "pyemma.msm.timescales_hmsm": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_AllEstimators.test_its_msm": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      266
     ]
    },
    "numpy.array": {
     "line number": [
      261
     ]
    },
    "pyemma.msm.timescales_msm": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_its.unittest": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.compute_nice": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "len": {
     "line number": [
      87
     ]
    },
    "pyemma.msm.timescales_msm": {
     "line number": [
      88
     ]
    },
    "range": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.setUpClass": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      40
     ]
    },
    "len": {
     "line number": [
      76
     ]
    },
    "msmtools.generation.generate_traj": {
     "line number": [
      66,
      74
     ]
    },
    "numpy.array": {
     "line number": [
      50,
      65,
      70
     ]
    },
    "numpy.random.randint": {
     "line number": [
      61
     ]
    },
    "range": {
     "line number": [
      60,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_2": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "msmtools.analysis.timescales": {
     "line number": [
      123
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      127,
      128
     ]
    },
    "pyemma.msm.timescales_msm": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_2_parallel": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "msmtools.analysis.timescales": {
     "line number": [
      131
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      135,
      136
     ]
    },
    "pyemma.msm.api.timescales_msm": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_4_2": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "int": {
     "line number": [
      140
     ]
    },
    "msmtools.analysis.timescales": {
     "line number": [
      139
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      143,
      144
     ]
    },
    "pyemma.msm.timescales_msm": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_errors": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      217
     ]
    },
    "pyemma.msm.api.timescales_msm": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_fraction_of_frames": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "len": {
     "line number": [
      155
     ]
    },
    "numpy.allclose": {
     "line number": [
      161
     ]
    },
    "numpy.array": {
     "line number": [
      161
     ]
    },
    "numpy.sum": {
     "line number": [
      158,
      159
     ]
    },
    "pyemma.msm.timescales_msm": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_insert_lag_time": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "len": {
     "line number": [
      194,
      197,
      198,
      199
     ]
    },
    "list": {
     "line number": [
      167
     ]
    },
    "numpy.concatenate": {
     "line number": [
      167
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      169,
      175,
      188,
      196
     ]
    },
    "pyemma.msm.api.timescales_msm": {
     "line number": [
      165,
      173
     ]
    },
    "pyemma.util.testing_tools.MockLoggingHandler": {
     "line number": [
      182
     ]
    },
    "range": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_insert_remove_lag_time": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      213
     ]
    },
    "pyemma.msm.api.timescales_msm": {
     "line number": [
      204,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_lag_generation": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "numpy.testing.assert_array_equal": {
     "line number": [
      108
     ]
    },
    "pyemma.msm.timescales_msm": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_nice_sliding_nonrev": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_nice_sliding_rev": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_no_return_estimators": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      241,
      243
     ]
    },
    "isinstance": {
     "line number": [
      245
     ]
    },
    "len": {
     "line number": [
      246
     ]
    },
    "numpy.ndarray": {
     "line number": [
      245
     ]
    },
    "numpy.random.randint": {
     "line number": [
      239
     ]
    },
    "pyemma.msm.api.timescales_msm": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_no_return_estimators_samples": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      227,
      229
     ]
    },
    "isinstance": {
     "line number": [
      231
     ]
    },
    "len": {
     "line number": [
      232
     ]
    },
    "numpy.ndarray": {
     "line number": [
      231
     ]
    },
    "numpy.random.randint": {
     "line number": [
      225
     ]
    },
    "pyemma.msm.api.timescales_msm": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.TestITS_MSM.test_too_large_lagtime": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      120
     ]
    },
    "pyemma.msm.tests.test_its.warnings": {
     "line number": [
      115,
      116
     ]
    },
    "pyemma.msm.timescales_msm": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its.generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.msm": {
  "data": {
   "shadows": "pyemma.msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.timescales": {
  "data": {
   "shadows": "msmtools.analysis.timescales"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.timescales_msm": {
  "data": {
   "shadows": "pyemma.msm.api.timescales_msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      164
     ]
    },
    "pyemma.msm.tests.test_its_oom.unittest": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_its_oom.TestITSFiveState": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_its_oom.unittest": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_its_oom.TestITSFiveState.setUpClass": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      104
     ]
    },
    "numpy.arange": {
     "line number": [
      119
     ]
    },
    "numpy.load": {
     "line number": [
      107,
      108
     ]
    },
    "numpy.sum": {
     "line number": [
      128
     ]
    },
    "numpy.zeros": {
     "line number": [
      123,
      124
     ]
    },
    "pyemma.msm.tests.test_its_oom.its_oom": {
     "line number": [
      130,
      131
     ]
    },
    "pyemma.msm.tests.test_its_oom.pkg_resources": {
     "line number": [
      107,
      108
     ]
    },
    "range": {
     "line number": [
      109,
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.TestITSFiveState.test_exceptions": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      152,
      154
     ]
    },
    "pyemma.msm.timescales_msm": {
     "line number": [
      153,
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.TestITSFiveState.test_ignore_errors": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      160
     ]
    },
    "pyemma.msm.timescales_msm": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.TestITSFiveState.test_its_nonreversible": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      147,
      148
     ]
    },
    "numpy.allclose": {
     "line number": [
      149
     ]
    },
    "pyemma.msm.tests.test_its_oom.warnings": {
     "line number": [
      144
     ]
    },
    "pyemma.msm.timescales_msm": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.TestITSFiveState.test_its_reversible": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      139,
      140
     ]
    },
    "numpy.allclose": {
     "line number": [
      141
     ]
    },
    "pyemma.msm.timescales_msm": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.TransitionMatrix": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      80,
      80,
      80
     ]
    },
    "numpy.sum": {
     "line number": [
      82,
      84
     ]
    },
    "numpy.zeros": {
     "line number": [
      77
     ]
    },
    "range": {
     "line number": [
      78,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom._sort_by_norm": {
  "data": {
   "shadows": "pyemma.util.linalg._sort_by_norm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom._ts_msm": {
  "data": {
   "shadows": "pyemma.msm.timescales_msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom.its_oom": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "pyemma.msm.markov_model": {
     "line number": [
      97
     ]
    },
    "pyemma.msm.tests.test_its_oom.TransitionMatrix": {
     "line number": [
      95
     ]
    },
    "pyemma.msm.tests.test_its_oom.oom_transformations": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.markov_model": {
  "data": {
   "shadows": "pyemma.msm.markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom.oom_transformations": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      57,
      58
     ]
    },
    "numpy.dot": {
     "line number": [
      57,
      58,
      62,
      62,
      66,
      71
     ]
    },
    "numpy.real": {
     "line number": [
      70
     ]
    },
    "numpy.sum": {
     "line number": [
      63,
      65
     ]
    },
    "numpy.zeros": {
     "line number": [
      60
     ]
    },
    "pyemma.util.linalg._sort_by_norm": {
     "line number": [
      69
     ]
    },
    "range": {
     "line number": [
      61
     ]
    },
    "scipy.linalg.eig": {
     "line number": [
      68
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom.scl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom.timescales_msm": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_its_oom.sys": {
     "line number": [
      43
     ]
    },
    "pyemma.msm.timescales_msm": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_its_oom.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_its_oom.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      1098
     ]
    },
    "pyemma.msm.tests.test_msm.unittest": {
     "line number": [
      1099
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_msm.BirthDeathChain": {
  "data": {
   "shadows": "pyemma.msm.tests.birth_death_chain.BirthDeathChain"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.MaximumLikelihoodMSM": {
  "data": {
   "shadows": "pyemma.msm.MaximumLikelihoodMSM"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_msm.unittest": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._active_count_fraction": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._active_set": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "len": {
     "line number": [
      253,
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._active_state_fraction": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._active_state_indexes": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": {
    "len": {
     "line number": [
      933
     ]
    },
    "pyemma.util.discrete_trajectories.count_states": {
     "line number": [
      937
     ]
    },
    "range": {
     "line number": [
      940
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._committor": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      637,
      638,
      642,
      643
     ]
    },
    "numpy.allclose": {
     "line number": [
      646
     ]
    },
    "numpy.ones": {
     "line number": [
      646
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._connected_sets": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "len": {
     "line number": [
      296
     ]
    },
    "numpy.all": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._connectivity": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._correlation": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      787
     ]
    },
    "len": {
     "line number": [
      792,
      793,
      802,
      803
     ]
    },
    "list": {
     "line number": [
      790,
      795,
      800
     ]
    },
    "numpy.allclose": {
     "line number": [
      798
     ]
    },
    "range": {
     "line number": [
      790,
      795,
      800
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._count_matrix_active": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._count_matrix_full": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._discrete_trajectories_active": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "len": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._discrete_trajectories_full": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._dt_model": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "pyemma.util.units.TimeUnit": {
     "line number": [
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._effective_count_matrix": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      452
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._eigenvalues": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "len": {
     "line number": [
      493
     ]
    },
    "numpy.abs": {
     "line number": [
      488,
      490,
      492
     ]
    },
    "numpy.all": {
     "line number": [
      497
     ]
    },
    "numpy.isreal": {
     "line number": [
      497
     ]
    },
    "numpy.max": {
     "line number": [
      488,
      490
     ]
    },
    "range": {
     "line number": [
      493
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._eigenvectors_RDL": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      564,
      567,
      569,
      577,
      582
     ]
    },
    "numpy.diag": {
     "line number": [
      561,
      574
     ]
    },
    "numpy.dot": {
     "line number": [
      564,
      567,
      569,
      569,
      577,
      582
     ]
    },
    "numpy.eye": {
     "line number": [
      564,
      567,
      577,
      582
     ]
    },
    "numpy.newaxis": {
     "line number": [
      581
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._eigenvectors_left": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      519
     ]
    },
    "numpy.all": {
     "line number": [
      515,
      524
     ]
    },
    "numpy.allclose": {
     "line number": [
      521
     ]
    },
    "numpy.isreal": {
     "line number": [
      524
     ]
    },
    "numpy.max": {
     "line number": [
      519
     ]
    },
    "numpy.sum": {
     "line number": [
      521
     ]
    },
    "numpy.zeros": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._eigenvectors_right": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      542,
      548
     ]
    },
    "numpy.allclose": {
     "line number": [
      545
     ]
    },
    "numpy.isreal": {
     "line number": [
      548
     ]
    },
    "numpy.ones": {
     "line number": [
      545
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._expectation": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": {
    "list": {
     "line number": [
      769
     ]
    },
    "numpy.abs": {
     "line number": [
      771
     ]
    },
    "range": {
     "line number": [
      769
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._fingerprint_correlation": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      845
     ]
    },
    "ValueError": {
     "line number": [
      867,
      870
     ]
    },
    "list": {
     "line number": [
      848,
      857,
      862,
      868,
      871,
      872
     ]
    },
    "numpy.all": {
     "line number": [
      855
     ]
    },
    "numpy.allclose": {
     "line number": [
      853,
      859,
      860,
      864,
      865
     ]
    },
    "numpy.inf": {
     "line number": [
      851
     ]
    },
    "range": {
     "line number": [
      848,
      857,
      862,
      868,
      871,
      872
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._fingerprint_relaxation": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      890
     ]
    },
    "ValueError": {
     "line number": [
      912,
      915
     ]
    },
    "list": {
     "line number": [
      893,
      913,
      918
     ]
    },
    "numpy.abs": {
     "line number": [
      900,
      910
     ]
    },
    "numpy.allclose": {
     "line number": [
      898,
      908
     ]
    },
    "numpy.inf": {
     "line number": [
      896,
      906
     ]
    },
    "numpy.max": {
     "line number": [
      900,
      910
     ]
    },
    "range": {
     "line number": [
      893,
      913,
      918
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._generate_traj": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      956,
      958
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._lagtime": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._largest_connected_set": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      268,
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._mfpt": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      661,
      663
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._nstates": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._pcca_assignment": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      689
     ]
    },
    "len": {
     "line number": [
      680
     ]
    },
    "numpy.all": {
     "line number": [
      683,
      684
     ]
    },
    "numpy.std": {
     "line number": [
      686,
      687
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._pcca_distributions": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      715
     ]
    },
    "numpy.abs": {
     "line number": [
      713
     ]
    },
    "numpy.all": {
     "line number": [
      706,
      708
     ]
    },
    "numpy.array": {
     "line number": [
      710
     ]
    },
    "numpy.max": {
     "line number": [
      713
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._pcca_memberships": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      736
     ]
    },
    "numpy.all": {
     "line number": [
      730,
      732
     ]
    },
    "numpy.allclose": {
     "line number": [
      734
     ]
    },
    "numpy.ones": {
     "line number": [
      734
     ]
    },
    "numpy.sum": {
     "line number": [
      734
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._pcca_sets": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      755
     ]
    },
    "enumerate": {
     "line number": [
      751
     ]
    },
    "len": {
     "line number": [
      752
     ]
    },
    "range": {
     "line number": [
      752
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._relaxation": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": {
    "len": {
     "line number": [
      826,
      827
     ]
    },
    "list": {
     "line number": [
      819
     ]
    },
    "numpy.allclose": {
     "line number": [
      823
     ]
    },
    "numpy.shape": {
     "line number": [
      823
     ]
    },
    "numpy.zeros": {
     "line number": [
      823
     ]
    },
    "range": {
     "line number": [
      819
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._sample_by_state": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      978
     ]
    },
    "len": {
     "line number": [
      975
     ]
    },
    "numpy.all": {
     "line number": [
      980
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._score": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._score_cv": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._sparse": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._statdist": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      471
     ]
    },
    "numpy.all": {
     "line number": [
      469
     ]
    },
    "numpy.sum": {
     "line number": [
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._timescales": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      609,
      613
     ]
    },
    "numpy.array": {
     "line number": [
      612,
      617
     ]
    },
    "numpy.isreal": {
     "line number": [
      613
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      615,
      619
     ]
    },
    "pyemma.msm.tests.test_msm.warnings": {
     "line number": [
      596,
      603
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._timestep": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._trajectory_weights": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      996
     ]
    },
    "numpy.sum": {
     "line number": [
      996
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._transition_matrix": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      399,
      399
     ]
    },
    "msmtools.analysis.is_connected": {
     "line number": [
      406
     ]
    },
    "msmtools.analysis.is_reversible": {
     "line number": [
      409
     ]
    },
    "msmtools.analysis.is_transition_matrix": {
     "line number": [
      405
     ]
    },
    "numpy.all": {
     "line number": [
      401
     ]
    },
    "numpy.ndarray": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell._two_state_kinetics": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      1037
     ]
    },
    "numpy.argmax": {
     "line number": [
      1026
     ]
    },
    "numpy.argmin": {
     "line number": [
      1025
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.setUpClass": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      149
     ]
    },
    "numpy.bincount": {
     "line number": [
      153
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      158,
      159,
      161,
      164,
      165,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_active_count_fraction": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_active_set": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_active_state_fraction": {
  "data": {
   "lineno": 441
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_active_state_indexes": {
  "data": {
   "lineno": 944
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_committor": {
  "data": {
   "lineno": 648
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_connected_sets": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_connectivity": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_correlation": {
  "data": {
   "lineno": 806
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_count_matrix_active": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_count_matrix_full": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_discrete_trajectories_active": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_discrete_trajectories_full": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_dt_model": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_effective_count_matrix": {
  "data": {
   "lineno": 454
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_eigenvalues": {
  "data": {
   "lineno": 499
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_eigenvectors_RDL": {
  "data": {
   "lineno": 585
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_eigenvectors_left": {
  "data": {
   "lineno": 526
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_eigenvectors_right": {
  "data": {
   "lineno": 550
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_expectation": {
  "data": {
   "lineno": 773
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_fingerprint_correlation": {
  "data": {
   "lineno": 875
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_fingerprint_relaxation": {
  "data": {
   "lineno": 921
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_generate_traj": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_msm.warnings": {
     "line number": [
      964,
      966,
      968
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_lagtime": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_largest_connected_set": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_mfpt": {
  "data": {
   "lineno": 665
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_nstates": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_pcca_assignment": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_msm.warnings": {
     "line number": [
      695,
      697
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_pcca_distributions": {
  "data": {
   "lineno": 718
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_pcca_memberships": {
  "data": {
   "lineno": 739
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_pcca_sets": {
  "data": {
   "lineno": 758
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_relaxation": {
  "data": {
   "lineno": 830
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_reversible": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_sample_by_state": {
  "data": {
   "lineno": 985
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_score": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_score_cv": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "pyemma.msm.MaximumLikelihoodMSM": {
     "line number": [
      211,
      212,
      213,
      214,
      215,
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_simulate_MSM": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1011,
      1012,
      1012
     ]
    },
    "numpy.unique": {
     "line number": [
      1012
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_sparse": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_statdist": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_timescales": {
  "data": {
   "lineno": 621
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_timestep": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_trajectory_weights": {
  "data": {
   "lineno": 998
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_transition_matrix": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMDoubleWell.test_two_state_kinetics": {
  "data": {
   "lineno": 1039
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMMinCountConnectivity": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_msm.unittest": {
     "line number": [
      1048
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_msm.TestMSMMinCountConnectivity._test_connectivity": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      1063,
      1064
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMMinCountConnectivity.setUpClass": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      1050
     ]
    },
    "numpy.array": {
     "line number": [
      1052,
      1059,
      1060
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMMinCountConnectivity.test_bmsm": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": {
    "pyemma.msm.bayesian_markov_model": {
     "line number": [
      1074,
      1075
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMMinCountConnectivity.test_msm": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": {
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      1067,
      1068
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMMinCountConnectivity.test_oom": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": {
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      1085,
      1088
     ]
    },
    "pyemma.msm.tests.test_msm.unittest": {
     "line number": [
      1078
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMMinCountConnectivity.test_timescales": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": {
    "pyemma.msm.timescales_msm": {
     "line number": [
      1093
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMRevPi": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_msm.unittest": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_msm.TestMSMRevPi.setUp": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMRevPi.tearDown": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMRevPi.test_valid_stationary_vector": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      134
     ]
    },
    "numpy.all": {
     "line number": [
      133
     ]
    },
    "numpy.array": {
     "line number": [
      128,
      129,
      130,
      131
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      132,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMRevPi.test_valid_trajectory": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      143
     ]
    },
    "numpy.all": {
     "line number": [
      142
     ]
    },
    "numpy.array": {
     "line number": [
      138,
      139,
      140,
      142
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      141,
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMSimple": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_msm.unittest": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_msm.TestMSMSimple.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "msmtools.analysis.stationary_distribution": {
     "line number": [
      71
     ]
    },
    "msmtools.analysis.timescales": {
     "line number": [
      73
     ]
    },
    "msmtools.estimation.count_matrix": {
     "line number": [
      67
     ]
    },
    "msmtools.estimation.largest_connected_set": {
     "line number": [
      68
     ]
    },
    "msmtools.estimation.largest_connected_submatrix": {
     "line number": [
      69
     ]
    },
    "msmtools.estimation.transition_matrix": {
     "line number": [
      70
     ]
    },
    "msmtools.generation.generate_traj": {
     "line number": [
      63
     ]
    },
    "numpy.random.mtrand.get_state": {
     "line number": [
      45
     ]
    },
    "numpy.random.mtrand.seed": {
     "line number": [
      48
     ]
    },
    "numpy.zeros": {
     "line number": [
      52,
      53
     ]
    },
    "pyemma.msm.tests.birth_death_chain.BirthDeathChain": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMSimple.tearDown": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "numpy.random.mtrand.set_state": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMSimple.test_MSM": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      84,
      85,
      86
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      80
     ]
    },
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      81,
      83,
      87,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMSimple.test_MSM_sparse": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      95,
      96,
      97
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      91
     ]
    },
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      92,
      94,
      98,
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMSimple.test_pcca_recompute": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TestMSMSimple.test_rdl_recompute": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.assert_allclose": {
  "data": {
   "shadows": "pyemma.util.numeric.assert_allclose"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.bayesian_markov_model": {
  "data": {
   "shadows": "pyemma.msm.bayesian_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.count_matrix": {
  "data": {
   "shadows": "msmtools.estimation.count_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.dt": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.estimate_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.largest_connected_set": {
  "data": {
   "shadows": "msmtools.estimation.largest_connected_set"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.largest_connected_submatrix": {
  "data": {
   "shadows": "msmtools.estimation.largest_connected_submatrix"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.msm": {
  "data": {
   "shadows": "pyemma.msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.stationary_distribution": {
  "data": {
   "shadows": "msmtools.analysis.stationary_distribution"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.timescales": {
  "data": {
   "shadows": "msmtools.analysis.timescales"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.timescales_msm": {
  "data": {
   "shadows": "pyemma.msm.timescales_msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.transition_matrix": {
  "data": {
   "shadows": "msmtools.estimation.transition_matrix"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      280
     ]
    },
    "pyemma.msm.tests.test_msm_serialization.unittest": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_msm_serialization.BayesianHMSM": {
  "data": {
   "shadows": "pyemma.msm.BayesianHMSM"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_msm_serialization.unittest": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization._compare_MLHMM": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      118,
      154
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      116,
      119,
      121,
      122,
      123,
      125,
      128,
      131,
      132,
      137,
      138,
      142,
      145,
      147,
      148,
      149,
      150,
      151
     ]
    },
    "pyemma.msm.BayesianHMSM": {
     "line number": [
      118,
      154
     ]
    },
    "zip": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.setUp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_msm_serialization.tempfile": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.setUpClass": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      30
     ]
    },
    "int": {
     "line number": [
      36
     ]
    },
    "numpy.zeros": {
     "line number": [
      36
     ]
    },
    "pyemma.datasets.load_2well_discrete": {
     "line number": [
      32,
      46
     ]
    },
    "pyemma.msm.bayesian_markov_model": {
     "line number": [
      47
     ]
    },
    "pyemma.msm.tests.test_msm_serialization.pyemma": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.tearDown": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_msm_serialization.os": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_ML_MSM_estimated": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      93
     ]
    },
    "len": {
     "line number": [
      110,
      110
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      99,
      100,
      101,
      102,
      103,
      112
     ]
    },
    "pyemma.load": {
     "line number": [
      96,
      108
     ]
    },
    "pyemma.msm.tests.test_msm_serialization.pyemma": {
     "line number": [
      92,
      93
     ]
    },
    "zip": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_bhmm": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "pyemma.load": {
     "line number": [
      191
     ]
    },
    "pyemma.msm.tests.test_msm_serialization.pyemma": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_cktest": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      245,
      246,
      247,
      248,
      249
     ]
    },
    "pyemma.load": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_hmsm": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "pyemma.load": {
     "line number": [
      177
     ]
    },
    "pyemma.msm.tests.test_msm_serialization.pyemma": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_its": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      212,
      213
     ]
    },
    "pyemma.load": {
     "line number": [
      209
     ]
    },
    "pyemma.msm.tests.test_msm_serialization.pyemma": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_its_bmsm_njobs": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      201,
      202
     ]
    },
    "pyemma.msm.tests.test_msm_serialization.pyemma": {
     "line number": [
      199,
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_its_sampled": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      223,
      224,
      225
     ]
    },
    "pyemma.load": {
     "line number": [
      220
     ]
    },
    "pyemma.msm.tests.test_msm_serialization.pyemma": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_its_sampled_only_ts": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      235,
      236,
      237
     ]
    },
    "pyemma.load": {
     "line number": [
      232
     ]
    },
    "pyemma.msm.tests.test_msm_serialization.pyemma": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_ml_msm_sparse": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "numpy.random.randint": {
     "line number": [
      266
     ]
    },
    "pyemma.load": {
     "line number": [
      269
     ]
    },
    "pyemma.msm.tests.test_msm_serialization.pyemma": {
     "line number": [
      266
     ]
    },
    "pyemma.util.contexts.numpy_random_seed": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_msm_coarse_grain": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      276,
      277
     ]
    },
    "pyemma.load": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_msm_save_load": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      64
     ]
    },
    "pyemma.load": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_oom": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      257,
      258,
      259,
      260,
      261
     ]
    },
    "pyemma.load": {
     "line number": [
      256
     ]
    },
    "pyemma.msm.tests.test_msm_serialization.pyemma": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.TestMSMSerialization.test_sampled_MSM_save_load": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "numpy.testing.assert_equal": {
     "line number": [
      75,
      77
     ]
    },
    "pyemma.load": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_msm_serialization.bayesian_markov_model": {
  "data": {
   "shadows": "pyemma.msm.bayesian_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.load": {
  "data": {
   "shadows": "pyemma.load"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.numpy_random_seed": {
  "data": {
   "shadows": "pyemma.util.contexts.numpy_random_seed"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_msm_serialization.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      1652
     ]
    },
    "pyemma.msm.tests.test_oom_msm.unittest": {
     "line number": [
      1653
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_oom_msm.OOMReweightedMSM": {
  "data": {
   "shadows": "pyemma.msm.estimators.OOMReweightedMSM"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_oom_msm.unittest": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._active_count_fraction": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._active_state_fraction": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._active_state_indexes": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": {
    "len": {
     "line number": [
      819
     ]
    },
    "pyemma.util.discrete_trajectories.count_states": {
     "line number": [
      822
     ]
    },
    "range": {
     "line number": [
      825
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._committor": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      569,
      571,
      574,
      576,
      579
     ]
    },
    "numpy.array": {
     "line number": [
      565,
      566
     ]
    },
    "numpy.ones": {
     "line number": [
      579
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._connected_sets": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "len": {
     "line number": [
      260
     ]
    },
    "numpy.all": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._connectivity": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._correlation": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      720
     ]
    },
    "numpy.allclose": {
     "line number": [
      725
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._count_matrix_active": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._count_matrix_full": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._discrete_trajectories_active": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "len": {
     "line number": [
      323,
      323
     ]
    },
    "numpy.all": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._discrete_trajectories_full": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "len": {
     "line number": [
      312,
      312
     ]
    },
    "numpy.all": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._eigenvalues": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "len": {
     "line number": [
      434
     ]
    },
    "numpy.abs": {
     "line number": [
      429,
      431,
      433
     ]
    },
    "numpy.all": {
     "line number": [
      438
     ]
    },
    "numpy.isreal": {
     "line number": [
      438
     ]
    },
    "numpy.max": {
     "line number": [
      429,
      431
     ]
    },
    "range": {
     "line number": [
      434
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._eigenvalues_OOM": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      536
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._eigenvectors_RDL": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      493,
      496,
      498
     ]
    },
    "numpy.diag": {
     "line number": [
      490
     ]
    },
    "numpy.dot": {
     "line number": [
      493,
      496,
      498,
      498
     ]
    },
    "numpy.eye": {
     "line number": [
      493,
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._eigenvectors_left": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      455
     ]
    },
    "numpy.all": {
     "line number": [
      451,
      460
     ]
    },
    "numpy.allclose": {
     "line number": [
      457
     ]
    },
    "numpy.isreal": {
     "line number": [
      460
     ]
    },
    "numpy.max": {
     "line number": [
      455
     ]
    },
    "numpy.sum": {
     "line number": [
      457
     ]
    },
    "numpy.zeros": {
     "line number": [
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._eigenvectors_right": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      473,
      479
     ]
    },
    "numpy.allclose": {
     "line number": [
      476
     ]
    },
    "numpy.isreal": {
     "line number": [
      479
     ]
    },
    "numpy.ones": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._expectation": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      706,
      708
     ]
    },
    "numpy.array": {
     "line number": [
      702
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._fingerprint_correlation": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      765,
      767
     ]
    },
    "numpy.all": {
     "line number": [
      761
     ]
    },
    "numpy.allclose": {
     "line number": [
      759,
      763
     ]
    },
    "numpy.array": {
     "line number": [
      753
     ]
    },
    "numpy.inf": {
     "line number": [
      757
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._fingerprint_relaxation": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      782
     ]
    },
    "ValueError": {
     "line number": [
      801,
      803
     ]
    },
    "numpy.abs": {
     "line number": [
      791
     ]
    },
    "numpy.allclose": {
     "line number": [
      797,
      799
     ]
    },
    "numpy.inf": {
     "line number": [
      787,
      795
     ]
    },
    "numpy.max": {
     "line number": [
      791
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      789
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._generate_traj": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      840
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._lagtime": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._mfpt": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      589,
      590
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      595,
      597
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._nstates": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._oom_components": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      549,
      550,
      551
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._pcca_assignment": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      619
     ]
    },
    "len": {
     "line number": [
      615
     ]
    },
    "numpy.all": {
     "line number": [
      617
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._pcca_distributions": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      643
     ]
    },
    "numpy.all": {
     "line number": [
      637,
      639
     ]
    },
    "numpy.allclose": {
     "line number": [
      641
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._pcca_memberships": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      667
     ]
    },
    "numpy.all": {
     "line number": [
      659,
      661
     ]
    },
    "numpy.allclose": {
     "line number": [
      663,
      665
     ]
    },
    "numpy.ones": {
     "line number": [
      663
     ]
    },
    "numpy.sum": {
     "line number": [
      663
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._pcca_sets": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      687
     ]
    },
    "enumerate": {
     "line number": [
      683
     ]
    },
    "len": {
     "line number": [
      684
     ]
    },
    "range": {
     "line number": [
      684
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._relaxation": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      736,
      740,
      742
     ]
    },
    "numpy.shape": {
     "line number": [
      736
     ]
    },
    "numpy.zeros": {
     "line number": [
      736
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._sample_by_state": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      858
     ]
    },
    "len": {
     "line number": [
      855
     ]
    },
    "numpy.all": {
     "line number": [
      860
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._score": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._score_cv": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._sparse": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._statdist": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      411
     ]
    },
    "numpy.all": {
     "line number": [
      409
     ]
    },
    "numpy.allclose": {
     "line number": [
      414,
      416
     ]
    },
    "numpy.sum": {
     "line number": [
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._timescales": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      516,
      520
     ]
    },
    "numpy.isreal": {
     "line number": [
      520
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      522,
      526
     ]
    },
    "pyemma.msm.tests.test_oom_msm.warnings": {
     "line number": [
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._timestep": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._trajectory_weights": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      877
     ]
    },
    "numpy.sum": {
     "line number": [
      876
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState._transition_matrix": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      346,
      346,
      357
     ]
    },
    "msmtools.analysis.is_connected": {
     "line number": [
      352
     ]
    },
    "msmtools.analysis.is_reversible": {
     "line number": [
      355
     ]
    },
    "msmtools.analysis.is_transition_matrix": {
     "line number": [
      351
     ]
    },
    "numpy.all": {
     "line number": [
      348
     ]
    },
    "numpy.allclose": {
     "line number": [
      360,
      362
     ]
    },
    "numpy.ndarray": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.setUpClass": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      93
     ]
    },
    "msmtools.analysis.rdl_decomposition": {
     "line number": [
      154
     ]
    },
    "numpy.array": {
     "line number": [
      134,
      135,
      149,
      150,
      151
     ]
    },
    "numpy.diag": {
     "line number": [
      161
     ]
    },
    "numpy.dot": {
     "line number": [
      155,
      156,
      161,
      162,
      162,
      163,
      163,
      164,
      164,
      165,
      165,
      166,
      166
     ]
    },
    "numpy.linalg.matrix_power": {
     "line number": [
      161,
      163,
      164
     ]
    },
    "numpy.load": {
     "line number": [
      96
     ]
    },
    "numpy.sum": {
     "line number": [
      120
     ]
    },
    "numpy.zeros": {
     "line number": [
      157,
      158,
      159
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      110
     ]
    },
    "pyemma.msm.estimators.OOMReweightedMSM": {
     "line number": [
      106,
      108,
      113,
      115
     ]
    },
    "pyemma.msm.markov_model": {
     "line number": [
      129,
      130
     ]
    },
    "pyemma.msm.tests.test_oom_msm.TransitionMatrix": {
     "line number": [
      125,
      126
     ]
    },
    "pyemma.msm.tests.test_oom_msm.oom_transformations": {
     "line number": [
      123
     ]
    },
    "pyemma.msm.tests.test_oom_msm.pkg_resources": {
     "line number": [
      96
     ]
    },
    "range": {
     "line number": [
      97,
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_active_count_fraction": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_active_set": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "int": {
     "line number": [
      232,
      233,
      234,
      235,
      236
     ]
    },
    "numpy.all": {
     "line number": [
      232,
      233,
      234,
      235,
      236
     ]
    },
    "numpy.arange": {
     "line number": [
      232,
      233,
      234,
      235,
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_active_state_fraction": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_active_state_indexes": {
  "data": {
   "lineno": 829
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_committor": {
  "data": {
   "lineno": 581
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_connected_sets": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_connectivity": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_correlation": {
  "data": {
   "lineno": 727
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_count_matrix_active": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_count_matrix_full": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_discrete_trajectories_active": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_discrete_trajectories_full": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_eigenvalues": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_eigenvalues_OOM": {
  "data": {
   "lineno": 538
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_eigenvectors_RDL": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_eigenvectors_left": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_eigenvectors_right": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_expectation": {
  "data": {
   "lineno": 710
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_fingerprint_correlation": {
  "data": {
   "lineno": 770
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_fingerprint_relaxation": {
  "data": {
   "lineno": 806
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_generate_traj": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_oom_msm.warnings": {
     "line number": [
      845,
      847
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_lagtime": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_largest_connected_set": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "int": {
     "line number": [
      239,
      240,
      241,
      242,
      243
     ]
    },
    "numpy.all": {
     "line number": [
      239,
      240,
      241,
      242,
      243
     ]
    },
    "numpy.arange": {
     "line number": [
      239,
      240,
      241,
      242,
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_mfpt": {
  "data": {
   "lineno": 599
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_nstates": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_oom_components": {
  "data": {
   "lineno": 553
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_pcca_assignment": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_oom_msm.warnings": {
     "line number": [
      625,
      627
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_pcca_distributions": {
  "data": {
   "lineno": 646
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_pcca_memberships": {
  "data": {
   "lineno": 670
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_pcca_sets": {
  "data": {
   "lineno": 690
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_relaxation": {
  "data": {
   "lineno": 744
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_reversible": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_sample_by_state": {
  "data": {
   "lineno": 864
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_score": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_score_cv": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "pyemma.msm.estimators.OOMReweightedMSM": {
     "line number": [
      196,
      197,
      198,
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_simulate_MSM": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": {
    "len": {
     "line number": [
      891,
      892,
      892
     ]
    },
    "numpy.unique": {
     "line number": [
      892
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_sparse": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_statdist": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_timescales": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_timestep": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_trajectory_weights": {
  "data": {
   "lineno": 879
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSMFiveState.test_transition_matrix": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_oom_msm.unittest": {
     "line number": [
      897
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._active_count_fraction": {
  "data": {
   "lineno": 1169
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._active_state_fraction": {
  "data": {
   "lineno": 1156
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._active_state_indexes": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1579
     ]
    },
    "pyemma.util.discrete_trajectories.count_states": {
     "line number": [
      1582
     ]
    },
    "range": {
     "line number": [
      1585
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._committor": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      1340,
      1342,
      1345,
      1347,
      1350
     ]
    },
    "numpy.array": {
     "line number": [
      1336,
      1337
     ]
    },
    "numpy.ones": {
     "line number": [
      1350
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._connected_sets": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1047
     ]
    },
    "numpy.all": {
     "line number": [
      1049
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._connectivity": {
  "data": {
   "lineno": 1057
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._correlation": {
  "data": {
   "lineno": 1481,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      1484
     ]
    },
    "numpy.allclose": {
     "line number": [
      1489
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._count_matrix_active": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      1072
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._count_matrix_full": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      1085
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._discrete_trajectories_active": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1107,
      1107
     ]
    },
    "numpy.all": {
     "line number": [
      1106
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._discrete_trajectories_full": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1095,
      1095
     ]
    },
    "numpy.all": {
     "line number": [
      1094
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._eigenvalues": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1212
     ]
    },
    "numpy.abs": {
     "line number": [
      1207,
      1209,
      1211
     ]
    },
    "numpy.all": {
     "line number": [
      1216
     ]
    },
    "numpy.isreal": {
     "line number": [
      1216
     ]
    },
    "numpy.max": {
     "line number": [
      1207,
      1209
     ]
    },
    "range": {
     "line number": [
      1212
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._eigenvalues_OOM": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      1309
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._eigenvectors_RDL": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      1268,
      1271,
      1273
     ]
    },
    "numpy.diag": {
     "line number": [
      1265
     ]
    },
    "numpy.dot": {
     "line number": [
      1268,
      1271,
      1273,
      1273
     ]
    },
    "numpy.eye": {
     "line number": [
      1268,
      1271
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._eigenvectors_left": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      1232
     ]
    },
    "numpy.all": {
     "line number": [
      1228,
      1237
     ]
    },
    "numpy.allclose": {
     "line number": [
      1234
     ]
    },
    "numpy.isreal": {
     "line number": [
      1237
     ]
    },
    "numpy.max": {
     "line number": [
      1232
     ]
    },
    "numpy.sum": {
     "line number": [
      1234
     ]
    },
    "numpy.zeros": {
     "line number": [
      1234
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._eigenvectors_right": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      1249,
      1255
     ]
    },
    "numpy.allclose": {
     "line number": [
      1252
     ]
    },
    "numpy.isreal": {
     "line number": [
      1255
     ]
    },
    "numpy.ones": {
     "line number": [
      1252
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._expectation": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      1471,
      1473
     ]
    },
    "numpy.array": {
     "line number": [
      1467
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._fingerprint_correlation": {
  "data": {
   "lineno": 1513,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1527,
      1529
     ]
    },
    "numpy.all": {
     "line number": [
      1523
     ]
    },
    "numpy.allclose": {
     "line number": [
      1521,
      1525
     ]
    },
    "numpy.array": {
     "line number": [
      1515
     ]
    },
    "numpy.inf": {
     "line number": [
      1519
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._fingerprint_relaxation": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      1543
     ]
    },
    "ValueError": {
     "line number": [
      1562,
      1564
     ]
    },
    "numpy.abs": {
     "line number": [
      1552
     ]
    },
    "numpy.allclose": {
     "line number": [
      1560
     ]
    },
    "numpy.inf": {
     "line number": [
      1548,
      1556
     ]
    },
    "numpy.max": {
     "line number": [
      1552
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1550,
      1558
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._generate_traj": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      1599
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._lagtime": {
  "data": {
   "lineno": 1011
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._mfpt": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1359,
      1360
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1365,
      1367
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._nstates": {
  "data": {
   "lineno": 1033
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._oom_components": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      1321,
      1322,
      1323
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._pcca_assignment": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1388
     ]
    },
    "len": {
     "line number": [
      1384
     ]
    },
    "numpy.all": {
     "line number": [
      1386
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._pcca_distributions": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1411
     ]
    },
    "numpy.all": {
     "line number": [
      1405,
      1407
     ]
    },
    "numpy.allclose": {
     "line number": [
      1409
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._pcca_memberships": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1434
     ]
    },
    "numpy.all": {
     "line number": [
      1426,
      1428
     ]
    },
    "numpy.allclose": {
     "line number": [
      1430,
      1432
     ]
    },
    "numpy.ones": {
     "line number": [
      1430
     ]
    },
    "numpy.sum": {
     "line number": [
      1430
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._pcca_sets": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1453
     ]
    },
    "enumerate": {
     "line number": [
      1449
     ]
    },
    "len": {
     "line number": [
      1450
     ]
    },
    "range": {
     "line number": [
      1450
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._relaxation": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      1499,
      1503,
      1505
     ]
    },
    "numpy.shape": {
     "line number": [
      1499
     ]
    },
    "numpy.zeros": {
     "line number": [
      1499
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._sample_by_state": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      1616
     ]
    },
    "len": {
     "line number": [
      1613
     ]
    },
    "numpy.all": {
     "line number": [
      1618
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._sparse": {
  "data": {
   "lineno": 1004
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._statdist": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      1190
     ]
    },
    "numpy.all": {
     "line number": [
      1188
     ]
    },
    "numpy.allclose": {
     "line number": [
      1193,
      1195
     ]
    },
    "numpy.sum": {
     "line number": [
      1190
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._timescales": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      1290,
      1294
     ]
    },
    "numpy.isreal": {
     "line number": [
      1294
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      1296,
      1300
     ]
    },
    "pyemma.msm.tests.test_oom_msm.warnings": {
     "line number": [
      1284
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._timestep": {
  "data": {
   "lineno": 1115
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._trajectory_weights": {
  "data": {
   "lineno": 1628,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      1635
     ]
    },
    "numpy.sum": {
     "line number": [
      1634
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete._transition_matrix": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1128,
      1128,
      1139
     ]
    },
    "msmtools.analysis.is_connected": {
     "line number": [
      1134
     ]
    },
    "msmtools.analysis.is_reversible": {
     "line number": [
      1137
     ]
    },
    "msmtools.analysis.is_transition_matrix": {
     "line number": [
      1133
     ]
    },
    "numpy.all": {
     "line number": [
      1130
     ]
    },
    "numpy.allclose": {
     "line number": [
      1142,
      1144
     ]
    },
    "numpy.ndarray": {
     "line number": [
      1128
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.setUpClass": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      899
     ]
    },
    "msmtools.analysis.rdl_decomposition": {
     "line number": [
      971
     ]
    },
    "msmtools.estimation.largest_connected_set": {
     "line number": [
      930
     ]
    },
    "msmtools.estimation.largest_connected_submatrix": {
     "line number": [
      931
     ]
    },
    "numpy.array": {
     "line number": [
      903,
      951,
      952,
      966,
      967,
      968
     ]
    },
    "numpy.diag": {
     "line number": [
      978
     ]
    },
    "numpy.dot": {
     "line number": [
      972,
      973,
      978,
      979,
      979,
      980,
      980,
      981,
      981,
      982,
      982,
      983,
      983
     ]
    },
    "numpy.linalg.matrix_power": {
     "line number": [
      978,
      980,
      981
     ]
    },
    "numpy.load": {
     "line number": [
      902
     ]
    },
    "numpy.sum": {
     "line number": [
      928,
      933,
      933,
      948,
      948
     ]
    },
    "numpy.zeros": {
     "line number": [
      974,
      975,
      976
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      919,
      920,
      923,
      924
     ]
    },
    "pyemma.msm.markov_model": {
     "line number": [
      942,
      943
     ]
    },
    "pyemma.msm.tests.test_oom_msm.TransitionMatrix": {
     "line number": [
      938,
      939
     ]
    },
    "pyemma.msm.tests.test_oom_msm.oom_transformations": {
     "line number": [
      936
     ]
    },
    "pyemma.msm.tests.test_oom_msm.pkg_resources": {
     "line number": [
      902
     ]
    },
    "pyemma.util.discrete_trajectories.count_states": {
     "line number": [
      947
     ]
    },
    "range": {
     "line number": [
      908,
      977
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_active_count_fraction": {
  "data": {
   "lineno": 1175
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_active_set": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1022,
      1023,
      1024,
      1025
     ]
    },
    "numpy.all": {
     "line number": [
      1022,
      1023,
      1024,
      1025
     ]
    },
    "numpy.arange": {
     "line number": [
      1022,
      1023,
      1024,
      1025
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_active_state_fraction": {
  "data": {
   "lineno": 1162
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_active_state_indexes": {
  "data": {
   "lineno": 1589
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_committor": {
  "data": {
   "lineno": 1352
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_connected_sets": {
  "data": {
   "lineno": 1051
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_connectivity": {
  "data": {
   "lineno": 1061
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_correlation": {
  "data": {
   "lineno": 1491
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_count_matrix_active": {
  "data": {
   "lineno": 1074
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_count_matrix_full": {
  "data": {
   "lineno": 1087
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_discrete_trajectories_active": {
  "data": {
   "lineno": 1109
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_discrete_trajectories_full": {
  "data": {
   "lineno": 1097
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_eigenvalues": {
  "data": {
   "lineno": 1218
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_eigenvalues_OOM": {
  "data": {
   "lineno": 1311
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_eigenvectors_RDL": {
  "data": {
   "lineno": 1276
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_eigenvectors_left": {
  "data": {
   "lineno": 1239
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_eigenvectors_right": {
  "data": {
   "lineno": 1257
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_expectation": {
  "data": {
   "lineno": 1475
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_fingerprint_correlation": {
  "data": {
   "lineno": 1532
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_fingerprint_relaxation": {
  "data": {
   "lineno": 1567
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_generate_traj": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_oom_msm.warnings": {
     "line number": [
      1604,
      1606
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_invalid_inputs": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      991,
      993
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      992,
      994
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_lagtime": {
  "data": {
   "lineno": 1014
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_largest_connected_set": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1028,
      1029,
      1030,
      1031
     ]
    },
    "numpy.all": {
     "line number": [
      1028,
      1029,
      1030,
      1031
     ]
    },
    "numpy.arange": {
     "line number": [
      1028,
      1029,
      1030,
      1031
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_mfpt": {
  "data": {
   "lineno": 1369
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_nstates": {
  "data": {
   "lineno": 1039
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_oom_components": {
  "data": {
   "lineno": 1325
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_pcca_assignment": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_oom_msm.warnings": {
     "line number": [
      1394,
      1396
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_pcca_distributions": {
  "data": {
   "lineno": 1414
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_pcca_memberships": {
  "data": {
   "lineno": 1437
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_pcca_sets": {
  "data": {
   "lineno": 1456
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_relaxation": {
  "data": {
   "lineno": 1507
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_reversible": {
  "data": {
   "lineno": 996
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_sample_by_state": {
  "data": {
   "lineno": 1622
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_simulate_MSM": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1648,
      1649,
      1649
     ]
    },
    "numpy.unique": {
     "line number": [
      1649
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_sparse": {
  "data": {
   "lineno": 1007
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_statdist": {
  "data": {
   "lineno": 1198
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_timescales": {
  "data": {
   "lineno": 1302
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_timestep": {
  "data": {
   "lineno": 1119
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_trajectory_weights": {
  "data": {
   "lineno": 1637
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TestMSM_Incomplete.test_transition_matrix": {
  "data": {
   "lineno": 1146
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.TransitionMatrix": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      78,
      78,
      78
     ]
    },
    "numpy.sum": {
     "line number": [
      80,
      82
     ]
    },
    "numpy.zeros": {
     "line number": [
      75
     ]
    },
    "range": {
     "line number": [
      76,
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm._sort_by_norm": {
  "data": {
   "shadows": "pyemma.util.linalg._sort_by_norm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.count_states": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories.count_states"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.dt": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.estimate_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.ma": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.markov_model": {
  "data": {
   "shadows": "pyemma.msm.markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.msmest": {
  "data": {
   "shadows": "msmtools.estimation"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.oom_transformations": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      64
     ]
    },
    "numpy.diag": {
     "line number": [
      51,
      52
     ]
    },
    "numpy.dot": {
     "line number": [
      51,
      52,
      56,
      56,
      60,
      69
     ]
    },
    "numpy.logical_and": {
     "line number": [
      64
     ]
    },
    "numpy.real": {
     "line number": [
      64,
      68
     ]
    },
    "numpy.sum": {
     "line number": [
      57,
      59
     ]
    },
    "numpy.where": {
     "line number": [
      64
     ]
    },
    "numpy.zeros": {
     "line number": [
      54
     ]
    },
    "pyemma.util.linalg._sort_by_norm": {
     "line number": [
      67
     ]
    },
    "range": {
     "line number": [
      55
     ]
    },
    "scipy.linalg.eig": {
     "line number": [
      62
     ]
    },
    "scipy.linalg.svd": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_oom_msm.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.scl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_oom_msm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      219
     ]
    },
    "pyemma.msm.tests.test_reactive_flux.unittest": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_reactive_flux.unittest": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.setUp": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "msmtools.analysis.statdist": {
     "line number": [
      92
     ]
    },
    "numpy.array": {
     "line number": [
      35,
      45,
      46,
      47,
      52,
      62,
      65,
      66,
      76,
      107,
      108,
      109,
      110,
      116
     ]
    },
    "numpy.diag": {
     "line number": [
      94
     ]
    },
    "numpy.dot": {
     "line number": [
      94
     ]
    },
    "numpy.newaxis": {
     "line number": [
      96
     ]
    },
    "numpy.sum": {
     "line number": [
      96
     ]
    },
    "pyemma.msm.MSM": {
     "line number": [
      35,
      96
     ]
    },
    "pyemma.msm.tpt": {
     "line number": [
      73,
      124
     ]
    },
    "set": {
     "line number": [
      102,
      102,
      102,
      102,
      102,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_A": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_B": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_I": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_backwardcommittor": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_coarse_grain": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      191,
      192,
      193,
      194,
      195,
      196,
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_committor": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_flux": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_forwardcommittor": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_grossflux": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_major_flux": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      181,
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_netflux": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_nstates": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_pathways": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "len": {
     "line number": [
      168,
      168,
      169,
      174,
      174,
      175
     ]
    },
    "numpy.all": {
     "line number": [
      170,
      176
     ]
    },
    "numpy.array": {
     "line number": [
      170,
      170,
      176,
      176
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      171,
      177
     ]
    },
    "range": {
     "line number": [
      169,
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_rate": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      160,
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_serialization": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      209,
      211,
      213
     ]
    },
    "isinstance": {
     "line number": [
      210
     ]
    },
    "numpy.ndarray": {
     "line number": [
      210
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      211
     ]
    },
    "pyemma.msm.tests.test_reactive_flux.os": {
     "line number": [
      216
     ]
    },
    "pyemma.msm.tests.test_reactive_flux.pyemma": {
     "line number": [
      205
     ]
    },
    "pyemma.msm.tests.test_reactive_flux.tempfile": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.TestReactiveFluxFunctions.test_total_flux": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_reactive_flux.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux.msmapi": {
  "data": {
   "shadows": "pyemma.msm"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_reactive_flux.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_subset": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      63
     ]
    },
    "pyemma.msm.tests.test_subset.unittest": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_subset.SubSet": {
  "data": {
   "shadows": "pyemma.msm.util.subset.SubSet"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_subset.TestSubset": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_subset.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_subset.TestSubset.test_has_member": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      34,
      35,
      36,
      37
     ]
    },
    "pyemma.msm.tests.test_subset.test_class": {
     "line number": [
      33,
      35,
      37
     ]
    },
    "pyemma.msm.tests.test_subset.types": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.TestSubset.test_property": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      42
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      44
     ]
    },
    "property": {
     "line number": [
      45
     ]
    },
    "pyemma.msm.tests.test_subset.test_class": {
     "line number": [
      41,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.TestSubset.test_shape_left_ev": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      48
     ]
    },
    "numpy.array": {
     "line number": [
      51
     ]
    },
    "numpy.inf": {
     "line number": [
      51
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      53
     ]
    },
    "pyemma.msm.tests.test_subset.test_class": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.TestSubset.test_shape_right_ev": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      56
     ]
    },
    "numpy.array": {
     "line number": [
      59
     ]
    },
    "numpy.inf": {
     "line number": [
      59
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      61
     ]
    },
    "pyemma.msm.tests.test_subset.test_class": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.add_full_state_methods": {
  "data": {
   "shadows": "pyemma.msm.util.subset.add_full_state_methods"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_subset.k_global": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pyemma.msm.tests.test_subset.map_to_full_state": {
  "data": {
   "shadows": "pyemma.msm.util.subset.map_to_full_state"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_subset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_subset.test_class": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "pyemma.msm.util.subset.SubSet": {
     "line number": [
      12
     ]
    },
    "pyemma.msm.util.subset.add_full_state_methods": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_subset.test_class.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.test_class.left_eigenvectors": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      23
     ]
    },
    "numpy.inf": {
     "line number": [
      21
     ]
    },
    "pyemma.msm.util.subset.map_to_full_state": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.test_class.right_eigenvectors": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      19
     ]
    },
    "numpy.inf": {
     "line number": [
      17
     ]
    },
    "pyemma.msm.util.subset.map_to_full_state": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.test_class.test_property": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "property": {
     "line number": [
      26
     ]
    },
    "pyemma.msm.util.subset.map_to_full_state": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_subset.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_subset.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_tpt": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      249
     ]
    },
    "pyemma.msm.tests.test_tpt.unittest": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pyemma.msm.tests.test_tpt.unittest": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.setUp": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "msmtools.analysis.statdist": {
     "line number": [
      76,
      101,
      106,
      138
     ]
    },
    "numpy.array": {
     "line number": [
      38,
      48,
      49,
      50,
      55,
      65,
      68,
      69,
      85,
      117,
      118,
      119,
      120,
      126
     ]
    },
    "numpy.diag": {
     "line number": [
      103
     ]
    },
    "numpy.dot": {
     "line number": [
      103
     ]
    },
    "numpy.newaxis": {
     "line number": [
      105
     ]
    },
    "numpy.sum": {
     "line number": [
      105
     ]
    },
    "pyemma.msm.markov_model": {
     "line number": [
      75,
      137
     ]
    },
    "pyemma.msm.tpt": {
     "line number": [
      82,
      143
     ]
    },
    "set": {
     "line number": [
      112,
      112,
      112,
      112,
      112,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_A": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_B": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_I": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_backwardcommittor": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_coarse_grain": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      210,
      211,
      212,
      213,
      214,
      215,
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_committor": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_flux": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_forwardcommittor": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_grossflux": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_netflux": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_nstates": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "numpy.shape": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_rate": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      179,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_time_units": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "msmtools.analysis.mfpt": {
     "line number": [
      228
     ]
    },
    "numpy.dot": {
     "line number": [
      229
     ]
    },
    "numpy.random.randint": {
     "line number": [
      219
     ]
    },
    "pyemma.msm.estimate_markov_model": {
     "line number": [
      222
     ]
    },
    "pyemma.msm.tpt": {
     "line number": [
      226
     ]
    },
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      227,
      228,
      229,
      236,
      238,
      239,
      241,
      245,
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.TestReactiveFluxFunctions.test_total_flux": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "pyemma.util.numeric.assert_allclose": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.tests.test_tpt.assert_allclose": {
  "data": {
   "shadows": "pyemma.util.numeric.assert_allclose"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_tpt.estimate_markov_model": {
  "data": {
   "shadows": "pyemma.msm.estimate_markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_tpt.markov_model": {
  "data": {
   "shadows": "pyemma.msm.markov_model"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_tpt.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_tpt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_tpt.tpt": {
  "data": {
   "shadows": "pyemma.msm.tpt"
  },
  "type": "import"
 },
 "pyemma.msm.tests.test_tpt.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.msm.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.util.subset": {
  "data": {},
  "type": "module"
 },
 "pyemma.msm.util.subset.SubSet": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "object": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.util.subset.SubSet.active_set": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      37
     ]
    },
    "numpy.intc": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.util.subset.SubSet.nstates_full": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      51
     ]
    },
    "int": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.util.subset._call_member": {
  "data": {
   "shadows": "pyemma._base.estimator._call_member"
  },
  "type": "import"
 },
 "pyemma.msm.util.subset._globalize": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      69,
      71
     ]
    },
    "list": {
     "line number": [
      60
     ]
    },
    "numpy.asarray": {
     "line number": [
      57,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.util.subset._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.msm.util.subset._wrap_to_full_state": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pyemma.msm.util.subset._wrap_to_full_state.alias_to_full_state": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      83
     ]
    },
    "numpy.asarray": {
     "line number": [
      80
     ]
    },
    "pyemma._base.estimator._call_member": {
     "line number": [
      79
     ]
    },
    "pyemma.msm.util.subset._globalize": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.util.subset.add_full_state_methods": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      99,
      100,
      103,
      108
     ]
    },
    "isinstance": {
     "line number": [
      103
     ]
    },
    "property": {
     "line number": [
      103,
      107
     ]
    },
    "pyemma.msm.util.subset._wrap_to_full_state": {
     "line number": [
      106,
      111
     ]
    },
    "setattr": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.util.subset.map_to_full_state": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "object": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.msm.util.subset.map_to_full_state.__call__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      137
     ]
    },
    "property": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.msm.util.subset.map_to_full_state.__init__": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "pyemma.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.parse": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyemma.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pyemma.plots": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots._ext": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots._ext.fruchterman_reingold": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots._ext.fruchterman_reingold._fruchterman_reingold": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      16
     ]
    },
    "RuntimeError": {
     "line number": [
      17
     ]
    },
    "float": {
     "line number": [
      37
     ]
    },
    "numpy.asarray": {
     "line number": [
      20,
      24
     ]
    },
    "numpy.random.random": {
     "line number": [
      24
     ]
    },
    "numpy.sqrt": {
     "line number": [
      31,
      47,
      55
     ]
    },
    "numpy.transpose": {
     "line number": [
      51,
      51,
      57,
      57
     ]
    },
    "numpy.where": {
     "line number": [
      49,
      56
     ]
    },
    "numpy.zeros": {
     "line number": [
      38
     ]
    },
    "pyemma.plots._ext.fruchterman_reingold._rescale_layout": {
     "line number": [
      71
     ]
    },
    "range": {
     "line number": [
      42,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots._ext.fruchterman_reingold._rescale_layout": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "max": {
     "line number": [
      82
     ]
    },
    "range": {
     "line number": [
      80,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots._ext.fruchterman_reingold.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.markovtests": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.markovtests.__author__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyemma.plots.markovtests._add_ck_subplot": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "str": {
     "line number": [
      44,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.markovtests.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.plots.markovtests.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.markovtests.plot_cktest": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      128
     ]
    },
    "int": {
     "line number": [
      111,
      114,
      130,
      131,
      135,
      136
     ]
    },
    "list": {
     "line number": [
      123
     ]
    },
    "matplotlib.pylab.subplots": {
     "line number": [
      122
     ]
    },
    "matplotlib.pylab.subplots_adjust": {
     "line number": [
      145
     ]
    },
    "min": {
     "line number": [
      110,
      113,
      119
     ]
    },
    "numpy.array": {
     "line number": [
      119
     ]
    },
    "numpy.max": {
     "line number": [
      119
     ]
    },
    "pyemma.plots.markovtests._add_ck_subplot": {
     "line number": [
      132,
      137
     ]
    },
    "pyemma.plots.markovtests.math": {
     "line number": [
      111,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.markovtests.plt": {
  "data": {
   "shadows": "matplotlib.pylab"
  },
  "type": "import"
 },
 "pyemma.plots.networks": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      26
     ]
    },
    "pyemma.plots.networks.logging": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.plots.networks.NetworkPlot": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "object": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.plots.networks.NetworkPlot.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      78,
      81,
      84
     ]
    },
    "len": {
     "line number": [
      77,
      77,
      79,
      79,
      80,
      80,
      82,
      82,
      83,
      83,
      85,
      85
     ]
    },
    "pyemma.plots.networks.warnings": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.networks.NetworkPlot._draw_arrow": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      109
     ]
    },
    "float": {
     "line number": [
      101,
      101
     ]
    },
    "math.sqrt": {
     "line number": [
      100
     ]
    },
    "max": {
     "line number": [
      105
     ]
    },
    "numpy.abs": {
     "line number": [
      118
     ]
    },
    "numpy.array": {
     "line number": [
      116,
      117,
      119
     ]
    },
    "numpy.cross": {
     "line number": [
      122
     ]
    },
    "numpy.divide": {
     "line number": [
      120
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.networks.NetworkPlot._find_best_positions": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "len": {
     "line number": [
      290
     ]
    },
    "numpy.array": {
     "line number": [
      299
     ]
    },
    "numpy.max": {
     "line number": [
      306,
      307,
      310,
      311,
      312,
      314,
      315,
      318,
      319,
      320
     ]
    },
    "numpy.min": {
     "line number": [
      306,
      307,
      308,
      308,
      310,
      311,
      312,
      314,
      315,
      316,
      316,
      318,
      319,
      320
     ]
    },
    "numpy.random.random": {
     "line number": [
      290
     ]
    },
    "numpy.vstack": {
     "line number": [
      291,
      295
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      294
     ]
    },
    "pyemma.plots._ext.fruchterman_reingold._fruchterman_reingold": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.networks.NetworkPlot.layout_automatic": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "len": {
     "line number": [
      325
     ]
    },
    "numpy.where": {
     "line number": [
      326
     ]
    },
    "numpy.zeros": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.networks.NetworkPlot.plot_network": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      228
     ]
    },
    "ValueError": {
     "line number": [
      215,
      223,
      244
     ]
    },
    "abs": {
     "line number": [
      265,
      271
     ]
    },
    "float": {
     "line number": [
      174,
      177
     ]
    },
    "int": {
     "line number": [
      227
     ]
    },
    "isinstance": {
     "line number": [
      211,
      220,
      222,
      233,
      235,
      237
     ]
    },
    "len": {
     "line number": [
      157,
      214,
      216,
      222,
      223,
      260,
      260
     ]
    },
    "list": {
     "line number": [
      222
     ]
    },
    "math.sqrt": {
     "line number": [
      180,
      251
     ]
    },
    "matplotlib.pyplot.Circle": {
     "line number": [
      250
     ]
    },
    "matplotlib.pyplot.cm.binary": {
     "line number": [
      227
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      188
     ]
    },
    "min": {
     "line number": [
      174,
      177
     ]
    },
    "numpy.arange": {
     "line number": [
      212
     ]
    },
    "numpy.diag": {
     "line number": [
      180,
      180
     ]
    },
    "numpy.empty": {
     "line number": [
      240
     ]
    },
    "numpy.max": {
     "line number": [
      160,
      166,
      177,
      180
     ]
    },
    "numpy.min": {
     "line number": [
      159,
      165
     ]
    },
    "numpy.ndarray": {
     "line number": [
      233
     ]
    },
    "numpy.ones": {
     "line number": [
      174
     ]
    },
    "numpy.shape": {
     "line number": [
      240
     ]
    },
    "object": {
     "line number": [
      240
     ]
    },
    "pyemma.plots.networks.logger": {
     "line number": [
      187,
      230
     ]
    },
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      225
     ]
    },
    "range": {
     "line number": [
      227,
      248,
      263,
      264
     ]
    },
    "str": {
     "line number": [
      211,
      212,
      220,
      235,
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.networks.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyemma.plots.networks.__author__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyemma.plots.networks._fruchterman_reingold": {
  "data": {
   "shadows": "pyemma.plots._ext.fruchterman_reingold._fruchterman_reingold"
  },
  "type": "import"
 },
 "pyemma.plots.networks._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.networks._plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.networks._sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pyemma.plots.networks._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.plots.networks.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyemma.plots.networks.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.plots.networks.msmana": {
  "data": {
   "shadows": "msmtools.analysis"
  },
  "type": "import"
 },
 "pyemma.plots.networks.plot_flux": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      562
     ]
    },
    "getattr": {
     "line number": [
      546
     ]
    },
    "isinstance": {
     "line number": [
      555,
      560
     ]
    },
    "len": {
     "line number": [
      561,
      563
     ]
    },
    "list": {
     "line number": [
      560
     ]
    },
    "matplotlib.pylab.xlabel": {
     "line number": [
      573
     ]
    },
    "numpy.array": {
     "line number": [
      557,
      558,
      559
     ]
    },
    "numpy.ndarray": {
     "line number": [
      560
     ]
    },
    "numpy.where": {
     "line number": [
      552
     ]
    },
    "pyemma.plots.networks.NetworkPlot": {
     "line number": [
      550
     ]
    },
    "range": {
     "line number": [
      557
     ]
    },
    "str": {
     "line number": [
      555,
      557
     ]
    },
    "tuple": {
     "line number": [
      560
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.networks.plot_markov_model": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      419
     ]
    },
    "msmtools.analysis.stationary_distribution": {
     "line number": [
      425,
      427
     ]
    },
    "numpy.diag": {
     "line number": [
      427
     ]
    },
    "numpy.dot": {
     "line number": [
      427
     ]
    },
    "numpy.ndarray": {
     "line number": [
      419
     ]
    },
    "numpy.where": {
     "line number": [
      428
     ]
    },
    "pyemma.plots.networks.NetworkPlot": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.networks.plot_network": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": {
    "pyemma.plots.networks.NetworkPlot": {
     "line number": [
      675
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.networks.plt": {
  "data": {
   "shadows": "matplotlib.pylab"
  },
  "type": "import"
 },
 "pyemma.plots.networks.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.plots.plots1d": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.plots1d._MDFeaturizer": {
  "data": {
   "shadows": "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer"
  },
  "type": "import"
 },
 "pyemma.plots.plots1d.__author__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pyemma.plots.plots1d._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.plots1d._plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.plots1d.plot_feature_histograms": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      66
     ]
    },
    "ValueError": {
     "line number": [
      63,
      75,
      78
     ]
    },
    "enumerate": {
     "line number": [
      94
     ]
    },
    "isinstance": {
     "line number": [
      62,
      70,
      72
     ]
    },
    "len": {
     "line number": [
      77,
      111
     ]
    },
    "list": {
     "line number": [
      70
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      89
     ]
    },
    "numpy.NaN": {
     "line number": [
      99
     ]
    },
    "numpy.array": {
     "line number": [
      111
     ]
    },
    "numpy.histogram": {
     "line number": [
      95
     ]
    },
    "numpy.log": {
     "line number": [
      101,
      101
     ]
    },
    "numpy.ndarray": {
     "line number": [
      62
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      99
     ]
    },
    "pyemma.coordinates.data.featurization.featurizer.MDFeaturizer": {
     "line number": [
      72
     ]
    },
    "range": {
     "line number": [
      108,
      111
     ]
    },
    "reversed": {
     "line number": [
      94
     ]
    },
    "str": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.plots2d": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.plots2d.LogLocator": {
  "data": {
   "shadows": "matplotlib.ticker.LogLocator"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d.LogNorm": {
  "data": {
   "shadows": "matplotlib.colors.LogNorm"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d.__author__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyemma.plots.plots2d.__version__": {
  "data": {
   "shadows": "matplotlib.__version__"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d._get_cmap": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "distutils.version.LooseVersion": {
     "line number": [
      35
     ]
    },
    "matplotlib.__version__": {
     "line number": [
      35
     ]
    },
    "pyemma.plots.plots2d._matplotlib_version": {
     "line number": [
      32,
      35,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.plots2d._matplotlib_version": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyemma.plots.plots2d._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d._plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d._prune_kwargs": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "warnings.warn": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.plots2d._to_density": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "float": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.plots2d._to_free_energy": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "numpy.inf": {
     "line number": [
      229
     ]
    },
    "numpy.log": {
     "line number": [
      231
     ]
    },
    "numpy.min": {
     "line number": [
      233
     ]
    },
    "numpy.ones": {
     "line number": [
      229
     ]
    },
    "pyemma.plots.plots2d._to_density": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.plots2d._warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d.contour": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      47
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      53
     ]
    },
    "pyemma.plots.plots2d._get_cmap": {
     "line number": [
      48
     ]
    },
    "pyemma.plots.plots2d.plot_contour": {
     "line number": [
      60
     ]
    },
    "warnings.warn": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.get_cmap": {
  "data": {
   "shadows": "matplotlib.cm.get_cmap"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d.get_grid_data": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "numpy.hstack": {
     "line number": [
      195
     ]
    },
    "numpy.linspace": {
     "line number": [
      191,
      192
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      190
     ]
    },
    "scipy.interpolate.griddata": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.get_histogram": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "numpy.histogram2d": {
     "line number": [
      153
     ]
    },
    "numpy.maximum": {
     "line number": [
      158
     ]
    },
    "numpy.min": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.griddata": {
  "data": {
   "shadows": "scipy.interpolate.griddata"
  },
  "type": "import"
 },
 "pyemma.plots.plots2d.plot_contour": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": {
    "float": {
     "line number": [
      808
     ]
    },
    "numpy.inf": {
     "line number": [
      804,
      806
     ]
    },
    "numpy.linspace": {
     "line number": [
      809
     ]
    },
    "numpy.ma.masked_where": {
     "line number": [
      814
     ]
    },
    "numpy.max": {
     "line number": [
      806
     ]
    },
    "numpy.min": {
     "line number": [
      804
     ]
    },
    "pyemma.plots.plots2d.get_grid_data": {
     "line number": [
      801
     ]
    },
    "pyemma.plots.plots2d.get_histogram": {
     "line number": [
      811
     ]
    },
    "pyemma.plots.plots2d.plot_map": {
     "line number": [
      815
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.plot_density": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "matplotlib.colors.LogNorm": {
     "line number": [
      507
     ]
    },
    "matplotlib.ticker.LogLocator": {
     "line number": [
      523
     ]
    },
    "numpy.ceil": {
     "line number": [
      511
     ]
    },
    "numpy.floor": {
     "line number": [
      510
     ]
    },
    "numpy.log10": {
     "line number": [
      510,
      511
     ]
    },
    "numpy.logspace": {
     "line number": [
      509
     ]
    },
    "numpy.ma.masked_where": {
     "line number": [
      504
     ]
    },
    "pyemma.plots.plots2d._to_density": {
     "line number": [
      503
     ]
    },
    "pyemma.plots.plots2d.get_histogram": {
     "line number": [
      500
     ]
    },
    "pyemma.plots.plots2d.plot_map": {
     "line number": [
      515
     ]
    },
    "range": {
     "line number": [
      523
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.plot_free_energy": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      654,
      659,
      664
     ]
    },
    "ValueError": {
     "line number": [
      670,
      673
     ]
    },
    "pyemma.plots.plots2d._get_cmap": {
     "line number": [
      655
     ]
    },
    "pyemma.plots.plots2d._to_free_energy": {
     "line number": [
      679
     ]
    },
    "pyemma.plots.plots2d.get_histogram": {
     "line number": [
      676
     ]
    },
    "pyemma.plots.plots2d.plot_map": {
     "line number": [
      680
     ]
    },
    "warnings.warn": {
     "line number": [
      651,
      657,
      661
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.plot_map": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      370
     ]
    },
    "dict": {
     "line number": [
      368
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      361
     ]
    },
    "pyemma.plots.plots2d._prune_kwargs": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.plot_state_map": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": {
    "float": {
     "line number": [
      938
     ]
    },
    "int": {
     "line number": [
      928
     ]
    },
    "matplotlib.cm.get_cmap": {
     "line number": [
      929
     ]
    },
    "numpy.arange": {
     "line number": [
      939
     ]
    },
    "numpy.max": {
     "line number": [
      928
     ]
    },
    "pyemma.plots.plots2d.plot_contour": {
     "line number": [
      930
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.plots2d.scatter_contour": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      104
     ]
    },
    "pyemma.plots.plots2d.contour": {
     "line number": [
      105
     ]
    },
    "warnings.warn": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.tests.plt": {
  "data": {
   "shadows": "matplotlib.pylab"
  },
  "type": "import"
 },
 "pyemma.plots.tests.teardown_module": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "matplotlib.pylab.close": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_its": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      75
     ]
    },
    "pyemma.plots.tests.test_its.unittest": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.plots.tests.test_its.BayesianMSM": {
  "data": {
   "shadows": "pyemma.msm.BayesianMSM"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_its.ImpliedTimescales": {
  "data": {
   "shadows": "pyemma.msm.ImpliedTimescales"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_its.MaximumLikelihoodMSM": {
  "data": {
   "shadows": "pyemma.msm.MaximumLikelihoodMSM"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_its.TestItsPlot": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pyemma.plots.tests.test_its.unittest": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.plots.tests.test_its.TestItsPlot.setUpClass": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      35
     ]
    },
    "msmtools.generation.generate_traj": {
     "line number": [
      44
     ]
    },
    "numpy.array": {
     "line number": [
      37
     ]
    },
    "pyemma.msm.ImpliedTimescales": {
     "line number": [
      46
     ]
    },
    "pyemma.msm.MaximumLikelihoodMSM": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_its.TestItsPlot.test_its_estimated_with_only_ts": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "pyemma.msm.ImpliedTimescales": {
     "line number": [
      64
     ]
    },
    "pyemma.plots.plot_implied_timescales": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_its.TestItsPlot.test_its_estimated_with_only_ts_samples": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "pyemma.msm.BayesianMSM": {
     "line number": [
      70
     ]
    },
    "pyemma.msm.ImpliedTimescales": {
     "line number": [
      70
     ]
    },
    "pyemma.plots.plot_implied_timescales": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_its.TestItsPlot.test_nits": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "pyemma.plots.plot_implied_timescales": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_its.TestItsPlot.test_plot": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "pyemma.plots.plot_implied_timescales": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_its.TestItsPlot.test_process": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "pyemma.plots.plot_implied_timescales": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_its.generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_its.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_its.plot_implied_timescales": {
  "data": {
   "shadows": "pyemma.plots.plot_implied_timescales"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_its.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_markovtests": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.tests.test_markovtests.TestItsPlot": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pyemma.plots.tests.test_markovtests.unittest": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.plots.tests.test_markovtests.TestItsPlot.setUpClass": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      35
     ]
    },
    "msmtools.generation.generate_trajs": {
     "line number": [
      42
     ]
    },
    "numpy.array": {
     "line number": [
      37
     ]
    },
    "pyemma.plots.tests.test_markovtests.pyemma": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_markovtests.TestItsPlot.test_plot": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "pyemma.plots.plot_cktest": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_markovtests.TestItsPlot.test_plot_kwargs": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "pyemma.plots.plot_cktest": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_markovtests.TestItsPlot.test_plot_kwargs_no_def_overriding": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "pyemma.plots.plot_cktest": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_markovtests.generate_traj": {
  "data": {
   "shadows": "msmtools.generation.generate_traj"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_markovtests.generate_trajs": {
  "data": {
   "shadows": "msmtools.generation.generate_trajs"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_markovtests.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_markovtests.plot_cktest": {
  "data": {
   "shadows": "pyemma.plots.plot_cktest"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_markovtests.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_markovtests.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      125
     ]
    },
    "pyemma.plots.tests.test_networks.unittest": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.plots.tests.test_networks.MSM": {
  "data": {
   "shadows": "pyemma.msm.MSM"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "pyemma.plots.tests.test_networks.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.setUpClass": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      36
     ]
    },
    "numpy.arange": {
     "line number": [
      49,
      50
     ]
    },
    "numpy.array": {
     "line number": [
      39
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      48
     ]
    },
    "pyemma.msm.MSM": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_alphanumeric_arrow_labels": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "pyemma.plots.networks.plot_markov_model": {
     "line number": [
      75
     ]
    },
    "pyemma.plots.tests.test_networks.matplotlib": {
     "line number": [
      77
     ]
    },
    "type": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_alphanumeric_arrow_labels_using_ax": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "matplotlib.pyplot.subplots": {
     "line number": [
      80
     ]
    },
    "pyemma.plots.networks.plot_markov_model": {
     "line number": [
      81
     ]
    },
    "pyemma.plots.tests.test_networks.matplotlib": {
     "line number": [
      83
     ]
    },
    "type": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_flux": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      60
     ]
    },
    "pyemma.msm.tpt": {
     "line number": [
      55
     ]
    },
    "pyemma.plots.networks.plot_flux": {
     "line number": [
      56
     ]
    },
    "pyemma.plots.tests.test_networks.matplotlib": {
     "line number": [
      57
     ]
    },
    "type": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_forced_no_arrows_labels": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "pyemma.plots.networks.plot_markov_model": {
     "line number": [
      67
     ]
    },
    "pyemma.plots.tests.test_networks.matplotlib": {
     "line number": [
      68
     ]
    },
    "type": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_numeric_arrow_labels": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "pyemma.plots.networks.plot_markov_model": {
     "line number": [
      71
     ]
    },
    "pyemma.plots.tests.test_networks.matplotlib": {
     "line number": [
      72
     ]
    },
    "type": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_plot_markov_model": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "pyemma.plots.networks.plot_markov_model": {
     "line number": [
      63
     ]
    },
    "pyemma.plots.tests.test_networks.matplotlib": {
     "line number": [
      64
     ]
    },
    "type": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_state_labels_flux": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      110
     ]
    },
    "pyemma.msm.tpt": {
     "line number": [
      107
     ]
    },
    "pyemma.plots.networks.plot_flux": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_state_labels_flux_auto": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "len": {
     "line number": [
      122,
      123
     ]
    },
    "numpy.array": {
     "line number": [
      121
     ]
    },
    "pyemma.msm.tpt": {
     "line number": [
      119
     ]
    },
    "pyemma.plots.networks.plot_flux": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_state_labels_network": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      99
     ]
    },
    "len": {
     "line number": [
      96
     ]
    },
    "numpy.arange": {
     "line number": [
      96
     ]
    },
    "pyemma.plots.networks.plot_network": {
     "line number": [
      97,
      100,
      103
     ]
    },
    "str": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.TestNetworkPlot.test_string_arrow_labels_using_ax": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "matplotlib.pyplot.subplots": {
     "line number": [
      87
     ]
    },
    "numpy.array": {
     "line number": [
      88
     ]
    },
    "pyemma.plots.networks.plot_network": {
     "line number": [
      91
     ]
    },
    "pyemma.plots.tests.test_networks.matplotlib": {
     "line number": [
      93
     ]
    },
    "type": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_networks.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.plot_flux": {
  "data": {
   "shadows": "pyemma.plots.networks.plot_flux"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.plot_markov_model": {
  "data": {
   "shadows": "pyemma.plots.networks.plot_markov_model"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.plot_network": {
  "data": {
   "shadows": "pyemma.plots.networks.plot_network"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.tpt": {
  "data": {
   "shadows": "pyemma.msm.tpt"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_networks.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots1d": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.tests.test_plots1d.TestPlots1d": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "pyemma.plots.tests.test_plots1d.unittest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.plots.tests.test_plots1d.TestPlots1d.setUpClass": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      27
     ]
    },
    "numpy.random.rand": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots1d.TestPlots1d.test_feature_histograms": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      33
     ]
    },
    "pyemma.plots.plots1d.plot_feature_histograms": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots1d.TestPlots1d.test_feature_histograms_ax_argument": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      53
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      51
     ]
    },
    "pyemma.plots.plots1d.plot_feature_histograms": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots1d.TestPlots1d.test_feature_histograms_mpl_arguments": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      47
     ]
    },
    "pyemma.plots.plots1d.plot_feature_histograms": {
     "line number": [
      42
     ]
    },
    "range": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots1d.TestPlots1d.test_invalid_input": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      36
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      38
     ]
    },
    "numpy.random.rand": {
     "line number": [
      37
     ]
    },
    "pyemma.plots.plots1d.plot_feature_histograms": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots1d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots1d.plot_feature_histograms": {
  "data": {
   "shadows": "pyemma.plots.plots1d.plot_feature_histograms"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots1d.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots1d.subplots": {
  "data": {
   "shadows": "matplotlib.pyplot.subplots"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots1d.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "pyemma.plots.tests.test_plots2d.unittest": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.setUpClass": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      31
     ]
    },
    "numpy.random.binomial": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.test_contour": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      42,
      46
     ]
    },
    "pyemma.plots.plots2d.contour": {
     "line number": [
      41,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.test_free_energy": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      38
     ]
    },
    "pyemma.plots.plots2d.plot_free_energy": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.test_plot_contour": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      87,
      91,
      95
     ]
    },
    "pyemma.plots.plots2d.plot_contour": {
     "line number": [
      85,
      88,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.test_plot_density": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      56,
      59,
      62,
      65,
      69
     ]
    },
    "pyemma.plots.plots2d.plot_density": {
     "line number": [
      54,
      57,
      60,
      63,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.test_plot_free_energy": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      75,
      79
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      74
     ]
    },
    "pyemma.plots.plots2d.plot_free_energy": {
     "line number": [
      72,
      76,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.test_plot_state_map": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      109
     ]
    },
    "matplotlib.pyplot.close": {
     "line number": [
      100,
      104,
      108
     ]
    },
    "pyemma.plots.plots2d.plot_state_map": {
     "line number": [
      98,
      101,
      105,
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.TestPlots2d.test_scatter_contour": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "matplotlib.pyplot.close": {
     "line number": [
      51
     ]
    },
    "pyemma.plots.plots2d.scatter_contour": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.tests.test_plots2d.contour": {
  "data": {
   "shadows": "pyemma.plots.plots2d.contour"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.plot_contour": {
  "data": {
   "shadows": "pyemma.plots.plots2d.plot_contour"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.plot_density": {
  "data": {
   "shadows": "pyemma.plots.plots2d.plot_density"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.plot_free_energy": {
  "data": {
   "shadows": "pyemma.plots.plots2d.plot_free_energy"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.plot_state_map": {
  "data": {
   "shadows": "pyemma.plots.plots2d.plot_state_map"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.scatter_contour": {
  "data": {
   "shadows": "pyemma.plots.plots2d.scatter_contour"
  },
  "type": "import"
 },
 "pyemma.plots.tests.test_plots2d.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.thermoplots._DTRAM": {
  "data": {
   "shadows": "pyemma.thermo.DTRAM"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots._MBAR": {
  "data": {
   "shadows": "pyemma.thermo.MBAR"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots._MSM": {
  "data": {
   "shadows": "pyemma.msm.MSM"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots._TRAM": {
  "data": {
   "shadows": "pyemma.thermo.TRAM"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots._WHAM": {
  "data": {
   "shadows": "pyemma.thermo.WHAM"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.plots.thermoplots._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots._plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.thermoplots.get_estimator_label": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      33,
      35,
      37,
      39
     ]
    },
    "pyemma.thermo.DTRAM": {
     "line number": [
      37
     ]
    },
    "pyemma.thermo.MBAR": {
     "line number": [
      35
     ]
    },
    "pyemma.thermo.TRAM": {
     "line number": [
      39
     ]
    },
    "pyemma.thermo.WHAM": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.thermoplots.plot_convergence_info": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "len": {
     "line number": [
      95
     ]
    },
    "matplotlib.pyplot.rcParams": {
     "line number": [
      92
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      93
     ]
    },
    "pyemma.plots.thermoplots.plot_increments": {
     "line number": [
      97
     ]
    },
    "pyemma.plots.thermoplots.plot_loglikelihoods": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.thermoplots.plot_increments": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      52
     ]
    },
    "list": {
     "line number": [
      52
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      48
     ]
    },
    "numpy.arange": {
     "line number": [
      56
     ]
    },
    "pyemma.plots.thermoplots.get_estimator_label": {
     "line number": [
      57
     ]
    },
    "tuple": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.thermoplots.plot_loglikelihoods": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      74
     ]
    },
    "list": {
     "line number": [
      74
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      70
     ]
    },
    "numpy.arange": {
     "line number": [
      78
     ]
    },
    "pyemma.plots.thermoplots.get_estimator_label": {
     "line number": [
      79
     ]
    },
    "tuple": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.thermoplots.plot_memm_implied_timescales": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      112,
      114
     ]
    },
    "float": {
     "line number": [
      118
     ]
    },
    "int": {
     "line number": [
      118
     ]
    },
    "isinstance": {
     "line number": [
      111,
      113,
      116,
      118,
      129,
      136
     ]
    },
    "len": {
     "line number": [
      111,
      113,
      144,
      150
     ]
    },
    "list": {
     "line number": [
      111,
      113
     ]
    },
    "matplotlib.pyplot.subplots": {
     "line number": [
      122
     ]
    },
    "numpy.argsort": {
     "line number": [
      141
     ]
    },
    "numpy.asarray": {
     "line number": [
      139,
      140
     ]
    },
    "numpy.max": {
     "line number": [
      150
     ]
    },
    "numpy.ones": {
     "line number": [
      150
     ]
    },
    "pyemma.msm.MSM": {
     "line number": [
      136
     ]
    },
    "pyemma.thermo.DTRAM": {
     "line number": [
      129
     ]
    },
    "pyemma.thermo.TRAM": {
     "line number": [
      129
     ]
    },
    "range": {
     "line number": [
      143
     ]
    },
    "str": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.plots.timescales": {
  "data": {},
  "type": "module"
 },
 "pyemma.plots.timescales.__author__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyemma.plots.timescales._is_int": {
  "data": {
   "shadows": "pyemma.util.types.is_int"
  },
  "type": "import"
 },
 "pyemma.plots.timescales._is_iterable_of_int": {
  "data": {
   "shadows": "pyemma.util.types.is_iterable_of_int"
  },
  "type": "import"
 },
 "pyemma.plots.timescales._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.plots.timescales._plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyemma.plots.timescales.plot_implied_timescales": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      90,
      102,
      108,
      110
     ]
    },
    "ValueError": {
     "line number": [
      93,
      95
     ]
    },
    "float": {
     "line number": [
      114
     ]
    },
    "int": {
     "line number": [
      114
     ]
    },
    "isinstance": {
     "line number": [
      107,
      109,
      112,
      114
     ]
    },
    "len": {
     "line number": [
      107,
      109,
      123,
      130,
      134,
      144
     ]
    },
    "list": {
     "line number": [
      107,
      109
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      82
     ]
    },
    "matplotlib.pyplot.savefig": {
     "line number": [
      157
     ]
    },
    "min": {
     "line number": [
      138
     ]
    },
    "numpy.arange": {
     "line number": [
      105
     ]
    },
    "numpy.argsort": {
     "line number": [
      86
     ]
    },
    "numpy.max": {
     "line number": [
      85,
      94,
      97
     ]
    },
    "numpy.ones": {
     "line number": [
      144
     ]
    },
    "pyemma.util.types.is_int": {
     "line number": [
      101
     ]
    },
    "pyemma.util.types.is_iterable_of_int": {
     "line number": [
      92
     ]
    },
    "str": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.thermo": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.DTRAM": {
  "data": {
   "shadows": "pyemma.thermo.estimators.DTRAM"
  },
  "type": "import"
 },
 "pyemma.thermo.EmptyState": {
  "data": {
   "shadows": "pyemma.thermo.estimators.EmptyState"
  },
  "type": "import"
 },
 "pyemma.thermo.MBAR": {
  "data": {
   "shadows": "pyemma.thermo.estimators.MBAR"
  },
  "type": "import"
 },
 "pyemma.thermo.MEMM": {
  "data": {
   "shadows": "pyemma.thermo.models.MEMM"
  },
  "type": "import"
 },
 "pyemma.thermo.MultiThermModel": {
  "data": {
   "shadows": "pyemma.thermo.models.MultiThermModel"
  },
  "type": "import"
 },
 "pyemma.thermo.StationaryModel": {
  "data": {
   "shadows": "pyemma.thermo.models.StationaryModel"
  },
  "type": "import"
 },
 "pyemma.thermo.TRAM": {
  "data": {
   "shadows": "pyemma.thermo.estimators.TRAM"
  },
  "type": "import"
 },
 "pyemma.thermo.WHAM": {
  "data": {
   "shadows": "pyemma.thermo.estimators.WHAM"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.estimators.DTRAM_estimator": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.estimators.DTRAM_estimator.DTRAM": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "pyemma._base.estimator.Estimator": {
     "line number": [
      40
     ]
    },
    "pyemma.thermo.MEMM": {
     "line number": [
      40
     ]
    },
    "pyemma.thermo.estimators._base.ThermoBase": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.estimators.DTRAM_estimator.DTRAM.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.DTRAM_estimator.DTRAM._estimate": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      276
     ]
    },
    "isinstance": {
     "line number": [
      203
     ]
    },
    "len": {
     "line number": [
      204
     ]
    },
    "list": {
     "line number": [
      203
     ]
    },
    "msmtools.estimation.largest_connected_set": {
     "line number": [
      271
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      272
     ]
    },
    "numpy.exp": {
     "line number": [
      279
     ]
    },
    "numpy.float64": {
     "line number": [
      233,
      269
     ]
    },
    "numpy.intc": {
     "line number": [
      229,
      236
     ]
    },
    "numpy.newaxis": {
     "line number": [
      227
     ]
    },
    "numpy.require": {
     "line number": [
      228,
      232,
      236
     ]
    },
    "numpy.shape": {
     "line number": [
      211,
      211
     ]
    },
    "numpy.zeros": {
     "line number": [
      268
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      239
     ]
    },
    "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack": {
     "line number": [
      249,
      262
     ]
    },
    "pyemma.thermo.extensions.cset": {
     "line number": [
      224,
      225,
      227,
      227,
      231,
      235
     ]
    },
    "pyemma.thermo.extensions.cset.compute_csets_dTRAM": {
     "line number": [
      224
     ]
    },
    "pyemma.thermo.extensions.dtram.estimate": {
     "line number": [
      256
     ]
    },
    "pyemma.thermo.extensions.dtram.estimate_transition_matrix": {
     "line number": [
      266
     ]
    },
    "pyemma.thermo.extensions.util.count_matrices": {
     "line number": [
      214
     ]
    },
    "pyemma.thermo.extensions.util.state_counts": {
     "line number": [
      218
     ]
    },
    "pyemma.thermo.extensions.wham.estimate": {
     "line number": [
      245
     ]
    },
    "pyemma.thermo.models.memm.ThermoMSM": {
     "line number": [
      277
     ]
    },
    "pyemma.util.types.assert_array": {
     "line number": [
      209,
      210
     ]
    },
    "range": {
     "line number": [
      269
     ]
    },
    "tuple": {
     "line number": [
      203
     ]
    },
    "zip": {
     "line number": [
      208,
      273,
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.DTRAM_estimator.DTRAM.estimate": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "pyemma.thermo.estimators.DTRAM_estimator.DTRAM": {
     "line number": [
      199
     ]
    },
    "super": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.DTRAM_estimator.DTRAM.log_likelihood": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      297
     ]
    },
    "numpy.zeros": {
     "line number": [
      297
     ]
    },
    "pyemma.thermo.extensions.dtram.estimate_transition_matrices": {
     "line number": [
      292
     ]
    },
    "pyemma.thermo.extensions.dtram.get_loglikelihood": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.DTRAM_estimator.ThermoBase": {
  "data": {
   "shadows": "pyemma.thermo.estimators._base.ThermoBase"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._ConvergenceProgressIndicatorCallBack": {
  "data": {
   "shadows": "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._MEMM": {
  "data": {
   "shadows": "pyemma.thermo.MEMM"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._ThermoMSM": {
  "data": {
   "shadows": "pyemma.thermo.models.memm.ThermoMSM"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator.__author__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._cset": {
  "data": {
   "shadows": "pyemma.thermo.extensions.cset"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._dtram": {
  "data": {
   "shadows": "pyemma.thermo.extensions.dtram"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._largest_connected_set": {
  "data": {
   "shadows": "msmtools.estimation.largest_connected_set"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._util": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.DTRAM_estimator._wham": {
  "data": {
   "shadows": "pyemma.thermo.extensions.wham"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.estimators.MBAR_estimator.MBAR": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "pyemma._base.estimator.Estimator": {
     "line number": [
      34
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      34
     ]
    },
    "pyemma.thermo.MultiThermModel": {
     "line number": [
      34
     ]
    },
    "pyemma.thermo.estimators._base.ThermoBase": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.estimators.MBAR_estimator.MBAR.__init__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.MBAR_estimator.MBAR._estimate": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      166
     ]
    },
    "len": {
     "line number": [
      122,
      122,
      122
     ]
    },
    "max": {
     "line number": [
      130,
      131
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      147
     ]
    },
    "numpy.float64": {
     "line number": [
      140
     ]
    },
    "numpy.intc": {
     "line number": [
      138,
      139,
      148
     ]
    },
    "numpy.max": {
     "line number": [
      130,
      131
     ]
    },
    "numpy.nan": {
     "line number": [
      165
     ]
    },
    "numpy.require": {
     "line number": [
      138,
      139,
      140
     ]
    },
    "numpy.sort": {
     "line number": [
      146
     ]
    },
    "numpy.where": {
     "line number": [
      146
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      154
     ]
    },
    "pyemma.thermo.StationaryModel": {
     "line number": [
      170
     ]
    },
    "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack": {
     "line number": [
      161
     ]
    },
    "pyemma.thermo.extensions.mbar": {
     "line number": [
      151,
      153,
      153
     ]
    },
    "pyemma.thermo.extensions.mbar.estimate": {
     "line number": [
      157
     ]
    },
    "pyemma.thermo.extensions.mbar_direct": {
     "line number": [
      151
     ]
    },
    "pyemma.thermo.extensions.util.state_counts": {
     "line number": [
      143
     ]
    },
    "pyemma.util.types.assert_array": {
     "line number": [
      124,
      126,
      128
     ]
    },
    "range": {
     "line number": [
      172
     ]
    },
    "zip": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.MBAR_estimator.MBAR.estimate": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "pyemma.thermo.estimators.MBAR_estimator.MBAR": {
     "line number": [
      117
     ]
    },
    "super": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.MBAR_estimator.MBAR.pointwise_free_energies": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      187
     ]
    },
    "numpy.log": {
     "line number": [
      189
     ]
    },
    "numpy.zeros": {
     "line number": [
      187
     ]
    },
    "pyemma.thermo.extensions.mbar.get_pointwise_unbiased_free_energies": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.MBAR_estimator.ThermoBase": {
  "data": {
   "shadows": "pyemma.thermo.estimators._base.ThermoBase"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._ConvergenceProgressIndicatorCallBack": {
  "data": {
   "shadows": "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._MultiThermModel": {
  "data": {
   "shadows": "pyemma.thermo.MultiThermModel"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._StationaryModel": {
  "data": {
   "shadows": "pyemma.thermo.StationaryModel"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyemma.thermo.estimators.MBAR_estimator._mbar": {
  "data": {
   "shadows": "pyemma.thermo.extensions.mbar"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._mbar_direct": {
  "data": {
   "shadows": "pyemma.thermo.extensions.mbar_direct"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.MBAR_estimator._util": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.estimators.TRAM_estimator.EmptyState": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "pyemma._base.estimator.Estimator": {
     "line number": [
      49
     ]
    },
    "pyemma.thermo.MEMM": {
     "line number": [
      49
     ]
    },
    "pyemma.thermo.estimators._base.ThermoBase": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM.__getstate__": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "pyemma.thermo.estimators.TRAM_estimator.TRAM": {
     "line number": [
      521
     ]
    },
    "super": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM._estimate": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      276
     ]
    },
    "enumerate": {
     "line number": [
      439
     ]
    },
    "len": {
     "line number": [
      264,
      264,
      264,
      291,
      291,
      330
     ]
    },
    "max": {
     "line number": [
      272,
      278
     ]
    },
    "msmtools.estimation.largest_connected_set": {
     "line number": [
      434
     ]
    },
    "numpy.all": {
     "line number": [
      350,
      352,
      355,
      359,
      362
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      429,
      435
     ]
    },
    "numpy.bincount": {
     "line number": [
      353,
      356,
      360,
      363
     ]
    },
    "numpy.exp": {
     "line number": [
      442
     ]
    },
    "numpy.float64": {
     "line number": [
      287,
      315
     ]
    },
    "numpy.intc": {
     "line number": [
      285,
      286,
      346,
      382,
      417
     ]
    },
    "numpy.max": {
     "line number": [
      272,
      278
     ]
    },
    "numpy.maximum": {
     "line number": [
      350
     ]
    },
    "numpy.require": {
     "line number": [
      285,
      286,
      287
     ]
    },
    "numpy.sum": {
     "line number": [
      352,
      355,
      359,
      362
     ]
    },
    "numpy.zeros": {
     "line number": [
      315,
      346
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      317
     ]
    },
    "pyemma.thermo.estimators.TRAM_estimator.EmptyState": {
     "line number": [
      333,
      371
     ]
    },
    "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack": {
     "line number": [
      385,
      410,
      423
     ]
    },
    "pyemma.thermo.estimators._callback._IterationProgressIndicatorCallBack": {
     "line number": [
      325
     ]
    },
    "pyemma.thermo.extensions.cset.compute_csets_TRAM": {
     "line number": [
      320
     ]
    },
    "pyemma.thermo.extensions.cset.restrict_to_csets": {
     "line number": [
      336,
      342
     ]
    },
    "pyemma.thermo.extensions.mbar": {
     "line number": [
      375,
      377,
      377
     ]
    },
    "pyemma.thermo.extensions.mbar.estimate": {
     "line number": [
      381
     ]
    },
    "pyemma.thermo.extensions.mbar_direct": {
     "line number": [
      375
     ]
    },
    "pyemma.thermo.extensions.tram": {
     "line number": [
      392,
      395,
      395
     ]
    },
    "pyemma.thermo.extensions.tram.estimate": {
     "line number": [
      404
     ]
    },
    "pyemma.thermo.extensions.tram.estimate_transition_matrix": {
     "line number": [
      430
     ]
    },
    "pyemma.thermo.extensions.tram_direct": {
     "line number": [
      392
     ]
    },
    "pyemma.thermo.extensions.trammbar": {
     "line number": [
      393,
      396,
      396
     ]
    },
    "pyemma.thermo.extensions.trammbar.estimate": {
     "line number": [
      415
     ]
    },
    "pyemma.thermo.extensions.trammbar_direct": {
     "line number": [
      393
     ]
    },
    "pyemma.thermo.extensions.util.count_matrices": {
     "line number": [
      307
     ]
    },
    "pyemma.thermo.extensions.util.state_counts": {
     "line number": [
      306,
      312
     ]
    },
    "pyemma.thermo.models.memm.ThermoMSM": {
     "line number": [
      440
     ]
    },
    "pyemma.util.types.assert_array": {
     "line number": [
      266,
      268,
      270
     ]
    },
    "range": {
     "line number": [
      329,
      367,
      432
     ]
    },
    "warnings.warn": {
     "line number": [
      331,
      369
     ]
    },
    "zip": {
     "line number": [
      280,
      293,
      294,
      295,
      296,
      297,
      298,
      356,
      363,
      436,
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM.estimate": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "pyemma.thermo.estimators.TRAM_estimator.TRAM": {
     "line number": [
      259
     ]
    },
    "super": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM.log_likelihood": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "pyemma.thermo.extensions.tram.log_likelihood_lower_bound": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM.mbar_pointwise_free_energies": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      513,
      515
     ]
    },
    "numpy.log": {
     "line number": [
      515
     ]
    },
    "numpy.zeros": {
     "line number": [
      513
     ]
    },
    "pyemma.thermo.extensions.mbar.get_pointwise_unbiased_free_energies": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.TRAM_estimator.TRAM.pointwise_free_energies": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      489
     ]
    },
    "numpy.intc": {
     "line number": [
      504
     ]
    },
    "numpy.zeros": {
     "line number": [
      489
     ]
    },
    "pyemma.thermo.extensions.tram.get_pointwise_unbiased_free_energies": {
     "line number": [
      491
     ]
    },
    "pyemma.thermo.extensions.trammbar.get_pointwise_unbiased_free_energies": {
     "line number": [
      498
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.TRAM_estimator.ThermoBase": {
  "data": {
   "shadows": "pyemma.thermo.estimators._base.ThermoBase"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._ConvergenceProgressIndicatorCallBack": {
  "data": {
   "shadows": "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._IterationProgressIndicatorCallBack": {
  "data": {
   "shadows": "pyemma.thermo.estimators._callback._IterationProgressIndicatorCallBack"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._MEMM": {
  "data": {
   "shadows": "pyemma.thermo.MEMM"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._ThermoMSM": {
  "data": {
   "shadows": "pyemma.thermo.models.memm.ThermoMSM"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._cset": {
  "data": {
   "shadows": "pyemma.thermo.extensions.cset"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._largest_connected_set": {
  "data": {
   "shadows": "msmtools.estimation.largest_connected_set"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._mbar": {
  "data": {
   "shadows": "pyemma.thermo.extensions.mbar"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._mbar_direct": {
  "data": {
   "shadows": "pyemma.thermo.extensions.mbar_direct"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._tram": {
  "data": {
   "shadows": "pyemma.thermo.extensions.tram"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._tram_direct": {
  "data": {
   "shadows": "pyemma.thermo.extensions.tram_direct"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._trammbar": {
  "data": {
   "shadows": "pyemma.thermo.extensions.trammbar"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._trammbar_direct": {
  "data": {
   "shadows": "pyemma.thermo.extensions.trammbar_direct"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._util": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.TRAM_estimator._warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.estimators.WHAM_estimator.ThermoBase": {
  "data": {
   "shadows": "pyemma.thermo.estimators._base.ThermoBase"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator.WHAM": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "pyemma._base.estimator.Estimator": {
     "line number": [
      34
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      34
     ]
    },
    "pyemma.thermo.MultiThermModel": {
     "line number": [
      34
     ]
    },
    "pyemma.thermo.estimators._base.ThermoBase": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.estimators.WHAM_estimator.WHAM.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.WHAM_estimator.WHAM._estimate": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      143
     ]
    },
    "len": {
     "line number": [
      144
     ]
    },
    "list": {
     "line number": [
      143
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      159,
      161
     ]
    },
    "numpy.exp": {
     "line number": [
      179
     ]
    },
    "numpy.float64": {
     "line number": [
      162
     ]
    },
    "numpy.intc": {
     "line number": [
      160
     ]
    },
    "numpy.newaxis": {
     "line number": [
      179
     ]
    },
    "numpy.shape": {
     "line number": [
      151,
      151
     ]
    },
    "numpy.where": {
     "line number": [
      158
     ]
    },
    "pyemma._base.progress.ProgressReporter": {
     "line number": [
      165
     ]
    },
    "pyemma.thermo.StationaryModel": {
     "line number": [
      178
     ]
    },
    "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack": {
     "line number": [
      174
     ]
    },
    "pyemma.thermo.extensions.util.state_counts": {
     "line number": [
      154
     ]
    },
    "pyemma.thermo.extensions.wham.estimate": {
     "line number": [
      169
     ]
    },
    "pyemma.util.types.assert_array": {
     "line number": [
      149,
      150
     ]
    },
    "range": {
     "line number": [
      181
     ]
    },
    "tuple": {
     "line number": [
      143
     ]
    },
    "zip": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.WHAM_estimator.WHAM.estimate": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "pyemma.thermo.estimators.WHAM_estimator.WHAM": {
     "line number": [
      139
     ]
    },
    "super": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.WHAM_estimator.WHAM.log_likelihood": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      195
     ]
    },
    "numpy.intc": {
     "line number": [
      191,
      192
     ]
    },
    "numpy.zeros": {
     "line number": [
      195
     ]
    },
    "pyemma.thermo.extensions.wham.get_loglikelihood": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators.WHAM_estimator._ConvergenceProgressIndicatorCallBack": {
  "data": {
   "shadows": "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._Estimator": {
  "data": {
   "shadows": "pyemma._base.estimator.Estimator"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._MultiThermModel": {
  "data": {
   "shadows": "pyemma.thermo.MultiThermModel"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._ProgressReporter": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporter"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._StationaryModel": {
  "data": {
   "shadows": "pyemma.thermo.StationaryModel"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyemma.thermo.estimators.WHAM_estimator._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._util": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators.WHAM_estimator._wham": {
  "data": {
   "shadows": "pyemma.thermo.extensions.wham"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators._base": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.estimators._base.ThermoBase": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "object": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.estimators._base.ThermoBase.dt_traj": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "pyemma.util.units.TimeUnit": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._base.ThermoBase.force_constants": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._base.ThermoBase.temperatures": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._base.ThermoBase.umbrella_centers": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._base.TimeUnit": {
  "data": {
   "shadows": "pyemma.util.units.TimeUnit"
  },
  "type": "import"
 },
 "pyemma.thermo.estimators._base.Undefined": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": {
    "object": {
     "line number": [
      2
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.estimators._callback": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "pyemma.thermo.estimators._callback._ProgressIndicatorCallBack": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack.__call__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      55
     ]
    },
    "int": {
     "line number": [
      55
     ]
    },
    "pyemma.thermo.estimators._callback._ConvergenceProgressIndicatorCallBack": {
     "line number": [
      53
     ]
    },
    "str": {
     "line number": [
      51,
      52
     ]
    },
    "super": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._callback._IterationProgressIndicatorCallBack": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pyemma.thermo.estimators._callback._ProgressIndicatorCallBack": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.estimators._callback._IterationProgressIndicatorCallBack.__call__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._callback._IterationProgressIndicatorCallBack.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      38
     ]
    },
    "pyemma.thermo.estimators._callback._IterationProgressIndicatorCallBack": {
     "line number": [
      37
     ]
    },
    "super": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._callback._ProgressIndicatorCallBack": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "object": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.estimators._callback._ProgressIndicatorCallBack.__init__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._callback._ProgressIndicatorCallBack.waiting": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "pyemma.thermo.estimators._callback.time": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.estimators._callback.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyemma.thermo.extensions": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.extensions.callback": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.extensions.callback.CallbackInterrupt": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.extensions.callback.CallbackInterrupt.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "pyemma.thermo.extensions.callback.CallbackInterrupt.__str__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "pyemma.thermo.extensions.callback.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pyemma.thermo.extensions.callback.generic_callback_stop": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pyemma.thermo.extensions.callback.CallbackInterrupt": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.models.memm": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.models.memm.MEMM": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "pyemma.thermo.models.multi_therm.MultiThermModel": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.models.memm.MEMM.msm": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "property": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm.ThermoMSM": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "pyemma.msm.MSM": {
     "line number": [
      29
     ]
    },
    "pyemma.msm.util.subset.SubSet": {
     "line number": [
      29
     ]
    },
    "pyemma.msm.util.subset.add_full_state_methods": {
     "line number": [
      27
     ]
    },
    "pyemma.util.annotators.aliased": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.models.memm.ThermoMSM.__init__": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm.ThermoMSM.eigenvectors_left": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "numpy.inf": {
     "line number": [
      111
     ]
    },
    "pyemma.msm.util.subset.map_to_full_state": {
     "line number": [
      111
     ]
    },
    "pyemma.thermo.models.memm.ThermoMSM": {
     "line number": [
      114
     ]
    },
    "super": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm.ThermoMSM.eigenvectors_right": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "numpy.inf": {
     "line number": [
      106
     ]
    },
    "pyemma.msm.util.subset.map_to_full_state": {
     "line number": [
      106
     ]
    },
    "pyemma.thermo.models.memm.ThermoMSM": {
     "line number": [
      109
     ]
    },
    "super": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm.ThermoMSM.f": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "numpy.inf": {
     "line number": [
      100
     ]
    },
    "numpy.log": {
     "line number": [
      104
     ]
    },
    "property": {
     "line number": [
      99
     ]
    },
    "pyemma.msm.util.subset.map_to_full_state": {
     "line number": [
      100
     ]
    },
    "pyemma.util.annotators.alias": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm.ThermoMSM.models": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm.ThermoMSM.pi": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "pyemma.msm.MSM.pi.getter": {
     "line number": [
      92
     ]
    },
    "pyemma.msm.util.subset.map_to_full_state": {
     "line number": [
      93
     ]
    },
    "pyemma.thermo.models.memm.ThermoMSM": {
     "line number": [
      97
     ]
    },
    "pyemma.util.annotators.alias": {
     "line number": [
      94
     ]
    },
    "super": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm.ThermoMSM.set_model_params": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "pyemma.thermo.models.memm.ThermoMSM": {
     "line number": [
      87
     ]
    },
    "super": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models.memm._MSM": {
  "data": {
   "shadows": "pyemma.msm.MSM"
  },
  "type": "import"
 },
 "pyemma.thermo.models.memm._MultiThermModel": {
  "data": {
   "shadows": "pyemma.thermo.models.multi_therm.MultiThermModel"
  },
  "type": "import"
 },
 "pyemma.thermo.models.memm._SubSet": {
  "data": {
   "shadows": "pyemma.msm.util.subset.SubSet"
  },
  "type": "import"
 },
 "pyemma.thermo.models.memm._add_full_state_methods": {
  "data": {
   "shadows": "pyemma.msm.util.subset.add_full_state_methods"
  },
  "type": "import"
 },
 "pyemma.thermo.models.memm._alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.thermo.models.memm._aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.thermo.models.memm._map_to_full_state": {
  "data": {
   "shadows": "pyemma.msm.util.subset.map_to_full_state"
  },
  "type": "import"
 },
 "pyemma.thermo.models.memm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.models.multi_therm": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.models.multi_therm.MultiThermModel": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "pyemma.thermo.models.stationary.StationaryModel": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.models.multi_therm.MultiThermModel.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "pyemma.thermo.models.multi_therm.MultiThermModel.meval": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "pyemma._base.model.call_member": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models.multi_therm.MultiThermModel.set_model_params": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "float": {
     "line number": [
      78
     ]
    },
    "issubclass": {
     "line number": [
      80
     ]
    },
    "numpy.array": {
     "line number": [
      78
     ]
    },
    "pyemma._base.model.Model": {
     "line number": [
      80
     ]
    },
    "pyemma.thermo.models.stationary.StationaryModel.set_model_params": {
     "line number": [
      75
     ]
    },
    "pyemma.util.types.assert_array": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models.multi_therm.MultiThermModel.unbiased_state": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      70
     ]
    },
    "property": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models.multi_therm._Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.thermo.models.multi_therm._StationaryModel": {
  "data": {
   "shadows": "pyemma.thermo.models.stationary.StationaryModel"
  },
  "type": "import"
 },
 "pyemma.thermo.models.multi_therm.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.thermo.models.multi_therm._call_member": {
  "data": {
   "shadows": "pyemma._base.model.call_member"
  },
  "type": "import"
 },
 "pyemma.thermo.models.multi_therm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.models.multi_therm._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.models.stationary.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary.StationaryModel": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pyemma._base.model.Model": {
     "line number": [
      35
     ]
    },
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      35
     ]
    },
    "pyemma.msm.util.subset.SubSet": {
     "line number": [
      35
     ]
    },
    "pyemma.msm.util.subset.add_full_state_methods": {
     "line number": [
      33
     ]
    },
    "pyemma.util.annotators.aliased": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.thermo.models.stationary.StationaryModel.__eq__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      171
     ]
    },
    "numpy.array_equal": {
     "line number": [
      173,
      173
     ]
    },
    "pyemma.thermo.models.stationary.StationaryModel": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary.StationaryModel.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary.StationaryModel.expectation": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      168
     ]
    },
    "pyemma.util.types.ensure_ndarray": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary.StationaryModel.f": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary.StationaryModel.label": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary.StationaryModel.nstates": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "len": {
     "line number": [
      112
     ]
    },
    "property": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary.StationaryModel.pi": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "numpy.sum": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary.StationaryModel.set_model_params": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      99
     ]
    },
    "float": {
     "line number": [
      89,
      95
     ]
    },
    "numpy.array": {
     "line number": [
      89,
      95
     ]
    },
    "numpy.exp": {
     "line number": [
      92
     ]
    },
    "numpy.log": {
     "line number": [
      96
     ]
    },
    "pyemma.thermo.extensions.util.logsumexp": {
     "line number": [
      91,
      97
     ]
    },
    "pyemma.util.types.assert_array": {
     "line number": [
      88,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.models.stationary._Model": {
  "data": {
   "shadows": "pyemma._base.model.Model"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary._SubSet": {
  "data": {
   "shadows": "pyemma.msm.util.subset.SubSet"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary.__author__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyemma.thermo.models.stationary._add_full_state_methods": {
  "data": {
   "shadows": "pyemma.msm.util.subset.add_full_state_methods"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary._alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary._aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary._logsumexp": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util.logsumexp"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary._map_to_full_state": {
  "data": {
   "shadows": "pyemma.msm.util.subset.map_to_full_state"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.models.stationary._types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.thermo.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.util.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.thermo.util.util.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pyemma.thermo.util.util._ensure_force_constant": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      104,
      105,
      109,
      118,
      121
     ]
    },
    "enumerate": {
     "line number": [
      113
     ]
    },
    "numpy.asarray": {
     "line number": [
      103
     ]
    },
    "numpy.float64": {
     "line number": [
      103,
      107,
      112
     ]
    },
    "numpy.ones": {
     "line number": [
      107
     ]
    },
    "numpy.zeros": {
     "line number": [
      112
     ]
    },
    "str": {
     "line number": [
      105,
      109,
      118,
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.util.util._ensure_umbrella_center": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      92,
      93,
      97
     ]
    },
    "numpy.asarray": {
     "line number": [
      91
     ]
    },
    "numpy.float64": {
     "line number": [
      91,
      95
     ]
    },
    "numpy.ones": {
     "line number": [
      95
     ]
    },
    "str": {
     "line number": [
      93,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.util.util._get_multi_temperature_bias_sequences": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      307,
      308
     ]
    },
    "numpy.newaxis": {
     "line number": [
      318,
      319,
      325,
      326,
      340,
      340
     ]
    },
    "pyemma.thermo.util.util.boltzmann_constant_in_kcal_per_mol": {
     "line number": [
      334,
      335
     ]
    },
    "pyemma.thermo.util.util.conversion_factor_J_per_cal": {
     "line number": [
      337,
      338
     ]
    },
    "pyemma.thermo.util.util.conversion_shift_Celsius_to_Kelvin": {
     "line number": [
      332,
      333
     ]
    },
    "str": {
     "line number": [
      307,
      308
     ]
    },
    "zip": {
     "line number": [
      316,
      323,
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.util.util._get_multi_temperature_parameters": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      290
     ]
    },
    "numpy.float64": {
     "line number": [
      290
     ]
    },
    "numpy.intc": {
     "line number": [
      294
     ]
    },
    "numpy.unique": {
     "line number": [
      289,
      290
     ]
    },
    "numpy.zeros": {
     "line number": [
      294
     ]
    },
    "range": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.util.util._get_umbrella_bias": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util.get_umbrella_bias"
  },
  "type": "import"
 },
 "pyemma.thermo.util.util._get_umbrella_bias_sequences": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      192,
      194,
      211
     ]
    },
    "ValueError": {
     "line number": [
      196,
      199,
      202,
      206,
      215
     ]
    },
    "enumerate": {
     "line number": [
      209
     ]
    },
    "isinstance": {
     "line number": [
      191,
      193,
      210
     ]
    },
    "numpy.ndarray": {
     "line number": [
      191,
      193,
      210
     ]
    },
    "numpy.require": {
     "line number": [
      218,
      219,
      220,
      221
     ]
    },
    "pyemma.thermo.extensions.util.get_umbrella_bias": {
     "line number": [
      217
     ]
    },
    "str": {
     "line number": [
      192,
      194,
      197,
      200,
      211
     ]
    },
    "type": {
     "line number": [
      192,
      194,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.util.util._get_umbrella_sampling_parameters": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      136
     ]
    },
    "ValueError": {
     "line number": [
      142,
      182,
      184
     ]
    },
    "enumerate": {
     "line number": [
      132
     ]
    },
    "float": {
     "line number": [
      181
     ]
    },
    "int": {
     "line number": [
      181
     ]
    },
    "isinstance": {
     "line number": [
      163,
      181
     ]
    },
    "list": {
     "line number": [
      163
     ]
    },
    "numpy.all": {
     "line number": [
      148,
      151,
      152,
      168
     ]
    },
    "numpy.array": {
     "line number": [
      178,
      179
     ]
    },
    "numpy.float64": {
     "line number": [
      178,
      179
     ]
    },
    "numpy.intc": {
     "line number": [
      158,
      161,
      177
     ]
    },
    "numpy.ones": {
     "line number": [
      158,
      161,
      177
     ]
    },
    "pyemma.thermo.util.util._ensure_force_constant": {
     "line number": [
      146
     ]
    },
    "pyemma.thermo.util.util._ensure_umbrella_center": {
     "line number": [
      144
     ]
    },
    "range": {
     "line number": [
      150,
      167
     ]
    },
    "str": {
     "line number": [
      182
     ]
    },
    "tuple": {
     "line number": [
      163
     ]
    },
    "type": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.util.util._logsumexp": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util.logsumexp"
  },
  "type": "import"
 },
 "pyemma.thermo.util.util._logsumexp_pair": {
  "data": {
   "shadows": "pyemma.thermo.extensions.util.logsumexp_pair"
  },
  "type": "import"
 },
 "pyemma.thermo.util.util._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.thermo.util.util.assign_unbiased_state_label": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "len": {
     "line number": [
      415
     ]
    },
    "str": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.util.util.boltzmann_constant_in_kcal_per_mol": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "pyemma.thermo.util.util.conversion_factor_J_per_cal": {
  "data": {
   "lineno": 301
  },
  "type": "constant"
 },
 "pyemma.thermo.util.util.conversion_shift_Celsius_to_Kelvin": {
  "data": {
   "lineno": 302
  },
  "type": "constant"
 },
 "pyemma.thermo.util.util.get_averaged_bias_matrix": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      61
     ]
    },
    "int": {
     "line number": [
      57
     ]
    },
    "len": {
     "line number": [
      65
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      77
     ]
    },
    "numpy.float64": {
     "line number": [
      63
     ]
    },
    "numpy.inf": {
     "line number": [
      63
     ]
    },
    "numpy.intc": {
     "line number": [
      64
     ]
    },
    "numpy.log": {
     "line number": [
      80
     ]
    },
    "numpy.max": {
     "line number": [
      57
     ]
    },
    "numpy.newaxis": {
     "line number": [
      82
     ]
    },
    "numpy.ones": {
     "line number": [
      63
     ]
    },
    "numpy.zeros": {
     "line number": [
      64
     ]
    },
    "pyemma.thermo.extensions.util.logsumexp": {
     "line number": [
      76
     ]
    },
    "pyemma.thermo.extensions.util.logsumexp_pair": {
     "line number": [
      74
     ]
    },
    "range": {
     "line number": [
      65,
      66,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.util.util.get_multi_temperature_data": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      391
     ]
    },
    "float": {
     "line number": [
      382
     ]
    },
    "int": {
     "line number": [
      382
     ]
    },
    "isinstance": {
     "line number": [
      382
     ]
    },
    "numpy.where": {
     "line number": [
      388
     ]
    },
    "pyemma.thermo.util.util._get_multi_temperature_bias_sequences": {
     "line number": [
      385
     ]
    },
    "pyemma.thermo.util.util._get_multi_temperature_parameters": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.util.util.get_umbrella_sampling_data": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      277
     ]
    },
    "map": {
     "line number": [
      274
     ]
    },
    "numpy.asarray": {
     "line number": [
      273
     ]
    },
    "numpy.float64": {
     "line number": [
      271,
      275
     ]
    },
    "numpy.zeros": {
     "line number": [
      271
     ]
    },
    "pyemma.thermo.util.util._get_umbrella_bias_sequences": {
     "line number": [
      278
     ]
    },
    "pyemma.thermo.util.util._get_umbrella_sampling_parameters": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.thermo.util.util.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyemma.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "pyemma.util": {
  "data": {},
  "type": "module"
 },
 "pyemma.util._Config": {
  "data": {
   "shadows": "Config"
  },
  "type": "import"
 },
 "pyemma.util._config": {
  "data": {},
  "type": "module"
 },
 "pyemma.util._config.Config": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "object": {
     "line number": [
      62
     ]
    },
    "pyemma.util._config.os": {
     "line number": [
      64,
      64
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util._config.Config.__call__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "pyemma.util._config.Config": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.__copy_default_files_to_cfg_dir": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      393
     ]
    },
    "pyemma.util._config.os": {
     "line number": [
      391,
      392,
      401,
      401,
      403
     ]
    },
    "pyemma.util._config.shutil": {
     "line number": [
      404
     ]
    },
    "pyemma.util.exceptions.ConfigDirectoryException": {
     "line number": [
      394
     ]
    },
    "zip": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.__getitem__": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      89
     ]
    },
    "pyemma.util._config.os": {
     "line number": [
      78,
      80,
      82,
      82,
      82
     ]
    },
    "pyemma.util._config.warnings": {
     "line number": [
      90,
      97
     ]
    },
    "pyemma.util.log.LoggingConfigurationError": {
     "line number": [
      96
     ]
    },
    "pyemma.util.log.setup_logging": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.__read_cfg": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      412
     ]
    },
    "configparser.ConfigParser": {
     "line number": [
      408
     ]
    },
    "pyemma.util._config.ReadConfigException": {
     "line number": [
      414
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.__repr__": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "pyemma.util._config.Config.__setattr__": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      453
     ]
    },
    "pyemma.util._config.Config": {
     "line number": [
      454
     ]
    },
    "super": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.__setitem__": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "str": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config._cfgs_to_read": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": {
    "glob.glob": {
     "line number": [
      435
     ]
    },
    "pyemma.util._config.Config": {
     "line number": [
      424
     ]
    },
    "pyemma.util._config.os": {
     "line number": [
      428,
      428,
      428,
      435
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config._format_msg": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": {
    "pyemma.__version__": {
     "line number": [
      459
     ]
    },
    "staticmethod": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.cfg_dir": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      206
     ]
    },
    "NotADirectoryError": {
     "line number": [
      204
     ]
    },
    "print": {
     "line number": [
      220
     ]
    },
    "pyemma.util._config.os": {
     "line number": [
      201,
      209,
      211,
      211
     ]
    },
    "pyemma.util.exceptions.ConfigDirectoryException": {
     "line number": [
      205,
      207,
      210,
      212
     ]
    },
    "pyemma.util.files.mkdir_p": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.check_version": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "pyemma.util._config._invalidate_cache": {
     "line number": [
      369
     ]
    },
    "str": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.coordinates_check_output": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "pyemma.util._config.sys": {
     "line number": [
      349
     ]
    },
    "pyemma.util._config.warnings": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.default_chunksize": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "pyemma.util._config._invalidate_cache": {
     "line number": [
      380
     ]
    },
    "pyemma.util.units.string_to_bytes": {
     "line number": [
      384
     ]
    },
    "str": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.default_config_file": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "os.path.join": {
     "line number": [
      180
     ]
    },
    "property": {
     "line number": [
      175
     ]
    },
    "pyemma.util._config.Config": {
     "line number": [
      180
     ]
    },
    "pyemma.util._config.pyemma": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.default_logging_file": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "os.path.join": {
     "line number": [
      186
     ]
    },
    "property": {
     "line number": [
      181
     ]
    },
    "pyemma.util._config.Config": {
     "line number": [
      186
     ]
    },
    "pyemma.util._config.pyemma": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.keys": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "pyemma.util._config.Config.load": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "print": {
     "line number": [
      115,
      121
     ]
    },
    "pyemma.util._config.Config": {
     "line number": [
      115,
      121
     ]
    },
    "pyemma.util._config.ReadConfigException": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.logging_config": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "property": {
     "line number": [
      227
     ]
    },
    "pyemma.util._config.Config": {
     "line number": [
      232
     ]
    },
    "pyemma.util._config.os": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.mute": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      258
     ]
    },
    "pyemma.util._config._invalidate_cache": {
     "line number": [
      256
     ]
    },
    "pyemma.util._config.logging": {
     "line number": [
      262,
      263,
      268
     ]
    },
    "str": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.save": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      167
     ]
    },
    "open": {
     "line number": [
      165
     ]
    },
    "print": {
     "line number": [
      157,
      168
     ]
    },
    "pyemma.util._config.Config": {
     "line number": [
      157,
      168
     ]
    },
    "pyemma.util._config.os": {
     "line number": [
      142,
      147,
      152,
      152,
      152,
      162
     ]
    },
    "pyemma.util.exceptions.ConfigDirectoryException": {
     "line number": [
      155
     ]
    },
    "str": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.show_config_notification": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "pyemma.util._config._invalidate_cache": {
     "line number": [
      331
     ]
    },
    "str": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.show_progress_bars": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "pyemma.util._config._invalidate_cache": {
     "line number": [
      305
     ]
    },
    "str": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.traj_info_max_entries": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "pyemma.util._config._invalidate_cache": {
     "line number": [
      281
     ]
    },
    "str": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.traj_info_max_size": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "int": {
     "line number": [
      295
     ]
    },
    "pyemma.util._config._invalidate_cache": {
     "line number": [
      293
     ]
    },
    "str": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.use_trajectory_lengths_cache": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "pyemma.util._config._invalidate_cache": {
     "line number": [
      320
     ]
    },
    "str": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.Config.used_filenames": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "property": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.ConfigDirectoryException": {
  "data": {
   "shadows": "pyemma.util.exceptions.ConfigDirectoryException"
  },
  "type": "import"
 },
 "pyemma.util._config.ConfigParser": {
  "data": {
   "shadows": "configparser.ConfigParser"
  },
  "type": "import"
 },
 "pyemma.util._config.LoggingConfigurationError": {
  "data": {
   "shadows": "pyemma.util.log.LoggingConfigurationError"
  },
  "type": "import"
 },
 "pyemma.util._config.ReadConfigException": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util._config.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyemma.util._config.__version__": {
  "data": {
   "shadows": "pyemma.__version__"
  },
  "type": "import"
 },
 "pyemma.util._config._cached": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pyemma.util._config._cached.wrapper": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "cfg_getter": {
     "line number": [
      43,
      44,
      38
     ]
    },
    "functools.wraps": {
     "line number": [
      38
     ]
    },
    "id": {
     "line number": [
      41,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config._invalidate_cache": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pyemma.util._config._invalidate_cache.wrapper": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "cfg_setter": {
     "line number": [
      57,
      53
     ]
    },
    "functools.wraps": {
     "line number": [
      53
     ]
    },
    "id": {
     "line number": [
      55,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util._config.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "pyemma.util._config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.util._config.mkdir_p": {
  "data": {
   "shadows": "pyemma.util.files.mkdir_p"
  },
  "type": "import"
 },
 "pyemma.util._config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.util._config.p": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyemma.util._config.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.util._config.setup_logging": {
  "data": {
   "shadows": "pyemma.util.log.setup_logging"
  },
  "type": "import"
 },
 "pyemma.util._config.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.util._config.string_to_bytes": {
  "data": {
   "shadows": "pyemma.util.units.string_to_bytes"
  },
  "type": "import"
 },
 "pyemma.util._config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.util._config.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.util._config.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "pyemma.util.annotators": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.annotators.PyEMMA_DeprecationWarning": {
  "data": {
   "shadows": "pyemma.util.exceptions.PyEMMA_DeprecationWarning"
  },
  "type": "import"
 },
 "pyemma.util.annotators.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.util.annotators.alias": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "object": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.annotators.alias.__call__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      82
     ]
    },
    "property": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.annotators.alias.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "aliases": {
     "line number": [
      72
     ]
    },
    "set": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.annotators.aliased": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "aliases": {
     "line number": [
      122,
      124,
      126,
      128,
      131
     ]
    },
    "hasattr": {
     "line number": [
      123,
      125
     ]
    },
    "isinstance": {
     "line number": [
      123
     ]
    },
    "property": {
     "line number": [
      123
     ]
    },
    "pyemma.util.annotators.alias": {
     "line number": [
      131,
      132
     ]
    },
    "set": {
     "line number": [
      120
     ]
    },
    "setattr": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.annotators.decorate": {
  "data": {
   "shadows": "decorator.decorate"
  },
  "type": "import"
 },
 "pyemma.util.annotators.decorator": {
  "data": {
   "shadows": "decorator.decorator"
  },
  "type": "import"
 },
 "pyemma.util.annotators.deprecated": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      221
     ]
    },
    "decorator.decorate": {
     "line number": [
      224
     ]
    },
    "decorator.decorator": {
     "line number": [
      228
     ]
    },
    "len": {
     "line number": [
      221,
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.annotators.deprecated._deprecated": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "func": {
     "line number": [
      218
     ]
    },
    "pyemma.util.annotators.get_culprit": {
     "line number": [
      208
     ]
    },
    "pyemma.util.annotators.warnings": {
     "line number": [
      212
     ]
    },
    "pyemma.util.exceptions.PyEMMA_DeprecationWarning": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.annotators.fix_docs": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      41,
      42
     ]
    },
    "hasattr": {
     "line number": [
      49
     ]
    },
    "isinstance": {
     "line number": [
      43
     ]
    },
    "property": {
     "line number": [
      43,
      45
     ]
    },
    "pyemma.util.annotators.inspect": {
     "line number": [
      36
     ]
    },
    "setattr": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.annotators.get_culprit": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      190
     ]
    },
    "inspect.stack": {
     "line number": [
      178
     ]
    },
    "len": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.annotators.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pyemma.util.annotators.shortcut": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "pyemma.util.annotators.shortcut.wrap": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "pyemma.util.annotators.stack": {
  "data": {
   "shadows": "inspect.stack"
  },
  "type": "import"
 },
 "pyemma.util.annotators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.util.config": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pyemma.util.contexts": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.contexts.Capturing": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "list": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.contexts.Capturing.__enter__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      126
     ]
    },
    "io.StringIO": {
     "line number": [
      131
     ]
    },
    "pyemma.util.contexts.sys": {
     "line number": [
      126,
      127,
      132
     ]
    },
    "setattr": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.contexts.Capturing.__exit__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "pyemma.util.contexts.sys": {
     "line number": [
      138
     ]
    },
    "setattr": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.contexts.Capturing.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "pyemma.util.contexts.Capturing": {
     "line number": [
      122
     ]
    },
    "super": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.contexts.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "pyemma.util.contexts.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "pyemma.util.contexts.conditional": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "object": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.contexts.conditional.__enter__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "pyemma.util.contexts.conditional.__exit__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "pyemma.util.contexts.conditional.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.contexts.config": {
  "data": {
   "shadows": "pyemma.config"
  },
  "type": "import"
 },
 "pyemma.util.contexts.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyemma.util.contexts.named_temporary_file": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      98
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      87
     ]
    },
    "dir": {
     "line number": [
      90
     ]
    },
    "pyemma.util.contexts.os": {
     "line number": [
      97
     ]
    },
    "tempfile.NamedTemporaryFile": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.contexts.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.contexts.nullcontext": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "object": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.contexts.nullcontext.__enter__": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyemma.util.contexts.nullcontext.__exit__": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "pyemma.util.contexts.nullcontext.__init__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "pyemma.util.contexts.numpy_random_seed": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      31
     ]
    },
    "numpy.random.get_state": {
     "line number": [
      42
     ]
    },
    "numpy.random.seed": {
     "line number": [
      43
     ]
    },
    "numpy.random.set_state": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.contexts.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.util.contexts.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyemma.util.contexts.random_seed": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      50
     ]
    },
    "pyemma.util.contexts.random": {
     "line number": [
      61,
      62,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.contexts.settings": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "contextlib.contextmanager": {
     "line number": [
      69
     ]
    },
    "getattr": {
     "line number": [
      78
     ]
    },
    "pyemma.config": {
     "line number": [
      78,
      79,
      84
     ]
    },
    "setattr": {
     "line number": [
      79,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.contexts.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.util.debug": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.debug.SIGNAL_PDB": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyemma.util.debug.SIGNAL_STACKTRACE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.util.debug.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "pyemma.util.debug._handle_pdb": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "pyemma.util.debug.pdb": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.debug._logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyemma.util.debug._show_stacktrace": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "io.StringIO": {
     "line number": [
      47
     ]
    },
    "logging.getLogger": {
     "line number": [
      45
     ]
    },
    "pyemma.util.debug._logger": {
     "line number": [
      44,
      45,
      53
     ]
    },
    "pyemma.util.debug.traceback": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.debug.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "pyemma.util.debug.pdb": {
  "data": {
   "shadows": "pdb"
  },
  "type": "import"
 },
 "pyemma.util.debug.register_signal_handlers": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "pyemma.util.debug.SIGNAL_PDB": {
     "line number": [
      90
     ]
    },
    "pyemma.util.debug.SIGNAL_STACKTRACE": {
     "line number": [
      89
     ]
    },
    "pyemma.util.debug._handle_pdb": {
     "line number": [
      90
     ]
    },
    "pyemma.util.debug._show_stacktrace": {
     "line number": [
      89
     ]
    },
    "pyemma.util.debug.signal": {
     "line number": [
      89,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.debug.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "pyemma.util.debug.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "pyemma.util.debug.unregister_signal_handlers": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "pyemma.util.debug.SIGNAL_PDB": {
     "line number": [
      96
     ]
    },
    "pyemma.util.debug.SIGNAL_STACKTRACE": {
     "line number": [
      95
     ]
    },
    "pyemma.util.debug.signal": {
     "line number": [
      95,
      95,
      96,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.discrete_trajectories.__author__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.util.discrete_trajectories._apply_offsets_to_samples": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      338,
      349
     ]
    },
    "isinstance": {
     "line number": [
      333
     ]
    },
    "list": {
     "line number": [
      333
     ]
    },
    "pyemma.util.types.is_int_matrix": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories._ensure_dtraj_list": {
  "data": {
   "shadows": "pyemma.util.types.ensure_dtraj_list"
  },
  "type": "import"
 },
 "pyemma.util.discrete_trajectories.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma.util.discrete_trajectories.count_states": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      177
     ]
    },
    "int": {
     "line number": [
      175
     ]
    },
    "max": {
     "line number": [
      172
     ]
    },
    "numpy.bincount": {
     "line number": [
      171
     ]
    },
    "numpy.where": {
     "line number": [
      170
     ]
    },
    "numpy.zeros": {
     "line number": [
      175
     ]
    },
    "pyemma.util.annotators.shortcut": {
     "line number": [
      145
     ]
    },
    "pyemma.util.types.ensure_dtraj_list": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.index_states": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      382
     ]
    },
    "bool": {
     "line number": [
      386
     ]
    },
    "enumerate": {
     "line number": [
      395,
      398,
      399
     ]
    },
    "int": {
     "line number": [
      390,
      394,
      396
     ]
    },
    "len": {
     "line number": [
      391,
      393,
      394
     ]
    },
    "numpy.arange": {
     "line number": [
      379
     ]
    },
    "numpy.max": {
     "line number": [
      381
     ]
    },
    "numpy.ndarray": {
     "line number": [
      386,
      393
     ]
    },
    "numpy.zeros": {
     "line number": [
      390,
      394,
      396
     ]
    },
    "object": {
     "line number": [
      393
     ]
    },
    "pyemma.util.discrete_trajectories.count_states": {
     "line number": [
      384
     ]
    },
    "pyemma.util.discrete_trajectories.number_of_states": {
     "line number": [
      377
     ]
    },
    "pyemma.util.types.ensure_dtraj_list": {
     "line number": [
      375
     ]
    },
    "range": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.load_discrete_trajectory": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "numpy.load": {
     "line number": [
      113
     ]
    },
    "pyemma.util.annotators.shortcut": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.discrete_trajectories.number_of_states": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "max": {
     "line number": [
      220
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      215
     ]
    },
    "numpy.max": {
     "line number": [
      220
     ]
    },
    "pyemma.util.annotators.shortcut": {
     "line number": [
      199
     ]
    },
    "pyemma.util.discrete_trajectories.count_states": {
     "line number": [
      214
     ]
    },
    "pyemma.util.types.ensure_dtraj_list": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.read_discrete_trajectory": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "int": {
     "line number": [
      63
     ]
    },
    "numpy.fromstring": {
     "line number": [
      63
     ]
    },
    "open": {
     "line number": [
      61
     ]
    },
    "pyemma.util.annotators.shortcut": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "pyemma.util.discrete_trajectories.rewrite_dtrajs_to_core_sets": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      289,
      307
     ]
    },
    "isinstance": {
     "line number": [
      275
     ]
    },
    "len": {
     "line number": [
      281,
      287,
      297
     ]
    },
    "list": {
     "line number": [
      275,
      276
     ]
    },
    "map": {
     "line number": [
      276
     ]
    },
    "numpy.any": {
     "line number": [
      292
     ]
    },
    "numpy.concatenate": {
     "line number": [
      277
     ]
    },
    "numpy.in1d": {
     "line number": [
      291
     ]
    },
    "numpy.unique": {
     "line number": [
      277,
      279
     ]
    },
    "numpy.where": {
     "line number": [
      296,
      303
     ]
    },
    "pyemma.util.discrete_trajectories.copy": {
     "line number": [
      284
     ]
    },
    "pyemma.util.discrete_trajectories.warnings": {
     "line number": [
      300,
      302
     ]
    },
    "pyemma.util.types.ensure_dtraj_list": {
     "line number": [
      273
     ]
    },
    "pyemma.util.types.ensure_int_vector": {
     "line number": [
      276,
      279
     ]
    },
    "tuple": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.sample_indexes_by_distribution": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      523
     ]
    },
    "enumerate": {
     "line number": [
      527
     ]
    },
    "len": {
     "line number": [
      520,
      522,
      526
     ]
    },
    "numpy.ndarray": {
     "line number": [
      526
     ]
    },
    "numpy.random.choice": {
     "line number": [
      529
     ]
    },
    "object": {
     "line number": [
      526
     ]
    },
    "pyemma.util.discrete_trajectories.sample_indexes_by_sequence": {
     "line number": [
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.sample_indexes_by_sequence": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "int": {
     "line number": [
      436
     ]
    },
    "len": {
     "line number": [
      435
     ]
    },
    "numpy.random.randint": {
     "line number": [
      439
     ]
    },
    "numpy.zeros": {
     "line number": [
      436
     ]
    },
    "range": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.sample_indexes_by_state": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      479
     ]
    },
    "int": {
     "line number": [
      484
     ]
    },
    "len": {
     "line number": [
      472,
      478
     ]
    },
    "min": {
     "line number": [
      489
     ]
    },
    "numpy.arange": {
     "line number": [
      475
     ]
    },
    "numpy.ndarray": {
     "line number": [
      478
     ]
    },
    "numpy.random.choice": {
     "line number": [
      486,
      489
     ]
    },
    "numpy.zeros": {
     "line number": [
      484
     ]
    },
    "object": {
     "line number": [
      478
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.save_discrete_trajectory": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      136
     ]
    },
    "numpy.save": {
     "line number": [
      137
     ]
    },
    "pyemma.util.annotators.shortcut": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.shortcut": {
  "data": {
   "shadows": "pyemma.util.annotators.shortcut"
  },
  "type": "import"
 },
 "pyemma.util.discrete_trajectories.types": {
  "data": {
   "shadows": "pyemma.util.types"
  },
  "type": "import"
 },
 "pyemma.util.discrete_trajectories.visited_set": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "numpy.argwhere": {
     "line number": [
      196
     ]
    },
    "pyemma.util.discrete_trajectories.count_states": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.discrete_trajectories.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.util.discrete_trajectories.write_discrete_trajectory": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      85
     ]
    },
    "open": {
     "line number": [
      86
     ]
    },
    "pyemma.util.annotators.shortcut": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.exceptions": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.exceptions.ConfigDirectoryException": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.exceptions.EfficiencyWarning": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.exceptions.ImaginaryEigenValueWarning": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "pyemma.util.exceptions.SpectralWarning": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.exceptions.NotConvergedWarning": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.exceptions.ParserWarning": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.exceptions.PrecisionWarning": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.exceptions.PyEMMA_DeprecationWarning": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.exceptions.PyEMMA_UserWarning": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.exceptions.SpectralWarning": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.files": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.files.TemporaryDirectory": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "object": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.files.TemporaryDirectory.__enter__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "pyemma.util.files.tempfile": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.files.TemporaryDirectory.__exit__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "pyemma.util.files.shutil": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.files.TemporaryDirectory.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "dir": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.files.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "pyemma.util.files.mkdir_p": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      35
     ]
    },
    "pyemma.util.files.errno": {
     "line number": [
      36
     ]
    },
    "pyemma.util.files.os": {
     "line number": [
      34,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.files.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.util.files.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyemma.util.files.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.util.indices": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.indices._combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "pyemma.util.indices.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "pyemma.util.indices.comb": {
  "data": {
   "shadows": "scipy.special.comb"
  },
  "type": "import"
 },
 "pyemma.util.indices.combinations": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "int": {
     "line number": [
      50
     ]
    },
    "itertools.chain.from_iterable": {
     "line number": [
      49
     ]
    },
    "itertools.combinations": {
     "line number": [
      49
     ]
    },
    "len": {
     "line number": [
      48
     ]
    },
    "numpy.fromiter": {
     "line number": [
      49
     ]
    },
    "scipy.special.comb": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.indices.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.indices.product": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      78
     ]
    },
    "len": {
     "line number": [
      70,
      74
     ]
    },
    "numpy.asarray": {
     "line number": [
      69
     ]
    },
    "numpy.empty_like": {
     "line number": [
      76
     ]
    },
    "numpy.indices": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.linalg": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.linalg.__author__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyemma.util.linalg._sort_by_norm": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      106
     ]
    },
    "numpy.argsort": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.linalg.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma.util.linalg.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.util.linalg.mdot": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      42
     ]
    },
    "len": {
     "line number": [
      41,
      43,
      45
     ]
    },
    "numpy.dot": {
     "line number": [
      46,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.linalg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.linalg.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "pyemma.util.linalg.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "pyemma.util.linalg.submatrix": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "len": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.log": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.log.LoggingConfigurationError": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.log.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyemma.util.log.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "pyemma.util.log.dictConfig": {
  "data": {
   "shadows": "logging.config.dictConfig"
  },
  "type": "import"
 },
 "pyemma.util.log.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.util.log.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyemma.util.log.setup_logging": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      59,
      65
     ]
    },
    "ValueError": {
     "line number": [
      86
     ]
    },
    "dict": {
     "line number": [
      42,
      44
     ]
    },
    "distutils.version.LooseVersion": {
     "line number": [
      41,
      41
     ]
    },
    "getattr": {
     "line number": [
      100
     ]
    },
    "logging.config.dictConfig": {
     "line number": [
      85,
      96
     ]
    },
    "open": {
     "line number": [
      57,
      63
     ]
    },
    "print": {
     "line number": [
      89
     ]
    },
    "pyemma.util.log.LoggingConfigurationError": {
     "line number": [
      66,
      69,
      73
     ]
    },
    "pyemma.util.log.logging": {
     "line number": [
      99
     ]
    },
    "pyemma.util.log.warnings": {
     "line number": [
      91
     ]
    },
    "pyemma.util.log.yaml": {
     "line number": [
      41,
      42,
      58,
      64
     ]
    },
    "str": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.log.setup_logging.clean_empty_log_files": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      112
     ]
    },
    "print": {
     "line number": [
      113
     ]
    },
    "pyemma.util.log.atexit": {
     "line number": [
      103
     ]
    },
    "pyemma.util.log.logging": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.log.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.util.log.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "pyemma.util.metrics": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.metrics.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pyemma.util.metrics._svd_sym_koopman": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "numpy.linalg.svd": {
     "line number": [
      19
     ]
    },
    "pyemma._ext.variational.solvers.direct.spd_inv_sqrt": {
     "line number": [
      18,
      18,
      21,
      22
     ]
    },
    "pyemma.util.linalg.mdot": {
     "line number": [
      16,
      18,
      21,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.metrics.mdot": {
  "data": {
   "shadows": "pyemma.util.linalg.mdot"
  },
  "type": "import"
 },
 "pyemma.util.metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.metrics.spd_inv_sqrt": {
  "data": {
   "shadows": "pyemma._ext.variational.solvers.direct.spd_inv_sqrt"
  },
  "type": "import"
 },
 "pyemma.util.metrics.vamp_1_score": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "numpy.linalg.norm": {
     "line number": [
      90
     ]
    },
    "pyemma._ext.variational.solvers.direct.spd_inv_sqrt": {
     "line number": [
      85,
      87
     ]
    },
    "pyemma.util.linalg.mdot": {
     "line number": [
      85,
      86,
      87,
      90
     ]
    },
    "pyemma.util.metrics._svd_sym_koopman": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.metrics.vamp_2_score": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "numpy.linalg.norm": {
     "line number": [
      157
     ]
    },
    "pyemma._ext.variational.solvers.direct.spd_inv_sqrt": {
     "line number": [
      152,
      154
     ]
    },
    "pyemma.util.linalg.mdot": {
     "line number": [
      152,
      153,
      154,
      157
     ]
    },
    "pyemma.util.metrics._svd_sym_koopman": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.metrics.vamp_e_score": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "numpy.diag": {
     "line number": [
      216
     ]
    },
    "numpy.trace": {
     "line number": [
      218
     ]
    },
    "pyemma.util.linalg.mdot": {
     "line number": [
      218,
      218
     ]
    },
    "pyemma.util.metrics._svd_sym_koopman": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.metrics.vamp_score": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      230
     ]
    },
    "pyemma.util.metrics.vamp_1_score": {
     "line number": [
      224
     ]
    },
    "pyemma.util.metrics.vamp_2_score": {
     "line number": [
      226
     ]
    },
    "pyemma.util.metrics.vamp_e_score": {
     "line number": [
      228
     ]
    },
    "str": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.numeric": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.numeric.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyemma.util.numeric.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyemma.util.numeric._hash_numpy_array": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "hash": {
     "line number": [
      51
     ]
    },
    "pyemma.util.numeric.hashlib": {
     "line number": [
      43
     ]
    },
    "scipy.sparse.issparse": {
     "line number": [
      45
     ]
    },
    "str": {
     "line number": [
      48,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.numeric.assert_allclose": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.numeric.assert_allclose_np": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "pyemma.util.numeric.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pyemma.util.numeric.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pyemma.util.numeric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.reflection": {
  "data": {
   "symbols_in_volume": {
    "collections.namedtuple": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.util.reflection.ArgSpec": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyemma.util.reflection.__author__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyemma.util.reflection.call_member": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      110
     ]
    },
    "isinstance": {
     "line number": [
      105
     ]
    },
    "method": {
     "line number": [
      113,
      116
     ]
    },
    "pyemma.util.reflection.inspect": {
     "line number": [
      112
     ]
    },
    "str": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.reflection.get_default_args": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      124
     ]
    },
    "len": {
     "line number": [
      124
     ]
    },
    "pyemma.util.reflection.getargspec_no_self": {
     "line number": [
      123
     ]
    },
    "zip": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.reflection.getargspec_no_self": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "pyemma.util.reflection.ArgSpec": {
     "line number": [
      88
     ]
    },
    "pyemma.util.reflection.inspect": {
     "line number": [
      64,
      67,
      71,
      76,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.reflection.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pyemma.util.reflection.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyemma.util.statistics": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.statistics._column": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      122
     ]
    },
    "len": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.statistics._confidence_interval_1d": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      52
     ]
    },
    "int": {
     "line number": [
      74,
      75,
      82,
      83
     ]
    },
    "len": {
     "line number": [
      68,
      75,
      81,
      83
     ]
    },
    "max": {
     "line number": [
      74,
      82
     ]
    },
    "min": {
     "line number": [
      75,
      83
     ]
    },
    "numpy.any": {
     "line number": [
      53
     ]
    },
    "numpy.isclose": {
     "line number": [
      58
     ]
    },
    "numpy.isinf": {
     "line number": [
      68,
      68
     ]
    },
    "numpy.isnan": {
     "line number": [
      53
     ]
    },
    "numpy.max": {
     "line number": [
      56
     ]
    },
    "numpy.mean": {
     "line number": [
      63
     ]
    },
    "numpy.min": {
     "line number": [
      55
     ]
    },
    "numpy.nan": {
     "line number": [
      54,
      54,
      54
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      67
     ]
    },
    "numpy.sort": {
     "line number": [
      65
     ]
    },
    "pyemma.util.statistics.math": {
     "line number": [
      74,
      75,
      82,
      83
     ]
    },
    "pyemma.util.statistics.warnings": {
     "line number": [
      59
     ]
    },
    "str": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.statistics._indexes": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      106
     ]
    },
    "len": {
     "line number": [
      101
     ]
    },
    "list": {
     "line number": [
      101,
      103,
      104
     ]
    },
    "numpy.array": {
     "line number": [
      99
     ]
    },
    "pyemma.util.statistics.itertools": {
     "line number": [
      103
     ]
    },
    "range": {
     "line number": [
      101,
      103,
      104
     ]
    },
    "tuple": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.statistics._maxlength": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "len": {
     "line number": [
      180,
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.statistics.confidence_interval": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      148
     ]
    },
    "isinstance": {
     "line number": [
      154
     ]
    },
    "len": {
     "line number": [
      155,
      157
     ]
    },
    "list": {
     "line number": [
      155
     ]
    },
    "numpy.ndarray": {
     "line number": [
      154
     ]
    },
    "numpy.ndim": {
     "line number": [
      154,
      163
     ]
    },
    "numpy.zeros": {
     "line number": [
      156,
      168,
      169
     ]
    },
    "pyemma.util.statistics._column": {
     "line number": [
      171
     ]
    },
    "pyemma.util.statistics._confidence_interval_1d": {
     "line number": [
      164,
      172
     ]
    },
    "pyemma.util.statistics._indexes": {
     "line number": [
      167
     ]
    },
    "range": {
     "line number": [
      157
     ]
    },
    "str": {
     "line number": [
      148
     ]
    },
    "tuple": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.statistics.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyemma.util.statistics.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.util.statistics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.statistics.statistical_inefficiency": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "float": {
     "line number": [
      239,
      244,
      244
     ]
    },
    "len": {
     "line number": [
      236
     ]
    },
    "numpy.concatenate": {
     "line number": [
      225
     ]
    },
    "numpy.mean": {
     "line number": [
      226,
      229
     ]
    },
    "numpy.ndim": {
     "line number": [
      222
     ]
    },
    "numpy.sum": {
     "line number": [
      238
     ]
    },
    "pyemma.util.statistics._maxlength": {
     "line number": [
      223
     ]
    },
    "range": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.statistics.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.util.testing_tools": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.testing_tools.MockLoggingHandler": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "pyemma.util.testing_tools.logging": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.testing_tools.MockLoggingHandler.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "pyemma.util.testing_tools.logging": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.testing_tools.MockLoggingHandler.emit": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "pyemma.util.testing_tools.MockLoggingHandler.reset": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "pyemma.util.testing_tools.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.util.tests": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.tests.__author__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pyemma.util.tests.statistics_test": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      55
     ]
    },
    "pyemma.util.tests.statistics_test.unittest": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.util.tests.statistics_test.TestStatistics": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "pyemma.util.tests.statistics_test.unittest": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.tests.statistics_test.TestStatistics.assertConfidence": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "len": {
     "line number": [
      39,
      43
     ]
    },
    "pyemma.util.statistics.confidence_interval": {
     "line number": [
      36
     ]
    },
    "range": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.statistics_test.TestStatistics.test_confidence_interval": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "numpy.random.exponential": {
     "line number": [
      47,
      48,
      49
     ]
    },
    "numpy.random.normal": {
     "line number": [
      51,
      52,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.statistics_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.tests.statistics_test.statistics": {
  "data": {
   "shadows": "pyemma.util.statistics"
  },
  "type": "import"
 },
 "pyemma.util.tests.statistics_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      190
     ]
    },
    "pyemma.util.tests.test_config.unittest": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.util.tests.test_config.ConfigDirectoryException": {
  "data": {
   "shadows": "pyemma.util.exceptions.ConfigDirectoryException"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.ProgressReporterMixin": {
  "data": {
   "shadows": "pyemma._base.progress.ProgressReporterMixin"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.TemporaryDirectory": {
  "data": {
   "shadows": "pyemma.util.files.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.TestConfig": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pyemma.util.tests.test_config.unittest": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.tests.test_config.TestConfig.setUp": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyemma.util.tests.test_config.pyemma": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.tearDown": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      43
     ]
    },
    "pyemma.util.tests.test_config.os": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_can_not_create_cfg_dir": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "pyemma.util.exceptions.ConfigDirectoryException": {
     "line number": [
      64
     ]
    },
    "pyemma.util.tests.test_config.sys": {
     "line number": [
      62
     ]
    },
    "pyemma.util.tests.test_config.unittest": {
     "line number": [
      62
     ]
    },
    "str": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_config_vals_match_properties_in_wrapper": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      51
     ]
    },
    "pyemma.config": {
     "line number": [
      51
     ]
    },
    "pyemma.config.default_config_file": {
     "line number": [
      54
     ]
    },
    "pyemma.config.keys": {
     "line number": [
      59
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      47
     ]
    },
    "pyemma.util.tests.test_config.configparser": {
     "line number": [
      55
     ]
    },
    "pyemma.util.tests.test_config.os": {
     "line number": [
      52
     ]
    },
    "pyemma.util.tests.test_config.pkg_resources": {
     "line number": [
      53
     ]
    },
    "sorted": {
     "line number": [
      58,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_default_chunksize": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      185,
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_interpolation_from_multiple_files": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_keys": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_load": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      136
     ]
    },
    "pyemma.util.tests.test_config.os": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_mute_logging": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "pyemma.util.tests.test_config.logging": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_mute_progress": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "pyemma._base.progress.ProgressReporterMixin": {
     "line number": [
      175
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_non_writeable_cfg_dir": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "pyemma.util.exceptions.ConfigDirectoryException": {
     "line number": [
      75
     ]
    },
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      70
     ]
    },
    "pyemma.util.tests.test_config.os": {
     "line number": [
      72,
      73,
      73,
      68
     ]
    },
    "pyemma.util.tests.test_config.sys": {
     "line number": [
      68
     ]
    },
    "pyemma.util.tests.test_config.unittest": {
     "line number": [
      68
     ]
    },
    "str": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_save_load_no_cfg_file_given": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "pyemma.util.files.TemporaryDirectory": {
     "line number": [
      122
     ]
    },
    "pyemma.util.tests.test_config.configparser": {
     "line number": [
      130
     ]
    },
    "pyemma.util.tests.test_config.os": {
     "line number": [
      123,
      128
     ]
    },
    "pyemma.util.tests.test_config.pyemma": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_save_load_user_cfg_file": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "pyemma.util.tests.test_config.configparser": {
     "line number": [
      114
     ]
    },
    "pyemma.util.tests.test_config.tempfile": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_set": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_set_non_existing_key": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_shortcut3": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_shortcuts": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_shortcuts2": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_traj_info_max_entries": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "int": {
     "line number": [
      153
     ]
    },
    "isinstance": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.TestConfig.test_types": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      93
     ]
    },
    "isinstance": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_config.config_module": {
  "data": {
   "shadows": "pyemma.config"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.configparser": {
  "data": {
   "shadows": "configparser"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.pyemma": {
  "data": {
   "shadows": "pyemma"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_config.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_discrete_trajectories": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      35,
      309
     ]
    },
    "pyemma.util.tests.test_discrete_trajectories.os": {
     "line number": [
      35
     ]
    },
    "pyemma.util.tests.test_discrete_trajectories.pkg_resources": {
     "line number": [
      35
     ]
    },
    "pyemma.util.tests.test_discrete_trajectories.unittest": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestDiscreteTrajectoryStatistics": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "pyemma.util.tests.test_discrete_trajectories.unittest": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestDiscreteTrajectoryStatistics.test_count_1": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      98
     ]
    },
    "numpy.array": {
     "line number": [
      94,
      95
     ]
    },
    "pyemma.util.discrete_trajectories.count_states": {
     "line number": [
      98
     ]
    },
    "pyemma.util.discrete_trajectories.number_of_states": {
     "line number": [
      96,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestDiscreteTrajectoryStatistics.test_count_2": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      105
     ]
    },
    "numpy.array": {
     "line number": [
      101,
      102
     ]
    },
    "pyemma.util.discrete_trajectories.count_states": {
     "line number": [
      105
     ]
    },
    "pyemma.util.discrete_trajectories.number_of_states": {
     "line number": [
      103,
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestDiscreteTrajectoryStatistics.test_count_3": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      113
     ]
    },
    "numpy.array": {
     "line number": [
      108,
      109,
      110
     ]
    },
    "pyemma.util.discrete_trajectories.count_states": {
     "line number": [
      113
     ]
    },
    "pyemma.util.discrete_trajectories.number_of_states": {
     "line number": [
      111,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestDiscreteTrajectoryStatistics.test_count_big": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "pyemma.util.discrete_trajectories.count_states": {
     "line number": [
      119
     ]
    },
    "pyemma.util.discrete_trajectories.number_of_states": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestIndexStates": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "pyemma.util.tests.test_discrete_trajectories.unittest": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestIndexStates.test_big": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "pyemma.util.discrete_trajectories.index_states": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestIndexStates.test_onetraj": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "len": {
     "line number": [
      135,
      135,
      136
     ]
    },
    "numpy.alltrue": {
     "line number": [
      138
     ]
    },
    "numpy.array": {
     "line number": [
      134,
      134,
      134,
      134
     ]
    },
    "pyemma.util.discrete_trajectories.index_states": {
     "line number": [
      133
     ]
    },
    "range": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestIndexStates.test_onetraj_sub": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "len": {
     "line number": [
      145,
      145,
      146
     ]
    },
    "numpy.alltrue": {
     "line number": [
      148
     ]
    },
    "numpy.array": {
     "line number": [
      144,
      144
     ]
    },
    "pyemma.util.discrete_trajectories.index_states": {
     "line number": [
      143
     ]
    },
    "range": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestIndexStates.test_subset_error": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      127
     ]
    },
    "pyemma.util.discrete_trajectories.index_states": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestIndexStates.test_twotraj": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "len": {
     "line number": [
      155,
      155,
      156
     ]
    },
    "numpy.alltrue": {
     "line number": [
      158
     ]
    },
    "numpy.array": {
     "line number": [
      154,
      154,
      154,
      154,
      154,
      154
     ]
    },
    "pyemma.util.discrete_trajectories.index_states": {
     "line number": [
      153
     ]
    },
    "range": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestLoadDiscreteTrajectory": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "pyemma.util.tests.test_discrete_trajectories.unittest": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestLoadDiscreteTrajectory.setUp": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "pyemma.util.tests.test_discrete_trajectories.testpath": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestLoadDiscreteTrajectory.tearDown": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestLoadDiscreteTrajectory.test_load_discrete_trajectory": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      75
     ]
    },
    "numpy.load": {
     "line number": [
      73
     ]
    },
    "pyemma.util.discrete_trajectories.load_discrete_trajectory": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestMilestoneCounting": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "pyemma.util.tests.test_discrete_trajectories.unittest": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestMilestoneCounting.test_core_sets": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      203
     ]
    },
    "numpy.array": {
     "line number": [
      201,
      202
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      207
     ]
    },
    "pyemma.util.discrete_trajectories.rewrite_dtrajs_to_core_sets": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestMilestoneCounting.test_core_sets_10": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      266
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      271
     ]
    },
    "pyemma.util.discrete_trajectories.rewrite_dtrajs_to_core_sets": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestMilestoneCounting.test_core_sets_11": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      274
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      279
     ]
    },
    "pyemma.util.discrete_trajectories.rewrite_dtrajs_to_core_sets": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestMilestoneCounting.test_core_sets_2": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      212
     ]
    },
    "numpy.array": {
     "line number": [
      210,
      211
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      215
     ]
    },
    "pyemma.util.discrete_trajectories.rewrite_dtrajs_to_core_sets": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestMilestoneCounting.test_core_sets_3": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      220
     ]
    },
    "numpy.array": {
     "line number": [
      218,
      219
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      223
     ]
    },
    "pyemma.util.discrete_trajectories.rewrite_dtrajs_to_core_sets": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestMilestoneCounting.test_core_sets_4": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      226,
      227
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      231
     ]
    },
    "pyemma.util.discrete_trajectories.rewrite_dtrajs_to_core_sets": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestMilestoneCounting.test_core_sets_5": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      234,
      235
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      239
     ]
    },
    "pyemma.util.discrete_trajectories.rewrite_dtrajs_to_core_sets": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestMilestoneCounting.test_core_sets_6": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      286,
      289
     ]
    },
    "all": {
     "line number": [
      289
     ]
    },
    "issubclass": {
     "line number": [
      289
     ]
    },
    "len": {
     "line number": [
      288
     ]
    },
    "numpy.array": {
     "line number": [
      282,
      282
     ]
    },
    "pyemma.util.discrete_trajectories.rewrite_dtrajs_to_core_sets": {
     "line number": [
      287
     ]
    },
    "pyemma.util.tests.test_discrete_trajectories.warnings": {
     "line number": [
      285,
      286
     ]
    },
    "str": {
     "line number": [
      290,
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestMilestoneCounting.test_core_sets_7": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      242,
      243
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      247
     ]
    },
    "pyemma.util.discrete_trajectories.rewrite_dtrajs_to_core_sets": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestMilestoneCounting.test_core_sets_8": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      250,
      251
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      255
     ]
    },
    "pyemma.util.discrete_trajectories.rewrite_dtrajs_to_core_sets": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestMilestoneCounting.test_core_sets_9": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      258,
      259
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      263
     ]
    },
    "pyemma.util.discrete_trajectories.rewrite_dtrajs_to_core_sets": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestMilestoneCounting.test_reshift_indices_by_offset_1": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      294,
      299
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      300
     ]
    },
    "pyemma.util.discrete_trajectories._apply_offsets_to_samples": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestMilestoneCounting.test_reshift_indices_by_offset_2": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      303,
      306
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      307
     ]
    },
    "pyemma.util.discrete_trajectories._apply_offsets_to_samples": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestReadDiscreteTrajectory": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "pyemma.util.tests.test_discrete_trajectories.unittest": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestReadDiscreteTrajectory.setUp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "pyemma.util.tests.test_discrete_trajectories.testpath": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestReadDiscreteTrajectory.tearDown": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestReadDiscreteTrajectory.test_read_discrete_trajectory": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "int": {
     "line number": [
      47
     ]
    },
    "numpy.all": {
     "line number": [
      49
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      47
     ]
    },
    "pyemma.util.discrete_trajectories.read_discrete_trajectory": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSampleIndexes": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "pyemma.util.tests.test_discrete_trajectories.unittest": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSampleIndexes.test_sample_by_sequence": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "len": {
     "line number": [
      174
     ]
    },
    "numpy.alltrue": {
     "line number": [
      174
     ]
    },
    "pyemma.util.discrete_trajectories.index_states": {
     "line number": [
      171
     ]
    },
    "pyemma.util.discrete_trajectories.sample_indexes_by_sequence": {
     "line number": [
      173
     ]
    },
    "range": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSampleIndexes.test_sample_by_state_replace": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "pyemma.util.discrete_trajectories.index_states": {
     "line number": [
      181
     ]
    },
    "pyemma.util.discrete_trajectories.sample_indexes_by_state": {
     "line number": [
      182
     ]
    },
    "range": {
     "line number": [
      183,
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSampleIndexes.test_sample_by_state_replace_subset": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "len": {
     "line number": [
      193
     ]
    },
    "pyemma.util.discrete_trajectories.index_states": {
     "line number": [
      190
     ]
    },
    "pyemma.util.discrete_trajectories.sample_indexes_by_state": {
     "line number": [
      192
     ]
    },
    "range": {
     "line number": [
      193,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSaveDiscreteTrajectory": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "pyemma.util.tests.test_discrete_trajectories.unittest": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSaveDiscreteTrajectory.setUp": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      81
     ]
    },
    "pyemma.util.tests.test_discrete_trajectories.testpath": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSaveDiscreteTrajectory.tearDown": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "pyemma.util.tests.test_discrete_trajectories.os": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestSaveDiscreteTrajectory.test_save_discrete_trajectory": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      89
     ]
    },
    "numpy.load": {
     "line number": [
      88
     ]
    },
    "pyemma.util.discrete_trajectories.save_discrete_trajectory": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestWriteDiscreteTrajectory": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "pyemma.util.tests.test_discrete_trajectories.unittest": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestWriteDiscreteTrajectory.setUp": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      54
     ]
    },
    "pyemma.util.tests.test_discrete_trajectories.testpath": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestWriteDiscreteTrajectory.tearDown": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "pyemma.util.tests.test_discrete_trajectories.os": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.TestWriteDiscreteTrajectory.test_write_discrete_trajectory": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "numpy.all": {
     "line number": [
      62
     ]
    },
    "numpy.loadtxt": {
     "line number": [
      61
     ]
    },
    "pyemma.util.discrete_trajectories.write_discrete_trajectory": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_discrete_trajectories.dt": {
  "data": {
   "shadows": "pyemma.util.discrete_trajectories"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_discrete_trajectories.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_discrete_trajectories.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_discrete_trajectories.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_discrete_trajectories.pyemma.datasets": {
  "data": {
   "shadows": "pyemma.datasets"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_discrete_trajectories.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_discrete_trajectories.testpath": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyemma.util.tests.test_discrete_trajectories.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_discrete_trajectories.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      89
     ]
    },
    "pyemma.util.tests.test_log.unittest": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "module"
 },
 "pyemma.util.tests.test_log.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.TestNonWriteableLogFile": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "pyemma.util.tests.test_log.unittest": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.tests.test_log.TestNonWriteableLogFile.tearDown": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pyemma.util.config": {
     "line number": [
      37
     ]
    },
    "pyemma.util.log.setup_logging": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_log.TestNonWriteableLogFile.test": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "open": {
     "line number": [
      62
     ]
    },
    "pyemma.util.config": {
     "line number": [
      64
     ]
    },
    "pyemma.util.config.cfg_dir": {
     "line number": [
      65
     ]
    },
    "pyemma.util.log.setup_logging": {
     "line number": [
      64
     ]
    },
    "pyemma.util.tests.test_log.logging": {
     "line number": [
      65
     ]
    },
    "pyemma.util.tests.test_log.sys": {
     "line number": [
      39
     ]
    },
    "pyemma.util.tests.test_log.unittest": {
     "line number": [
      39
     ]
    },
    "tempfile.NamedTemporaryFile": {
     "line number": [
      58
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_log.TestNonWriteableLogFile.test_set_new_log_conf": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "open": {
     "line number": [
      84
     ]
    },
    "pyemma.config.logging_config": {
     "line number": [
      76
     ]
    },
    "pyemma.util.tests.test_log.copy": {
     "line number": [
      70
     ]
    },
    "pyemma.util.tests.test_log.logging": {
     "line number": [
      70,
      78
     ]
    },
    "pyemma.util.tests.test_log.tempfile": {
     "line number": [
      71
     ]
    },
    "pyemma.util.tests.test_log.unittest": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_log.config": {
  "data": {
   "shadows": "pyemma.config"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.log": {
  "data": {
   "shadows": "pyemma.util.log"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_log.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_shortcut": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.tests.test_shortcut.Foo": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "object": {
     "line number": [
      30
     ]
    },
    "pyemma.util.annotators.aliased": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.tests.test_shortcut.Foo.bar": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "pyemma.util.annotators.alias": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_shortcut.TestShortcut_and_Aliases": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "pyemma.util.tests.test_shortcut.unittest": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.tests.test_shortcut.TestShortcut_and_Aliases.test_alias_class": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      48,
      49
     ]
    },
    "pyemma.util.tests.test_shortcut.Foo": {
     "line number": [
      48,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_shortcut.TestShortcut_and_Aliases.test_alias_class_inst": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      53,
      54
     ]
    },
    "pyemma.util.tests.test_shortcut.Foo": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_shortcut.TestShortcut_and_Aliases.test_shortcut": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "bar": {
     "line number": [
      40
     ]
    },
    "bar2": {
     "line number": [
      44
     ]
    },
    "pyemma.util.tests.test_shortcut.foo": {
     "line number": [
      39,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_shortcut.alias": {
  "data": {
   "shadows": "pyemma.util.annotators.alias"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_shortcut.aliased": {
  "data": {
   "shadows": "pyemma.util.annotators.aliased"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_shortcut.foo": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "pyemma.util.annotators.shortcut": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_shortcut.shortcut": {
  "data": {
   "shadows": "pyemma.util.annotators.shortcut"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_shortcut.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_units": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.tests.test_units.TestUnits": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "pyemma.util.tests.test_units.unittest": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.tests.test_units.TestUnits.test_human_readable_byte_size": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "pyemma.util.units.bytes_to_string": {
     "line number": [
      8,
      9,
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.tests.test_units.bytes_to_string": {
  "data": {
   "shadows": "pyemma.util.units.bytes_to_string"
  },
  "type": "import"
 },
 "pyemma.util.tests.test_units.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyemma.util.units": {
  "data": {},
  "type": "module"
 },
 "pyemma.util.units.SerializableMixIn": {
  "data": {
   "shadows": "pyemma._base.serialization.serialization.SerializableMixIn"
  },
  "type": "import"
 },
 "pyemma.util.units.TimeUnit": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "pyemma._base.serialization.serialization.SerializableMixIn": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "pyemma.util.units.TimeUnit.__eq__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      106
     ]
    },
    "pyemma.util.units.TimeUnit": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.units.TimeUnit.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      72,
      89,
      91
     ]
    },
    "float": {
     "line number": [
      69
     ]
    },
    "isinstance": {
     "line number": [
      58,
      61
     ]
    },
    "len": {
     "line number": [
      65,
      68
     ]
    },
    "pyemma.util.units.TimeUnit": {
     "line number": [
      58
     ]
    },
    "str": {
     "line number": [
      61,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.units.TimeUnit.__repr__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pyemma.util.units.TimeUnit.__str__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      94
     ]
    },
    "str": {
     "line number": [
      98,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.units.TimeUnit.dt": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "property": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.units.TimeUnit.get_scaled": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "pyemma.util.units.TimeUnit": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.units.TimeUnit.rescale_around1": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "numpy.mean": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.units.TimeUnit.unit": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "property": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.units.__author__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyemma.util.units.bytes_to_string": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      168
     ]
    },
    "float": {
     "line number": [
      168
     ]
    },
    "int": {
     "line number": [
      169
     ]
    },
    "numpy.sign": {
     "line number": [
      170
     ]
    },
    "pyemma.util.units.math": {
     "line number": [
      169,
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.util.units.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyemma.util.units.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyemma.util.units.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyemma.util.units.string_to_bytes": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      197,
      199
     ]
    },
    "float": {
     "line number": [
      200
     ]
    },
    "int": {
     "line number": [
      202,
      207
     ]
    },
    "pyemma.util.units.re": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "pyemma.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "pyemma.version": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyemma.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}