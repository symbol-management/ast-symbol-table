{
 "typeguard": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "hasattr",
    "list",
    "set",
    "tuple",
    "type",
    "typeguard.asyncgen_origin_types",
    "typeguard.check_callable",
    "typeguard.check_class",
    "typeguard.check_dict",
    "typeguard.check_list",
    "typeguard.check_literal",
    "typeguard.check_sequence",
    "typeguard.check_set",
    "typeguard.check_tuple",
    "typeguard.check_union",
    "typeguard.origin_type_checkers",
    "typing.Any",
    "typing.AsyncGenerator",
    "typing.AsyncIterable",
    "typing.AsyncIterator",
    "typing.Callable",
    "typing.Dict",
    "typing.Generator",
    "typing.Iterable",
    "typing.Iterator",
    "typing.List",
    "typing.Literal",
    "typing.Sequence",
    "typing.Set",
    "typing.Tuple",
    "typing.Type",
    "typing.TypeVar",
    "typing.Union",
    "weakref.WeakKeyDictionary",
    "weakref.WeakValueDictionary"
   ]
  },
  "type": "module"
 },
 "typeguard.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "typeguard.AsyncGenerator": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "typeguard.AsyncIterable": {
  "data": {
   "shadows": "typing.AsyncIterable"
  },
  "type": "import"
 },
 "typeguard.AsyncIterator": {
  "data": {
   "shadows": "typing.AsyncIterator"
  },
  "type": "import"
 },
 "typeguard.BinaryIO": {
  "data": {
   "shadows": "typing.BinaryIO"
  },
  "type": "import"
 },
 "typeguard.BufferedIOBase": {
  "data": {
   "shadows": "io.BufferedIOBase"
  },
  "type": "import"
 },
 "typeguard.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "typeguard.CodeType": {
  "data": {
   "shadows": "types.CodeType"
  },
  "type": "import"
 },
 "typeguard.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "typeguard.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "typeguard.ForwardRefPolicy": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "typeguard.FunctionType": {
  "data": {
   "shadows": "types.FunctionType"
  },
  "type": "import"
 },
 "typeguard.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "typeguard.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "typeguard.IOBase": {
  "data": {
   "shadows": "io.IOBase"
  },
  "type": "import"
 },
 "typeguard.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "typeguard.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "typeguard.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "typeguard.Literal": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "typeguard.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "typeguard.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "typeguard.Parameter": {
  "data": {
   "shadows": "inspect.Parameter"
  },
  "type": "import"
 },
 "typeguard.RawIOBase": {
  "data": {
   "shadows": "io.RawIOBase"
  },
  "type": "import"
 },
 "typeguard.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "typeguard.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "typeguard.T_CallableOrType": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "typeguard.TextIO": {
  "data": {
   "shadows": "typing.TextIO"
  },
  "type": "import"
 },
 "typeguard.TextIOBase": {
  "data": {
   "shadows": "io.TextIOBase"
  },
  "type": "import"
 },
 "typeguard.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "typeguard.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "typeguard.TypeCheckedAsyncGenerator": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "typeguard.check_type"
   ]
  },
  "type": "class"
 },
 "typeguard.TypeCheckedAsyncGenerator.__anext__": {
  "data": {
   "lineno": 655
  },
  "type": "function"
 },
 "typeguard.TypeCheckedAsyncGenerator.__getattr__": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "getattr",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "typeguard.TypeCheckedAsyncGenerator.__init__": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "len",
    "typeguard._CallMemo",
    "typing.Any",
    "typing.AsyncGenerator"
   ]
  },
  "type": "function"
 },
 "typeguard.TypeCheckedGenerator": {
  "data": {
   "lineno": 608
  },
  "type": "class"
 },
 "typeguard.TypeCheckedGenerator.__getattr__": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "getattr",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "typeguard.TypeCheckedGenerator.__init__": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "len",
    "typeguard._CallMemo",
    "typing.Any",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "typeguard.TypeCheckedGenerator.__iter__": {
  "data": {
   "lineno": 618
  },
  "type": "function"
 },
 "typeguard.TypeCheckedGenerator.__next__": {
  "data": {
   "lineno": 621
  },
  "type": "function"
 },
 "typeguard.TypeCheckedGenerator.send": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "StopIteration",
    "typeguard.check_type"
   ]
  },
  "type": "function"
 },
 "typeguard.TypeChecker": {
  "data": {
   "lineno": 801
  },
  "type": "class"
 },
 "typeguard.TypeChecker.__call__": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "func",
    "getattr",
    "str",
    "typeguard.TypeWarning",
    "typeguard._CallMemo",
    "typeguard.check_argument_types",
    "typeguard.check_return_type",
    "typeguard.check_type",
    "typeguard.find_function",
    "typeguard.generator_origin_types",
    "typeguard.sys",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "typeguard.TypeChecker.__enter__": {
  "data": {
   "lineno": 875
  },
  "type": "function"
 },
 "typeguard.TypeChecker.__exit__": {
  "data": {
   "lineno": 879
  },
  "type": "function"
 },
 "typeguard.TypeChecker.__init__": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "str",
    "tuple",
    "typeguard.ForwardRefPolicy",
    "typeguard.check_argument_types",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "typeguard.TypeChecker.active": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "typeguard.TypeChecker.should_check_type": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "any",
    "bool",
    "func",
    "func.__annotations__",
    "func.__module__",
    "func.__module__.startswith",
    "inspect.isasyncgenfunction",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "typeguard.TypeChecker.start": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "RuntimeError",
    "typeguard.sys",
    "typeguard.threading"
   ]
  },
  "type": "function"
 },
 "typeguard.TypeChecker.stop": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "typeguard.sys",
    "typeguard.threading",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "typeguard.TypeHintWarning": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "typeguard.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "typeguard.TypeWarning": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "typeguard.TypeWarning.__init__": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "TypeError",
    "str",
    "super",
    "typeguard._CallMemo",
    "typeguard.function_name",
    "typeguard.threading",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "typeguard.TypeWarning.print_stack": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "int",
    "traceback.print_stack",
    "typing.TextIO"
   ]
  },
  "type": "function"
 },
 "typeguard.TypeWarning.stack": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "property",
    "traceback.extract_stack"
   ]
  },
  "type": "function"
 },
 "typeguard.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "typeguard.WeakKeyDictionary": {
  "data": {
   "shadows": "weakref.WeakKeyDictionary"
  },
  "type": "import"
 },
 "typeguard.WeakValueDictionary": {
  "data": {
   "shadows": "weakref.WeakValueDictionary"
  },
  "type": "import"
 },
 "typeguard._CallMemo": {
  "data": {
   "lineno": 66
  },
  "type": "class"
 },
 "typeguard._CallMemo.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "NameError",
    "collections.OrderedDict",
    "function_name",
    "inspect.Parameter.VAR_KEYWORD",
    "inspect.Parameter.VAR_POSITIONAL",
    "inspect.isgeneratorfunction",
    "str",
    "tuple",
    "typeguard.ForwardRefPolicy",
    "typeguard.TypeHintWarning",
    "typeguard._type_hints_map",
    "typeguard.inspect",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple",
    "typing.get_type_hints",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "typeguard.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "typeguard._functions_map": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "typeguard._subclass_check_unions": {
  "data": {
   "lineno": 462
  },
  "type": "constant"
 },
 "typeguard._type_hints_map": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "typeguard.asyncgen_origin_types": {
  "data": {
   "lineno": 471
  },
  "type": "constant"
 },
 "typeguard.check_argument_types": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "LookupError",
    "TypeError",
    "bool",
    "typeguard._CallMemo",
    "typeguard.check_type",
    "typeguard.find_function",
    "typeguard.sys",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typeguard.check_callable": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "Ellipsis",
    "TypeError",
    "ValueError",
    "any",
    "callable",
    "hasattr",
    "inspect.Parameter.KEYWORD_ONLY",
    "inspect.Parameter.POSITIONAL_ONLY",
    "inspect.Parameter.POSITIONAL_OR_KEYWORD",
    "inspect.Parameter.VAR_POSITIONAL",
    "inspect.Parameter.empty",
    "len",
    "str",
    "typeguard._CallMemo",
    "typeguard.inspect",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typeguard.check_class": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "TypeError",
    "check_typevar",
    "inspect.isclass",
    "isinstance",
    "issubclass",
    "str",
    "typeguard._CallMemo",
    "typeguard.qualified_name",
    "typing.Any",
    "typing.Optional",
    "typing.Type",
    "typing.TypeVar"
   ]
  },
  "type": "function"
 },
 "typeguard.check_dict": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "TypeError",
    "check_type",
    "dict",
    "getattr",
    "isinstance",
    "str",
    "typeguard._CallMemo",
    "typeguard.qualified_name",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typeguard.check_io": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "TypeError",
    "io.BufferedIOBase",
    "io.IOBase",
    "io.RawIOBase",
    "io.TextIOBase",
    "isinstance",
    "str",
    "typeguard.qualified_name",
    "typing.BinaryIO",
    "typing.TextIO"
   ]
  },
  "type": "function"
 },
 "typeguard.check_list": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "TypeError",
    "check_type",
    "enumerate",
    "getattr",
    "isinstance",
    "list",
    "str",
    "typeguard._CallMemo",
    "typeguard.qualified_name",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typeguard.check_literal": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "TypeError",
    "str",
    "typeguard._CallMemo",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typeguard.check_number": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "TypeError",
    "complex",
    "float",
    "int",
    "isinstance",
    "str",
    "typeguard.qualified_name"
   ]
  },
  "type": "function"
 },
 "typeguard.check_return_type": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "LookupError",
    "TypeError",
    "bool",
    "typeguard._CallMemo",
    "typeguard.check_type",
    "typeguard.find_function",
    "typeguard.sys",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typeguard.check_sequence": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "TypeError",
    "check_type",
    "enumerate",
    "getattr",
    "isinstance",
    "str",
    "typeguard._CallMemo",
    "typeguard.qualified_name",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typeguard.check_set": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "TypeError",
    "check_type",
    "getattr",
    "isinstance",
    "str",
    "typeguard._CallMemo",
    "typeguard.qualified_name",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typeguard.check_tuple": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "Ellipsis",
    "TypeError",
    "check_type",
    "enumerate",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "str",
    "tuple",
    "typeguard._CallMemo",
    "typeguard.qualified_name",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "typeguard.check_type": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "TypeError",
    "bytearray",
    "bytes",
    "checker_func",
    "complex",
    "float",
    "getattr",
    "hasattr",
    "inspect.isclass",
    "inspect.isfunction",
    "isinstance",
    "issubclass",
    "str",
    "type",
    "typeguard._CallMemo",
    "typeguard._subclass_check_unions",
    "typeguard.check_callable",
    "typeguard.check_io",
    "typeguard.check_number",
    "typeguard.check_tuple",
    "typeguard.check_typevar",
    "typeguard.check_union",
    "typeguard.origin_type_checkers",
    "typeguard.qualified_name",
    "typing.Any",
    "typing.Callable",
    "typing.IO",
    "typing.Optional",
    "typing.Tuple",
    "typing.TypeVar",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "typeguard.check_typevar": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "issubclass",
    "object",
    "str",
    "type",
    "typeguard._CallMemo",
    "typeguard.get_type_name",
    "typeguard.qualified_name",
    "typing.Optional",
    "typing.TypeVar"
   ]
  },
  "type": "function"
 },
 "typeguard.check_union": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "TypeError",
    "check_type",
    "hasattr",
    "str",
    "typeguard._CallMemo",
    "typeguard.get_type_name",
    "typeguard.qualified_name",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typeguard.collections.abc": {
  "data": {
   "shadows": "collections.abc"
  },
  "type": "import"
 },
 "typeguard.extract_stack": {
  "data": {
   "shadows": "traceback.extract_stack"
  },
  "type": "import"
 },
 "typeguard.find_function": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "LookupError",
    "typeguard._functions_map",
    "typeguard.gc",
    "typeguard.inspect",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "typeguard.function_name": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "str",
    "types.FunctionType"
   ]
  },
  "type": "function"
 },
 "typeguard.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "typeguard.generator_origin_types": {
  "data": {
   "lineno": 468
  },
  "type": "constant"
 },
 "typeguard.get_type_hints": {
  "data": {
   "shadows": "typing.get_type_hints"
  },
  "type": "import"
 },
 "typeguard.get_type_name": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "typeguard.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "typeguard.isasyncgen": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "typeguard.isasyncgenfunction": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "typeguard.isclass": {
  "data": {
   "shadows": "inspect.isclass"
  },
  "type": "import"
 },
 "typeguard.isfunction": {
  "data": {
   "shadows": "inspect.isfunction"
  },
  "type": "import"
 },
 "typeguard.isgeneratorfunction": {
  "data": {
   "shadows": "inspect.isgeneratorfunction"
  },
  "type": "import"
 },
 "typeguard.origin_type_checkers": {
  "data": {
   "lineno": 446
  },
  "type": "constant"
 },
 "typeguard.overload": {
  "data": {
   "shadows": "typing.overload"
  },
  "type": "import"
 },
 "typeguard.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "typeguard.print_stack": {
  "data": {
   "shadows": "traceback.print_stack"
  },
  "type": "import"
 },
 "typeguard.qualified_name": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "str",
    "type",
    "typeguard.inspect"
   ]
  },
  "type": "function"
 },
 "typeguard.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "typeguard.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "typeguard.typechecked": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "__debug__",
    "callable",
    "dir",
    "func",
    "func.__code__",
    "functools.partial",
    "functools.wraps",
    "getattr",
    "inspect.isclass",
    "setattr",
    "typeguard._CallMemo",
    "typeguard.check_argument_types",
    "typeguard.check_return_type",
    "typeguard.function_name",
    "typeguard.inspect",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "typeguard.typechecked.wrapper": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "func",
    "getattr",
    "inspect.isasyncgen",
    "typeguard.TypeCheckedAsyncGenerator",
    "typeguard.TypeCheckedGenerator",
    "typeguard._CallMemo",
    "typeguard.asyncgen_origin_types",
    "typeguard.check_argument_types",
    "typeguard.check_return_type",
    "typeguard.generator_origin_types",
    "typeguard.inspect"
   ]
  },
  "type": "function"
 },
 "typeguard.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "typeguard.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 }
}