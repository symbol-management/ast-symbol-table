{
 "sparse": {
  "data": {
   "symbols_in_volume": [
    "get_versions"
   ]
  },
  "type": "module"
 },
 "sparse.__version__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sparse._common": {
  "data": {},
  "type": "module"
 },
 "sparse._common.COO": {
  "data": {
   "shadows": "sparse.COO"
  },
  "type": "import"
 },
 "sparse._common.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sparse._common.SparseArray": {
  "data": {
   "shadows": "sparse.SparseArray"
  },
  "type": "import"
 },
 "sparse._common._csc_ndarray_count_nnz": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "numpy.full",
    "range",
    "sparse._common.numba"
   ]
  },
  "type": "function"
 },
 "sparse._common._csr_csr_count_nnz": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "numpy.full",
    "range",
    "sparse._common.numba"
   ]
  },
  "type": "function"
 },
 "sparse._common._csr_ndarray_count_nnz": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "range",
    "sparse._common.numba"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "COO",
    "GCXS",
    "_dot_coo_coo_type",
    "_dot_coo_ndarray_type",
    "_dot_coo_ndarray_type_sparse",
    "_dot_csc_ndarray_type",
    "_dot_csc_ndarray_type_sparse",
    "_dot_csr_csr_type",
    "_dot_csr_ndarray_type",
    "_dot_csr_ndarray_type_sparse",
    "_dot_ndarray_coo_type",
    "_dot_ndarray_coo_type_sparse",
    "_dot_ndarray_csc_type",
    "all",
    "any",
    "isinstance",
    "numpy.bincount",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.intp",
    "numpy.ndarray",
    "sort_indices"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot.sort_indices": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "linear_loc",
    "numpy.argsort",
    "numpy.empty",
    "numpy.intp",
    "uncompress_dimension"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_coo_coo_type": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "numpy.result_type",
    "sparse._common._memoize_dtype"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_coo_coo_type._dot_coo_coo": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.full",
    "numpy.intp",
    "numpy.zeros",
    "range",
    "sparse._common._csr_csr_count_nnz",
    "sparse._common.numba",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_coo_ndarray_type": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "numpy.result_type",
    "sparse._common._memoize_dtype"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_coo_ndarray_type._dot_coo_ndarray": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range",
    "sparse._common.numba"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_coo_ndarray_type_sparse": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "numpy.result_type",
    "sparse._common._memoize_dtype"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_coo_ndarray_type_sparse._dot_coo_ndarray": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.intp",
    "sparse._common.numba"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_csc_ndarray_type": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "numpy.result_type",
    "sparse._common._memoize_dtype"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_csc_ndarray_type._dot_csc_ndarray": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "numpy.zeros",
    "range",
    "sparse._common.numba"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_csc_ndarray_type_sparse": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "numpy.result_type",
    "sparse._common._memoize_dtype"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_csc_ndarray_type_sparse._dot_csc_ndarray_sparse": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.full",
    "numpy.intp",
    "numpy.zeros",
    "range",
    "sparse._common._csc_ndarray_count_nnz",
    "sparse._common.numba"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_csr_csr_type": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "numpy.result_type",
    "sparse._common._memoize_dtype"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_csr_csr_type._dot_csr_csr": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.full",
    "numpy.intp",
    "numpy.zeros",
    "range",
    "sparse._common._csr_csr_count_nnz",
    "sparse._common.numba",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_csr_ndarray_type": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "numpy.result_type",
    "sparse._common._memoize_dtype"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_csr_ndarray_type._dot_csr_ndarray": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "numpy.empty",
    "range",
    "sparse._common.numba"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_csr_ndarray_type_sparse": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "numpy.result_type",
    "sparse._common._memoize_dtype"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_csr_ndarray_type_sparse._dot_csr_ndarray_sparse": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.intp",
    "range",
    "sparse._common._csr_ndarray_count_nnz",
    "sparse._common.numba"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_ndarray_coo_type": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "numpy.result_type",
    "sparse._common._memoize_dtype"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_ndarray_coo_type._dot_ndarray_coo": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range",
    "sparse._common.numba"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_ndarray_coo_type_sparse": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "numpy.result_type",
    "sparse._common._memoize_dtype"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_ndarray_coo_type_sparse._dot_ndarray_coo": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.intp",
    "range",
    "sparse._common.numba"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_ndarray_csc_type": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "numpy.result_type",
    "sparse._common._memoize_dtype"
   ]
  },
  "type": "function"
 },
 "sparse._common._dot_ndarray_csc_type._dot_ndarray_csc": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "numpy.empty",
    "range",
    "sparse._common.numba"
   ]
  },
  "type": "function"
 },
 "sparse._common._memoize_dtype": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "sparse._common._memoize_dtype.wrapped": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "f",
    "functools.wraps",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._common.asnumpy": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "sparse.SparseArray"
   ]
  },
  "type": "function"
 },
 "sparse._common.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "sparse._common.concatenate": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "COO",
    "any",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sparse._common.coo_concat": {
  "data": {
   "shadows": "concatenate"
  },
  "type": "import"
 },
 "sparse._common.coo_stack": {
  "data": {
   "shadows": "stack"
  },
  "type": "import"
 },
 "sparse._common.dot": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "TypeError",
    "asCOO",
    "check_zero_fill_value",
    "hasattr",
    "isinstance",
    "sparse._common.tensordot",
    "type"
   ]
  },
  "type": "function"
 },
 "sparse._common.eye": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "float",
    "format",
    "int",
    "max",
    "min",
    "numpy.arange",
    "numpy.array",
    "numpy.intp",
    "numpy.stack",
    "sparse.COO"
   ]
  },
  "type": "function"
 },
 "sparse._common.full": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "check_compressed_axes",
    "format",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.intp",
    "sparse.COO",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._common.full_like": {
  "data": {
   "lineno": 1362,
   "symbols_in_volume": [
    "format",
    "hasattr",
    "isinstance",
    "numpy.ndarray",
    "sparse._common.full",
    "type"
   ]
  },
  "type": "function"
 },
 "sparse._common.gcxs_concat": {
  "data": {
   "shadows": "concatenate"
  },
  "type": "import"
 },
 "sparse._common.gcxs_stack": {
  "data": {
   "shadows": "stack"
  },
  "type": "import"
 },
 "sparse._common.matmul": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_matmul_recurser",
    "check_zero_fill_value",
    "dot",
    "hasattr",
    "list",
    "numpy.prod",
    "range",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._common.matmul._matmul_recurser": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "_matmul_recurser",
    "all",
    "dot",
    "isinstance",
    "max",
    "numpy.stack",
    "range",
    "stack"
   ]
  },
  "type": "function"
 },
 "sparse._common.moveaxis": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "ValueError",
    "collections.abc.Iterable",
    "isinstance",
    "len",
    "normalize_axis",
    "range",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._common.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "sparse._common.ones": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "check_compressed_axes",
    "float",
    "format",
    "numpy.dtype",
    "sparse._common.full"
   ]
  },
  "type": "function"
 },
 "sparse._common.ones_like": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "format",
    "hasattr",
    "isinstance",
    "numpy.ndarray",
    "sparse._common.ones",
    "type"
   ]
  },
  "type": "function"
 },
 "sparse._common.outer": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": [
    "isinstance",
    "numpy.multiply.outer",
    "sparse.COO",
    "sparse.SparseArray"
   ]
  },
  "type": "function"
 },
 "sparse._common.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sparse._common.stack": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "COO",
    "any",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sparse._common.tensordot": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_dot",
    "any",
    "asCOO",
    "check_zero_fill_value",
    "int",
    "isinstance",
    "iter",
    "itertools.chain",
    "len",
    "list",
    "numpy.empty",
    "numpy.ndarray",
    "range"
   ]
  },
  "type": "function"
 },
 "sparse._common.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "sparse._common.zeros": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": [
    "check_compressed_axes",
    "float",
    "format",
    "numpy.dtype",
    "sparse._common.full"
   ]
  },
  "type": "function"
 },
 "sparse._common.zeros_like": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "format",
    "hasattr",
    "isinstance",
    "numpy.ndarray",
    "sparse._common.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "sparse._compressed": {
  "data": {},
  "type": "module"
 },
 "sparse._compressed.common": {
  "data": {},
  "type": "module"
 },
 "sparse._compressed.common.concatenate": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "GCXS",
    "all",
    "check_consistent_fill_value",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "normalize_axis",
    "numpy.concatenate",
    "range",
    "set",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.common.coo_concat": {
  "data": {
   "shadows": "concatenate"
  },
  "type": "import"
 },
 "sparse._compressed.common.coo_stack": {
  "data": {
   "shadows": "stack"
  },
  "type": "import"
 },
 "sparse._compressed.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._compressed.common.stack": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "GCXS",
    "all",
    "check_consistent_fill_value",
    "isinstance",
    "len",
    "list",
    "normalize_axis",
    "numpy.concatenate",
    "range",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed": {
  "data": {},
  "type": "module"
 },
 "sparse._compressed.compressed.GCXS": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.lib.mixins.NDArrayOperatorsMixin"
   ]
  },
  "type": "class"
 },
 "sparse._compressed.compressed.GCXS.T": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS._2d_transpose": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "ValueError",
    "sparse._compressed.compressed.GCXS"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "COO",
    "ValueError",
    "check_compressed_axes",
    "collections.abc.Iterable",
    "isinstance",
    "len",
    "numpy.ndarray",
    "sparse._compressed.compressed._from_coo",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.__matmul__": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "NotImplemented",
    "NotImplementedError",
    "matmul"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.__rmatmul__": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "NotImplemented",
    "NotImplementedError",
    "matmul"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.__str__": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS._axis_order": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "numpy.setdiff1d",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS._axisptr": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS._compressed_shape": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.prod",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS._reordered_shape": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.asformat": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "NotImplementedError",
    "format"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.change_compressed_axes": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "_transpose",
    "len",
    "normalize_axis",
    "numpy.arange",
    "range",
    "set",
    "sparse._compressed.compressed.GCXS",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.dot": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "dot"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.dtype": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.flatten": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.from_coo": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "sparse._compressed.compressed._from_coo"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.from_iter": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "COO.from_iter",
    "classmethod",
    "cls.from_coo"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.from_numpy": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "COO",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.from_scipy_sparse": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.maybe_densify": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.nbytes": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.nnz": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.reshape": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "_1d_reshape",
    "_transpose",
    "any",
    "collections.abc.Iterable",
    "functools.reduce",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.argmin",
    "numpy.prod",
    "operator.mul",
    "sparse._compressed.compressed.GCXS",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.resize": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "ValueError",
    "_resize",
    "all",
    "any",
    "int",
    "isinstance",
    "len",
    "numpy.argmin",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.to_scipy_sparse": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "ValueError",
    "check_zero_fill_value",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.tocoo": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "COO",
    "numpy.argsort",
    "numpy.array",
    "numpy.vstack",
    "uncompress_dimension"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.todense": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "len",
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.todok": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "sparse._compressed.compressed.GCXS.transpose": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "ValueError",
    "_transpose",
    "len",
    "list",
    "normalize_axis",
    "numpy.argmin",
    "numpy.unique",
    "range",
    "reversed",
    "sparse._compressed.compressed.GCXS",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sparse._compressed.compressed.NDArrayOperatorsMixin": {
  "data": {
   "shadows": "numpy.lib.mixins.NDArrayOperatorsMixin"
  },
  "type": "import"
 },
 "sparse._compressed.compressed._from_coo": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "check_compressed_axes",
    "enumerate",
    "len",
    "linear_loc",
    "list",
    "normalize_axis",
    "numpy.arange",
    "numpy.argmin",
    "numpy.argsort",
    "numpy.bincount",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.intp",
    "numpy.prod",
    "numpy.setdiff1d",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.compressed.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "sparse._compressed.compressed.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._compressed.compressed.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sparse._compressed.compressed.ss": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sparse._compressed.convert": {
  "data": {},
  "type": "module"
 },
 "sparse._compressed.convert.List": {
  "data": {
   "shadows": "numba.typed.List"
  },
  "type": "import"
 },
 "sparse._compressed.convert._1d_reshape": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "check_compressed_axes",
    "len",
    "list",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.intp",
    "numpy.prod",
    "numpy.searchsorted",
    "numpy.setdiff1d",
    "sparse._compressed.convert._linearize"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.convert._c_ordering": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "enumerate",
    "ravel_multi_index",
    "sparse._compressed.convert.numba",
    "unravel_index"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.convert._convert_coords": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "enumerate",
    "sparse._compressed.convert.numba",
    "sparse._compressed.convert.ravel_multi_index",
    "sparse._compressed.convert.unravel_index"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.convert._linearize": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "enumerate",
    "ravel_multi_index",
    "sparse._compressed.convert.numba",
    "unravel_index"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.convert._resize": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "GCXS",
    "_c_ordering",
    "check_compressed_axes",
    "functools.reduce",
    "linear_loc",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.empty",
    "numpy.intp",
    "numpy.searchsorted",
    "numpy.stack",
    "sparse._compressed.convert._1d_reshape",
    "sparse._compressed.convert.operator",
    "sparse._compressed.convert.uncompress_dimension"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.convert._transpose": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "_convert_coords",
    "check_compressed_axes",
    "len",
    "linear_loc",
    "list",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.asarray",
    "numpy.bincount",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.intp",
    "numpy.prod",
    "numpy.setdiff1d",
    "numpy.stack",
    "sparse._compressed.convert._c_ordering",
    "sparse._compressed.convert.uncompress_dimension"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.convert.compute_flat": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.intp",
    "numpy.zeros",
    "range",
    "sparse._compressed.convert.numba"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.convert.convert_to_flat": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "IndexError",
    "any",
    "compute_flat",
    "len",
    "numba.typed.List",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.int32",
    "numpy.intp",
    "numpy.prod",
    "range",
    "transform_shape"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.convert.is_sorted": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "range",
    "sparse._compressed.convert.numba"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.convert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._compressed.convert.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "sparse._compressed.convert.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sparse._compressed.convert.ravel_multi_index": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "enumerate",
    "numpy.prod",
    "sparse._compressed.convert.numba"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.convert.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sparse._compressed.convert.transform_shape": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "numpy.intp",
    "numpy.prod",
    "range",
    "sparse._compressed.convert.numba"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.convert.uncompress_dimension": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "numpy.intp",
    "range",
    "sparse._compressed.convert.numba"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.convert.unravel_index": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "len",
    "numpy.intp",
    "numpy.prod",
    "numpy.zeros",
    "sparse._compressed.convert.numba"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.indexing": {
  "data": {},
  "type": "module"
 },
 "sparse._compressed.indexing.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse._compressed.indexing.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sparse._compressed.indexing.get_array_selection": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.array",
    "numpy.int64",
    "numpy.searchsorted",
    "range",
    "sparse._compressed.indexing.numba",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.indexing.get_single_element": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ravel_multi_index",
    "numpy.searchsorted",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.indexing.get_slicing_selection": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.array",
    "numpy.int64",
    "numpy.searchsorted",
    "sparse._compressed.indexing.numba",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.indexing.getitem": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "GCXS",
    "all",
    "collections.abc.Iterable",
    "convert_to_flat",
    "enumerate",
    "get_array_selection",
    "get_single_element",
    "get_slicing_selection",
    "int",
    "is_sorted",
    "isinstance",
    "itertools.zip_longest",
    "len",
    "list",
    "normalize_index",
    "numbers.Integral",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.bincount",
    "numpy.bool",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.intp",
    "numpy.prod",
    "numpy.zeros",
    "range",
    "slice",
    "tuple",
    "uncompress_dimension"
   ]
  },
  "type": "function"
 },
 "sparse._compressed.indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._compressed.indexing.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "sparse._compressed.indexing.zip_longest": {
  "data": {
   "shadows": "itertools.zip_longest"
  },
  "type": "import"
 },
 "sparse._coo": {
  "data": {},
  "type": "module"
 },
 "sparse._coo.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sparse._coo.common": {
  "data": {},
  "type": "module"
 },
 "sparse._coo.common.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sparse._coo.common._as_result_type_arg": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common._diagonal_idx": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "range",
    "sparse._coo.common.numba"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common._replace_nan": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "numpy.floating",
    "numpy.isnan",
    "numpy.issubdtype",
    "sparse._coo.common.where"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.argwhere": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.asCOO": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "COO",
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.clip": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "sparse._coo.common.asCOO"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.concatenate": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "COO",
    "all",
    "check_consistent_fill_value",
    "isinstance",
    "list",
    "normalize_axis",
    "numpy.concatenate",
    "range",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.diagonal": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "COO",
    "ValueError",
    "_diagonal_idx",
    "abs",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.diagonalize": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "COO",
    "as_coo",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.isneginf": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "elemwise",
    "numpy.isneginf"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.isposinf": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "elemwise",
    "numpy.isposinf"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.kron": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "COO",
    "ValueError",
    "_cartesian_product",
    "check_zero_fill_value",
    "isinstance",
    "max",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ndim",
    "sparse._coo.common.asCOO",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.linear_loc": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len",
    "numpy.intp",
    "numpy.ravel_multi_index",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.nanmax": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "RuntimeWarning",
    "isscalar",
    "numpy.fmax",
    "numpy.isnan",
    "sparse._coo.common.asCOO",
    "sparse._coo.common.warnings"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.nanmean": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "RuntimeWarning",
    "functools.reduce",
    "isinstance",
    "numpy.errstate",
    "numpy.floating",
    "numpy.isnan",
    "numpy.issubdtype",
    "numpy.sum",
    "numpy.true_divide",
    "range",
    "sparse._coo.common.asCOO",
    "sparse._coo.common.operator",
    "sparse._coo.common.warnings",
    "tuple",
    "where"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.nanmin": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "RuntimeWarning",
    "isscalar",
    "numpy.fmin",
    "numpy.isnan",
    "sparse._coo.common.asCOO",
    "sparse._coo.common.warnings"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.nanprod": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "nanreduce",
    "numpy.multiply",
    "sparse._coo.common.asCOO"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.nanreduce": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "sparse._coo.common._replace_nan"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.nansum": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "nanreduce",
    "numpy.add",
    "sparse._coo.common.asCOO"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._coo.common.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "sparse._coo.common.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sparse._coo.common.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sparse._coo.common.result_type": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "_as_result_type_arg",
    "numpy.result_type"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.roll": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "COO",
    "ValueError",
    "as_coo",
    "collections.abc.Iterable",
    "isinstance",
    "len",
    "normalize_axis",
    "numpy.copy",
    "numpy.full",
    "numpy.ndim",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sparse._coo.common.stack": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "COO",
    "check_consistent_fill_value",
    "isinstance",
    "len",
    "list",
    "normalize_axis",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.intp",
    "numpy.stack",
    "range"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.tril": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "COO",
    "NotImplementedError",
    "check_zero_fill_value"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.triu": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "COO",
    "NotImplementedError",
    "check_zero_fill_value"
   ]
  },
  "type": "function"
 },
 "sparse._coo.common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sparse._coo.common.where": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "ValueError",
    "elemwise",
    "numpy.where",
    "sparse._coo.common.asCOO",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core": {
  "data": {
   "symbols_in_volume": [
    "numpy.add",
    "numpy.multiply",
    "numpy.power"
   ]
  },
  "type": "module"
 },
 "sparse._coo.core.COO": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.lib.mixins.NDArrayOperatorsMixin",
    "round"
   ]
  },
  "type": "class"
 },
 "sparse._coo.core.COO.T": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": [
    "property",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.__array_ufunc__": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": [
    "Ellipsis",
    "NotImplemented",
    "ValueError",
    "all",
    "elemwise",
    "getattr",
    "isinstance",
    "method",
    "numpy.ndarray",
    "reversed",
    "sparse._coo.core.COO",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.__dask_tokenize__": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "dask.base.normalize_token",
    "type"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.__getstate__": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "sparse._coo.core.COO.__init__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "as_coo",
    "collections.abc.Iterable",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.intp",
    "numpy.uint64",
    "numpy.zeros",
    "sorted",
    "sparse._coo.core.warnings",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.__len__": {
  "data": {
   "lineno": 631
  },
  "type": "function"
 },
 "sparse._coo.core.COO.__matmul__": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "NotImplemented",
    "NotImplementedError",
    "matmul"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.__rmatmul__": {
  "data": {
   "lineno": 1688,
   "symbols_in_volume": [
    "NotImplemented",
    "NotImplementedError",
    "matmul"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.__setstate__": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "sparse._coo.core.COO.__sizeof__": {
  "data": {
   "lineno": 654
  },
  "type": "function"
 },
 "sparse._coo.core.COO.__str__": {
  "data": {
   "lineno": 659
  },
  "type": "function"
 },
 "sparse._coo.core.COO._make_shallow_copy_of": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO._prune": {
  "data": {
   "lineno": 2108,
   "symbols_in_volume": [
    "equivalent"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO._reduce": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "sparse._coo.core.COO",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO._sort_indices": {
  "data": {
   "lineno": 2047,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO._sum_duplicates": {
  "data": {
   "lineno": 2072,
   "symbols_in_volume": [
    "len",
    "numpy.add.reduceat",
    "numpy.append",
    "numpy.diff",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO._tocsr": {
  "data": {
   "lineno": 1951,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bincount",
    "numpy.cumsum",
    "numpy.int64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.all": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "numpy.logical_and.reduce"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.any": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "numpy.logical_or.reduce"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.asformat": {
  "data": {
   "lineno": 2285,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "format",
    "sparse._coo.core.COO"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.astype": {
  "data": {
   "lineno": 2190,
   "symbols_in_volume": [
    "copy",
    "numpy.ndarray.astype"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.broadcast_to": {
  "data": {
   "lineno": 2126,
   "symbols_in_volume": [
    "broadcast_to"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.clip": {
  "data": {
   "lineno": 2170,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "max",
    "min",
    "numpy.clip",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.conj": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": [
    "numpy.conj"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.copy": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "copy.copy",
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.dot": {
  "data": {
   "lineno": 1646,
   "symbols_in_volume": [
    "dot"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.dtype": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.enable_caching": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "collections.defaultdict",
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.flatten": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.from_iter": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "classmethod",
    "collections.abc.Iterable",
    "collections.abc.Sized",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.stack",
    "numpy.uint8",
    "sparse._coo.core.COO"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.from_numpy": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "_zero_of_dtype",
    "classmethod",
    "cls",
    "equivalent",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.empty",
    "numpy.ndarray",
    "numpy.uint8",
    "numpy.vstack",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.from_scipy_sparse": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "classmethod",
    "numpy.empty",
    "sparse._coo.core.COO"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.imag": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": [
    "numpy.imag",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.linear_loc": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": [
    "linear_loc"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.max": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "numpy.maximum.reduce"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.maybe_densify": {
  "data": {
   "lineno": 2208,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.mean": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "functools.reduce",
    "isinstance",
    "issubclass",
    "numpy.bool_",
    "numpy.divide",
    "numpy.dtype",
    "numpy.float16",
    "numpy.integer",
    "numpy.true_divide",
    "range",
    "sparse._coo.core.operator",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.min": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "numpy.minimum.reduce"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.nbytes": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.nnz": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.nonzero": {
  "data": {
   "lineno": 2258,
   "symbols_in_volume": [
    "check_zero_fill_value",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.prod": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "numpy.multiply.reduce"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.real": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "numpy.real",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.reduce": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "ValueError",
    "_grouped_reduce",
    "_keepdims",
    "equivalent",
    "isinstance",
    "method",
    "normalize_axis",
    "numpy.intp",
    "numpy.prod",
    "range",
    "reduce_super_ufunc",
    "set",
    "sparse._coo.core.COO",
    "sparse._coo.core._reduce_super_ufunc",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.reshape": {
  "data": {
   "lineno": 1795,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "any",
    "collections.abc.Iterable",
    "enumerate",
    "functools.reduce",
    "int",
    "isinstance",
    "len",
    "linear_loc",
    "numpy.empty",
    "numpy.intp",
    "numpy.prod",
    "sparse._coo.core.COO",
    "sparse._coo.core.operator",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.resize": {
  "data": {
   "lineno": 1874,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "any",
    "enumerate",
    "functools.reduce",
    "int",
    "isinstance",
    "len",
    "linear_loc",
    "numpy.empty",
    "numpy.intp",
    "numpy.searchsorted",
    "sparse._coo.core.operator",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.round": {
  "data": {
   "lineno": 2152,
   "symbols_in_volume": [
    "isinstance",
    "numpy.round",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.std": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.sum": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "numpy.add.reduce"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.swapaxes": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "list",
    "normalize_axis",
    "range"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.to_scipy_sparse": {
  "data": {
   "lineno": 1916,
   "symbols_in_volume": [
    "ValueError",
    "check_zero_fill_value"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.tocsc": {
  "data": {
   "lineno": 2005,
   "symbols_in_volume": [
    "AttributeError",
    "check_zero_fill_value"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.tocsr": {
  "data": {
   "lineno": 1964,
   "symbols_in_volume": [
    "AttributeError",
    "check_zero_fill_value"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.todense": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "len",
    "numpy.full",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.transpose": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "normalize_axis",
    "numpy.unique",
    "range",
    "reversed",
    "sparse._coo.core.COO",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.COO.var": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "RuntimeWarning",
    "functools.reduce",
    "isinstance",
    "issubclass",
    "max",
    "normalize_axis",
    "numpy.bool_",
    "numpy.complexfloating",
    "numpy.divide",
    "numpy.dtype",
    "numpy.integer",
    "numpy.multiply",
    "range",
    "sparse._coo.core.operator",
    "sparse._coo.core.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sparse._coo.core.Iterator": {
  "data": {
   "shadows": "collections.abc.Iterator"
  },
  "type": "import"
 },
 "sparse._coo.core.NDArrayOperatorsMixin": {
  "data": {
   "shadows": "numpy.lib.mixins.NDArrayOperatorsMixin"
  },
  "type": "import"
 },
 "sparse._coo.core.Sized": {
  "data": {
   "shadows": "collections.abc.Sized"
  },
  "type": "import"
 },
 "sparse._coo.core._calc_counts_invidx": {
  "data": {
   "lineno": 2385,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "range",
    "sparse._coo.core.numba"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core._copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "sparse._coo.core._grouped_reduce": {
  "data": {
   "lineno": 2410,
   "symbols_in_volume": [
    "method.reduceat",
    "sparse._coo.core._calc_counts_invidx"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core._keepdims": {
  "data": {
   "lineno": 2378,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core._reduce_super_ufunc": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sparse._coo.core.as_coo": {
  "data": {
   "lineno": 2325,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "collections.abc.Iterable",
    "collections.abc.Iterator",
    "hasattr",
    "isinstance",
    "numpy.ndarray",
    "sparse._coo.core.COO",
    "type"
   ]
  },
  "type": "function"
 },
 "sparse._coo.core.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sparse._coo.core.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "sparse._coo.core.normalize_token": {
  "data": {
   "shadows": "dask.base.normalize_token"
  },
  "type": "import"
 },
 "sparse._coo.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._coo.core.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "sparse._coo.core.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sparse._coo.core.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sparse._coo.core.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sparse._coo.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sparse._coo.indexing": {
  "data": {},
  "type": "module"
 },
 "sparse._coo.indexing.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse._coo.indexing._AdvIdxInfo": {
  "data": {
   "lineno": 681
  },
  "type": "class"
 },
 "sparse._coo.indexing._AdvIdxInfo.__init__": {
  "data": {
   "lineno": 682
  },
  "type": "function"
 },
 "sparse._coo.indexing._compute_mask": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "_filter_pairs",
    "_get_mask_pairs",
    "_join_adjacent_pairs",
    "array_from_list_intp",
    "len",
    "max",
    "numpy.array",
    "numpy.intp",
    "numpy.log",
    "range",
    "sparse._coo.indexing.numba"
   ]
  },
  "type": "function"
 },
 "sparse._coo.indexing._compute_multi_axis_multi_mask": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "_compute_mask",
    "array_from_list_intp",
    "len",
    "numpy.empty",
    "numpy.intp",
    "range",
    "sparse._coo.indexing.numba"
   ]
  },
  "type": "function"
 },
 "sparse._coo.indexing._compute_multi_mask": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "_compute_mask",
    "array_from_list_intp",
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.intp",
    "range",
    "sparse._coo.indexing.numba"
   ]
  },
  "type": "function"
 },
 "sparse._coo.indexing._filter_pairs": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "len",
    "range",
    "sparse._coo.indexing.numba"
   ]
  },
  "type": "function"
 },
 "sparse._coo.indexing._get_mask_pairs": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "len",
    "numpy.intp",
    "numpy.searchsorted",
    "range",
    "sparse._coo.indexing.numba"
   ]
  },
  "type": "function"
 },
 "sparse._coo.indexing._ind_ar_from_indices": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "numbers.Integral",
    "numpy.empty",
    "numpy.intp",
    "slice"
   ]
  },
  "type": "function"
 },
 "sparse._coo.indexing._join_adjacent_pairs": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "len",
    "range",
    "sparse._coo.indexing.numba"
   ]
  },
  "type": "function"
 },
 "sparse._coo.indexing._mask": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "IndexError",
    "_AdvIdxInfo",
    "_compute_mask",
    "_compute_multi_axis_multi_mask",
    "_compute_multi_mask",
    "_ind_ar_from_indices",
    "_prune_indices",
    "_separate_adv_indices",
    "len",
    "numpy.array",
    "numpy.intp",
    "slice"
   ]
  },
  "type": "function"
 },
 "sparse._coo.indexing._prune_indices": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "isinstance",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._coo.indexing._separate_adv_indices": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sparse._coo.indexing.array_from_list_intp": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "numpy.intp",
    "range",
    "sparse._coo.indexing.numba"
   ]
  },
  "type": "function"
 },
 "sparse._coo.indexing.getitem": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "COO",
    "Ellipsis",
    "ValueError",
    "_mask",
    "_zero_of_dtype",
    "all",
    "equivalent",
    "isinstance",
    "itertools.zip_longest",
    "len",
    "list",
    "normalize_index",
    "numbers.Integral",
    "numpy.asarray",
    "numpy.empty",
    "numpy.intp",
    "numpy.ndarray",
    "numpy.stack",
    "numpy.uint8",
    "numpy.where",
    "numpy.zeros",
    "range",
    "slice",
    "sorted",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._coo.indexing.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "sparse._coo.indexing.zip_longest": {
  "data": {
   "shadows": "itertools.zip_longest"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension": {
  "data": {
   "symbols_in_volume": [
    "numba.extending.make_attribute_wrapper",
    "sparse._coo.numba_extension.COOType"
   ]
  },
  "type": "module"
 },
 "sparse._coo.numba_extension.COOModel": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numba.extending.models.StructModel",
    "numba.extending.register_model",
    "sparse._coo.numba_extension.COOType"
   ]
  },
  "type": "class"
 },
 "sparse._coo.numba_extension.COOModel.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numba.extending.models.StructModel.__init__"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension.COOType": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numba.core.types.Type"
   ]
  },
  "type": "class"
 },
 "sparse._coo.numba_extension.COOType.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.dtype",
    "sparse._coo.numba_extension.numba",
    "super"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension.COOType.coords_type": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property",
    "sparse._coo.numba_extension.numba"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension.COOType.data_type": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property",
    "sparse._coo.numba_extension.numba"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension.COOType.fill_value_type": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "property",
    "sparse._coo.numba_extension.numba"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension.COOType.key": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension.COOType.shape_type": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numba.core.types.UniTuple",
    "numba.core.types.int64",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension.NativeValue": {
  "data": {
   "shadows": "numba.extending.NativeValue"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sparse._coo.numba_extension._typeof_COO": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numba.core.typing.typeof.typeof_impl.register",
    "sparse._coo.numba_extension.COOType"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension._unbox_native_field": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numba.core.cgutils.alloca_once",
    "numba.core.cgutils.alloca_once_value",
    "numba.core.cgutils.false_bit",
    "numba.core.cgutils.if_unlikely",
    "numba.core.cgutils.is_null",
    "numba.core.cgutils.true_bit",
    "numba.extending.NativeValue",
    "ret",
    "sparse._coo.numba_extension.local_return",
    "str"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension._zero_of_dtype": {
  "data": {
   "shadows": "sparse._utils._zero_of_dtype"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.box": {
  "data": {
   "shadows": "numba.extending.box"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.box_COO": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numba.core.cgutils.alloca_once",
    "numba.core.cgutils.create_struct_proxy",
    "numba.core.cgutils.if_unlikely",
    "numba.core.cgutils.is_null",
    "numba.extending.box",
    "ret",
    "sparse._coo.numba_extension.COOType",
    "sparse._coo.numba_extension.local_return"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension.cgutils": {
  "data": {
   "shadows": "numba.core.cgutils"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.impl_COO": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numba.core.cgutils.create_struct_proxy",
    "numba.core.imputils.impl_ret_borrowed",
    "numba.core.imputils.lower_builtin",
    "numba.core.types.Any",
    "sparse._utils._zero_of_dtype"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension.impl_ret_borrowed": {
  "data": {
   "shadows": "numba.core.imputils.impl_ret_borrowed"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.local_return": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "sparse._coo.numba_extension.contextlib"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension.local_return.return_": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "sparse._coo.numba_extension.lower_builtin": {
  "data": {
   "shadows": "numba.core.imputils.lower_builtin"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.lower_constant": {
  "data": {
   "shadows": "numba.core.imputils.lower_constant"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.lower_constant_COO": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numba.core.cgutils.pack_struct",
    "numba.core.imputils.impl_ret_borrowed",
    "numba.core.imputils.lower_constant",
    "sparse._coo.numba_extension.COOType"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension.make_attribute_wrapper": {
  "data": {
   "shadows": "numba.extending.make_attribute_wrapper"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.models": {
  "data": {
   "shadows": "numba.extending.models"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.register_model": {
  "data": {
   "shadows": "numba.extending.register_model"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.type_COO": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numba.extending.type_callable"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension.type_COO.typer": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "len",
    "sparse._coo.numba_extension.COOType",
    "sparse._coo.numba_extension.numba"
   ]
  },
  "type": "function"
 },
 "sparse._coo.numba_extension.type_callable": {
  "data": {
   "shadows": "numba.extending.type_callable"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.typeof_impl": {
  "data": {
   "shadows": "numba.core.typing.typeof.typeof_impl"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.types": {
  "data": {
   "shadows": "numba.core.types"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.unbox": {
  "data": {
   "shadows": "numba.extending.unbox"
  },
  "type": "import"
 },
 "sparse._coo.numba_extension.unbox_COO": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numba.core.cgutils.alloca_once",
    "numba.core.cgutils.alloca_once_value",
    "numba.core.cgutils.create_struct_proxy",
    "numba.core.cgutils.false_bit",
    "numba.core.cgutils.if_unlikely",
    "numba.core.cgutils.true_bit",
    "numba.extending.NativeValue",
    "numba.extending.unbox",
    "ret",
    "sparse._coo.numba_extension.COOType",
    "sparse._coo.numba_extension._unbox_native_field",
    "sparse._coo.numba_extension.local_return"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath": {
  "data": {},
  "type": "module"
 },
 "sparse._coo.umath._Elemwise": {
  "data": {
   "lineno": 406
  },
  "type": "class"
 },
 "sparse._coo.umath._Elemwise.__init__": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "COO",
    "COO.from_scipy_sparse",
    "isinstance",
    "isscalar",
    "numpy.asarray",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._Elemwise._check_broadcast": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "COO",
    "isinstance",
    "numpy.ndarray",
    "sparse._coo.umath._get_nary_broadcast_shape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._Elemwise._get_fill_value": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "COO",
    "IndexError",
    "TypeError",
    "ValueError",
    "_zero_of_dtype",
    "equivalent",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._Elemwise._get_func_coords_data": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "COO",
    "TypeError",
    "all",
    "equivalent",
    "numpy.asarray",
    "numpy.bool",
    "numpy.broadcast_arrays",
    "numpy.broadcast_to",
    "numpy.empty",
    "numpy.ones",
    "sparse._coo.umath._get_broadcast_parameters",
    "sparse._coo.umath._get_expanded_coords_data",
    "sparse._coo.umath._get_nary_broadcast_shape",
    "sparse._coo.umath.itertools",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._Elemwise._match_coo": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "COO",
    "NotImplementedError",
    "ValueError",
    "_rev_idx",
    "all",
    "id",
    "len",
    "linear_loc",
    "numpy.arange",
    "numpy.argsort",
    "sparse._coo.umath._get_broadcast_parameters",
    "sparse._coo.umath._get_broadcast_shape",
    "sparse._coo.umath._get_expanded_coords_data",
    "sparse._coo.umath._get_matching_coords",
    "sparse._coo.umath._get_reduced_coords",
    "sparse._coo.umath._get_reduced_shape",
    "sparse._coo.umath._match_arrays",
    "staticmethod",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._Elemwise.get_result": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "COO",
    "NotImplemented",
    "any",
    "isinstance",
    "len",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.intp",
    "sparse._coo.umath.itertools"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._cartesian_product": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "len",
    "numpy.broadcast_arrays",
    "numpy.empty",
    "numpy.ix_",
    "numpy.prod",
    "numpy.result_type"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._get_broadcast_parameters": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "itertools.zip_longest"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._get_broadcast_shape": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "itertools.zip_longest",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._get_expanded_coords_data": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "_cartesian_product",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.empty",
    "numpy.int64",
    "numpy.intp",
    "numpy.prod",
    "numpy.repeat",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._get_matching_coords": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.intp",
    "numpy.uint8",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._get_nary_broadcast_shape": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "_get_broadcast_shape",
    "str"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._get_reduced_coords": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._get_reduced_shape": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._match_arrays": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.uintp",
    "sparse._coo.umath.numba"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath._rev_idx": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath.broadcast_to": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "COO",
    "all",
    "enumerate",
    "sorted",
    "sparse._coo.umath._get_broadcast_parameters",
    "sparse._coo.umath._get_broadcast_shape",
    "sparse._coo.umath._get_expanded_coords_data",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath.elemwise": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "_Elemwise"
   ]
  },
  "type": "function"
 },
 "sparse._coo.umath.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sparse._coo.umath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._coo.umath.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "sparse._coo.umath.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sparse._coo.umath.zip_longest": {
  "data": {
   "shadows": "itertools.zip_longest"
  },
  "type": "import"
 },
 "sparse._dok": {
  "data": {},
  "type": "module"
 },
 "sparse._dok.DOK": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "sparse._dok.DOK.__getitem__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "NotImplementedError",
    "all",
    "int",
    "isinstance",
    "len",
    "normalize_index",
    "numbers.Integral",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._dok.DOK.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "map",
    "numpy.asarray",
    "numpy.dtype",
    "numpy.ndarray",
    "numpy.result_type",
    "sparse._dok.DOK",
    "super"
   ]
  },
  "type": "function"
 },
 "sparse._dok.DOK.__setitem__": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "normalize_index",
    "numbers.Integral",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "sparse._dok.DOK.__str__": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "sparse._dok.DOK._make_shallow_copy_of": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sparse._dok.DOK._setitem": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "enumerate",
    "equivalent",
    "isinstance",
    "len",
    "max",
    "min",
    "numbers.Integral",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._dok.DOK.asformat": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "COO",
    "COO.from_iter",
    "NotImplementedError",
    "format",
    "sparse._dok.DOK"
   ]
  },
  "type": "function"
 },
 "sparse._dok.DOK.format": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._dok.DOK.from_coo": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._dok.DOK.from_numpy": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "numpy.nonzero",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._dok.DOK.nbytes": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._dok.DOK.nnz": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._dok.DOK.to_coo": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "COO"
   ]
  },
  "type": "function"
 },
 "sparse._dok.DOK.todense": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "sparse._dok.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse._dok.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._io": {
  "data": {},
  "type": "module"
 },
 "sparse._io.load_npz": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "COO",
    "GCXS",
    "KeyError",
    "RuntimeError",
    "numpy.load",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._io.save_npz": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.savez",
    "numpy.savez_compressed",
    "type"
   ]
  },
  "type": "function"
 },
 "sparse._numba_extension": {
  "data": {},
  "type": "module"
 },
 "sparse._numba_extension._init_extension": {
  "data": {
   "lineno": 1
  },
  "type": "function"
 },
 "sparse._numba_extension.sparse._coo.numba_extension": {
  "data": {
   "shadows": "sparse._coo.numba_extension"
  },
  "type": "import"
 },
 "sparse._settings": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "int",
    "sparse._settings._is_nep18_enabled",
    "sparse._settings.os"
   ]
  },
  "type": "module"
 },
 "sparse._settings.AUTO_DENSIFY": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sparse._settings.NEP18_ENABLED": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sparse._settings.WARN_ON_TOO_DENSE": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sparse._settings._is_nep18_enabled": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "A",
    "ValueError",
    "sparse._settings.numpy"
   ]
  },
  "type": "function"
 },
 "sparse._settings._is_nep18_enabled.A": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "sparse._settings._is_nep18_enabled.A.__array_function__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "sparse._settings.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._settings.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sparse._slicing": {
  "data": {},
  "type": "module"
 },
 "sparse._slicing.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse._slicing.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sparse._slicing.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "sparse._slicing._sanitize_index_element": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sparse._slicing.check_index": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "IndexError",
    "bool",
    "collections.abc.Iterable",
    "isinstance",
    "len",
    "numbers.Integral",
    "numpy.asanyarray",
    "numpy.integer",
    "numpy.issubdtype",
    "slice"
   ]
  },
  "type": "function"
 },
 "sparse._slicing.clip_slice": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "min",
    "slice"
   ]
  },
  "type": "function"
 },
 "sparse._slicing.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sparse._slicing.normalize_index": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "IndexError",
    "check_index",
    "hasattr",
    "isinstance",
    "len",
    "map",
    "posify_index",
    "replace_ellipsis",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._slicing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._slicing.posify_index": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "map",
    "numbers.Integral",
    "numpy.asanyarray",
    "numpy.ndarray",
    "numpy.where",
    "slice",
    "sparse._slicing.math",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._slicing.replace_ellipsis": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Ellipsis",
    "IndexError",
    "enumerate",
    "len",
    "slice",
    "sum"
   ]
  },
  "type": "function"
 },
 "sparse._slicing.replace_none": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "sparse._slicing.sanitize_index": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "IndexError",
    "_sanitize_index_element",
    "hasattr",
    "isinstance",
    "len",
    "numbers.Number",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.asarray",
    "numpy.bool_",
    "numpy.integer",
    "numpy.intp",
    "numpy.issubdtype",
    "numpy.nonzero",
    "slice"
   ]
  },
  "type": "function"
 },
 "sparse._sparse_array": {
  "data": {},
  "type": "module"
 },
 "sparse._sparse_array.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sparse._sparse_array.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "sparse._sparse_array.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse._sparse_array.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sparse._sparse_array.SparseArray": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sparse._sparse_array.SparseArray.__array__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sparse._sparse_array.SparseArray.__array_function__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplemented",
    "getattr",
    "isinstance",
    "len",
    "sparse",
    "sparse_func",
    "type",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "sparse._sparse_array.SparseArray.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "_zero_of_dtype",
    "all",
    "collections.abc.Iterable",
    "hasattr",
    "int",
    "isinstance",
    "numbers.Integral",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._sparse_array.SparseArray._repr_html_": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "html_table"
   ]
  },
  "type": "function"
 },
 "sparse._sparse_array.SparseArray.asformat": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sparse._sparse_array.SparseArray.density": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._sparse_array.SparseArray.ndim": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._sparse_array.SparseArray.nnz": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse._sparse_array.SparseArray.size": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "functools.reduce",
    "property",
    "sparse._sparse_array.operator"
   ]
  },
  "type": "function"
 },
 "sparse._sparse_array.SparseArray.todense": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sparse._sparse_array.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sparse._sparse_array.module": {
  "data": {
   "shadows": "sparse"
  },
  "type": "import"
 },
 "sparse._sparse_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._sparse_array.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sparse._sparse_array.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sparse._utils": {
  "data": {},
  "type": "module"
 },
 "sparse._utils.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse._utils.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sparse._utils._zero_of_dtype": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sparse._utils.assert_eq": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "assert_nnz",
    "check_equal",
    "hasattr",
    "is_canonical",
    "isinstance",
    "numpy.allclose",
    "numpy.array_equal",
    "numpy.integer",
    "numpy.issubdtype",
    "sparse._utils.functools"
   ]
  },
  "type": "function"
 },
 "sparse._utils.assert_nnz": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "_zero_of_dtype",
    "equivalent",
    "hasattr",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sparse._utils.check_compressed_axes": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "collections.abc.Iterable",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "numbers.Integral",
    "numpy.array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "sparse._utils.check_consistent_fill_value": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "sparse._utils.equivalent"
   ]
  },
  "type": "function"
 },
 "sparse._utils.check_zero_fill_value": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "hasattr",
    "sparse._utils._zero_of_dtype",
    "sparse._utils.equivalent"
   ]
  },
  "type": "function"
 },
 "sparse._utils.equivalent": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "any",
    "numpy.asarray",
    "numpy.bool_",
    "numpy.character",
    "numpy.integer",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "sparse._utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sparse._utils.html_table": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "functools.reduce",
    "hasattr",
    "sparse._utils.human_readable_size",
    "sparse._utils.operator",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse._utils.human_readable_size": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sparse._utils.is_canonical": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "equivalent",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "sparse._utils.isscalar": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "isinstance",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "sparse._utils.normalize_axis": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "collections.abc.Iterable",
    "int",
    "isinstance",
    "numbers.Integral",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse._utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse._utils.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sparse._utils.random": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "COO",
    "ValueError",
    "data_rvs",
    "format",
    "int",
    "isinstance",
    "numbers.Integral",
    "numpy.empty",
    "numpy.intp",
    "numpy.min_scalar_type",
    "numpy.prod",
    "numpy.random",
    "numpy.random.RandomState",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "sparse._utils.random_value_array": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "sparse._utils.random_value_array.replace_values": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "int",
    "numpy.empty",
    "numpy.float_",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "sparse._utils.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sparse._version": {
  "data": {},
  "type": "module"
 },
 "sparse._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sparse._version.json",
    "sparse._version.version_json"
   ]
  },
  "type": "function"
 },
 "sparse._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "sparse._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 }
}