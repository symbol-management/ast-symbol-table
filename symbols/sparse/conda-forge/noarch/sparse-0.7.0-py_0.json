{
 "sparse": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "get_versions",
    "int",
    "sparse.os"
   ]
  },
  "type": "module"
 },
 "sparse._AUTO_DENSIFICATION_ENABLED": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sparse._AUTO_WARN_ON_TOO_DENSE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sparse.__version__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sparse._version": {
  "data": {},
  "type": "module"
 },
 "sparse._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sparse._version.json",
    "sparse._version.version_json"
   ]
  },
  "type": "function"
 },
 "sparse._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "sparse._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "sparse.coo": {
  "data": {},
  "type": "module"
 },
 "sparse.coo.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sparse.coo.common": {
  "data": {},
  "type": "module"
 },
 "sparse.coo.common.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sparse.coo.common._dot": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "COO",
    "_dot_coo_coo_type",
    "_dot_coo_ndarray_type",
    "_dot_ndarray_coo_type",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common._dot_coo_coo_type": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "numpy.result_type",
    "sparse.coo.common._memoize_dtype"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common._dot_coo_coo_type._dot_coo_coo": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.intp",
    "sparse.coo.common.numba"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common._dot_coo_ndarray_type": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "numpy.result_type",
    "sparse.coo.common._memoize_dtype"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common._dot_coo_ndarray_type._dot_coo_ndarray": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range",
    "sparse.coo.common.numba"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common._dot_ndarray_coo_type": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "numpy.result_type",
    "sparse.coo.common._memoize_dtype"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common._dot_ndarray_coo_type._dot_ndarray_coo": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range",
    "sparse.coo.common.numba"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common._memoize_dtype": {
  "data": {
   "lineno": 1168
  },
  "type": "function"
 },
 "sparse.coo.common._memoize_dtype.wrapped": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "f",
    "functools.wraps",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common._replace_nan": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "numpy.floating",
    "numpy.isnan",
    "numpy.issubdtype",
    "sparse.coo.common.where"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.argwhere": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.asCOO": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "COO",
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.concatenate": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "COO",
    "all",
    "check_consistent_fill_value",
    "isinstance",
    "list",
    "normalize_axis",
    "numpy.concatenate",
    "range",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.dot": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "TypeError",
    "check_zero_fill_value",
    "hasattr",
    "sparse.coo.common.tensordot",
    "type"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.eye": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "COO",
    "float",
    "int",
    "max",
    "min",
    "numpy.arange",
    "numpy.array",
    "numpy.intp",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.full": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "COO",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.intp",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.full_like": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "sparse.coo.common.full"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.kron": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "COO",
    "ValueError",
    "_cartesian_product",
    "check_zero_fill_value",
    "isinstance",
    "max",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ndim",
    "sparse.coo.common.asCOO",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.linear_loc": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "numpy.add",
    "numpy.intp",
    "numpy.multiply",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.matmul": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_matmul_recurser",
    "check_zero_fill_value",
    "dot",
    "hasattr",
    "list",
    "numpy.prod",
    "range",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.matmul._matmul_recurser": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "_matmul_recurser",
    "all",
    "dot",
    "isinstance",
    "max",
    "numpy.stack",
    "range",
    "stack"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.nanmax": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "RuntimeWarning",
    "isscalar",
    "numpy.fmax",
    "numpy.isnan",
    "sparse.coo.common.asCOO",
    "sparse.coo.common.warnings"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.nanmean": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "RuntimeWarning",
    "functools.reduce",
    "isinstance",
    "numpy.errstate",
    "numpy.floating",
    "numpy.isnan",
    "numpy.issubdtype",
    "numpy.sum",
    "numpy.true_divide",
    "range",
    "sparse.coo.common.asCOO",
    "sparse.coo.common.operator",
    "sparse.coo.common.warnings",
    "tuple",
    "where"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.nanmin": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "RuntimeWarning",
    "isscalar",
    "numpy.fmin",
    "numpy.isnan",
    "sparse.coo.common.asCOO",
    "sparse.coo.common.warnings"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.nanprod": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "nanreduce",
    "numpy.multiply",
    "sparse.coo.common.asCOO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.nanreduce": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "sparse.coo.common._replace_nan"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.nansum": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "nanreduce",
    "numpy.add",
    "sparse.coo.common.asCOO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.coo.common.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "sparse.coo.common.ones": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "float",
    "numpy.dtype",
    "sparse.coo.common.full"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.ones_like": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "sparse.coo.common.ones"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sparse.coo.common.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sparse.coo.common.roll": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "COO",
    "ValueError",
    "as_coo",
    "collections.abc.Iterable",
    "isinstance",
    "len",
    "normalize_axis",
    "numpy.copy",
    "numpy.full",
    "numpy.ndim",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sparse.coo.common.stack": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "COO",
    "check_consistent_fill_value",
    "isinstance",
    "len",
    "list",
    "normalize_axis",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.intp",
    "numpy.stack",
    "range"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.tensordot": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_dot",
    "check_zero_fill_value",
    "iter",
    "len",
    "list",
    "range",
    "sparse.coo.common.asCOO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.tril": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "COO",
    "NotImplementedError",
    "check_zero_fill_value"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.triu": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "COO",
    "NotImplementedError",
    "check_zero_fill_value"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sparse.coo.common.where": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "ValueError",
    "elemwise",
    "numpy.where",
    "sparse.coo.common.asCOO",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "sparse.coo.common.zeros": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "float",
    "numpy.dtype",
    "sparse.coo.common.full"
   ]
  },
  "type": "function"
 },
 "sparse.coo.common.zeros_like": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "sparse.coo.common.zeros"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core": {
  "data": {
   "symbols_in_volume": [
    "numpy.add",
    "numpy.multiply",
    "numpy.power"
   ]
  },
  "type": "module"
 },
 "sparse.coo.core.COO": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.lib.mixins.NDArrayOperatorsMixin",
    "round"
   ]
  },
  "type": "class"
 },
 "sparse.coo.core.COO.T": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "property",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.__array_ufunc__": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "NotImplemented",
    "ValueError",
    "all",
    "elemwise",
    "isinstance",
    "method",
    "sparse.coo.core.COO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.__getstate__": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "sparse.coo.core.COO.__init__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "as_coo",
    "collections.abc.Iterable",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.broadcast_to",
    "numpy.intp",
    "numpy.uint64",
    "numpy.zeros",
    "sorted",
    "sparse.coo.core.warnings",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.__len__": {
  "data": {
   "lineno": 585
  },
  "type": "function"
 },
 "sparse.coo.core.COO.__matmul__": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": [
    "NotImplemented",
    "NotImplementedError",
    "matmul"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.__rmatmul__": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "NotImplemented",
    "NotImplementedError",
    "matmul"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.__setstate__": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "sparse.coo.core.COO.__sizeof__": {
  "data": {
   "lineno": 608
  },
  "type": "function"
 },
 "sparse.coo.core.COO.__str__": {
  "data": {
   "lineno": 613
  },
  "type": "function"
 },
 "sparse.coo.core.COO._make_shallow_copy_of": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO._prune": {
  "data": {
   "lineno": 1768,
   "symbols_in_volume": [
    "equivalent"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO._reduce": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "sparse.coo.core.COO",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO._sort_indices": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO._sum_duplicates": {
  "data": {
   "lineno": 1732,
   "symbols_in_volume": [
    "len",
    "numpy.add.reduceat",
    "numpy.append",
    "numpy.diff",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO._tocsr": {
  "data": {
   "lineno": 1612,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bincount",
    "numpy.cumsum",
    "numpy.int64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.all": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "numpy.logical_and.reduce"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.any": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "numpy.logical_or.reduce"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.asformat": {
  "data": {
   "lineno": 1969,
   "symbols_in_volume": [
    "NotImplementedError",
    "format",
    "sparse.coo.core.COO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.astype": {
  "data": {
   "lineno": 1875,
   "symbols_in_volume": [
    "numpy.ndarray.astype"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.broadcast_to": {
  "data": {
   "lineno": 1786,
   "symbols_in_volume": [
    "broadcast_to"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.clip": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "max",
    "min",
    "numpy.clip",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.conj": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "numpy.conj"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.copy": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "copy.copy",
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.dot": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "dot"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.dtype": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.enable_caching": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "collections.defaultdict",
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.from_iter": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "classmethod",
    "collections.abc.Iterable",
    "collections.abc.Sized",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.stack",
    "numpy.uint8",
    "sparse.coo.core.COO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.from_numpy": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "_zero_of_dtype",
    "classmethod",
    "cls",
    "equivalent",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.empty",
    "numpy.ndarray",
    "numpy.uint8",
    "numpy.vstack",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.from_scipy_sparse": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "classmethod",
    "numpy.empty",
    "sparse.coo.core.COO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.imag": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "numpy.imag",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.linear_loc": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "linear_loc"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.max": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "numpy.maximum.reduce"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.maybe_densify": {
  "data": {
   "lineno": 1893,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.mean": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "functools.reduce",
    "isinstance",
    "issubclass",
    "numpy.bool_",
    "numpy.dtype",
    "numpy.float16",
    "numpy.integer",
    "numpy.true_divide",
    "range",
    "sparse.coo.core.operator",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.min": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "numpy.minimum.reduce"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.nbytes": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.nnz": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.nonzero": {
  "data": {
   "lineno": 1942,
   "symbols_in_volume": [
    "check_zero_fill_value",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.prod": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "numpy.multiply.reduce"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.real": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "numpy.real",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.reduce": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "ValueError",
    "_grouped_reduce",
    "_keepdims",
    "equivalent",
    "isinstance",
    "method",
    "normalize_axis",
    "numpy.intp",
    "numpy.prod",
    "range",
    "reduce_super_ufunc",
    "set",
    "sparse.coo.core.COO",
    "sparse.coo.core._reduce_super_ufunc",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.reshape": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": [
    "NotImplementedError",
    "any",
    "collections.abc.Iterable",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "linear_loc",
    "numpy.empty",
    "numpy.intp",
    "numpy.prod",
    "sparse.coo.core.COO",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.round": {
  "data": {
   "lineno": 1812,
   "symbols_in_volume": [
    "isinstance",
    "numpy.round",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.sum": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "numpy.add.reduce"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.to_scipy_sparse": {
  "data": {
   "lineno": 1578,
   "symbols_in_volume": [
    "ValueError",
    "check_zero_fill_value"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.tocsc": {
  "data": {
   "lineno": 1665,
   "symbols_in_volume": [
    "AttributeError",
    "check_zero_fill_value"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.tocsr": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": [
    "AttributeError",
    "check_zero_fill_value"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.todense": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "len",
    "numpy.full",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.COO.transpose": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "normalize_axis",
    "numpy.unique",
    "range",
    "reversed",
    "sparse.coo.core.COO",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sparse.coo.core.Iterator": {
  "data": {
   "shadows": "collections.abc.Iterator"
  },
  "type": "import"
 },
 "sparse.coo.core.NDArrayOperatorsMixin": {
  "data": {
   "shadows": "numpy.lib.mixins.NDArrayOperatorsMixin"
  },
  "type": "import"
 },
 "sparse.coo.core.Sized": {
  "data": {
   "shadows": "collections.abc.Sized"
  },
  "type": "import"
 },
 "sparse.coo.core._calc_counts_invidx": {
  "data": {
   "lineno": 2052,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "range",
    "sparse.coo.core.numba"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core._copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "sparse.coo.core._grouped_reduce": {
  "data": {
   "lineno": 2076,
   "symbols_in_volume": [
    "method.reduceat",
    "sparse.coo.core._calc_counts_invidx"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core._keepdims": {
  "data": {
   "lineno": 2045,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core._reduce_super_ufunc": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sparse.coo.core.as_coo": {
  "data": {
   "lineno": 1998,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "collections.abc.Iterable",
    "collections.abc.Iterator",
    "hasattr",
    "isinstance",
    "numpy.ndarray",
    "sparse.coo.core.COO",
    "type"
   ]
  },
  "type": "function"
 },
 "sparse.coo.core.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sparse.coo.core.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "sparse.coo.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.coo.core.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "sparse.coo.core.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sparse.coo.core.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sparse.coo.core.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sparse.coo.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sparse.coo.indexing": {
  "data": {},
  "type": "module"
 },
 "sparse.coo.indexing.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse.coo.indexing._AdvIdxInfo": {
  "data": {
   "lineno": 586
  },
  "type": "class"
 },
 "sparse.coo.indexing._AdvIdxInfo.__init__": {
  "data": {
   "lineno": 587
  },
  "type": "function"
 },
 "sparse.coo.indexing._compute_mask": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "_filter_pairs",
    "_get_mask_pairs",
    "_get_slice_len",
    "_join_adjacent_pairs",
    "len",
    "max",
    "numpy.array",
    "numpy.intp",
    "numpy.log",
    "sparse.coo.indexing.numba"
   ]
  },
  "type": "function"
 },
 "sparse.coo.indexing._compute_multi_mask": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "_compute_mask",
    "enumerate",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.intp",
    "range",
    "sparse.coo.indexing.numba"
   ]
  },
  "type": "function"
 },
 "sparse.coo.indexing._filter_pairs": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "len",
    "range",
    "sparse.coo.indexing.numba"
   ]
  },
  "type": "function"
 },
 "sparse.coo.indexing._get_mask_pairs": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "len",
    "numpy.searchsorted",
    "range",
    "sparse.coo.indexing.numba"
   ]
  },
  "type": "function"
 },
 "sparse.coo.indexing._get_slice_len": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "sparse.coo.indexing.numba"
   ]
  },
  "type": "function"
 },
 "sparse.coo.indexing._ind_ar_from_indices": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "numbers.Integral",
    "numpy.empty",
    "numpy.intp",
    "slice"
   ]
  },
  "type": "function"
 },
 "sparse.coo.indexing._join_adjacent_pairs": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "len",
    "range",
    "sparse.coo.indexing.numba"
   ]
  },
  "type": "function"
 },
 "sparse.coo.indexing._mask": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "IndexError",
    "_AdvIdxInfo",
    "_compute_mask",
    "_compute_multi_mask",
    "_ind_ar_from_indices",
    "_prune_indices",
    "_separate_adv_indices",
    "len",
    "slice"
   ]
  },
  "type": "function"
 },
 "sparse.coo.indexing._prune_indices": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "isinstance",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo.indexing._separate_adv_indices": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "sparse.coo.indexing.getitem": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "COO",
    "Ellipsis",
    "ValueError",
    "_mask",
    "_zero_of_dtype",
    "all",
    "equivalent",
    "isinstance",
    "itertools.zip_longest",
    "len",
    "list",
    "normalize_index",
    "numbers.Integral",
    "numpy.asarray",
    "numpy.empty",
    "numpy.intp",
    "numpy.ndarray",
    "numpy.stack",
    "numpy.uint8",
    "numpy.where",
    "numpy.zeros",
    "range",
    "slice",
    "sorted",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.indexing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.coo.indexing.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "sparse.coo.indexing.zip_longest": {
  "data": {
   "shadows": "itertools.zip_longest"
  },
  "type": "import"
 },
 "sparse.coo.umath": {
  "data": {},
  "type": "module"
 },
 "sparse.coo.umath._Elemwise": {
  "data": {
   "lineno": 383
  },
  "type": "class"
 },
 "sparse.coo.umath._Elemwise.__init__": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "COO",
    "COO.from_scipy_sparse",
    "isinstance",
    "isscalar",
    "numpy.asarray",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath._Elemwise._check_broadcast": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "COO",
    "ValueError",
    "isinstance",
    "sparse.coo.umath._get_nary_broadcast_shape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath._Elemwise._get_fill_value": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "COO",
    "IndexError",
    "TypeError",
    "ValueError",
    "_zero_of_dtype",
    "equivalent",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath._Elemwise._get_func_coords_data": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "COO",
    "TypeError",
    "all",
    "equivalent",
    "numpy.asarray",
    "numpy.bool",
    "numpy.broadcast_arrays",
    "numpy.broadcast_to",
    "numpy.empty",
    "numpy.ones",
    "sparse.coo.umath._get_broadcast_parameters",
    "sparse.coo.umath._get_expanded_coords_data",
    "sparse.coo.umath._get_nary_broadcast_shape",
    "sparse.coo.umath.itertools",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath._Elemwise._match_coo": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "COO",
    "NotImplementedError",
    "ValueError",
    "all",
    "id",
    "len",
    "linear_loc",
    "numpy.arange",
    "numpy.argsort",
    "sparse.coo.umath._get_broadcast_parameters",
    "sparse.coo.umath._get_broadcast_shape",
    "sparse.coo.umath._get_expanded_coords_data",
    "sparse.coo.umath._get_matching_coords",
    "sparse.coo.umath._get_reduced_coords",
    "sparse.coo.umath._get_reduced_shape",
    "sparse.coo.umath._match_arrays",
    "staticmethod",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath._Elemwise.get_result": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "COO",
    "NotImplemented",
    "any",
    "isinstance",
    "len",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.intp",
    "sparse.coo.umath.itertools"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath._cartesian_product": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "len",
    "numpy.broadcast_arrays",
    "numpy.empty",
    "numpy.ix_",
    "numpy.prod",
    "numpy.result_type"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath._get_broadcast_parameters": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "itertools.zip_longest"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath._get_broadcast_shape": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "itertools.zip_longest",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath._get_expanded_coords_data": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "_cartesian_product",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.empty",
    "numpy.intp",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath._get_matching_coords": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.asarray",
    "numpy.intp",
    "numpy.uint8",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath._get_nary_broadcast_shape": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "_get_broadcast_shape",
    "str"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath._get_reduced_coords": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath._get_reduced_shape": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath._match_arrays": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.uintp",
    "sparse.coo.umath.numba"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath.broadcast_to": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "COO",
    "all",
    "enumerate",
    "sorted",
    "sparse.coo.umath._get_broadcast_parameters",
    "sparse.coo.umath._get_broadcast_shape",
    "sparse.coo.umath._get_expanded_coords_data",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath.elemwise": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "_Elemwise"
   ]
  },
  "type": "function"
 },
 "sparse.coo.umath.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "sparse.coo.umath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.coo.umath.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "sparse.coo.umath.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sparse.coo.umath.zip_longest": {
  "data": {
   "shadows": "itertools.zip_longest"
  },
  "type": "import"
 },
 "sparse.dok": {
  "data": {},
  "type": "module"
 },
 "sparse.dok.DOK": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "sparse.dok.DOK.__getitem__": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "NotImplementedError",
    "all",
    "int",
    "isinstance",
    "len",
    "normalize_index",
    "numbers.Integral",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "map",
    "numpy.asarray",
    "numpy.dtype",
    "numpy.ndarray",
    "numpy.result_type",
    "sparse.dok.DOK",
    "super"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.__setitem__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "normalize_index",
    "numbers.Integral",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.__str__": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "sparse.dok.DOK._make_shallow_copy_of": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK._setitem": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "enumerate",
    "equivalent",
    "isinstance",
    "len",
    "max",
    "min",
    "numbers.Integral",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.asformat": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "COO",
    "COO.from_iter",
    "NotImplementedError",
    "format",
    "sparse.dok.DOK"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.from_coo": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.from_numpy": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "numpy.nonzero",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.nnz": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.to_coo": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "COO"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.todense": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "sparse.dok.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse.dok.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.io": {
  "data": {},
  "type": "module"
 },
 "sparse.io.load_npz": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "COO",
    "KeyError",
    "RuntimeError",
    "numpy.load",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.io.save_npz": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.savez",
    "numpy.savez_compressed"
   ]
  },
  "type": "function"
 },
 "sparse.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sparse.slicing": {
  "data": {},
  "type": "module"
 },
 "sparse.slicing.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse.slicing.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sparse.slicing.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "sparse.slicing._sanitize_index_element": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.check_index": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "IndexError",
    "bool",
    "collections.abc.Iterable",
    "isinstance",
    "len",
    "numbers.Integral",
    "numpy.asanyarray",
    "numpy.integer",
    "numpy.issubdtype",
    "slice"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.clip_slice": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "min",
    "slice"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sparse.slicing.normalize_index": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "IndexError",
    "check_index",
    "hasattr",
    "isinstance",
    "len",
    "map",
    "posify_index",
    "replace_ellipsis",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.slicing.posify_index": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "map",
    "numbers.Integral",
    "numpy.asanyarray",
    "numpy.ndarray",
    "numpy.where",
    "slice",
    "sparse.slicing.math",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.replace_ellipsis": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Ellipsis",
    "IndexError",
    "enumerate",
    "len",
    "slice",
    "sum"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.replace_none": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.sanitize_index": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "IndexError",
    "_sanitize_index_element",
    "isinstance",
    "len",
    "numbers.Number",
    "numpy.asanyarray",
    "numpy.bool_",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.nonzero",
    "slice"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array": {
  "data": {},
  "type": "module"
 },
 "sparse.sparse_array.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sparse.sparse_array.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "sparse.sparse_array.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse.sparse_array.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sparse.sparse_array.SparseArray": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "sparse.sparse_array.SparseArray.__array__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.__array_function__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplemented",
    "getattr",
    "hasattr",
    "isinstance",
    "sparse",
    "sparse_func",
    "type",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "_zero_of_dtype",
    "all",
    "collections.abc.Iterable",
    "hasattr",
    "int",
    "isinstance",
    "numbers.Integral",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.asformat": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.density": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.ndim": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.nnz": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.size": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "functools.reduce",
    "property",
    "sparse.sparse_array.operator"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.todense": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sparse.sparse_array.densify": {
  "data": {
   "shadows": "_AUTO_DENSIFICATION_ENABLED"
  },
  "type": "import"
 },
 "sparse.sparse_array.module": {
  "data": {
   "shadows": "sparse"
  },
  "type": "import"
 },
 "sparse.sparse_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.sparse_array.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sparse.sparse_array.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sparse.utils": {
  "data": {},
  "type": "module"
 },
 "sparse.utils.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse.utils.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "sparse.utils._zero_of_dtype": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sparse.utils.assert_eq": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "assert_nnz",
    "check_equal",
    "hasattr",
    "is_canonical",
    "isinstance",
    "numpy.allclose",
    "numpy.array_equal",
    "numpy.integer",
    "numpy.issubdtype",
    "sparse.utils.functools"
   ]
  },
  "type": "function"
 },
 "sparse.utils.assert_nnz": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "_zero_of_dtype",
    "equivalent",
    "hasattr",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "sparse.utils.check_consistent_fill_value": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "sparse.utils.equivalent"
   ]
  },
  "type": "function"
 },
 "sparse.utils.check_zero_fill_value": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "hasattr",
    "sparse.utils._zero_of_dtype",
    "sparse.utils.equivalent"
   ]
  },
  "type": "function"
 },
 "sparse.utils.equivalent": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "any",
    "numpy.asarray",
    "numpy.bool_",
    "numpy.character",
    "numpy.integer",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "sparse.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "sparse.utils.is_canonical": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "equivalent",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "sparse.utils.isscalar": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "isinstance",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "sparse.utils.normalize_axis": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "collections.abc.Iterable",
    "int",
    "isinstance",
    "numbers.Integral",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.utils.random": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "COO",
    "data_rvs",
    "format",
    "int",
    "isinstance",
    "numbers.Integral",
    "numpy.empty",
    "numpy.intp",
    "numpy.min_scalar_type",
    "numpy.prod",
    "numpy.random",
    "numpy.random.RandomState",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "sparse.utils.random_value_array": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "sparse.utils.random_value_array.replace_values": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "int",
    "numpy.empty",
    "numpy.float_",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 }
}