{
 "sparse": {
  "data": {},
  "type": "module"
 },
 "sparse.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sparse.__version__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "sparse.compatibility": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError"
   ]
  },
  "type": "module"
 },
 "sparse.compatibility.int": {
  "data": {
   "shadows": "builtins.int"
  },
  "type": "import"
 },
 "sparse.compatibility.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "sparse.compatibility.zip": {
  "data": {
   "shadows": "builtins.zip"
  },
  "type": "import"
 },
 "sparse.compatibility.zip_longest": {
  "data": {
   "shadows": "itertools.zip_longest"
  },
  "type": "import"
 },
 "sparse.coo": {
  "data": {},
  "type": "module"
 },
 "sparse.coo.COO": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.lib.mixins.NDArrayOperatorsMixin"
   ]
  },
  "type": "class"
 },
 "sparse.coo.COO.T": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "property",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.__array__": {
  "data": {
   "lineno": 1191
  },
  "type": "function"
 },
 "sparse.coo.COO.__array_ufunc__": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "NotImplemented",
    "elemwise",
    "method",
    "sparse.coo.COO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.__getitem__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "Ellipsis",
    "_mask",
    "_zero_of_dtype",
    "all",
    "collections.Iterable",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "normalize_index",
    "numpy.bool",
    "numpy.empty",
    "numpy.min_scalar_type",
    "numpy.ones",
    "numpy.stack",
    "numpy.sum",
    "numpy.uint8",
    "numpy.where",
    "numpy.zeros",
    "range",
    "slice",
    "sparse.coo.COO",
    "sparse.coo.numbers",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "collections.Iterable",
    "dict",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.asarray",
    "numpy.min_scalar_type",
    "numpy.ndarray",
    "numpy.stack",
    "numpy.uint64",
    "numpy.uint8",
    "numpy.zeros",
    "sorted",
    "sparse.coo.COO",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.__len__": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "sparse.coo.COO.__matmul__": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "NotImplemented",
    "NotImplementedError",
    "dot"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.__rmatmul__": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "NotImplemented",
    "NotImplementedError",
    "dot"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.__sizeof__": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "sparse.coo.COO.__str__": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "sparse.coo.COO._make_shallow_copy_of": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "sparse.coo.COO",
    "super"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO._reduce": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "sparse.coo.COO",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO._tocsr": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bincount",
    "numpy.cumsum",
    "numpy.int64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.astype": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "elemwise",
    "numpy.ndarray.astype"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.broadcast_to": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": [
    "_get_broadcast_parameters",
    "_get_broadcast_shape",
    "_get_expanded_coords_data",
    "sparse.coo.COO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.dot": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "dot"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.dtype": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.enable_caching": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "collections.defaultdict",
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.from_numpy": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.empty",
    "numpy.uint8",
    "numpy.vstack",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.from_scipy_sparse": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "classmethod",
    "numpy.empty",
    "sparse.coo.COO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.linear_loc": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "_linear_loc"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.max": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.maybe_densify": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.min": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.nanreduce": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "_replace_nan"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.nbytes": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.nnz": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.prod": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.reduce": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "ValueError",
    "_grouped_reduce",
    "_keepdims",
    "_zero_of_dtype",
    "isinstance",
    "method",
    "numpy.dtype",
    "numpy.prod",
    "range",
    "set",
    "sparse.coo.COO",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.reshape": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "int",
    "len",
    "max",
    "numpy.empty",
    "numpy.min_scalar_type",
    "numpy.prod",
    "sparse.coo.COO",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.round": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": [
    "elemwise",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.sort_indices": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.sum": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "numpy.add"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.sum_duplicates": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "len",
    "numpy.add.reduceat",
    "numpy.append",
    "numpy.diff",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.to_scipy_sparse": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.tocsc": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.tocsr": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.todense": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.COO.transpose": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "len",
    "list",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.unique",
    "range",
    "reversed",
    "sparse.coo.COO",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "sparse.coo.NDArrayOperatorsMixin": {
  "data": {
   "shadows": "numpy.lib.mixins.NDArrayOperatorsMixin"
  },
  "type": "import"
 },
 "sparse.coo._cartesian_product": {
  "data": {
   "lineno": 2503,
   "symbols_in_volume": [
    "len",
    "numpy.broadcast_arrays",
    "numpy.empty",
    "numpy.ix_",
    "numpy.prod",
    "numpy.result_type"
   ]
  },
  "type": "function"
 },
 "sparse.coo._dot": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": [
    "isinstance",
    "sparse.coo.COO"
   ]
  },
  "type": "function"
 },
 "sparse.coo._elemwise_n_ary": {
  "data": {
   "lineno": 2115,
   "symbols_in_volume": [
    "ValueError",
    "_get_nary_broadcast_shape",
    "_unmatch_coo",
    "_zero_of_dtype",
    "any",
    "func",
    "isinstance",
    "itertools.product",
    "len",
    "list",
    "max",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.min_scalar_type",
    "sparse.coo.COO",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.coo._elemwise_unary": {
  "data": {
   "lineno": 2530,
   "symbols_in_volume": [
    "ValueError",
    "_zero_of_dtype",
    "func",
    "sparse.coo.COO",
    "str"
   ]
  },
  "type": "function"
 },
 "sparse.coo._get_broadcast_parameters": {
  "data": {
   "lineno": 2379,
   "symbols_in_volume": [
    "zip_longest"
   ]
  },
  "type": "function"
 },
 "sparse.coo._get_broadcast_shape": {
  "data": {
   "lineno": 2346,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "max",
    "tuple",
    "zip",
    "zip_longest"
   ]
  },
  "type": "function"
 },
 "sparse.coo._get_expanded_coords_data": {
  "data": {
   "lineno": 2445,
   "symbols_in_volume": [
    "_cartesian_product",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.empty",
    "numpy.min_scalar_type",
    "numpy.result_type",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo._get_matching_coords": {
  "data": {
   "lineno": 2548,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "max",
    "numpy.asarray",
    "numpy.min_scalar_type",
    "numpy.uint8",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo._get_nary_broadcast_shape": {
  "data": {
   "lineno": 2314,
   "symbols_in_volume": [
    "ValueError",
    "_get_broadcast_shape",
    "str"
   ]
  },
  "type": "function"
 },
 "sparse.coo._get_reduced_coords": {
  "data": {
   "lineno": 2402,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "sparse.coo._get_reduced_shape": {
  "data": {
   "lineno": 2424,
   "symbols_in_volume": [
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo._grouped_reduce": {
  "data": {
   "lineno": 2011,
   "symbols_in_volume": [
    "len",
    "method.reduceat",
    "numpy.concatenate",
    "numpy.diff",
    "numpy.flatnonzero"
   ]
  },
  "type": "function"
 },
 "sparse.coo._keepdims": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "sparse.coo._linear_loc": {
  "data": {
   "lineno": 2583,
   "symbols_in_volume": [
    "enumerate",
    "functools.reduce",
    "numpy.add",
    "numpy.min_scalar_type",
    "numpy.multiply",
    "numpy.zeros",
    "sparse.coo.operator"
   ]
  },
  "type": "function"
 },
 "sparse.coo._mask": {
  "data": {
   "lineno": 1757,
   "symbols_in_volume": [
    "collections.Iterable",
    "isinstance",
    "len",
    "numpy.bool",
    "numpy.zeros",
    "slice",
    "sparse.coo.numbers"
   ]
  },
  "type": "function"
 },
 "sparse.coo._match_arrays": {
  "data": {
   "lineno": 1969,
   "symbols_in_volume": [
    "len",
    "numpy.argsort",
    "numpy.array",
    "numpy.cumsum",
    "numpy.diff",
    "numpy.flatnonzero",
    "numpy.int_",
    "numpy.ones",
    "numpy.r_",
    "numpy.repeat",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "sparse.coo._match_coo": {
  "data": {
   "lineno": 2178,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "_get_broadcast_parameters",
    "_get_broadcast_shape",
    "_get_matching_coords",
    "_get_reduced_coords",
    "_get_reduced_shape",
    "_linear_loc",
    "all",
    "id",
    "len",
    "numpy.argsort",
    "sparse.coo.COO",
    "sparse.coo._match_arrays",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo._replace_nan": {
  "data": {
   "lineno": 1779,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.floating",
    "numpy.isnan",
    "numpy.issubdtype",
    "sparse.coo.COO"
   ]
  },
  "type": "function"
 },
 "sparse.coo._unmatch_coo": {
  "data": {
   "lineno": 2252,
   "symbols_in_volume": [
    "PositinalArgumentPartial",
    "_get_nary_broadcast_shape",
    "_zero_of_dtype",
    "all",
    "enumerate",
    "func",
    "numpy.asarray",
    "numpy.bool",
    "numpy.ones",
    "partial",
    "sparse.coo.COO",
    "sparse.coo._match_coo",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.coo.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sparse.coo.asCOO": {
  "data": {
   "lineno": 2598,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sparse.coo.COO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.concatenate": {
  "data": {
   "lineno": 1806,
   "symbols_in_volume": [
    "all",
    "any",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.concatenate",
    "numpy.min_scalar_type",
    "numpy.uint8",
    "range",
    "set",
    "sparse.coo.COO",
    "sum"
   ]
  },
  "type": "function"
 },
 "sparse.coo.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "sparse.coo.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "sparse.coo.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sparse.coo.dot": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "sparse.coo.tensordot",
    "type"
   ]
  },
  "type": "function"
 },
 "sparse.coo.elemwise": {
  "data": {
   "lineno": 2046,
   "symbols_in_volume": [
    "PositinalArgumentPartial",
    "ValueError",
    "_elemwise_n_ary",
    "_elemwise_unary",
    "enumerate",
    "func",
    "isinstance",
    "isscalar",
    "len",
    "list",
    "numpy.ndarray",
    "sparse.coo.COO",
    "str"
   ]
  },
  "type": "function"
 },
 "sparse.coo.nanmax": {
  "data": {
   "lineno": 2707,
   "symbols_in_volume": [
    "RuntimeWarning",
    "isscalar",
    "numpy.fmax",
    "numpy.isnan",
    "sparse.coo.asCOO",
    "sparse.coo.warnings"
   ]
  },
  "type": "function"
 },
 "sparse.coo.nanmin": {
  "data": {
   "lineno": 2744,
   "symbols_in_volume": [
    "RuntimeWarning",
    "isscalar",
    "numpy.fmin",
    "numpy.isnan",
    "sparse.coo.asCOO",
    "sparse.coo.warnings"
   ]
  },
  "type": "function"
 },
 "sparse.coo.nanprod": {
  "data": {
   "lineno": 2781,
   "symbols_in_volume": [
    "numpy.multiply",
    "sparse.coo.asCOO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.nansum": {
  "data": {
   "lineno": 2677,
   "symbols_in_volume": [
    "numpy.add",
    "sparse.coo.asCOO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.coo.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "sparse.coo.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sparse.coo.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sparse.coo.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "sparse.coo.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sparse.coo.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "sparse.coo.stack": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "all",
    "any",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.min_scalar_type",
    "numpy.stack",
    "numpy.uint8",
    "range",
    "set",
    "sparse.coo.COO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.tensordot": {
  "data": {
   "lineno": 1606,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_dot",
    "functools.reduce",
    "isinstance",
    "iter",
    "len",
    "list",
    "numpy.asarray",
    "numpy.matrix",
    "range",
    "sparse.coo.COO",
    "sparse.coo.operator"
   ]
  },
  "type": "function"
 },
 "sparse.coo.tril": {
  "data": {
   "lineno": 1934,
   "symbols_in_volume": [
    "NotImplementedError",
    "sparse.coo.COO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.triu": {
  "data": {
   "lineno": 1902,
   "symbols_in_volume": [
    "NotImplementedError",
    "sparse.coo.COO"
   ]
  },
  "type": "function"
 },
 "sparse.coo.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "sparse.coo.where": {
  "data": {
   "lineno": 2630,
   "symbols_in_volume": [
    "ValueError",
    "numpy.where",
    "sparse.coo.asCOO",
    "sparse.coo.elemwise",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.dok": {
  "data": {},
  "type": "module"
 },
 "sparse.dok.DOK": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "sparse.dok.DOK.__getitem__": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "NotImplementedError",
    "_zero_of_dtype",
    "all",
    "int",
    "isinstance",
    "len",
    "normalize_index",
    "numbers.Integral",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "map",
    "numpy.asarray",
    "numpy.dtype",
    "numpy.ndarray",
    "numpy.result_type",
    "sparse.dok.DOK",
    "super"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.__setitem__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "normalize_index",
    "numbers.Integral",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.__str__": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "sparse.dok.DOK._make_shallow_copy_of": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "sparse.dok.DOK",
    "super"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK._setitem": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_zero_of_dtype",
    "enumerate",
    "isinstance",
    "len",
    "max",
    "min",
    "numbers.Integral",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.from_coo": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.from_numpy": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "numpy.nonzero",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.nnz": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.to_coo": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "COO"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.todense": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sparse.dok.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse.dok.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.slicing": {
  "data": {},
  "type": "module"
 },
 "sparse.slicing.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse.slicing.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "sparse.slicing._sanitize_index_element": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "int",
    "isinstance",
    "numbers.Number",
    "type"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.check_index": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "IndexError",
    "bool",
    "isinstance",
    "len",
    "list",
    "numpy.asanyarray",
    "numpy.integer",
    "numpy.isnan",
    "numpy.issubdtype",
    "numpy.ndarray",
    "slice"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sparse.slicing.normalize_index": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "IndexError",
    "check_index",
    "hasattr",
    "isinstance",
    "len",
    "map",
    "posify_index",
    "replace_ellipsis",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.normalize_slice": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "slice",
    "sparse.slicing.math"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.slicing.posify_index": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "map",
    "numbers.Integral",
    "numpy.asanyarray",
    "numpy.ndarray",
    "numpy.where",
    "sparse.slicing.math",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.replace_ellipsis": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Ellipsis",
    "IndexError",
    "enumerate",
    "len",
    "slice",
    "sum"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.sanitize_index": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "_sanitize_index_element",
    "bool",
    "float",
    "isinstance",
    "len",
    "numbers.Number",
    "numpy.allclose",
    "numpy.asanyarray",
    "numpy.flatnonzero",
    "numpy.integer",
    "numpy.intp",
    "numpy.isclose",
    "numpy.issubdtype",
    "numpy.nonzero",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array": {
  "data": {},
  "type": "module"
 },
 "sparse.sparse_array.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sparse.sparse_array.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse.sparse_array.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "sparse.sparse_array.SparseArray": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "sparse.sparse_array.SparseArray.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "collections.Iterable",
    "int",
    "isinstance",
    "numbers.Integral",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.density": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.ndim": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.nnz": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.size": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "functools.reduce",
    "property",
    "sparse.sparse_array.operator"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sparse.sparse_array.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sparse.sparse_array.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sparse.sparse_array.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sparse.sparse_array.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sparse.sparse_array.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sparse.utils": {
  "data": {},
  "type": "module"
 },
 "sparse.utils.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse.utils.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "sparse.utils.PositinalArgumentPartial": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sparse.utils.PositinalArgumentPartial.__call__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "sparse.utils.PositinalArgumentPartial.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "collections.Iterable",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "sparse.utils.PositinalArgumentPartial.__repr__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "sparse.utils.PositinalArgumentPartial.__str__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sparse.utils._zero_of_dtype": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sparse.utils.assert_eq": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "hasattr",
    "is_lexsorted",
    "isinstance",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "sparse.utils.is_lexsorted": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "sparse.utils.isscalar": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "isinstance",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "sparse.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.utils.random": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "COO",
    "DOK",
    "data_rvs",
    "format",
    "int",
    "isinstance",
    "numbers.Integral",
    "numpy.empty",
    "numpy.min_scalar_type",
    "numpy.prod",
    "numpy.random",
    "numpy.random.RandomState",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "sparse.utils.random_value_array": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "sparse.utils.random_value_array.replace_values": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "int",
    "numpy.empty",
    "numpy.float_",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 }
}