{
 "sparse": {
  "data": {},
  "type": "module"
 },
 "sparse.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sparse.__version__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "sparse.compatibility": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError"
   ]
  },
  "type": "module"
 },
 "sparse.compatibility.int": {
  "data": {
   "shadows": "builtins.int"
  },
  "type": "import"
 },
 "sparse.compatibility.range": {
  "data": {
   "shadows": "builtins.range"
  },
  "type": "import"
 },
 "sparse.compatibility.zip": {
  "data": {
   "shadows": "builtins.zip"
  },
  "type": "import"
 },
 "sparse.compatibility.zip_longest": {
  "data": {
   "shadows": "itertools.zip_longest"
  },
  "type": "import"
 },
 "sparse.dok": {
  "data": {},
  "type": "module"
 },
 "sparse.dok.DOK": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "sparse.dok.DOK.__getitem__": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "NotImplementedError",
    "_zero_of_dtype",
    "all",
    "int",
    "isinstance",
    "len",
    "normalize_index",
    "numbers.Integral",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "map",
    "numpy.asarray",
    "numpy.dtype",
    "numpy.ndarray",
    "numpy.result_type",
    "sparse.dok.DOK",
    "super"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.__setitem__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "normalize_index",
    "numbers.Integral",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.__str__": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "sparse.dok.DOK._make_shallow_copy_of": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "sparse.dok.DOK",
    "super"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK._setitem": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "_zero_of_dtype",
    "enumerate",
    "isinstance",
    "len",
    "max",
    "min",
    "numbers.Integral",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.from_coo": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.from_numpy": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "numpy.nonzero",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.nnz": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.to_coo": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "COO"
   ]
  },
  "type": "function"
 },
 "sparse.dok.DOK.todense": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sparse.dok.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse.dok.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.slicing": {
  "data": {},
  "type": "module"
 },
 "sparse.slicing.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse.slicing.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "sparse.slicing._sanitize_index_element": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "int",
    "isinstance",
    "numbers.Number",
    "type"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.check_index": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "IndexError",
    "bool",
    "isinstance",
    "len",
    "list",
    "numpy.asanyarray",
    "numpy.integer",
    "numpy.isnan",
    "numpy.issubdtype",
    "numpy.ndarray",
    "slice"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sparse.slicing.normalize_index": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "IndexError",
    "hasattr",
    "isinstance",
    "len",
    "map",
    "slice",
    "sparse.slicing.check_index",
    "sparse.slicing.posify_index",
    "sparse.slicing.replace_ellipsis",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.normalize_slice": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "isinstance",
    "max",
    "slice",
    "sparse.slicing.math"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.slicing.posify_index": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "map",
    "numbers.Integral",
    "numpy.asanyarray",
    "numpy.ndarray",
    "numpy.where",
    "sparse.slicing.math",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.replace_ellipsis": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Ellipsis",
    "IndexError",
    "enumerate",
    "len",
    "slice",
    "sum"
   ]
  },
  "type": "function"
 },
 "sparse.slicing.sanitize_index": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "bool",
    "float",
    "isinstance",
    "len",
    "numbers.Number",
    "numpy.allclose",
    "numpy.asanyarray",
    "numpy.flatnonzero",
    "numpy.integer",
    "numpy.intp",
    "numpy.isclose",
    "numpy.issubdtype",
    "numpy.nonzero",
    "slice",
    "sparse.slicing._sanitize_index_element",
    "type"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array": {
  "data": {},
  "type": "module"
 },
 "sparse.sparse_array.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "sparse.sparse_array.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse.sparse_array.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "sparse.sparse_array.SparseArray": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "sparse.sparse_array.SparseArray.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "collections.Iterable",
    "int",
    "isinstance",
    "numbers.Integral",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.density": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.ndim": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.nnz": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "property"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.SparseArray.size": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "functools.reduce",
    "property",
    "sparse.sparse_array.operator"
   ]
  },
  "type": "function"
 },
 "sparse.sparse_array.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "sparse.sparse_array.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "sparse.sparse_array.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "sparse.sparse_array.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "sparse.sparse_array.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "sparse.sparse_array.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "sparse.utils": {
  "data": {},
  "type": "module"
 },
 "sparse.utils.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "sparse.utils.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "sparse.utils.PositinalArgumentPartial": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "sparse.utils.PositinalArgumentPartial.__call__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "sparse.utils.PositinalArgumentPartial.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "collections.Iterable",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "sparse.utils.PositinalArgumentPartial.__repr__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "sparse.utils.PositinalArgumentPartial.__str__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "sparse.utils._zero_of_dtype": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "sparse.utils.assert_eq": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.allclose",
    "sparse.utils.is_lexsorted"
   ]
  },
  "type": "function"
 },
 "sparse.utils.is_lexsorted": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "sparse.utils.isscalar": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "isinstance",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "sparse.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "sparse.utils.random": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "COO",
    "DOK",
    "data_rvs",
    "format",
    "int",
    "isinstance",
    "numbers.Integral",
    "numpy.empty",
    "numpy.min_scalar_type",
    "numpy.prod",
    "numpy.random",
    "numpy.random.RandomState",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "sparse.utils.random_value_array": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "sparse.utils.random_value_array.replace_values": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "int",
    "numpy.empty",
    "numpy.float_",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 }
}