{
 "*": {
  "data": {
   "imports": [
    "PyQt4.QtCore",
    "PyQt4.QtGui",
    "PyQt4.QtOpenGL",
    "PyQt4.QtSvg",
    "PyQt5.QtCore",
    "PyQt5.QtGui",
    "PyQt5.QtOpenGL",
    "PyQt5.QtPrintSupport",
    "PyQt5.QtSvg",
    "PyQt5.QtWidgets",
    "PySide.QtCore",
    "PySide.QtGui",
    "PySide.QtOpenGL",
    "PySide.QtSvg"
   ]
  },
  "type": "star-import"
 },
 "pyFAI": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "__name__",
    "dir",
    "pyFAI.logger",
    "pyFAI.logging",
    "pyFAI.os",
    "pyFAI.project",
    "pyFAI.sys"
   ]
  },
  "type": "module"
 },
 "pyFAI.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.__date__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.__license__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI._version": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "print",
    "pyFAI._version.MAJOR",
    "pyFAI._version.MICRO",
    "pyFAI._version.MINOR",
    "pyFAI._version.RELEASE_LEVEL_VALUE",
    "pyFAI._version.RELEV",
    "pyFAI._version.SERIAL",
    "pyFAI._version.__date__",
    "pyFAI._version._version_info",
    "pyFAI._version.calc_hexversion",
    "pyFAI._version.prerel",
    "pyFAI._version.version_info",
    "str"
   ]
  },
  "type": "module"
 },
 "pyFAI._version.MAJOR": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pyFAI._version.MICRO": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "pyFAI._version.MINOR": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pyFAI._version.RELEASE_LEVEL_VALUE": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pyFAI._version.RELEV": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "pyFAI._version.SERIAL": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pyFAI._version.__all__": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pyFAI._version.__authors__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyFAI._version.__copyright__": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyFAI._version.__date__": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyFAI._version.__docformat__": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pyFAI._version.__license__": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyFAI._version.__status__": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyFAI._version._version_info": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "pyFAI._version.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI._version.calc_hexversion": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "pyFAI._version.RELEASE_LEVEL_VALUE"
   ]
  },
  "type": "function"
 },
 "pyFAI._version.citation": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "pyFAI._version.date": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pyFAI._version.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI._version.hexversion": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "pyFAI._version.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyFAI._version.prerel": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "pyFAI._version.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI._version.version_info": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "pyFAI.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.app": {
  "data": {},
  "type": "module"
 },
 "pyFAI.app.average": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.app.average.logging",
    "pyFAI.app.average.main"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.average.ArgumentParser": {
  "data": {
   "shadows": "pyFAI.third_party.argparse.ArgumentParser"
  },
  "type": "import"
 },
 "pyFAI.app.average.PreEmitStreamHandler": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyFAI.app.average.logging"
   ]
  },
  "type": "class"
 },
 "pyFAI.app.average.PreEmitStreamHandler.__getattr__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.average.PreEmitStreamHandler.__init__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyFAI.app.average.PreEmitStreamHandler.emit": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyFAI.app.average.PreEmitStreamHandler.pre_emit": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pyFAI.app.average.ShellAverageObserver": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "pyFAI.average.AverageObserver"
   ]
  },
  "type": "class"
 },
 "pyFAI.app.average.ShellAverageObserver.__init__": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "pyFAI.app.average.ShellAverageObserver.algorithm_finished": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.average.ShellAverageObserver.algorithm_started": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "pyFAI.app.average.ShellAverageObserver.clear": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "pyFAI.app.average.ShellAverageObserver.frame_processed": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "pyFAI.app.average.ShellAverageObserver.image_loaded": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "pyFAI.app.average.ShellAverageObserver.process_finished": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "pyFAI.app.average.ShellAverageObserver.process_started": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "pyFAI.app.average.ShellAverageObserver.result_processing": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "pyFAI.app.average.__author__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.app.average.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.app.average.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.app.average.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.app.average.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.app.average.__status__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.app.average.average": {
  "data": {
   "shadows": "pyFAI.average"
  },
  "type": "import"
 },
 "pyFAI.app.average.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.app.average.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.average.main": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "float",
    "len",
    "pyFAI.app.average.ShellAverageObserver",
    "pyFAI.app.average.logger",
    "pyFAI.app.average.logging",
    "pyFAI.app.average.parse_algorithms",
    "pyFAI.app.average.parse_writer",
    "pyFAI.app.average.patch_logging_handler",
    "pyFAI.average.Average",
    "pyFAI.average.MeanAveraging",
    "pyFAI.average.logger.setLevel",
    "pyFAI.third_party.argparse.ArgumentParser",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.average.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.app.average.parse_algorithms": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "float",
    "len",
    "pyFAI.app.average.logger",
    "pyFAI.average.AlgorithmCreationError",
    "pyFAI.average.create_algorithm",
    "pyFAI.average.is_algorithm_name_exists",
    "set"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.average.parse_writer": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "len",
    "pyFAI.app.average.os",
    "pyFAI.average.MultiFilesAverageWriter"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.average.patch_logging_handler": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "pyFAI.app.average.PreEmitStreamHandler",
    "pyFAI.app.average.logging"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.average.pyFAI.utils.shell": {
  "data": {
   "shadows": "pyFAI.utils.shell"
  },
  "type": "import"
 },
 "pyFAI.app.average.pyFAI.utils.stringutil": {
  "data": {
   "shadows": "pyFAI.utils.stringutil"
  },
  "type": "import"
 },
 "pyFAI.app.benchmark": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "print",
    "pyFAI.app.benchmark.main",
    "rfoo.utils.rconsole.spawn_server"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.benchmark.ArgumentParser": {
  "data": {
   "shadows": "pyFAI.third_party.argparse.ArgumentParser"
  },
  "type": "import"
 },
 "pyFAI.app.benchmark.__author__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.app.benchmark.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.app.benchmark.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.app.benchmark.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.app.benchmark.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.app.benchmark.__status__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.app.benchmark.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.benchmark.main": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "float",
    "int",
    "pyFAI.app.benchmark.logging",
    "pyFAI.third_party.argparse.ArgumentParser",
    "pyFAI.third_party.six.moves.input"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.benchmark.pyFAI.benchmark": {
  "data": {
   "shadows": "pyFAI.benchmark"
  },
  "type": "import"
 },
 "pyFAI.app.benchmark.rconsole": {
  "data": {
   "shadows": "rfoo.utils.rconsole"
  },
  "type": "import"
 },
 "pyFAI.app.benchmark.six": {
  "data": {
   "shadows": "pyFAI.third_party.six"
  },
  "type": "import"
 },
 "pyFAI.app.calib": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.app.calib.logging",
    "pyFAI.app.calib.main",
    "rfoo.utils.rconsole.spawn_server"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.calib.Calibration": {
  "data": {
   "shadows": "pyFAI.calibration.Calibration"
  },
  "type": "import"
 },
 "pyFAI.app.calib.__author__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.app.calib.__contact__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.app.calib.__copyright__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.app.calib.__date__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.app.calib.__license__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.app.calib.__satus__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.app.calib.logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyFAI.app.calib.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.calib.main": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pyFAI.calibration.Calibration",
    "pyFAI.third_party.six.moves.input"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.calib.rconsole": {
  "data": {
   "shadows": "rfoo.utils.rconsole"
  },
  "type": "import"
 },
 "pyFAI.app.calib.six": {
  "data": {
   "shadows": "pyFAI.third_party.six"
  },
  "type": "import"
 },
 "pyFAI.app.calib2": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.app.calib2.logging",
    "pyFAI.app.calib2.main",
    "rfoo.utils.rconsole.spawn_server",
    "str"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.calib2.ArgumentParser": {
  "data": {
   "shadows": "pyFAI.third_party.argparse.ArgumentParser"
  },
  "type": "import"
 },
 "pyFAI.app.calib2.CalibrationWindow": {
  "data": {
   "shadows": "pyFAI.gui.calibration.CalibrationWindow.CalibrationWindow"
  },
  "type": "import"
 },
 "pyFAI.app.calib2.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.app.calib2.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.app.calib2.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.app.calib2.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.app.calib2.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.app.calib2.__status__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.app.calib2.configure_parser_arguments": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.calib2.description": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "pyFAI.app.calib2.epilog": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "pyFAI.app.calib2.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.app.calib2.logUncaughtExceptions": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "Exception",
    "print",
    "pyFAI.app.calib2.logger_uncaught",
    "pyFAI.app.calib2.traceback",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.calib2.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyFAI.app.calib2.logger_uncaught": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.app.calib2.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.calib2.main": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "pyFAI.app.calib2.logUncaughtExceptions",
    "pyFAI.app.calib2.setup",
    "pyFAI.app.calib2.sys",
    "pyFAI.gui.calibration.CalibrationWindow.CalibrationWindow",
    "pyFAI.gui.qt.QApplication"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.calib2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.app.calib2.pyFAI.calibrant": {
  "data": {
   "shadows": "pyFAI.calibrant"
  },
  "type": "import"
 },
 "pyFAI.app.calib2.pyFAI.calibration": {
  "data": {
   "shadows": "pyFAI.calibration"
  },
  "type": "import"
 },
 "pyFAI.app.calib2.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.app.calib2.rconsole": {
  "data": {
   "shadows": "rfoo.utils.rconsole"
  },
  "type": "import"
 },
 "pyFAI.app.calib2.setup": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "len",
    "pyFAI.app.calib2.configure_parser_arguments",
    "pyFAI.app.calib2.description",
    "pyFAI.app.calib2.epilog",
    "pyFAI.app.calib2.fabio",
    "pyFAI.app.calib2.logger",
    "pyFAI.app.calib2.os",
    "pyFAI.third_party.argparse.ArgumentParser"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.calib2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.app.calib2.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "pyFAI.app.check_calib": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.app.check_calib.logging",
    "pyFAI.app.check_calib.main",
    "pyFAI.app.check_calib.warnings"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.check_calib.CheckCalib": {
  "data": {
   "shadows": "pyFAI.calibration.CheckCalib"
  },
  "type": "import"
 },
 "pyFAI.app.check_calib.__author__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.app.check_calib.__contact__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.app.check_calib.__copyright__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.app.check_calib.__date__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.app.check_calib.__license__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.app.check_calib.__satus__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.app.check_calib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.app.check_calib.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.app.check_calib.logger": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyFAI.app.check_calib.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.check_calib.main": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pyFAI.app.check_calib.pylab",
    "pyFAI.app.check_calib.sys",
    "pyFAI.calibration.CheckCalib",
    "pyFAI.third_party.six.moves.input"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.check_calib.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.app.check_calib.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "pyFAI.app.check_calib.six": {
  "data": {
   "shadows": "pyFAI.third_party.six"
  },
  "type": "import"
 },
 "pyFAI.app.check_calib.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.app.check_calib.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyFAI.app.check_calib.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.app.detector2nexus": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.app.detector2nexus.logging",
    "pyFAI.app.detector2nexus.main"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.detector2nexus.ArgumentParser": {
  "data": {
   "shadows": "pyFAI.third_party.argparse.ArgumentParser"
  },
  "type": "import"
 },
 "pyFAI.app.detector2nexus.__author__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.app.detector2nexus.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.app.detector2nexus.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.app.detector2nexus.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.app.detector2nexus.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.app.detector2nexus.__status__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.app.detector2nexus.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.app.detector2nexus.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyFAI.app.detector2nexus.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.detector2nexus.main": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "len",
    "print",
    "pyFAI.app.detector2nexus.fabio",
    "pyFAI.app.detector2nexus.logger",
    "pyFAI.app.detector2nexus.logging",
    "pyFAI.app.detector2nexus.numpy",
    "pyFAI.app.detector2nexus.pyFAI",
    "pyFAI.app.detector2nexus.sys",
    "pyFAI.third_party.argparse.ArgumentParser",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.detector2nexus.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.app.detector2nexus.pyFAI": {
  "data": {
   "shadows": "pyFAI"
  },
  "type": "import"
 },
 "pyFAI.app.detector2nexus.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.app.diff_map": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.app.diff_map.logging",
    "pyFAI.app.diff_map.main"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.diff_map.DiffMap": {
  "data": {
   "shadows": "pyFAI.diffmap.DiffMap"
  },
  "type": "import"
 },
 "pyFAI.app.diff_map.DiffMapWidget": {
  "data": {
   "shadows": "pyFAI.diffmap_widget.DiffMapWidget"
  },
  "type": "import"
 },
 "pyFAI.app.diff_map.__author__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.app.diff_map.__contact__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.app.diff_map.__copyright__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.app.diff_map.__date__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.app.diff_map.__license__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.app.diff_map.__satus__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.app.diff_map.logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyFAI.app.diff_map.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.diff_map.main": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyFAI.app.diff_map.sys",
    "pyFAI.diffmap.DiffMap",
    "pyFAI.diffmap_widget.DiffMapWidget",
    "pyFAI.gui.qt.QApplication"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.diff_map.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.app.diff_map.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.app.diff_tomo": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.app.diff_tomo.logging",
    "pyFAI.app.diff_tomo.main",
    "pyFAI.third_party.six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.diff_tomo.ArgumentParser": {
  "data": {
   "shadows": "pyFAI.third_party.argparse.ArgumentParser"
  },
  "type": "import"
 },
 "pyFAI.app.diff_tomo.DiffMap": {
  "data": {
   "shadows": "pyFAI.diffmap.DiffMap"
  },
  "type": "import"
 },
 "pyFAI.app.diff_tomo.DiffTomo": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pyFAI.diffmap.DiffMap"
   ]
  },
  "type": "class"
 },
 "pyFAI.app.diff_tomo.DiffTomo.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyFAI.diffmap.DiffMap.__init__"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.diff_tomo.DiffTomo.parse": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "pyFAI.app.diff_tomo.glob",
    "pyFAI.app.diff_tomo.logger",
    "pyFAI.app.diff_tomo.logging",
    "pyFAI.app.diff_tomo.os",
    "pyFAI.app.diff_tomo.urlparse",
    "pyFAI.date",
    "pyFAI.third_party.argparse.ArgumentParser",
    "pyFAI.version",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.diff_tomo.PyFAI_DATE": {
  "data": {
   "shadows": "pyFAI.date"
  },
  "type": "import"
 },
 "pyFAI.app.diff_tomo.PyFAI_VERSION": {
  "data": {
   "shadows": "pyFAI.version"
  },
  "type": "import"
 },
 "pyFAI.app.diff_tomo.__author__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.app.diff_tomo.__contact__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.app.diff_tomo.__copyright__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.app.diff_tomo.__date__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.app.diff_tomo.__license__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.app.diff_tomo.__satus__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.app.diff_tomo.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "pyFAI.app.diff_tomo.logger": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyFAI.app.diff_tomo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.diff_tomo.main": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "pyFAI.app.diff_tomo.DiffTomo"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.diff_tomo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.app.diff_tomo.six": {
  "data": {
   "shadows": "pyFAI.third_party.six"
  },
  "type": "import"
 },
 "pyFAI.app.diff_tomo.urlparse": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pyFAI.app.drawmask": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.app.drawmask.logging",
    "pyFAI.app.drawmask.main",
    "pyFAI.app.drawmask.silx"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.drawmask.AbstractMaskImageWidget": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "silx.gui.qt.QMainWindow"
   ]
  },
  "type": "class"
 },
 "pyFAI.app.drawmask.AbstractMaskImageWidget.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "silx.gui.qt.QMainWindow.__init__",
    "silx.gui.qt.QPushButton"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.drawmask.AbstractMaskImageWidget.saveAndClose": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "isinstance",
    "print",
    "pyFAI.app.drawmask.fabio",
    "silx.gui.qt.QFileDialog.getSaveFileName",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.drawmask.AbstractMaskImageWidget.setOutputFile": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pyFAI.app.drawmask.ArgumentParser": {
  "data": {
   "shadows": "pyFAI.third_party.argparse.ArgumentParser"
  },
  "type": "import"
 },
 "pyFAI.app.drawmask.MaskImageWidget": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pyFAI.app.drawmask.AbstractMaskImageWidget"
   ]
  },
  "type": "class"
 },
 "pyFAI.app.drawmask.MaskImageWidget.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "Exception",
    "hasattr",
    "pyFAI.app.drawmask.AbstractMaskImageWidget",
    "pyFAI.app.drawmask._logger",
    "pyFAI.app.drawmask.silx",
    "silx.gui.qt.QBoxLayout.TopToBottom",
    "silx.gui.qt.QHBoxLayout",
    "silx.gui.qt.QVBoxLayout",
    "silx.gui.qt.QWidget"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.drawmask.MaskImageWidget.getSelectionMask": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pyFAI.app.drawmask.MaskImageWidget.setImageData": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "pyFAI.app.drawmask.__authors__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.app.drawmask.__contact__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.app.drawmask.__copyright__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.app.drawmask.__date__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.app.drawmask.__license__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.app.drawmask.__satus__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.app.drawmask._logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyFAI.app.drawmask.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.app.drawmask.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.drawmask.main": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "len",
    "print",
    "pyFAI.app.drawmask.MaskImageWidget",
    "pyFAI.app.drawmask.fabio",
    "pyFAI.app.drawmask.os",
    "pyFAI.app.drawmask.postProcessId21",
    "pyFAI.third_party.argparse.ArgumentParser",
    "silx.gui.qt.QApplication",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.drawmask.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.app.drawmask.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.app.drawmask.postProcessId21": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "print",
    "pyFAI.app.drawmask.fabio",
    "pyFAI.app.drawmask.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.drawmask.pyFAI.utils": {
  "data": {
   "shadows": "pyFAI.utils"
  },
  "type": "import"
 },
 "pyFAI.app.drawmask.qt": {
  "data": {
   "shadows": "silx.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.app.drawmask.silx": {
  "data": {
   "shadows": "silx"
  },
  "type": "import"
 },
 "pyFAI.app.drawmask.silx.gui.plot": {
  "data": {
   "shadows": "silx.gui.plot"
  },
  "type": "import"
 },
 "pyFAI.app.eiger_mask": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.app.eiger_mask.logging",
    "pyFAI.app.eiger_mask.main"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.eiger_mask.ArgumentParser": {
  "data": {
   "shadows": "pyFAI.third_party.argparse.ArgumentParser"
  },
  "type": "import"
 },
 "pyFAI.app.eiger_mask.__author__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.app.eiger_mask.__contact__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.app.eiger_mask.__copyright__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.app.eiger_mask.__date__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.app.eiger_mask.__license__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.app.eiger_mask.__satus__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.app.eiger_mask.extract_mask": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyFAI.app.eiger_mask.h5py"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.eiger_mask.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.app.eiger_mask.h5py": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "pyFAI.app.eiger_mask.logger": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyFAI.app.eiger_mask.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.eiger_mask.main": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pyFAI.app.eiger_mask.extract_mask",
    "pyFAI.app.eiger_mask.fabio",
    "pyFAI.app.eiger_mask.h5py",
    "pyFAI.app.eiger_mask.logger",
    "pyFAI.app.eiger_mask.os",
    "pyFAI.app.eiger_mask.pyFAI",
    "pyFAI.app.eiger_mask.sys",
    "pyFAI.third_party.argparse.ArgumentParser"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.eiger_mask.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.app.eiger_mask.pyFAI": {
  "data": {
   "shadows": "pyFAI"
  },
  "type": "import"
 },
 "pyFAI.app.eiger_mask.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.app.integrate": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.app.integrate.logger",
    "pyFAI.app.integrate.logging",
    "pyFAI.app.integrate.main",
    "rfoo.utils.rconsole.spawn_server"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.integrate.AIWidget": {
  "data": {
   "shadows": "pyFAI.integrate_widget.AIWidget"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.ArgumentParser": {
  "data": {
   "shadows": "pyFAI.third_party.argparse.ArgumentParser"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.DefaultAiWriter": {
  "data": {
   "shadows": "pyFAI.io.DefaultAiWriter"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.HDF5Writer": {
  "data": {
   "shadows": "pyFAI.io.HDF5Writer"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.ProgressBar": {
  "data": {
   "shadows": "pyFAI.utils.shell.ProgressBar"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.__author__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.app.integrate.__contact__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.app.integrate.__copyright__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.app.integrate.__date__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.app.integrate.__license__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.app.integrate.__satus__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.app.integrate.average": {
  "data": {
   "shadows": "pyFAI.average"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.get_monitor_value": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Exception",
    "pyFAI.app.integrate.logger",
    "pyFAI.average.MonitorNotFound",
    "pyFAI.average.get_monitor_value",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.integrate.integrate_gui": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "pyFAI.app.integrate.logger",
    "pyFAI.gui.qt.QApplication",
    "pyFAI.gui.qt.QFileDialog",
    "pyFAI.gui.qt.QFileDialog.ExistingFiles",
    "pyFAI.integrate_widget.AIWidget",
    "str",
    "unicode"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.integrate.integrate_shell": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "open",
    "pyFAI.app.integrate.fabio",
    "pyFAI.app.integrate.get_monitor_value",
    "pyFAI.app.integrate.json",
    "pyFAI.app.integrate.logger",
    "pyFAI.app.integrate.time",
    "pyFAI.io.DefaultAiWriter",
    "pyFAI.io.HDF5Writer",
    "pyFAI.utils.shell.ProgressBar",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.integrate.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.logger": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyFAI.app.integrate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.main": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "pyFAI.app.integrate.integrate_gui",
    "pyFAI.app.integrate.integrate_shell",
    "pyFAI.app.integrate.logger",
    "pyFAI.app.integrate.logging",
    "pyFAI.app.integrate.sys",
    "pyFAI.third_party.argparse.ArgumentParser",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.integrate.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.pyFAI.utils": {
  "data": {
   "shadows": "pyFAI.utils"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.pyFAI.worker": {
  "data": {
   "shadows": "pyFAI.worker"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.rconsole": {
  "data": {
   "shadows": "rfoo.utils.rconsole"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.app.integrate.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.app.mx_calibrate": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.app.mx_calibrate.logging",
    "pyFAI.app.mx_calibrate.main",
    "rfoo.utils.rconsole.spawn_server"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.mx_calibrate.__author__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.app.mx_calibrate.__contact__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.app.mx_calibrate.__copyright__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.app.mx_calibrate.__date__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyFAI.app.mx_calibrate.__license__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.app.mx_calibrate.__satus__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.app.mx_calibrate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.mx_calibrate.main": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pyFAI.third_party.six.moves.input"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.mx_calibrate.pyFAI.calibration": {
  "data": {
   "shadows": "pyFAI.calibration"
  },
  "type": "import"
 },
 "pyFAI.app.mx_calibrate.rconsole": {
  "data": {
   "shadows": "rfoo.utils.rconsole"
  },
  "type": "import"
 },
 "pyFAI.app.mx_calibrate.six": {
  "data": {
   "shadows": "pyFAI.third_party.six"
  },
  "type": "import"
 },
 "pyFAI.app.recalib": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.app.recalib.logging",
    "pyFAI.app.recalib.main",
    "rfoo.utils.rconsole.spawn_server"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.recalib.Recalibration": {
  "data": {
   "shadows": "pyFAI.calibration.Recalibration"
  },
  "type": "import"
 },
 "pyFAI.app.recalib.__author__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.app.recalib.__contact__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.app.recalib.__copyright__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.app.recalib.__date__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.app.recalib.__license__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.app.recalib.__satus__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.app.recalib.logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyFAI.app.recalib.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.recalib.main": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pyFAI.calibration.Recalibration",
    "pyFAI.third_party.six.moves.input"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.recalib.rconsole": {
  "data": {
   "shadows": "rfoo.utils.rconsole"
  },
  "type": "import"
 },
 "pyFAI.app.recalib.six": {
  "data": {
   "shadows": "pyFAI.third_party.six"
  },
  "type": "import"
 },
 "pyFAI.app.saxs": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.app.saxs.logging",
    "pyFAI.app.saxs.main"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.saxs.ArgumentParser": {
  "data": {
   "shadows": "pyFAI.third_party.argparse.ArgumentParser"
  },
  "type": "import"
 },
 "pyFAI.app.saxs.__author__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.app.saxs.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.app.saxs.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.app.saxs.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.app.saxs.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.app.saxs.__status__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.app.saxs.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.app.saxs.hc": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.app.saxs.logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyFAI.app.saxs.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.saxs.main": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "min",
    "print",
    "pyFAI.app.saxs.fabio",
    "pyFAI.app.saxs.hc",
    "pyFAI.app.saxs.logger",
    "pyFAI.app.saxs.os",
    "pyFAI.app.saxs.sys",
    "pyFAI.app.saxs.time",
    "pyFAI.third_party.argparse.ArgumentParser",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.saxs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.app.saxs.pyFAI.units": {
  "data": {
   "shadows": "pyFAI.units"
  },
  "type": "import"
 },
 "pyFAI.app.saxs.pyFAI.utils": {
  "data": {
   "shadows": "pyFAI.utils"
  },
  "type": "import"
 },
 "pyFAI.app.saxs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.app.saxs.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.app.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "pyFAI.app.setup.configuration"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "pyFAI.app.setup.__authors__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyFAI.app.setup.__date__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyFAI.app.setup.__license__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyFAI.app.setup.configuration": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "pyFAI.app.waxs": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.app.waxs.logging",
    "pyFAI.app.waxs.main"
   ]
  },
  "type": "module"
 },
 "pyFAI.app.waxs.ArgumentParser": {
  "data": {
   "shadows": "pyFAI.third_party.argparse.ArgumentParser"
  },
  "type": "import"
 },
 "pyFAI.app.waxs.__author__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.app.waxs.__contact__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.app.waxs.__copyright__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.app.waxs.__date__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.app.waxs.__license__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.app.waxs.__status__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.app.waxs.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.app.waxs.hc": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyFAI.app.waxs.logger": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pyFAI.app.waxs.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.app.waxs.main": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "min",
    "print",
    "pyFAI.app.waxs.fabio",
    "pyFAI.app.waxs.hc",
    "pyFAI.app.waxs.logger",
    "pyFAI.app.waxs.os",
    "pyFAI.app.waxs.sys",
    "pyFAI.app.waxs.time",
    "pyFAI.third_party.argparse.ArgumentParser",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.app.waxs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.app.waxs.pyFAI.units": {
  "data": {
   "shadows": "pyFAI.units"
  },
  "type": "import"
 },
 "pyFAI.app.waxs.pyFAI.utils": {
  "data": {
   "shadows": "pyFAI.utils"
  },
  "type": "import"
 },
 "pyFAI.app.waxs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.app.waxs.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.average": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "calc_hexversion",
    "dir",
    "pyFAI.average.MaxAveraging",
    "pyFAI.average.MeanAveraging",
    "pyFAI.average.MinAveraging",
    "pyFAI.average.SumAveraging",
    "pyFAI.average._FILTERS",
    "pyFAI.average._FILTER_NAME_MAPPING",
    "pyFAI.average.fabio",
    "pyFAI.average.logging",
    "set"
   ]
  },
  "type": "module"
 },
 "pyFAI.average.AlgorithmCreationError": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "pyFAI.average.Average": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.average.Average.__init__": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "pyFAI.average.weakref"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.Average._get_corrected_image": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "pyFAI.average.MonitorNotFound",
    "pyFAI.average.get_monitor_value",
    "pyFAI.average.logger",
    "pyFAI.average.numpy",
    "pyFAI.average.remove_saturated_pixel",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.Average._get_image_reduction": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "pyFAI.average.logger",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.Average._update_flat": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "pyFAI.average.logger",
    "pyFAI.average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.Average.add_algorithm": {
  "data": {
   "lineno": 857
  },
  "type": "function"
 },
 "pyFAI.average.Average.get_counter_frames": {
  "data": {
   "lineno": 775
  },
  "type": "function"
 },
 "pyFAI.average.Average.get_fabio_images": {
  "data": {
   "lineno": 782
  },
  "type": "function"
 },
 "pyFAI.average.Average.get_image_reduction": {
  "data": {
   "lineno": 967
  },
  "type": "function"
 },
 "pyFAI.average.Average.process": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "pyFAI.average.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.Average.set_correct_flat_from_dark": {
  "data": {
   "lineno": 768
  },
  "type": "function"
 },
 "pyFAI.average.Average.set_dark": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "pyFAI.average._normalize_image_stack",
    "pyFAI.average.average_dark"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.Average.set_flat": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "pyFAI.average._normalize_image_stack",
    "pyFAI.average.average_dark"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.Average.set_images": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "isinstance",
    "len",
    "pyFAI.average.fabio",
    "pyFAI.average.logger",
    "pyFAI.average.numpy",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.Average.set_monitor_name": {
  "data": {
   "lineno": 827
  },
  "type": "function"
 },
 "pyFAI.average.Average.set_observer": {
  "data": {
   "lineno": 739
  },
  "type": "function"
 },
 "pyFAI.average.Average.set_pixel_filter": {
  "data": {
   "lineno": 838
  },
  "type": "function"
 },
 "pyFAI.average.Average.set_writer": {
  "data": {
   "lineno": 851
  },
  "type": "function"
 },
 "pyFAI.average.AverageDarkFilter": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "pyFAI.average.ImageStackFilter"
   ]
  },
  "type": "class"
 },
 "pyFAI.average.AverageDarkFilter.__init__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "pyFAI.average.AverageDarkFilter",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.AverageDarkFilter._compute_stack_reduction": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "average_dark"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.AverageDarkFilter.get_parameters": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "pyFAI.average.AverageDarkFilter.name": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.AverageObserver": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.average.AverageObserver.algorithm_finished": {
  "data": {
   "lineno": 710
  },
  "type": "function"
 },
 "pyFAI.average.AverageObserver.algorithm_started": {
  "data": {
   "lineno": 698
  },
  "type": "function"
 },
 "pyFAI.average.AverageObserver.frame_processed": {
  "data": {
   "lineno": 702
  },
  "type": "function"
 },
 "pyFAI.average.AverageObserver.image_loaded": {
  "data": {
   "lineno": 690
  },
  "type": "function"
 },
 "pyFAI.average.AverageObserver.process_finished": {
  "data": {
   "lineno": 714
  },
  "type": "function"
 },
 "pyFAI.average.AverageObserver.process_started": {
  "data": {
   "lineno": 694
  },
  "type": "function"
 },
 "pyFAI.average.AverageObserver.result_processing": {
  "data": {
   "lineno": 706
  },
  "type": "function"
 },
 "pyFAI.average.AverageWriter": {
  "data": {
   "lineno": 573
  },
  "type": "class"
 },
 "pyFAI.average.AverageWriter.close": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.AverageWriter.write_header": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.AverageWriter.write_reduction": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.ImageAccumulatorFilter": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pyFAI.average.ImageReductionFilter"
   ]
  },
  "type": "class"
 },
 "pyFAI.average.ImageAccumulatorFilter._accumulate": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.ImageAccumulatorFilter.add_image": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "pyFAI.average.ImageAccumulatorFilter.get_result": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "pyFAI.average.ImageAccumulatorFilter.init": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "pyFAI.average.ImageReductionFilter": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.average.ImageReductionFilter.add_image": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.ImageReductionFilter.get_parameters": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "pyFAI.average.ImageReductionFilter.get_result": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.ImageReductionFilter.init": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "pyFAI.average.ImageStackFilter": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pyFAI.average.ImageReductionFilter"
   ]
  },
  "type": "class"
 },
 "pyFAI.average.ImageStackFilter._compute_stack_reduction": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.ImageStackFilter.add_image": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "pyFAI.average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.ImageStackFilter.get_result": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.ImageStackFilter.init": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "pyFAI.average.MaxAveraging": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pyFAI.average.ImageAccumulatorFilter"
   ]
  },
  "type": "class"
 },
 "pyFAI.average.MaxAveraging._accumulate": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pyFAI.average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.MeanAveraging": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pyFAI.average.SumAveraging"
   ]
  },
  "type": "class"
 },
 "pyFAI.average.MeanAveraging.get_result": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "pyFAI.average.MeanAveraging",
    "pyFAI.average.numpy",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.MinAveraging": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "pyFAI.average.ImageAccumulatorFilter"
   ]
  },
  "type": "class"
 },
 "pyFAI.average.MinAveraging._accumulate": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pyFAI.average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.MonitorNotFound": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pyFAI.average.MultiFilesAverageWriter": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "pyFAI.average.AverageWriter"
   ]
  },
  "type": "class"
 },
 "pyFAI.average.MultiFilesAverageWriter.__init__": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "pyFAI.average.fabio",
    "pyFAI.average.weakref"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.MultiFilesAverageWriter._get_file_name": {
  "data": {
   "lineno": 633
  },
  "type": "function"
 },
 "pyFAI.average.MultiFilesAverageWriter.close": {
  "data": {
   "lineno": 660
  },
  "type": "function"
 },
 "pyFAI.average.MultiFilesAverageWriter.get_fabio_image": {
  "data": {
   "lineno": 653
  },
  "type": "function"
 },
 "pyFAI.average.MultiFilesAverageWriter.write_header": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.MultiFilesAverageWriter.write_reduction": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "pyFAI.average.fabio",
    "pyFAI.average.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.SumAveraging": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pyFAI.average.ImageAccumulatorFilter"
   ]
  },
  "type": "class"
 },
 "pyFAI.average.SumAveraging._accumulate": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "pyFAI.average._AVERAGE_DARK_FILTERS": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "pyFAI.average._FILTERS": {
  "data": {
   "lineno": 248
  },
  "type": "constant"
 },
 "pyFAI.average._FILTER_NAME_MAPPING": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "pyFAI.average.__authors__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.average.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.average.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.average.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.average.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.average.__status__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.average._get_monitor_value_from_edf": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "pyFAI.average.MonitorNotFound",
    "pyFAI.average.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.average._normalize_image_stack": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "list",
    "pyFAI.average.fabio",
    "pyFAI.average.numpy",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.average_dark": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "RuntimeError",
    "abs",
    "dir",
    "enumerate",
    "int",
    "len",
    "max",
    "min",
    "pyFAI.average.logger",
    "pyFAI.average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.average_images": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "pyFAI.average.Average",
    "pyFAI.average.MultiFilesAverageWriter",
    "pyFAI.average.common_prefix",
    "pyFAI.average.create_algorithm",
    "pyFAI.average.is_algorithm_name_exists",
    "pyFAI.average.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.bounding_box": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "pyFAI.average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.common_prefix": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.create_algorithm": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "filter_class",
    "pyFAI.average.AlgorithmCreationError",
    "pyFAI.average.AverageDarkFilter",
    "pyFAI.average._AVERAGE_DARK_FILTERS",
    "pyFAI.average._FILTER_NAME_MAPPING"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.average.fmin": {
  "data": {
   "shadows": "scipy.optimize.optimize.fmin"
  },
  "type": "import"
 },
 "pyFAI.average.fminbound": {
  "data": {
   "shadows": "scipy.optimize.optimize.fminbound"
  },
  "type": "import"
 },
 "pyFAI.average.get_monitor_value": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "pyFAI.average._get_monitor_value_from_edf",
    "pyFAI.average.fabio",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "pyFAI.average.is_algorithm_name_exists": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "pyFAI.average._AVERAGE_DARK_FILTERS",
    "pyFAI.average._FILTER_NAME_MAPPING"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.logger": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pyFAI.average.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.average.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "pyFAI.average.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.average.remove_saturated_pixel": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "float",
    "int",
    "max",
    "min",
    "pyFAI.average.bounding_box",
    "pyFAI.average.logger",
    "pyFAI.average.numpy",
    "range",
    "scipy.interpolate.interp1d",
    "scipy.ndimage.label",
    "scipy.ndimage.median_filter",
    "scipy.ndimage.morphology.binary_dilation",
    "scipy.optimize.optimize.fmin",
    "scipy.optimize.optimize.fminbound"
   ]
  },
  "type": "function"
 },
 "pyFAI.average.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.azimuthalIntegrator.error",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "class"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.__init__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pyFAI.azimuthalIntegrator.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.__save1D": {
  "data": {
   "lineno": 3394,
   "symbols_in_volume": [
    "DefaultAiWriter",
    "pyFAI.azimuthalIntegrator.error"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.__save2D": {
  "data": {
   "lineno": 3463,
   "symbols_in_volume": [
    "DefaultAiWriter",
    "pyFAI.azimuthalIntegrator.error"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.create_mask": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "Exception",
    "abs",
    "bool",
    "int",
    "pyFAI.azimuthalIntegrator.error",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.dark_correction": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.darkfiles": {
  "data": {
   "lineno": 3922,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.flat_correction": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.flatfiles": {
  "data": {
   "lineno": 3939,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.get_darkcurrent": {
  "data": {
   "lineno": 3896
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.get_empty": {
  "data": {
   "lineno": 3943
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.get_flatfield": {
  "data": {
   "lineno": 3904
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.inpainting": {
  "data": {
   "lineno": 3802,
   "symbols_in_volume": [
    "pyFAI.azimuthalIntegrator.numpy",
    "scipy.ndimage.binary_dilation"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.integrate1d": {
  "data": {
   "lineno": 2149,
   "symbols_in_volume": [
    "DefaultAiWriter",
    "Integrate1dResult",
    "MemoryError",
    "all",
    "crc32",
    "deg2rad",
    "int",
    "math.pi",
    "max",
    "min",
    "pyFAI.azimuthalIntegrator.EXT_CSR_ENGINE",
    "pyFAI.azimuthalIntegrator.EXT_LUT_ENGINE",
    "pyFAI.azimuthalIntegrator.Engine",
    "pyFAI.azimuthalIntegrator.OCL_CSR_ENGINE",
    "pyFAI.azimuthalIntegrator.OCL_LUT_ENGINE",
    "pyFAI.azimuthalIntegrator.histogram",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.numpy",
    "pyFAI.azimuthalIntegrator.splitBBox",
    "pyFAI.azimuthalIntegrator.splitPixel",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.integrate2d": {
  "data": {
   "lineno": 2809,
   "symbols_in_volume": [
    "DefaultAiWriter",
    "Integrate2dResult",
    "MemoryError",
    "all",
    "crc32",
    "deg2rad",
    "int",
    "math.pi",
    "max",
    "min",
    "pyFAI.azimuthalIntegrator.EXT_CSR_ENGINE",
    "pyFAI.azimuthalIntegrator.EXT_LUT_ENGINE",
    "pyFAI.azimuthalIntegrator.Engine",
    "pyFAI.azimuthalIntegrator.OCL_CSR_ENGINE",
    "pyFAI.azimuthalIntegrator.OCL_LUT_ENGINE",
    "pyFAI.azimuthalIntegrator.error",
    "pyFAI.azimuthalIntegrator.histogram",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.numpy",
    "pyFAI.azimuthalIntegrator.splitBBox",
    "pyFAI.azimuthalIntegrator.splitPixel",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.integrate_radial": {
  "data": {
   "lineno": 2747,
   "symbols_in_volume": [
    "Integrate1dResult"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.medfilt1d": {
  "data": {
   "lineno": 3497,
   "symbols_in_volume": [
    "Integrate1dResult",
    "dir",
    "int",
    "math.log",
    "max",
    "min",
    "pyFAI.azimuthalIntegrator.Engine",
    "pyFAI.azimuthalIntegrator.OCL_CSR_ENGINE",
    "pyFAI.azimuthalIntegrator.OCL_LUT_ENGINE",
    "pyFAI.azimuthalIntegrator.OCL_SORT_ENGINE",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.numpy",
    "round"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.reset": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.reset_engines": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "list",
    "pyFAI.azimuthalIntegrator.gc"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.save1D": {
  "data": {
   "lineno": 3358,
   "symbols_in_volume": [
    "deprecated",
    "pyFAI.azimuthalIntegrator.error"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.save2D": {
  "data": {
   "lineno": 3423,
   "symbols_in_volume": [
    "deprecated",
    "pyFAI.azimuthalIntegrator.error"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.saxs": {
  "data": {
   "lineno": 3291,
   "symbols_in_volume": [
    "deprecated",
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.separate": {
  "data": {
   "lineno": 3771,
   "symbols_in_volume": [
    "pyFAI.azimuthalIntegrator.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.set_darkcurrent": {
  "data": {
   "lineno": 3893
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.set_darkfiles": {
  "data": {
   "lineno": 3909
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.set_empty": {
  "data": {
   "lineno": 3946,
   "symbols_in_volume": [
    "Exception",
    "float",
    "pyFAI.azimuthalIntegrator.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.set_flatfield": {
  "data": {
   "lineno": 3901
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.set_flatfiles": {
  "data": {
   "lineno": 3926
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.setup_CSR": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "NotImplementedError",
    "dir",
    "len",
    "max",
    "min",
    "pyFAI.azimuthalIntegrator.splitBBoxCSR",
    "pyFAI.azimuthalIntegrator.splitPixelFullCSR"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.setup_LUT": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "dir",
    "len",
    "max",
    "min",
    "pyFAI.azimuthalIntegrator.splitBBoxLUT"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.sigma_clip": {
  "data": {
   "lineno": 3633,
   "symbols_in_volume": [
    "Integrate1dResult",
    "as_strided",
    "dir",
    "int",
    "len",
    "math.log",
    "pyFAI.azimuthalIntegrator.Engine",
    "pyFAI.azimuthalIntegrator.OCL_CSR_ENGINE",
    "pyFAI.azimuthalIntegrator.OCL_LUT_ENGINE",
    "pyFAI.azimuthalIntegrator.OCL_SORT_ENGINE",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.numpy",
    "pyFAI.azimuthalIntegrator.warnings",
    "range",
    "round"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.xrpd2_histogram": {
  "data": {
   "lineno": 1742,
   "symbols_in_volume": [
    "deprecated",
    "numpy.rad2deg",
    "pyFAI.azimuthalIntegrator.histogram",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.xrpd2_numpy": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": [
    "deg2rad",
    "deprecated",
    "list",
    "pyFAI.azimuthalIntegrator.numpy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.xrpd2_splitBBox": {
  "data": {
   "lineno": 1857,
   "symbols_in_volume": [
    "deg2rad",
    "deprecated",
    "numpy.rad2deg",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.splitBBox",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.xrpd2_splitPixel": {
  "data": {
   "lineno": 2002,
   "symbols_in_volume": [
    "deg2rad",
    "deprecated",
    "numpy.rad2deg",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.splitPixel",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.xrpd_CSR_OCL": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "deprecated",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.splitBBoxCSR"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.xrpd_LUT": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "deprecated",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.splitBBoxLUT"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.xrpd_LUT_OCL": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "deprecated",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.splitBBoxLUT"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.xrpd_OpenCL": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "RuntimeError",
    "deg2rad",
    "deprecated",
    "len",
    "max",
    "min",
    "numpy.rad2deg",
    "pyFAI.azimuthalIntegrator.Engine",
    "pyFAI.azimuthalIntegrator.OCL_HIST_ENGINE",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.numpy",
    "pyFAI.azimuthalIntegrator.os",
    "pyFAI.azimuthalIntegrator.tempfile"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.xrpd_cython": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "deg2rad",
    "deprecated",
    "numpy.rad2deg",
    "pyFAI.azimuthalIntegrator.histogram",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.numpy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.xrpd_numpy": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "deg2rad",
    "deprecated",
    "math.pi",
    "pyFAI.azimuthalIntegrator.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.xrpd_splitBBox": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "deg2rad",
    "deprecated",
    "numpy.rad2deg",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.splitBBox",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.xrpd_splitPixel": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "deg2rad",
    "deprecated",
    "numpy.rad2deg",
    "pyFAI.azimuthalIntegrator.logger",
    "pyFAI.azimuthalIntegrator.splitPixel",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.EXT_CSR_ENGINE": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.EXT_LUT_ENGINE": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.Engine": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.azimuthalIntegrator.Engine.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pyFAI.azimuthalIntegrator.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.Engine.reset": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.Engine.set_engine": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "pyFAI.azimuthalIntegrator.OCL_CSR_ENGINE": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.OCL_HIST_ENGINE": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.OCL_LUT_ENGINE": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.OCL_SORT_ENGINE": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.__contact__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.__copyright__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.__date__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.__docformat__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.__license__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.__status__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator.binary_dilation": {
  "data": {
   "shadows": "scipy.ndimage.binary_dilation"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator.error": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator.histogram": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator.ocl_azim": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.ocl_azim_csr": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.ocl_azim_lut": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.ocl_sort": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator.rad2deg": {
  "data": {
   "shadows": "numpy.rad2deg"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator.splitBBox": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.splitBBoxCSR": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.splitBBoxLUT": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.splitPixel": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.splitPixelFullCSR": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "pyFAI.azimuthalIntegrator.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyFAI.azimuthalIntegrator.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.benchmark": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyFAI.benchmark.run_benchmark"
   ]
  },
  "type": "module"
 },
 "pyFAI.benchmark.Bench": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "pyFAI.benchmark.Bench.__init__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyFAI.benchmark.sys",
    "pyFAI.benchmark.time"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.bench_1d": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "AzimuthalIntegrator.__module__",
    "MemoryError",
    "RuntimeError",
    "collections.OrderedDict",
    "len",
    "min",
    "os.path.basename",
    "print",
    "pyFAI.benchmark.BenchTest1D",
    "pyFAI.benchmark.PONIS",
    "pyFAI.benchmark.datasets",
    "pyFAI.benchmark.ds_list",
    "pyFAI.benchmark.platform",
    "pyFAI.benchmark.sys",
    "pyFAI.benchmark.time",
    "pyFAI.benchmark.timeit",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.bench_2d": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "AzimuthalIntegrator.__module__",
    "MemoryError",
    "RuntimeError",
    "collections.OrderedDict",
    "min",
    "os.path.basename",
    "print",
    "pyFAI.benchmark.BenchTest2D",
    "pyFAI.benchmark.PONIS",
    "pyFAI.benchmark.datasets",
    "pyFAI.benchmark.ds_list",
    "pyFAI.benchmark.platform",
    "pyFAI.benchmark.sys",
    "pyFAI.benchmark.time",
    "pyFAI.benchmark.timeit",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.bench_gpu1d": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "Exception",
    "collections.OrderedDict",
    "load",
    "min",
    "os.path.basename",
    "print",
    "pyFAI.benchmark.BenchTestGpu",
    "pyFAI.benchmark.datasets",
    "pyFAI.benchmark.ds_list",
    "pyFAI.benchmark.fabio",
    "pyFAI.benchmark.time",
    "pyFAI.benchmark.timeit"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.display_all": {
  "data": {
   "lineno": 627
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.get_cpu": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "open",
    "pyFAI.benchmark.os",
    "pyFAI.benchmark.platform",
    "pyFAI.benchmark.subprocess"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.get_gpu": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.get_mem": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "int",
    "open",
    "pyFAI.benchmark.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.get_ref": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "pyFAI.benchmark.BenchTest1D",
    "pyFAI.benchmark.PONIS",
    "pyFAI.benchmark.datasets"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.get_size": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.init_curve": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "float",
    "print",
    "pyFAI.benchmark.os",
    "pyFAI.benchmark.pylab",
    "pyFAI.benchmark.sys",
    "pyFAI.benchmark.update_fig",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.new_curve": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "list",
    "pyFAI.benchmark.update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.new_point": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "pyFAI.benchmark.update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.print_exec": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.print_init": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.print_res": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.print_sep": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.save": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "open",
    "pyFAI.benchmark.json"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.Bench.update_mp": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "max",
    "pyFAI.benchmark.pylab",
    "pyFAI.benchmark.time",
    "pyFAI.benchmark.update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTest": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.benchmark.BenchTest.clean": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTest.setup": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTest.setup_and_stmt": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTest.stmt": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTest1D": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pyFAI.benchmark.BenchTest"
   ]
  },
  "type": "class"
 },
 "pyFAI.benchmark.BenchTest1D.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pyFAI.benchmark.BenchTest"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTest1D.clean": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTest1D.setup": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "min",
    "pyFAI.benchmark.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTest1D.stmt": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTest2D": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pyFAI.benchmark.BenchTest"
   ]
  },
  "type": "class"
 },
 "pyFAI.benchmark.BenchTest2D.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "pyFAI.benchmark.BenchTest"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTest2D.clean": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTest2D.setup": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "pyFAI.benchmark.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTest2D.stmt": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTestGpu": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "pyFAI.benchmark.BenchTest"
   ]
  },
  "type": "class"
 },
 "pyFAI.benchmark.BenchTestGpu.__init__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pyFAI.benchmark.BenchTest"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTestGpu.clean": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTestGpu.setup": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "load",
    "min",
    "pyFAI.benchmark.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.BenchTestGpu.stmt": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "pyFAI.benchmark.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyFAI.benchmark.PONIS": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "pyFAI.benchmark.__author__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.benchmark.__copyright__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.benchmark.__date__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.benchmark.__license__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.benchmark.bench": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "pyFAI.benchmark.datasets": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "pyFAI.benchmark.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.benchmark.ds_list": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "pyFAI.benchmark.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.benchmark.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyFAI.benchmark.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.benchmark.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.benchmark.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyFAI.benchmark.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.benchmark.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pyFAI.benchmark.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.benchmark.pylab": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "pyFAI.benchmark.run": {
  "data": {
   "lineno": 738
  },
  "type": "constant"
 },
 "pyFAI.benchmark.run_benchmark": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "print",
    "pyFAI.benchmark.Bench",
    "pyFAI.benchmark.bench",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "pyFAI.benchmark.setup.configuration"
   ]
  },
  "type": "module"
 },
 "pyFAI.benchmark.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "pyFAI.benchmark.setup.__authors__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyFAI.benchmark.setup.__date__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyFAI.benchmark.setup.__license__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyFAI.benchmark.setup.configuration": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "pyFAI.benchmark.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "pyFAI.benchmark.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyFAI.benchmark.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.benchmark.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.benchmark.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "pyFAI.benchmark.update_fig": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyFAI.benchmarks": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pyFAI.blob_detection": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.blob_detection.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.blob_detection.BlobDetection": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.blob_detection.BlobDetection.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "float",
    "int",
    "pyFAI.blob_detection.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.BlobDetection.__repr__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "len",
    "pyFAI.blob_detection.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.BlobDetection._calc_sigma": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "math.sqrt",
    "pyFAI.blob_detection.logger",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.BlobDetection._init_mask": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "int",
    "pyFAI.blob_detection.numpy",
    "pyFAI.blob_detection.pyFAI_morphology",
    "round",
    "scipy.ndimage.morphology.binary_dilation"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.BlobDetection._initial_blur": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "math.sqrt",
    "scipy.ndimage.filters.gaussian_filter"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.BlobDetection._one_octave": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "binning",
    "bool",
    "dir",
    "int",
    "len",
    "print",
    "pyFAI.blob_detection._blob",
    "pyFAI.blob_detection.local_max",
    "pyFAI.blob_detection.logger",
    "pyFAI.blob_detection.numpy",
    "scipy.ndimage.filters.gaussian_filter",
    "scipy.ndimage.morphology.binary_dilation"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.BlobDetection.direction": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "dict",
    "pyFAI.blob_detection.numpy",
    "pyFAI.blob_detection.pylab",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.BlobDetection.nearest_peak": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "Bilinear"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.BlobDetection.peaks_from_area": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "Bilinear",
    "bool",
    "int",
    "is_far_from_group",
    "len",
    "pyFAI.blob_detection.logger",
    "pyFAI.blob_detection.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.BlobDetection.process": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "int",
    "len",
    "pyFAI.blob_detection.logger",
    "pyFAI.blob_detection.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.BlobDetection.refine_Hessian": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "abs",
    "pyFAI.blob_detection.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.BlobDetection.refine_Hessian_SG": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "print",
    "pyFAI.blob_detection.numpy",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.BlobDetection.refinement": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.arctan2",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "print",
    "pyFAI.blob_detection.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.BlobDetection.show_neighboor": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "dict",
    "pyFAI.blob_detection.numpy",
    "pyFAI.blob_detection.pylab",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.BlobDetection.show_stats": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "len",
    "pyFAI.blob_detection.logger",
    "pyFAI.blob_detection.pylab"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.__authors__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.blob_detection.__contact__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.blob_detection.__copyright__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.blob_detection.__date__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.blob_detection.__docformat__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.blob_detection.__license__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.blob_detection.__status__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.blob_detection._blob": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyFAI.blob_detection.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.blob_detection.arctan2": {
  "data": {
   "shadows": "numpy.arctan2"
  },
  "type": "import"
 },
 "pyFAI.blob_detection.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "pyFAI.blob_detection.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.blob_detection.gaussian_filter": {
  "data": {
   "shadows": "scipy.ndimage.filters.gaussian_filter"
  },
  "type": "import"
 },
 "pyFAI.blob_detection.image_test": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "make_gaussian",
    "pyFAI.blob_detection.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.local_max": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "bool",
    "pyFAI.blob_detection.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.blob_detection.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.blob_detection.make_gaussian": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "float",
    "int",
    "pyFAI.blob_detection.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.blob_detection.morphology": {
  "data": {
   "shadows": "scipy.ndimage.morphology"
  },
  "type": "import"
 },
 "pyFAI.blob_detection.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.blob_detection.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.blob_detection.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "pyFAI.blob_detection.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.blob_detection.pyFAI_morphology": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pyFAI.blob_detection.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "pyFAI.blob_detection.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "pyFAI.blob_detection.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pyFAI.calibrant": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.calibrant.CALIBRANT_FACTORY",
    "pyFAI.calibrant.CalibrantFactory",
    "pyFAI.calibrant.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.calibrant.ALL_CALIBRANTS": {
  "data": {
   "lineno": 636
  },
  "type": "constant"
 },
 "pyFAI.calibrant.CALIBRANT_FACTORY": {
  "data": {
   "lineno": 632
  },
  "type": "constant"
 },
 "pyFAI.calibrant.Calibrant": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "pyFAI.calibrant.Calibrant.__copy__": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "pyFAI.calibrant.Calibrant"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.__eq__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.calibrant.Calibrant"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.__hash__": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.__init__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "list",
    "object.__init__",
    "pyFAI.calibrant.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.__ne__": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.__repr__": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "len",
    "pyFAI.calibrant.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant._calc_2th": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "math.asin",
    "pyFAI.calibrant.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant._calc_dSpacing": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "math.sin",
    "pyFAI.calibrant.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.append_2th": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.append_dSpacing": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "abs",
    "min",
    "pyFAI.calibrant.epsilon"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.fake_calibration_image": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "pyFAI.calibrant.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.get_2th": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "pyFAI.calibrant.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.get_2th_index": {
  "data": {
   "lineno": 529
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.get_dSpacing": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.get_wavelength": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.load_file": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "list",
    "pyFAI.calibrant.logger",
    "pyFAI.calibrant.numpy",
    "pyFAI.calibrant.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.save_dSpacing": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.setWavelength_change2th": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "float",
    "pyFAI.calibrant.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.setWavelength_changeDs": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "float",
    "pyFAI.calibrant.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.set_dSpacing": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Calibrant.set_wavelength": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "abs",
    "float",
    "pyFAI.calibrant.epsilon",
    "pyFAI.calibrant.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.CalibrantFactory": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.calibrant.CalibrantFactory.__call__": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "pyFAI.calibrant.Calibrant"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.CalibrantFactory.__contains__": {
  "data": {
   "lineno": 607
  },
  "type": "function"
 },
 "pyFAI.calibrant.CalibrantFactory.__getitem__": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "self"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.CalibrantFactory.__init__": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "dict",
    "get_calibration_dir",
    "pyFAI.calibrant.logger",
    "pyFAI.calibrant.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.CalibrantFactory.__len__": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.CalibrantFactory.__repr__": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.CalibrantFactory.get": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "pyFAI.calibrant.Calibrant"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.CalibrantFactory.items": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "pyFAI.calibrant.Calibrant"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.CalibrantFactory.keys": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.CalibrantFactory.values": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "pyFAI.calibrant.Calibrant"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object",
    "property",
    "type"
   ]
  },
  "type": "class"
 },
 "pyFAI.calibrant.Cell.__init__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell.__repr__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell.cubic": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "float"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell.d": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "math.cos",
    "math.pi",
    "math.sin",
    "math.sqrt"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell.d_spacing": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "int",
    "math.ceil",
    "pyFAI.calibrant.itertools",
    "range",
    "rule"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell.diamond": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "classmethod",
    "cls.cubic"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell.get_type": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell.hexagonal": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "float"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell.monoclinic": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "float"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell.orthorhombic": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "float"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell.rhombohedral": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "float"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell.save": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "len",
    "open",
    "pyFAI.calibrant.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell.set_type": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell.tetragonal": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "float"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.Cell.volume": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "math.cos",
    "math.pi",
    "math.sqrt",
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.__author__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.calibrant.__contact__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.calibrant.__copyright__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.calibrant.__date__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.calibrant.__license__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.calibrant.__status__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.calibrant.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.calibrant.asin": {
  "data": {
   "shadows": "math.asin"
  },
  "type": "import"
 },
 "pyFAI.calibrant.calibrant_factory": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "pyFAI.calibrant.CalibrantFactory"
   ]
  },
  "type": "class"
 },
 "pyFAI.calibrant.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyFAI.calibrant.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "pyFAI.calibrant.epsilon": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pyFAI.calibrant.get_calibrant": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "pyFAI.calibrant.CALIBRANT_FACTORY"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyFAI.calibrant.logger": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pyFAI.calibrant.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.calibrant.names": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "pyFAI.calibrant.CALIBRANT_FACTORY"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibrant.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.calibrant.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.calibrant.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "pyFAI.calibrant.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.calibrant.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "pyFAI.calibrant.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pyFAI.calibrant.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.calibrant.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.calibration": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.calibration.logging",
    "pyFAI.third_party.six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "module"
 },
 "pyFAI.calibration.AbstractCalibration": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.calibration.AbstractCalibration.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "CALIBRANT_FACTORY",
    "Calibrant",
    "dir",
    "float",
    "isinstance",
    "len",
    "pyFAI.calibration.get_detector",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.__repr__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "pyFAI.calibration.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.analyse_options": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY",
    "Calibrant",
    "Exception",
    "FixedParameters",
    "RuntimeError",
    "expand_args",
    "float",
    "print",
    "pyFAI.calibration.fabio",
    "pyFAI.calibration.get_detector",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.logging",
    "pyFAI.calibration.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.chiplot": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "abs",
    "int",
    "len",
    "list",
    "max",
    "model",
    "print",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.math",
    "pyFAI.calibration.numpy",
    "scipy.optimize.leastsq",
    "set",
    "tuple",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.chiplot.jacob": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "pyFAI.calibration.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.configure_parser": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ArgumentParser",
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.extract_cpt": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "int",
    "isocontour",
    "len",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.numpy",
    "range",
    "set",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.get_pixelSize": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "Exception",
    "float",
    "len",
    "pyFAI.calibration.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.postProcess": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "pyFAI.calibration.logger",
    "pyFAI.calibration.numpy",
    "pyFAI.calibration.os",
    "pyFAI.calibration.time",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.preprocess": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "PeakPicker",
    "isinstance",
    "len",
    "pyFAI.calibration.fabio",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.os",
    "pyFAI.calibration.sys",
    "pyFAI.calibration.urlparse"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.prompt": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "Exception",
    "PeakPicker.VALID_METHODS",
    "ValueError",
    "dir",
    "float",
    "int",
    "len",
    "print",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.numpy",
    "pyFAI.calibration.sys",
    "pyFAI.third_party.six.moves.input",
    "readFloatFromKeyboard",
    "setattr",
    "t",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.read_dSpacingFile": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY",
    "Calibrant",
    "print",
    "pyFAI.calibration.os",
    "pyFAI.third_party.six.moves.input"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.read_pixelsSize": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "pyFAI.calibration.os",
    "pyFAI.third_party.six.moves.input",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.read_wavelength": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "Exception",
    "float",
    "pyFAI.third_party.six.moves.input"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.refine": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "print",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.logging",
    "pyFAI.third_party.six.MAXSIZE",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.reset_geometry": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "Exception",
    "int",
    "min",
    "print",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.math",
    "pyFAI.calibration.numpy",
    "set"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.set_data": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "pyFAI.calibration.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.validate_calibration": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "CheckCalib"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.AbstractCalibration.validate_center": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "abs",
    "int",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.math",
    "pyFAI.calibration.numpy",
    "range",
    "round_fft",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.Calibration": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": [
    "pyFAI.calibration.AbstractCalibration"
   ]
  },
  "type": "class"
 },
 "pyFAI.calibration.Calibration.__init__": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "pyFAI.calibration.AbstractCalibration"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.Calibration.__repr__": {
  "data": {
   "lineno": 1426,
   "symbols_in_volume": [
    "pyFAI.calibration.AbstractCalibration",
    "pyFAI.calibration.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.Calibration.gui_peakPicker": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": [
    "pyFAI.calibration.os",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.Calibration.initgeoRef": {
  "data": {
   "lineno": 1506,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "pyFAI.calibration.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.Calibration.parse": {
  "data": {
   "lineno": 1430,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.Calibration.preprocess": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": [
    "pyFAI.calibration.AbstractCalibration",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.Calibration.refine": {
  "data": {
   "lineno": 1527,
   "symbols_in_volume": [
    "Exception",
    "GeometryRefinement",
    "getattr",
    "pyFAI.calibration.AbstractCalibration",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.os",
    "setattr",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.CheckCalib": {
  "data": {
   "lineno": 2166,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "pyFAI.calibration.CheckCalib.__init__": {
  "data": {
   "lineno": 2167,
   "symbols_in_volume": [
    "AzimuthalIntegrator.sload",
    "pyFAI.calibration.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.CheckCalib.__repr__": {
  "data": {
   "lineno": 2190
  },
  "type": "function"
 },
 "pyFAI.calibration.CheckCalib.get_1dsize": {
  "data": {
   "lineno": 2264,
   "symbols_in_volume": [
    "int",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.CheckCalib.integrate": {
  "data": {
   "lineno": 2269,
   "symbols_in_volume": [
    "pyFAI.calibration.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.CheckCalib.parse": {
  "data": {
   "lineno": 2194,
   "symbols_in_volume": [
    "ArgumentParser",
    "AzimuthalIntegrator.sload",
    "expand_args",
    "float",
    "len",
    "print",
    "pyFAI.calibration.fabio",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.logging",
    "pyFAI.calibration.numpy",
    "pyFAI.calibration.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.CheckCalib.rebuild": {
  "data": {
   "lineno": 2274,
   "symbols_in_volume": [
    "measure_offset",
    "print",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.numpy",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.CheckCalib.show": {
  "data": {
   "lineno": 2318,
   "symbols_in_volume": [
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.CheckCalib.smooth_mask": {
  "data": {
   "lineno": 2300,
   "symbols_in_volume": [
    "int",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.math",
    "pyFAI.calibration.numpy",
    "pyFAI.calibration.pyFAI_morphology",
    "round",
    "scipy.ndimage.filters.gaussian_filter",
    "scipy.ndimage.morphology.binary_dilation"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.MultiCalib": {
  "data": {
   "lineno": 1711,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.calibration.MultiCalib.__init__": {
  "data": {
   "lineno": 1712,
   "symbols_in_volume": [
    "FixedParameters",
    "dir",
    "float",
    "len",
    "pyFAI.calibration.get_detector",
    "pyFAI.calibration.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.MultiCalib.__repr__": {
  "data": {
   "lineno": 1756,
   "symbols_in_volume": [
    "pyFAI.calibration.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.MultiCalib.get_pixelSize": {
  "data": {
   "lineno": 1990,
   "symbols_in_volume": [
    "Exception",
    "float",
    "len",
    "pyFAI.calibration.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.MultiCalib.parse": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "ArgumentParser",
    "Exception",
    "FixedParameters",
    "PeakPicker.VALID_METHODS",
    "RuntimeError",
    "float",
    "pyFAI.calibration.fabio",
    "pyFAI.calibration.get_detector",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.logging",
    "pyFAI.calibration.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.MultiCalib.process": {
  "data": {
   "lineno": 2057,
   "symbols_in_volume": [
    "float",
    "int",
    "pyFAI.calibration.Recalibration",
    "pyFAI.calibration.fabio",
    "pyFAI.calibration.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.MultiCalib.read_dSpacingFile": {
  "data": {
   "lineno": 2023,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY",
    "Calibrant",
    "print",
    "pyFAI.calibration.os",
    "pyFAI.third_party.six.moves.input"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.MultiCalib.read_pixelsSize": {
  "data": {
   "lineno": 2012,
   "symbols_in_volume": [
    "pyFAI.calibration.os",
    "pyFAI.third_party.six.moves.input",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.MultiCalib.read_wavelength": {
  "data": {
   "lineno": 2048,
   "symbols_in_volume": [
    "float",
    "pyFAI.third_party.six.moves.input"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.MultiCalib.regression": {
  "data": {
   "lineno": 2122,
   "symbols_in_volume": [
    "len",
    "print",
    "pyFAI.calibration.numpy",
    "scipy.stats.linregress"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.PyFAI_DATE": {
  "data": {
   "shadows": "date"
  },
  "type": "import"
 },
 "pyFAI.calibration.PyFAI_VERSION": {
  "data": {
   "shadows": "version"
  },
  "type": "import"
 },
 "pyFAI.calibration.Recalibration": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": [
    "pyFAI.calibration.AbstractCalibration"
   ]
  },
  "type": "class"
 },
 "pyFAI.calibration.Recalibration.__init__": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "pyFAI.calibration.AbstractCalibration"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.Recalibration.parse": {
  "data": {
   "lineno": 1631,
   "symbols_in_volume": [
    "AzimuthalIntegrator.sload",
    "CALIBRANT_FACTORY",
    "int",
    "pyFAI.calibration.logger",
    "pyFAI.calibration.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.Recalibration.preprocess": {
  "data": {
   "lineno": 1686,
   "symbols_in_volume": [
    "pyFAI.calibration.AbstractCalibration",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.Recalibration.read_dSpacingFile": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "pyFAI.calibration.AbstractCalibration"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.Recalibration.refine": {
  "data": {
   "lineno": 1696,
   "symbols_in_volume": [
    "GeometryRefinement",
    "pyFAI.calibration.AbstractCalibration"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.__author__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.calibration.__contact__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.calibration.__copyright__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.calibration.__date__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.calibration.__license__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.calibration.__status__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.calibration.calib": {
  "data": {
   "lineno": 2346,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "Calibrant",
    "Detector",
    "PeakPicker",
    "isinstance",
    "pyFAI.calibration.Calibration",
    "pyFAI.calibration.logging",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.calibration.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.calibration.gaussian_filter": {
  "data": {
   "shadows": "scipy.ndimage.filters.gaussian_filter"
  },
  "type": "import"
 },
 "pyFAI.calibration.get_detector": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "Detector",
    "RuntimeError",
    "detector_factory",
    "isinstance",
    "pyFAI.calibration.fabio",
    "pyFAI.calibration.os",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.calibration.gui_utils": {
  "data": {
   "shadows": "utils"
  },
  "type": "import"
 },
 "pyFAI.calibration.leastsq": {
  "data": {
   "shadows": "scipy.optimize.leastsq"
  },
  "type": "import"
 },
 "pyFAI.calibration.linregress": {
  "data": {
   "shadows": "scipy.stats.linregress"
  },
  "type": "import"
 },
 "pyFAI.calibration.logger": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.calibration.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.calibration.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyFAI.calibration.morphology": {
  "data": {
   "shadows": "scipy.ndimage.morphology"
  },
  "type": "import"
 },
 "pyFAI.calibration.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.calibration.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.calibration.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.calibration.pyFAI_morphology": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "pyFAI.calibration.six": {
  "data": {
   "shadows": "pyFAI.third_party.six"
  },
  "type": "import"
 },
 "pyFAI.calibration.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.calibration.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.calibration.urlparse": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pyFAI.containers": {
  "data": {},
  "type": "module"
 },
 "pyFAI.containers.Integrate1dResult": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "pyFAI.containers.IntegrateResult"
   ]
  },
  "type": "class"
 },
 "pyFAI.containers.Integrate1dResult.__init__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "pyFAI.containers.Integrate1dResult",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.Integrate1dResult.__new__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "pyFAI.containers.Integrate1dResult",
    "pyFAI.containers.IntegrateResult"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.Integrate1dResult.intensity": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.Integrate1dResult.radial": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.Integrate1dResult.sigma": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.Integrate2dResult": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "pyFAI.containers.IntegrateResult"
   ]
  },
  "type": "class"
 },
 "pyFAI.containers.Integrate2dResult.__init__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "pyFAI.containers.Integrate2dResult",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.Integrate2dResult.__new__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "pyFAI.containers.Integrate2dResult",
    "pyFAI.containers.IntegrateResult"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.Integrate2dResult.azimuthal": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.Integrate2dResult.intensity": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.Integrate2dResult.radial": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.Integrate2dResult.sigma": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "class"
 },
 "pyFAI.containers.IntegrateResult.__init__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult._set_compute_engine": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult._set_count": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult._set_has_dark_correction": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult._set_has_flat_correction": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult._set_has_mask_applied": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult._set_metadata": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult._set_method_called": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult._set_normalization_factor": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult._set_npt_azim": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult._set_percentile": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult._set_polarization_factor": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult._set_sum": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult._set_unit": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult.compute_engine": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult.count": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult.has_dark_correction": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult.has_flat_correction": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult.has_mask_applied": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult.metadata": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult.method_called": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult.normalization_factor": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult.npt_azim": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult.percentile": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult.polarization_factor": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult.sum": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.IntegrateResult.unit": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.containers.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.containers.__contact__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.containers.__copyright__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.containers.__date__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.containers.__license__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.containers.__status__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.containers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.containers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.containers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.containers.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.control_points": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.control_points.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.control_points.ControlPoints": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "pyFAI.control_points.ControlPoints.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Calibrant",
    "collections.OrderedDict",
    "get_calibrant",
    "isinstance",
    "list",
    "pyFAI.control_points.array",
    "pyFAI.control_points.logger",
    "pyFAI.control_points.numpy",
    "pyFAI.control_points.os",
    "pyFAI.control_points.threading",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.__len__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.__repr__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "len",
    "pyFAI.control_points.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.append": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "PointGroup"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.append_2theta_deg": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pyFAI.control_points.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.check": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.get": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pyFAI.control_points.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.getList2theta": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.getListRing": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.getWeightedList": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.get_dSpacing": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.get_labels": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.get_wavelength": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.load": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "Calibrant",
    "Exception",
    "PointGroup",
    "float",
    "get_calibrant",
    "int",
    "len",
    "open",
    "pyFAI.control_points.logger",
    "pyFAI.control_points.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.pop": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "list",
    "pyFAI.control_points.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.readRingNrFromKeyboard": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "len",
    "list",
    "pyFAI.control_points.logging"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.reset": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.save": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.setWavelength_change2th": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "Calibrant"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.setWavelength_changeDs": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "Calibrant"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.set_dSpacing": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "Calibrant"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.ControlPoints.set_wavelength": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "pyFAI.control_points.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyFAI.control_points.PointGroup": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "pyFAI.control_points.PointGroup.__init__": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.PointGroup.__len__": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.PointGroup.__repr__": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.PointGroup.code": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.PointGroup.get_label": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "chr",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.PointGroup.get_ring": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "pyFAI.control_points.PointGroup.label": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.PointGroup.reset_label": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.PointGroup.set_label": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "ord"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.PointGroup.set_ring": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "int",
    "pyFAI.control_points.logger",
    "pyFAI.control_points.traceback",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.control_points.__author__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.control_points.__contact__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.control_points.__copyright__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.control_points.__date__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.control_points.__docformat__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.control_points.__license__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.control_points.__status__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.control_points.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.control_points.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "pyFAI.control_points.calibrant_names": {
  "data": {
   "shadows": "names"
  },
  "type": "import"
 },
 "pyFAI.control_points.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.control_points.logger": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pyFAI.control_points.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.control_points.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.control_points.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.control_points.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.control_points.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.control_points.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "pyFAI.control_points.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.date": {
  "data": {
   "shadows": "__date__"
  },
  "type": "import"
 },
 "pyFAI.detector_factory": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pyFAI.detectors": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.detectors.Detector",
    "pyFAI.detectors.NexusDetector",
    "pyFAI.detectors.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.detectors.ADSC_Q210": {
  "data": {
   "lineno": 2400,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.ADSC_Q210.__init__": {
  "data": {
   "lineno": 2413,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.ADSC_Q270": {
  "data": {
   "lineno": 2417,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.ADSC_Q270.__init__": {
  "data": {
   "lineno": 2430,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.ADSC_Q315": {
  "data": {
   "lineno": 2383,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.ADSC_Q315.__init__": {
  "data": {
   "lineno": 2396,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.ADSC_Q4": {
  "data": {
   "lineno": 2434,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.ADSC_Q4.__init__": {
  "data": {
   "lineno": 2447,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.ALL_DETECTORS": {
  "data": {
   "lineno": 2987
  },
  "type": "constant"
 },
 "pyFAI.detectors.Aarhus": {
  "data": {
   "lineno": 2549,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Aarhus.__init__": {
  "data": {
   "lineno": 2573,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Aarhus.calc_cartesian_positions": {
  "data": {
   "lineno": 2625,
   "symbols_in_volume": [
    "expand2d",
    "int",
    "pyFAI.detectors.bilinear",
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Aarhus.get_pixel_corners": {
  "data": {
   "lineno": 2578,
   "symbols_in_volume": [
    "expand2d",
    "pyFAI.detectors.bilinear",
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Apex2": {
  "data": {
   "lineno": 2738,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Apex2.__init__": {
  "data": {
   "lineno": 2748,
   "symbols_in_volume": [
    "int",
    "pyFAI.detectors.Apex2",
    "round",
    "super",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Apex2.__repr__": {
  "data": {
   "lineno": 2757
  },
  "type": "function"
 },
 "pyFAI.detectors.Basler": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Basler.__init__": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "pyFAI.detectors.Basler",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Basler.__repr__": {
  "data": {
   "lineno": 1483
  },
  "type": "function"
 },
 "pyFAI.detectors.Cirpad": {
  "data": {
   "lineno": 2796,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.ImXPadS10"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Cirpad._M": {
  "data": {
   "lineno": 2810,
   "symbols_in_volume": [
    "pyFAI.detectors.numpy",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Cirpad.__init__": {
  "data": {
   "lineno": 2848,
   "symbols_in_volume": [
    "pyFAI.detectors.ImXPadS10"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Cirpad._calc_pixels_size": {
  "data": {
   "lineno": 2851,
   "symbols_in_volume": [
    "pyFAI.detectors.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Cirpad._passage": {
  "data": {
   "lineno": 2859,
   "symbols_in_volume": [
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Cirpad._rotation": {
  "data": {
   "lineno": 2833,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pyFAI.detectors.Cirpad",
    "pyFAI.detectors.functools",
    "pyFAI.detectors.numpy",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Cirpad._translation": {
  "data": {
   "lineno": 2844,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Cirpad.calc_cartesian_positions": {
  "data": {
   "lineno": 2917,
   "symbols_in_volume": [
    "expand2d",
    "int",
    "pyFAI.detectors.bilinear",
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Cirpad.get_pixel_corners": {
  "data": {
   "lineno": 2872,
   "symbols_in_volume": [
    "pyFAI.detectors.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "aliases",
    "object",
    "property",
    "pyFAI.detectors.DetectorMeta",
    "six.with_metaclass"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Detector.__copy__": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.__deepcopy__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "dir",
    "id"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "dir",
    "float",
    "pyFAI.detectors.threading",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.__repr__": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.calc_cartesian_positions": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "binning",
    "dir",
    "expand2d",
    "int",
    "pyFAI.detectors.bilinear",
    "pyFAI.detectors.numpy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.calc_mask": {
  "data": {
   "lineno": 677
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.factory": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "NexusDetector",
    "RuntimeError",
    "classmethod",
    "isinstance",
    "pyFAI.detectors.Detector",
    "pyFAI.detectors.logger",
    "pyFAI.detectors.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.from_dict": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.getFit2D": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.getPyFAI": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.get_binning": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.get_darkcurrent": {
  "data": {
   "lineno": 818
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.get_darkcurrent_crc": {
  "data": {
   "lineno": 821
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.get_flatfield": {
  "data": {
   "lineno": 781
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.get_flatfield_crc": {
  "data": {
   "lineno": 784
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.get_mask": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "crc32",
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.get_mask_crc": {
  "data": {
   "lineno": 702
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.get_maskfile": {
  "data": {
   "lineno": 728
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.get_name": {
  "data": {
   "lineno": 770
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.get_pixel1": {
  "data": {
   "lineno": 732
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.get_pixel2": {
  "data": {
   "lineno": 751
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.get_pixel_corners": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "expand2d",
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.get_splineFile": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.guess_binning": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "dir",
    "pyFAI.detectors.logger",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.save": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.detectors.logger",
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.setFit2D": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.setPyFAI": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "detector_factory",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.set_binning": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "dir",
    "float",
    "int",
    "len",
    "round"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.set_config": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.set_darkcurrent": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "crc32"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.set_darkfiles": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "pyFAI.detectors.fabio",
    "pyFAI.detectors.numpy",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.set_dx": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.detectors.numpy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.set_dy": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.detectors.numpy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.set_flatfield": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "crc32"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.set_flatfiles": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "pyFAI.detectors.fabio",
    "pyFAI.detectors.numpy",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.set_mask": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "crc32",
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.set_maskfile": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "pyFAI.detectors.fabio",
    "pyFAI.detectors.logger",
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.set_pixel1": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "abs",
    "float",
    "isinstance",
    "list",
    "pyFAI.detectors.epsilon",
    "pyFAI.detectors.logger",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.set_pixel2": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "abs",
    "float",
    "isinstance",
    "list",
    "pyFAI.detectors.epsilon",
    "pyFAI.detectors.logger",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Detector.set_splineFile": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "int",
    "pyFAI.detectors.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.DetectorMeta": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.DetectorMeta.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "hasattr",
    "pyFAI.detectors.DetectorMeta",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Dexela2923": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Dexela2923.__init__": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "pyFAI.detectors.Dexela2923",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Dexela2923.__repr__": {
  "data": {
   "lineno": 1424
  },
  "type": "function"
 },
 "pyFAI.detectors.Eiger": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Eiger.__init__": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "dir",
    "pyFAI.detectors.Detector",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Eiger.__repr__": {
  "data": {
   "lineno": 1253
  },
  "type": "function"
 },
 "pyFAI.detectors.Eiger.calc_cartesian_positions": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "expand2d",
    "pyFAI.detectors.logger",
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Eiger.calc_mask": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyFAI.detectors.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Eiger16M": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Eiger"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Eiger1M": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Eiger"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Eiger4M": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Eiger"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Eiger500k": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Eiger"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Eiger9M": {
  "data": {
   "lineno": 1363,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Eiger"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.FReLoN": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.FReLoN.__init__": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "int",
    "pyFAI.detectors.FReLoN",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.FReLoN.calc_mask": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Fairchild": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Fairchild.__init__": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Fairchild.__repr__": {
  "data": {
   "lineno": 1391
  },
  "type": "function"
 },
 "pyFAI.detectors.HF_130K": {
  "data": {
   "lineno": 2451,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.HF_130K.__init__": {
  "data": {
   "lineno": 2463,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.HF_1M": {
  "data": {
   "lineno": 2484,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.HF_1M.__init__": {
  "data": {
   "lineno": 2497,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.HF_262k": {
  "data": {
   "lineno": 2467,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.HF_262k.__init__": {
  "data": {
   "lineno": 2480,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.HF_2M": {
  "data": {
   "lineno": 2501,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.HF_2M.__init__": {
  "data": {
   "lineno": 2514,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.HF_4M": {
  "data": {
   "lineno": 2518,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.HF_4M.__init__": {
  "data": {
   "lineno": 2529,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.HF_9M": {
  "data": {
   "lineno": 2533,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.HF_9M.__init__": {
  "data": {
   "lineno": 2545,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.ImXPadS10": {
  "data": {
   "lineno": 1564,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.ImXPadS10.__init__": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "dir",
    "pyFAI.detectors.Detector",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.ImXPadS10.__repr__": {
  "data": {
   "lineno": 1611
  },
  "type": "function"
 },
 "pyFAI.detectors.ImXPadS10._calc_pixels_size": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "classmethod",
    "cls.BORDER_SIZE_RELATIVE",
    "pyFAI.detectors.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.ImXPadS10.calc_cartesian_positions": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": [
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.ImXPadS10.calc_mask": {
  "data": {
   "lineno": 1629,
   "symbols_in_volume": [
    "pyFAI.detectors.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.ImXPadS10.calc_pixels_edges": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": [
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.ImXPadS10.get_pixel_corners": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": [
    "expand2d",
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.ImXPadS140": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.ImXPadS10"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.ImXPadS140.__init__": {
  "data": {
   "lineno": 1755,
   "symbols_in_volume": [
    "pyFAI.detectors.ImXPadS10"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.ImXPadS70": {
  "data": {
   "lineno": 1728,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.ImXPadS10"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.ImXPadS70.__init__": {
  "data": {
   "lineno": 1740,
   "symbols_in_volume": [
    "pyFAI.detectors.ImXPadS10"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Mar345": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Mar345.__init__": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "int",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Mar345.__repr__": {
  "data": {
   "lineno": 1524
  },
  "type": "function"
 },
 "pyFAI.detectors.Mar345.calc_mask": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Mar345.guess_binning": {
  "data": {
   "lineno": 1528,
   "symbols_in_volume": [
    "dir",
    "pyFAI.detectors.logger",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Mythen": {
  "data": {
   "lineno": 2786,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Mythen.__init__": {
  "data": {
   "lineno": 2792,
   "symbols_in_volume": [
    "pyFAI.detectors.Mythen",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.NexusDetector": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.NexusDetector.__init__": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.NexusDetector.__repr__": {
  "data": {
   "lineno": 867
  },
  "type": "function"
 },
 "pyFAI.detectors.NexusDetector.getFit2D": {
  "data": {
   "lineno": 954
  },
  "type": "function"
 },
 "pyFAI.detectors.NexusDetector.getPyFAI": {
  "data": {
   "lineno": 941
  },
  "type": "function"
 },
 "pyFAI.detectors.NexusDetector.load": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.detectors.logger",
    "pyFAI.detectors.posixpath",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.NexusDetector.sload": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls.load"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyFAI.detectors.Perkin": {
  "data": {
   "lineno": 1937,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Perkin.__init__": {
  "data": {
   "lineno": 1947,
   "symbols_in_volume": [
    "int",
    "pyFAI.detectors.Perkin",
    "super",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Perkin.__repr__": {
  "data": {
   "lineno": 1956
  },
  "type": "function"
 },
 "pyFAI.detectors.Pilatus": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "property",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Pilatus.__init__": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "dir",
    "pyFAI.detectors.Pilatus",
    "pyFAI.detectors.fabio",
    "pyFAI.detectors.logging",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Pilatus.__repr__": {
  "data": {
   "lineno": 1000
  },
  "type": "function"
 },
 "pyFAI.detectors.Pilatus.calc_cartesian_positions": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "expand2d",
    "pyFAI.detectors.logger",
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Pilatus.calc_mask": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyFAI.detectors.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Pilatus.get_splineFile": {
  "data": {
   "lineno": 1008
  },
  "type": "function"
 },
 "pyFAI.detectors.Pilatus.set_splineFile": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "Exception",
    "pyFAI.detectors.fabio",
    "pyFAI.detectors.logger",
    "pyFAI.detectors.logging",
    "pyFAI.detectors.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Pilatus100k": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Pilatus"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Pilatus1M": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Pilatus"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Pilatus200k": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Pilatus"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Pilatus2M": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Pilatus"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Pilatus300k": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Pilatus"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Pilatus300kw": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Pilatus"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Pilatus6M": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Pilatus"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.PilatusCdTe": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "pyFAI.detectors.Pilatus"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.PilatusCdTe.calc_mask": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyFAI.detectors.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.PilatusCdTe1M": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.PilatusCdTe"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.PilatusCdTe2M": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.PilatusCdTe"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.PilatusCdTe300k": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.PilatusCdTe"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.PilatusCdTe300kw": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.PilatusCdTe"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Pixium": {
  "data": {
   "lineno": 2713,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Pixium.__init__": {
  "data": {
   "lineno": 2724,
   "symbols_in_volume": [
    "int",
    "pyFAI.detectors.Pixium",
    "round",
    "super",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Pixium.__repr__": {
  "data": {
   "lineno": 2733
  },
  "type": "function"
 },
 "pyFAI.detectors.RaspberryPi5M": {
  "data": {
   "lineno": 2762,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RaspberryPi5M.__init__": {
  "data": {
   "lineno": 2770,
   "symbols_in_volume": [
    "pyFAI.detectors.RaspberryPi5M",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RaspberryPi8M": {
  "data": {
   "lineno": 2774,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RaspberryPi8M.__init__": {
  "data": {
   "lineno": 2782,
   "symbols_in_volume": [
    "pyFAI.detectors.RaspberryPi8M",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Rayonix": {
  "data": {
   "lineno": 1961,
   "symbols_in_volume": [
    "binning",
    "property",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Rayonix.__init__": {
  "data": {
   "lineno": 1966,
   "symbols_in_volume": [
    "binning",
    "pyFAI.detectors.Rayonix",
    "super",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Rayonix.__repr__": {
  "data": {
   "lineno": 2005
  },
  "type": "function"
 },
 "pyFAI.detectors.Rayonix.get_binning": {
  "data": {
   "lineno": 1977
  },
  "type": "function"
 },
 "pyFAI.detectors.Rayonix.guess_binning": {
  "data": {
   "lineno": 2009,
   "symbols_in_volume": [
    "dir",
    "pyFAI.detectors.logger",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Rayonix.set_binning": {
  "data": {
   "lineno": 1980,
   "symbols_in_volume": [
    "dir",
    "float",
    "int",
    "len",
    "pyFAI.detectors.logger",
    "round"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Rayonix133": {
  "data": {
   "lineno": 2045,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Rayonix133.__init__": {
  "data": {
   "lineno": 2064,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Rayonix133.calc_mask": {
  "data": {
   "lineno": 2067,
   "symbols_in_volume": [
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixLx170": {
  "data": {
   "lineno": 2121,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RayonixLx170.__init__": {
  "data": {
   "lineno": 2140,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixLx255": {
  "data": {
   "lineno": 2166,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RayonixLx255.__init__": {
  "data": {
   "lineno": 2184,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixMx170": {
  "data": {
   "lineno": 2144,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RayonixMx170.__init__": {
  "data": {
   "lineno": 2162,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixMx225": {
  "data": {
   "lineno": 2188,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RayonixMx225.__init__": {
  "data": {
   "lineno": 2205,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixMx225hs": {
  "data": {
   "lineno": 2209,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RayonixMx225hs.__init__": {
  "data": {
   "lineno": 2228,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixMx300": {
  "data": {
   "lineno": 2232,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RayonixMx300.__init__": {
  "data": {
   "lineno": 2248,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixMx300hs": {
  "data": {
   "lineno": 2252,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RayonixMx300hs.__init__": {
  "data": {
   "lineno": 2271,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixMx325": {
  "data": {
   "lineno": 2364,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RayonixMx325.__init__": {
  "data": {
   "lineno": 2379,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixMx340hs": {
  "data": {
   "lineno": 2275,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RayonixMx340hs.__init__": {
  "data": {
   "lineno": 2294,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixMx425hs": {
  "data": {
   "lineno": 2342,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RayonixMx425hs.__init__": {
  "data": {
   "lineno": 2360,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixSx165": {
  "data": {
   "lineno": 2075,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RayonixSx165.__init__": {
  "data": {
   "lineno": 2091,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixSx165.calc_mask": {
  "data": {
   "lineno": 2094,
   "symbols_in_volume": [
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixSx200": {
  "data": {
   "lineno": 2102,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RayonixSx200.__init__": {
  "data": {
   "lineno": 2117,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixSx30hs": {
  "data": {
   "lineno": 2298,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RayonixSx30hs.__init__": {
  "data": {
   "lineno": 2316,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.RayonixSx85hs": {
  "data": {
   "lineno": 2320,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.RayonixSx85hs.__init__": {
  "data": {
   "lineno": 2338,
   "symbols_in_volume": [
    "pyFAI.detectors.Rayonix"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Titan": {
  "data": {
   "lineno": 1396,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Titan.__init__": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Titan.__repr__": {
  "data": {
   "lineno": 1408
  },
  "type": "function"
 },
 "pyFAI.detectors.Xpad_flat": {
  "data": {
   "lineno": 1759,
   "symbols_in_volume": [
    "aliases",
    "pyFAI.detectors.ImXPadS10"
   ]
  },
  "type": "class"
 },
 "pyFAI.detectors.Xpad_flat.__init__": {
  "data": {
   "lineno": 1774,
   "symbols_in_volume": [
    "dir",
    "pyFAI.detectors.Xpad_flat",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Xpad_flat.__repr__": {
  "data": {
   "lineno": 1782
  },
  "type": "function"
 },
 "pyFAI.detectors.Xpad_flat.calc_cartesian_positions": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": [
    "expand2d",
    "int",
    "pyFAI.detectors.bilinear",
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Xpad_flat.calc_mask": {
  "data": {
   "lineno": 1800,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyFAI.detectors.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Xpad_flat.calc_pixels_edges": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": [
    "pyFAI.detectors.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.Xpad_flat.get_pixel_corners": {
  "data": {
   "lineno": 1883,
   "symbols_in_volume": [
    "pyFAI.detectors.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.detectors.__author__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.detectors.__contact__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.detectors.__copyright__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.detectors.__date__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.detectors.__license__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.detectors.__status__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.detectors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.detectors.bilinear": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pyFAI.detectors.detector_factory": {
  "data": {
   "lineno": 2988
  },
  "type": "constant"
 },
 "pyFAI.detectors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.detectors.epsilon": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "pyFAI.detectors.fabio": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "pyFAI.detectors.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pyFAI.detectors.load": {
  "data": {
   "lineno": 2989
  },
  "type": "constant"
 },
 "pyFAI.detectors.logger": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pyFAI.detectors.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.detectors.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.detectors.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.detectors.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "pyFAI.detectors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.detectors.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.detectors.with_metaclass": {
  "data": {
   "shadows": "six.with_metaclass"
  },
  "type": "import"
 },
 "pyFAI.detectors.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.diffmap": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.diffmap.collections",
    "pyFAI.diffmap.logging",
    "range",
    "str"
   ]
  },
  "type": "module"
 },
 "pyFAI.diffmap.DIGITS": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pyFAI.diffmap.DiffMap": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "pyFAI.diffmap.DiffMap.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "to_unit"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap.DiffMap.__repr__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pyFAI.diffmap.DiffMap.get_pos": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "pyFAI.diffmap.Position"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap.DiffMap.get_use_gpu": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "pyFAI.diffmap.DiffMap.init_ai": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "print",
    "pyFAI.diffmap.fabio",
    "pyFAI.diffmap.numpy",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap.DiffMap.makeHDF5": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "Nexus",
    "RuntimeError",
    "dir",
    "get_isotime",
    "len",
    "pyFAI.diffmap.logger",
    "pyFAI.diffmap.numpy",
    "pyFAI.diffmap.os",
    "pyFAI.diffmap.posixpath",
    "pyFAI.diffmap.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap.DiffMap.parse": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ArgumentParser",
    "RuntimeError",
    "int",
    "open",
    "pyFAI.diffmap.glob",
    "pyFAI.diffmap.json",
    "pyFAI.diffmap.logger",
    "pyFAI.diffmap.logging",
    "pyFAI.diffmap.os",
    "pyFAI.diffmap.urlparse",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap.DiffMap.process": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "print",
    "pyFAI.diffmap.time"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap.DiffMap.process_one_file": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "print",
    "pyFAI.diffmap.fabio",
    "pyFAI.diffmap.os",
    "pyFAI.diffmap.time",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap.DiffMap.process_one_frame": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "pyFAI.diffmap.DiffMap.set_use_gpu": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "pyFAI.diffmap.DiffMap.setup_ai": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "RuntimeError",
    "load",
    "print",
    "pyFAI.diffmap.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap.DiffMap.show_stats": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "ImportError",
    "pyFAI.diffmap.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap.DiffMap.to_tuple": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "int",
    "pyFAI.diffmap.DIGITS",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap.Position": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "pyFAI.diffmap.PyFAI_DATE": {
  "data": {
   "shadows": "date"
  },
  "type": "import"
 },
 "pyFAI.diffmap.PyFAI_VERSION": {
  "data": {
   "shadows": "version"
  },
  "type": "import"
 },
 "pyFAI.diffmap.__author__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.diffmap.__contact__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.diffmap.__copyright__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.diffmap.__date__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.diffmap.__docformat__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.diffmap.__license__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.diffmap.__status__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.diffmap.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.diffmap.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyFAI.diffmap.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.diffmap.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.diffmap.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "pyFAI.diffmap.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyFAI.diffmap.logger": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.diffmap.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.diffmap.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.diffmap.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.diffmap.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "pyFAI.diffmap.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.diffmap.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.diffmap.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.diffmap.urlparse": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pyFAI.diffmap_widget": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.diffmap_widget.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.diffmap_widget.DiffMapWidget": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "class"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "AttributeError",
    "ListDataSet",
    "RuntimeError",
    "get_ui_file",
    "pyFAI.diffmap_widget.TreeModel",
    "pyFAI.diffmap_widget.logger",
    "pyFAI.diffmap_widget.threading",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget._menu_file": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.clear_selection": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "print",
    "pyFAI.diffmap_widget.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.configure_diffraction": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "print",
    "pyFAI.diffmap_widget.IntegrateWidget",
    "pyFAI.diffmap_widget.json",
    "pyFAI.diffmap_widget.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.configure_output": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.create_connections": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.display_processing": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "to_unit"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.do_abort": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.dump": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "open",
    "pyFAI.diffmap_widget.json"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.get_config": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "int_",
    "str_"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.input_filer": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "DataSet",
    "isinstance",
    "str_",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.process": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "DiffMap",
    "enumerate",
    "len",
    "print",
    "pyFAI.diffmap_widget.logger",
    "pyFAI.diffmap_widget.time",
    "to_unit"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.restore": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "open",
    "pyFAI.diffmap_widget.json",
    "pyFAI.diffmap_widget.logger",
    "pyFAI.diffmap_widget.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.save_config": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.diffmap_widget.logger",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.set_config": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "DataSet",
    "ListDataSet",
    "str_",
    "value"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.set_validator": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.sort_input": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.start_processing": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "len",
    "pyFAI.diffmap_widget.logger",
    "pyFAI.diffmap_widget.threading",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.update_number_of_frames": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.update_number_of_points": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.update_processing": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "ValueError",
    "pyFAI.diffmap_widget.time"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.DiffMapWidget.update_slice": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.IntegrateWidget": {
  "data": {
   "lineno": 56
  },
  "type": "class"
 },
 "pyFAI.diffmap_widget.IntegrateWidget.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "AIWidget"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.IntegrateWidget.get_config": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.TreeModel": {
  "data": {
   "lineno": 74
  },
  "type": "class"
 },
 "pyFAI.diffmap_widget.TreeModel.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pyFAI.diffmap_widget.TreeModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.TreeModel.columnCount": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.TreeModel.data": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.TreeModel.flags": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.TreeModel.headerData": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.TreeModel.index": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.TreeModel.parent": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.TreeModel.rowCount": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.TreeModel.update": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.diffmap_widget.__author__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.diffmap_widget.__contact__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.diffmap_widget.__copyright__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.diffmap_widget.__date__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.diffmap_widget.__docformat__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.diffmap_widget.__license__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.diffmap_widget.__status__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.diffmap_widget.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.diffmap_widget.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.diffmap_widget.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyFAI.diffmap_widget.logger": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pyFAI.diffmap_widget.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.diffmap_widget.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.diffmap_widget.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.diffmap_widget.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.diffmap_widget.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.directories": {
  "data": {
   "symbols_in_volume": [
    "OSError",
    "__name__",
    "pyFAI.directories.PYFAI_DATA",
    "pyFAI.directories.data_dir",
    "pyFAI.directories.getpass",
    "pyFAI.directories.logger",
    "pyFAI.directories.logging",
    "pyFAI.directories.os",
    "pyFAI.directories.tempfile",
    "pyFAI.directories.testimages"
   ]
  },
  "type": "module"
 },
 "pyFAI.directories.PYFAI_DATA": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pyFAI.directories.__author__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.directories.__contact__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.directories.__copyright__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.directories.__date__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyFAI.directories.__license__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyFAI.directories.__status__": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyFAI.directories.data_dir": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pyFAI.directories.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "pyFAI.directories.logger": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pyFAI.directories.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.directories.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.directories.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyFAI.directories.testimages": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pyFAI.distortion": {
  "data": {
   "symbols_in_volume": [
    "IOError",
    "ImportError",
    "__name__",
    "int",
    "pyFAI.distortion.logger",
    "pyFAI.distortion.logging",
    "pyFAI.distortion.scipy",
    "pyFAI.distortion.v",
    "scipy.sparse.linalg",
    "tuple"
   ]
  },
  "type": "module"
 },
 "pyFAI.distortion.Distortion": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.distortion.Distortion.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "isinstance",
    "pyFAI.distortion.numpy",
    "pyFAI.distortion.threading",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Distortion.__repr__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyFAI.distortion.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Distortion.calc_LUT": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "Exception",
    "Quad",
    "list",
    "print",
    "pyFAI.distortion._distortion",
    "pyFAI.distortion.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Distortion.calc_init": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Distortion.calc_pos": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "int",
    "math.ceil",
    "pyFAI.distortion._distortion",
    "pyFAI.distortion.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Distortion.calc_size": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "pyFAI.distortion._distortion",
    "pyFAI.distortion.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Distortion.correct": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "ValueError",
    "min",
    "pyFAI.distortion._distortion",
    "pyFAI.distortion.logger",
    "pyFAI.distortion.numpy",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Distortion.reset": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Distortion.shape_out": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Distortion.uncorrect": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyFAI.distortion._distortion",
    "pyFAI.distortion.numpy",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.linalg",
    "scipy.sparse.linalg.lsmr"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.distortion.Quad.__init__": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.__repr__": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "pyFAI.distortion.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.calc_area_AB": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "pyFAI.distortion.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.calc_area_BC": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "pyFAI.distortion.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.calc_area_CD": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "pyFAI.distortion.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.calc_area_DA": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "pyFAI.distortion.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.calc_area_old": {
  "data": {
   "lineno": 536
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.calc_area_vectorial": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "pyFAI.distortion.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.get_box": {
  "data": {
   "lineno": 444
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.get_box_size0": {
  "data": {
   "lineno": 453
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.get_box_size1": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.get_idx": {
  "data": {
   "lineno": 441
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.get_offset0": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.get_offset1": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.init_slope": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "pyFAI.distortion.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.integrateAB": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "abs",
    "calc_area",
    "int",
    "math.ceil",
    "math.floor",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.populate_box": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "RuntimeError",
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.Quad.reinit": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "int",
    "math.ceil",
    "math.floor",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "pyFAI.distortion.__author__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.distortion.__contact__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.distortion.__copyright__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.distortion.__date__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.distortion.__license__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.distortion.__status__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.distortion._distortion": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pyFAI.distortion.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.distortion.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyFAI.distortion.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pyFAI.distortion.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.distortion.floor": {
  "data": {
   "shadows": "math.floor"
  },
  "type": "import"
 },
 "pyFAI.distortion.linalg": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pyFAI.distortion.logger": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.distortion.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.distortion.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.distortion.ocl_azim_csr": {
  "data": {
   "shadows": "azim_csr"
  },
  "type": "import"
 },
 "pyFAI.distortion.ocl_azim_lut": {
  "data": {
   "shadows": "azim_lut"
  },
  "type": "import"
 },
 "pyFAI.distortion.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.distortion.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.distortion.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pyFAI.distortion.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.distortion.v": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pyFAI.distortion.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.ext": {
  "data": {},
  "type": "module"
 },
 "pyFAI.ext._bispev": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext._bispev.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext._bispev.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext._bispev.imp",
    "pyFAI.ext._bispev.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext._bispev.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext._bispev.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext._bispev.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext._blob": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext._blob.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext._blob.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext._blob.imp",
    "pyFAI.ext._blob.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext._blob.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext._blob.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext._blob.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext._convolution": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext._convolution.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext._convolution.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext._convolution.imp",
    "pyFAI.ext._convolution.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext._convolution.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext._convolution.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext._convolution.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext._distortion": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext._distortion.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext._distortion.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext._distortion.imp",
    "pyFAI.ext._distortion.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext._distortion.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext._distortion.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext._distortion.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext._geometry": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext._geometry.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext._geometry.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext._geometry.imp",
    "pyFAI.ext._geometry.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext._geometry.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext._geometry.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext._geometry.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext._tree": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext._tree.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext._tree.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext._tree.imp",
    "pyFAI.ext._tree.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext._tree.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext._tree.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext._tree.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.bilinear": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.bilinear.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.bilinear.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.bilinear.imp",
    "pyFAI.ext.bilinear.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.bilinear.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.bilinear.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.bilinear.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.fastcrc": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.fastcrc.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.fastcrc.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.fastcrc.imp",
    "pyFAI.ext.fastcrc.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.fastcrc.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.fastcrc.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.fastcrc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.histogram": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.histogram.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.histogram.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.histogram.imp",
    "pyFAI.ext.histogram.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.histogram.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.histogram.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.histogram.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.inpainting": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.inpainting.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.inpainting.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.inpainting.imp",
    "pyFAI.ext.inpainting.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.inpainting.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.inpainting.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.inpainting.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.marchingsquares": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.marchingsquares.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.marchingsquares.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.marchingsquares.imp",
    "pyFAI.ext.marchingsquares.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.marchingsquares.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.marchingsquares.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.marchingsquares.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.morphology": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.morphology.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.morphology.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.morphology.imp",
    "pyFAI.ext.morphology.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.morphology.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.morphology.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.morphology.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.preproc": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.preproc.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.preproc.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.preproc.imp",
    "pyFAI.ext.preproc.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.preproc.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.preproc.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.preproc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.reconstruct": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.reconstruct.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.reconstruct.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.reconstruct.imp",
    "pyFAI.ext.reconstruct.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.reconstruct.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.reconstruct.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.reconstruct.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.relabel": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.relabel.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.relabel.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.relabel.imp",
    "pyFAI.ext.relabel.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.relabel.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.relabel.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.relabel.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "pyFAI.ext.setup.configuration"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "pyFAI.ext.setup.__authors__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyFAI.ext.setup.__date__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyFAI.ext.setup.__license__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyFAI.ext.setup.configuration": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "pyFAI.ext.setup.create_extension_config",
    "pyFAI.ext.setup.os",
    "pyFAI.ext.setup.platform"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.setup.create_extension_config": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "dict",
    "pyFAI.ext.setup.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.setup.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.ext.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.ext.setup.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pyFAI.ext.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "pyFAI.ext.sparse_utils": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.sparse_utils.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.sparse_utils.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.sparse_utils.imp",
    "pyFAI.ext.sparse_utils.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.sparse_utils.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.sparse_utils.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.sparse_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.splitBBox": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.splitBBox.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.splitBBox.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.splitBBox.imp",
    "pyFAI.ext.splitBBox.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.splitBBox.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.splitBBox.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.splitBBox.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.splitBBoxCSR": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.splitBBoxCSR.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.splitBBoxCSR.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.splitBBoxCSR.imp",
    "pyFAI.ext.splitBBoxCSR.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.splitBBoxCSR.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.splitBBoxCSR.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.splitBBoxCSR.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.splitBBoxLUT": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.splitBBoxLUT.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.splitBBoxLUT.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.splitBBoxLUT.imp",
    "pyFAI.ext.splitBBoxLUT.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.splitBBoxLUT.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.splitBBoxLUT.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.splitBBoxLUT.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixel": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.splitPixel.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.splitPixel.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.splitPixel.imp",
    "pyFAI.ext.splitPixel.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.splitPixel.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixel.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixel.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixelFull": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.splitPixelFull.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.splitPixelFull.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.splitPixelFull.imp",
    "pyFAI.ext.splitPixelFull.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.splitPixelFull.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixelFull.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixelFull.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixelFullCSR": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.splitPixelFullCSR.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.splitPixelFullCSR.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.splitPixelFullCSR.imp",
    "pyFAI.ext.splitPixelFullCSR.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.splitPixelFullCSR.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixelFullCSR.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixelFullCSR.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixelFullLUT": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.splitPixelFullLUT.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.splitPixelFullLUT.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.splitPixelFullLUT.imp",
    "pyFAI.ext.splitPixelFullLUT.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.splitPixelFullLUT.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixelFullLUT.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixelFullLUT.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixelFullLUT_double": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.splitPixelFullLUT_double.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.splitPixelFullLUT_double.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.splitPixelFullLUT_double.imp",
    "pyFAI.ext.splitPixelFullLUT_double.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.splitPixelFullLUT_double.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixelFullLUT_double.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.splitPixelFullLUT_double.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.ext.watershed": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.ext.watershed.__bootstrap__"
   ]
  },
  "type": "module"
 },
 "pyFAI.ext.watershed.__bootstrap__": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "__loader__",
    "__name__",
    "pyFAI.ext.watershed.imp",
    "pyFAI.ext.watershed.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.ext.watershed.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "pyFAI.ext.watershed.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "pyFAI.ext.watershed.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.geometry": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "collections.namedtuple",
    "pyFAI.geometry.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.geometry.Geometry": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "pyFAI.geometry.Geometry.__copy__": {
  "data": {
   "lineno": 1756
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.__deepcopy__": {
  "data": {
   "lineno": 1775,
   "symbols_in_volume": [
    "dir",
    "id"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.geometry.os",
    "pyFAI.geometry.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.__repr__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pyFAI.geometry.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry._calc_cartesian_positions": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.array_from_unit": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "dir",
    "pyFAI.geometry.Geometry",
    "pyFAI.geometry.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.calc_pos_zyx": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "pyFAI.geometry._geometry",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.calc_transmission": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "RuntimeError",
    "crc32",
    "pyFAI.geometry.logger",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.calcfrom1d": {
  "data": {
   "lineno": 1638,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.geometry.numpy",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.calcfrom2d": {
  "data": {
   "lineno": 1689,
   "symbols_in_volume": [
    "RuntimeError",
    "polar_interpolate",
    "pyFAI.geometry.numpy",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.center_array": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "pyFAI.geometry.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.chi": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "pyFAI.geometry._geometry",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.chiArray": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "pyFAI.geometry.logger",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.chi_corner": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.cornerArray": {
  "data": {
   "lineno": 706
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.cornerQArray": {
  "data": {
   "lineno": 719
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.cornerRArray": {
  "data": {
   "lineno": 731
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.cornerRd2Array": {
  "data": {
   "lineno": 743
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.corner_array": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "pyFAI.geometry._geometry",
    "pyFAI.geometry.bilinear",
    "pyFAI.geometry.logger",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.cosIncidance": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "enumerate",
    "pyFAI.geometry._geometry",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.del_chia": {
  "data": {
   "lineno": 2016
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.del_dssa": {
  "data": {
   "lineno": 2026
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.del_qa": {
  "data": {
   "lineno": 2036
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.del_ra": {
  "data": {
   "lineno": 2046
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.del_ttha": {
  "data": {
   "lineno": 2006
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.delta2Theta": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "abs",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.deltaChi": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "pyFAI.geometry._geometry",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.deltaQ": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "abs",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.deltaR": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "abs",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.deltaRd2": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "abs",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.delta_array": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "abs",
    "pyFAI.geometry.logger",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.diffSolidAngle": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.getFit2D": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "abs",
    "max",
    "min",
    "numpy.arccos",
    "numpy.cos",
    "numpy.degrees",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.getPyFAI": {
  "data": {
   "lineno": 1194
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.getSPD": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "abs",
    "collections.OrderedDict",
    "pyFAI.geometry.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_chia": {
  "data": {
   "lineno": 2010
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_correct_solid_angle_for_spline": {
  "data": {
   "lineno": 2082
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_dist": {
  "data": {
   "lineno": 1894
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_dssa": {
  "data": {
   "lineno": 2020
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_mask": {
  "data": {
   "lineno": 2106
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_maskfile": {
  "data": {
   "lineno": 2098
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_pixel1": {
  "data": {
   "lineno": 2050
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_pixel2": {
  "data": {
   "lineno": 2058
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_poni1": {
  "data": {
   "lineno": 1908
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_poni2": {
  "data": {
   "lineno": 1922
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_qa": {
  "data": {
   "lineno": 2030
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_ra": {
  "data": {
   "lineno": 2040
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_rot1": {
  "data": {
   "lineno": 1936
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_rot2": {
  "data": {
   "lineno": 1950
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_rot3": {
  "data": {
   "lineno": 1964
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_shape": {
  "data": {
   "lineno": 1869,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_spline": {
  "data": {
   "lineno": 2074
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_splineFile": {
  "data": {
   "lineno": 2066
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_ttha": {
  "data": {
   "lineno": 2000
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.get_wavelength": {
  "data": {
   "lineno": 1992,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.load": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "Exception",
    "float",
    "open",
    "pyFAI.geometry.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.make_headers": {
  "data": {
   "lineno": 1435,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.oversampleArray": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "pyFAI.geometry.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.polarization": {
  "data": {
   "lineno": 1522,
   "symbols_in_volume": [
    "RuntimeError",
    "crc32",
    "float",
    "pyFAI.geometry.PolarizationArray",
    "pyFAI.geometry.PolarizationDescription",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.positionArray": {
  "data": {
   "lineno": 603
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.position_array": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "pyFAI.geometry.logger",
    "pyFAI.geometry.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.qArray": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "pyFAI.geometry.logger",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.qCornerFunct": {
  "data": {
   "lineno": 452
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.qFunction": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.geometry._geometry",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.rArray": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "pyFAI.geometry.logger",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.rCornerFunct": {
  "data": {
   "lineno": 460
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.rFunction": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "pyFAI.geometry._geometry",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.rd2Array": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.reset": {
  "data": {
   "lineno": 1624
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.rotation_matrix": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.save": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "IOError",
    "isinstance",
    "open",
    "pyFAI.geometry.logger",
    "pyFAI.geometry.os",
    "pyFAI.geometry.time"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.setChiDiscAtPi": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.setChiDiscAtZero": {
  "data": {
   "lineno": 1465,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.setFit2D": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "AttributeError",
    "abs",
    "max",
    "min",
    "numpy.cos",
    "numpy.radians",
    "numpy.sin",
    "pyFAI.geometry.logger",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.setOversampling": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.setPyFAI": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.setSPD": {
  "data": {
   "lineno": 1334,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_chia": {
  "data": {
   "lineno": 2013,
   "symbols_in_volume": [
    "pyFAI.geometry.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_correct_solid_angle_for_spline": {
  "data": {
   "lineno": 2085,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_dist": {
  "data": {
   "lineno": 1887,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_dssa": {
  "data": {
   "lineno": 2023,
   "symbols_in_volume": [
    "pyFAI.geometry.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_mask": {
  "data": {
   "lineno": 2103
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_maskfile": {
  "data": {
   "lineno": 2095
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_param": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "RuntimeError",
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_pixel1": {
  "data": {
   "lineno": 2053
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_pixel2": {
  "data": {
   "lineno": 2061
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_poni1": {
  "data": {
   "lineno": 1899,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_poni2": {
  "data": {
   "lineno": 1913,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_qa": {
  "data": {
   "lineno": 2033,
   "symbols_in_volume": [
    "pyFAI.geometry.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_ra": {
  "data": {
   "lineno": 2043,
   "symbols_in_volume": [
    "pyFAI.geometry.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_rot1": {
  "data": {
   "lineno": 1927,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_rot2": {
  "data": {
   "lineno": 1941,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_rot3": {
  "data": {
   "lineno": 1955,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_spline": {
  "data": {
   "lineno": 2077
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_splineFile": {
  "data": {
   "lineno": 2069
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_ttha": {
  "data": {
   "lineno": 2003,
   "symbols_in_volume": [
    "pyFAI.geometry.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.set_wavelength": {
  "data": {
   "lineno": 1969,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.sload": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.solidAngleArray": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "crc32",
    "float",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.tth": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.arctan2",
    "numpy.sqrt",
    "pyFAI.geometry._geometry"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.tth_corner": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "pyFAI.geometry.Geometry.twoThetaArray": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "pyFAI.geometry.logger",
    "pyFAI.geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometry.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyFAI.geometry.PolarizationArray": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "pyFAI.geometry.PolarizationDescription": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "pyFAI.geometry.__author__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.geometry.__contact__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.geometry.__copyright__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.geometry.__date__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.geometry.__docformat__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.geometry.__license__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.geometry.__status__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.geometry._geometry": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pyFAI.geometry.arccos": {
  "data": {
   "shadows": "numpy.arccos"
  },
  "type": "import"
 },
 "pyFAI.geometry.arctan2": {
  "data": {
   "shadows": "numpy.arctan2"
  },
  "type": "import"
 },
 "pyFAI.geometry.bilinear": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pyFAI.geometry.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "pyFAI.geometry.degrees": {
  "data": {
   "shadows": "numpy.degrees"
  },
  "type": "import"
 },
 "pyFAI.geometry.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.geometry.logger": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pyFAI.geometry.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.geometry.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyFAI.geometry.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.geometry.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.geometry.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.geometry.radians": {
  "data": {
   "shadows": "numpy.radians"
  },
  "type": "import"
 },
 "pyFAI.geometry.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "pyFAI.geometry.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "pyFAI.geometry.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.geometry.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "__name__",
    "pyFAI.geometryRefinement.logging",
    "pyFAI.geometryRefinement.os",
    "scipy.optimize.curve_fit"
   ]
  },
  "type": "module"
 },
 "pyFAI.geometryRefinement.AzimuthalIntegrator": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyFAI.geometryRefinement.GeometryRefinement": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "property",
    "pyFAI.geometryRefinement.AzimuthalIntegrator"
   ]
  },
  "type": "class"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY",
    "Calibrant",
    "RuntimeError",
    "float",
    "isinstance",
    "math.pi",
    "pyFAI.geometryRefinement.AzimuthalIntegrator",
    "pyFAI.geometryRefinement.numpy",
    "pyFAI.geometryRefinement.types",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.anneal": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "abs",
    "pyFAI.geometryRefinement.logger",
    "scipy.optimize.anneal"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.calc_2th": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "len",
    "pyFAI.geometryRefinement.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.chi2": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.chi2_wavelength": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.confidence": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "print",
    "pyFAI.geometryRefinement.numpy",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.curve_fit": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "print",
    "pyFAI.geometryRefinement.logger",
    "pyFAI.geometryRefinement.numpy",
    "pyFAI.geometryRefinement.scipy",
    "scipy.optimize.curve_fit",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.get_dist_max": {
  "data": {
   "lineno": 662
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.get_dist_min": {
  "data": {
   "lineno": 673
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.get_poni1_max": {
  "data": {
   "lineno": 695
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.get_poni1_min": {
  "data": {
   "lineno": 684
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.get_poni2_max": {
  "data": {
   "lineno": 717
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.get_poni2_min": {
  "data": {
   "lineno": 706
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.get_rot1_max": {
  "data": {
   "lineno": 739
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.get_rot1_min": {
  "data": {
   "lineno": 728
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.get_rot2_max": {
  "data": {
   "lineno": 761
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.get_rot2_min": {
  "data": {
   "lineno": 750
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.get_rot3_max": {
  "data": {
   "lineno": 783
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.get_rot3_min": {
  "data": {
   "lineno": 772
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.get_wavelength_max": {
  "data": {
   "lineno": 805
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.get_wavelength_min": {
  "data": {
   "lineno": 794
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.guess_poni": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "fit_ellipse",
    "len",
    "max",
    "min",
    "pyFAI.geometryRefinement.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.refine1": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "abs",
    "pyFAI.geometryRefinement.logger",
    "pyFAI.geometryRefinement.numpy",
    "scipy.optimize.leastsq",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.refine2": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "abs",
    "getattr",
    "pyFAI.geometryRefinement.logger",
    "pyFAI.geometryRefinement.logging",
    "pyFAI.geometryRefinement.numpy",
    "scipy.optimize.fmin_slsqp"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.refine2_wavelength": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "abs",
    "getattr",
    "pyFAI.geometryRefinement.logger",
    "pyFAI.geometryRefinement.logging",
    "pyFAI.geometryRefinement.numpy",
    "scipy.optimize.fmin_slsqp"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.residu1": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.residu1_wavelength": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.residu2": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "pyFAI.geometryRefinement.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.residu2_wavelength": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "pyFAI.geometryRefinement.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.residu2_wavelength_weighted": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "pyFAI.geometryRefinement.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.residu2_weighted": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "pyFAI.geometryRefinement.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.roca": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "float",
    "len",
    "print",
    "pyFAI.geometryRefinement.ROCA",
    "pyFAI.geometryRefinement.os",
    "pyFAI.geometryRefinement.subprocess",
    "pyFAI.geometryRefinement.tempfile",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_dist_max": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_dist_min": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_poni1_max": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_poni1_min": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_poni2_max": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_poni2_min": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_rot1_max": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_rot1_min": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_rot2_max": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_rot2_min": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_rot3_max": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_rot3_min": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_tolerance": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "abs",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_wavelength_max": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.set_wavelength_min": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.GeometryRefinement.simplex": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "abs",
    "pyFAI.geometryRefinement.logger",
    "pyFAI.geometryRefinement.numpy",
    "scipy.optimize.fmin",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.geometryRefinement.ROCA": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "pyFAI.geometryRefinement.WindowsError": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pyFAI.geometryRefinement.__author__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.geometryRefinement.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.geometryRefinement.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.geometryRefinement.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.geometryRefinement.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.geometryRefinement.__status__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.geometryRefinement.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement.anneal": {
  "data": {
   "shadows": "scipy.optimize.anneal"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement.curve_fit": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pyFAI.geometryRefinement.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement.fmin": {
  "data": {
   "shadows": "scipy.optimize.fmin"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement.fmin_slsqp": {
  "data": {
   "shadows": "scipy.optimize.fmin_slsqp"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement.leastsq": {
  "data": {
   "shadows": "scipy.optimize.leastsq"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement.logger": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pyFAI.geometryRefinement.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyFAI.geometryRefinement.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pyFAI.goniometer": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "collections.namedtuple",
    "pyFAI.goniometer.GeometryTransformation",
    "pyFAI.goniometer.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.goniometer.ExtendedTransformation": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.goniometer.ExtendedTransformation.__call__": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "code",
    "code.input_names",
    "float",
    "len",
    "pyFAI.goniometer.numpy",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.ExtendedTransformation.__init__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "RuntimeError",
    "collections.OrderedDict",
    "collections.namedtuple",
    "list",
    "pyFAI.goniometer.numexpr",
    "pyFAI.goniometer.numpy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.ExtendedTransformation.__repr__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "pyFAI.goniometer.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.ExtendedTransformation.to_dict": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.GeometryTransformation": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.goniometer.GeometryTransformation.__call__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "code",
    "float",
    "len",
    "pyFAI.goniometer.PoniParam",
    "pyFAI.goniometer.numpy",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.GeometryTransformation.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.goniometer.numexpr",
    "pyFAI.goniometer.numpy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.GeometryTransformation.__repr__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "pyFAI.goniometer.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.GeometryTransformation.to_dict": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.GeometryTranslation": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "pyFAI.goniometer.Goniometer": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.goniometer.Goniometer.__init__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "collections.namedtuple",
    "detector_factory",
    "dict",
    "dir",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.Goniometer.__repr__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "pyFAI.goniometer.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.Goniometer.get_ai": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.Goniometer.get_mg": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "MultiGeometry"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.Goniometer.save": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "IOError",
    "open",
    "pyFAI.goniometer.json",
    "pyFAI.goniometer.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.Goniometer.sload": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "RuntimeError",
    "classmethod",
    "cls",
    "open",
    "pyFAI.goniometer.ExtendedTransformation",
    "pyFAI.goniometer.GeometryTransformation",
    "pyFAI.goniometer.json"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.Goniometer.to_dict": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dir",
    "pyFAI.goniometer.logger",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.GoniometerRefinement": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "pyFAI.goniometer.Goniometer"
   ]
  },
  "type": "class"
 },
 "pyFAI.goniometer.GoniometerRefinement.__init__": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict",
    "dir",
    "isinstance",
    "len",
    "list",
    "pyFAI.goniometer.Goniometer"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.GoniometerRefinement.__repr__": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.GoniometerRefinement.chi2": {
  "data": {
   "lineno": 655
  },
  "type": "function"
 },
 "pyFAI.goniometer.GoniometerRefinement.new_geometry": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "pyFAI.goniometer.SingleGeometry"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.GoniometerRefinement.refine2": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "abs",
    "dir",
    "print",
    "pyFAI.goniometer.numpy",
    "scipy.optimize.minimize"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.GoniometerRefinement.residu2": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.GoniometerRefinement.set_bounds": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "dir",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.GoniometerRefinement.sload": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "RuntimeError",
    "classmethod",
    "cls",
    "cls.file_version",
    "open",
    "pyFAI.goniometer.ExtendedTransformation",
    "pyFAI.goniometer.GeometryTransformation",
    "pyFAI.goniometer.json"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyFAI.goniometer.PoniParam": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pyFAI.goniometer.SingleGeometry": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.goniometer.SingleGeometry.__init__": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ControlPoints",
    "GeometryRefinement",
    "detector_factory",
    "dict",
    "isinstance",
    "pyFAI.goniometer.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.SingleGeometry.extract_cp": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "ControlPoints",
    "Massif",
    "int",
    "isocontour",
    "len",
    "pyFAI.goniometer.logger",
    "pyFAI.goniometer.numpy",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.SingleGeometry.get_ai": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "AzimuthalIntegrator"
   ]
  },
  "type": "function"
 },
 "pyFAI.goniometer.SingleGeometry.get_position": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "pyFAI.goniometer.__author__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.goniometer.__contact__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.goniometer.__copyright__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.goniometer.__date__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.goniometer.__docformat__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.goniometer.__license__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.goniometer.__status__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.goniometer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.goniometer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.goniometer.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyFAI.goniometer.logger": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "pyFAI.goniometer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.goniometer.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "pyFAI.goniometer.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyFAI.goniometer.numexpr": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "pyFAI.goniometer.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.goniometer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.goniometer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.goniometer.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.grid": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.grid.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.grid.Grid": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.grid.Grid.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "pyFAI.grid.fabio",
    "pyFAI.grid.numpy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.grid.Grid.threshold": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.grid.__author__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.grid.__contact__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.grid.__copyright__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.grid.__date__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.grid.__docformat__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.grid.__license__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.grid.__status__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.grid.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.grid.logger": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.grid.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.grid.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.gui": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.__authors__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyFAI.gui.__date__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.__license__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui._pyside_dynamic": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.gui._pyside_dynamic.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui._pyside_dynamic.QMetaObject": {
  "data": {
   "shadows": "PySide.QtCore.QMetaObject"
  },
  "type": "import"
 },
 "pyFAI.gui._pyside_dynamic.QUiLoader": {
  "data": {
   "shadows": "PySide.QtUiTools.QUiLoader"
  },
  "type": "import"
 },
 "pyFAI.gui._pyside_dynamic.UiLoader": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "PySide.QtUiTools.QUiLoader"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui._pyside_dynamic.UiLoader.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "PySide.QtUiTools.QUiLoader.__init__"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui._pyside_dynamic.UiLoader.createWidget": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "PySide.QtUiTools.QUiLoader.createWidget",
    "TypeError",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui._pyside_dynamic._logger": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.gui._pyside_dynamic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui._pyside_dynamic.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.gui._pyside_dynamic.loadUi": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "PySide.QtCore.QMetaObject.connectSlotsByName",
    "pyFAI.gui._pyside_dynamic.UiLoader",
    "pyFAI.gui._pyside_dynamic._logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui._pyside_dynamic.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.gui._pyside_dynamic.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.gui._pyside_dynamic.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.AbstractCalibrationTask": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QWidget",
    "pyFAI.gui.qt.Signal"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask.eventFilter": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask",
    "pyFAI.gui.qt.QEvent.Hide",
    "pyFAI.gui.qt.QEvent.Show",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask.initNextStep": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask.model": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask.nextTask": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask.setModel": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.AbstractCalibrationTask.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.AbstractCalibrationTask.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.AbstractCalibrationTask.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.AbstractCalibrationTask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.AbstractCalibrationTask.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.CalibrantSelector": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.CalibrantSelector.CalibrantSelector": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QComboBox"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.CalibrantSelector.CalibrantSelector.__currentIndexChanged": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.CalibrantSelector.CalibrantSelector.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "CalibrantModel",
    "int.connect",
    "pyFAI.gui.calibration.CalibrantSelector.CalibrantSelector",
    "sorted",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.CalibrantSelector.CalibrantSelector.__modelChanged": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.CalibrantSelector.CalibrantSelector.findCalibrant": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.CalibrantSelector.CalibrantSelector.model": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.CalibrantSelector.CalibrantSelector.setModel": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.CalibrantSelector.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.CalibrantSelector.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.CalibrantSelector.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.CalibrantSelector.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.CalibrantSelector.pyFAI.calibrant": {
  "data": {
   "shadows": "pyFAI.calibrant"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.CalibrantSelector.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.CalibrationWindow": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.CalibrationWindow.CalibrationModel": {
  "data": {
   "shadows": "pyFAI.gui.calibration.model.CalibrationModel.CalibrationModel"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.CalibrationWindow.CalibrationWindow": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QMainWindow"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.CalibrationWindow.CalibrationWindow.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "pyFAI.gui.calibration.CalibrationWindow.CalibrationWindow",
    "pyFAI.gui.calibration.model.CalibrationModel.CalibrationModel",
    "pyFAI.gui.qt.loadUi",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.CalibrationWindow.CalibrationWindow.createTasks": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.ExperimentTask.ExperimentTask",
    "pyFAI.gui.calibration.GeometryTask.GeometryTask",
    "pyFAI.gui.calibration.IntegrationTask.IntegrationTask",
    "pyFAI.gui.calibration.MaskTask.MaskTask",
    "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.CalibrationWindow.CalibrationWindow.model": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.CalibrationWindow.CalibrationWindow.nextTask": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.CalibrationWindow.CalibrationWindow.setModel": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.CalibrationWindow.ExperimentTask": {
  "data": {
   "shadows": "pyFAI.gui.calibration.ExperimentTask.ExperimentTask"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.CalibrationWindow.GeometryTask": {
  "data": {
   "shadows": "pyFAI.gui.calibration.GeometryTask.GeometryTask"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.CalibrationWindow.IntegrationTask": {
  "data": {
   "shadows": "pyFAI.gui.calibration.IntegrationTask.IntegrationTask"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.CalibrationWindow.MaskTask": {
  "data": {
   "shadows": "pyFAI.gui.calibration.MaskTask.MaskTask"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.CalibrationWindow.PeakPickingTask": {
  "data": {
   "shadows": "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.CalibrationWindow.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.CalibrationWindow.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.CalibrationWindow.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.CalibrationWindow.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.CalibrationWindow.pyFAI.utils": {
  "data": {
   "shadows": "pyFAI.utils"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.CalibrationWindow.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.DetectorSelector": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.DetectorSelector.DetectorSelector": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QComboBox"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.DetectorSelector.DetectorSelector.__currentIndexChanged": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "detectorClass"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.DetectorSelector.DetectorSelector.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "DetectorModel",
    "int.connect",
    "pyFAI.gui.calibration.DetectorSelector.DetectorSelector",
    "sorted",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.DetectorSelector.DetectorSelector.__modelChanged": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "detectorClass"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.DetectorSelector.DetectorSelector.findDetectorClass": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "detectorClass",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.DetectorSelector.DetectorSelector.model": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.DetectorSelector.DetectorSelector.setModel": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.DetectorSelector.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.DetectorSelector.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.DetectorSelector.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.DetectorSelector.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.DetectorSelector.pyFAI.detectors": {
  "data": {
   "shadows": "pyFAI.detectors"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.DetectorSelector.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.ExperimentTask": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.gui.calibration.ExperimentTask.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.calibration.ExperimentTask.AbstractCalibrationTask": {
  "data": {
   "shadows": "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.__detectorModelUpdated": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.__displayError": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.__imageUpdated": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.ExperimentTask.ExperimentTask",
    "pyFAI.gui.qt.QVBoxLayout",
    "pyFAI.gui.qt.loadUi",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.__updateDetector": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "Exception",
    "pyFAI.gui.calibration.ExperimentTask._logger",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.__updateDetectorTemplate": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "Exception",
    "pyFAI.gui.calibration.ExperimentTask.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.__updateSplineFileVisibility": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask._updateModel": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.model.WavelengthToEnergyAdaptor.WavelengthToEnergyAdaptor"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.createImageDialog": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyFAI.gui.qt.QFileDialog",
    "pyFAI.gui.qt.QFileDialog.ExistingFile"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.createSplineDialog": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyFAI.gui.qt.QFileDialog",
    "pyFAI.gui.qt.QFileDialog.ExistingFile"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.getImageFromDialog": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "contextlib.contextmanager",
    "pyFAI.gui.calibration.ExperimentTask._logger",
    "pyFAI.gui.calibration.ExperimentTask.fabio",
    "pyFAI.gui.calibration.ExperimentTask.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.loadDark": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.loadImage": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.loadMask": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.loadSpline": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "pyFAI.gui.calibration.ExperimentTask._logger",
    "pyFAI.gui.calibration.ExperimentTask.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.ExperimentTask.printSelectedCalibrant": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.ExperimentTask.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.ExperimentTask.WavelengthToEnergyAdaptor": {
  "data": {
   "shadows": "pyFAI.gui.calibration.model.WavelengthToEnergyAdaptor.WavelengthToEnergyAdaptor"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.ExperimentTask.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.ExperimentTask.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.ExperimentTask.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.ExperimentTask._logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.ExperimentTask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.ExperimentTask.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.ExperimentTask.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.ExperimentTask.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.ExperimentTask.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.ExperimentTask.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.ExperimentTask.pyFAI.utils": {
  "data": {
   "shadows": "pyFAI.utils"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.ExperimentTask.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.ExperimentTask.silx.gui.plot": {
  "data": {
   "shadows": "silx.gui.plot"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.FileEdit": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.gui.calibration.FileEdit.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.calibration.FileEdit.FileEdit": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bool",
    "pyFAI.gui.qt.QLineEdit",
    "pyFAI.gui.qt.pyqtProperty"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.FileEdit.FileEdit.__applyText": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "pyFAI.gui.calibration.FileEdit._logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.FileEdit.FileEdit.__cancelText": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.FileEdit.FileEdit.__editingFinished": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.FileEdit.FileEdit.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.FileEdit.FileEdit",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.FileEdit.FileEdit.__modelChanged": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.FileEdit.FileEdit.__returnPressed": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.FileEdit.FileEdit.isApplyedWhenFocusOut": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.FileEdit.FileEdit.keyPressEvent": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.FileEdit.FileEdit",
    "pyFAI.gui.qt.Qt.Key_Enter",
    "pyFAI.gui.qt.Qt.Key_Escape",
    "pyFAI.gui.qt.Qt.Key_Return",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.FileEdit.FileEdit.model": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.FileEdit.FileEdit.setApplyedWhenFocusOut": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.FileEdit.FileEdit.setModel": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.FileEdit.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.FileEdit.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.FileEdit.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.FileEdit._logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.FileEdit.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.FileEdit.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.FileEdit.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.GeometryTask": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.gui.calibration.GeometryTask.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.calibration.GeometryTask.AbstractCalibrationTask": {
  "data": {
   "shadows": "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.GeometryTask.FitParamView": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QObject"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.GeometryTask.FitParamView.__constraintsClicked": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.FitParamView.__constraintsModelChanged": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.GeometryTask._iconVariableConstrained",
    "pyFAI.gui.calibration.GeometryTask._iconVariableFixed"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.FitParamView.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.GeometryTask._iconVariableConstrained",
    "pyFAI.gui.calibration.GeometryTask._iconVariableConstrainedOut",
    "pyFAI.gui.calibration.GeometryTask._iconVariableFixed",
    "pyFAI.gui.icons.getQIcon",
    "pyFAI.gui.qt.QLabel",
    "pyFAI.gui.qt.QLineEdit",
    "pyFAI.gui.qt.QObject.__init__",
    "pyFAI.gui.qt.QToolButton",
    "pyFAI.gui.qt.Qt.AlignRight"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.FitParamView.__lineEditChanged": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.FitParamView.__modelChanged": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.FitParamView.model": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.FitParamView.setConstraintsModel": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.FitParamView.setModel": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.FitParamView.widgets": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__createCalibration": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.GeometryTask.numpy",
    "pyFAI.gui.calibration.RingCalibration.RingCalibration"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__createPlot": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.GeometryTask._RingPlot"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__createPlotStatusBar": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QHBoxLayout",
    "pyFAI.gui.qt.QStatusBar",
    "silx.gui.plot.PlotTools.PositionInfo"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__createPlotToolBar": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QToolBar",
    "silx.gui.plot.PlotActions.ColormapAction",
    "silx.gui.plot.PlotActions.CopyAction",
    "silx.gui.plot.PlotActions.PixelIntensitiesHistoAction",
    "silx.gui.plot.PlotActions.PrintAction",
    "silx.gui.plot.PlotActions.ResetZoomAction",
    "silx.gui.plot.PlotActions.SaveAction",
    "silx.gui.plot.PlotActions.ZoomInAction",
    "silx.gui.plot.PlotActions.ZoomOutAction"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__fitGeometry": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__formatResidual": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__geometryUpdated": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__getCalibration": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__getImageValue": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__imageUpdated": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__initGeometryFromPeaks": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.GeometryTask.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__init__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.GeometryTask.FitParamView",
    "pyFAI.gui.calibration.GeometryTask.GeometryTask",
    "pyFAI.gui.qt.QGridLayout",
    "pyFAI.gui.qt.QVBoxLayout",
    "pyFAI.gui.qt.loadUi",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__invalidatePeakSelection": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__invalidateWavelength": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__resetGeometry": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__updateDisplay": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.__widgetShow": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask._updateModel": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.GeometryTask.addParameterToLayout": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.PlotActions": {
  "data": {
   "shadows": "silx.gui.plot.PlotActions"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.GeometryTask.PositionInfo": {
  "data": {
   "shadows": "silx.gui.plot.PlotTools.PositionInfo"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.GeometryTask.RingCalibration": {
  "data": {
   "shadows": "pyFAI.gui.calibration.RingCalibration.RingCalibration"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.GeometryTask._RingPlot": {
  "data": {
   "lineno": 137
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.GeometryTask._RingPlot.__init__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask._RingPlot.createMarkerColors": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask._RingPlot.markerColorList": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask._RingPlot.setRings": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "map",
    "pyFAI.gui.calibration.GeometryTask.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask._RingPlot.setRings.filter_coord_over_mask": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.GeometryTask.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.GeometryTask.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.GeometryTask.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.GeometryTask._iconVariableConstrained": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.GeometryTask._iconVariableConstrainedOut": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.GeometryTask._iconVariableFixed": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.GeometryTask._logger": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.GeometryTask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.GeometryTask.icons": {
  "data": {
   "shadows": "pyFAI.gui.icons"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.GeometryTask.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.GeometryTask.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.GeometryTask.pyFAI.utils": {
  "data": {
   "shadows": "pyFAI.utils"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.GeometryTask.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.GeometryTask.silx.gui.plot": {
  "data": {
   "shadows": "silx.gui.plot"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.IntegrationTask": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.gui.calibration.IntegrationTask.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.calibration.IntegrationTask.AbstractCalibrationTask": {
  "data": {
   "shadows": "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.IntegrationTask.AzimuthalIntegrator": {
  "data": {
   "shadows": "pyFAI.azimuthalIntegrator.AzimuthalIntegrator"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.IntegrationTask.EnablableDataModel": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.IntegrationTask.EnablableDataModel.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.EnablableDataModel.__modelChanged": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.EnablableDataModel.isEnabled": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.EnablableDataModel.setEnabled": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.EnablableDataModel.setValue": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.IntegrationTask.EnablableDataModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationProcess": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationProcess.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationProcess._init": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.IntegrationTask.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationProcess.isValid": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationProcess.result1d": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationProcess.result2d": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationProcess.ringAngles": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationProcess.run": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "filter",
    "list",
    "pyFAI.azimuthalIntegrator.AzimuthalIntegrator",
    "pyFAI.gui.calibration.IntegrationTask._logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationTask": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationTask.__init__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "bool.connect",
    "pyFAI.gui.calibration.IntegrationTask.IntegrationTask",
    "pyFAI.gui.qt.QVBoxLayout",
    "pyFAI.gui.qt.loadUi",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationTask.__integrate": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.IntegrationTask.IntegrationProcess"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationTask.__integratingFinished": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationTask.__invalidateIntegration": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationTask.__polarizationFactorChecked": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationTask.__polarizationModelChanged": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationTask.__saveAsJson": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationTask.__saveAsPoni": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationTask.__updateGUIWhileIntegrating": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationTask.__updateGUIWithIntegrationResult": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "enumerate",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationTask.__widgetShow": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationTask._updateModel": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.IntegrationTask.EnablableDataModel"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.IntegrationTask.createSaveDialog": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyFAI.gui.qt.QFileDialog",
    "pyFAI.gui.qt.QFileDialog.AcceptSave"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.IntegrationTask.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.IntegrationTask.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.IntegrationTask.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.IntegrationTask.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.IntegrationTask._logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.IntegrationTask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.IntegrationTask.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.IntegrationTask.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.IntegrationTask.pyFAI.utils": {
  "data": {
   "shadows": "pyFAI.utils"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.IntegrationTask.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.IntegrationTask.silx.gui.plot": {
  "data": {
   "shadows": "silx.gui.plot"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.MaskTask": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.gui.calibration.MaskTask.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.calibration.MaskTask.AbstractCalibrationTask": {
  "data": {
   "shadows": "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.MaskTask.MaskTask": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.MaskTask.MaskTask.__createPlot": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.MaskTask.MaskTask.__createPlotStatusBar": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QHBoxLayout",
    "pyFAI.gui.qt.QStatusBar",
    "silx.gui.plot.PlotTools.PositionInfo"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.MaskTask.MaskTask.__createPlotToolBar": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QToolBar",
    "silx.gui.plot.PlotActions.ColormapAction",
    "silx.gui.plot.PlotActions.CopyAction",
    "silx.gui.plot.PlotActions.PixelIntensitiesHistoAction",
    "silx.gui.plot.PlotActions.PrintAction",
    "silx.gui.plot.PlotActions.ResetZoomAction",
    "silx.gui.plot.PlotActions.SaveAction",
    "silx.gui.plot.PlotActions.ZoomInAction",
    "silx.gui.plot.PlotActions.ZoomOutAction"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.MaskTask.MaskTask.__getImageValue": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.MaskTask.MaskTask.__imageUpdated": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.MaskTask.MaskTask.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.MaskTask.MaskTask",
    "pyFAI.gui.qt.QBoxLayout.TopToBottom",
    "pyFAI.gui.qt.QVBoxLayout",
    "pyFAI.gui.qt.loadUi",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.MaskTask.MaskTask.__maskFromModelChanged": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.MaskTask.MaskTask.__maskFromPlotChanged": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.MaskTask.MaskTask.__widgetHide": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.MaskTask.MaskTask.__widgetShow": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.MaskTask.MaskTask._updateModel": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.MaskTask.PlotActions": {
  "data": {
   "shadows": "silx.gui.plot.PlotActions"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.MaskTask.PositionInfo": {
  "data": {
   "shadows": "silx.gui.plot.PlotTools.PositionInfo"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.MaskTask.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.MaskTask.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.MaskTask.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.MaskTask._logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.MaskTask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.MaskTask.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.MaskTask.pyFAI.utils": {
  "data": {
   "shadows": "pyFAI.utils"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.MaskTask.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.MaskTask.silx.gui.plot": {
  "data": {
   "shadows": "silx.gui.plot"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.gui.calibration.PeakPickingTask.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.calibration.PeakPickingTask.AbstractCalibrationTask": {
  "data": {
   "shadows": "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakModel": {
  "data": {
   "shadows": "pyFAI.gui.calibration.model.PeakModel.PeakModel"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.AbstractCalibrationTask.AbstractCalibrationTask"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__autoExtractRings": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "int",
    "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionUndoCommand",
    "pyFAI.gui.calibration.PeakPickingTask.numpy",
    "pyFAI.gui.calibration.RingExtractor.RingExtractor",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__copyPeaks": {
  "data": {
   "lineno": 754
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__createLoadPeakDialog": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyFAI.gui.qt.QFileDialog"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__createNewPeak": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "chr",
    "len",
    "list",
    "ord",
    "pyFAI.gui.calibration.model.PeakModel.PeakModel",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__createOptionsWidget": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "pyFAI.gui.icons.getQIcon",
    "pyFAI.gui.qt.QAction",
    "pyFAI.gui.qt.QMenu",
    "pyFAI.gui.qt.QToolButton",
    "pyFAI.gui.qt.QToolButton.InstantPopup"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__createPlotStatusBar": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QHBoxLayout",
    "pyFAI.gui.qt.QStatusBar",
    "silx.gui.plot.PlotTools.PositionInfo"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__createPlotToolBar": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QSizePolicy.Expanding",
    "pyFAI.gui.qt.QSizePolicy.Fixed",
    "pyFAI.gui.qt.QToolBar",
    "pyFAI.gui.qt.QWidget",
    "silx.gui.plot.PlotActions.ColormapAction",
    "silx.gui.plot.PlotActions.CopyAction",
    "silx.gui.plot.PlotActions.PixelIntensitiesHistoAction",
    "silx.gui.plot.PlotActions.PrintAction",
    "silx.gui.plot.PlotActions.ResetZoomAction",
    "silx.gui.plot.PlotActions.SaveAction",
    "silx.gui.plot.PlotActions.ZoomInAction",
    "silx.gui.plot.PlotActions.ZoomOutAction"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__createSavePeakDialog": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyFAI.gui.qt.QFileDialog",
    "pyFAI.gui.qt.QFileDialog.AcceptSave"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__getImageValue": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__imageUpdated": {
  "data": {
   "lineno": 894
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__initPeakSelectionView": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableModel",
    "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableView",
    "pyFAI.gui.qt.QHBoxLayout"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__init__": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask",
    "pyFAI.gui.calibration.PeakPickingTask._PeakPickingPlot",
    "pyFAI.gui.icons.getQIcon",
    "pyFAI.gui.qt.QButtonGroup",
    "pyFAI.gui.qt.QUndoStack",
    "pyFAI.gui.qt.QVBoxLayout",
    "pyFAI.gui.qt.loadUi",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__loadPeaksFromFile": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionUndoCommand",
    "pyFAI.gui.calibration.PeakPickingTask._logger",
    "pyFAI.gui.calibration.PeakPickingTask.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__maskUpdated": {
  "data": {
   "lineno": 902
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__onPlotEvent": {
  "data": {
   "lineno": 670
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__plotClicked": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "ValueError",
    "filter",
    "int",
    "len",
    "list",
    "max",
    "pyFAI.gui.calibration.PeakPickingTask._DummyStdOut",
    "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionUndoCommand",
    "pyFAI.gui.calibration.PeakPickingTask.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__removePeak": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionUndoCommand"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__savePeaksAsFile": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "pyFAI.gui.calibration.PeakPickingTask._logger",
    "pyFAI.gui.calibration.PeakPickingTask.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask.__setRingNumber": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionUndoCommand"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PeakPickingTask._updateModel": {
  "data": {
   "lineno": 873
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PlotActions": {
  "data": {
   "shadows": "silx.gui.plot.PlotActions"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.PositionInfo": {
  "data": {
   "shadows": "silx.gui.plot.PlotTools.PositionInfo"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.RingExtractor": {
  "data": {
   "shadows": "pyFAI.gui.calibration.RingExtractor.RingExtractor"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask._DummyStdOut": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.PeakPickingTask._DummyStdOut.write": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakPickingPlot": {
  "data": {
   "lineno": 279
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakPickingPlot.__init__": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.PeakPickingTask._PeakPickingPlot",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakPickingPlot.__invalidateItem": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakPickingPlot.__invalidateModel": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.PeakPickingTask.functools",
    "set"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakPickingPlot.addPeak": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "list",
    "map",
    "pyFAI.gui.calibration.PeakPickingTask.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakPickingPlot.createMarkerColors": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakPickingPlot.markerColorList": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakPickingPlot.removePeak": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakPickingPlot.setModel": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakPickingPlot.updatePeak": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableModel": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "int",
    "object",
    "pyFAI.gui.qt.QAbstractTableModel",
    "pyFAI.gui.qt.Signal"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableModel.__init__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableModel.__invalidateItem": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QModelIndex"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableModel.__invalidateModel": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "enumerate",
    "pyFAI.gui.calibration.PeakPickingTask.functools"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableModel.columnCount": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QModelIndex"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableModel.data": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "len",
    "pyFAI.gui.qt.QIcon",
    "pyFAI.gui.qt.QModelIndex",
    "pyFAI.gui.qt.QPixmap",
    "pyFAI.gui.qt.Qt.DecorationRole",
    "pyFAI.gui.qt.Qt.DisplayRole",
    "pyFAI.gui.qt.Qt.EditRole"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableModel.flags": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "pyFAI.gui.qt.Qt.ItemIsEditable",
    "pyFAI.gui.qt.Qt.ItemIsEnabled",
    "pyFAI.gui.qt.Qt.ItemIsSelectable"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableModel.headerData": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableModel",
    "pyFAI.gui.qt.Qt.DisplayRole",
    "pyFAI.gui.qt.Qt.Horizontal",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableModel.removeRows": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QModelIndex",
    "range",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableModel.rowCount": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "len",
    "pyFAI.gui.qt.QModelIndex"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableModel.setData": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "pyFAI.gui.qt.Qt.EditRole"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableView": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QTableView"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableView.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "_PeakToolItemDelegate",
    "_SpinBoxItemDelegate",
    "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableView",
    "pyFAI.gui.qt.QAbstractItemView.ScrollPerPixel",
    "pyFAI.gui.qt.QAbstractItemView.SelectRows",
    "pyFAI.gui.qt.QAbstractItemView.SingleSelection",
    "pyFAI.gui.qt.QFrame.NoFrame",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableView.__onRowInserted": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableView.__onRowRemoved": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableView.__openPersistantViewOnModelReset": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QModelIndex"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableView.__openPersistantViewOnRowInserted": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QModelIndex",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableView.__updateColumnConstraints": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QHeaderView.Fixed",
    "pyFAI.gui.qt.QHeaderView.ResizeToContents",
    "pyFAI.gui.qt.QHeaderView.Stretch",
    "pyFAI.gui.qt.qVersion",
    "setResizeMode"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableView.setModel": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableView",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionTableView.sizeHint": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QSize",
    "pyFAI.gui.qt.QTableView.sizeHint"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionUndoCommand": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QUndoCommand"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionUndoCommand.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "list",
    "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionUndoCommand",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionUndoCommand.redo": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionUndoCommand.setRedoInhibited": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakSelectionUndoCommand.undo": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakToolItemDelegate": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QStyledItemDelegate"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakToolItemDelegate.__removePeak": {
  "data": {
   "lineno": 454
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakToolItemDelegate.createEditor": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.PeakPickingTask._PeakToolItemDelegate",
    "pyFAI.gui.calibration.PeakPickingTask.functools",
    "pyFAI.gui.icons.getQIcon",
    "pyFAI.gui.qt.QAction",
    "pyFAI.gui.qt.QPersistentModelIndex",
    "pyFAI.gui.qt.QSize",
    "pyFAI.gui.qt.QSizePolicy.Fixed",
    "pyFAI.gui.qt.QToolBar",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._PeakToolItemDelegate.updateEditorGeometry": {
  "data": {
   "lineno": 444
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._SpinBoxItemDelegate": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QStyledItemDelegate"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.PeakPickingTask._SpinBoxItemDelegate.createEditor": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.PeakPickingTask._SpinBoxItemDelegate",
    "pyFAI.gui.qt.QSpinBox",
    "pyFAI.gui.qt.Qt.StrongFocus",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._SpinBoxItemDelegate.eventFilter": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QEvent.ChildPolished",
    "pyFAI.gui.qt.QSpinBox.eventFilter"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._SpinBoxItemDelegate.setEditorData": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._SpinBoxItemDelegate.setModelData": {
  "data": {
   "lineno": 407
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask._SpinBoxItemDelegate.updateEditorGeometry": {
  "data": {
   "lineno": 412
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.PeakPickingTask.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.PeakPickingTask.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.PeakPickingTask.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.PeakPickingTask._logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.PeakPickingTask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.icons": {
  "data": {
   "shadows": "pyFAI.gui.icons"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.pyFAI.control_points": {
  "data": {
   "shadows": "pyFAI.control_points"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.pyFAI.massif": {
  "data": {
   "shadows": "pyFAI.massif"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.pyFAI.utils": {
  "data": {
   "shadows": "pyFAI.utils"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.PeakPickingTask.silx.gui.plot": {
  "data": {
   "shadows": "silx.gui.plot"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.QuantityEdit": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.gui.calibration.QuantityEdit.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.calibration.QuantityEdit.QuantityEdit": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "bool",
    "pyFAI.gui.qt.QLineEdit",
    "pyFAI.gui.qt.pyqtProperty"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.QuantityEdit.QuantityEdit.__applyText": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "pyFAI.gui.calibration.QuantityEdit._logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.QuantityEdit.QuantityEdit.__cancelText": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.QuantityEdit.QuantityEdit.__editingFinished": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.QuantityEdit.QuantityEdit.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.QuantityEdit.QuantityEdit",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.QuantityEdit.QuantityEdit.__modelChanged": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.QuantityEdit.QuantityEdit.__returnPressed": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.QuantityEdit.QuantityEdit.isApplyedWhenFocusOut": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.QuantityEdit.QuantityEdit.keyPressEvent": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.QuantityEdit.QuantityEdit",
    "pyFAI.gui.qt.Qt.Key_Enter",
    "pyFAI.gui.qt.Qt.Key_Escape",
    "pyFAI.gui.qt.Qt.Key_Return",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.QuantityEdit.QuantityEdit.model": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.QuantityEdit.QuantityEdit.setApplyedWhenFocusOut": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.QuantityEdit.QuantityEdit.setModel": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.QuantityEdit.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.QuantityEdit.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.QuantityEdit.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.QuantityEdit._logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.QuantityEdit.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.QuantityEdit.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.QuantityEdit.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.RingCalibration": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.gui.calibration.RingCalibration.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.calibration.RingCalibration.GeometryRefinement": {
  "data": {
   "shadows": "pyFAI.geometryRefinement.GeometryRefinement"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.RingCalibration.PeakPicker": {
  "data": {
   "shadows": "pyFAI.peak_picker.PeakPicker"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.__computeResidual": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.__init": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pyFAI.geometryRefinement.GeometryRefinement",
    "pyFAI.peak_picker.PeakPicker"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.__initgeoRef": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Exception",
    "pyFAI.gui.calibration.RingCalibration._logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.__refine": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.fromGeometryConstriansModel": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.fromGeometryModel": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.getBeamCenter": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.getPeakResidual": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.getPoni": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.RingCalibration.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.getPreviousResidual": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.getResidual": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.getRings": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len",
    "pyFAI.gui.calibration.RingCalibration.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.init": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.refine": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "float",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.toGeometryModel": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.RingCalibration.update": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingCalibration.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.RingCalibration.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.RingCalibration.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.RingCalibration._logger": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.RingCalibration.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.RingCalibration.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.RingCalibration.matplotlib._cntr": {
  "data": {
   "shadows": "matplotlib._cntr"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.RingCalibration.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.RingCalibration.pyFAI.utils": {
  "data": {
   "shadows": "pyFAI.utils"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.RingExtractor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.gui.calibration.RingExtractor.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.calibration.RingExtractor.GeometryRefinement": {
  "data": {
   "shadows": "pyFAI.geometryRefinement.GeometryRefinement"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.RingExtractor.PeakPicker": {
  "data": {
   "shadows": "pyFAI.peak_picker.PeakPicker"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.RingExtractor.RingExtractor": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.RingExtractor.RingExtractor.__createGeoRef": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "getattr",
    "pyFAI.geometryRefinement.GeometryRefinement",
    "setattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingExtractor.RingExtractor.__initGeoRef": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Exception",
    "pyFAI.gui.calibration.RingExtractor._logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingExtractor.RingExtractor.__init__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingExtractor.RingExtractor.extract": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "int",
    "len",
    "pyFAI.ext.marchingsquares.isocontour",
    "pyFAI.gui.calibration.RingExtractor._logger",
    "pyFAI.gui.calibration.RingExtractor.numpy",
    "pyFAI.peak_picker.PeakPicker",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingExtractor.RingExtractor.toGeometryModel": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.RingExtractor.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.RingExtractor.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.RingExtractor.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.RingExtractor._logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.RingExtractor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.RingExtractor.isocontour": {
  "data": {
   "shadows": "pyFAI.ext.marchingsquares.isocontour"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.RingExtractor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.RingExtractor.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.RingExtractor.pyFAI.utils": {
  "data": {
   "shadows": "pyFAI.utils"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.UnitSelector": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.UnitSelector.UnitSelector": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QComboBox"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.UnitSelector.UnitSelector.__currentIndexChanged": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.UnitSelector.UnitSelector.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "DataModel",
    "int.connect",
    "pyFAI.gui.calibration.UnitSelector.UnitSelector",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.UnitSelector.UnitSelector.__modelChanged": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.UnitSelector.UnitSelector.findUnit": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.UnitSelector.UnitSelector.model": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.UnitSelector.UnitSelector.setModel": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.UnitSelector.UnitSelector.setUnits": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.UnitSelector.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.UnitSelector.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.UnitSelector.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.UnitSelector.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.UnitSelector.pyFAI.units": {
  "data": {
   "shadows": "pyFAI.units"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.UnitSelector.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.__authors__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.__date__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.__license__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.AbstractModel": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.AbstractModel.AbstractModel": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QObject",
    "pyFAI.gui.qt.Signal"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.model.AbstractModel.AbstractModel.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QObject.__init__"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.AbstractModel.AbstractModel.isValid": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.AbstractModel.AbstractModel.lockSignals": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.AbstractModel.AbstractModel.unlockSignals": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.AbstractModel.AbstractModel.wasChanged": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.AbstractModel.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.AbstractModel.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.AbstractModel.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.AbstractModel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.AbstractModel.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.CalibrantModel": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.CalibrantModel.CalibrantModel": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.model.CalibrantModel.CalibrantModel.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.model.CalibrantModel.CalibrantModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.CalibrantModel.CalibrantModel.calibrant": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.CalibrantModel.CalibrantModel.isValid": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.CalibrantModel.CalibrantModel.setCalibrant": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.CalibrantModel.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.CalibrantModel.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.CalibrantModel.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.CalibrantModel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.CalibrationModel": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.CalibrationModel.CalibrationModel": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.model.CalibrationModel.CalibrationModel.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ExperimentSettingsModel",
    "GeometryConstraintsModel",
    "GeometryModel",
    "IntegrationSettingsModel",
    "PeakSelectionModel",
    "pyFAI.gui.calibration.model.CalibrationModel.CalibrationModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.CalibrationModel.CalibrationModel.experimentSettingsModel": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.CalibrationModel.CalibrationModel.fittedGeometry": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.CalibrationModel.CalibrationModel.geometryConstraintsModel": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.CalibrationModel.CalibrationModel.integrationSettingsModel": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.CalibrationModel.CalibrationModel.isValid": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.CalibrationModel.CalibrationModel.peakGeometry": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.CalibrationModel.CalibrationModel.peakSelectionModel": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.CalibrationModel.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.CalibrationModel.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.CalibrationModel.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.CalibrationModel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.ConstraintModel": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.ConstraintModel.ConstraintModel": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.model.ConstraintModel.ConstraintModel.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.model.ConstraintModel.ConstraintModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ConstraintModel.ConstraintModel.isFixed": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ConstraintModel.ConstraintModel.isRangeConstrained": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ConstraintModel.ConstraintModel.isValid": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ConstraintModel.ConstraintModel.range": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ConstraintModel.ConstraintModel.setFixed": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ConstraintModel.ConstraintModel.setRangeConstraint": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ConstraintModel.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.ConstraintModel.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.ConstraintModel.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.ConstraintModel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.DataModel": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.DataModel.DataModel": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.model.DataModel.DataModel.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.model.DataModel.DataModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DataModel.DataModel.isValid": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DataModel.DataModel.setValue": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DataModel.DataModel.value": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DataModel.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.DataModel.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.DataModel.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.DataModel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.DataModelAdaptor": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.DataModelAdaptor.DataModelAdaptor": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.model.DataModelAdaptor.DataModelAdaptor.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "pyFAI.gui.calibration.model.DataModelAdaptor.DataModelAdaptor",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DataModelAdaptor.DataModelAdaptor.__modelChanged": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DataModelAdaptor.DataModelAdaptor.fromModel": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DataModelAdaptor.DataModelAdaptor.isValid": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DataModelAdaptor.DataModelAdaptor.setValue": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DataModelAdaptor.DataModelAdaptor.toModel": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DataModelAdaptor.DataModelAdaptor.value": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DataModelAdaptor.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.DataModelAdaptor.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.DataModelAdaptor.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.DataModelAdaptor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.DetectorModel": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.DetectorModel.DetectorModel": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.model.DetectorModel.DetectorModel.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.model.DetectorModel.DetectorModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DetectorModel.DetectorModel.detector": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DetectorModel.DetectorModel.isValid": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DetectorModel.DetectorModel.setDetector": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.DetectorModel.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.DetectorModel.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.DetectorModel.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.DetectorModel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "CalibrantModel",
    "DataModel",
    "DetectorModel",
    "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel.calibrantModel": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel.dark": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel.darkFile": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel.detector": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel.detectorModel": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel.image": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel.imageFile": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel.isValid": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel.mask": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel.maskFile": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel.polarizationFactor": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel.splineFile": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.ExperimentSettingsModel.wavelength": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.ExperimentSettingsModel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel.GeometryConstraintsModel": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel.GeometryConstraintsModel.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ConstraintModel",
    "pyFAI.gui.calibration.model.GeometryConstraintsModel.GeometryConstraintsModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel.GeometryConstraintsModel.distance": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel.GeometryConstraintsModel.isValid": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel.GeometryConstraintsModel.poni1": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel.GeometryConstraintsModel.poni2": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel.GeometryConstraintsModel.rotation1": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel.GeometryConstraintsModel.rotation2": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel.GeometryConstraintsModel.rotation3": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel.GeometryConstraintsModel.wavelength": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.GeometryConstraintsModel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.GeometryModel": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.GeometryModel.GeometryModel": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.model.GeometryModel.GeometryModel.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "DataModel",
    "pyFAI.gui.calibration.model.GeometryModel.GeometryModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryModel.GeometryModel.distance": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryModel.GeometryModel.isValid": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryModel.GeometryModel.poni1": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryModel.GeometryModel.poni2": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryModel.GeometryModel.rotation1": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryModel.GeometryModel.rotation2": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryModel.GeometryModel.rotation3": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryModel.GeometryModel.setFrom": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryModel.GeometryModel.wavelength": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.GeometryModel.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.GeometryModel.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.GeometryModel.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.GeometryModel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.IntegrationSettingsModel": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.IntegrationSettingsModel.IntegrationSettingsModel": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.model.IntegrationSettingsModel.IntegrationSettingsModel.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "DataModel",
    "pyFAI.gui.calibration.model.IntegrationSettingsModel.IntegrationSettingsModel",
    "pyFAI.units.TTH_RAD",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.IntegrationSettingsModel.IntegrationSettingsModel.isValid": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.IntegrationSettingsModel.IntegrationSettingsModel.radialUnit": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.IntegrationSettingsModel.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.IntegrationSettingsModel.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.IntegrationSettingsModel.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.IntegrationSettingsModel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.IntegrationSettingsModel.units": {
  "data": {
   "shadows": "pyFAI.units"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.PeakModel": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.PeakModel.PeakModel": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.model.PeakModel.PeakModel.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.model.PeakModel.PeakModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakModel.PeakModel.color": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakModel.PeakModel.coords": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakModel.PeakModel.copy": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.model.PeakModel.PeakModel"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakModel.PeakModel.isValid": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakModel.PeakModel.name": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakModel.PeakModel.ringNumber": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakModel.PeakModel.setColor": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakModel.PeakModel.setCoords": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakModel.PeakModel.setName": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakModel.PeakModel.setRingNumber": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakModel.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.PeakModel.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.PeakModel.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.PeakModel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel.PeakSelectionModel": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel.PeakSelectionModel.__getitem__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel.PeakSelectionModel.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.model.PeakSelectionModel.PeakSelectionModel",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel.PeakSelectionModel.__iter__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel.PeakSelectionModel.__len__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel.PeakSelectionModel.append": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel.PeakSelectionModel.clear": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel.PeakSelectionModel.index": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel.PeakSelectionModel.isValid": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel.PeakSelectionModel.remove": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.PeakSelectionModel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.WavelengthToEnergyAdaptor": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.model.WavelengthToEnergyAdaptor.WavelengthToEnergyAdaptor": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.model.WavelengthToEnergyAdaptor.WavelengthToEnergyAdaptor.fromModel": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyFAI.units.hc"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.WavelengthToEnergyAdaptor.WavelengthToEnergyAdaptor.toModel": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pyFAI.units.hc"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.model.WavelengthToEnergyAdaptor.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.WavelengthToEnergyAdaptor.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.WavelengthToEnergyAdaptor.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.WavelengthToEnergyAdaptor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.WavelengthToEnergyAdaptor.units": {
  "data": {
   "shadows": "pyFAI.units"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.model.__authors__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.__date__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.model.__license__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "pyFAI.gui.calibration.setup.configuration"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.calibration.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.setup.__authors__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.setup.__date__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.setup.__license__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.setup.configuration": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.utils": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.calibration.utils.Colormap": {
  "data": {
   "shadows": "silx.gui.plot.matplotlib.Colormap"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.utils.Colors": {
  "data": {
   "shadows": "silx.gui.plot.Colors"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.utils.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.utils.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.utils.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.utils.from2ThRad": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pyFAI.gui.calibration.utils.collections",
    "pyFAI.gui.calibration.utils.numpy",
    "pyFAI.units.Q_A",
    "pyFAI.units.Q_NM",
    "pyFAI.units.R_M",
    "pyFAI.units.R_MM",
    "pyFAI.units.TTH_DEG",
    "pyFAI.units.TTH_RAD"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.utils.getFreeColorRange": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ImportError",
    "filter",
    "len",
    "list",
    "pyFAI.gui.qt.QColor.fromHsvF",
    "pyFAI.gui.qt.QColor.fromRgbF",
    "range",
    "set",
    "silx.gui.plot.Colors.getMPLColormap",
    "silx.gui.plot.matplotlib.Colormap.getColormap",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.utils.matplotlib.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.utils.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.utils.units": {
  "data": {
   "shadows": "pyFAI.units"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.validators": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.gui.calibration.validators.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.calibration.validators.DoubleAndEmptyValidator": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.validators.DoubleValidator"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.validators.DoubleAndEmptyValidator.validate": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.validators.DoubleAndEmptyValidator",
    "pyFAI.gui.qt.QValidator.Acceptable",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.validators.DoubleValidator": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QDoubleValidator"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.calibration.validators.DoubleValidator.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyFAI.gui.qt.QDoubleValidator.__init__",
    "pyFAI.gui.qt.QLocale",
    "pyFAI.gui.qt.QLocale.C",
    "pyFAI.gui.qt.QLocale.RejectGroupSeparator"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.validators.DoubleValidator.fixup": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "input.replace",
    "pyFAI.gui.qt.QLocale.RejectGroupSeparator"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.validators.DoubleValidator.validate": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pyFAI.gui.calibration.validators.DoubleValidator",
    "pyFAI.gui.qt.QLocale.RejectGroupSeparator",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.calibration.validators.__authors__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.validators.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.validators.__license__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.validators._logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.gui.calibration.validators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.validators.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.gui.calibration.validators.qt": {
  "data": {
   "shadows": "pyFAI.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.icons": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.gui.icons.logging",
    "pyFAI.gui.icons.weakref"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.icons.__authors__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.gui.icons.__date__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.gui.icons.__license__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.gui.icons._cached_icons": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyFAI.gui.icons._logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.gui.icons._supported_formats": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pyFAI.gui.icons.getQFile": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pyFAI.gui.icons._logger",
    "pyFAI.gui.icons._supported_formats",
    "resource_filename",
    "silx.gui.icons.getQFile",
    "silx.gui.qt.QFile",
    "silx.gui.qt.supportedImageFormats",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.icons.getQIcon": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "getQFile",
    "pyFAI.gui.icons._cached_icons",
    "silx.gui.qt.QIcon"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.icons.getQPixmap": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "getQFile",
    "silx.gui.qt.QPixmap"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.icons.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.gui.icons.qt": {
  "data": {
   "shadows": "silx.gui.qt"
  },
  "type": "import"
 },
 "pyFAI.gui.icons.silx_icons": {
  "data": {
   "shadows": "silx.gui.icons"
  },
  "type": "import"
 },
 "pyFAI.gui.icons.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyFAI.gui.jupyter": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.jupyter.__author__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.gui.jupyter.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.gui.jupyter.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.gui.jupyter.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.gui.jupyter.__docformat__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.gui.jupyter.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.gui.jupyter.__status__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.gui.jupyter.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.jupyter.display": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "pyFAI.gui.jupyter.numpy",
    "pylab.legend",
    "pylab.subplots"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.jupyter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.gui.jupyter.legend": {
  "data": {
   "shadows": "pylab.legend"
  },
  "type": "import"
 },
 "pyFAI.gui.jupyter.lines": {
  "data": {
   "shadows": "matplotlib.lines"
  },
  "type": "import"
 },
 "pyFAI.gui.jupyter.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.gui.jupyter.plot1d": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "matplotlib.lines.Line2D",
    "pyFAI.gui.jupyter.numpy",
    "pyFAI.units.Q_A",
    "pyFAI.units.Q_NM",
    "pyFAI.units.TTH_DEG",
    "pyFAI.units.TTH_RAD",
    "pylab.subplots"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.jupyter.plot2d": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "matplotlib.lines.Line2D",
    "pyFAI.gui.jupyter.numpy",
    "pyFAI.units.Q_A",
    "pyFAI.units.Q_NM",
    "pyFAI.units.TTH_DEG",
    "pyFAI.units.TTH_RAD",
    "pylab.subplots"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.jupyter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.gui.jupyter.subplots": {
  "data": {
   "shadows": "pylab.subplots"
  },
  "type": "import"
 },
 "pyFAI.gui.jupyter.units": {
  "data": {
   "shadows": "pyFAI.units"
  },
  "type": "import"
 },
 "pyFAI.gui.matplotlib": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.gui.matplotlib._logger",
    "pyFAI.gui.matplotlib.logging",
    "pyFAI.gui.matplotlib.matplotlib",
    "pyFAI.gui.matplotlib.sys"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.matplotlib.FigureCanvasQTAgg": {
  "data": {
   "shadows": "matplotlib.backends.backend_qt5agg.FigureCanvasQTAgg"
  },
  "type": "import"
 },
 "pyFAI.gui.matplotlib.__authors__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.gui.matplotlib.__date__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.gui.matplotlib.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.gui.matplotlib._logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.gui.matplotlib.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.gui.matplotlib.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.gui.matplotlib.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pyFAI.gui.matplotlib.pylab": {
  "data": {
   "shadows": "matplotlib.pylab"
  },
  "type": "import"
 },
 "pyFAI.gui.matplotlib.pyplot": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyFAI.gui.matplotlib.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.gui.qt": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.gui.qt.BINDING",
    "pyFAI.gui.qt.Signal",
    "pyFAI.gui.qt._logger",
    "pyFAI.gui.qt.logging",
    "pyFAI.gui.qt.pyqtSignal",
    "pyFAI.gui.qt.sip",
    "pyFAI.gui.qt.sys"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.qt.BINDING": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "pyFAI.gui.qt.HAS_SVG": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "pyFAI.gui.qt.Property": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "pyFAI.gui.qt.PyQt4": {
  "data": {
   "shadows": "PyQt4"
  },
  "type": "import"
 },
 "pyFAI.gui.qt.PyQt5": {
  "data": {
   "shadows": "PyQt5"
  },
  "type": "import"
 },
 "pyFAI.gui.qt.PySide": {
  "data": {
   "shadows": "PySide"
  },
  "type": "import"
 },
 "pyFAI.gui.qt.QtBinding": {
  "data": {
   "shadows": "PyQt5"
  },
  "type": "import"
 },
 "pyFAI.gui.qt.Signal": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "pyFAI.gui.qt.Slot": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "pyFAI.gui.qt.__authors__": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pyFAI.gui.qt.__date__": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pyFAI.gui.qt.__license__": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pyFAI.gui.qt._logger": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pyFAI.gui.qt.loadUi": {
  "data": {
   "shadows": "PyQt5.uic.loadUi"
  },
  "type": "import"
 },
 "pyFAI.gui.qt.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.gui.qt.pyqtSignal": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "pyFAI.gui.qt.sip": {
  "data": {
   "shadows": "sip"
  },
  "type": "import"
 },
 "pyFAI.gui.qt.supportedImageFormats": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "convert",
    "pyFAI.gui.qt.sys",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.qt.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.gui.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "pyFAI.gui.setup.configuration"
   ]
  },
  "type": "module"
 },
 "pyFAI.gui.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "pyFAI.gui.setup.__authors__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyFAI.gui.setup.__date__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyFAI.gui.setup.__license__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyFAI.gui.setup.configuration": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "pyFAI.gui.utils": {
  "data": {},
  "type": "module"
 },
 "pyFAI.gui.utils.Event": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.gui.utils.Event.__init__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pyFAI.gui.utils.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.gui.utils.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.gui.utils.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.gui.utils.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.gui.utils.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.gui.utils.__status__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.gui.utils.main_loop": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.gui.utils.maximize_fig": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "TypeError",
    "dir",
    "pyFAI.gui.utils.Event",
    "pyFAI.gui.utils.update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.gui.utils.update_fig": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dir",
    "pyFAI.gui.utils.main_loop"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "get_ui_file",
    "pyFAI.integrate_widget.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.integrate_widget.AIWidget": {
  "data": {
   "lineno": 67
  },
  "type": "class"
 },
 "pyFAI.integrate_widget.AIWidget.__get_azimuth_range": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "float_",
    "pyFAI.integrate_widget.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.__get_correct_solid_angle": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.__get_delta_dummy": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "bool",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.__get_dummy": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "bool",
    "float_"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.__get_error_model": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.__get_nbpt_azim": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.__get_nbpt_rad": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.__get_polarization_factor": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "bool",
    "float"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.__get_radial_range": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "float_",
    "pyFAI.integrate_widget.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.__get_unit": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pyFAI.integrate_widget.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "list",
    "pyFAI.integrate_widget.UIC",
    "pyFAI.integrate_widget.logger",
    "pyFAI.integrate_widget.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget._float": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "pyFAI.integrate_widget.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.assign_unit": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pyFAI.integrate_widget.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.detector_changed": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "detector_factory",
    "os.path.isfile",
    "pyFAI.integrate_widget.logger",
    "str",
    "str_"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.die": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "pyFAI.integrate_widget.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.dump": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "IOError",
    "open",
    "pyFAI.integrate_widget.json",
    "pyFAI.integrate_widget.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.getOpenFileName": {
  "data": {
   "lineno": 556
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.get_config": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "bool",
    "float_",
    "int_",
    "pyFAI.integrate_widget.logger",
    "str",
    "str_"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.get_method": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.help": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "pyFAI.integrate_widget.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.openCL_changed": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "bool",
    "pyFAI.integrate_widget.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.platform_changed": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "pyFAI.integrate_widget.logger",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.proceed": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "HDF5Writer",
    "RuntimeError",
    "dir",
    "enumerate",
    "isinstance",
    "len",
    "os.path.basename",
    "os.path.exists",
    "os.path.isdir",
    "os.path.join",
    "os.path.splitext",
    "pyFAI.integrate_widget.fabio",
    "pyFAI.integrate_widget.h5py",
    "pyFAI.integrate_widget.logger",
    "pyFAI.integrate_widget.numpy",
    "pyFAI.integrate_widget.os",
    "pyFAI.integrate_widget.time",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.restore": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "open",
    "os.path.isfile",
    "pyFAI.integrate_widget.json",
    "pyFAI.integrate_widget.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.save_config": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.integrate_widget.logger",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.select_darkcurrent": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "pyFAI.integrate_widget.logger",
    "str_"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.select_flatfield": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "pyFAI.integrate_widget.logger",
    "str_"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.select_maskfile": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "pyFAI.integrate_widget.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.select_ponifile": {
  "data": {
   "lineno": 576
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.select_splinefile": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "Exception",
    "pyFAI.integrate_widget.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.set_config": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "str",
    "str_",
    "value"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.set_input_data": {
  "data": {
   "lineno": 648
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.set_ponifile": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "AzimuthalIntegrator.sload",
    "Exception",
    "pyFAI.integrate_widget.logger",
    "str_"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.AIWidget.set_validators": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "pyFAI.integrate_widget.math"
   ]
  },
  "type": "function"
 },
 "pyFAI.integrate_widget.UIC": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pyFAI.integrate_widget.__author__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.integrate_widget.__contact__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.integrate_widget.__copyright__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.integrate_widget.__date__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.integrate_widget.__license__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.integrate_widget.__status__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.integrate_widget.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.integrate_widget.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.integrate_widget.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.integrate_widget.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "pyFAI.integrate_widget.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyFAI.integrate_widget.logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyFAI.integrate_widget.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.integrate_widget.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyFAI.integrate_widget.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.integrate_widget.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyFAI.integrate_widget.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.integrate_widget.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.integrate_widget.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.integrate_widget.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.integrate_widget.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.io": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "__name__",
    "collections.OrderedDict",
    "dict",
    "pyFAI.io.h5py",
    "pyFAI.io.logger",
    "pyFAI.io.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.io.AsciiWriter": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "pyFAI.io.Writer"
   ]
  },
  "type": "class"
 },
 "pyFAI.io.AsciiWriter.__init__": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "pyFAI.io.Writer",
    "pyFAI.io.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.AsciiWriter.__repr__": {
  "data": {
   "lineno": 664
  },
  "type": "function"
 },
 "pyFAI.io.AsciiWriter.init": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "Exception",
    "pyFAI.io.Writer",
    "pyFAI.io.logger",
    "pyFAI.io.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.AsciiWriter.write": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "open",
    "pyFAI.io.get_isotime",
    "pyFAI.io.numpy",
    "pyFAI.io.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.DefaultAiWriter": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "pyFAI.io.Writer"
   ]
  },
  "type": "class"
 },
 "pyFAI.io.DefaultAiWriter.__init__": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "pyFAI.io.DefaultAiWriter.close": {
  "data": {
   "lineno": 642
  },
  "type": "function"
 },
 "pyFAI.io.DefaultAiWriter.flush": {
  "data": {
   "lineno": 639
  },
  "type": "function"
 },
 "pyFAI.io.DefaultAiWriter.make_headers": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "dir",
    "pyFAI.io.json",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.DefaultAiWriter.save1D": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "UnicodeError",
    "open",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.DefaultAiWriter.save2D": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "collections.OrderedDict",
    "dir",
    "pyFAI.io.fabio",
    "pyFAI.io.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.DefaultAiWriter.set_filename": {
  "data": {
   "lineno": 444
  },
  "type": "function"
 },
 "pyFAI.io.DefaultAiWriter.write": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "Exception",
    "fully_qualified_name",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.FabioWriter": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "pyFAI.io.Writer"
   ]
  },
  "type": "class"
 },
 "pyFAI.io.FabioWriter.__init__": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.io.Writer",
    "pyFAI.io.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.FabioWriter.__repr__": {
  "data": {
   "lineno": 750
  },
  "type": "function"
 },
 "pyFAI.io.FabioWriter.init": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "Exception",
    "pyFAI.io.Writer",
    "pyFAI.io.logger",
    "pyFAI.io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.FabioWriter.write": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "open",
    "pyFAI.io.get_isotime",
    "pyFAI.io.numpy",
    "pyFAI.io.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.HDF5Writer": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "pyFAI.io.Writer"
   ]
  },
  "type": "class"
 },
 "pyFAI.io.HDF5Writer.__init__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "pyFAI.io.Writer"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.HDF5Writer.__repr__": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "pyFAI.io.HDF5Writer.close": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "pyFAI.io.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.HDF5Writer.flush": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.io.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.HDF5Writer.init": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "RuntimeError",
    "list",
    "open",
    "pyFAI.io.Writer",
    "pyFAI.io.get_isotime",
    "pyFAI.io.h5py",
    "pyFAI.io.json",
    "pyFAI.io.logger",
    "pyFAI.io.logging",
    "pyFAI.io.numpy",
    "pyFAI.io.os",
    "pyFAI.io.posixpath",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.HDF5Writer.write": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pyFAI.io.logger",
    "pyFAI.io.numpy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Nexus": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.io.Nexus.__enter__": {
  "data": {
   "lineno": 862
  },
  "type": "function"
 },
 "pyFAI.io.Nexus.__exit__": {
  "data": {
   "lineno": 865
  },
  "type": "function"
 },
 "pyFAI.io.Nexus.__init__": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.io.h5py",
    "pyFAI.io.logger",
    "pyFAI.io.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Nexus.close": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "pyFAI.io.get_isotime"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Nexus.deep_copy": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.io.h5py",
    "pyFAI.io.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Nexus.find_detector": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Nexus.get_attr": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "classmethod",
    "dir",
    "pyFAI.io.sys"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Nexus.get_class": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.io.h5py"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Nexus.get_data": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.io.h5py"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Nexus.get_entries": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.io.from_isotime",
    "pyFAI.io.h5py"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Nexus.get_entry": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.io.h5py"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Nexus.new_class": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "pyFAI.io.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Nexus.new_detector": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "pyFAI.io.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Nexus.new_entry": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "len",
    "pyFAI.io.get_isotime",
    "pyFAI.io.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Nexus.new_instrument": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.io.h5py"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.OrderedDict": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pyFAI.io.Writer": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.io.Writer.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "pyFAI.io.logger",
    "pyFAI.io.os",
    "pyFAI.io.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Writer.__repr__": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "pyFAI.io.Writer.flush": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "pyFAI.io.Writer.init": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "Exception",
    "pyFAI.io.logger",
    "pyFAI.io.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Writer.setJsonConfig": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "dict",
    "open",
    "pyFAI.io.json",
    "pyFAI.io.os",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.Writer.write": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "pyFAI.io.__author__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.io.__contact__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.io.__copyright__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.io.__date__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyFAI.io.__docformat__": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyFAI.io.__license__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyFAI.io.__status__": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyFAI.io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.io.fabio": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pyFAI.io.from_isotime": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "int",
    "len",
    "pyFAI.io.logger",
    "pyFAI.io.time",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.get_isotime": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pyFAI.io.time"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.h5py": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "pyFAI.io.is_hdf5": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "IOError",
    "int",
    "open",
    "ord",
    "pyFAI.io.os",
    "pyFAI.io.sys"
   ]
  },
  "type": "function"
 },
 "pyFAI.io.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyFAI.io.logger": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "pyFAI.io.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.io.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.io.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "pyFAI.io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.io.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.io.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.io.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.load": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pyFAI.logger": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyFAI.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.massif": {
  "data": {
   "symbols_in_volume": [
    "RuntimeError",
    "__name__",
    "pyFAI.massif.logging",
    "pyFAI.massif.os"
   ]
  },
  "type": "module"
 },
 "pyFAI.massif.Massif": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "pyFAI.massif.Massif.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Bilinear",
    "Exception",
    "isinstance",
    "pyFAI.massif.fabio",
    "pyFAI.massif.logger",
    "pyFAI.massif.os",
    "pyFAI.massif.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.massif.Massif.calculate_massif": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "pyFAI.massif.Massif.delValleySize": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "pyFAI.massif.Massif.find_peaks": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "Exception",
    "MemoryError",
    "annotate",
    "int",
    "len",
    "massif_contour",
    "math.ceil",
    "math.sqrt",
    "min",
    "pyFAI.massif.WindowsError",
    "pyFAI.massif.logger",
    "pyFAI.massif.numpy",
    "pyFAI.massif.os",
    "pyFAI.massif.sys",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.massif.Massif.getBinnedData": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "binning",
    "max",
    "pyFAI.massif.logger",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.massif.Massif.getBluredData": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "gaussian_filter",
    "pyFAI.massif.fabio",
    "pyFAI.massif.logger",
    "pyFAI.massif.logging"
   ]
  },
  "type": "function"
 },
 "pyFAI.massif.Massif.getLabeledMassif": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "pyFAI.massif.fabio",
    "pyFAI.massif.logger",
    "pyFAI.massif.logging",
    "relabel",
    "scipy.ndimage.label",
    "unbinning"
   ]
  },
  "type": "function"
 },
 "pyFAI.massif.Massif.getMedianData": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "open",
    "pyFAI.massif.logger",
    "pyFAI.massif.logging",
    "pyFAI.massif.numpy",
    "scipy.ndimage.filters.median_filter"
   ]
  },
  "type": "function"
 },
 "pyFAI.massif.Massif.getValleySize": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "pyFAI.massif.Massif.initValleySize": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "pyFAI.massif.Massif.nearest_peak": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "isinstance",
    "len",
    "pyFAI.massif.logger",
    "pyFAI.massif.numpy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.massif.Massif.peaks_from_area": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "int",
    "is_far_from_group",
    "len",
    "list",
    "pyFAI.massif.logger",
    "pyFAI.massif.numpy",
    "round"
   ]
  },
  "type": "function"
 },
 "pyFAI.massif.Massif.setValleySize": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "float",
    "pyFAI.massif.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.massif.WindowsError": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pyFAI.massif.__author__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.massif.__contact__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.massif.__copyright__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.massif.__date__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.massif.__license__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.massif.__status__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.massif.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyFAI.massif.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.massif.label": {
  "data": {
   "shadows": "scipy.ndimage.label"
  },
  "type": "import"
 },
 "pyFAI.massif.logger": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.massif.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.massif.median_filter": {
  "data": {
   "shadows": "scipy.ndimage.filters.median_filter"
  },
  "type": "import"
 },
 "pyFAI.massif.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.massif.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.massif.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "pyFAI.massif.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.massif.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.multi_geometry": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.multi_geometry.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.multi_geometry.MultiGeometry": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.multi_geometry.MultiGeometry.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.multi_geometry.logger",
    "pyFAI.multi_geometry.threading",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.multi_geometry.MultiGeometry.__repr__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.multi_geometry.MultiGeometry.integrate1d": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "Integrate1dResult",
    "RuntimeError",
    "all",
    "isinstance",
    "len",
    "pyFAI.multi_geometry.collections",
    "pyFAI.multi_geometry.logger",
    "pyFAI.multi_geometry.numpy",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.multi_geometry.MultiGeometry.integrate2d": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "Integrate2dResult",
    "RuntimeError",
    "all",
    "isinstance",
    "len",
    "pyFAI.multi_geometry.collections",
    "pyFAI.multi_geometry.logger",
    "pyFAI.multi_geometry.numpy",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.multi_geometry.MultiGeometry.set_wavelength": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "pyFAI.multi_geometry.__author__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.multi_geometry.__contact__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.multi_geometry.__copyright__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.multi_geometry.__date__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.multi_geometry.__docformat__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.multi_geometry.__license__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.multi_geometry.__status__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.multi_geometry.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.multi_geometry.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyFAI.multi_geometry.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.multi_geometry.error": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyFAI.multi_geometry.logger": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.multi_geometry.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.multi_geometry.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.multi_geometry.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.multi_geometry.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.multi_geometry.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.opencl": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.opencl.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.opencl.OCLFullSplit": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.opencl.OCLFullSplit.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.opencl.OCLFullSplit.OCLFullSplit1d": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.OCLFullSplit.OCLFullSplit1d.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "MemoryError",
    "RuntimeError",
    "ValueError",
    "crc32",
    "len",
    "max",
    "min",
    "print",
    "pyFAI.opencl.OCLFullSplit.logger",
    "pyFAI.opencl.OCLFullSplit.numpy",
    "pyFAI.opencl.OCLFullSplit.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.OCLFullSplit.OCLFullSplit1d._calc_LUT": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "MemoryError",
    "pyFAI.opencl.OCLFullSplit.mf",
    "pyFAI.opencl.OCLFullSplit.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.OCLFullSplit.OCLFullSplit1d._calc_boundaries": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "MemoryError",
    "pyFAI.opencl.OCLFullSplit.mf",
    "pyFAI.opencl.OCLFullSplit.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.OCLFullSplit.OCLFullSplit1d._compile_kernels": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "MemoryError",
    "pyFAI.opencl.OCLFullSplit.logger",
    "pyFAI.opencl.OCLFullSplit.numpy",
    "pyFAI.opencl.OCLFullSplit.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.OCLFullSplit.OCLFullSplit1d._free_device_memory": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "list",
    "pyFAI.opencl.OCLFullSplit.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.OCLFullSplit.OCLFullSplit1d.get_platform": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "pyFAI.opencl.OCLFullSplit.OCLFullSplit1d.get_queue": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "pyFAI.opencl.OCLFullSplit.__authors__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.opencl.OCLFullSplit.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.opencl.OCLFullSplit.__copyright__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.opencl.OCLFullSplit.__date__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.opencl.OCLFullSplit.__license__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.opencl.OCLFullSplit.logger": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyFAI.opencl.OCLFullSplit.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.opencl.OCLFullSplit.mf": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.opencl.OCLFullSplit.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.opencl.OCLFullSplit.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.opencl.OCLFullSplit.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.opencl.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.opencl.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.opencl.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.opencl.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.opencl.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.opencl.__status__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_csr": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.opencl.azim_csr.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.opencl.azim_csr.OCL_CSR_Integrator": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "BufferDescription",
    "pyFAI.opencl.azim_csr.mf",
    "pyFAI.opencl.azim_csr.numpy"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.azim_csr.OCL_CSR_Integrator.__copy__": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_csr.OCL_CSR_Integrator.__deepcopy__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_csr.OCL_CSR_Integrator.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "BufferDescription",
    "MemoryError",
    "RuntimeError",
    "calc_checksum",
    "min",
    "pyFAI.opencl.azim_csr.mf",
    "pyFAI.opencl.azim_csr.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_csr.OCL_CSR_Integrator.compile_kernels": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "kernel_workgroup_size",
    "min"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_csr.OCL_CSR_Integrator.integrate": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "EventDescription",
    "abs",
    "calc_checksum",
    "events",
    "events.append",
    "list",
    "pyFAI.opencl.azim_csr.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_csr.OCL_CSR_Integrator.send_buffer": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "EventDescription",
    "events",
    "events.append",
    "isinstance",
    "kernel",
    "pyFAI.opencl.azim_csr.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_csr.OCL_CSR_Integrator.set_kernel_arguments": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyFAI.opencl.azim_csr.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_csr.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_csr.__authors__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_csr.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_csr.__copyright__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_csr.__date__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_csr.__license__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_csr.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_csr.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_csr.mf": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_csr.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_hist": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.opencl.azim_hist.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.opencl.azim_hist.Integrator1d": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.__dealloc__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "dir",
    "open",
    "pyFAI.opencl.azim_hist.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.__repr__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyFAI.opencl.azim_hist.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d._allocate_buffers": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "RuntimeError",
    "allocate_cl_buffers",
    "pyFAI.opencl.azim_hist.mf",
    "pyFAI.opencl.azim_hist.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d._calc_tth_out": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "pyFAI.opencl.azim_hist.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d._compile_kernels": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "MemoryError",
    "concatenate_cl_kernel"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d._free_buffers": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "release_cl_buffers"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d._free_kernels": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d._set_kernel_arguments": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.clean": {
  "data": {
   "lineno": 720
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.configure": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.execute": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.opencl.azim_hist.logger",
    "pyFAI.opencl.azim_hist.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.getConfiguration": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "RuntimeError",
    "bool"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.get_status": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.init": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "pyFAI.opencl.azim_hist.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.loadTth": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "RuntimeError",
    "max",
    "pyFAI.opencl.azim_hist.logger",
    "pyFAI.opencl.azim_hist.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.log": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pyFAI.opencl.azim_hist.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.setDummyValue": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.opencl.azim_hist.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.setMask": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.opencl.azim_hist.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.setRange": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.opencl.azim_hist.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.setSolidAngle": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "RuntimeError",
    "pyFAI.opencl.azim_hist.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.unsetDummyValue": {
  "data": {
   "lineno": 509
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.unsetMask": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.unsetRange": {
  "data": {
   "lineno": 561
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.Integrator1d.unsetSolidAngle": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_hist.__author__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_hist.__contact__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_hist.__copyright__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_hist.__date__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_hist.__license__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_hist.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_hist.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_hist.logger": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_hist.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_hist.mf": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_hist.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_hist.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_hist.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_hist.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_hist.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_lut": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.opencl.azim_lut.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.opencl.azim_lut.OCL_LUT_Integrator": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "BufferDescription",
    "pyFAI.opencl.azim_lut.mf",
    "pyFAI.opencl.azim_lut.numpy"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.azim_lut.OCL_LUT_Integrator.__copy__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_lut.OCL_LUT_Integrator.__deepcopy__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_lut.OCL_LUT_Integrator.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "BufferDescription",
    "EventDescription",
    "calc_checksum",
    "min",
    "pyFAI.opencl.azim_lut.mf",
    "pyFAI.opencl.azim_lut.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_lut.OCL_LUT_Integrator.compile_kernels": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_lut.OCL_LUT_Integrator.integrate": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "EventDescription",
    "abs",
    "calc_checksum",
    "events",
    "events.append",
    "list",
    "pyFAI.opencl.azim_lut.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_lut.OCL_LUT_Integrator.send_buffer": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "EventDescription",
    "events",
    "events.append",
    "kernel",
    "pyFAI.opencl.azim_lut.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_lut.OCL_LUT_Integrator.set_kernel_arguments": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyFAI.opencl.azim_lut.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.azim_lut.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_lut.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_lut.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_lut.__copyright__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_lut.__date__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_lut.__license__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_lut.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_lut.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_lut.logger": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_lut.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_lut.mf": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.opencl.azim_lut.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_lut.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.opencl.azim_lut.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.opencl.common": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.opencl.common.OpenCL",
    "pyFAI.opencl.common.logger",
    "pyFAI.opencl.common.logging",
    "pyFAI.opencl.common.ocl",
    "pyFAI.opencl.common.os",
    "pyFAI.opencl.common.pyopencl"
   ]
  },
  "type": "module"
 },
 "pyFAI.opencl.common.AMD_FLOP_PER_CORE": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "pyFAI.opencl.common.Device": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.common.Device.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pyFAI.opencl.common.FLOP_PER_CORE"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.common.Device.__repr__": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "pyFAI.opencl.common.Device.pretty_print": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pyFAI.opencl.common.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.common.FLOP_PER_CORE": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pyFAI.opencl.common.NVIDIA_FLOP_PER_CORE": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "pyFAI.opencl.common.OpenCL": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ValueError",
    "_is_nvidia_gpu",
    "bool",
    "dir",
    "enumerate",
    "len",
    "min",
    "object",
    "pyFAI.opencl.common.AMD_FLOP_PER_CORE",
    "pyFAI.opencl.common.Device",
    "pyFAI.opencl.common.FLOP_PER_CORE",
    "pyFAI.opencl.common.NVIDIA_FLOP_PER_CORE",
    "pyFAI.opencl.common.Platform",
    "pyFAI.opencl.common._measure_workgroup_size",
    "pyFAI.opencl.common.logger",
    "pyFAI.opencl.common.os",
    "pyFAI.opencl.common.pyopencl"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.common.OpenCL.__repr__": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "enumerate",
    "pyFAI.opencl.common.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.common.OpenCL._is_nvidia_gpu": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "pyFAI.opencl.common.OpenCL.create_context": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "int",
    "pyFAI.opencl.common.logger",
    "pyFAI.opencl.common.pyopencl"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.common.OpenCL.device_from_context": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "pyFAI.opencl.common.pyopencl"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.common.OpenCL.get_platform": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.common.OpenCL.select_device": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.common.Platform": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.common.Platform.__init__": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "pyFAI.opencl.common.Platform.__repr__": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "pyFAI.opencl.common.Platform.add_device": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "pyFAI.opencl.common.Platform.get_device": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.common.__all__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.opencl.common.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.opencl.common.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.opencl.common.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.opencl.common.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.opencl.common.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.opencl.common.__status__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.opencl.common._measure_workgroup_size": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "get_opencl_code",
    "int",
    "isinstance",
    "len",
    "list",
    "pyFAI.opencl.common.logger",
    "pyFAI.opencl.common.numpy",
    "pyFAI.opencl.common.pyopencl",
    "range",
    "round",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.common.allocate_cl_buffers": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "MemoryError",
    "pyFAI.opencl.common.logger",
    "pyFAI.opencl.common.numpy",
    "pyFAI.opencl.common.ocl",
    "pyFAI.opencl.common.pyopencl",
    "pyFAI.opencl.common.release_cl_buffers"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.common.array": {
  "data": {
   "shadows": "pyopencl.array"
  },
  "type": "import"
 },
 "pyFAI.opencl.common.kernel_workgroup_size": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.opencl.common.pyopencl"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.common.logger": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.opencl.common.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.opencl.common.measure_workgroup_size": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "pyFAI.opencl.common._measure_workgroup_size",
    "pyFAI.opencl.common.ocl",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.common.mf": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.common.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.opencl.common.ocl": {
  "data": {
   "lineno": 449
  },
  "type": "constant"
 },
 "pyFAI.opencl.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.opencl.common.pyopencl": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pyFAI.opencl.common.release_cl_buffers": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.opencl.common.logger",
    "pyFAI.opencl.common.pyopencl"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyFAI.opencl.logger": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.opencl.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.opencl.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.opencl.ocl_azim_csr_dis": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.opencl.ocl_azim_csr_dis.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.OCL_CSR_Integrator": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.OCL_CSR_Integrator.__del__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pyFAI.opencl.ocl_azim_csr_dis.gc"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.OCL_CSR_Integrator.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "MemoryError",
    "RuntimeError",
    "crc32",
    "min",
    "pyFAI.opencl.ocl_azim_csr_dis.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.OCL_CSR_Integrator._allocate_buffers": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "RuntimeError",
    "allocate_cl_buffers",
    "pyFAI.opencl.ocl_azim_csr_dis.mf",
    "pyFAI.opencl.ocl_azim_csr_dis.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.OCL_CSR_Integrator._compile_kernels": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "MemoryError",
    "concatenate_cl_kernel",
    "int",
    "pyFAI.opencl.ocl_azim_csr_dis.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.OCL_CSR_Integrator._free_buffers": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "release_cl_buffers"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.OCL_CSR_Integrator._free_kernels": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.OCL_CSR_Integrator._set_kernel_arguments": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "pyFAI.opencl.ocl_azim_csr_dis.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.OCL_CSR_Integrator.integrate": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "abs",
    "crc32",
    "events",
    "events.append",
    "pyFAI.opencl.ocl_azim_csr_dis.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.OCL_CSR_Integrator.log_profile": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "dir",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.__author__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.__contact__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.__copyright__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.__date__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.__license__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.mf": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.opencl.ocl_azim_csr_dis.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.opencl.ocl_hist_pixelsplit.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.OCL_Hist_Pixelsplit": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.OCL_Hist_Pixelsplit.__del__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pyFAI.opencl.ocl_hist_pixelsplit.gc"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.OCL_Hist_Pixelsplit.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "MemoryError",
    "RuntimeError",
    "crc32",
    "float",
    "len",
    "max",
    "min",
    "print",
    "pyFAI.opencl.ocl_hist_pixelsplit.numpy",
    "pyFAI.opencl.ocl_hist_pixelsplit.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.OCL_Hist_Pixelsplit._allocate_buffers": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "RuntimeError",
    "allocate_cl_buffers",
    "pyFAI.opencl.ocl_hist_pixelsplit.mf",
    "pyFAI.opencl.ocl_hist_pixelsplit.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.OCL_Hist_Pixelsplit._compile_kernels": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "MemoryError",
    "concatenate_cl_kernel",
    "pyFAI.opencl.ocl_hist_pixelsplit.logger",
    "pyFAI.opencl.ocl_hist_pixelsplit.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.OCL_Hist_Pixelsplit._free_buffers": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "release_cl_buffers"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.OCL_Hist_Pixelsplit._free_kernels": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.OCL_Hist_Pixelsplit._set_kernel_arguments": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pyFAI.opencl.ocl_hist_pixelsplit.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.OCL_Hist_Pixelsplit.integrate": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "abs",
    "crc32",
    "events",
    "events.append",
    "pyFAI.opencl.ocl_hist_pixelsplit.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.OCL_Hist_Pixelsplit.log_profile": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "dir",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.__authors__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.__copyright__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.__date__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.__license__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.mf": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.opencl.ocl_hist_pixelsplit.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.opencl.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.opencl.preproc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.opencl.preproc.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.opencl.preproc.OCL_Preproc": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "BufferDescription",
    "pyFAI.opencl.preproc.numpy"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.preproc.OCL_Preproc.__copy__": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "pyFAI.opencl.preproc.OCL_Preproc.__deepcopy__": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.preproc.OCL_Preproc.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "BufferDescription",
    "pyFAI.opencl.preproc.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.preproc.OCL_Preproc.compile_kernels": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "pyFAI.opencl.preproc.OCL_Preproc.delta_dummy": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "pyFAI.opencl.preproc.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.preproc.OCL_Preproc.dummy": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pyFAI.opencl.preproc.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.preproc.OCL_Preproc.empty": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pyFAI.opencl.preproc.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.preproc.OCL_Preproc.process": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "EventDescription",
    "id",
    "kernel",
    "list",
    "pyFAI.opencl.preproc.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.preproc.OCL_Preproc.send_buffer": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "EventDescription",
    "events",
    "events.append",
    "kernel",
    "pyFAI.opencl.preproc.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.preproc.OCL_Preproc.set_kernel_arguments": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyFAI.opencl.preproc.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.preproc.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyFAI.opencl.preproc.__author__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.opencl.preproc.__contact__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.opencl.preproc.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.opencl.preproc.__date__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.opencl.preproc.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.opencl.preproc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.opencl.preproc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.opencl.preproc.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyFAI.opencl.preproc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.opencl.preproc.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.opencl.preproc.preproc": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "pyFAI.opencl.preproc.OCL_Preproc",
    "pyFAI.opencl.preproc.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.preproc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.opencl.processing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "pyFAI.opencl.processing.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.opencl.processing.BufferDescription": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pyFAI.opencl.processing.EventDescription": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pyFAI.opencl.processing.KernelContainer": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.processing.KernelContainer.__init__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "pyFAI.opencl.processing.KernelContainer.get_kernel": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pyFAI.opencl.processing.KernelContainer.get_kernels": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "pyFAI.opencl.processing.OpenclProcessing": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "object",
    "pyFAI.opencl.processing.BufferDescription",
    "pyFAI.opencl.processing.numpy"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.processing.OpenclProcessing.__del__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "pyFAI.opencl.processing.gc"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.processing.OpenclProcessing.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pyFAI.opencl.processing.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.processing.OpenclProcessing.allocate_buffers": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "MemoryError",
    "pyFAI.opencl.processing.logger",
    "pyFAI.opencl.processing.numpy",
    "release_cl_buffers"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.processing.OpenclProcessing.compile_kernels": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "MemoryError",
    "concatenate_cl_kernel",
    "pyFAI.opencl.processing.KernelContainer",
    "pyFAI.opencl.processing.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.processing.OpenclProcessing.free_buffers": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pyFAI.opencl.processing.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.processing.OpenclProcessing.free_kernels": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "pyFAI.opencl.processing.OpenclProcessing.log_profile": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "dir",
    "len",
    "pyFAI.opencl.processing.logger",
    "pyFAI.opencl.processing.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.processing.OpenclProcessing.reset_profile": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "pyFAI.opencl.processing.OpenclProcessing.set_profiling": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.processing.__author__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.opencl.processing.__contact__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.opencl.processing.__copyright__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.opencl.processing.__date__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.opencl.processing.__license__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.opencl.processing.__status__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.opencl.processing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.opencl.processing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.opencl.processing.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyFAI.opencl.processing.logger": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pyFAI.opencl.processing.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.opencl.processing.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyFAI.opencl.processing.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.opencl.processing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.opencl.processing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.opencl.processing.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.opencl.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "pyFAI.opencl.setup.configuration"
   ]
  },
  "type": "module"
 },
 "pyFAI.opencl.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "pyFAI.opencl.setup.__authors__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.opencl.setup.__contact__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyFAI.opencl.setup.__copyright__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.opencl.setup.__date__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.opencl.setup.__license__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyFAI.opencl.setup.configuration": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.setup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.opencl.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "pyFAI.opencl.sort": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.opencl.sort.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.opencl.sort.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyFAI.opencl.sort.Separator": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyFAI.opencl.sort.numpy"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.sort.Separator.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "kernel_workgroup_size",
    "min"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.sort.Separator.__repr__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyFAI.opencl.sort.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.sort.Separator.allocate_buffers": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "MemoryError",
    "pyFAI.opencl.sort.numpy",
    "release_cl_buffers"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.sort.Separator.filter_horizontal": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "min",
    "pyFAI.opencl.sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.sort.Separator.filter_vertical": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "min",
    "pyFAI.opencl.sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.sort.Separator.mean_std_horizontal": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "pyFAI.opencl.sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.sort.Separator.mean_std_vertical": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "pyFAI.opencl.sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.sort.Separator.set_kernel_arguments": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyFAI.opencl.sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.sort.Separator.sigma_clip_horizontal": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "pyFAI.opencl.sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.sort.Separator.sigma_clip_vertical": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "pyFAI.opencl.sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.sort.Separator.sort_horizontal": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "RuntimeError",
    "events",
    "events.append",
    "isinstance",
    "pyFAI.opencl.sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.sort.Separator.sort_vertical": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "RuntimeError",
    "events",
    "events.append",
    "isinstance",
    "min",
    "pyFAI.opencl.sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.sort.Separator.trimmed_mean_horizontal": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "max",
    "min",
    "pyFAI.opencl.sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.sort.Separator.trimmed_mean_vertical": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "max",
    "min",
    "pyFAI.opencl.sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.sort.__author__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.opencl.sort.__contact__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.opencl.sort.__copyright__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.opencl.sort.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.opencl.sort.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.opencl.sort.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.opencl.sort.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.opencl.sort.logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyFAI.opencl.sort.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.opencl.sort.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.opencl.sort.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.opencl.sort.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.opencl.sort.pyopencl.array": {
  "data": {
   "shadows": "pyopencl.array"
  },
  "type": "import"
 },
 "pyFAI.opencl.test": {
  "data": {},
  "type": "module"
 },
 "pyFAI.opencl.test.__authors__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyFAI.opencl.test.__date__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyFAI.opencl.test.__license__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyFAI.opencl.test.suite": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyFAI.opencl.test.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.test.test_addition": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.opencl.test.test_addition.logging",
    "pyFAI.opencl.test.test_addition.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.opencl.test.test_addition.TestAddition": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyFAI.opencl.test.test_addition.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.opencl.test.test_addition.TestAddition.setUp": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "get_opencl_code",
    "pyFAI.opencl.test.test_addition.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.test.test_addition.TestAddition.setUpClass": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "classmethod",
    "pyFAI.opencl.test.test_addition.TestAddition",
    "pyFAI.opencl.test.test_addition.logger",
    "pyFAI.opencl.test.test_addition.logging",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.test.test_addition.TestAddition.tearDown": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "pyFAI.opencl.test.test_addition.TestAddition.tearDownClass": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "classmethod",
    "print",
    "pyFAI.opencl.test.test_addition.TestAddition",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.test.test_addition.TestAddition.test_add": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Exception",
    "int",
    "pyFAI.opencl.test.test_addition.numpy",
    "pyFAI.opencl.test.test_addition.unittest",
    "range",
    "round"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.test.test_addition.TestAddition.test_measurement": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "_measure_workgroup_size",
    "enumerate",
    "pyFAI.opencl.test.test_addition.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.test.test_addition.__authors__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.opencl.test.test_addition.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.opencl.test.test_addition.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.opencl.test.test_addition.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.opencl.test.test_addition.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.opencl.test.test_addition.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.opencl.test.test_addition.logger": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyFAI.opencl.test.test_addition.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.opencl.test.test_addition.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.opencl.test.test_addition.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.opencl.test.test_addition.pyopencl.array": {
  "data": {
   "shadows": "pyopencl.array"
  },
  "type": "import"
 },
 "pyFAI.opencl.test.test_addition.suite": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "loader",
    "pyFAI.opencl.test.test_addition.TestAddition",
    "pyFAI.opencl.test.test_addition.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.test.test_addition.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.opencl.test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.opencl.utils": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.opencl.utils.read_cl_file"
   ]
  },
  "type": "module"
 },
 "pyFAI.opencl.utils.__authors__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.opencl.utils.__contact__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.opencl.utils.__copyright__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.opencl.utils.__date__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.opencl.utils.__license__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.opencl.utils.__status__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.opencl.utils.calc_size": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "dir",
    "int",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.utils.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "pyFAI.opencl.utils.concatenate_cl_kernel": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pyFAI.opencl.utils.os",
    "pyFAI.opencl.utils.read_cl_file"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.opencl.utils.get_opencl_code": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "pyFAI.opencl.utils.log": {
  "data": {
   "shadows": "math.log"
  },
  "type": "import"
 },
 "pyFAI.opencl.utils.nextpower": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "int",
    "math.ceil",
    "math.log"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.opencl.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.opencl.utils.read_cl_file": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "get_cl_file",
    "open"
   ]
  },
  "type": "function"
 },
 "pyFAI.opencl.utils.sizeof": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "dir",
    "int",
    "pyFAI.opencl.utils.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.peak_picker": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "__name__",
    "pyFAI.peak_picker.logging",
    "pyFAI.peak_picker.os",
    "pyFAI.peak_picker.qt"
   ]
  },
  "type": "module"
 },
 "pyFAI.peak_picker.ControlPoints": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "pyFAI.peak_picker.ControlPoints.__init__": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY",
    "Calibrant",
    "collections.OrderedDict",
    "isinstance",
    "list",
    "pyFAI.peak_picker.array",
    "pyFAI.peak_picker.logger",
    "pyFAI.peak_picker.numpy",
    "pyFAI.peak_picker.os",
    "pyFAI.peak_picker.threading",
    "pyFAI.peak_picker.types",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.__len__": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.__repr__": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "len",
    "pyFAI.peak_picker.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.append": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "PointGroup"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.append_2theta_deg": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "pyFAI.peak_picker.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.check": {
  "data": {
   "lineno": 759
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.get": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "pyFAI.peak_picker.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.getList2theta": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.getListRing": {
  "data": {
   "lineno": 987
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.getWeightedList": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.get_dSpacing": {
  "data": {
   "lineno": 1067
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.get_labels": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.get_wavelength": {
  "data": {
   "lineno": 1063
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.load": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY",
    "Calibrant",
    "Exception",
    "PointGroup",
    "float",
    "int",
    "len",
    "open",
    "pyFAI.peak_picker.logger",
    "pyFAI.peak_picker.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.pop": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "list",
    "pyFAI.peak_picker.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.readRingNrFromKeyboard": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "len",
    "list",
    "pyFAI.peak_picker.logging"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.reset": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.save": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.setWavelength_change2th": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "Calibrant"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.setWavelength_changeDs": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "Calibrant"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.set_dSpacing": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "Calibrant"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.ControlPoints.set_wavelength": {
  "data": {
   "lineno": 1058
  },
  "type": "function"
 },
 "pyFAI.peak_picker.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyFAI.peak_picker.PeakPicker": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "help",
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.peak_picker.PeakPicker.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ControlPoints",
    "bool",
    "isinstance",
    "pyFAI.peak_picker.fabio",
    "pyFAI.peak_picker.logger",
    "pyFAI.peak_picker.numpy",
    "pyFAI.peak_picker.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker._init_blob": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "BlobDetection",
    "pyFAI.peak_picker.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker._init_massif": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "Massif",
    "pyFAI.peak_picker.threading",
    "reconstruct"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker._init_watershed": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "InverseWatershed",
    "pyFAI.peak_picker.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.closeGUI": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "pyFAI.peak_picker.gc"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.contour": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "MemoryError",
    "ValueError",
    "isinstance",
    "len",
    "print",
    "pyFAI.peak_picker.logging",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.display_points": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "dict",
    "len",
    "pyFAI.peak_picker.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.finish": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "RuntimeError",
    "print",
    "pyFAI.peak_picker.logger",
    "pyFAI.peak_picker.logging",
    "pyFAI.peak_picker.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.gui": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "int",
    "maximize_fig",
    "pyFAI.peak_picker.numpy",
    "pyFAI.peak_picker.qt",
    "round",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.init": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.load": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.massif_contour": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "MemoryError",
    "len",
    "pyFAI.peak_picker.logging",
    "pyFAI.peak_picker.numpy",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.on_minus_pts_clicked": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.on_option_clicked": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.on_plus_pts_clicked": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.on_refine_clicked": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.onclick": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "append_1_point",
    "append_more_points",
    "erase_1_point",
    "erase_grp",
    "new_grp",
    "pyFAI.peak_picker.logger",
    "single_point"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.onclick.annontate": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "dict",
    "len",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.onclick.append_1_point": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "common_creation",
    "int",
    "new_grp",
    "pyFAI.peak_picker.logger",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.onclick.append_more_points": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "common_creation",
    "int",
    "len",
    "new_grp",
    "pyFAI.peak_picker.logger",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.onclick.common_creation": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "pyFAI.peak_picker.numpy",
    "pyFAI.peak_picker.sys",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.onclick.erase_1_point": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "annontate",
    "enumerate",
    "int",
    "len",
    "min",
    "pyFAI.peak_picker.logger",
    "pyFAI.peak_picker.numpy",
    "pyFAI.peak_picker.operator",
    "pyFAI.peak_picker.sys",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.onclick.erase_grp": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "len",
    "pyFAI.peak_picker.logger",
    "pyFAI.peak_picker.sys",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.onclick.new_grp": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "annontate",
    "common_creation",
    "int",
    "len",
    "pyFAI.peak_picker.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.onclick.single_point": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "annontate",
    "common_creation",
    "int",
    "pyFAI.peak_picker.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.peaks_from_area": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "dict",
    "pyFAI.peak_picker.numpy",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.remove_grp": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "print",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.reset": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "len",
    "update_fig"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PeakPicker.sync_init": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PointGroup": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "pyFAI.peak_picker.PointGroup.__init__": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PointGroup.__len__": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PointGroup.__repr__": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PointGroup.code": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PointGroup.get_label": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "chr",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PointGroup.get_ring": {
  "data": {
   "lineno": 1170
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PointGroup.label": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PointGroup.reset_label": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PointGroup.set_label": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "ord"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.PointGroup.set_ring": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "int",
    "pyFAI.peak_picker.logger",
    "pyFAI.peak_picker.traceback",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.peak_picker.WindowsError": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "pyFAI.peak_picker.__author__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.peak_picker.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.peak_picker.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.peak_picker.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.peak_picker.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.peak_picker.__status__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.peak_picker.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.peak_picker.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "pyFAI.peak_picker.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.peak_picker.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyFAI.peak_picker.gui_utils": {
  "data": {
   "shadows": "utils"
  },
  "type": "import"
 },
 "pyFAI.peak_picker.logger": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pyFAI.peak_picker.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.peak_picker.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.peak_picker.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pyFAI.peak_picker.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.peak_picker.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.peak_picker.qt": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pyFAI.peak_picker.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.peak_picker.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.peak_picker.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "pyFAI.peak_picker.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pyFAI.preproc": {
  "data": {},
  "type": "module"
 },
 "pyFAI.preproc.__author__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.preproc.__contact__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.preproc.__copyright__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.preproc.__date__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.preproc.__license__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.preproc.__status__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.preproc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.preproc.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.preproc.preproc": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "RuntimeWarning",
    "abs",
    "bool",
    "dtype",
    "isinstance",
    "list",
    "pyFAI.preproc.numpy",
    "pyFAI.preproc.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.preproc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.preproc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyFAI.preproc.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.project": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.resources": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "getattr",
    "pyFAI.resources._dir",
    "pyFAI.resources.os",
    "pyFAI.resources.sys"
   ]
  },
  "type": "module"
 },
 "pyFAI.resources._RESOURCES_DIR": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "pyFAI.resources.__authors__": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pyFAI.resources.__date__": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pyFAI.resources.__license__": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pyFAI.resources._dir": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pyFAI.resources.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.resources.pkg_resources": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pyFAI.resources.resource_filename": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "__name__",
    "pyFAI.resources._RESOURCES_DIR",
    "pyFAI.resources.os",
    "pyFAI.resources.pkg_resources"
   ]
  },
  "type": "function"
 },
 "pyFAI.resources.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "pyFAI.resources.setup.configuration"
   ]
  },
  "type": "module"
 },
 "pyFAI.resources.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "pyFAI.resources.setup.__authors__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyFAI.resources.setup.__date__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyFAI.resources.setup.__license__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyFAI.resources.setup.configuration": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "pyFAI.resources.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "pyFAI.resources.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "pyFAI.setup.configuration"
   ]
  },
  "type": "module"
 },
 "pyFAI.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "pyFAI.setup.__authors__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyFAI.setup.__date__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.setup.__license__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyFAI.setup.configuration": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "pyFAI.setup.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "pyFAI.spline": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.spline.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.spline.Spline": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.spline.Spline.__copy__": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.__deepcopy__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dir",
    "id"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.__init__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.__repr__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "len",
    "pyFAI.spline.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.array2spline": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "float",
    "len",
    "pyFAI.spline.logger",
    "pyFAI.spline.numpy",
    "pyFAI.spline.time"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.bin": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "dir",
    "float"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.comparison": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "abs",
    "pyFAI.spline.logger",
    "pyFAI.spline.numpy",
    "pyFAI.spline.pylab"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.correct": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "scipy.interpolate.fitpack.bisplev"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.fliplr": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "pyFAI.spline.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.fliplrud": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "pyFAI.spline.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.flipud": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "pyFAI.spline.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.getPixelSize": {
  "data": {
   "lineno": 646
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.read": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "IOError",
    "float",
    "int",
    "len",
    "open",
    "pyFAI.spline.numpy",
    "pyFAI.spline.os",
    "pyFAI.spline.traceback",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.setPixelSize": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.spline2array": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "pyFAI.spline.logger",
    "pyFAI.spline.numpy",
    "pyFAI.spline.time",
    "scipy.interpolate.fitpack.bisplev"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.splineFuncX": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "abs",
    "int",
    "len",
    "pyFAI.spline.numpy",
    "scipy.interpolate.fitpack.bisplev"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.splineFuncY": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "abs",
    "int",
    "len",
    "pyFAI.spline.numpy",
    "scipy.interpolate.fitpack.bisplev"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.tilt": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "int",
    "pyFAI.spline.Spline",
    "pyFAI.spline.logger",
    "pyFAI.spline.numpy",
    "pyFAI.spline.time"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.write": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.writeEDF": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "ImportError",
    "fabio.edfimage.edfimage",
    "pyFAI.spline.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.zeros": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "int",
    "pyFAI.spline.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.spline.Spline.zeros_like": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pyFAI.spline.__author__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.spline.__contact__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.spline.__copyright__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.spline.__date__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.spline.__license__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.spline.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.spline.edfimage": {
  "data": {
   "shadows": "fabio.edfimage.edfimage"
  },
  "type": "import"
 },
 "pyFAI.spline.fitpack": {
  "data": {
   "shadows": "scipy.interpolate.fitpack"
  },
  "type": "import"
 },
 "pyFAI.spline.logger": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pyFAI.spline.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.spline.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.spline.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.spline.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.spline.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "pyFAI.spline.scipy.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "pyFAI.spline.scipy.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "pyFAI.spline.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.spline.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.spline.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "pyFAI.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.test": {
  "data": {},
  "type": "module"
 },
 "pyFAI.test.__authors__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.run_tests": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "print",
    "pyFAI.test.suite",
    "pyFAI.test.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.suite": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyFAI.test.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.test.test_all": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_all.logging",
    "pyFAI.test.test_all.runner",
    "pyFAI.test.test_all.suite",
    "pyFAI.test.test_all.sys",
    "pyFAI.test.test_all.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_all.__authors__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.test.test_all.__contact__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_all.__copyright__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_all.__date__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_all.__license__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_all.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_all.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_all.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.test.test_all.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_all.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_all.runner": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "pyFAI.test.test_all.suite": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pyFAI.test.test_all.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_all.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.test.test_all.test_opencl": {
  "data": {
   "shadows": "test"
  },
  "type": "import"
 },
 "pyFAI.test.test_all.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_average": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_average.logging",
    "pyFAI.test.test_average.runner",
    "pyFAI.test.test_average.suite",
    "pyFAI.test.test_average.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_average.TestAverage": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyFAI.test.test_average.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_average.TestAverage.setUp": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pyFAI.test.test_average.numpy",
    "pyFAI.test.test_average.os",
    "pyFAI.test.test_average.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverage.tearDown": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pyFAI.test.test_average.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverage.test_average_dark": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverage.test_average_monitor": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pyFAI.test.test_average.fabio",
    "pyFAI.test.test_average.numpy",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverage.test_max_filter": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pyFAI.test.test_average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverage.test_mean_filter": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pyFAI.test.test_average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverage.test_min_filter": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pyFAI.test.test_average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverage.test_output_file": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_average.fabio",
    "pyFAI.test.test_average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverage.test_quantile": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyFAI.test.test_average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverage.test_sum_filter": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "pyFAI.test.test_average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverage.test_writed_properties": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "eval",
    "pyFAI.test.test_average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageAlgorithmFactory": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "pyFAI.test.test_average.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_average.TestAverageAlgorithmFactory.test_max": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageAlgorithmFactory.test_median": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageAlgorithmFactory.test_quantiles_no_params": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageAlgorithmFactory.test_sum": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageAlgorithmFactory.test_sum_cutoff": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageAlgorithmFactory.test_unknown_filter": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageMonitorName": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "pyFAI.test.test_average.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_average.TestAverageMonitorName.setUp": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pyFAI.test.test_average.fabio",
    "pyFAI.test.test_average.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageMonitorName.test_bad_counter_syntax": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageMonitorName.test_bad_monitor": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageMonitorName.test_bad_monitor_in_counter": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageMonitorName.test_edf_file_key": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "pyFAI.test.test_average.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageMonitorName.test_edf_file_motor": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "pyFAI.test.test_average.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageMonitorName.test_missing_counter": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageMonitorName.test_missing_counter_mne": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageMonitorName.test_missing_counter_monitor": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageMonitorName.test_missing_counter_pos": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageMonitorName.test_missing_counter_pos_element": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageMonitorName.test_missing_monitor": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageMonitorName.test_monitor": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "pyFAI.test.test_average.TestAverageMonitorName.test_monitor_in_counter": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "pyFAI.test.test_average.__author__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_average.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_average.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_average.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.test.test_average.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_average.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_average.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_average.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.test.test_average.logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyFAI.test.test_average.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_average.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_average.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.test_average.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_average.runner": {
  "data": {
   "lineno": 290
  },
  "type": "constant"
 },
 "pyFAI.test.test_average.suite": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_average.TestAverage",
    "pyFAI.test.test_average.TestAverageMonitorName",
    "pyFAI.test.test_average.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_average.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_azimuthal_integrator.logger",
    "pyFAI.test.test_azimuthal_integrator.logging",
    "pyFAI.test.test_azimuthal_integrator.runner",
    "pyFAI.test.test_azimuthal_integrator.suite",
    "pyFAI.test.test_azimuthal_integrator.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyFAI.test.test_azimuthal_integrator.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon.setUpClass": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "classmethod",
    "open",
    "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon",
    "pyFAI.test.test_azimuthal_integrator.fabio",
    "pyFAI.test.test_azimuthal_integrator.numpy",
    "pyFAI.test.test_azimuthal_integrator.os",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon.tearDown": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "Exception",
    "pyFAI.test.test_azimuthal_integrator.logger",
    "pyFAI.test.test_azimuthal_integrator.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon.tearDownClass": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "classmethod",
    "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon",
    "pyFAI.test.test_azimuthal_integrator.os",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon.test_cythonSP_vs_fit2d": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "len",
    "pyFAI.test.test_azimuthal_integrator.logger",
    "pyFAI.test.test_azimuthal_integrator.logging",
    "pyFAI.test.test_azimuthal_integrator.pylab",
    "pyFAI.test.test_azimuthal_integrator.time",
    "pyFAI.test.test_azimuthal_integrator.unittest",
    "pyFAI.units.TTH_RAD",
    "pyFAI.utils.decorators.depreclog"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon.test_cython_vs_fit2d": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "len",
    "pyFAI.test.test_azimuthal_integrator.logger",
    "pyFAI.test.test_azimuthal_integrator.logging",
    "pyFAI.test.test_azimuthal_integrator.pylab",
    "pyFAI.test.test_azimuthal_integrator.unittest",
    "pyFAI.utils.decorators.depreclog"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon.test_cython_vs_numpy": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "len",
    "pyFAI.test.test_azimuthal_integrator.logger",
    "pyFAI.test.test_azimuthal_integrator.logging",
    "pyFAI.test.test_azimuthal_integrator.pylab",
    "pyFAI.test.test_azimuthal_integrator.unittest",
    "pyFAI.utils.decorators.depreclog"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon.test_medfilt1d": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "pyFAI.test.test_azimuthal_integrator.gc",
    "pyFAI.test.test_azimuthal_integrator.logger",
    "pyFAI.test.test_azimuthal_integrator.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon.test_numpy_vs_fit2d": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "len",
    "pyFAI.test.test_azimuthal_integrator.logger",
    "pyFAI.test.test_azimuthal_integrator.logging",
    "pyFAI.test.test_azimuthal_integrator.pylab",
    "pyFAI.test.test_azimuthal_integrator.unittest",
    "pyFAI.utils.decorators.depreclog"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon.test_radial": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon.test_separate": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimPilatus": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pyFAI.test.test_azimuthal_integrator.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimPilatus.setUp": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "pyFAI.test.test_azimuthal_integrator.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimPilatus.setUpClass": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimPilatus.tearDown": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pyFAI.test.test_azimuthal_integrator.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimPilatus.tearDownClass": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "classmethod",
    "pyFAI.test.test_azimuthal_integrator.TestAzimPilatus",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestAzimPilatus.test_separate": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestFlatimage": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "pyFAI.test.test_azimuthal_integrator.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_azimuthal_integrator.TestFlatimage.test_splitBBox": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "Detector",
    "abs",
    "pyFAI.test.test_azimuthal_integrator.logger",
    "pyFAI.test.test_azimuthal_integrator.logging",
    "pyFAI.test.test_azimuthal_integrator.numpy",
    "pyFAI.test.test_azimuthal_integrator.pylab",
    "pyFAI.utils.decorators.depreclog"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestFlatimage.test_splitPixel": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "Detector",
    "abs",
    "pyFAI.test.test_azimuthal_integrator.logger",
    "pyFAI.test.test_azimuthal_integrator.logging",
    "pyFAI.test.test_azimuthal_integrator.numpy",
    "pyFAI.test.test_azimuthal_integrator.pylab",
    "pyFAI.utils.decorators.depreclog"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestSaxs": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "pyFAI.test.test_azimuthal_integrator.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_azimuthal_integrator.TestSaxs.setUp": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestSaxs.tearDown": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "pyFAI.test.test_azimuthal_integrator.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestSaxs.test_inpainting": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "pyFAI.test.test_azimuthal_integrator.fabio",
    "pyFAI.test.test_azimuthal_integrator.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestSaxs.test_mask": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "abs",
    "int",
    "pyFAI.test.test_azimuthal_integrator.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestSaxs.test_normalization_factor": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "pyFAI.test.test_azimuthal_integrator.copy",
    "pyFAI.test.test_azimuthal_integrator.fabio",
    "pyFAI.test.test_azimuthal_integrator.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestSaxs.test_variance": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "pyFAI.test.test_azimuthal_integrator.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestSetter": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "pyFAI.test.test_azimuthal_integrator.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_azimuthal_integrator.TestSetter.setUp": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "pyFAI.test.test_azimuthal_integrator.fabio",
    "pyFAI.test.test_azimuthal_integrator.numpy",
    "pyFAI.test.test_azimuthal_integrator.os",
    "pyFAI.test.test_azimuthal_integrator.tempfile"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestSetter.tearDown": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "pyFAI.test.test_azimuthal_integrator.shutil"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestSetter.test_dark": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.TestSetter.test_flat": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_azimuthal_integrator.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_azimuthal_integrator.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_azimuthal_integrator.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_azimuthal_integrator.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_azimuthal_integrator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.depreclog": {
  "data": {
   "shadows": "pyFAI.utils.decorators.depreclog"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyFAI.test.test_azimuthal_integrator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.runner": {
  "data": {
   "lineno": 495
  },
  "type": "constant"
 },
 "pyFAI.test.test_azimuthal_integrator.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.suite": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon",
    "pyFAI.test.test_azimuthal_integrator.TestFlatimage",
    "pyFAI.test.test_azimuthal_integrator.TestSaxs",
    "pyFAI.test.test_azimuthal_integrator.TestSetter",
    "pyFAI.test.test_azimuthal_integrator.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_azimuthal_integrator.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.units": {
  "data": {
   "shadows": "pyFAI.units"
  },
  "type": "import"
 },
 "pyFAI.test.test_azimuthal_integrator.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_bayes": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_bayes.logging",
    "pyFAI.test.test_bayes.runner",
    "pyFAI.test.test_bayes.suite",
    "pyFAI.test.test_bayes.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_bayes.TestBayes": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pyFAI.test.test_bayes.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_bayes.TestBayes.setUp": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pyFAI.test.test_bayes.numpy",
    "pyFAI.test.test_bayes.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bayes.TestBayes.tearDown": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyFAI.test.test_bayes.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bayes.TestBayes.test_background1d": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "pyFAI.test.test_bayes.TestBayes.test_llk": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "f",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bayes.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_bayes.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_bayes.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_bayes.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_bayes.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_bayes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_bayes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_bayes.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "pyFAI.test.test_bayes.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.test.test_bayes.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_bayes.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_bayes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_bayes.runner": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "pyFAI.test.test_bayes.suite": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_bayes.TestBayes",
    "pyFAI.test.test_bayes.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bayes.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_bilinear": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_bilinear.logging",
    "pyFAI.test.test_bilinear.runner",
    "pyFAI.test.test_bilinear.suite",
    "pyFAI.test.test_bilinear.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_bilinear.TestBilinear": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pyFAI.test.test_bilinear.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_bilinear.TestBilinear.test_max_search_half": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_bilinear.logger",
    "pyFAI.test.test_bilinear.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bilinear.TestBilinear.test_max_search_round": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_bilinear.logger",
    "pyFAI.test.test_bilinear.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bilinear.TestConversion": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pyFAI.test.test_bilinear.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_bilinear.TestConversion.test4d": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "abs",
    "float",
    "pyFAI.test.test_bilinear.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bilinear.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_bilinear.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_bilinear.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_bilinear.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_bilinear.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_bilinear.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_bilinear.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_bilinear.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.test.test_bilinear.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_bilinear.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_bilinear.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_bilinear.runner": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "pyFAI.test.test_bilinear.suite": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_bilinear.TestBilinear",
    "pyFAI.test.test_bilinear.TestConversion",
    "pyFAI.test.test_bilinear.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bilinear.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_bispev": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.test.test_bispev.logger",
    "pyFAI.test.test_bispev.logging",
    "pyFAI.test.test_bispev.runner",
    "pyFAI.test.test_bispev.suite",
    "pyFAI.test.test_bispev.unittest",
    "scipy.interpolate.fitpack"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_bispev.TestBispev": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pyFAI.test.test_bispev.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_bispev.TestBispev.setUp": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pyFAI.test.test_bispev.TestBispev.tearDown": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pyFAI.test.test_bispev.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bispev.TestBispev.test_bispev": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_bispev.logger",
    "pyFAI.test.test_bispev.logging",
    "pyFAI.test.test_bispev.numpy",
    "pyFAI.test.test_bispev.pylab",
    "pyFAI.test.test_bispev.time",
    "pyFAI.third_party.six.moves.input",
    "scipy.interpolate.fitpack.bisplev"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bispev.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_bispev.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_bispev.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_bispev.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_bispev.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_bispev.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_bispev.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_bispev.fitpack": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pyFAI.test.test_bispev.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.test.test_bispev.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_bispev.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_bispev.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_bispev.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "pyFAI.test.test_bispev.runner": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "pyFAI.test.test_bispev.six": {
  "data": {
   "shadows": "pyFAI.third_party.six"
  },
  "type": "import"
 },
 "pyFAI.test.test_bispev.suite": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_bispev.TestBispev",
    "pyFAI.test.test_bispev.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bispev.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.test.test_bispev.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_blob_detection": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_blob_detection.logging",
    "pyFAI.test.test_blob_detection.runner",
    "pyFAI.test.test_blob_detection.suite",
    "pyFAI.test.test_blob_detection.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_blob_detection.TestBlobDetection": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pyFAI.test.test_blob_detection.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_blob_detection.TestBlobDetection.setUp": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyFAI.test.test_blob_detection.image_test_rings"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_blob_detection.TestBlobDetection.tearDown": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pyFAI.test.test_blob_detection.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_blob_detection.TestBlobDetection.test_local_max": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "BlobDetection",
    "local_max",
    "pyFAI.test.test_blob_detection.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_blob_detection.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_blob_detection.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_blob_detection.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_blob_detection.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_blob_detection.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_blob_detection.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_blob_detection.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_blob_detection.image_test_rings": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "detector_factory",
    "pyFAI.test.test_blob_detection.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_blob_detection.logger": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.test.test_blob_detection.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_blob_detection.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_blob_detection.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_blob_detection.runner": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "pyFAI.test.test_blob_detection.suite": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_blob_detection.TestBlobDetection",
    "pyFAI.test.test_blob_detection.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_blob_detection.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_bug_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_bug_regression.logging",
    "pyFAI.test.test_bug_regression.runner",
    "pyFAI.test.test_bug_regression.suite",
    "pyFAI.test.test_bug_regression.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_bug_regression.TestBug170": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pyFAI.test.test_bug_regression.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_bug_regression.TestBug170.setUp": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "open",
    "pyFAI.test.test_bug_regression.numpy",
    "pyFAI.test.test_bug_regression.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bug_regression.TestBug170.tearDown": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pyFAI.test.test_bug_regression.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bug_regression.TestBug170.test_bug170": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "load",
    "pyFAI.test.test_bug_regression.logger",
    "pyFAI.test.test_bug_regression.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bug_regression.TestBug211": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pyFAI.test.test_bug_regression.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_bug_regression.TestBug211.setUp": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pyFAI.test.test_bug_regression.fabio",
    "pyFAI.test.test_bug_regression.numpy",
    "pyFAI.test.test_bug_regression.os",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bug_regression.TestBug211.tearDown": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pyFAI.test.test_bug_regression.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bug_regression.TestBug211.test_quantile": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pyFAI.test.test_bug_regression.fabio",
    "pyFAI.test.test_bug_regression.logger",
    "pyFAI.test.test_bug_regression.numpy",
    "pyFAI.test.test_bug_regression.os",
    "pyFAI.test.test_bug_regression.subprocess",
    "pyFAI.test.test_bug_regression.sys"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bug_regression.TestBugRegression": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "pyFAI.test.test_bug_regression.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_bug_regression.TestBugRegression.test_bug_174": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "abs",
    "load",
    "pyFAI.test.test_bug_regression.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bug_regression.TestBugRegression.test_bug_232": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "id",
    "pyFAI.test.test_bug_regression.copy",
    "pyFAI.test.test_bug_regression.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bug_regression.TestBugRegression.test_bug_758": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "pyFAI.test.test_bug_regression.__author__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.test.test_bug_regression.__contact__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.test.test_bug_regression.__copyright__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.test.test_bug_regression.__date__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.test.test_bug_regression.__license__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.test.test_bug_regression.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_bug_regression.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyFAI.test.test_bug_regression.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_bug_regression.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.test.test_bug_regression.logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyFAI.test.test_bug_regression.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_bug_regression.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_bug_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.test_bug_regression.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_bug_regression.pyFAI.app.average": {
  "data": {
   "shadows": "pyFAI.app.average"
  },
  "type": "import"
 },
 "pyFAI.test.test_bug_regression.runner": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "pyFAI.test.test_bug_regression.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyFAI.test.test_bug_regression.suite": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_bug_regression.TestBug170",
    "pyFAI.test.test_bug_regression.TestBug211",
    "pyFAI.test.test_bug_regression.TestBugRegression",
    "pyFAI.test.test_bug_regression.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_bug_regression.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.test.test_bug_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_calibrant": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_calibrant.logging",
    "pyFAI.test.test_calibrant.runner",
    "pyFAI.test.test_calibrant.suite",
    "pyFAI.test.test_calibrant.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_calibrant.TestCalibrant": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pyFAI.test.test_calibrant.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_calibrant.TestCalibrant.test_2th": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY",
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.TestCalibrant.test_copy": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY",
    "pyFAI.test.test_calibrant.copy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.TestCalibrant.test_factory": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY",
    "CALIBRANT_FACTORY.items",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.TestCalibrant.test_factory_create_calibrant": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.TestCalibrant.test_fake": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "CALIBRANT_FACTORY",
    "detector",
    "dir",
    "enumerate",
    "matplotlib.pyplot.figure",
    "max",
    "pyFAI.test.test_calibrant.logger",
    "pyFAI.test.test_calibrant.logging",
    "pyFAI.test.test_calibrant.sys",
    "set"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.TestCalibrant.test_hash": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.TestCalibrant.test_not_same_dspace": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.TestCalibrant.test_not_same_wavelength": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.TestCalibrant.test_same": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.TestCalibrant.test_same2": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "CALIBRANT_FACTORY"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.TestCell": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "pyFAI.test.test_calibrant.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_calibrant.TestCell.test_class": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Cell"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.TestCell.test_classmethods": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "Cell.cubic",
    "Cell.orthorhombic",
    "Cell.tetragonal"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.TestCell.test_dspacing": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "Cell",
    "Cell.cubic",
    "list"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.TestCell.test_helium": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "Cell.cubic",
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.TestCell.test_hydrogen": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "Cell.hexagonal",
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_calibrant.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_calibrant.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_calibrant.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_calibrant.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_calibrant.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_calibrant.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pyFAI.test.test_calibrant.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_calibrant.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.test.test_calibrant.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_calibrant.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_calibrant.pyplot": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pyFAI.test.test_calibrant.runner": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "pyFAI.test.test_calibrant.suite": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_calibrant.TestCalibrant",
    "pyFAI.test.test_calibrant.TestCell",
    "pyFAI.test.test_calibrant.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_calibrant.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.test.test_calibrant.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_convolution": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_convolution.logging",
    "pyFAI.test.test_convolution.runner",
    "pyFAI.test.test_convolution.suite",
    "pyFAI.test.test_convolution.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_convolution.TestConvolution": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyFAI.test.test_convolution.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_convolution.TestConvolution.setUp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_convolution.TestConvolution.tearDown": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pyFAI.test.test_convolution.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_convolution.TestConvolution.test_gaussian": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyFAI.test.test_convolution.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_convolution.TestConvolution.test_gaussian_filter": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pyFAI.test.test_convolution.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_convolution.TestConvolution.test_horizontal_convolution": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyFAI.test.test_convolution.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_convolution.TestConvolution.test_vertical_convolution": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pyFAI.test.test_convolution.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_convolution.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_convolution.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_convolution.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_convolution.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_convolution.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_convolution.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_convolution.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_convolution.logger": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.test.test_convolution.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_convolution.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_convolution.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_convolution.runner": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "pyFAI.test.test_convolution.scipy.misc": {
  "data": {
   "shadows": "scipy.misc"
  },
  "type": "import"
 },
 "pyFAI.test.test_convolution.scipy.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "pyFAI.test.test_convolution.scipy.signal": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "pyFAI.test.test_convolution.suite": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_convolution.TestConvolution",
    "pyFAI.test.test_convolution.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_convolution.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_csr": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_csr.logging",
    "pyFAI.test.test_csr.runner",
    "pyFAI.test.test_csr.suite",
    "pyFAI.test.test_csr.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_csr.TestCSR": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pyFAI.test.test_csr.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_csr.TestCSR.setUpClass": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "classmethod",
    "pyFAI.test.test_csr.fabio",
    "pyFAI.utils.decorators.depreclog"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_csr.TestCSR.tearDownClass": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_csr.TestCSR.test_2d_nosplit": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "pyFAI.test.test_csr.TestCSR.test_2d_splitbbox": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pyFAI.test.test_csr.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_csr.TestOpenClCSR": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "pyFAI.test.test_csr.TestOpenClCSR.setUp": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "pyFAI.test.test_csr.TestOpenClCSR.setUpClass": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "classmethod",
    "pyFAI.test.test_csr.fabio",
    "pyFAI.utils.decorators.depreclog"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_csr.TestOpenClCSR.tearDownClass": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_csr.TestOpenClCSR.test_csr": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "MemoryError",
    "pyFAI.test.test_csr.logger",
    "pyFAI.test.test_csr.numpy",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_csr.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_csr.depreclog": {
  "data": {
   "shadows": "pyFAI.utils.decorators.depreclog"
  },
  "type": "import"
 },
 "pyFAI.test.test_csr.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_csr.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.test.test_csr.logger": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.test.test_csr.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_csr.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_csr.ocl_azim_csr": {
  "data": {
   "shadows": "azim_csr"
  },
  "type": "import"
 },
 "pyFAI.test.test_csr.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_csr.runner": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "pyFAI.test.test_csr.suite": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_csr.TestCSR",
    "pyFAI.test.test_csr.TestOpenClCSR",
    "pyFAI.test.test_csr.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_csr.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_detector": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_detector.logging",
    "pyFAI.test.test_detector.runner",
    "pyFAI.test.test_detector.suite",
    "pyFAI.test.test_detector.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_detector.TestDetector": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pyFAI.test.test_detector.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_detector.TestDetector.test_Xpad_flat": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "abs",
    "detector_factory",
    "pyFAI.test.test_detector.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_detector.TestDetector.test_detector_imxpad_s140": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "detector_factory",
    "hasattr",
    "pyFAI.test.test_detector.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_detector.TestDetector.test_detector_instanciate": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyFAI.test.test_detector.logger",
    "v"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_detector.TestDetector.test_detector_rayonix_sx165": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "detector_factory"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_detector.TestDetector.test_guess_binning": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "detector_factory"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_detector.TestDetector.test_nexus_detector": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "MemoryError",
    "abs",
    "detector_factory",
    "dir",
    "len",
    "pyFAI.test.test_detector.logger",
    "pyFAI.test.test_detector.numpy",
    "pyFAI.test.test_detector.os",
    "pyFAI.test.test_detector.shutil",
    "pyFAI.test.test_detector.tempfile"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_detector.TestDetector.test_non_flat": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "abs",
    "detector_factory",
    "pyFAI.test.test_detector.logger",
    "pyFAI.test.test_detector.time"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_detector.__author__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.test.test_detector.__contact__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_detector.__copyright__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_detector.__date__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_detector.__license__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_detector.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.test.test_detector.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_detector.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_detector.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.test_detector.runner": {
  "data": {
   "lineno": 273
  },
  "type": "constant"
 },
 "pyFAI.test.test_detector.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyFAI.test.test_detector.suite": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_detector.TestDetector",
    "pyFAI.test.test_detector.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_detector.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyFAI.test.test_detector.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.test.test_detector.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_distortion": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_distortion.logging",
    "pyFAI.test.test_distortion.runner",
    "pyFAI.test.test_distortion.suite",
    "pyFAI.test.test_distortion.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_distortion.TestHalfCCD": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyFAI.test.test_distortion.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_distortion.TestHalfCCD.setUp": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pyFAI.test.test_distortion.fabio",
    "pyFAI.test.test_distortion.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_distortion.TestHalfCCD.tearDown": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyFAI.test.test_distortion.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_distortion.TestHalfCCD.test_csr_vs_fit2d": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "MemoryError",
    "abs",
    "pyFAI.test.test_distortion.logger",
    "pyFAI.test.test_distortion.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_distortion.TestHalfCCD.test_lut_vs_fit2d": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "MemoryError",
    "abs",
    "pyFAI.test.test_distortion.logger",
    "pyFAI.test.test_distortion.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_distortion.TestHalfCCD.test_pos_lut": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_distortion.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_distortion.TestHalfCCD.test_ref_vs_fit2d": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "MemoryError",
    "abs",
    "pyFAI.test.test_distortion.logger",
    "pyFAI.test.test_distortion.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_distortion.TestImplementations": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "pyFAI.test.test_distortion.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_distortion.TestImplementations.setUp": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "pyFAI.test.test_distortion.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_distortion.TestImplementations.tearDown": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "pyFAI.test.test_distortion.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_distortion.TestImplementations.test_calc_pos": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_distortion.TestImplementations.test_lut": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "pyFAI.test.test_distortion.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_distortion.TestImplementations.test_size": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_distortion.TestManual": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "pyFAI.test.test_distortion.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_distortion.TestManual.test": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "print",
    "pyFAI.test.test_distortion.fabio",
    "pyFAI.test.test_distortion.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_distortion.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_distortion.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_distortion.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_distortion.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_distortion.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_distortion.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_distortion.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_distortion.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.test.test_distortion.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.test.test_distortion.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_distortion.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_distortion.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_distortion.runner": {
  "data": {
   "lineno": 351
  },
  "type": "constant"
 },
 "pyFAI.test.test_distortion.suite": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "pyFAI.test.test_distortion.TestHalfCCD",
    "pyFAI.test.test_distortion.TestImplementations",
    "pyFAI.test.test_distortion.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_distortion.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_dummy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_dummy.logging",
    "pyFAI.test.test_dummy.runner",
    "pyFAI.test.test_dummy.suite",
    "pyFAI.test.test_dummy.sys",
    "pyFAI.test.test_dummy.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_dummy.TestDummy": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pyFAI.test.test_dummy.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_dummy.TestDummy.test_dummy": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "__name__",
    "print",
    "pyFAI.test.test_dummy.pyFAI"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_dummy.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_dummy.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_dummy.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_dummy.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_dummy.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_dummy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_dummy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_dummy.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.test.test_dummy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_dummy.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_dummy.pyFAI": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.test.test_dummy.runner": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pyFAI.test.test_dummy.suite": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_dummy.TestDummy",
    "pyFAI.test.test_dummy.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_dummy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.test.test_dummy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_export": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_export.logging",
    "pyFAI.test.test_export.runner",
    "pyFAI.test.test_export.suite",
    "pyFAI.test.test_export.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_export.TestFIT2D": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyFAI.test.test_export.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_export.TestFIT2D.setUp": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "pyFAI.test.test_export.TestFIT2D.tearDown": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyFAI.test.test_export.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_export.TestFIT2D.test_export": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pyFAI.test.test_export.testExport"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_export.TestFIT2D.test_simple": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "AzimuthalIntegrator.sload"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_export.TestSPD": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "pyFAI.test.test_export.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_export.TestSPD.setUp": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "pyFAI.test.test_export.TestSPD.test_simple": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "AzimuthalIntegrator.sload"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_export.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_export.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_export.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_export.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_export.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_export.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_export.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_export.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.test.test_export.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_export.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_export.runner": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "pyFAI.test.test_export.suite": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_export.TestFIT2D",
    "pyFAI.test.test_export.TestSPD",
    "pyFAI.test.test_export.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_export.testExport": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "TypeError",
    "abs",
    "float",
    "round"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_export.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_flat": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_flat.logging",
    "pyFAI.test.test_flat.runner",
    "pyFAI.test.test_flat.suite",
    "pyFAI.test.test_flat.sys",
    "pyFAI.test.test_flat.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_flat.TestFlat1D": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyFAI.test.test_flat.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_flat.TestFlat1D.setUp": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pyFAI.test.test_flat.numpy",
    "pyFAI.test.test_flat.pyFAI",
    "pyFAI.test.test_flat.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_flat.TestFlat1D.tearDown": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyFAI.test.test_flat.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_flat.TestFlat1D.test_correct": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pyFAI.test.test_flat.logger",
    "pyFAI.test.test_flat.pyFAI",
    "pyFAI.utils.decorators.depreclog",
    "xrpd_func"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_flat.TestFlat1D.test_no_correct": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pyFAI.test.test_flat.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_flat.TestFlat2D": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pyFAI.test.test_flat.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_flat.TestFlat2D.setUp": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pyFAI.test.test_flat.numpy",
    "pyFAI.test.test_flat.pyFAI"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_flat.TestFlat2D.tearDown": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "pyFAI.test.test_flat.TestFlat2D.test_correct": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "MemoryError",
    "abs",
    "pyFAI.test.test_flat.logger",
    "pyFAI.test.test_flat.numpy",
    "pyFAI.test.test_flat.pyFAI",
    "pyFAI.utils.decorators.depreclog",
    "xrpd_func"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_flat.TestFlat2D.test_no_correct": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyFAI.test.test_flat.logger",
    "pyFAI.test.test_flat.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_flat.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_flat.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_flat.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_flat.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_flat.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_flat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_flat.depreclog": {
  "data": {
   "shadows": "pyFAI.utils.decorators.depreclog"
  },
  "type": "import"
 },
 "pyFAI.test.test_flat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_flat.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.test.test_flat.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_flat.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_flat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_flat.pyFAI": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.test.test_flat.runner": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "pyFAI.test.test_flat.suite": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_flat.TestFlat1D",
    "pyFAI.test.test_flat.TestFlat2D",
    "pyFAI.test.test_flat.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_flat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.test.test_flat.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_geometry.logging",
    "pyFAI.test.test_geometry.runner",
    "pyFAI.test.test_geometry.suite",
    "pyFAI.test.test_geometry.sys",
    "pyFAI.test.test_geometry.time",
    "pyFAI.test.test_geometry.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_geometry.Detector": {
  "data": {
   "shadows": "pyFAI.detectors.Detector"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry.TestBug474": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "pyFAI.test.test_geometry.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_geometry.TestBug474.test_regression": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "abs",
    "detector_factory"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestBug88SolidAngle": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pyFAI.test.test_geometry.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_geometry.TestBug88SolidAngle.testSolidAngle": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "pyFAI.test.test_geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestCalcFrom": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "pyFAI.test.test_geometry.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_geometry.TestCalcFrom.test_calcfrom12d": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "abs",
    "detector_factory",
    "pyFAI.test.test_geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestFastPath": {
  "data": {
   "lineno": 222
  },
  "type": "class"
 },
 "pyFAI.test.test_geometry.TestFastPath.getGeometries": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pyFAI.test.test_geometry.random",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestFastPath.setUp": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "pyFAI.test.test_geometry.logging"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestFastPath.tearDown": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestFastPath.test_XYZ": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_geometry.logger",
    "pyFAI.test.test_geometry.numpy",
    "pyFAI.test.test_geometry.timer",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestFastPath.test_corner_array": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "abs",
    "dict",
    "pyFAI.test.test_geometry.itertools",
    "pyFAI.test.test_geometry.logger",
    "pyFAI.test.test_geometry.numpy",
    "pyFAI.test.test_geometry.timer"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestFastPath.test_deltachi": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_geometry.logger",
    "pyFAI.test.test_geometry.numpy",
    "pyFAI.test.test_geometry.timer",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestGeometry": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "pyFAI.test.test_geometry.numpy"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_geometry.TestGeometry.getFunctions": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestGeometry.getGeometries": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestGeometry.test_XYZ": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_geometry.itertools",
    "pyFAI.test.test_geometry.logger",
    "pyFAI.test.test_geometry.numpy",
    "pyFAI.test.test_geometry.timer",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestGeometry.test_geometry_functions": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "abs",
    "getattr",
    "pyFAI.test.test_geometry.itertools",
    "pyFAI.test.test_geometry.logger",
    "pyFAI.test.test_geometry.numpy",
    "pyFAI.test.test_geometry.timer"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestRecprocalSpacingSquarred": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "pyFAI.test.test_geometry.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_geometry.TestRecprocalSpacingSquarred.setUp": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "pyFAI.detectors.Detector",
    "pyFAI.test.test_geometry.logging"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestRecprocalSpacingSquarred.tearDown": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "pyFAI.test.test_geometry.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestRecprocalSpacingSquarred.test_center": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "pyFAI.test.test_geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestRecprocalSpacingSquarred.test_corner": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "pyFAI.test.test_geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestRecprocalSpacingSquarred.test_delta": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestSolidAngle": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyFAI.test.test_geometry.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_geometry.TestSolidAngle.testSolidAngle": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "abs",
    "pyFAI.test.test_geometry.fabio",
    "pyFAI.test.test_geometry.numpy",
    "pyFAI.test.test_geometry.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestSolidAngle.test_nonflat_center": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "detector_factory",
    "pyFAI.test.test_geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestSolidAngle.test_nonflat_inside": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "detector_factory",
    "pyFAI.test.test_geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.TestSolidAngle.test_nonflat_outside": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "detector_factory",
    "pyFAI.test.test_geometry.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.__author__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry.__contact__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry.__copyright__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry.__date__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry.__license__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry.runner": {
  "data": {
   "lineno": 459
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry.suite": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_geometry.TestBug474",
    "pyFAI.test.test_geometry.TestBug88SolidAngle",
    "pyFAI.test.test_geometry.TestCalcFrom",
    "pyFAI.test.test_geometry.TestFastPath",
    "pyFAI.test.test_geometry.TestGeometry",
    "pyFAI.test.test_geometry.TestRecprocalSpacingSquarred",
    "pyFAI.test.test_geometry.TestSolidAngle",
    "pyFAI.test.test_geometry.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry.timer": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry_refinement": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_geometry_refinement.logging",
    "pyFAI.test.test_geometry_refinement.runner",
    "pyFAI.test.test_geometry_refinement.suite",
    "pyFAI.test.test_geometry_refinement.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_geometry_refinement.GeometryRefinement": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry_refinement.TestGeometryRefinement": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyFAI.test.test_geometry_refinement.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_geometry_refinement.TestGeometryRefinement.test_Spline": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "enumerate",
    "pyFAI.test.test_geometry_refinement.GeometryRefinement",
    "pyFAI.test.test_geometry_refinement.numpy",
    "pyFAI.test.test_geometry_refinement.os",
    "pyFAI.test.test_geometry_refinement.random"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry_refinement.TestGeometryRefinement.test_noSpline": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "abs",
    "list",
    "pyFAI.test.test_geometry_refinement.GeometryRefinement",
    "pyFAI.test.test_geometry_refinement.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry_refinement.TestGeometryRefinement.test_synthetic": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "print",
    "pyFAI.test.test_geometry_refinement.GeometryRefinement",
    "pyFAI.test.test_geometry_refinement.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry_refinement.__author__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry_refinement.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry_refinement.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry_refinement.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry_refinement.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry_refinement.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry_refinement.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry_refinement.logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry_refinement.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry_refinement.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry_refinement.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry_refinement.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry_refinement.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyFAI.test.test_geometry_refinement.runner": {
  "data": {
   "lineno": 872
  },
  "type": "constant"
 },
 "pyFAI.test.test_geometry_refinement.suite": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_geometry_refinement.TestGeometryRefinement",
    "pyFAI.test.test_geometry_refinement.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_geometry_refinement.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_goniometer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_goniometer.logging",
    "pyFAI.test.test_goniometer.runner",
    "pyFAI.test.test_goniometer.suite",
    "pyFAI.test.test_goniometer.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_goniometer.TestTranslation": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyFAI.test.test_goniometer.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_goniometer.TestTranslation.reference_function": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_goniometer.TestTranslation.setUp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "GeometryTranslation",
    "pyFAI.test.test_goniometer.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_goniometer.TestTranslation.tearDown": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pyFAI.test.test_goniometer.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_goniometer.TestTranslation.test_equivalent": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "abs",
    "len",
    "pyFAI.test.test_goniometer.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_goniometer.TestTranslation.test_goniometer": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Goniometer",
    "Goniometer.sload",
    "pyFAI.test.test_goniometer.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_goniometer.TestTranslation.test_serialize": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "GeometryTranslation",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_goniometer.__author__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_goniometer.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_goniometer.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_goniometer.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.test.test_goniometer.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_goniometer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_goniometer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_goniometer.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.test.test_goniometer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_goniometer.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_goniometer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.test_goniometer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_goniometer.runner": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "pyFAI.test.test_goniometer.suite": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_goniometer.TestTranslation",
    "pyFAI.test.test_goniometer.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_goniometer.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_histogram": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_histogram.logger",
    "pyFAI.test.test_histogram.logging",
    "pyFAI.test.test_histogram.numpy",
    "pyFAI.test.test_histogram.runner",
    "pyFAI.test.test_histogram.suite",
    "pyFAI.test.test_histogram.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_histogram.EPS32": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyFAI.test.test_histogram.TestHistogram1d": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyFAI.test.test_histogram.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_histogram.TestHistogram1d.setUp": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "HistoBBox1d",
    "histogram",
    "numpy.cos",
    "pyFAI.test.test_histogram.EPS32",
    "pyFAI.test.test_histogram.logger",
    "pyFAI.test.test_histogram.logging",
    "pyFAI.test.test_histogram.numpy",
    "pyFAI.test.test_histogram.time",
    "pyFAI.test.test_histogram.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_histogram.TestHistogram1d.tearDown": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pyFAI.test.test_histogram.logging",
    "pyFAI.test.test_histogram.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_histogram.TestHistogram1d.test_count_csr": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "abs",
    "int",
    "pyFAI.test.test_histogram.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_histogram.TestHistogram1d.test_count_cython": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "abs",
    "int",
    "pyFAI.test.test_histogram.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_histogram.TestHistogram1d.test_count_numpy": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_histogram.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_histogram.TestHistogram1d.test_numpy_vs_cython_vs_csr_1d": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_histogram.logger",
    "pyFAI.test.test_histogram.logging",
    "pyFAI.test.test_histogram.pylab"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_histogram.TestHistogram2d": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pyFAI.test.test_histogram.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_histogram.TestHistogram2d.setUp": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "HistoBBox2d",
    "histogram2d",
    "numpy.cos",
    "pyFAI.test.test_histogram.EPS32",
    "pyFAI.test.test_histogram.logger",
    "pyFAI.test.test_histogram.logging",
    "pyFAI.test.test_histogram.numpy",
    "pyFAI.test.test_histogram.time",
    "pyFAI.test.test_histogram.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_histogram.TestHistogram2d.tearDown": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "pyFAI.test.test_histogram.logging",
    "pyFAI.test.test_histogram.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_histogram.TestHistogram2d.test_count_csr": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "abs",
    "int",
    "pyFAI.test.test_histogram.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_histogram.TestHistogram2d.test_count_cython": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "abs",
    "int",
    "pyFAI.test.test_histogram.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_histogram.TestHistogram2d.test_count_numpy": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_histogram.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_histogram.TestHistogram2d.test_numpy_vs_cython_vs_csr_2d": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_histogram.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_histogram.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_histogram.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_histogram.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_histogram.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_histogram.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_histogram.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_histogram.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "pyFAI.test.test_histogram.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_histogram.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.test.test_histogram.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_histogram.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_histogram.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_histogram.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "pyFAI.test.test_histogram.runner": {
  "data": {
   "lineno": 363
  },
  "type": "constant"
 },
 "pyFAI.test.test_histogram.suite": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_histogram.TestHistogram1d",
    "pyFAI.test.test_histogram.TestHistogram2d",
    "pyFAI.test.test_histogram.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_histogram.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.test.test_histogram.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_integrate.logging",
    "pyFAI.test.test_integrate.runner",
    "pyFAI.test.test_integrate.suite",
    "pyFAI.test.test_integrate.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_integrate.TestIntegrate1D": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_integrate.TestIntegrate1D.setUp": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "Pilatus1M",
    "pyFAI.test.test_integrate.fabio",
    "pyFAI.test.test_integrate.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrate1D.tearDown": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrate1D.test2th": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrate1D.testQ": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrate1D.testR": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrate1D.test_defaultwriter": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "DefaultAiWriter",
    "pyFAI.test.test_integrate.os",
    "pyFAI.test.test_integrate.resulttempfile"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrate1D.test_filename": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate.os",
    "pyFAI.test.test_integrate.resulttempfile"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrate2D": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_integrate.TestIntegrate2D.setUpClass": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "Pilatus1M",
    "classmethod",
    "pyFAI.test.test_integrate.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrate2D.tearDownClass": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrate2D.test2th": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_integrate.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrate2D.testQ": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_integrate.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrate2D.testR": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_integrate.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrate2D.test_defaultwriter": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "DefaultAiWriter",
    "pyFAI.test.test_integrate.os",
    "pyFAI.test.test_integrate.resulttempfile"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrate2D.test_filename": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate.os",
    "pyFAI.test.test_integrate.resulttempfile"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrateResult": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_integrate.TestIntegrateResult.setUp": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrateResult.tearDown": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrateResult.test_result_1d": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "Integrate1dResult"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrateResult.test_result_1d_count": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "Integrate1dResult"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrateResult.test_result_1d_unit": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "Integrate1dResult"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrateResult.test_result_1d_with_sigma": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "Integrate1dResult"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrateResult.test_result_2d": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "Integrate2dResult"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrateResult.test_result_2d_sum": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "Integrate2dResult"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.TestIntegrateResult.test_result_2d_with_sigma": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "Integrate2dResult"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.__author__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate.__contact__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate.__copyright__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate.__date__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate.__license__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate.logger": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate.numpy.testing": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate.resulttempfile": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate.contextlib",
    "pyFAI.test.test_integrate.os",
    "pyFAI.test.test_integrate.tempfile"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.runner": {
  "data": {
   "lineno": 314
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate.suite": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_integrate.TestIntegrate1D",
    "pyFAI.test.test_integrate.TestIntegrate2D",
    "pyFAI.test.test_integrate.TestIntegrateResult",
    "pyFAI.test.test_integrate.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_app": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_integrate_app.runner",
    "pyFAI.test.test_integrate_app.suite",
    "pyFAI.test.test_integrate_app.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_integrate_app.TestIntegrateApp": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate_app.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_integrate_app.TestIntegrateApp.Options": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_integrate_app.TestIntegrateApp.Options.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_app.TestIntegrateApp.datatempfile": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate_app.contextlib",
    "pyFAI.test.test_integrate_app.fabio",
    "pyFAI.test.test_integrate_app.os",
    "pyFAI.test.test_integrate_app.tempfile"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_app.TestIntegrateApp.jsontempfile": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "open",
    "pyFAI.test.test_integrate_app.contextlib",
    "pyFAI.test.test_integrate_app.json",
    "pyFAI.test.test_integrate_app.os",
    "pyFAI.test.test_integrate_app.tempfile"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_app.TestIntegrateApp.resulttempfile": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate_app.contextlib",
    "pyFAI.test.test_integrate_app.os",
    "pyFAI.test.test_integrate_app.tempfile"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_app.TestIntegrateApp.test_integrate_counter_monitor": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate_app.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_app.TestIntegrateApp.test_integrate_default_output_azim": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate_app.numpy",
    "pyFAI.test.test_integrate_app.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_app.TestIntegrateApp.test_integrate_default_output_dat": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate_app.numpy",
    "pyFAI.test.test_integrate_app.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_app.TestIntegrateApp.test_integrate_file_output_dat": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate_app.numpy",
    "pyFAI.test.test_integrate_app.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_app.TestIntegrateApp.test_integrate_monitor": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate_app.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_app.TestIntegrateApp.test_integrate_no_monitor": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate_app.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_app.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_app.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_app.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_app.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_app.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_app.pyFAI.app.integrate": {
  "data": {
   "shadows": "pyFAI.app.integrate"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_app.runner": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate_app.suite": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_integrate_app.TestIntegrateApp",
    "pyFAI.test.test_integrate_app.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_app.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_app.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_widget": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.test.test_integrate_widget.logging",
    "pyFAI.test.test_integrate_widget.qt",
    "pyFAI.test.test_integrate_widget.runner",
    "pyFAI.test.test_integrate_widget.suite",
    "pyFAI.test.test_integrate_widget.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_integrate_widget.AIWidgetMocked": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "pyFAI.test.test_integrate_widget.AIWidgetMocked.__init__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_widget.TestAIWidget": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate_widget.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_integrate_widget.TestAIWidget.setUp": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pyFAI.test.test_integrate_widget.qt"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_widget.TestAIWidget.setUpClass": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "classmethod",
    "pyFAI.test.test_integrate_widget.logger",
    "pyFAI.test.test_integrate_widget.os",
    "pyFAI.test.test_integrate_widget.qt",
    "pyFAI.test.test_integrate_widget.sys"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_widget.TestAIWidget.tearDownClass": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_widget.TestAIWidget.test_process_array_1d": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "AIWidget",
    "pyFAI.test.test_integrate_widget.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_widget.TestAIWidget.test_process_array_2d": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "AIWidget",
    "len",
    "pyFAI.test.test_integrate_widget.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_widget.TestAIWidget.test_process_no_data": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "AIWidget"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_widget.TestAIWidget.test_process_numpy_1d": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "AIWidget",
    "pyFAI.test.test_integrate_widget.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_widget.TestAIWidget.test_process_numpy_2d": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "AIWidget",
    "pyFAI.test.test_integrate_widget.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_widget.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate_widget.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate_widget.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate_widget.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate_widget.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate_widget.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_widget.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_widget.logger": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate_widget.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_widget.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_widget.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_widget.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_widget.qt": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate_widget.runner": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "pyFAI.test.test_integrate_widget.suite": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_integrate_widget.TestAIWidget",
    "pyFAI.test.test_integrate_widget.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_integrate_widget.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.test.test_integrate_widget.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_io": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_io.logging",
    "pyFAI.test.test_io.runner",
    "pyFAI.test.test_io.suite",
    "pyFAI.test.test_io.sys",
    "pyFAI.test.test_io.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_io.TestIsoTime": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyFAI.test.test_io.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_io.TestIsoTime.test_from": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "abs",
    "pyFAI.io.from_isotime",
    "pyFAI.io.get_isotime",
    "pyFAI.test.test_io.time"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_io.TestIsoTime.test_get": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len",
    "pyFAI.io.get_isotime"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_io.TestNexus": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyFAI.test.test_io.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_io.TestNexus.setUp": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyFAI.test.test_io.os",
    "pyFAI.test.test_io.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_io.TestNexus.tearDown": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pyFAI.test.test_io.shutil",
    "pyFAI.test.test_io.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_io.TestNexus.test_new_detector": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyFAI.io.Nexus",
    "pyFAI.io.h5py",
    "pyFAI.io.is_hdf5",
    "pyFAI.test.test_io.logger",
    "pyFAI.test.test_io.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_io.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_io.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_io.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_io.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_io.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_io.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_io.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_io.io": {
  "data": {
   "shadows": "pyFAI.io"
  },
  "type": "import"
 },
 "pyFAI.test.test_io.logger": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyFAI.test.test_io.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_io.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.test_io.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_io.pyFAI": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyFAI.test.test_io.runner": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "pyFAI.test.test_io.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyFAI.test.test_io.suite": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_io.TestIsoTime",
    "pyFAI.test.test_io.TestNexus",
    "pyFAI.test.test_io.testHDF5Writer",
    "pyFAI.test.test_io.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_io.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.test.test_io.testFabIOWriter": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pyFAI.test.test_io.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_io.testFabIOWriter.setUp": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyFAI.test.test_io.os",
    "pyFAI.test.test_io.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_io.testFabIOWriter.tearDown": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "pyFAI.test.test_io.shutil",
    "pyFAI.test.test_io.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_io.testFabIOWriter.test_writer": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "pyFAI.io.FabioWriter",
    "pyFAI.test.test_io.logger",
    "pyFAI.test.test_io.numpy",
    "pyFAI.test.test_io.os",
    "pyFAI.test.test_io.time",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_io.testHDF5Writer": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pyFAI.test.test_io.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_io.testHDF5Writer.setUp": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyFAI.test.test_io.os",
    "pyFAI.test.test_io.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_io.testHDF5Writer.tearDown": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pyFAI.test.test_io.shutil",
    "pyFAI.test.test_io.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_io.testHDF5Writer.test_writer": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pyFAI.io.HDF5Writer",
    "pyFAI.io.h5py",
    "pyFAI.test.test_io.logger",
    "pyFAI.test.test_io.numpy",
    "pyFAI.test.test_io.os",
    "pyFAI.test.test_io.time",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_io.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.test.test_io.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_marchingsquares": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_marchingsquares.logger",
    "pyFAI.test.test_marchingsquares.logging",
    "pyFAI.test.test_marchingsquares.runner",
    "pyFAI.test.test_marchingsquares.suite",
    "pyFAI.test.test_marchingsquares.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_marchingsquares.TestMarchingSquares": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pyFAI.test.test_marchingsquares.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_marchingsquares.TestMarchingSquares.test_isocontour": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "abs",
    "isocontour",
    "len",
    "pyFAI.test.test_marchingsquares.logger",
    "pyFAI.test.test_marchingsquares.logging",
    "pyFAI.test.test_marchingsquares.numpy",
    "pyFAI.test.test_marchingsquares.pylab"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_marchingsquares.__author__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.test.test_marchingsquares.__contact__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_marchingsquares.__copyright__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_marchingsquares.__date__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_marchingsquares.__license__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_marchingsquares.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_marchingsquares.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_marchingsquares.logger": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.test.test_marchingsquares.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_marchingsquares.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_marchingsquares.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_marchingsquares.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "pyFAI.test.test_marchingsquares.runner": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "pyFAI.test.test_marchingsquares.suite": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_marchingsquares.TestMarchingSquares",
    "pyFAI.test.test_marchingsquares.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_marchingsquares.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_mask": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_mask.logger",
    "pyFAI.test.test_mask.logging",
    "pyFAI.test.test_mask.runner",
    "pyFAI.test.test_mask.suite",
    "pyFAI.test.test_mask.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_mask.TestMask": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyFAI.test.test_mask.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_mask.TestMask.setUp": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "load",
    "pyFAI.test.test_mask.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMask.tearDown": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyFAI.test.test_mask.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMask.test_mask_CSR": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pyFAI.test.test_mask.logger",
    "pyFAI.test.test_mask.logging",
    "pyFAI.test.test_mask.numpy",
    "pyFAI.test.test_mask.pylab"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMask.test_mask_CSR_OCL": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pyFAI.test.test_mask.logger",
    "pyFAI.test.test_mask.logging",
    "pyFAI.test.test_mask.numpy",
    "pyFAI.test.test_mask.pylab",
    "pyFAI.test.test_mask.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMask.test_mask_LUT": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pyFAI.test.test_mask.logger",
    "pyFAI.test.test_mask.logging",
    "pyFAI.test.test_mask.numpy",
    "pyFAI.test.test_mask.pylab"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMask.test_mask_LUT_OCL": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "pyFAI.test.test_mask.logger",
    "pyFAI.test.test_mask.logging",
    "pyFAI.test.test_mask.numpy",
    "pyFAI.test.test_mask.pylab",
    "pyFAI.test.test_mask.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMask.test_mask_hist": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyFAI.test.test_mask.logger",
    "pyFAI.test.test_mask.logging",
    "pyFAI.test.test_mask.numpy",
    "pyFAI.test.test_mask.pylab"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMask.test_mask_splitBBox": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "pyFAI.test.test_mask.logger",
    "pyFAI.test.test_mask.logging",
    "pyFAI.test.test_mask.numpy",
    "pyFAI.test.test_mask.pylab"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMask.test_mask_splitfull": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pyFAI.test.test_mask.logger",
    "pyFAI.test.test_mask.logging",
    "pyFAI.test.test_mask.numpy",
    "pyFAI.test.test_mask.pylab"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMaskBeamstop": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "pyFAI.test.test_mask.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_mask.TestMaskBeamstop.setUp": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "pyFAI.test.test_mask.fabio",
    "pyFAI.test.test_mask.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMaskBeamstop.test_mask_LUT": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMaskBeamstop.test_mask_LUT_OCL": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "pyFAI.test.test_mask.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMaskBeamstop.test_mask_splitBBox": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMaskBeamstop.test_nomask": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "pyFAI.test.test_mask.logger",
    "pyFAI.test.test_mask.logging",
    "pyFAI.test.test_mask.pylab"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMaskBeamstop.test_nomask_LUT": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.TestMaskBeamstop.test_nomask_LUT_OCL": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "pyFAI.test.test_mask.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_mask.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_mask.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_mask.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_mask.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_mask.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_mask.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_mask.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.test.test_mask.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.test.test_mask.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_mask.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_mask.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_mask.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "pyFAI.test.test_mask.runner": {
  "data": {
   "lineno": 331
  },
  "type": "constant"
 },
 "pyFAI.test.test_mask.suite": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_mask.TestMask",
    "pyFAI.test.test_mask.TestMaskBeamstop",
    "pyFAI.test.test_mask.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_mask.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_multi_geometry": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_multi_geometry.logging",
    "pyFAI.test.test_multi_geometry.runner",
    "pyFAI.test.test_multi_geometry.suite",
    "pyFAI.test.test_multi_geometry.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_multi_geometry.TestMultiGeometry": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyFAI.test.test_multi_geometry.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_multi_geometry.TestMultiGeometry.setUp": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "dir",
    "pyFAI.test.test_multi_geometry.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_multi_geometry.TestMultiGeometry.setUpClass": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "Detector",
    "MultiGeometry",
    "classmethod",
    "pyFAI.test.test_multi_geometry.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_multi_geometry.TestMultiGeometry.tearDown": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "pyFAI.test.test_multi_geometry.TestMultiGeometry.tearDownClass": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_multi_geometry.TestMultiGeometry.test_integrate1d": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_multi_geometry.TestMultiGeometry.test_integrate1d_withpol": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_multi_geometry.TestMultiGeometry.test_integrate2d": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_multi_geometry.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_multi_geometry.__author__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_multi_geometry.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_multi_geometry.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_multi_geometry.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.test.test_multi_geometry.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_multi_geometry.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_multi_geometry.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_multi_geometry.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.test.test_multi_geometry.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.test.test_multi_geometry.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_multi_geometry.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_multi_geometry.runner": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "pyFAI.test.test_multi_geometry.suite": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_multi_geometry.TestMultiGeometry",
    "pyFAI.test.test_multi_geometry.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_multi_geometry.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_multi_geometry.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.test.test_ocl_sort": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_ocl_sort.logging",
    "pyFAI.test.test_ocl_sort.numpy",
    "pyFAI.test.test_ocl_sort.runner",
    "pyFAI.test.test_ocl_sort.suite",
    "pyFAI.test.test_ocl_sort.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_ocl_sort.TestOclSort": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pyFAI.test.test_ocl_sort.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_ocl_sort.TestOclSort.setUp": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pyFAI.test.test_ocl_sort.numpy",
    "pyFAI.test.test_ocl_sort.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_ocl_sort.TestOclSort.tearDown": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pyFAI.test.test_ocl_sort.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_ocl_sort.TestOclSort.test_filter_hor": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pyFAI.test.test_ocl_sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_ocl_sort.TestOclSort.test_filter_vert": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pyFAI.test.test_ocl_sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_ocl_sort.TestOclSort.test_mean_hor": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "pyFAI.test.test_ocl_sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_ocl_sort.TestOclSort.test_mean_vert": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pyFAI.test.test_ocl_sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_ocl_sort.TestOclSort.test_sigma_clip_hor": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "pyFAI.test.test_ocl_sort.numpy",
    "pyFAI.test.test_ocl_sort.sigma_clip"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_ocl_sort.TestOclSort.test_sigma_clip_vert": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "pyFAI.test.test_ocl_sort.numpy",
    "pyFAI.test.test_ocl_sort.sigma_clip"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_ocl_sort.TestOclSort.test_sort_hor": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pyFAI.test.test_ocl_sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_ocl_sort.TestOclSort.test_sort_vert": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pyFAI.test.test_ocl_sort.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_ocl_sort.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_ocl_sort.__copyright__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_ocl_sort.__date__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.test.test_ocl_sort.__license__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.test.test_ocl_sort.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_ocl_sort.as_strided": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyFAI.test.test_ocl_sort.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_ocl_sort.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.test.test_ocl_sort.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_ocl_sort.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_ocl_sort.ocl_sort": {
  "data": {
   "shadows": "sort"
  },
  "type": "import"
 },
 "pyFAI.test.test_ocl_sort.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_ocl_sort.runner": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "pyFAI.test.test_ocl_sort.sigma_clip": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pyFAI.test.test_ocl_sort.as_strided",
    "pyFAI.test.test_ocl_sort.numpy",
    "pyFAI.test.test_ocl_sort.warnings",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_ocl_sort.suite": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_ocl_sort.TestOclSort",
    "pyFAI.test.test_ocl_sort.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_ocl_sort.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_ocl_sort.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyFAI.test.test_openCL": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.test.test_openCL.logger",
    "pyFAI.test.test_openCL.logging",
    "pyFAI.test.test_openCL.runner",
    "pyFAI.test.test_openCL.suite",
    "pyFAI.test.test_openCL.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_openCL.TestMask": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pyFAI.test.test_openCL.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_openCL.TestMask.setUp": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "open",
    "pyFAI.test.test_openCL.os",
    "pyFAI.test.test_openCL.pyopencl"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_openCL.TestMask.tearDown": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pyFAI.test.test_openCL.shutil"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_openCL.TestMask.test_OpenCL": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "load",
    "pyFAI.test.test_openCL.fabio",
    "pyFAI.test.test_openCL.gc",
    "pyFAI.test.test_openCL.logger",
    "pyFAI.test.test_openCL.unittest",
    "pyFAI.utils.decorators.depreclog"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_openCL.TestMask.test_OpenCL_CSR": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "MemoryError",
    "RuntimeError",
    "load",
    "pyFAI.test.test_openCL.fabio",
    "pyFAI.test.test_openCL.gc",
    "pyFAI.test.test_openCL.logger",
    "pyFAI.test.test_openCL.os",
    "pyFAI.test.test_openCL.pyopencl",
    "pyFAI.test.test_openCL.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_openCL.TestMask.test_OpenCL_LUT": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "MemoryError",
    "RuntimeError",
    "load",
    "pyFAI.test.test_openCL.fabio",
    "pyFAI.test.test_openCL.gc",
    "pyFAI.test.test_openCL.logger",
    "pyFAI.test.test_openCL.os",
    "pyFAI.test.test_openCL.pyopencl",
    "pyFAI.test.test_openCL.unittest",
    "pyFAI.utils.decorators.depreclog"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_openCL.TestSort": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "pyFAI.test.test_openCL.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_openCL.TestSort.setUp": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ValueError",
    "min",
    "pyFAI.test.test_openCL.logger",
    "pyFAI.test.test_openCL.numpy",
    "pyFAI.test.test_openCL.pyopencl",
    "read_cl_file"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_openCL.TestSort.tearDown": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "pyFAI.test.test_openCL.TestSort.test_reference_book": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_openCL.logger",
    "pyFAI.test.test_openCL.numpy",
    "pyFAI.test.test_openCL.platform",
    "pyFAI.test.test_openCL.pyopencl",
    "pyFAI.test.test_openCL.time"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_openCL.TestSort.test_reference_file": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_openCL.logger",
    "pyFAI.test.test_openCL.numpy",
    "pyFAI.test.test_openCL.pyopencl",
    "pyFAI.test.test_openCL.time"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_openCL.TestSort.test_sort_all": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_openCL.logger",
    "pyFAI.test.test_openCL.numpy",
    "pyFAI.test.test_openCL.pyopencl",
    "pyFAI.test.test_openCL.time"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_openCL.TestSort.test_sort_horizontal": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_openCL.logger",
    "pyFAI.test.test_openCL.numpy",
    "pyFAI.test.test_openCL.pyopencl",
    "pyFAI.test.test_openCL.time"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_openCL.TestSort.test_sort_vertical": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_openCL.logger",
    "pyFAI.test.test_openCL.numpy",
    "pyFAI.test.test_openCL.pyopencl",
    "pyFAI.test.test_openCL.time"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_openCL.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_openCL.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_openCL.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_openCL.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_openCL.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_openCL.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_openCL.depreclog": {
  "data": {
   "shadows": "pyFAI.utils.decorators.depreclog"
  },
  "type": "import"
 },
 "pyFAI.test.test_openCL.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_openCL.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.test.test_openCL.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyFAI.test.test_openCL.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyFAI.test.test_openCL.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_openCL.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_openCL.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.test_openCL.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "pyFAI.test.test_openCL.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_openCL.pyopencl": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pyFAI.test.test_openCL.pyopencl.array": {
  "data": {
   "shadows": "pyopencl.array"
  },
  "type": "import"
 },
 "pyFAI.test.test_openCL.runner": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "pyFAI.test.test_openCL.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyFAI.test.test_openCL.suite": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_openCL.TestMask",
    "pyFAI.test.test_openCL.TestSort",
    "pyFAI.test.test_openCL.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_openCL.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.test.test_openCL.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_peak_picking": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_peak_picking.logging",
    "pyFAI.test.test_peak_picking.runner",
    "pyFAI.test.test_peak_picking.suite",
    "pyFAI.test.test_peak_picking.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_peak_picking.TestMassif": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pyFAI.test.test_peak_picking.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_peak_picking.TestPeakPicking": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pyFAI.test.test_peak_picking.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_peak_picking.TestPeakPicking.setUp": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Calibrant",
    "PeakPicker",
    "pyFAI.test.test_peak_picking.numpy",
    "pyFAI.test.test_peak_picking.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_peak_picking.TestPeakPicking.tearDown": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyFAI.test.test_peak_picking.shutil"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_peak_picking.TestPeakPicking.test_peakPicking": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "GeometryRefinement",
    "len",
    "open",
    "pyFAI.test.test_peak_picking.logger",
    "pyFAI.test.test_peak_picking.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_peak_picking.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_peak_picking.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_peak_picking.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_peak_picking.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_peak_picking.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_peak_picking.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_peak_picking.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_peak_picking.logger": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.test.test_peak_picking.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_peak_picking.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_peak_picking.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.test_peak_picking.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_peak_picking.runner": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "pyFAI.test.test_peak_picking.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyFAI.test.test_peak_picking.suite": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_peak_picking.TestMassif",
    "pyFAI.test.test_peak_picking.TestPeakPicking",
    "pyFAI.test.test_peak_picking.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_peak_picking.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.test.test_peak_picking.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_polarization": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_polarization.logging",
    "pyFAI.test.test_polarization.runner",
    "pyFAI.test.test_polarization.suite",
    "pyFAI.test.test_polarization.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_polarization.TestPolarization": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pyFAI.test.test_polarization.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_polarization.TestPolarization.setUp": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "pyFAI.test.test_polarization.numpy",
    "pyFAI.test.test_polarization.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_polarization.TestPolarization.tearDown": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pyFAI.test.test_polarization.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_polarization.TestPolarization.testCircularPol": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_polarization.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_polarization.TestPolarization.testHorizPol": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_polarization.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_polarization.TestPolarization.testNoPol": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_polarization.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_polarization.TestPolarization.testVertPol": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_polarization.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_polarization.TestPolarization.testoffsetPol": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_polarization.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_polarization.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_polarization.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_polarization.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_polarization.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_polarization.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_polarization.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_polarization.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_polarization.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.test.test_polarization.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_polarization.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_polarization.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_polarization.runner": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "pyFAI.test.test_polarization.suite": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_polarization.TestPolarization",
    "pyFAI.test.test_polarization.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_polarization.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_preproc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_preproc.logging",
    "pyFAI.test.test_preproc.runner",
    "pyFAI.test.test_preproc.suite",
    "pyFAI.test.test_preproc.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_preproc.TestPreproc": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyFAI.test.test_preproc.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_preproc.TestPreproc.one_test": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_preproc.logger",
    "pyFAI.test.test_preproc.numpy",
    "pyFAI.test.test_preproc.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_preproc.TestPreproc.test_cython": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyFAI.test.test_preproc.TestPreproc.test_opencl": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pyFAI.test.test_preproc.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_preproc.TestPreproc.test_python": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pyFAI.test.test_preproc.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_preproc.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_preproc.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_preproc.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_preproc.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_preproc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_preproc.cython_preproc": {
  "data": {
   "shadows": "preproc"
  },
  "type": "import"
 },
 "pyFAI.test.test_preproc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_preproc.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.test.test_preproc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_preproc.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_preproc.ocl_preproc": {
  "data": {
   "shadows": "preproc"
  },
  "type": "import"
 },
 "pyFAI.test.test_preproc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.test_preproc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_preproc.python_preproc": {
  "data": {
   "shadows": "preproc"
  },
  "type": "import"
 },
 "pyFAI.test.test_preproc.runner": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "pyFAI.test.test_preproc.suite": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_preproc.TestPreproc",
    "pyFAI.test.test_preproc.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_preproc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_saxs": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_saxs.logger",
    "pyFAI.test.test_saxs.logging",
    "pyFAI.test.test_saxs.pylab",
    "pyFAI.test.test_saxs.runner",
    "pyFAI.test.test_saxs.suite",
    "pyFAI.test.test_saxs.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_saxs.TestSaxs": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyFAI.test.test_saxs.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_saxs.TestSaxs.setUp": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "Pilatus1M",
    "pyFAI.test.test_saxs.fabio",
    "pyFAI.test.test_saxs.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_saxs.TestSaxs.tearDown": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pyFAI.test.test_saxs.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_saxs.TestSaxs.testCython": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pyFAI.test.test_saxs.logger",
    "pyFAI.test.test_saxs.logging",
    "pyFAI.test.test_saxs.pylab",
    "pyFAI.test.test_saxs.unittest",
    "pyFAI.utils.decorators.depreclog"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_saxs.TestSaxs.testMask": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "pyFAI.test.test_saxs.TestSaxs.testNumpy": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pyFAI.test.test_saxs.logger",
    "pyFAI.test.test_saxs.logging",
    "pyFAI.test.test_saxs.pylab",
    "pyFAI.test.test_saxs.unittest",
    "pyFAI.utils.decorators.depreclog"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_saxs.TestSaxs.testSplitBBox": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pyFAI.test.test_saxs.logger",
    "pyFAI.test.test_saxs.logging",
    "pyFAI.test.test_saxs.pylab",
    "pyFAI.utils.decorators.depreclog"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_saxs.TestSaxs.testSplitPixel": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pyFAI.test.test_saxs.logger",
    "pyFAI.test.test_saxs.logging",
    "pyFAI.test.test_saxs.pylab",
    "pyFAI.utils.decorators.depreclog"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_saxs.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_saxs.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_saxs.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_saxs.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_saxs.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_saxs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_saxs.depreclog": {
  "data": {
   "shadows": "pyFAI.utils.decorators.depreclog"
  },
  "type": "import"
 },
 "pyFAI.test.test_saxs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_saxs.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.test.test_saxs.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.test.test_saxs.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_saxs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_saxs.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "pyFAI.test.test_saxs.runner": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "pyFAI.test.test_saxs.suite": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_saxs.TestSaxs",
    "pyFAI.test.test_saxs.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_saxs.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_scripts": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.test.test_scripts.logging",
    "pyFAI.test.test_scripts.runner",
    "pyFAI.test.test_scripts.suite",
    "pyFAI.test.test_scripts.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pyFAI.test.test_scripts.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.executeAppHelp": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pyFAI.test.test_scripts.sys",
    "pyFAI.test.utilstest.UtilsTest.get_test_env",
    "pyFAI.test.utilstest.UtilsTest.script_path"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.executeCommandLine": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "UnicodeError",
    "pyFAI.test.test_scripts._logger",
    "pyFAI.test.test_scripts.subprocess"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.testCheckCalib": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pyFAI.test.test_scripts.qt"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.testDetector2Nexus": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.testDiffMap": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.testDiffTomo": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.testEigerMask": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.testMxcalibrate": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pyFAI.test.test_scripts.qt"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.testPyfaiAverage": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.testPyfaiBenchmark": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.testPyfaiCalib": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pyFAI.test.test_scripts.qt"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.testPyfaiDrawmask": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "pyFAI.test.test_scripts.qt",
    "pyFAI.test.test_scripts.silx"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.testPyfaiIntegrate": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.testPyfaiRecalib": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pyFAI.test.test_scripts.qt"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.testPyfaiSaxs": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.TestScriptsHelp.testPyfaiWaxs": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.UtilsTest": {
  "data": {
   "shadows": "pyFAI.test.utilstest.UtilsTest"
  },
  "type": "import"
 },
 "pyFAI.test.test_scripts.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_scripts.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_scripts.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_scripts.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_scripts.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_scripts._logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.test.test_scripts.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_scripts.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_scripts.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_scripts.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_scripts.qt": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyFAI.test.test_scripts.runner": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "pyFAI.test.test_scripts.silx": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pyFAI.test.test_scripts.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyFAI.test.test_scripts.suite": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_scripts.TestScriptsHelp",
    "pyFAI.test.test_scripts.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_scripts.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.test.test_scripts.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_sparse": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_sparse.logging",
    "pyFAI.test.test_sparse.runner",
    "pyFAI.test.test_sparse.suite",
    "pyFAI.test.test_sparse.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_sparse.TestContainer": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pyFAI.test.test_sparse.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_sparse.TestContainer.test_container": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_sparse.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_sparse.TestContainer.test_vector": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_sparse.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_sparse.TestSparseBBox": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pyFAI.test.test_sparse.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_sparse.TestSparseBBox.setUp": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "load",
    "pyFAI.test.test_sparse.fabio",
    "pyFAI.test.test_sparse.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_sparse.TestSparseBBox.tearDown": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pyFAI.test.test_sparse.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_sparse.TestSparseBBox.test_CSR": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_sparse.logger",
    "pyFAI.test.test_sparse.numpy",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_sparse.TestSparseBBox.test_LUT": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_sparse.logger",
    "pyFAI.test.test_sparse.numpy",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_sparse.TestSparseUtils": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyFAI.test.test_sparse.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_sparse.TestSparseUtils.test_conversion": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "pyFAI.test.test_sparse.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_sparse.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_sparse.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_sparse.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_sparse.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_sparse.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_sparse.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_sparse.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_sparse.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.test.test_sparse.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.test.test_sparse.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_sparse.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_sparse.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_sparse.runner": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "pyFAI.test.test_sparse.suite": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_sparse.TestContainer",
    "pyFAI.test.test_sparse.TestSparseBBox",
    "pyFAI.test.test_sparse.TestSparseUtils",
    "pyFAI.test.test_sparse.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_sparse.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_spline": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_spline.logging",
    "pyFAI.test.test_spline.runner",
    "pyFAI.test.test_spline.suite",
    "pyFAI.test.test_spline.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_spline.TestSpline": {
  "data": {
   "lineno": 48
  },
  "type": "class"
 },
 "pyFAI.test.test_spline.TestSpline.test_tilt_coverage": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "print",
    "pyFAI.test.test_spline.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_spline.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_spline.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_spline.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_spline.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_spline.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_spline.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_spline.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_spline.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyFAI.test.test_spline.logger": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.test.test_spline.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_spline.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_spline.pyFAI.spline": {
  "data": {
   "shadows": "pyFAI.spline"
  },
  "type": "import"
 },
 "pyFAI.test.test_spline.runner": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "pyFAI.test.test_spline.suite": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_spline.TestSpline",
    "pyFAI.test.test_spline.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_spline.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_split_pixel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_split_pixel.logging",
    "pyFAI.test.test_split_pixel.runner",
    "pyFAI.test.test_split_pixel.suite",
    "pyFAI.test.test_split_pixel.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_split_pixel.TestSplitPixel": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyFAI.test.test_split_pixel.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_split_pixel.TestSplitPixel.setUp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "Detector",
    "enumerate",
    "pyFAI.test.test_split_pixel.numpy",
    "pyFAI.test.test_split_pixel.unittest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_split_pixel.TestSplitPixel.tearDown": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pyFAI.test.test_split_pixel.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_split_pixel.TestSplitPixel.test_no_split": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "pyFAI.test.test_split_pixel.TestSplitPixel.test_split_bbox": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "pyFAI.test.test_split_pixel.TestSplitPixel.test_split_full": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "pyFAI.test.test_split_pixel.__author__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_split_pixel.__contact__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_split_pixel.__copyright__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.test.test_split_pixel.__date__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.test.test_split_pixel.__license__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.test.test_split_pixel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_split_pixel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_split_pixel.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyFAI.test.test_split_pixel.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_split_pixel.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_split_pixel.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_split_pixel.runner": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "pyFAI.test.test_split_pixel.suite": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_split_pixel.TestSplitPixel",
    "pyFAI.test.test_split_pixel.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_split_pixel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_utils.logging",
    "pyFAI.test.test_utils.runner",
    "pyFAI.test.test_utils.suite",
    "pyFAI.test.test_utils.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_utils.TestUtils": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pyFAI.test.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_utils.TestUtils.test_hexversion": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pyFAI.test.test_utils.TestUtils.test_set": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_utils.__author__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils.runner": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils.suite": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_utils.TestUtils",
    "pyFAI.test.test_utils.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_mathutil": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_utils_mathutil.logging",
    "pyFAI.test.test_utils_mathutil.runner",
    "pyFAI.test.test_utils_mathutil.suite",
    "pyFAI.test.test_utils_mathutil.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_utils_mathutil.TestMathUtil": {
  "data": {
   "lineno": 82
  },
  "type": "class"
 },
 "pyFAI.test.test_utils_mathutil.TestMathUtil.setUp": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyFAI.test.test_utils_mathutil.numpy",
    "pyFAI.test.test_utils_mathutil.os",
    "pyFAI.test.test_utils_mathutil.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_mathutil.TestMathUtil.tearDown": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pyFAI.test.test_utils_mathutil.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_mathutil.TestMathUtil.test_binning": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_mathutil.TestMathUtil.test_expand2d": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "pyFAI.test.test_utils_mathutil.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_mathutil.TestMathUtil.test_gaussian_filter": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_utils_mathutil.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_mathutil.TestMathUtil.test_round_fft": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pyFAI.test.test_utils_mathutil._ROUND_FFT_VALUES"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_mathutil.TestMathUtil.test_shift": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "abs",
    "pyFAI.test.test_utils_mathutil.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_mathutil._ROUND_FFT_VALUES": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_mathutil.__author__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_mathutil.__contact__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_mathutil.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_mathutil.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_mathutil.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_mathutil.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_mathutil.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_mathutil.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_mathutil.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_mathutil.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_mathutil.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_mathutil.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_mathutil.runner": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_mathutil.scipy.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_mathutil.suite": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_utils_mathutil.TestMathUtil",
    "pyFAI.test.test_utils_mathutil.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_mathutil.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_shell": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_utils_shell.logging",
    "pyFAI.test.test_utils_shell.runner",
    "pyFAI.test.test_utils_shell.suite",
    "pyFAI.test.test_utils_shell.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_utils_shell.TestUtilShell": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pyFAI.test.test_utils_shell.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_utils_shell.TestUtilShell.test_coverage": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ProgressBar"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_shell.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_shell.__copyright__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_shell.__date__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_shell.__docformat__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_shell.__license__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_shell.__status__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_shell.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_shell.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_shell.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_shell.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_shell.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_shell.runner": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_shell.suite": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_utils_shell.TestUtilShell",
    "pyFAI.test.test_utils_shell.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_shell.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_stringutil": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_utils_stringutil.logging",
    "pyFAI.test.test_utils_stringutil.runner",
    "pyFAI.test.test_utils_stringutil.suite",
    "pyFAI.test.test_utils_stringutil.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_utils_stringutil.TestUtilsString": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pyFAI.test.test_utils_stringutil.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_utils_stringutil.TestUtilsString.test_default_behaviour_dict": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_stringutil.TestUtilsString.test_default_behaviour_list": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_stringutil.TestUtilsString.test_default_behaviour_nothing": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_stringutil.TestUtilsString.test_default_behaviour_object": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyFAI.test.test_utils_stringutil.TestUtilsString"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_stringutil.TestUtilsString.test_missing_index": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_stringutil.TestUtilsString.test_missing_key": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_stringutil.TestUtilsString.test_missing_object": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_stringutil.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_stringutil.__copyright__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_stringutil.__date__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_stringutil.__docformat__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_stringutil.__license__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_stringutil.__status__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_stringutil.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_stringutil.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_stringutil.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_stringutil.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_stringutil.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_utils_stringutil.runner": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pyFAI.test.test_utils_stringutil.suite": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_utils_stringutil.TestUtilsString",
    "pyFAI.test.test_utils_stringutil.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_utils_stringutil.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_watershed": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_watershed.logging",
    "pyFAI.test.test_watershed.runner",
    "pyFAI.test.test_watershed.suite",
    "pyFAI.test.test_watershed.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_watershed.TestWatershed": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pyFAI.test.test_watershed.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_watershed.TestWatershed.setUp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pyFAI.test.test_watershed.fabio"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_watershed.TestWatershed.tearDown": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pyFAI.test.test_watershed.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_watershed.TestWatershed.test_init": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len",
    "print",
    "sys.getsizeof"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_watershed.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_watershed.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_watershed.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_watershed.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_watershed.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_watershed.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_watershed.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_watershed.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.test.test_watershed.getsizeof": {
  "data": {
   "shadows": "sys.getsizeof"
  },
  "type": "import"
 },
 "pyFAI.test.test_watershed.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.test.test_watershed.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_watershed.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_watershed.runner": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "pyFAI.test.test_watershed.suite": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_watershed.TestWatershed",
    "pyFAI.test.test_watershed.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_watershed.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.test_worker": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.test_worker.logging",
    "pyFAI.test.test_worker.runner",
    "pyFAI.test.test_worker.suite",
    "pyFAI.test.test_worker.unittest"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.test_worker.AzimuthalIntegratorMocked": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "pyFAI.test.test_worker.AzimuthalIntegratorMocked.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyFAI.test.test_worker.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.AzimuthalIntegratorMocked.integrate1d": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Exception",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.AzimuthalIntegratorMocked.integrate2d": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Exception",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.MockedAiWriter": {
  "data": {
   "lineno": 76
  },
  "type": "class"
 },
 "pyFAI.test.test_worker.MockedAiWriter.__init__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.MockedAiWriter.close": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.MockedAiWriter.write": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.TestWorker": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyFAI.test.test_worker.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.test_worker.TestWorker.test_1d_writer": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Integrate1dResult",
    "Worker",
    "pyFAI.test.test_worker.AzimuthalIntegratorMocked",
    "pyFAI.test.test_worker.MockedAiWriter",
    "pyFAI.test.test_worker.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.TestWorker.test_2d_writer": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "Integrate2dResult",
    "Worker",
    "pyFAI.test.test_worker.AzimuthalIntegratorMocked",
    "pyFAI.test.test_worker.MockedAiWriter",
    "pyFAI.test.test_worker.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.TestWorker.test_constructor": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "Worker"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.TestWorker.test_constructor_ai": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "Worker"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.TestWorker.test_process_1d": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Integrate1dResult",
    "Worker",
    "print",
    "pyFAI.test.test_worker.AzimuthalIntegratorMocked",
    "pyFAI.test.test_worker.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.TestWorker.test_process_2d": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "Integrate2dResult",
    "Worker",
    "pyFAI.test.test_worker.AzimuthalIntegratorMocked",
    "pyFAI.test.test_worker.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.TestWorker.test_process_exception": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "Exception",
    "Worker",
    "pyFAI.test.test_worker.AzimuthalIntegratorMocked",
    "pyFAI.test.test_worker.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.TestWorker.test_process_no_output": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "Integrate1dResult",
    "Worker",
    "pyFAI.test.test_worker.AzimuthalIntegratorMocked",
    "pyFAI.test.test_worker.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.TestWorker.test_process_poisson": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "Integrate1dResult",
    "Worker",
    "pyFAI.test.test_worker.AzimuthalIntegratorMocked",
    "pyFAI.test.test_worker.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.test.test_worker.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.test_worker.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.test.test_worker.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.test.test_worker.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.test_worker.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.test_worker.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.test_worker.logger": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyFAI.test.test_worker.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.test_worker.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.test.test_worker.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.test_worker.runner": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "pyFAI.test.test_worker.suite": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "loader",
    "pyFAI.test.test_worker.TestWorker",
    "pyFAI.test.test_worker.unittest"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.test_worker.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyFAI.test.utilstest.TestContext",
    "pyFAI.test.utilstest.logging",
    "pyFAI.test.utilstest.os",
    "pyFAI.test.utilstest.sys"
   ]
  },
  "type": "module"
 },
 "pyFAI.test.utilstest.ArgumentParser": {
  "data": {
   "shadows": "pyFAI.third_party.argparse.ArgumentParser"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.DATA_KEY": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.test.utilstest.ExternalResources": {
  "data": {
   "shadows": "silx.resources.ExternalResources"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.PACKAGE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.test.utilstest.ParametricTestCase": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "pyFAI.test.utilstest.unittest"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.utilstest.ParametricTestCase.shortDescription": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "pyFAI.test.utilstest.ParametricTestCase",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.ParametricTestCase.subTest": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "pyFAI.test.utilstest.contextlib"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.TEST_HOME": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pyFAI.test.utilstest.TestContext": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.utilstest.TestContext.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bool",
    "pyFAI.test.utilstest.DATA_KEY",
    "pyFAI.test.utilstest.PACKAGE",
    "pyFAI.test.utilstest.os",
    "pyFAI.test.utilstest.threading",
    "silx.resources.ExternalResources"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.TestContext._initialize_tmpdir": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pyFAI.test.utilstest.getpass",
    "pyFAI.test.utilstest.tempfile"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.TestContext.clean_up": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pyFAI.test.utilstest.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.TestContext.deep_reload": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "__import__",
    "pyFAI.test.utilstest.logger",
    "pyFAI.test.utilstest.logging",
    "pyFAI.test.utilstest.sys"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.TestContext.forceBuild": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.TestContext.get_installed_script_path": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "print",
    "pyFAI.test.utilstest.logger",
    "pyFAI.test.utilstest.os",
    "pyFAI.test.utilstest.sys"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.TestContext.get_options": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pyFAI.third_party.argparse.ArgumentParser",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.TestContext.get_test_env": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "dict",
    "pyFAI.test.utilstest.os",
    "pyFAI.test.utilstest.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.TestContext.script_path": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "pyFAI.test.utilstest.importlib"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.TestContext.tempdir": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.TestLogging": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "pyFAI.test.utilstest.logging"
   ]
  },
  "type": "class"
 },
 "pyFAI.test.utilstest.TestLogging.__enter__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "pyFAI.test.utilstest.logging"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.TestLogging.__exit__": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "pyFAI.test.utilstest.logging"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.TestLogging.__init__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.test.utilstest.TestLogging",
    "pyFAI.test.utilstest.logger",
    "pyFAI.test.utilstest.logging",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.TestLogging.emit": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.UtilsTest": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "pyFAI.test.utilstest.__author__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyFAI.test.utilstest.__contact__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyFAI.test.utilstest.__copyright__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.test.utilstest.__date__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.test.utilstest.__license__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.test.utilstest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.copy": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dir",
    "pyFAI.test.utilstest.os",
    "pyFAI.test.utilstest.shutil"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.diff_crv": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.diff_img": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.logger": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pyFAI.test.utilstest.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.pyFAI.utils.decorators": {
  "data": {
   "shadows": "pyFAI.utils.decorators"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.test_logging": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.test_logging.decorator": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "pyFAI.test.utilstest.TestLogging",
    "pyFAI.test.utilstest.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.test_logging.decorator.wrapper": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "func",
    "pyFAI.test.utilstest.functools"
   ]
  },
  "type": "function"
 },
 "pyFAI.test.utilstest.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyFAI.test.utilstest.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.tests": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pyFAI.logging"
   ]
  },
  "type": "function"
 },
 "pyFAI.third_party": {
  "data": {},
  "type": "module"
 },
 "pyFAI.third_party.argparse": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pyFAI.third_party.argparse.__authors__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.third_party.argparse.__date__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.third_party.argparse.__license__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.third_party.argparse.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.third_party.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "pyFAI.third_party.setup.configuration"
   ]
  },
  "type": "module"
 },
 "pyFAI.third_party.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "pyFAI.third_party.setup.__authors__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyFAI.third_party.setup.__date__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyFAI.third_party.setup.__license__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyFAI.third_party.setup.configuration": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "pyFAI.third_party.setup.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.third_party.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.third_party.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "pyFAI.third_party.six": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pyFAI.third_party.six.__authors__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.third_party.six.__date__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.third_party.six.__license__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.third_party.six.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.tree": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "collections.namedtuple",
    "pyFAI.tree.logger",
    "pyFAI.tree.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.tree.DataSet": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.tree.DataSet.__init__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "pyFAI.tree.DataSet.__len__": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "pyFAI.tree.DataSet.as_tuple": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pyFAI.tree.DataSetNT"
   ]
  },
  "type": "function"
 },
 "pyFAI.tree.DataSet.is_hdf5": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "bool",
    "is_hdf5"
   ]
  },
  "type": "function"
 },
 "pyFAI.tree.DataSetNT": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyFAI.tree.ListDataSet": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "pyFAI.tree.ListDataSet.as_tree": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "len",
    "pyFAI.tree.TreeItem",
    "pyFAI.tree.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.tree.ListDataSet.commonroot": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "pyFAI.tree.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.tree.ListDataSet.empty": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "pyFAI.tree.TreeItem": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.tree.TreeItem.__init__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "pyFAI.tree.TreeItem.__repr__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "pyFAI.tree.TreeItem.add_child": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "pyFAI.tree.TreeItem.first": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "pyFAI.tree.TreeItem.get": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyFAI.tree.TreeItem.has_child": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "pyFAI.tree.TreeItem.last": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "pyFAI.tree.TreeItem.name": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "property",
    "pyFAI.tree.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.tree.TreeItem.next": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "IndexError",
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.tree.TreeItem.previous": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "pyFAI.tree.TreeItem.size": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyFAI.tree.TreeItem.sort": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pyFAI.tree.__author__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.tree.__contact__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.tree.__copyright__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.tree.__date__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.tree.__docformat__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.tree.__license__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.tree.__status__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.tree.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.tree.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.tree.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.tree.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.tree.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyFAI.tree.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.tree.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.units": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.pi",
    "pyFAI.units.ANGLE_UNITS",
    "pyFAI.units.AZIMUTHAL_UNITS",
    "pyFAI.units.LENGTH_UNITS",
    "pyFAI.units.RADIAL_UNITS",
    "pyFAI.units.Unit",
    "pyFAI.units.eq_2th",
    "pyFAI.units.eq_q",
    "pyFAI.units.eq_r",
    "pyFAI.units.logging",
    "pyFAI.units.numpy",
    "pyFAI.units.register_radial_unit"
   ]
  },
  "type": "module"
 },
 "pyFAI.units.ANGLE_UNITS": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "pyFAI.units.AZIMUTHAL_UNITS": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "pyFAI.units.A_rad": {
  "data": {
   "lineno": 281
  },
  "type": "constant"
 },
 "pyFAI.units.CHI_DEG": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "pyFAI.units.CHI_RAD": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "pyFAI.units.CONST_q": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pyFAI.units.LENGTH_UNITS": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "pyFAI.units.Q_A": {
  "data": {
   "lineno": 274
  },
  "type": "constant"
 },
 "pyFAI.units.RADIAL_UNITS": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "pyFAI.units.R_M": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "pyFAI.units.RecD2_NM": {
  "data": {
   "lineno": 279
  },
  "type": "constant"
 },
 "pyFAI.units.TTH_RAD": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "pyFAI.units.Unit": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.units.Unit.__hash__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "pyFAI.units.Unit.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "pyFAI.units.Unit.__repr__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "pyFAI.units.Unit.get": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "pyFAI.units.__authors__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.units.__contact__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.units.__copyright__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyFAI.units.__date__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyFAI.units.__docformat__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyFAI.units.__license__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyFAI.units.__status__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.units.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.units.eq_2th": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pyFAI.units.eq_r",
    "pyFAI.units.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.units.eq_q": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pyFAI.units.eq_2th",
    "pyFAI.units.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.units.eq_r": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pyFAI.units.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.units.l_m": {
  "data": {
   "lineno": 280
  },
  "type": "constant"
 },
 "pyFAI.units.logger": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyFAI.units.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.units.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.units.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "pyFAI.units.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.units.register_radial_unit": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pyFAI.units.RADIAL_UNITS",
    "pyFAI.units.Unit"
   ]
  },
  "type": "function"
 },
 "pyFAI.units.scipy.constants": {
  "data": {
   "shadows": "scipy.constants"
  },
  "type": "import"
 },
 "pyFAI.units.to_unit": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "isinstance",
    "pyFAI.units.RADIAL_UNITS",
    "pyFAI.units.Unit",
    "pyFAI.units.logger",
    "type"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "__name__",
    "calc_hexversion",
    "dir",
    "pyFAI.utils.fabio",
    "pyFAI.utils.logging",
    "pyFAI.utils.os",
    "pyFAI.utils.sys",
    "pyFAI.utils.threading",
    "tuple.__itemsize__"
   ]
  },
  "type": "module"
 },
 "pyFAI.utils.FixedParameters": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "class"
 },
 "pyFAI.utils.FixedParameters.add_or_discard": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "pyFAI.utils.StringTypes": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "pyFAI.utils.WindowsError": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pyFAI.utils.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.utils.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.utils.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.utils.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.utils.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.utils.__status__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.utils._get_data_path": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "pyFAI.utils.data_dir",
    "pyFAI.utils.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.bayes": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.utils.bayes.BayesianBackground"
   ]
  },
  "type": "module"
 },
 "pyFAI.utils.bayes.BayesianBackground": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.utils.bayes.BayesianBackground.__call__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "pyFAI.utils.bayes.numpy",
    "scipy.interpolate.UnivariateSpline",
    "scipy.optimize.fmin_powell"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.bayes.BayesianBackground.__init__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "pyFAI.utils.bayes.BayesianBackground.background_image": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "print",
    "pyFAI.utils.bayes.numpy",
    "scipy.interpolate.RectBivariateSpline",
    "scipy.optimize.fmin_powell",
    "spline"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.bayes.BayesianBackground.bayes_llk": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "classmethod",
    "pyFAI.utils.bayes.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.bayes.BayesianBackground.bayes_llk_large": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "abs",
    "classmethod",
    "pyFAI.utils.bayes.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.bayes.BayesianBackground.bayes_llk_negative": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.bayes.BayesianBackground.bayes_llk_small": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.bayes.BayesianBackground.classinit": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "classmethod",
    "pyFAI.utils.bayes.numpy",
    "scipy.interpolate.UnivariateSpline"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.bayes.BayesianBackground.func2d_min": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "classmethod",
    "scipy.interpolate.RectBivariateSpline",
    "spline"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.bayes.BayesianBackground.func_min": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "classmethod",
    "s",
    "scipy.interpolate.UnivariateSpline"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.bayes.BayesianBackground.test_bayes_llk": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "classmethod",
    "pyFAI.utils.bayes.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.bayes.RectBivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.RectBivariateSpline"
  },
  "type": "import"
 },
 "pyFAI.utils.bayes.UnivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.UnivariateSpline"
  },
  "type": "import"
 },
 "pyFAI.utils.bayes.__authors__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.utils.bayes.__copyright__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.utils.bayes.__date__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.utils.bayes.__docformat__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.utils.bayes.__license__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.utils.bayes.__status__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.utils.bayes.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.utils.bayes.background": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "pyFAI.utils.bayes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.utils.bayes.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.utils.bayes.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "pyFAI.utils.bayes.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.utils.calc_checksum": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "zlib.crc32"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.convert_CamelCase": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "pyFAI.utils.re"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.crc32": {
  "data": {
   "shadows": "zlib.crc32"
  },
  "type": "import"
 },
 "pyFAI.utils.data_dir": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pyFAI.utils.decorators": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.utils.decorators.logging",
    "set"
   ]
  },
  "type": "module"
 },
 "pyFAI.utils.decorators.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.utils.decorators.__contact__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.utils.decorators.__copyright__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.utils.decorators.__date__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.utils.decorators.__docformat__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.utils.decorators.__license__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.utils.decorators.__status__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.utils.decorators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.utils.decorators.deprecache": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyFAI.utils.decorators.deprecated": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "decorator",
    "func"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.decorators.deprecated.decorator": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pyFAI.utils.decorators.deprecated.decorator.wrapper": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "deprecated_warning",
    "func",
    "pyFAI.utils.decorators.functools",
    "pyFAI.utils.decorators.sys"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.decorators.deprecated_warning": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyFAI.utils.decorators.deprecache",
    "pyFAI.utils.decorators.depreclog",
    "pyFAI.utils.decorators.logging",
    "pyFAI.utils.decorators.traceback",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.decorators.depreclog": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyFAI.utils.decorators.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.utils.decorators.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pyFAI.utils.decorators.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.utils.decorators.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.utils.decorators.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.utils.decorators.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.utils.decorators.timeit": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "func.__doc__",
    "func.__name__"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.decorators.timeit.wrapper": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "func",
    "func.__name__",
    "func.func_name",
    "pyFAI.utils.decorators.sys",
    "pyFAI.utils.decorators.time",
    "pyFAI.utils.decorators.timelog"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.decorators.timelog": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyFAI.utils.decorators.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "pyFAI.utils.ellipse": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "pyFAI.utils.ellipse.Ellipse": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.utils.ellipse.__author__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.utils.ellipse.__contact__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.utils.ellipse.__copyright__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.utils.ellipse.__date__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyFAI.utils.ellipse.__docformat__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.utils.ellipse.__license__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.utils.ellipse.__status__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyFAI.utils.ellipse.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.utils.ellipse.fit_ellipse": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "max",
    "min",
    "pyFAI.utils.ellipse.Ellipse",
    "pyFAI.utils.ellipse.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.ellipse.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyFAI.utils.ellipse.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.utils.ellipse.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.utils.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "pyFAI.utils.expand_args": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "os.path.exists",
    "pyFAI.utils.glob"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.utils.float_": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.fully_qualified_name": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "pyFAI.utils.get_calibration_dir": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pyFAI.utils._get_data_path"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.get_cl_file": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "pyFAI.utils._get_data_path",
    "pyFAI.utils.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.get_ui_file": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "pyFAI.utils._get_data_path",
    "pyFAI.utils.os"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "pyFAI.utils.int_": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.lazy_property": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.utils.lazy_property.__get__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.lazy_property.__init__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "pyFAI.utils.sys"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.logger": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pyFAI.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.utils.mathutil": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "numpy.percentile",
    "pyFAI.utils.mathutil._numpy_backport_percentile",
    "pyFAI.utils.mathutil.logging",
    "pyFAI.utils.mathutil.numpy"
   ]
  },
  "type": "module"
 },
 "pyFAI.utils.mathutil.EPS32": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pyFAI.utils.mathutil.__author__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.utils.mathutil.__contact__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.utils.mathutil.__copyright__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.utils.mathutil.__date__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyFAI.utils.mathutil.__license__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.utils.mathutil.__status__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyFAI.utils.mathutil._compute_qth_percentile": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "pyFAI.utils.mathutil.numpy",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil._numpy_backport_percentile": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "_compute_qth_percentile",
    "pyFAI.utils.mathutil.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil._relabel": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyFAI.utils.mathutil.binning": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "pyFAI.utils.mathutil.numpy",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.center_of_mass": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "pyFAI.utils.mathutil.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.deg2rad": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pyFAI.utils.mathutil.math"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.dog": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "max",
    "pyFAI.utils.mathutil.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.dog_filter": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "complex",
    "expand",
    "float",
    "int",
    "isinstance",
    "list",
    "max",
    "pyFAI.utils.mathutil.dog",
    "pyFAI.utils.mathutil.math",
    "pyFAI.utils.mathutil.numpy",
    "pyFAI.utils.mathutil.shift",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.expand": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "RuntimeError",
    "float",
    "int",
    "isinstance",
    "list",
    "pyFAI.utils.mathutil.expand2d",
    "pyFAI.utils.mathutil.math",
    "pyFAI.utils.mathutil.numpy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.expand2d": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "int",
    "pyFAI.utils.mathutil.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.gaussian": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pyFAI.utils.mathutil.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.gaussian_filter": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "expand",
    "float",
    "int",
    "isinstance",
    "list",
    "pyFAI.utils.mathutil.gaussian",
    "pyFAI.utils.mathutil.math",
    "pyFAI.utils.mathutil.numpy",
    "pyFAI.utils.mathutil.scipy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.is_far_from_group": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyFAI.utils.mathutil.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.utils.mathutil.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyFAI.utils.mathutil.maximum_position": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "pyFAI.utils.mathutil.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.measure_offset": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "abs",
    "list",
    "pyFAI.utils.mathutil.center_of_mass",
    "pyFAI.utils.mathutil.maximum_position",
    "pyFAI.utils.mathutil.numpy",
    "pyFAI.utils.mathutil.shift",
    "pyFAI.utils.mathutil.time",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.utils.mathutil.percentile": {
  "data": {
   "lineno": 659
  },
  "type": "constant"
 },
 "pyFAI.utils.mathutil.relabel": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "list",
    "pyFAI.utils.mathutil.logger",
    "pyFAI.utils.mathutil.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.round_fft": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "abs",
    "int",
    "pyFAI.utils.mathutil.math",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.roundfft": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "deprecated",
    "pyFAI.utils.mathutil.round_fft"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.rwp": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "abs",
    "pyFAI.utils.mathutil.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pyFAI.utils.mathutil.shift": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pyFAI.utils.mathutil.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.shiftFFT": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "deprecated",
    "pyFAI.utils.mathutil.shift_fft"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.shift_fft": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "abs",
    "float",
    "input",
    "pyFAI.utils.mathutil.numpy",
    "pyFAI.utils.mathutil.scipy",
    "pyFAI.utils.mathutil.shift"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyFAI.utils.mathutil.unBinning": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "deprecated",
    "pyFAI.utils.mathutil.unbinning"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.mathutil.unbinning": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "pyFAI.utils.mathutil.numpy",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.orderedset": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print",
    "pyFAI.utils.orderedset.OrderedSet",
    "pyFAI.utils.orderedset.s",
    "pyFAI.utils.orderedset.t"
   ]
  },
  "type": "module"
 },
 "pyFAI.utils.orderedset.OrderedSet": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pyFAI.utils.orderedset.collections"
   ]
  },
  "type": "class"
 },
 "pyFAI.utils.orderedset.OrderedSet.__contains__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyFAI.utils.orderedset.OrderedSet.__eq__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pyFAI.utils.orderedset.OrderedSet",
    "set"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.orderedset.OrderedSet.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "pyFAI.utils.orderedset.OrderedSet.__iter__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pyFAI.utils.orderedset.OrderedSet.__len__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.orderedset.OrderedSet.__repr__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.orderedset.OrderedSet.__reversed__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pyFAI.utils.orderedset.OrderedSet.add": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pyFAI.utils.orderedset.OrderedSet.discard": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pyFAI.utils.orderedset.OrderedSet.pop": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.orderedset.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyFAI.utils.orderedset.s": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "pyFAI.utils.orderedset.t": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "pyFAI.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyFAI.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyFAI.utils.readFloatFromKeyboard": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "pyFAI.utils.logger",
    "pyFAI.utils.logging",
    "range"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.sem": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyFAI.utils.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "pyFAI.utils.setup.configuration"
   ]
  },
  "type": "module"
 },
 "pyFAI.utils.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "pyFAI.utils.setup.__authors__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyFAI.utils.setup.__date__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyFAI.utils.setup.__license__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyFAI.utils.setup.configuration": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "pyFAI.utils.shell": {
  "data": {},
  "type": "module"
 },
 "pyFAI.utils.shell.ProgressBar": {
  "data": {
   "lineno": 41
  },
  "type": "class"
 },
 "pyFAI.utils.shell.ProgressBar.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "LookupError",
    "TypeError",
    "ValueError",
    "hasattr",
    "pyFAI.utils.shell.codecs",
    "pyFAI.utils.shell.sys"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.shell.ProgressBar.clear": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pyFAI.utils.shell.sys"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.shell.ProgressBar.update": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "int",
    "len",
    "pyFAI.utils.shell.sys",
    "round"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.shell.__author__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyFAI.utils.shell.__copyright__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.utils.shell.__date__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.utils.shell.__docformat__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.utils.shell.__license__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.utils.shell.__status__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.utils.shell.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.utils.shell.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "pyFAI.utils.shell.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.utils.shell.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.utils.shell.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.utils.str_": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "UnicodeError",
    "str",
    "unicode"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.stringutil": {
  "data": {
   "symbols_in_volume": [
    "pyFAI.utils.stringutil.SafeFormatter"
   ]
  },
  "type": "module"
 },
 "pyFAI.utils.stringutil.SafeFormatter": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pyFAI.utils.stringutil.string"
   ]
  },
  "type": "class"
 },
 "pyFAI.utils.stringutil.SafeFormatter.get_field": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "pyFAI.utils.stringutil.SafeFormatter",
    "super"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.stringutil.__author__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyFAI.utils.stringutil.__copyright__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyFAI.utils.stringutil.__date__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyFAI.utils.stringutil.__docformat__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyFAI.utils.stringutil.__license__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyFAI.utils.stringutil.__status__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyFAI.utils.stringutil._safe_formater": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pyFAI.utils.stringutil.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyFAI.utils.stringutil.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.utils.stringutil.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.utils.stringutil.safe_format": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pyFAI.utils.stringutil._safe_formater"
   ]
  },
  "type": "function"
 },
 "pyFAI.utils.stringutil.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pyFAI.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyFAI.utils.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.utils.win32": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pyFAI.utils.xdg.BaseDirectory": {
  "data": {
   "shadows": "xdg.BaseDirectory"
  },
  "type": "import"
 },
 "pyFAI.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 },
 "pyFAI.worker": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pyFAI.worker.logger",
    "pyFAI.worker.logging"
   ]
  },
  "type": "module"
 },
 "pyFAI.worker.DistortionWorker": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.worker.DistortionWorker.__init__": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "Distortion",
    "bool",
    "pyFAI.worker.logger",
    "pyFAI.worker.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.worker.DistortionWorker.process": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "abs",
    "pyFAI.worker.numpy",
    "pyFAI.worker.preproc"
   ]
  },
  "type": "function"
 },
 "pyFAI.worker.PixelwiseWorker": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyFAI.worker.PixelwiseWorker.__init__": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "pyFAI.worker.logger",
    "pyFAI.worker.numpy"
   ]
  },
  "type": "function"
 },
 "pyFAI.worker.PixelwiseWorker.process": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "abs",
    "pyFAI.worker.numpy",
    "pyFAI.worker.preproc"
   ]
  },
  "type": "function"
 },
 "pyFAI.worker.Worker": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "pyFAI.worker.Worker.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "pyFAI.worker.logger",
    "pyFAI.worker.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.__repr__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.do_2D": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.get_config": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.get_error_model": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.get_json_config": {
  "data": {
   "lineno": 535
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.get_normalization_factor": {
  "data": {
   "lineno": 557
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.get_unit": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.process": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "Exception",
    "pyFAI.worker.logger",
    "pyFAI.worker.numpy",
    "str"
   ]
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.reconfig": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.reset": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.save_config": {
  "data": {
   "lineno": 539
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.setDarkcurrentFile": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.setExtension": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.setFlatfieldFile": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.setJsonConfig": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "AzimuthalIntegrator.sload",
    "Exception",
    "ValueError",
    "detector_factory",
    "float",
    "int",
    "open",
    "print",
    "pyFAI.worker.fabio",
    "pyFAI.worker.json",
    "pyFAI.worker.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.setSubdir": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.set_error_model": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.set_normalization_factor": {
  "data": {
   "lineno": 561
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.set_unit": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "pyFAI.worker.Worker.warmup": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "pyFAI.worker.numpy",
    "pyFAI.worker.threading"
   ]
  },
  "type": "function"
 },
 "pyFAI.worker.__author__": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "pyFAI.worker.__contact__": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "pyFAI.worker.__copyright__": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "pyFAI.worker.__date__": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "pyFAI.worker.__license__": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pyFAI.worker.__status__": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "pyFAI.worker.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyFAI.worker.fabio": {
  "data": {
   "shadows": "fabio"
  },
  "type": "import"
 },
 "pyFAI.worker.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyFAI.worker.logger": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "pyFAI.worker.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pyFAI.worker.make_ai": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "AzimuthalIntegrator",
    "Exception",
    "detector_factory",
    "pyFAI.worker.fabio",
    "pyFAI.worker.logger"
   ]
  },
  "type": "function"
 },
 "pyFAI.worker.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyFAI.worker.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pyFAI.worker.preproc": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "pyFAI.worker.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyFAI.worker.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyFAI.worker.with_statement": {
  "data": {
   "shadows": "__future__.with_statement"
  },
  "type": "import"
 }
}