{
 "gpytorch": {
  "data": {},
  "type": "module"
 },
 "gpytorch.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "gpytorch.__version__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "gpytorch.beta_features": {
  "data": {},
  "type": "module"
 },
 "gpytorch.beta_features.__all__": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "gpytorch.beta_features._moved_beta_feature": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.beta_features._moved_beta_feature.__call__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpytorch.beta_features.warnings"
   ]
  },
  "type": "function"
 },
 "gpytorch.beta_features._moved_beta_feature.__getattr__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.beta_features._moved_beta_feature.__init__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "gpytorch.beta_features.checkpoint_kernel": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "gpytorch.beta_features.default_preconditioner": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "gpytorch.beta_features.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.constraints": {
  "data": {},
  "type": "module"
 },
 "gpytorch.constraints.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "gpytorch.constraints.constraints": {
  "data": {},
  "type": "module"
 },
 "gpytorch.constraints.constraints.GreaterThan": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "gpytorch.constraints.constraints.Interval"
   ]
  },
  "type": "class"
 },
 "gpytorch.constraints.constraints.GreaterThan.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "gpytorch.constraints.constraints.math",
    "super",
    "torch.nn.functional.softplus"
   ]
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.GreaterThan.__repr__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.GreaterThan.inverse_transform": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.GreaterThan.transform": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "gpytorch.constraints.constraints.Interval.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "RuntimeError",
    "_get_inv_param_transform",
    "gpytorch.constraints.constraints.torch",
    "super",
    "torch.sigmoid"
   ]
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.__iter__": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.__repr__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval._apply": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "fn",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.check": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "gpytorch.constraints.constraints.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.check_raw": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "bool",
    "gpytorch.constraints.constraints.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.enforced": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.initial_value": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.intersect": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.constraints.constraints.Interval",
    "gpytorch.constraints.constraints.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.inverse_transform": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.constraints.constraints.math",
    "gpytorch.constraints.constraints.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.transform": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.constraints.constraints.math",
    "gpytorch.constraints.constraints.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.LessThan": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "gpytorch.constraints.constraints.Interval"
   ]
  },
  "type": "class"
 },
 "gpytorch.constraints.constraints.LessThan.__init__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "gpytorch.constraints.constraints.math",
    "super",
    "torch.nn.functional.softplus"
   ]
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.LessThan.__repr__": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.LessThan.inverse_transform": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.LessThan.transform": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.constraints.constraints.Positive": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "gpytorch.constraints.constraints.GreaterThan"
   ]
  },
  "type": "class"
 },
 "gpytorch.constraints.constraints.Positive.__init__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "super",
    "torch.nn.functional.softplus"
   ]
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Positive.__repr__": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Positive.inverse_transform": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Positive.transform": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.constraints.constraints.sigmoid": {
  "data": {
   "shadows": "torch.sigmoid"
  },
  "type": "import"
 },
 "gpytorch.constraints.constraints.softplus": {
  "data": {
   "shadows": "torch.nn.functional.softplus"
  },
  "type": "import"
 },
 "gpytorch.constraints.constraints.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.distributions": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "gpytorch.distributions.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "gpytorch.distributions.base_distributions": {
  "data": {
   "shadows": "torch.distributions"
  },
  "type": "import"
 },
 "gpytorch.distributions.delta": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "gpytorch.distributions.delta.Delta": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "gpytorch.distributions.delta.Delta.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.distributions.delta.numbers",
    "gpytorch.distributions.delta.torch",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.delta.Delta.expand": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "gpytorch.distributions.delta.torch",
    "pyro.distributions.Delta",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.delta.Delta.log_prob": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.delta.Delta.mean": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.delta.Delta.rsample": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "gpytorch.distributions.delta.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.delta.Delta.variance": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "gpytorch.distributions.delta.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.delta.kl_mvn_mvn": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pyro.distributions.Delta",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.delta.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "gpytorch.distributions.delta.register_kl": {
  "data": {
   "shadows": "torch.distributions.kl.register_kl"
  },
  "type": "import"
 },
 "gpytorch.distributions.delta.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.distributions.distribution": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "gpytorch.distributions.distribution.Distribution": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "gpytorch.distributions.distribution._DistributionBase"
   ]
  },
  "type": "class"
 },
 "gpytorch.distributions.distribution.TDistribution": {
  "data": {
   "shadows": "torch.distributions.Distribution"
  },
  "type": "import"
 },
 "gpytorch.distributions.distribution.TorchDistributionMixin": {
  "data": {
   "shadows": "pyro.distributions.torch_distribution.TorchDistributionMixin"
  },
  "type": "import"
 },
 "gpytorch.distributions.distribution._DistributionBase": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "torch.distributions.Distribution"
   ]
  },
  "type": "class"
 },
 "gpytorch.distributions.distribution._DistributionBase.__add__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.distribution._DistributionBase.__div__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.distribution._DistributionBase.__mul__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.distribution._DistributionBase.islazy": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal": {
  "data": {},
  "type": "module"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.distributions.multitask_multivariate_normal.torch",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.event_shape": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.expand": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "gpytorch.distributions.multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.from_batch_mvn": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "BlockInterleavedLazyTensor",
    "ValueError",
    "classmethod",
    "cls",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.from_independent_mvns": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "BlockDiagLazyTensor",
    "CatLazyTensor",
    "ValueError",
    "all",
    "any",
    "classmethod",
    "cls",
    "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal",
    "gpytorch.distributions.multitask_multivariate_normal.torch",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.from_repeated_mvn": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "classmethod",
    "cls.from_batch_mvn",
    "gpytorch.distributions.multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.get_base_samples": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "gpytorch.distributions.multitask_multivariate_normal.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.log_prob": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.mean": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.num_tasks": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.rsample": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.distributions.multitask_multivariate_normal.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.variance": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.distributions.multivariate_normal": {
  "data": {},
  "type": "module"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "torch.distributions.MultivariateNormal"
   ]
  },
  "type": "class"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.__add__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "RuntimeError",
    "float",
    "int",
    "isinstance",
    "torch.distributions.MultivariateNormal",
    "type"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.__getitem__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "DiagLazyTensor",
    "Ellipsis",
    "IndexError",
    "int",
    "isinstance",
    "len",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "_mul_broadcast_shape",
    "isinstance",
    "super",
    "torch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.__mul__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "RuntimeError",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.__radd__": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.__truediv__": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal._repr_sizes": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal._unbroadcasted_scale_tril": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.confidence_region": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "super",
    "torch.distributions.utils.lazy_property"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.expand": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "gpytorch.distributions.multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.get_base_samples": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "gpytorch.distributions.multivariate_normal.torch",
    "torch.distributions.utils._standard_normal"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.lazy_covariance_matrix": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "lazify",
    "super",
    "torch.distributions.utils.lazy_property"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.log_prob": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "gpytorch.distributions.multivariate_normal.math",
    "len",
    "range",
    "sum",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.rsample": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.distributions.multivariate_normal.torch",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.sample": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "gpytorch.distributions.multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.variance": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.TMultivariateNormal": {
  "data": {
   "shadows": "torch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "gpytorch.distributions.multivariate_normal._standard_normal": {
  "data": {
   "shadows": "torch.distributions.utils._standard_normal"
  },
  "type": "import"
 },
 "gpytorch.distributions.multivariate_normal.kl_mvn_mvn": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "_mul_broadcast_shape",
    "float",
    "gpytorch.distributions.multivariate_normal.torch",
    "isinstance",
    "sum",
    "torch.distributions.MultivariateNormal",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.lazy_property": {
  "data": {
   "shadows": "torch.distributions.utils.lazy_property"
  },
  "type": "import"
 },
 "gpytorch.distributions.multivariate_normal.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.distributions.multivariate_normal.register_kl": {
  "data": {
   "shadows": "torch.distributions.kl.register_kl"
  },
  "type": "import"
 },
 "gpytorch.distributions.multivariate_normal.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions.__all__": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "gpytorch.functions._dsmm": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._dsmm.DSMM": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "torch.autograd.Function"
   ]
  },
  "type": "class"
 },
 "gpytorch.functions._dsmm.DSMM.backward": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bdsmm",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._dsmm.DSMM.forward": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bdsmm",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._dsmm.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._inv_matmul": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._inv_matmul.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._inv_matmul.InvMatmul": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "torch.autograd.Function"
   ]
  },
  "type": "class"
 },
 "gpytorch.functions._inv_matmul.InvMatmul.backward": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "any",
    "gpytorch.functions._inv_matmul.InvMatmul",
    "gpytorch.functions._inv_matmul.torch",
    "hasattr",
    "len",
    "list",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._inv_matmul.InvMatmul.forward": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "gpytorch.functions._inv_matmul._solve",
    "gpytorch.functions._inv_matmul.torch",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._inv_matmul._solve": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "gpytorch.functions._inv_matmul.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._inv_matmul.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions._inv_quad": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._inv_quad.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._inv_quad.InvQuad": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "torch.autograd.Function"
   ]
  },
  "type": "class"
 },
 "gpytorch.functions._inv_quad.InvQuad.backward": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "any",
    "gpytorch.functions._inv_quad.torch",
    "hasattr",
    "len",
    "list",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._inv_quad.InvQuad.forward": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.functions._inv_quad._solve",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._inv_quad._solve": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "gpytorch.functions._inv_quad.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._inv_quad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions._inv_quad_log_det": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._inv_quad_log_det.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._inv_quad_log_det.InvQuadLogDet": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "torch.autograd.Function"
   ]
  },
  "type": "class"
 },
 "gpytorch.functions._inv_quad_log_det.InvQuadLogDet.backward": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "any",
    "gpytorch.functions._inv_quad_log_det.torch",
    "hasattr",
    "list",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._inv_quad_log_det.InvQuadLogDet.forward": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "RuntimeError",
    "StochasticLQ",
    "UserWarning",
    "float",
    "gpytorch.functions._inv_quad_log_det.torch",
    "gpytorch.functions._inv_quad_log_det.warnings",
    "lanczos_tridiag_to_diag",
    "list",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._inv_quad_log_det.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions._inv_quad_log_det.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.functions._log_normal_cdf": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._log_normal_cdf.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._log_normal_cdf.LogNormalCDF": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.autograd.Function"
   ]
  },
  "type": "class"
 },
 "gpytorch.functions._log_normal_cdf.LogNormalCDF.backward": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "gpytorch.functions._log_normal_cdf.math",
    "gpytorch.functions._log_normal_cdf.torch",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._log_normal_cdf.LogNormalCDF.forward": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.functions._log_normal_cdf.math",
    "gpytorch.functions._log_normal_cdf.torch",
    "staticmethod",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._log_normal_cdf.Normal": {
  "data": {
   "shadows": "torch.distributions.Normal"
  },
  "type": "import"
 },
 "gpytorch.functions._log_normal_cdf.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.functions._log_normal_cdf.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions._matmul": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._matmul.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._matmul.Matmul": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "torch.autograd.Function"
   ]
  },
  "type": "class"
 },
 "gpytorch.functions._matmul.Matmul.backward": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "any",
    "hasattr",
    "len",
    "list",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._matmul.Matmul.forward": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._root_decomposition": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._root_decomposition.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._root_decomposition.RootDecomposition": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.autograd.Function"
   ]
  },
  "type": "class"
 },
 "gpytorch.functions._root_decomposition.RootDecomposition.backward": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "any",
    "gpytorch.functions._root_decomposition.torch",
    "hasattr",
    "is_empty",
    "list",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._root_decomposition.RootDecomposition.backward.is_empty": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "gpytorch.functions._root_decomposition.RootDecomposition.forward": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.functions._root_decomposition.torch",
    "lazify",
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions._root_decomposition.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions.add_diag": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "input",
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions.add_jitter": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "gpytorch.functions.torch",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions.dsmm": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "DSMM"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions.inv_matmul": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions.inv_quad": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "inv_quad_logdet"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions.inv_quad_logdet": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions.log_normal_cdf": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "LogNormalCDF"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions.logdet": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "gpytorch.functions.inv_quad_logdet"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions.matern_covariance": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions.matern_covariance.MaternCovariance": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "gpytorch.functions.matern_covariance.torch"
   ]
  },
  "type": "class"
 },
 "gpytorch.functions.matern_covariance.MaternCovariance.backward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions.matern_covariance.MaternCovariance.forward": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "any",
    "dist_func",
    "gpytorch.functions.matern_covariance.math",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions.matern_covariance.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.functions.matern_covariance.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions.matmul": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "gpytorch.functions.rbf_covariance": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions.rbf_covariance.RBFCovariance": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "gpytorch.functions.rbf_covariance.torch"
   ]
  },
  "type": "class"
 },
 "gpytorch.functions.rbf_covariance.RBFCovariance.backward": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions.rbf_covariance.RBFCovariance.forward": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "any",
    "sq_dist_func",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions.rbf_covariance.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions.root_decomposition": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions.root_inv_decomposition": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.functions.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "gpytorch.kernels.additive_structure_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.additive_structure_kernel.AdditiveStructureKernel": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.kernels.additive_structure_kernel.AdditiveStructureKernel.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "gpytorch.kernels.additive_structure_kernel.AdditiveStructureKernel",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.additive_structure_kernel.AdditiveStructureKernel.forward": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.additive_structure_kernel.AdditiveStructureKernel.is_stationary": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.additive_structure_kernel.AdditiveStructureKernel.num_outputs_per_input": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "gpytorch.kernels.additive_structure_kernel.AdditiveStructureKernel.prediction_strategy": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "gpytorch.kernels.cosine_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.cosine_kernel.CosineKernel": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.kernels.cosine_kernel.CosineKernel.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Positive",
    "gpytorch.kernels.cosine_kernel.CosineKernel",
    "gpytorch.kernels.cosine_kernel.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.cosine_kernel.CosineKernel._set_period_length": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "gpytorch.kernels.cosine_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.cosine_kernel.CosineKernel.forward": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "gpytorch.kernels.cosine_kernel.math",
    "gpytorch.kernels.cosine_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.cosine_kernel.CosineKernel.period_length": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "gpytorch.kernels.cosine_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.kernels.cosine_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.cylindrical_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Positive",
    "gpytorch.kernels.cylindrical_kernel.torch",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel.alpha": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "gpytorch.kernels.cylindrical_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel.angular_weights": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "gpytorch.kernels.cylindrical_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel.beta": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "gpytorch.kernels.cylindrical_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel.forward": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "gpytorch.kernels.cylindrical_kernel.torch",
    "range",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel.kuma": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "gpytorch.kernels.cylindrical_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel.num_outputs_per_input": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "gpytorch.kernels.cylindrical_kernel.torch",
    "int"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.cylindrical_kernel.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.kernels.cylindrical_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_interpolation_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "RuntimeError",
    "create_grid",
    "float",
    "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel",
    "gpytorch.kernels.grid_interpolation_kernel.torch",
    "int",
    "isinstance",
    "len",
    "list",
    "range",
    "super",
    "tuple",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel._compute_grid": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "Interpolation"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel._inducing_forward": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel._tight_grid_bounds": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "enumerate",
    "property",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel.forward": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "InterpolatedLazyTensor",
    "_mul_broadcast_shape",
    "any",
    "create_grid",
    "gpytorch.kernels.grid_interpolation_kernel.torch",
    "lazify",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel.prediction_strategy": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "InterpolatedPredictionStrategy"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_interpolation_kernel.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_interpolation_kernel.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_interpolation_kernel.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_interpolation_kernel.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_interpolation_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.grid_kernel.GridKernel": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "convert_legacy_grid",
    "create_data_from_grid",
    "gpytorch.kernels.grid_kernel.torch",
    "len",
    "super",
    "torch.Tensor",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.forward": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "KroneckerProductLazyTensor",
    "ToeplitzLazyTensor",
    "ValueError",
    "cat",
    "delazify",
    "gpytorch.kernels.grid_kernel.torch",
    "hasattr",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.grid": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "getattr",
    "property",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.is_ragged": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "all",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.num_outputs_per_input": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.register_buffer_list": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.train": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "gpytorch.kernels.grid_kernel.GridKernel",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.update_grid": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "RuntimeError",
    "convert_legacy_grid",
    "create_data_from_grid",
    "gpytorch.kernels.grid_kernel.torch",
    "hasattr",
    "len",
    "range",
    "setattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_kernel.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.index_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.index_kernel.IndexKernel": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.kernels.index_kernel.IndexKernel.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Positive",
    "RuntimeError",
    "gpytorch.kernels.index_kernel.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.index_kernel.IndexKernel._eval_covar_matrix": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "gpytorch.kernels.index_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.index_kernel.IndexKernel._set_var": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "gpytorch.kernels.index_kernel.IndexKernel.covar_matrix": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "DiagLazyTensor",
    "PsdSumLazyTensor",
    "RootLazyTensor",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.index_kernel.IndexKernel.forward": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "InterpolatedLazyTensor",
    "_mul_broadcast_shape"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.index_kernel.IndexKernel.var": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "gpytorch.kernels.index_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.inducing_point_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel.__deepcopy__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "gpytorch.kernels.inducing_point_kernel.copy",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.kernels.inducing_point_kernel.InducingPointKernel",
    "gpytorch.kernels.inducing_point_kernel.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel._covar_diag": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "DiagLazyTensor",
    "delazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel._get_covariance": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "DiagLazyTensor",
    "MatmulLazyTensor",
    "PsdSumLazyTensor",
    "RootLazyTensor",
    "delazify",
    "gpytorch.kernels.inducing_point_kernel.math",
    "gpytorch.kernels.inducing_point_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel._inducing_inv_root": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "gpytorch.kernels.inducing_point_kernel.torch",
    "hasattr",
    "property",
    "psd_safe_cholesky"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel._inducing_mat": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "delazify",
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel.forward": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "InducingPointKernelAddedLossTerm",
    "MultivariateNormal",
    "RuntimeError",
    "gpytorch.kernels.inducing_point_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel.num_outputs_per_input": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel.train": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpytorch.kernels.inducing_point_kernel.InducingPointKernel",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "gpytorch.kernels.inducing_point_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.kernels.inducing_point_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.keops.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "gpytorch.kernels.keops.keops_kernel": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "gpytorch.kernels.keops.keops_kernel.KEOLazyTensor": {
  "data": {
   "shadows": "pykeops.torch.LazyTensor"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops.keops_kernel.KeOpsKernel": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "gpytorch.kernels.keops.keops_kernel.KeOpsKernel.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.keops_kernel.KeOpsKernel.covar_func": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "gpytorch.kernels.keops.keops_kernel.torch",
    "pykeops.torch.LazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.keops_kernel.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops.keops_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops.matern_kernel": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "gpytorch.kernels.keops.matern_kernel.KEOLazyTensor": {
  "data": {
   "shadows": "pykeops.torch.LazyTensor"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops.matern_kernel.MaternKernel": {
  "data": {
   "lineno": 76
  },
  "type": "class"
 },
 "gpytorch.kernels.keops.matern_kernel.MaternKernel.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.matern_kernel.MaternKernel.covar_func": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "gpytorch.kernels.keops.matern_kernel.math",
    "gpytorch.kernels.keops.matern_kernel.torch",
    "pykeops.torch.LazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.matern_kernel.MaternKernel.forward": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "KeOpsLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.matern_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops.matern_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops.rbf_kernel": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "gpytorch.kernels.keops.rbf_kernel.KEOLazyTensor": {
  "data": {
   "shadows": "pykeops.torch.LazyTensor"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops.rbf_kernel.RBFKernel": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "gpytorch.kernels.keops.rbf_kernel.RBFKernel.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.rbf_kernel.RBFKernel.covar_func": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "gpytorch.kernels.keops.rbf_kernel.torch",
    "pykeops.torch.LazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.rbf_kernel.RBFKernel.forward": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "KeOpsLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.rbf_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.kernel.AdditiveKernel": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "gpytorch.kernels.kernel.Kernel"
   ]
  },
  "type": "class"
 },
 "gpytorch.kernels.kernel.AdditiveKernel.__getitem__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "copy.deepcopy",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.AdditiveKernel.__init__": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "gpytorch.kernels.kernel.AdditiveKernel",
    "super",
    "torch.nn.ModuleList"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.AdditiveKernel.forward": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "ZeroLazyTensor",
    "kern",
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.AdditiveKernel.is_stationary": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "all",
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.AdditiveKernel.num_outputs_per_input": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.AdditiveKernel.prediction_strategy": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "SumPredictionStrategy"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Distance": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpytorch.kernels.kernel.torch"
   ]
  },
  "type": "class"
 },
 "gpytorch.kernels.kernel.Distance.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "gpytorch.kernels.kernel.default_postprocess_script",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Distance._dist": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Distance._sq_dist": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpytorch.kernels.kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "gpytorch.kernels.kernel.Kernel.__add__": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "AdditiveKernel"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.__call__": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "LazyEvaluatedKernelTensor",
    "RuntimeError",
    "gpytorch.kernels.kernel.Kernel",
    "gpytorch.kernels.kernel.torch",
    "isinstance",
    "lazify",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.__getitem__": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "copy.deepcopy",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.__getstate__": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Positive",
    "gpytorch.kernels.kernel.Kernel",
    "gpytorch.kernels.kernel.torch",
    "gpytorch.kernels.kernel.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.__mul__": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "ProductKernel"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.__setstate__": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel._set_lengthscale": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.kernels.kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.batch_shape": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.covar_dist": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "dist_postprocess_func",
    "gpytorch.kernels.kernel.Distance",
    "gpytorch.kernels.kernel.default_postprocess_script",
    "gpytorch.kernels.kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.dtype": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "gpytorch.kernels.kernel.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.forward": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.is_stationary": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.lengthscale": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.local_load_samples": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "gpytorch.kernels.kernel.torch",
    "iter",
    "next",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.named_sub_kernels": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "gpytorch.kernels.kernel.Kernel",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.num_outputs_per_input": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.prediction_strategy": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "DefaultPredictionStrategy"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.sub_kernels": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.ModuleList": {
  "data": {
   "shadows": "torch.nn.ModuleList"
  },
  "type": "import"
 },
 "gpytorch.kernels.kernel.ProductKernel": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "gpytorch.kernels.kernel.Kernel"
   ]
  },
  "type": "class"
 },
 "gpytorch.kernels.kernel.ProductKernel.__getitem__": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "copy.deepcopy",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.ProductKernel.__init__": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "gpytorch.kernels.kernel.ProductKernel",
    "super",
    "torch.nn.ModuleList"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.ProductKernel.forward": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "delazify",
    "gpytorch.kernels.kernel.torch",
    "kern",
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.ProductKernel.is_stationary": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "all",
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.ProductKernel.num_outputs_per_input": {
  "data": {
   "lineno": 525
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.kernels.kernel.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "gpytorch.kernels.kernel.default_postprocess_script": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.kernel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.kernels.lcm_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.lcm_kernel.LCMKernel": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.kernels.lcm_kernel.LCMKernel.__getitem__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "copy.deepcopy",
    "torch.nn.ModuleList"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.lcm_kernel.LCMKernel.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "MultitaskKernel",
    "ValueError",
    "gpytorch.kernels.lcm_kernel.LCMKernel",
    "isinstance",
    "len",
    "super",
    "torch.nn.ModuleList"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.lcm_kernel.LCMKernel.forward": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "gpytorch.kernels.lcm_kernel.LCMKernel.num_outputs_per_input": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "gpytorch.kernels.lcm_kernel.ModuleList": {
  "data": {
   "shadows": "torch.nn.ModuleList"
  },
  "type": "import"
 },
 "gpytorch.kernels.lcm_kernel.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "gpytorch.kernels.linear_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.linear_kernel.LinearKernel": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "gpytorch.kernels.linear_kernel.LinearKernel.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Positive",
    "gpytorch.kernels.linear_kernel.LinearKernel",
    "gpytorch.kernels.linear_kernel.torch",
    "gpytorch.kernels.linear_kernel.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.linear_kernel.LinearKernel._set_variance": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "gpytorch.kernels.linear_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.linear_kernel.LinearKernel.forward": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "MatmulLazyTensor",
    "RootLazyTensor",
    "gpytorch.kernels.linear_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.linear_kernel.LinearKernel.variance": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "gpytorch.kernels.linear_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.linear_kernel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.kernels.matern_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.matern_kernel.MaternKernel": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "gpytorch.kernels.matern_kernel.MaternKernel.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.kernels.matern_kernel.MaternKernel",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.matern_kernel.MaternKernel.forward": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "MaternCovariance",
    "gpytorch.kernels.matern_kernel.math",
    "gpytorch.kernels.matern_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.matern_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.kernels.matern_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.multi_device_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.multi_device_kernel.DataParallel": {
  "data": {
   "shadows": "torch.nn.parallel.DataParallel"
  },
  "type": "import"
 },
 "gpytorch.kernels.multi_device_kernel.MultiDeviceKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "torch.nn.parallel.DataParallel"
   ]
  },
  "type": "class"
 },
 "gpytorch.kernels.multi_device_kernel.MultiDeviceKernel.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "gpytorch.kernels.multi_device_kernel.torch",
    "torch.nn.parallel.DataParallel.__init__"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.multi_device_kernel.MultiDeviceKernel.base_kernel": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.multi_device_kernel.MultiDeviceKernel.forward": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "gpytorch.kernels.multi_device_kernel.torch",
    "len",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.multi_device_kernel.MultiDeviceKernel.forward.set_distance_module_to_none": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.multi_device_kernel.MultiDeviceKernel.gather": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "CatLazyTensor",
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.multi_device_kernel.MultiDeviceKernel.num_outputs_per_input": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "gpytorch.kernels.multi_device_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.multitask_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.multitask_kernel.MultitaskKernel": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.kernels.multitask_kernel.MultitaskKernel.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "IndexKernel",
    "gpytorch.kernels.multitask_kernel.MultitaskKernel",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.multitask_kernel.MultitaskKernel.forward": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "KroneckerProductLazyTensor",
    "RuntimeError",
    "lazify",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.multitask_kernel.MultitaskKernel.num_outputs_per_input": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "gpytorch.kernels.newton_girard_additive_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.newton_girard_additive_kernel.NewtonGirardAdditiveKernel": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.kernels.newton_girard_additive_kernel.NewtonGirardAdditiveKernel.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Positive",
    "gpytorch.kernels.newton_girard_additive_kernel.NewtonGirardAdditiveKernel",
    "gpytorch.kernels.newton_girard_additive_kernel.torch",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.newton_girard_additive_kernel.NewtonGirardAdditiveKernel._set_outputscale": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "gpytorch.kernels.newton_girard_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.newton_girard_additive_kernel.NewtonGirardAdditiveKernel.forward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "RuntimeError",
    "delazify",
    "gpytorch.kernels.newton_girard_additive_kernel.torch",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.newton_girard_additive_kernel.NewtonGirardAdditiveKernel.outputscale": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "gpytorch.kernels.newton_girard_additive_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.periodic_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.periodic_kernel.PeriodicKernel": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.kernels.periodic_kernel.PeriodicKernel.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Positive",
    "gpytorch.kernels.periodic_kernel.PeriodicKernel",
    "gpytorch.kernels.periodic_kernel.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.periodic_kernel.PeriodicKernel._set_period_length": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "gpytorch.kernels.periodic_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.periodic_kernel.PeriodicKernel.forward": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "gpytorch.kernels.periodic_kernel.math",
    "gpytorch.kernels.periodic_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.periodic_kernel.PeriodicKernel.period_length": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "gpytorch.kernels.periodic_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.kernels.periodic_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.polynomial_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.polynomial_kernel.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.kernels.polynomial_kernel.PolynomialKernel": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "gpytorch.kernels.polynomial_kernel.PolynomialKernel.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Positive",
    "RuntimeError",
    "gpytorch.kernels.polynomial_kernel.torch",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.polynomial_kernel.PolynomialKernel._set_offset": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "gpytorch.kernels.polynomial_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.polynomial_kernel.PolynomialKernel.forward": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "bool",
    "gpytorch.kernels.polynomial_kernel.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.polynomial_kernel.PolynomialKernel.offset": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "gpytorch.kernels.polynomial_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.polynomial_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.polynomial_kernel_grad": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.polynomial_kernel_grad.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.kernels.polynomial_kernel_grad.PolynomialKernelGrad": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.kernels.polynomial_kernel_grad.PolynomialKernelGrad.forward": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "bool",
    "gpytorch.kernels.polynomial_kernel_grad.torch",
    "range",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.polynomial_kernel_grad.PolynomialKernelGrad.num_outputs_per_input": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "gpytorch.kernels.polynomial_kernel_grad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.product_structure_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.product_structure_kernel.ProductStructureKernel": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "gpytorch.kernels.product_structure_kernel.ProductStructureKernel.__call__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "lazify",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.product_structure_kernel.ProductStructureKernel.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "gpytorch.kernels.product_structure_kernel.ProductStructureKernel",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.product_structure_kernel.ProductStructureKernel.forward": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.product_structure_kernel.ProductStructureKernel.is_stationary": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.product_structure_kernel.ProductStructureKernel.num_outputs_per_input": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "gpytorch.kernels.rbf_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.rbf_kernel.RBFKernel": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "gpytorch.kernels.rbf_kernel.RBFKernel.forward": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "RBFCovariance",
    "gpytorch.kernels.rbf_kernel.postprocess_rbf"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.rbf_kernel.postprocess_rbf": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "gpytorch.kernels.rbf_kernel_grad": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.rbf_kernel_grad.RBFKernelGrad": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.kernels.rbf_kernel_grad.RBFKernelGrad.forward": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "KroneckerProductLazyTensor",
    "RuntimeError",
    "gpytorch.kernels.rbf_kernel_grad.RBFKernelGrad",
    "gpytorch.kernels.rbf_kernel_grad.torch",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.rbf_kernel_grad.RBFKernelGrad.num_outputs_per_input": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "gpytorch.kernels.rbf_kernel_grad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.rq_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.rq_kernel.RQKernel": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.kernels.rq_kernel.RQKernel.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "Positive",
    "gpytorch.kernels.rq_kernel.RQKernel",
    "gpytorch.kernels.rq_kernel.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.rq_kernel.RQKernel.alpha": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "gpytorch.kernels.rq_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.rq_kernel.RQKernel.forward": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "gpytorch.kernels.rq_kernel.RQKernel.forward.postprocess_rq": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.rq_kernel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "gpytorch.kernels.rq_kernel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "gpytorch.kernels.rq_kernel.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "gpytorch.kernels.rq_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.rq_kernel.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "gpytorch.kernels.scale_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Positive",
    "gpytorch.kernels.scale_kernel.ScaleKernel",
    "gpytorch.kernels.scale_kernel.torch",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel._set_outputscale": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "gpytorch.kernels.scale_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel.forward": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "delazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel.is_stationary": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel.num_outputs_per_input": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel.outputscale": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "gpytorch.kernels.scale_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel": {
  "data": {
   "symbols_in_volume": [
    "gpytorch.kernels.spectral_mixture_kernel.logging"
   ]
  },
  "type": "module"
 },
 "gpytorch.kernels.spectral_mixture_kernel.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Positive",
    "RuntimeError",
    "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel",
    "gpytorch.kernels.spectral_mixture_kernel.logger",
    "gpytorch.kernels.spectral_mixture_kernel.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel._create_input_grid": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "gpytorch.kernels.spectral_mixture_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel._set_mixture_means": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "gpytorch.kernels.spectral_mixture_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel._set_mixture_scales": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "gpytorch.kernels.spectral_mixture_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel._set_mixture_weights": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "gpytorch.kernels.spectral_mixture_kernel.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel.forward": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.kernels.spectral_mixture_kernel.math",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel.initialize_from_data": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.kernels.spectral_mixture_kernel.torch",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel.initialize_from_data_empspect": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "gpytorch.kernels.spectral_mixture_kernel.math",
    "numpy.abs",
    "numpy.arange",
    "numpy.digitize",
    "numpy.histogram",
    "numpy.hstack",
    "numpy.random.rand",
    "numpy.trapz",
    "numpy.zeros",
    "scipy.fftpack.fft",
    "scipy.integrate.cumtrapz",
    "sklearn.mixture.GaussianMixture"
   ]
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel.mixture_means": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel.mixture_scales": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel.mixture_weights": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.cumtrapz": {
  "data": {
   "shadows": "scipy.integrate.cumtrapz"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel.fft": {
  "data": {
   "shadows": "scipy.fftpack.fft"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "gpytorch.kernels.spectral_mixture_kernel.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "gpytorch.lazy.added_diag_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor.__add__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor",
    "isinstance",
    "len",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor._init_cache": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "PsdSumLazyTensor",
    "RootLazyTensor",
    "gpytorch.lazy.added_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor._init_cache_for_constant_diag": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "gpytorch.lazy.added_diag_lazy_tensor.torch",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor._init_cache_for_non_constant_diag": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "gpytorch.lazy.added_diag_lazy_tensor.torch",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor._matmul": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "gpytorch.lazy.added_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor._preconditioner": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "gpytorch.lazy.added_diag_lazy_tensor.torch",
    "gpytorch.lazy.added_diag_lazy_tensor.warnings"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor._preconditioner.precondition_closure": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor.add_diag": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor",
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch",
    "isinstance",
    "len",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._cholesky": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "cached"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._cholesky_solve": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "_matmul_broadcast_shape"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._compute_batch_repeat_size": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._expand_batch": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch",
    "len",
    "max",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._get_indices": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._getitem": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch",
    "isinstance",
    "len",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._matmul": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "_matmul_broadcast_shape"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._move_repeat_batches_back": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "gpytorch.lazy.batch_repeat_lazy_tensor.itertools",
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch",
    "hasattr",
    "len",
    "max",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._move_repeat_batches_to_columns": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "gpytorch.lazy.batch_repeat_lazy_tensor.itertools",
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch",
    "len",
    "max",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._permute_batch": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "_matmul_broadcast_shape",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._root_decomposition": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._root_inv_decomposition": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._size": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._unsqueeze_batch": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor.add_jitter": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "RuntimeError",
    "_matmul_broadcast_shape",
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor.repeat": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch",
    "len",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.block_diag_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._add_batch_dim": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._cholesky": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "cached"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._cholesky_solve": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._get_indices": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gpytorch.lazy.block_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._remove_batch_dim": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._root_decomposition": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._root_inv_decomposition": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._size": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "gpytorch.lazy.block_diag_lazy_tensor.torch",
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._solve": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor.diag": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor.num_blocks": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._add_batch_dim": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._cholesky": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "cached"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._cholesky_solve": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._get_indices": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "gpytorch.lazy.block_interleaved_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._remove_batch_dim": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._root_decomposition": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._root_inv_decomposition": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._size": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "gpytorch.lazy.block_interleaved_lazy_tensor.torch",
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._solve": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor.diag": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor.num_blocks": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.block_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor",
    "lazify",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._add_batch_dim": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._expand_batch": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "gpytorch.lazy.block_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._getitem": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "_is_noop_index",
    "isinstance",
    "slice",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._matmul": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._mul_constant": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ConstantMulLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._permute_batch": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "gpytorch.lazy.block_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._remove_batch_dim": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._unsqueeze_batch": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "gpytorch.lazy.block_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor.zero_mean_mvn_samples": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.lazy.block_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor",
    "gpytorch.lazy.cached_cg_lazy_tensor.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor._cholesky": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor._cholesky_solve": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor",
    "gpytorch.lazy.cached_cg_lazy_tensor.torch",
    "gpytorch.lazy.cached_cg_lazy_tensor.warnings",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor._expand_batch": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor._get_indices": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor._getitem": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor._matmul": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor._probe_vectors_and_norms": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor._size": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor._solve": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor",
    "gpytorch.lazy.cached_cg_lazy_tensor.torch",
    "gpytorch.lazy.cached_cg_lazy_tensor.warnings",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor._t_matmul": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor.detach_": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor.inv_matmul": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor.precompute_terms": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "classmethod",
    "gpytorch.lazy.cached_cg_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor.requires_grad": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.__all__": {
  "data": {
   "lineno": 274
  },
  "type": "constant"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.cached_cg_lazy_tensor.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.lazy.cat_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "enumerate",
    "gpytorch.lazy.cat_lazy_tensor.torch",
    "len",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._check_args": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._expand_batch": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._get_indices": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "_mul_broadcast_shape",
    "gpytorch.lazy.cat_lazy_tensor.torch",
    "len",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._getitem": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "gpytorch.lazy.cat_lazy_tensor.torch",
    "int",
    "isinstance",
    "len",
    "list",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._matmul": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "_matmul_broadcast_shape",
    "gpytorch.lazy.cat_lazy_tensor.torch",
    "range",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._permute_batch": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._size": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._split_slice": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "RuntimeError",
    "list",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._unsqueeze_batch": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.all_to": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.device": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.device_count": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "len",
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.devices": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.diag": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.lazy.cat_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.to": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.cat": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "CatLazyTensor",
    "RuntimeError",
    "all",
    "delazify",
    "gpytorch.lazy.cat_lazy_tensor.torch",
    "isinstance",
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.chol_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "RuntimeError",
    "delazify",
    "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor",
    "gpytorch.lazy.chol_lazy_tensor.torch",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor._chol": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor._chol_diag": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor._cholesky": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor._solve": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor.inv_matmul": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor",
    "gpytorch.lazy.constant_mul_lazy_tensor.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._approx_diag": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._expand_batch": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._get_indices": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._getitem": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._matmul": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._permute_batch": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._size": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._t_matmul": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor.diag": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor.evaluate": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor.expanded_constant": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "RuntimeError",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.diag_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.__add__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "AddedDiagLazyTensor",
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._cholesky": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "cached"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._cholesky_solve": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._expand_batch": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._get_indices": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpytorch.lazy.diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._matmul": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "NonLazyTensor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._mul_constant": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._mul_matrix": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._prod_batch": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._root_decomposition": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._root_inv_decomposition": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._size": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._sum_batch": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._t_matmul": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.abs": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.add_diag": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "_mul_broadcast_shape",
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.diag": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.evaluate": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "cached",
    "gpytorch.lazy.diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.exp": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.inv_matmul": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "gpytorch.lazy.diag_lazy_tensor.torch",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.inverse": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.log": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.matmul": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "NonLazyTensor",
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.sqrt": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.zero_mean_mvn_samples": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "gpytorch.lazy.diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.interpolated_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor",
    "gpytorch.lazy.interpolated_lazy_tensor.torch",
    "lazify",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._approx_diag": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "left_interp"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._check_args": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._expand_batch": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._get_indices": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._getitem": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._matmul": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._mul_constant": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "gpytorch.lazy.interpolated_lazy_tensor.torch",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._size": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "gpytorch.lazy.interpolated_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._sparse_left_interp_t": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "gpytorch.lazy.interpolated_lazy_tensor.torch",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._sparse_right_interp_t": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "gpytorch.lazy.interpolated_lazy_tensor.torch",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._sum_batch": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "BlockDiagLazyTensor",
    "_pad_with_singletons",
    "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor",
    "gpytorch.lazy.interpolated_lazy_tensor.torch",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._t_matmul": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor.diag": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor",
    "isinstance",
    "left_interp",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor.matmul": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "left_interp",
    "left_t_interp"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor.zero_mean_mvn_samples": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "left_interp",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.keops_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor._get_indices": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor._getitem": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "IndexError",
    "RuntimeError",
    "any",
    "isinstance",
    "len",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor._matmul": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor._size": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "gpytorch.lazy.keops_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor.covar_mat": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "cached",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor.diag": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "cached"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor",
    "lazify",
    "super",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._expand_batch": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._get_indices": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._matmul": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "gpytorch.lazy.kronecker_product_lazy_tensor._matmul"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._size": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "cached",
    "gpytorch.lazy.kronecker_product_lazy_tensor._prod",
    "gpytorch.lazy.kronecker_product_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._t_matmul": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "gpytorch.lazy.kronecker_product_lazy_tensor._t_matmul"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor._matmul": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "_matmul_broadcast_shape"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor._prod": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "functools.reduce",
    "gpytorch.lazy.kronecker_product_lazy_tensor.operator"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor._t_matmul": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "_matmul_broadcast_shape",
    "gpytorch.lazy.kronecker_product_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.__getitem__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "Ellipsis",
    "isinstance",
    "len",
    "slice",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._check_args": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.lazy.lazy_evaluated_kernel_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._expand_batch": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._getitem": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "IndexError",
    "RuntimeError",
    "all",
    "any",
    "isinstance",
    "len",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._matmul": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.lazy.lazy_evaluated_kernel_tensor.torch",
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._quad_form_derivative": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.lazy.lazy_evaluated_kernel_tensor.torch",
    "lazify",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._size": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "RuntimeError",
    "cached",
    "gpytorch.lazy.lazy_evaluated_kernel_tensor.torch",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._transpose_nonbatch": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._unsqueeze_batch": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.add_jitter": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.device": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.diag": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "RuntimeError",
    "cached",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.dtype": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.evaluate": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "cached"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.evaluate_kernel": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "RuntimeError",
    "cached",
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.repeat": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.representation": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.representation_tree": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "_deprecate_renamed_methods",
    "gpytorch.lazy.lazy_tensor.LazyTensor"
   ]
  },
  "type": "module"
 },
 "gpytorch.lazy.lazy_tensor.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.__add__": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "AddedDiagLazyTensor",
    "DiagLazyTensor",
    "SumLazyTensor",
    "_mul_broadcast_shape",
    "isinstance",
    "lazify",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.__div__": {
  "data": {
   "lineno": 1631,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.__getitem__": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": [
    "Ellipsis",
    "RuntimeError",
    "_compute_getitem_size",
    "_convert_indices_to_tensors",
    "any",
    "bool",
    "delazify",
    "enumerate",
    "gpytorch.lazy.lazy_tensor.torch",
    "int",
    "isinstance",
    "len",
    "list",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.__matmul__": {
  "data": {
   "lineno": 1738
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.__mul__": {
  "data": {
   "lineno": 1741
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.__radd__": {
  "data": {
   "lineno": 1744
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.__rmul__": {
  "data": {
   "lineno": 1747
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.__sub__": {
  "data": {
   "lineno": 1750
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._approx_diag": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._args": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._check_args": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._cholesky": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "NonLazyTensor",
    "RuntimeError",
    "any",
    "cached",
    "isinstance",
    "psd_safe_cholesky"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._cholesky_solve": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "gpytorch.lazy.lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._expand_batch": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "gpytorch.lazy.lazy_tensor.torch",
    "len",
    "list",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._get_indices": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "InterpolatedLazyTensor",
    "_mul_broadcast_shape",
    "gpytorch.lazy.lazy_tensor.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._getitem": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "InterpolatedLazyTensor",
    "_is_noop_index",
    "gpytorch.lazy.lazy_tensor.torch",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._inv_matmul_preconditioner": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "gpytorch.lazy.lazy_tensor.gpytorch",
    "gpytorch.lazy.lazy_tensor.torch",
    "hasattr",
    "min"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._inv_matmul_preconditioner.preconditioner": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._matmul": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._mul_constant": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "ConstantMulLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._mul_matrix": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "MulLazyTensor",
    "NonLazyTensor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._permute_batch": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "gpytorch.lazy.lazy_tensor.LazyTensor",
    "gpytorch.lazy.lazy_tensor.torch",
    "isinstance",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._preconditioner": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._probe_vectors_and_norms": {
  "data": {
   "lineno": 517
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._prod_batch": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "MulLazyTensor",
    "RootLazyTensor",
    "gpytorch.lazy.lazy_tensor.math",
    "gpytorch.lazy.lazy_tensor.torch",
    "list",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "collections.deque",
    "gpytorch.lazy.lazy_tensor.torch",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._root_decomposition": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "RootDecomposition"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._root_decomposition_size": {
  "data": {
   "lineno": 600
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._root_inv_decomposition": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "RootDecomposition",
    "RootLazyTensor",
    "add_to_cache"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._size": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._solve": {
  "data": {
   "lineno": 643
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._sum_batch": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "SumBatchLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._t_matmul": {
  "data": {
   "lineno": 668
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor._unsqueeze_batch": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.add_diag": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "AddedDiagLazyTensor",
    "DiagLazyTensor",
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.add_jitter": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "gpytorch.lazy.lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.batch_dim": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.batch_shape": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.cholesky": {
  "data": {
   "lineno": 729
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.clone": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.cpu": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.cuda": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.detach": {
  "data": {
   "lineno": 800
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.detach_": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.device": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.diag": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.lazy.lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.dim": {
  "data": {
   "lineno": 836
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.dtype": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.evaluate": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "cached",
    "gpytorch.lazy.lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.evaluate_kernel": {
  "data": {
   "lineno": 880
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.expand": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "gpytorch.lazy.lazy_tensor.torch",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.inv_matmul": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.inv_quad": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "RuntimeError",
    "func"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "CholLazyTensor",
    "RuntimeError",
    "func",
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.is_square": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.logdet": {
  "data": {
   "lineno": 1062
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.matmul": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "Matmul",
    "MatmulLazyTensor",
    "_matmul_broadcast_shape",
    "func",
    "func.apply",
    "gpytorch.lazy.lazy_tensor.LazyTensor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.matrix_shape": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "gpytorch.lazy.lazy_tensor.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.mul": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "RuntimeError",
    "_mul_broadcast_shape",
    "gpytorch.lazy.lazy_tensor.LazyTensor",
    "gpytorch.lazy.lazy_tensor.torch",
    "isinstance",
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.ndimension": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.numel": {
  "data": {
   "lineno": 1150
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.numpy": {
  "data": {
   "lineno": 1156
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.permute": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "set",
    "sorted",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.prod": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.repeat": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "BatchRepeatLazyTensor",
    "RuntimeError",
    "gpytorch.lazy.lazy_tensor.torch",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.representation": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "RuntimeError",
    "callable",
    "gpytorch.lazy.lazy_tensor.torch",
    "hasattr",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.representation_tree": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "LazyTensorRepresentationTree"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.requires_grad": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "gpytorch.lazy.lazy_tensor.torch",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.requires_grad_": {
  "data": {
   "lineno": 1295
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.root_decomposition": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "CholLazyTensor",
    "RootLazyTensor",
    "RuntimeError",
    "cached",
    "gpytorch.lazy.lazy_tensor.warnings"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.root_inv_decomposition": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "RootLazyTensor",
    "RuntimeError",
    "cached",
    "delazify",
    "gpytorch.lazy.lazy_tensor.torch",
    "gpytorch.lazy.lazy_tensor.warnings",
    "lazify",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.shape": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.size": {
  "data": {
   "lineno": 1427
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.squeeze": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.sum": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.lazy.lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.t": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.to": {
  "data": {
   "lineno": 1495,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.transpose": {
  "data": {
   "lineno": 1527,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.unsqueeze": {
  "data": {
   "lineno": 1563,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.LazyTensor.zero_mean_mvn_samples": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "gpytorch.lazy.lazy_tensor.torch",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.lazy.lazy_tensor.__all__": {
  "data": {
   "lineno": 1780
  },
  "type": "constant"
 },
 "gpytorch.lazy.lazy_tensor._import_dotted_name": {
  "data": {
   "lineno": 1754,
   "symbols_in_volume": [
    "__import__",
    "getattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.lazy.lazy_tensor.delazify": {
  "data": {
   "lineno": 1762,
   "symbols_in_volume": [
    "TypeError",
    "gpytorch.lazy.lazy_tensor.LazyTensor",
    "gpytorch.lazy.lazy_tensor.torch",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "gpytorch.lazy.lazy_tensor.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "gpytorch.lazy.lazy_tensor.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.lazy.lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.lazy_tensor.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.lazy.lazy_tensor_representation_tree": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.lazy_tensor_representation_tree.LazyTensorRepresentationTree": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.lazy.lazy_tensor_representation_tree.LazyTensorRepresentationTree.__call__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "subtree"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor_representation_tree.LazyTensorRepresentationTree.__init__": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "callable",
    "hasattr",
    "len",
    "slice"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "lazify",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._expand_batch": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._get_indices": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "_pad_with_singletons",
    "gpytorch.lazy.matmul_lazy_tensor.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._getitem": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor",
    "gpytorch.lazy.matmul_lazy_tensor.torch",
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._matmul": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._size": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "_matmul_broadcast_shape"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._t_matmul": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor.diag": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor.evaluate": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "gpytorch.lazy.matmul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor._inner_repeat": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor._outer_repeat": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.mul_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._check_args": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._expand_batch": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._get_indices": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._matmul": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "_matmul_broadcast_shape",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._mul_constant": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "gpytorch.lazy.mul_lazy_tensor.torch",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._size": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor.diag": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor.evaluate": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor.representation": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor.representation_tree": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.non_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor.__add__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "gpytorch.lazy.non_lazy_tensor.NonLazyTensor",
    "gpytorch.lazy.non_lazy_tensor.torch",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "gpytorch.lazy.non_lazy_tensor.NonLazyTensor",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._check_args": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "gpytorch.lazy.non_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._expand_batch": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._get_indices": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._getitem": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._matmul": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "gpytorch.lazy.non_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._prod_batch": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._size": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._sum_batch": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._t_matmul": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "gpytorch.lazy.non_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor.diag": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "gpytorch.lazy.non_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor.evaluate": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor.mul": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "gpytorch.lazy.non_lazy_tensor.NonLazyTensor",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.__all__": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "gpytorch.lazy.non_lazy_tensor.lazify": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "TypeError",
    "gpytorch.lazy.non_lazy_tensor.NonLazyTensor",
    "gpytorch.lazy.non_lazy_tensor.torch",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.psd_sum_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.psd_sum_lazy_tensor.PsdSumLazyTensor": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.lazy.psd_sum_lazy_tensor.PsdSumLazyTensor.zero_mean_mvn_samples": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "gpytorch.lazy.root_lazy_tensor.RootLazyTensor",
    "lazify",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._expand_batch": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._get_indices": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "_pad_with_singletons",
    "gpytorch.lazy.root_lazy_tensor.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._getitem": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "MatmulLazyTensor",
    "_equal_indices",
    "gpytorch.lazy.root_lazy_tensor.torch",
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._matmul": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._root_decomposition": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._root_decomposition_size": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._size": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "gpytorch.lazy.root_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._t_matmul": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor.diag": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "gpytorch.lazy.root_lazy_tensor.RootLazyTensor",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor.evaluate": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "gpytorch.lazy.root_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor._add_batch_dim": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor._get_indices": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_pad_with_singletons",
    "gpytorch.lazy.sum_batch_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor._getitem": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor._remove_batch_dim": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor._size": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "gpytorch.lazy.sum_batch_lazy_tensor.torch",
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor.diag": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor.evaluate": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.sum_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor.__add__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "AddedDiagLazyTensor",
    "AttributeError",
    "_mul_broadcast_shape",
    "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor",
    "isinstance",
    "lazify",
    "list",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "TypeError",
    "_mul_broadcast_shape",
    "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor",
    "lazify",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._expand_batch": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._get_indices": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._getitem": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._matmul": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._size": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "_mul_broadcast_shape"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._sum_batch": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._t_matmul": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor.diag": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor.evaluate": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor._expand_batch": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor._get_indices": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor._matmul": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "sym_toeplitz_matmul"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sym_toeplitz_derivative_quadratic_form"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor._size": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "gpytorch.lazy.toeplitz_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor._t_matmul": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor.add_jitter": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor",
    "gpytorch.lazy.toeplitz_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor.diag": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.zero_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.__add__": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.__div__": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor",
    "gpytorch.lazy.zero_lazy_tensor.torch",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.__mul__": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._expand_batch": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._get_indices": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "_compute_getitem_size",
    "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._getitem": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "_compute_getitem_size",
    "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._matmul": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._prod_batch": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._root_decomposition": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._root_decomposition_size": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._root_inv_decomposition": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._size": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "gpytorch.lazy.zero_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._sum_batch": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._t_matmul": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._unsqueeze_batch": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.add_diag": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "DiagLazyTensor",
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.device": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.diag": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.lazy.zero_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.dtype": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.evaluate": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "gpytorch.lazy.zero_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.inv_matmul": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.inv_quad": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.logdet": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "gpytorch.lazy.zero_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.matmul": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.mul": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "_mul_broadcast_shape"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.transpose": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "gpytorch.likelihoods.bernoulli_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.bernoulli_likelihood.BernoulliLikelihood": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "gpytorch.likelihoods.bernoulli_likelihood.BernoulliLikelihood.expected_log_prob": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpytorch.likelihoods.bernoulli_likelihood.torch",
    "gpytorch.likelihoods.bernoulli_likelihood.warnings",
    "log_normal_cdf"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.bernoulli_likelihood.BernoulliLikelihood.forward": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "gpytorch.likelihoods.bernoulli_likelihood.BernoulliLikelihood.log_marginal": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "gpytorch.likelihoods.bernoulli_likelihood.BernoulliLikelihood.marginal": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "gpytorch.likelihoods.bernoulli_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.bernoulli_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.bernoulli_likelihood.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.gaussian_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.gaussian_likelihood.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase"
   ]
  },
  "type": "class"
 },
 "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood.__init__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "FixedGaussianNoise",
    "HomoskedasticNoise",
    "bool",
    "gpytorch.likelihoods.gaussian_likelihood.torch",
    "super",
    "torch.Tensor",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood._shaped_noise_covar": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "gpytorch.likelihoods.gaussian_likelihood.torch",
    "gpytorch.likelihoods.gaussian_likelihood.warnings",
    "isinstance",
    "len",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood.get_fantasy_likelihood": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "FixedGaussianNoise",
    "RuntimeError",
    "copy.deepcopy",
    "gpytorch.likelihoods.gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood.noise": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood.second_noise": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase"
   ]
  },
  "type": "class"
 },
 "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "HomoskedasticNoise",
    "gpytorch.likelihoods.gaussian_likelihood.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood.noise": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood.raw_noise": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.gaussian_likelihood.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpytorch.likelihoods.gaussian_likelihood.warnings",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase._shaped_noise_covar": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "gpytorch.likelihoods.gaussian_likelihood.torch",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase.expected_log_prob": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "gpytorch.likelihoods.gaussian_likelihood.math",
    "input.event_shape",
    "input.mean",
    "input.variance",
    "len",
    "list",
    "range",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase.forward": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase.log_marginal": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase.marginal": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.gaussian_likelihood.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.gaussian_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.gaussian_likelihood.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "gpytorch.likelihoods.likelihood.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood.Likelihood": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "gpytorch.likelihoods.likelihood._Likelihood"
   ]
  },
  "type": "class"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.__call__": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "gpytorch.likelihoods.likelihood.pyro",
    "gpytorch.likelihoods.likelihood.torch",
    "input",
    "input.__class__.__name__",
    "input.base_dist",
    "isinstance",
    "self.marginal",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood._draw_likelihood_samples": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "function_dist",
    "function_dist.event_shape",
    "gpytorch.likelihoods.likelihood.pyro",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.expected_log_prob": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "function_dist",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.forward": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.get_fantasy_likelihood": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.log_marginal": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "function_dist",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.marginal": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "function_dist",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.name_prefix": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "RuntimeWarning",
    "gpytorch.likelihoods.likelihood.warnings"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.num_data": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "RuntimeWarning",
    "gpytorch.likelihoods.likelihood.warnings"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.pyro_guide": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "function_dist",
    "gpytorch.likelihoods.likelihood.pyro"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.pyro_model": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "function_dist",
    "gpytorch.likelihoods.likelihood.pyro",
    "self",
    "self.sample_target"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.sample_target": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "gpytorch.likelihoods.likelihood.pyro",
    "self.name_prefix",
    "self.num_data"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "gpytorch.likelihoods.likelihood._Likelihood.__call__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.likelihoods.likelihood.torch",
    "input",
    "input.__class__.__name__",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood._draw_likelihood_samples": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpytorch.likelihoods.likelihood.torch",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood.expected_log_prob": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood.forward": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood.get_fantasy_likelihood": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood.log_marginal": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "gpytorch.likelihoods.likelihood.math"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood.marginal": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._OneDimensionalLikelihood": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "abc.ABC",
    "gpytorch.likelihoods.likelihood.Likelihood"
   ]
  },
  "type": "class"
 },
 "gpytorch.likelihoods.likelihood._OneDimensionalLikelihood.__init__": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "GaussHermiteQuadrature1D",
    "self.quadrature",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._OneDimensionalLikelihood.expected_log_prob": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "function_dist",
    "self.forward",
    "self.quadrature"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._OneDimensionalLikelihood.log_marginal": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "function_dist",
    "self.forward",
    "self.quadrature"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood.pyro": {
  "data": {
   "shadows": "pyro"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood_list": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.likelihood_list.Likelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.Likelihood"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood_list.LikelihoodList": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.likelihoods.Likelihood"
   ]
  },
  "type": "class"
 },
 "gpytorch.likelihoods.likelihood_list.LikelihoodList.__call__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "gpytorch.likelihoods.likelihood_list._get_tuple_args_",
    "likelihood",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood_list.LikelihoodList.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "super",
    "torch.nn.ModuleList"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood_list.LikelihoodList.expected_log_prob": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "gpytorch.likelihoods.likelihood_list._get_tuple_args_",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood_list.LikelihoodList.forward": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpytorch.likelihoods.likelihood_list._get_tuple_args_",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood_list.LikelihoodList.pyro_sample_output": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpytorch.likelihoods.likelihood_list._get_tuple_args_",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood_list.ModuleList": {
  "data": {
   "shadows": "torch.nn.ModuleList"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood_list._get_tuple_args_": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihood": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "gpytorch.likelihoods.multitask_gaussian_likelihood._MultitaskGaussianLikelihoodBase"
   ]
  },
  "type": "class"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihood.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "GreaterThan",
    "MultitaskHomoskedasticNoise",
    "gpytorch.likelihoods.multitask_gaussian_likelihood.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihood._set_noise": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "gpytorch.likelihoods.multitask_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihood._shaped_noise_covar": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihood.noise": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihoodKronecker": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "gpytorch.likelihoods.multitask_gaussian_likelihood._MultitaskGaussianLikelihoodBase"
   ]
  },
  "type": "class"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihoodKronecker.__init__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "GreaterThan",
    "RuntimeError",
    "gpytorch.likelihoods.multitask_gaussian_likelihood.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihoodKronecker._eval_covar_matrix": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "gpytorch.likelihoods.multitask_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihoodKronecker._set_noise": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihoodKronecker.marginal": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "DiagLazyTensor",
    "KroneckerProductLazyTensor",
    "RootLazyTensor",
    "add_diag",
    "gpytorch.likelihoods.multitask_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihoodKronecker.noise": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood._MultitaskGaussianLikelihoodBase": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood._MultitaskGaussianLikelihoodBase.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.likelihoods.multitask_gaussian_likelihood.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood._MultitaskGaussianLikelihoodBase._eval_corr_matrix": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "gpytorch.likelihoods.multitask_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood._MultitaskGaussianLikelihoodBase._shaped_noise_covar": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "BlockDiagLazyTensor",
    "MatmulLazyTensor",
    "gpytorch.likelihoods.multitask_gaussian_likelihood.torch",
    "lazify",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood._MultitaskGaussianLikelihoodBase.forward": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "torch.Tensor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.deprecate_task_noise_corr": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "gpytorch.likelihoods.multitask_gaussian_likelihood.torch",
    "gpytorch.likelihoods.multitask_gaussian_likelihood.warnings"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.noise_models": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.noise_models.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.noise_models.FixedGaussianNoise": {
  "data": {
   "lineno": 130
  },
  "type": "class"
 },
 "gpytorch.likelihoods.noise_models.FixedGaussianNoise.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "super",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.FixedGaussianNoise._apply": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "fn",
    "gpytorch.likelihoods.noise_models.FixedGaussianNoise",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.FixedGaussianNoise.forward": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "DiagLazyTensor",
    "ZeroLazyTensor",
    "gpytorch.likelihoods.noise_models.torch",
    "len",
    "torch.Tensor",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.HeteroskedasticNoise": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "gpytorch.likelihoods.noise_models.Noise"
   ]
  },
  "type": "class"
 },
 "gpytorch.likelihoods.noise_models.HeteroskedasticNoise.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "GreaterThan",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.HeteroskedasticNoise.forward": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "DiagLazyTensor",
    "NotImplementedError",
    "gpytorch.likelihoods.noise_models.torch",
    "isinstance",
    "len",
    "torch.Tensor",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.HomoskedasticNoise": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "gpytorch.likelihoods.noise_models._HomoskedasticNoiseBase"
   ]
  },
  "type": "class"
 },
 "gpytorch.likelihoods.noise_models.HomoskedasticNoise.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "gpytorch.likelihoods.noise_models.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.MultitaskHomoskedasticNoise": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "gpytorch.likelihoods.noise_models._HomoskedasticNoiseBase"
   ]
  },
  "type": "class"
 },
 "gpytorch.likelihoods.noise_models.MultitaskHomoskedasticNoise.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "gpytorch.likelihoods.noise_models.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.Noise": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "gpytorch.likelihoods.noise_models.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.noise_models.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.noise_models.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.noise_models._HomoskedasticNoiseBase": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "gpytorch.likelihoods.noise_models.Noise"
   ]
  },
  "type": "class"
 },
 "gpytorch.likelihoods.noise_models._HomoskedasticNoiseBase.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "GreaterThan",
    "gpytorch.likelihoods.noise_models.torch",
    "super",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models._HomoskedasticNoiseBase._set_noise": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpytorch.likelihoods.noise_models.torch",
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models._HomoskedasticNoiseBase.forward": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "DiagLazyTensor",
    "_mul_broadcast_shape",
    "gpytorch.likelihoods.noise_models.torch",
    "len",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models._HomoskedasticNoiseBase.noise": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "torch.Tensor"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.softmax_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.softmax_likelihood.SoftmaxLikelihood": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.likelihoods.softmax_likelihood.SoftmaxLikelihood.__call__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpytorch.likelihoods.softmax_likelihood.warnings",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.softmax_likelihood.SoftmaxLikelihood.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.likelihoods.softmax_likelihood.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.softmax_likelihood.SoftmaxLikelihood.forward": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "DeprecationWarning",
    "RuntimeError",
    "gpytorch.likelihoods.softmax_likelihood.warnings"
   ]
  },
  "type": "function"
 },
 "gpytorch.likelihoods.softmax_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.softmax_likelihood.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.means": {
  "data": {},
  "type": "module"
 },
 "gpytorch.means.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "gpytorch.means.constant_mean": {
  "data": {},
  "type": "module"
 },
 "gpytorch.means.constant_mean.ConstantMean": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.means.constant_mean.ConstantMean.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "gpytorch.means.constant_mean.ConstantMean",
    "gpytorch.means.constant_mean.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.means.constant_mean.ConstantMean.forward": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "_mul_broadcast_shape",
    "input.shape"
   ]
  },
  "type": "function"
 },
 "gpytorch.means.constant_mean.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.means.constant_mean_grad": {
  "data": {},
  "type": "module"
 },
 "gpytorch.means.constant_mean_grad.ConstantMeanGrad": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.means.constant_mean_grad.ConstantMeanGrad.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "gpytorch.means.constant_mean_grad.ConstantMeanGrad",
    "gpytorch.means.constant_mean_grad.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.means.constant_mean_grad.ConstantMeanGrad.forward": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "_mul_broadcast_shape",
    "input.shape",
    "input.size"
   ]
  },
  "type": "function"
 },
 "gpytorch.means.constant_mean_grad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.means.linear_mean": {
  "data": {},
  "type": "module"
 },
 "gpytorch.means.linear_mean.LinearMean": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.means.linear_mean.LinearMean.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "gpytorch.means.linear_mean.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.means.linear_mean.LinearMean.forward": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "gpytorch.means.linear_mean.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.means.mean": {
  "data": {},
  "type": "module"
 },
 "gpytorch.means.mean.Mean": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.means.mean.Mean.__call__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "gpytorch.means.mean.Mean",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.means.mean.Mean.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.means.mean.Mean.forward": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.means.multitask_mean": {
  "data": {},
  "type": "module"
 },
 "gpytorch.means.multitask_mean.ModuleList": {
  "data": {
   "shadows": "torch.nn.ModuleList"
  },
  "type": "import"
 },
 "gpytorch.means.multitask_mean.MultitaskMean": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.means.multitask_mean.MultitaskMean.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "RuntimeError",
    "copy.deepcopy",
    "gpytorch.means.multitask_mean.MultitaskMean",
    "isinstance",
    "len",
    "list",
    "range",
    "super",
    "torch.nn.ModuleList"
   ]
  },
  "type": "function"
 },
 "gpytorch.means.multitask_mean.MultitaskMean.forward": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "gpytorch.means.multitask_mean.torch",
    "input",
    "sub_mean"
   ]
  },
  "type": "function"
 },
 "gpytorch.means.multitask_mean.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "gpytorch.means.multitask_mean.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.means.zero_mean": {
  "data": {},
  "type": "module"
 },
 "gpytorch.means.zero_mean.ZeroMean": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.means.zero_mean.ZeroMean.forward": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "gpytorch.means.zero_mean.torch",
    "input.device",
    "input.dtype",
    "input.shape"
   ]
  },
  "type": "function"
 },
 "gpytorch.means.zero_mean.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.mlls": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.VariationalELBOEmpirical": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "gpytorch.mlls.VariationalELBOEmpirical.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpytorch.mlls.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.VariationalMarginalLogLikelihood": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "gpytorch.mlls.VariationalMarginalLogLikelihood.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpytorch.mlls.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "gpytorch.mlls._approximate_mll": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls._approximate_mll.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "gpytorch.mlls._approximate_mll._ApproximateMarginalLogLikelihood": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "gpytorch.mlls._approximate_mll._ApproximateMarginalLogLikelihood.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls._approximate_mll._ApproximateMarginalLogLikelihood._log_likelihood_term": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls._approximate_mll._ApproximateMarginalLogLikelihood.forward": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "closure",
    "gpytorch.mlls._approximate_mll.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls._approximate_mll.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.mlls._approximate_mll.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.mlls.added_loss_term": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.added_loss_term.AddedLossTerm": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.mlls.added_loss_term.AddedLossTerm.loss": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.deep_approximate_mll": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.deep_approximate_mll.DeepApproximateMLL": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "gpytorch.mlls.deep_approximate_mll.DeepApproximateMLL.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.deep_approximate_mll.DeepApproximateMLL._log_likelihood_term": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "gpytorch.mlls.deep_approximate_mll.DeepApproximateMLL.forward": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "gpytorch.mlls.exact_marginal_log_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood.forward": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "RuntimeError",
    "closure",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood.pyro_factor": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "gpytorch.mlls.exact_marginal_log_likelihood.pyro",
    "self"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.exact_marginal_log_likelihood.pyro": {
  "data": {
   "shadows": "pyro"
  },
  "type": "import"
 },
 "gpytorch.mlls.gamma_robust_variational_elbo": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.gamma_robust_variational_elbo.GammaRobustVariationalELBO": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "gpytorch.mlls.gamma_robust_variational_elbo.GammaRobustVariationalELBO.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.gamma_robust_variational_elbo.GammaRobustVariationalELBO._log_likelihood_term": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "gpytorch.mlls.gamma_robust_variational_elbo.math",
    "gpytorch.mlls.gamma_robust_variational_elbo.torch",
    "len",
    "list",
    "numpy.log1p",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.gamma_robust_variational_elbo.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.mlls.gamma_robust_variational_elbo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpytorch.mlls.gamma_robust_variational_elbo.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.mlls.inducing_point_kernel_added_loss_term": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.inducing_point_kernel_added_loss_term.InducingPointKernelAddedLossTerm": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.mlls.inducing_point_kernel_added_loss_term.InducingPointKernelAddedLossTerm.__init__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "gpytorch.mlls.inducing_point_kernel_added_loss_term.InducingPointKernelAddedLossTerm.loss": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "gpytorch.mlls.marginal_log_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood.forward": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood.pyro_factor": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.noise_model_added_loss_term": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.noise_model_added_loss_term.NoiseModelAddedLossTerm": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.mlls.noise_model_added_loss_term.NoiseModelAddedLossTerm.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ExactMarginalLogLikelihood"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.noise_model_added_loss_term.NoiseModelAddedLossTerm.loss": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "gpytorch.mlls.predictive_log_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.predictive_log_likelihood.PredictiveLogLikelihood": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.mlls.predictive_log_likelihood.PredictiveLogLikelihood._log_likelihood_term": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "gpytorch.mlls.predictive_log_likelihood.PredictiveLogLikelihood.forward": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.sum_marginal_log_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.sum_marginal_log_likelihood.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "gpytorch.mlls.sum_marginal_log_likelihood.MarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.MarginalLogLikelihood"
  },
  "type": "import"
 },
 "gpytorch.mlls.sum_marginal_log_likelihood.ModuleList": {
  "data": {
   "shadows": "torch.nn.ModuleList"
  },
  "type": "import"
 },
 "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "gpytorch.mlls.MarginalLogLikelihood"
   ]
  },
  "type": "class"
 },
 "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpytorch.mlls.ExactMarginalLogLikelihood",
    "mll_cls",
    "super",
    "torch.nn.ModuleList"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood.forward": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "mll",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.variational_elbo": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.variational_elbo.VariationalELBO": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.mlls.variational_elbo.VariationalELBO._log_likelihood_term": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "gpytorch.mlls.variational_elbo.VariationalELBO.forward": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.mlls.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.models": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.AbstractVariationalGP": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "gpytorch.models.AbstractVariationalGP.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpytorch.models.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.PyroVariationalGP": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "gpytorch.models.PyroVariationalGP.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpytorch.models.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.VariationalGP": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "gpytorch.models.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "gpytorch.models.approximate_gp": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.approximate_gp.ApproximateGP": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "gpytorch.models.approximate_gp.ApproximateGP.__call__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "gpytorch.models.approximate_gp.ApproximateGP.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.approximate_gp.ApproximateGP.forward": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.approximate_gp.ApproximateGP.pyro_guide": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "input",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.approximate_gp.ApproximateGP.pyro_model": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "input",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.deep_gps.AbstractDeepGP": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.models.deep_gps.AbstractDeepGP.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpytorch.models.deep_gps.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.AbstractDeepGPLayer": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "gpytorch.models.deep_gps.AbstractDeepGPLayer.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpytorch.models.deep_gps.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "gpytorch.models.deep_gps.deep_gp": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.deep_gps.deep_gp.BlockDiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.BlockDiagLazyTensor"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepGP": {
  "data": {
   "lineno": 112
  },
  "type": "class"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepGP.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "gpytorch.models.deep_gps.deep_gp._DeepGPVariationalStrategy",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepGP.forward": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepGPLayer": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepGPLayer.__call__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.lazy.BlockDiagLazyTensor",
    "gpytorch.models.deep_gps.deep_gp.torch",
    "gpytorch.settings.debug.on",
    "gpytorch.settings.num_likelihood_samples.value",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepGPLayer.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "gpytorch.models.deep_gps.deep_gp.DeepGPLayer",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepGPLayer.forward": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepLikelihood": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "gpytorch.likelihoods.Likelihood"
   ]
  },
  "type": "class"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepLikelihood.__call__": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepLikelihood.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpytorch.models.deep_gps.deep_gp.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepLikelihood.expected_log_prob": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepLikelihood.forward": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepLikelihood.log_marginal": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.Likelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.Likelihood"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.deep_gp.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.deep_gp._DeepGPVariationalStrategy": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.models.deep_gps.deep_gp._DeepGPVariationalStrategy.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp._DeepGPVariationalStrategy.kl_divergence": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp._DeepGPVariationalStrategy.sub_variational_strategies": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.settings": {
  "data": {
   "shadows": "gpytorch.settings"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.deep_gp.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.deep_gp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.models.exact_gp": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.exact_gp.ExactGP": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "gpytorch.models.exact_gp.ExactGP.__call__": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "RuntimeError",
    "_mul_broadcast_shape",
    "all",
    "gpytorch.models.exact_gp.ExactGP",
    "gpytorch.models.exact_gp.torch",
    "gpytorch.models.exact_gp.warnings",
    "input",
    "input.expand",
    "input.shape",
    "isinstance",
    "list",
    "prediction_strategy",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "gpytorch.models.exact_gp.ExactGP",
    "gpytorch.models.exact_gp.torch",
    "isinstance",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP._apply": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "fn",
    "gpytorch.models.exact_gp.ExactGP",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP._load_from_state_dict": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP.get_fantasy_model": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "_mul_broadcast_shape",
    "copy.deepcopy",
    "gpytorch.models.exact_gp.ExactGP",
    "gpytorch.models.exact_gp.torch",
    "input",
    "input.expand",
    "input.shape",
    "isinstance",
    "len",
    "list",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP.local_load_samples": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "iter",
    "next",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP.set_train_data": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "RuntimeError",
    "getattr",
    "gpytorch.models.exact_gp.torch",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP.train": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "gpytorch.models.exact_gp.ExactGP",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP.train_targets": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "gpytorch.models.exact_gp.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.models.exact_gp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.models.exact_prediction_strategies": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.__deepcopy__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "RootLazyTensor",
    "add_to_cache",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy._exact_predictive_covar_inv_quad_form_cache": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "gpytorch.models.exact_prediction_strategies.clear_cache_hook",
    "gpytorch.models.exact_prediction_strategies.functools"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy._exact_predictive_covar_inv_quad_form_root": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.covar_cache": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "cached",
    "delazify",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.exact_prediction": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.exact_predictive_covar": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "MatmulLazyTensor",
    "ZeroLazyTensor",
    "delazify",
    "gpytorch.models.exact_prediction_strategies.torch",
    "lazify"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.exact_predictive_mean": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.get_fantasy_strategy": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "BatchRepeatLazyTensor",
    "NonLazyTensor",
    "delazify",
    "fant_likelihood",
    "gpytorch.models.exact_prediction_strategies.string",
    "gpytorch.models.exact_prediction_strategies.torch",
    "len",
    "max",
    "psd_safe_cholesky"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.mean_cache": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "cached",
    "gpytorch.models.exact_prediction_strategies.clear_cache_hook",
    "gpytorch.models.exact_prediction_strategies.functools",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.num_train": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.train_shape": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy"
   ]
  },
  "type": "class"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy.__init__": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy._exact_predictive_covar_inv_quad_form_cache": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "left_t_interp"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy._exact_predictive_covar_inv_quad_form_root": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "left_interp"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy.covar_cache": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "InterpolatedLazyTensor",
    "RootLazyTensor",
    "cached",
    "gpytorch.models.exact_prediction_strategies.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy.exact_prediction": {
  "data": {
   "lineno": 505
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy.exact_predictive_covar": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "RootLazyTensor",
    "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy",
    "left_interp",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy.exact_predictive_mean": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "left_interp"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy.get_fantasy_strategy": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy.mean_cache": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "cached",
    "left_t_interp",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.SumPredictionStrategy": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy"
   ]
  },
  "type": "class"
 },
 "gpytorch.models.exact_prediction_strategies.SumPredictionStrategy._exact_predictive_covar_inv_quad_form_cache": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "gpytorch.models.exact_prediction_strategies.SumPredictionStrategy",
    "isinstance",
    "super",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.SumPredictionStrategy._exact_predictive_covar_inv_quad_form_root": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "gpytorch.models.exact_prediction_strategies.SumPredictionStrategy",
    "isinstance",
    "sum",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.SumPredictionStrategy._sub_strategies": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "gpytorch.models.exact_prediction_strategies.prediction_strategy",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.clear_cache_hook": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "gpytorch.models.exact_prediction_strategies.prediction_strategy": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "cls",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "gpytorch.models.exact_prediction_strategies.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.models.gp": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.gp.GP": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.models.model_list": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.model_list.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "gpytorch.models.model_list.AbstractModelList": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "abc.ABC",
    "gpytorch.models.GP"
   ]
  },
  "type": "class"
 },
 "gpytorch.models.model_list.AbstractModelList.forward_i": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.model_list.AbstractModelList.likelihood_i": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.model_list.AbstractModelList.num_outputs": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.model_list.GP": {
  "data": {
   "shadows": "gpytorch.models.GP"
  },
  "type": "import"
 },
 "gpytorch.models.model_list.IndependentModelList": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpytorch.models.model_list.AbstractModelList"
   ]
  },
  "type": "class"
 },
 "gpytorch.models.model_list.IndependentModelList.__call__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "_get_tensor_args",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.model_list.IndependentModelList.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.likelihoods.LikelihoodList",
    "hasattr",
    "super",
    "torch.nn.ModuleList"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.model_list.IndependentModelList.forward": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "_get_tensor_args",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.model_list.IndependentModelList.forward_i": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "gpytorch.models.model_list.IndependentModelList.get_fantasy_model": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "_get_tensor_args",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.model_list.IndependentModelList.likelihood_i": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "gpytorch.models.model_list.IndependentModelList.num_outputs": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.model_list.IndependentModelList.train_inputs": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.model_list.IndependentModelList.train_targets": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.model_list.LikelihoodList": {
  "data": {
   "shadows": "gpytorch.likelihoods.LikelihoodList"
  },
  "type": "import"
 },
 "gpytorch.models.model_list.ModuleList": {
  "data": {
   "shadows": "torch.nn.ModuleList"
  },
  "type": "import"
 },
 "gpytorch.models.model_list._get_tensor_args": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "gpytorch.models.model_list.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.model_list.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "gpytorch.models.model_list.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.models.pyro": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "gpytorch.models.pyro.PyroGP": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.models.pyro.PyroGP.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.pyro._PyroMixin": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.models.pyro._PyroMixin.pyro_factors": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.pyro._PyroMixin.pyro_guide": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.pyro._PyroMixin.pyro_model": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.pyro.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "gpytorch.models.pyro._pyro_mixin": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.pyro._pyro_mixin._PyroMixin": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.models.pyro._pyro_mixin._PyroMixin.pyro_guide": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "gpytorch.models.pyro._pyro_mixin.pyro",
    "input",
    "len",
    "self"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.pyro._pyro_mixin._PyroMixin.pyro_model": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "closure",
    "gpytorch.models.pyro._pyro_mixin.pyro",
    "gpytorch.models.pyro._pyro_mixin.torch",
    "input",
    "len",
    "self",
    "self.added_loss_terms",
    "self.name_prefix",
    "self.named_priors",
    "self.num_data",
    "self.variational_strategy.prior_distribution"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.pyro._pyro_mixin.pyro": {
  "data": {
   "shadows": "pyro"
  },
  "type": "import"
 },
 "gpytorch.models.pyro._pyro_mixin.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.models.pyro.pyro_gp": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.pyro.pyro_gp.PyroGP": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.models.pyro.pyro_gp.PyroGP.__call__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "gpytorch.models.pyro.pyro_gp.PyroGP.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.pyro.pyro_gp.PyroGP.guide": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.pyro.pyro_gp.PyroGP.model": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "gpytorch.models.pyro.pyro_gp.pyro",
    "input"
   ]
  },
  "type": "function"
 },
 "gpytorch.models.pyro.pyro_gp.pyro": {
  "data": {
   "shadows": "pyro"
  },
  "type": "import"
 },
 "gpytorch.models.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.module": {
  "data": {},
  "type": "module"
 },
 "gpytorch.module.Distribution": {
  "data": {
   "shadows": "torch.distributions.Distribution"
  },
  "type": "import"
 },
 "gpytorch.module.Module": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "gpytorch.module.Module.__call__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_validate_module_outputs",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.__getattr__": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "AttributeError",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module._get_module_and_name": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "AttributeError",
    "type"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module._load_state_hook_ignore_shapes": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "gpytorch.module.itertools"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module._strict": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "_set_strict"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.added_loss_terms": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "gpytorch.module.Module.constraint_for_parameter_name": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "AttributeError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.constraints": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "gpytorch.module.Module.forward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.hyperparameters": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "gpytorch.module.Module.initialize": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "ValueError",
    "closure",
    "float",
    "gpytorch.module.torch",
    "hasattr",
    "int",
    "isinstance",
    "setattr",
    "type"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.load_strict_shapes": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "gpytorch.module.Module.load_strict_shapes.apply_fn": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "gpytorch.module.Module.local_load_samples": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "closure",
    "setting_closure"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.named_added_loss_terms": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "_extract_named_added_loss_terms"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.named_constraints": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "_extract_named_constraints"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.named_hyperparameters": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "gpytorch.module.Module.named_parameters_and_constraints": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "gpytorch.module.Module.named_priors": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "_extract_named_priors"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.named_variational_parameters": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "gpytorch.module.Module.pyro_load_from_samples": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "_pyro_load_from_samples"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.pyro_sample_from_prior": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "_pyro_sample_from_prior"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.register_added_loss_term": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "gpytorch.module.Module.register_constraint": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.register_parameter": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationError",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.register_prior": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "closure",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.register_prior.closure": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.register_prior.setting_closure": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "gpytorch.module.Module.sample_from_prior": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "RuntimeError",
    "setting_closure"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.update_added_loss_term": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.Module.variational_parameters": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "gpytorch.module.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "gpytorch.module._extract_named_added_loss_terms": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "hasattr",
    "set"
   ]
  },
  "type": "function"
 },
 "gpytorch.module._extract_named_constraints": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "hasattr",
    "set"
   ]
  },
  "type": "function"
 },
 "gpytorch.module._extract_named_priors": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "closure",
    "hasattr",
    "set"
   ]
  },
  "type": "function"
 },
 "gpytorch.module._pyro_load_from_samples": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "hasattr",
    "set"
   ]
  },
  "type": "function"
 },
 "gpytorch.module._pyro_sample_from_prior": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "closure",
    "gpytorch.module.pyro",
    "hasattr",
    "set",
    "setting_closure"
   ]
  },
  "type": "function"
 },
 "gpytorch.module._set_strict": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "hasattr",
    "set"
   ]
  },
  "type": "function"
 },
 "gpytorch.module._validate_module_outputs": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "gpytorch.module.torch",
    "isinstance",
    "len",
    "torch.distributions.Distribution",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.module.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "gpytorch.module.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "gpytorch.module.pyro": {
  "data": {
   "shadows": "pyro"
  },
  "type": "import"
 },
 "gpytorch.module.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.priors": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "gpytorch.priors.horseshoe_prior": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.horseshoe_prior.HalfCauchy": {
  "data": {
   "shadows": "torch.distributions.HalfCauchy"
  },
  "type": "import"
 },
 "gpytorch.priors.horseshoe_prior.HorseshoePrior": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.priors.prior.Prior",
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.real"
   ]
  },
  "type": "class"
 },
 "gpytorch.priors.horseshoe_prior.HorseshoePrior.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "float",
    "gpytorch.priors.horseshoe_prior.math",
    "gpytorch.priors.horseshoe_prior.torch",
    "isinstance",
    "numbers.Number",
    "super",
    "torch.nn.Module.__init__"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.horseshoe_prior.HorseshoePrior.expand": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "gpytorch.priors.horseshoe_prior.HorseshoePrior",
    "gpytorch.priors.horseshoe_prior.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.horseshoe_prior.HorseshoePrior.log_prob": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gpytorch.priors.horseshoe_prior.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.horseshoe_prior.HorseshoePrior.rsample": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "gpytorch.priors.horseshoe_prior.torch",
    "torch.distributions.HalfCauchy",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.horseshoe_prior.Normal": {
  "data": {
   "shadows": "torch.distributions.Normal"
  },
  "type": "import"
 },
 "gpytorch.priors.horseshoe_prior.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "gpytorch.priors.horseshoe_prior.Prior": {
  "data": {
   "shadows": "gpytorch.priors.prior.Prior"
  },
  "type": "import"
 },
 "gpytorch.priors.horseshoe_prior.TModule": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.priors.horseshoe_prior.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "gpytorch.priors.horseshoe_prior.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.priors.horseshoe_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.priors.lkj_prior": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.lkj_prior.LKJCholeskyFactorPrior": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "gpytorch.priors.lkj_prior.LKJPrior",
    "torch.distributions.constraints.lower_cholesky"
   ]
  },
  "type": "class"
 },
 "gpytorch.priors.lkj_prior.LKJCholeskyFactorPrior.log_prob": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "_is_valid_correlation_matrix_cholesky_factor",
    "any",
    "gpytorch.priors.lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior.LKJCovariancePrior": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "gpytorch.priors.lkj_prior.LKJPrior"
   ]
  },
  "type": "class"
 },
 "gpytorch.priors.lkj_prior.LKJCovariancePrior.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.lkj_prior.LKJPrior",
    "gpytorch.priors.lkj_prior.torch",
    "int",
    "isinstance",
    "super",
    "torch.nn.Module.__init__"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior.LKJCovariancePrior.log_prob": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "_batch_form_diag",
    "gpytorch.priors.lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior.LKJPrior": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.positive_definite",
    "torch.distributions.constraints.positive_integer"
   ]
  },
  "type": "class"
 },
 "gpytorch.priors.lkj_prior.LKJPrior.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "gpytorch.priors.lkj_prior.LKJPrior",
    "gpytorch.priors.lkj_prior.math",
    "gpytorch.priors.lkj_prior.torch",
    "int",
    "isinstance",
    "numbers.Number",
    "super",
    "torch.nn.Module.__init__"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior.LKJPrior.log_prob": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "_is_valid_correlation_matrix",
    "any"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "gpytorch.priors.lkj_prior.TModule": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.priors.lkj_prior._batch_form_diag": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "gpytorch.priors.lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior._is_valid_correlation_matrix": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "all",
    "gpytorch.priors.lkj_prior.torch",
    "torch.distributions.constraints.positive_definite.check"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior._is_valid_correlation_matrix_cholesky_factor": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "gpytorch.priors.lkj_prior.torch",
    "torch.distributions.constraints.lower_cholesky.check"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "gpytorch.priors.lkj_prior.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.priors.lkj_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.priors.prior": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.prior.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "gpytorch.priors.prior.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.priors.prior.Prior": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "abc.ABC",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "gpytorch.priors.prior.Prior.log_prob": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpytorch.priors.prior.Prior",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.prior.Prior.transform": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "gpytorch.priors.smoothed_box_prior": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.smoothed_box_prior.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.real"
   ]
  },
  "type": "class"
 },
 "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior._M": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "gpytorch.priors.smoothed_box_prior.math",
    "gpytorch.priors.smoothed_box_prior.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NormalPrior",
    "ValueError",
    "float",
    "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior",
    "gpytorch.priors.smoothed_box_prior.torch",
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.constraints.less_than",
    "torch.distributions.utils.broadcast_all",
    "torch.nn.Module.__init__"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior._c": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior._log_prob": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior._r": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior.log_prob": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "gpytorch.priors.smoothed_box_prior.TModule": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.priors.smoothed_box_prior.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "gpytorch.priors.smoothed_box_prior.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "gpytorch.priors.smoothed_box_prior.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.priors.smoothed_box_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.priors.torch_priors": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.torch_priors.Gamma": {
  "data": {
   "shadows": "torch.distributions.Gamma"
  },
  "type": "import"
 },
 "gpytorch.priors.torch_priors.GammaPrior": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "torch.distributions.Gamma"
   ]
  },
  "type": "class"
 },
 "gpytorch.priors.torch_priors.GammaPrior.__call__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "super",
    "torch.distributions.Gamma"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.GammaPrior.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "_bufferize_attributes",
    "torch.distributions.Gamma.__init__",
    "torch.nn.Module.__init__"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.GammaPrior.expand": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "gpytorch.priors.torch_priors.GammaPrior",
    "gpytorch.priors.torch_priors.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.LogNormal": {
  "data": {
   "shadows": "torch.distributions.LogNormal"
  },
  "type": "import"
 },
 "gpytorch.priors.torch_priors.LogNormalPrior": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "torch.distributions.LogNormal"
   ]
  },
  "type": "class"
 },
 "gpytorch.priors.torch_priors.LogNormalPrior.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "torch.distributions.LogNormal.__init__",
    "torch.nn.Module.__init__"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.LogNormalPrior.expand": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "gpytorch.priors.torch_priors.LogNormalPrior",
    "gpytorch.priors.torch_priors.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.MVN_LAZY_PROPERTIES": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "gpytorch.priors.torch_priors.MultivariateNormal": {
  "data": {
   "shadows": "torch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "gpytorch.priors.torch_priors.MultivariateNormalPrior": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "torch.distributions.MultivariateNormal"
   ]
  },
  "type": "class"
 },
 "gpytorch.priors.torch_priors.MultivariateNormalPrior.__init__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "_bufferize_attributes",
    "torch.distributions.MultivariateNormal.__init__",
    "torch.nn.Module.__init__"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.MultivariateNormalPrior.cpu": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "_del_attributes",
    "gpytorch.priors.torch_priors.MVN_LAZY_PROPERTIES"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.MultivariateNormalPrior.cuda": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "_del_attributes",
    "gpytorch.priors.torch_priors.MVN_LAZY_PROPERTIES"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.MultivariateNormalPrior.expand": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "gpytorch.priors.torch_priors.MultivariateNormalPrior",
    "gpytorch.priors.torch_priors.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.Normal": {
  "data": {
   "shadows": "torch.distributions.Normal"
  },
  "type": "import"
 },
 "gpytorch.priors.torch_priors.NormalPrior": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "torch.distributions.Normal"
   ]
  },
  "type": "class"
 },
 "gpytorch.priors.torch_priors.NormalPrior.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "_bufferize_attributes",
    "torch.distributions.Normal.__init__",
    "torch.nn.Module.__init__"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.NormalPrior.expand": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.priors.torch_priors.NormalPrior",
    "gpytorch.priors.torch_priors.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.TModule": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.priors.torch_priors.Uniform": {
  "data": {
   "shadows": "torch.distributions.Uniform"
  },
  "type": "import"
 },
 "gpytorch.priors.torch_priors.UniformPrior": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "torch.distributions.Uniform"
   ]
  },
  "type": "class"
 },
 "gpytorch.priors.torch_priors.UniformPrior.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "torch.distributions.Uniform.__init__",
    "torch.nn.Module.__init__"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.UniformPrior.expand": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "gpytorch.priors.torch_priors.UniformPrior",
    "gpytorch.priors.torch_priors.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.priors.utils": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.utils._bufferize_attributes": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "delattr",
    "getattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.utils._del_attributes": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "AttributeError",
    "delattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.wishart_prior": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.wishart_prior.InverseWishartPrior": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.positive_definite"
   ]
  },
  "type": "class"
 },
 "gpytorch.priors.wishart_prior.InverseWishartPrior.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "gpytorch.priors.wishart_prior.InverseWishartPrior",
    "gpytorch.priors.wishart_prior.math",
    "gpytorch.priors.wishart_prior.torch",
    "isinstance",
    "numbers.Number",
    "super",
    "torch.nn.Module.__init__"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.wishart_prior.InverseWishartPrior.log_prob": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "gpytorch.priors.wishart_prior.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.wishart_prior.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "gpytorch.priors.wishart_prior.TModule": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.priors.wishart_prior.WishartPrior": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.positive_definite"
   ]
  },
  "type": "class"
 },
 "gpytorch.priors.wishart_prior.WishartPrior.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "gpytorch.priors.wishart_prior.WishartPrior",
    "gpytorch.priors.wishart_prior.math",
    "gpytorch.priors.wishart_prior.torch",
    "isinstance",
    "numbers.Number",
    "super",
    "torch.nn.Module.__init__"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.wishart_prior.WishartPrior.log_prob": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "gpytorch.priors.wishart_prior.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.priors.wishart_prior.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "gpytorch.priors.wishart_prior.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.priors.wishart_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.settings": {
  "data": {},
  "type": "module"
 },
 "gpytorch.settings._fast_covar_root_decomposition": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings._fast_log_prob": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings._fast_solves": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings._feature_flag": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings._feature_flag.__enter__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "gpytorch.settings._feature_flag.__exit__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "gpytorch.settings._feature_flag.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "gpytorch.settings._feature_flag._set_state": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.settings._feature_flag.off": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.settings._feature_flag.on": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.settings._use_eval_tolerance": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings._value_context": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings._value_context.__enter__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "gpytorch.settings._value_context.__exit__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "gpytorch.settings._value_context.__init__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "gpytorch.settings._value_context._set_value": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.settings._value_context.value": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.settings.cg_tolerance": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "gpytorch.settings._value_context"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.debug": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.detach_test_caches": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.deterministic_probes": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.deterministic_probes._set_state": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.settings.eval_cg_tolerance": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "gpytorch.settings._value_context"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.fast_computations": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "gpytorch.settings._fast_covar_root_decomposition",
    "gpytorch.settings._fast_log_prob",
    "gpytorch.settings._fast_solves",
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.fast_computations.__enter__": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "gpytorch.settings.fast_computations.__exit__": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "gpytorch.settings.fast_computations.__init__": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "gpytorch.settings._fast_covar_root_decomposition",
    "gpytorch.settings._fast_log_prob",
    "gpytorch.settings._fast_solves"
   ]
  },
  "type": "function"
 },
 "gpytorch.settings.fast_pred_samples": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.fast_pred_var": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.fast_pred_var.__enter__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "gpytorch.settings.fast_pred_var",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.settings.fast_pred_var.__exit__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "gpytorch.settings.fast_pred_var",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.settings.fast_pred_var.__init__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "gpytorch.settings.fast_pred_var",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.settings.fast_pred_var._set_num_probe_vectors": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.settings.fast_pred_var.num_probe_vectors": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.settings.lazily_evaluate_kernels": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.max_cg_iterations": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "gpytorch.settings._value_context"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.max_cholesky_size": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "gpytorch.settings._value_context"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.max_eager_kernel_size": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "gpytorch.settings._value_context"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.max_lanczos_quadrature_iterations": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "gpytorch.settings._value_context"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.max_preconditioner_size": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "gpytorch.settings._value_context"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.max_root_decomposition_size": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "gpytorch.settings._value_context"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.memory_efficient": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.min_preconditioning_size": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "gpytorch.settings._value_context"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.num_gauss_hermite_locs": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "gpytorch.settings._value_context"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.num_likelihood_samples": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "gpytorch.settings._value_context"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.num_trace_samples": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "gpytorch.settings._value_context"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.preconditioner_tolerance": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "gpytorch.settings._value_context"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.prior_mode": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.skip_logdet_forward": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.skip_posterior_variances": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.terminate_cg_by_size": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.trace_mode": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.tridiagonal_jitter": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "gpytorch.settings._value_context"
   ]
  },
  "type": "class"
 },
 "gpytorch.settings.use_toeplitz": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "gpytorch.settings._feature_flag"
   ]
  },
  "type": "class"
 },
 "gpytorch.test": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.base_kernel_test_case": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.create_data_double_batch": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.create_data_no_batch": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.create_data_single_batch": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.create_kernel_ard": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.create_kernel_no_ard": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_active_dims_list": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.torch",
    "kernel",
    "kernel_basic"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_active_dims_range": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.torch",
    "kernel",
    "kernel_basic",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_kernel_getitem_double_batch": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.torch",
    "kernel",
    "new_kernel"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_kernel_getitem_single_batch": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.torch",
    "kernel",
    "new_kernel"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_no_batch_kernel_double_batch_x_ard": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpytorch.test.base_kernel_test_case.torch",
    "kernel",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_no_batch_kernel_double_batch_x_no_ard": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.torch",
    "kernel",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_no_batch_kernel_single_batch_x_no_ard": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.torch",
    "kernel"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_single_batch_kernel_single_batch_x_no_ard": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.torch",
    "kernel"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_smoke_double_batch_kernel_double_batch_x_ard": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "NotImplementedError",
    "gpytorch.test.base_kernel_test_case.torch",
    "kernel"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_smoke_double_batch_kernel_double_batch_x_no_ard": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.torch",
    "kernel"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.test.base_kernel_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.base_likelihood_test_case": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase._create_conditional_input": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpytorch.test.base_likelihood_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase._create_marginal_input": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.test.base_likelihood_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase._create_targets": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.test.base_likelihood_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase._test_conditional": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "input",
    "input.shape",
    "isinstance",
    "len",
    "likelihood",
    "torch.distributions.Distribution"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase._test_log_marginal": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "gpytorch.likelihoods.Likelihood.log_marginal",
    "gpytorch.test.base_likelihood_test_case.gpytorch",
    "gpytorch.test.base_likelihood_test_case.torch",
    "input",
    "len",
    "likelihood",
    "likelihood.log_marginal",
    "likelihood.max_plate_nesting"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase._test_log_prob": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "gpytorch.likelihoods.Likelihood.expected_log_prob",
    "gpytorch.test.base_likelihood_test_case.gpytorch",
    "gpytorch.test.base_likelihood_test_case.torch",
    "input",
    "len",
    "likelihood",
    "likelihood.expected_log_prob",
    "likelihood.max_plate_nesting"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase._test_marginal": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "gpytorch.likelihoods.Likelihood.marginal",
    "gpytorch.test.base_likelihood_test_case.gpytorch",
    "input",
    "input.sample",
    "isinstance",
    "len",
    "likelihood",
    "likelihood.max_plate_nesting",
    "torch.distributions.Distribution"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase.create_likelihood": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase.test_batch": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "gpytorch.test.base_likelihood_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase.test_multi_batch": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "gpytorch.test.base_likelihood_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase.test_nonbatch": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "gpytorch.test.base_likelihood_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.Distribution": {
  "data": {
   "shadows": "torch.distributions.Distribution"
  },
  "type": "import"
 },
 "gpytorch.test.base_likelihood_test_case.Likelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.Likelihood"
  },
  "type": "import"
 },
 "gpytorch.test.base_likelihood_test_case.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "gpytorch.test.base_likelihood_test_case.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.test.base_likelihood_test_case.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "gpytorch.test.base_likelihood_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.base_mean_test_case": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.base_mean_test_case.BaseMeanTestCase": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.test.base_mean_test_case.BaseMeanTestCase.create_mean": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_mean_test_case.BaseMeanTestCase.test_forward_mat": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gpytorch.test.base_mean_test_case.torch",
    "mean"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_mean_test_case.BaseMeanTestCase.test_forward_mat_batch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "gpytorch.test.base_mean_test_case.torch",
    "mean"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_mean_test_case.BaseMeanTestCase.test_forward_mat_multi_batch": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpytorch.test.base_mean_test_case.torch",
    "mean"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_mean_test_case.BaseMeanTestCase.test_forward_vec": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "gpytorch.test.base_mean_test_case.torch",
    "mean"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_mean_test_case.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.test.base_mean_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.base_test_case": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.base_test_case.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "gpytorch.test.base_test_case.BaseTestCase": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "gpytorch.test.base_test_case.BaseTestCase.assertAllClose": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "gpytorch.test.base_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_test_case.BaseTestCase.assertEqual": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "AssertionError",
    "gpytorch.test.base_test_case.torch",
    "type"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_test_case.BaseTestCase.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.os",
    "gpytorch.test.base_test_case.random",
    "gpytorch.test.base_test_case.torch",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_test_case.BaseTestCase.tearDown": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.torch",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.base_test_case.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "gpytorch.test.base_test_case.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "gpytorch.test.base_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase"
   ]
  },
  "type": "class"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase._test_inv_matmul": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case._ensure_symmetric_grad",
    "gpytorch.test.lazy_tensor_test_case.gpytorch",
    "gpytorch.test.lazy_tensor_test_case.math",
    "gpytorch.test.lazy_tensor_test_case.torch",
    "unittest.mock.MagicMock",
    "unittest.mock.patch",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase._test_inv_quad_logdet": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.gpytorch",
    "gpytorch.test.lazy_tensor_test_case.math",
    "gpytorch.test.lazy_tensor_test_case.torch",
    "range",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_add_diag": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "enumerate",
    "gpytorch.test.lazy_tensor_test_case.torch",
    "itertools.product",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_diag": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_matmul_matrix": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_matmul_matrix_broadcast": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_matmul_matrix_cholesky": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_matmul_matrix_with_left": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_matmul_vector": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_matmul_vector_with_left": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_matmul_vector_with_left_cholesky": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_quad_logdet": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_quad_logdet_no_reduce": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_quad_logdet_no_reduce_cholesky": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_prod": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.gpytorch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_root_decomposition": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.gpytorch",
    "gpytorch.test.lazy_tensor_test_case.math",
    "gpytorch.test.lazy_tensor_test_case.torch",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_root_decomposition_cholesky": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_root_inv_decomposition": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_sample": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase._test_matmul": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.create_lazy_tensor": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.evaluate_lazy_tensor": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_constant_mul": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_evaluate": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_getitem": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "Ellipsis",
    "itertools.product",
    "slice"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_getitem_tensor_index": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "Ellipsis",
    "gpytorch.test.lazy_tensor_test_case.gpytorch",
    "gpytorch.test.lazy_tensor_test_case.torch",
    "itertools.product",
    "slice"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_matmul_matrix": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_matmul_matrix_broadcast": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_matmul_vec": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_permute": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_quad_form_derivative": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.gpytorch",
    "gpytorch.test.lazy_tensor_test_case.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_sum": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_transpose_batch": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "itertools.combinations",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case._ensure_symmetric_grad": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.model_test_case": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.create_batch_likelihood_and_labels": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "gpytorch.test.model_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.create_batch_test_data": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "gpytorch.test.model_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.create_likelihood_and_labels": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.create_model": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.create_test_data": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.test_batch_forward_eval": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "model",
    "model.eval"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.test_batch_forward_train": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "model",
    "model.train"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.test_forward_eval": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "model",
    "model.eval"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.test_forward_train": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "model"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.test_multi_batch_forward_eval": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "gpytorch.test.model_test_case.torch",
    "model",
    "model.eval"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.test_multi_batch_forward_train": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "gpytorch.test.model_test_case.torch",
    "model",
    "model.train"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.VariationalModelTestCase": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "gpytorch.test.model_test_case.BaseModelTestCase"
   ]
  },
  "type": "class"
 },
 "gpytorch.test.model_test_case.VariationalModelTestCase.test_backward_train": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "gpytorch.test.model_test_case.gpytorch",
    "gpytorch.test.model_test_case.torch",
    "mll",
    "model",
    "model.named_parameters",
    "model.parameters",
    "model.train"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.VariationalModelTestCase.test_batch_backward_train": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "gpytorch.test.model_test_case.gpytorch",
    "gpytorch.test.model_test_case.torch",
    "mll",
    "model",
    "model.named_parameters",
    "model.parameters",
    "model.train"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.VariationalModelTestCase.test_multi_batch_backward_train": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "gpytorch.test.model_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.test.model_test_case.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "gpytorch.test.model_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.utils": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.utils.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "gpytorch.test.utils.approx_equal": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.test.utils.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "gpytorch.test.utils.get_cuda_max_memory_allocations": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gpytorch.test.utils.torch",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.utils.least_used_cuda_device": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "gpytorch.test.utils.get_cuda_max_memory_allocations",
    "gpytorch.test.utils.torch",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.variational_test_case": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.variational_test_case.ExtraComputationWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.ExtraComputationWarning"
  },
  "type": "import"
 },
 "gpytorch.test.variational_test_case.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase._eval_iter": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "any",
    "gpytorch.test.variational_test_case.torch",
    "gpytorch.test.variational_test_case.warnings",
    "gpytorch.utils.warnings.ExtraComputationWarning",
    "issubclass",
    "model",
    "model.cuda",
    "model.eval"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase._make_model_and_likelihood": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_SVGPRegressionModel",
    "gpytorch.test.variational_test_case.gpytorch",
    "gpytorch.test.variational_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase._make_model_and_likelihood._SVGPRegressionModel": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.gpytorch"
   ]
  },
  "type": "class"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase._make_model_and_likelihood._SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "distribution_cls",
    "gpytorch.test.variational_test_case.gpytorch",
    "strategy_cls",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase._make_model_and_likelihood._SVGPRegressionModel.forward": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.gpytorch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase._training_iter": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "any",
    "gpytorch.test.variational_test_case.gpytorch",
    "gpytorch.test.variational_test_case.torch",
    "gpytorch.test.variational_test_case.warnings",
    "gpytorch.utils.warnings.ExtraComputationWarning",
    "issubclass",
    "len",
    "mll",
    "mll_cls",
    "model",
    "model.named_parameters"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.batch_shape": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.cuda": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.distribution_cls": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.event_shape": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.likelihood_cls": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.gpytorch",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.mll_cls": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.strategy_cls": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_eval_iteration": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.gpytorch",
    "gpytorch.test.variational_test_case.torch",
    "model",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_eval_larger_pred_batch": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_eval_smaller_pred_batch": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_training_all_batch_zero_mean": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_training_iteration": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.gpytorch",
    "gpytorch.test.variational_test_case.torch",
    "model",
    "model.variational_strategy.variational_params_initialized.item",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_training_iteration_batch_data": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_training_iteration_batch_inducing": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_training_iteration_batch_model": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "gpytorch.test.variational_test_case.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "gpytorch.test.variational_test_case.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "gpytorch.test.variational_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.variational_test_case.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.utils": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "gpytorch.utils.broadcasting": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.broadcasting._matmul_broadcast_shape": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.utils.broadcasting._mul_broadcast_shape",
    "gpytorch.utils.broadcasting.torch",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.broadcasting._mul_broadcast_shape": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "gpytorch.utils.broadcasting.torch",
    "len",
    "list",
    "max",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.broadcasting._pad_with_singletons": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.broadcasting.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.cholesky": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.cholesky.psd_safe_cholesky": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "NanError",
    "RuntimeError",
    "gpytorch.utils.cholesky.torch",
    "gpytorch.utils.cholesky.warnings",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.cholesky.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.cholesky.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.utils.deprecation": {
  "data": {
   "symbols_in_volume": [
    "gpytorch.utils.deprecation.torch",
    "isinstance",
    "unittest.mock.MagicMock"
   ]
  },
  "type": "module"
 },
 "gpytorch.utils.deprecation.DeprecationError": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "gpytorch.utils.deprecation.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "gpytorch.utils.deprecation._deprecate_kwarg": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "gpytorch.utils.deprecation.warnings"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.deprecation._deprecate_kwarg_with_transform": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpytorch.utils.deprecation.warnings",
    "transform"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.deprecation._deprecate_renamed_methods": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "gpytorch.utils.deprecation._deprecated_renamed_method"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.deprecation._deprecated_function_for": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "gpytorch.utils.deprecation._deprecated_function_for._deprecated_function": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "DeprecationWarning",
    "function",
    "gpytorch.utils.deprecation.functools",
    "gpytorch.utils.deprecation.warnings"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.deprecation._deprecated_renamed_method": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.deprecation._deprecated_renamed_method._deprecated_method": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "DeprecationWarning",
    "getattr",
    "gpytorch.utils.deprecation.warnings"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.deprecation.bool_compat": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "gpytorch.utils.deprecation.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "gpytorch.utils.deprecation.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.deprecation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.utils.errors": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.errors.NanError": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "gpytorch.utils.errors.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "gpytorch.utils.fft": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.fft.fft1": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "gpytorch.utils.fft.torch",
    "input"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.fft.ifft1": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.utils.fft.torch",
    "input.device",
    "input.ifft"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.fft.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.getitem": {
  "data": {
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "module"
 },
 "gpytorch.utils.getitem._compute_getitem_size": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "IndexError",
    "RuntimeError",
    "_mul_broadcast_shape",
    "enumerate",
    "gpytorch.utils.getitem._noop_index",
    "gpytorch.utils.getitem.torch",
    "int",
    "isinstance",
    "len",
    "list",
    "range",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.getitem._convert_indices_to_tensors": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "_is_tensor_index_moved_to_start",
    "_mul_broadcast_shape",
    "_pad_with_singletons",
    "enumerate",
    "gpytorch.utils.getitem.torch",
    "int",
    "isinstance",
    "len",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.getitem._equal_indices": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "gpytorch.utils.getitem.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.getitem._is_noop_index": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "gpytorch.utils.getitem._noop_index",
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.getitem._is_tensor_index_moved_to_start": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "gpytorch.utils.getitem.torch",
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.getitem._noop_index": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "gpytorch.utils.getitem.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.grid": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.grid.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "gpytorch.utils.grid.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "gpytorch.utils.grid.choose_grid_size": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "gpytorch.utils.grid.math",
    "int"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.grid.convert_legacy_grid": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "gpytorch.utils.grid.torch",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.grid.create_data_from_grid": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "all",
    "gpytorch.utils.grid.convert_legacy_grid",
    "gpytorch.utils.grid.torch",
    "len",
    "range",
    "reversed",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.grid.create_grid": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "bool",
    "float",
    "gpytorch.utils.grid.torch",
    "int",
    "len",
    "range",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.grid.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.utils.grid.scale_to_bounds": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "gpytorch.utils.grid.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.interpolation": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.interpolation.Interpolation": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.utils.interpolation.Interpolation._cubic_interpolation_kernel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "gpytorch.utils.interpolation.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.interpolation.Interpolation.interpolate": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "RuntimeError",
    "convert_legacy_grid",
    "functools.reduce",
    "gpytorch.utils.interpolation.torch",
    "len",
    "operator.mul",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.interpolation.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "gpytorch.utils.interpolation.left_interp": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "_matmul_broadcast_shape",
    "gpytorch.utils.interpolation.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.interpolation.left_t_interp": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "_matmul_broadcast_shape",
    "cls",
    "dsmm",
    "getattr",
    "gpytorch.utils.interpolation.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.interpolation.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "gpytorch.utils.interpolation.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "gpytorch.utils.interpolation.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.lanczos": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.lanczos.lanczos_tridiag": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "RuntimeError",
    "callable",
    "gpytorch.utils.lanczos.torch",
    "len",
    "matmul_closure",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.lanczos.lanczos_tridiag_to_diag": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "gpytorch.utils.lanczos.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.lanczos.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.linear_cg": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.linear_cg._default_preconditioner": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "gpytorch.utils.linear_cg._jit_linear_cg_updates": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.utils.linear_cg.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.linear_cg._jit_linear_cg_updates_no_precond": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "gpytorch.utils.linear_cg._jit_linear_cg_updates",
    "gpytorch.utils.linear_cg.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.linear_cg.linear_cg": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "callable",
    "gpytorch.utils.linear_cg._default_preconditioner",
    "gpytorch.utils.linear_cg._jit_linear_cg_updates",
    "gpytorch.utils.linear_cg._jit_linear_cg_updates_no_precond",
    "gpytorch.utils.linear_cg.torch",
    "gpytorch.utils.linear_cg.warnings",
    "len",
    "matmul_closure",
    "min",
    "preconditioner",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.linear_cg.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.linear_cg.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.utils.memoize": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.memoize.add_to_cache": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dict",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.memoize.cached": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gpytorch.utils.memoize.functools"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.memoize.cached.g": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "gpytorch.utils.memoize.add_to_cache",
    "gpytorch.utils.memoize.functools",
    "gpytorch.utils.memoize.get_from_cache",
    "gpytorch.utils.memoize.is_in_cache",
    "method"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.memoize.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "gpytorch.utils.memoize.get_from_cache": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "RuntimeError",
    "is_in_cache"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.memoize.is_cached": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.memoize.is_in_cache": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.pivoted_cholesky": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.pivoted_cholesky.pivoted_cholesky": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "enumerate",
    "gpytorch.utils.pivoted_cholesky.torch",
    "isinstance",
    "lazify",
    "min",
    "slice"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.pivoted_cholesky.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.prod": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.quadrature": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.quadrature.GaussHermiteQuadrature1D": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "gpytorch.utils.quadrature.GaussHermiteQuadrature1D.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.quadrature.GaussHermiteQuadrature1D._apply": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "fn",
    "gpytorch.utils.quadrature.GaussHermiteQuadrature1D",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.quadrature.GaussHermiteQuadrature1D._locs_and_weights": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "gpytorch.utils.quadrature.torch",
    "numpy.polynomial.hermite.hermgauss"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.quadrature.GaussHermiteQuadrature1D.forward": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "_pad_with_singletons",
    "func",
    "gpytorch.utils.quadrature.math",
    "gpytorch.utils.quadrature.torch",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.quadrature.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.utils.quadrature.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.utils.quadrature.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpytorch.utils.quadrature.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.sparse": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.sparse.bdsmm": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "_matmul_broadcast_shape",
    "gpytorch.utils.sparse.torch",
    "len",
    "list",
    "range",
    "sparse_repeat",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.sparse.make_sparse_from_indices_and_values": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "RuntimeError",
    "cls",
    "enumerate",
    "getattr",
    "gpytorch.utils.sparse.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.sparse.sparse_eye": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "cls",
    "getattr",
    "gpytorch.utils.sparse.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.sparse.sparse_getitem": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "gpytorch.utils.sparse.torch",
    "int",
    "isinstance",
    "len",
    "list",
    "range",
    "slice",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.sparse.sparse_repeat": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "enumerate",
    "gpytorch.utils.sparse.torch",
    "isinstance",
    "len",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.sparse.to_sparse": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "getattr",
    "gpytorch.utils.sparse.torch",
    "klass"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.sparse.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.stochastic_lq": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.stochastic_lq.StochasticLQ": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "gpytorch.utils.stochastic_lq.StochasticLQ.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "gpytorch.utils.stochastic_lq.StochasticLQ.evaluate": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "func",
    "gpytorch.utils.stochastic_lq.torch",
    "range"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.stochastic_lq.StochasticLQ.lanczos_batch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "gpytorch.utils.stochastic_lq.torch",
    "lanczos_tridiag"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.stochastic_lq.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.toeplitz": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.toeplitz.sym_toeplitz": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "gpytorch.utils.toeplitz.toeplitz"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.toeplitz.sym_toeplitz_derivative_quadratic_form": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "gpytorch.utils.toeplitz.toeplitz_matmul",
    "gpytorch.utils.toeplitz.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.toeplitz.sym_toeplitz_getitem": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "gpytorch.utils.toeplitz.toeplitz_getitem"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.toeplitz.sym_toeplitz_matmul": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "gpytorch.utils.toeplitz.toeplitz_matmul"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.toeplitz.toeplitz": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "gpytorch.utils.toeplitz.torch",
    "len",
    "list",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.toeplitz.toeplitz_getitem": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.toeplitz.toeplitz_matmul": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.utils.toeplitz.torch",
    "type"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.toeplitz.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.transforms": {
  "data": {
   "symbols_in_volume": [
    "gpytorch.utils.transforms.inv_sigmoid",
    "gpytorch.utils.transforms.inv_softplus",
    "gpytorch.utils.transforms.torch"
   ]
  },
  "type": "module"
 },
 "gpytorch.utils.transforms.TRANSFORM_REGISTRY": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "gpytorch.utils.transforms._get_inv_param_transform": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.transforms.inv_sigmoid": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "gpytorch.utils.transforms.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.transforms.inv_softplus": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "gpytorch.utils.transforms.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.utils.transforms.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.warnings": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.warnings.ExtraComputationWarning": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "gpytorch.utils.warnings.GPInputWarning": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "gpytorch.utils.warnings.NumericalWarning": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "RuntimeWarning"
   ]
  },
  "type": "class"
 },
 "gpytorch.utils.warnings.OldVersionWarning": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "gpytorch.variational": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "gpytorch.variational._variational_distribution": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational._variational_distribution.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution.__call__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "DeprecationWarning",
    "NotImplementedError",
    "gpytorch.variational._variational_distribution.warnings"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution.__getattr__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpytorch.variational._variational_distribution.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.variational._variational_distribution.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution.forward": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution.initialize_variational_distribution": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational._variational_distribution.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.variational._variational_distribution.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational._variational_distribution.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.variational._variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational._variational_strategy.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy.__call__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "RuntimeError",
    "_mul_broadcast_shape",
    "delattr",
    "dict",
    "hasattr",
    "isinstance",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "gpytorch.variational._variational_strategy.torch",
    "object.__setattr__",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy.forward": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy.kl_divergence": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "gpytorch.variational._variational_strategy.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty",
    "cached"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy.train": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "delattr",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy.variational_distribution": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "cached",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "gpytorch.variational._variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.additive_grid_interpolation_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy",
    "gpytorch.variational.additive_grid_interpolation_variational_strategy.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy._compute_grid": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy.forward": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Delta",
    "MultivariateNormal",
    "RuntimeError",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "MultivariateNormal",
    "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.additive_grid_interpolation_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.cholesky_variational_distribution": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.cholesky_variational_distribution.CholeskyVariationalDistribution": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.variational.cholesky_variational_distribution.CholeskyVariationalDistribution.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpytorch.variational.cholesky_variational_distribution.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.cholesky_variational_distribution.CholeskyVariationalDistribution.forward": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "CholLazyTensor",
    "MultivariateNormal",
    "gpytorch.variational.cholesky_variational_distribution.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.cholesky_variational_distribution.CholeskyVariationalDistribution.initialize_variational_distribution": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "gpytorch.variational.cholesky_variational_distribution.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.cholesky_variational_distribution.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.delta_variational_distribution": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.delta_variational_distribution.DeltaVariationalDistribution": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.variational.delta_variational_distribution.DeltaVariationalDistribution.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "gpytorch.variational.delta_variational_distribution.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.delta_variational_distribution.DeltaVariationalDistribution.forward": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Delta"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.delta_variational_distribution.DeltaVariationalDistribution.initialize_variational_distribution": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "gpytorch.variational.delta_variational_distribution.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.delta_variational_distribution.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.grid_interpolation_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.grid_interpolation_variational_strategy.GridInterpolationVariationalStrategy": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.variational.grid_interpolation_variational_strategy.GridInterpolationVariationalStrategy.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "float",
    "gpytorch.variational.grid_interpolation_variational_strategy.GridInterpolationVariationalStrategy",
    "gpytorch.variational.grid_interpolation_variational_strategy.torch",
    "int",
    "len",
    "object.__setattr__",
    "pow",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.grid_interpolation_variational_strategy.GridInterpolationVariationalStrategy._compute_grid": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Interpolation",
    "_mul_broadcast_shape",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.grid_interpolation_variational_strategy.GridInterpolationVariationalStrategy.forward": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "InterpolatedLazyTensor",
    "MultivariateNormal",
    "RuntimeError",
    "left_interp"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.grid_interpolation_variational_strategy.GridInterpolationVariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "MultivariateNormal",
    "cached",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.grid_interpolation_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.mean_field_variational_distribution": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.mean_field_variational_distribution.MeanFieldVariationalDistribution": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.variational.mean_field_variational_distribution.MeanFieldVariationalDistribution.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "gpytorch.variational.mean_field_variational_distribution.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.mean_field_variational_distribution.MeanFieldVariationalDistribution.forward": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "DiagLazyTensor",
    "MultivariateNormal",
    "gpytorch.variational.mean_field_variational_distribution.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.mean_field_variational_distribution.MeanFieldVariationalDistribution.initialize_variational_distribution": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "gpytorch.variational.mean_field_variational_distribution.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.mean_field_variational_distribution.MeanFieldVariationalDistribution.variational_stddev": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "gpytorch.variational.mean_field_variational_distribution.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.mean_field_variational_distribution.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.multitask_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.multitask_variational_strategy.MultitaskVariationalStrategy": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.variational.multitask_variational_strategy.MultitaskVariationalStrategy.__call__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.multitask_variational_strategy.MultitaskVariationalStrategy.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "gpytorch.variational.multitask_variational_strategy.MultitaskVariationalStrategy.kl_divergence": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.multitask_variational_strategy.MultitaskVariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.multitask_variational_strategy.MultitaskVariationalStrategy.variational_distribution": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.multitask_variational_strategy.MultitaskVariationalStrategy.variational_params_initialized": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.orthogonally_decoupled_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.orthogonally_decoupled_variational_strategy.OrthogonallyDecoupledVariationalStrategy": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.variational.orthogonally_decoupled_variational_strategy.OrthogonallyDecoupledVariationalStrategy.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.orthogonally_decoupled_variational_strategy.OrthogonallyDecoupledVariationalStrategy.forward": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "MultivariateNormal",
    "NotImplementedError",
    "gpytorch.variational.orthogonally_decoupled_variational_strategy.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.orthogonally_decoupled_variational_strategy.OrthogonallyDecoupledVariationalStrategy.kl_divergence": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "gpytorch.variational.orthogonally_decoupled_variational_strategy.OrthogonallyDecoupledVariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "MultivariateNormal",
    "cached",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.orthogonally_decoupled_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.unwhitened_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.unwhitened_variational_strategy.UnwhitenedVariationalStrategy": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "gpytorch.variational.unwhitened_variational_strategy.UnwhitenedVariationalStrategy._cholesky_factor": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "cached",
    "delazify",
    "psd_safe_cholesky"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.unwhitened_variational_strategy.UnwhitenedVariationalStrategy.forward": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "CachedCGLazyTensor",
    "CholLazyTensor",
    "DiagLazyTensor",
    "MultivariateNormal",
    "PsdSumLazyTensor",
    "RootLazyTensor",
    "RuntimeError",
    "ZeroLazyTensor",
    "_mul_broadcast_shape",
    "gpytorch.variational.unwhitened_variational_strategy.math",
    "gpytorch.variational.unwhitened_variational_strategy.torch",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.unwhitened_variational_strategy.UnwhitenedVariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "MultivariateNormal",
    "cached",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.unwhitened_variational_strategy.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.variational.unwhitened_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.variational_strategy.VariationalStrategy": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "gpytorch.variational.variational_strategy.VariationalStrategy.__call__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "RootLazyTensor",
    "delattr",
    "dict",
    "gpytorch.variational.variational_strategy.torch",
    "hasattr",
    "self",
    "self._cholesky_factor",
    "self._memoize_cache",
    "self._variational_distribution.initialize_variational_distribution",
    "self._variational_distribution.mean_init_std",
    "self.inducing_points",
    "self.updated_strategy.fill_",
    "self.variational_distribution",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.variational_strategy.VariationalStrategy.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "gpytorch.variational.variational_strategy._ensure_updated_strategy_flag_set",
    "gpytorch.variational.variational_strategy.torch",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.variational_strategy.VariationalStrategy._cholesky_factor": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "cached",
    "delazify",
    "psd_safe_cholesky"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.variational_strategy.VariationalStrategy.forward": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "MatmulLazyTensor",
    "MultivariateNormal",
    "SumLazyTensor",
    "gpytorch.variational.variational_strategy.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.variational_strategy.VariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "DiagLazyTensor",
    "MultivariateNormal",
    "cached",
    "gpytorch.variational.variational_strategy.torch",
    "property"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.variational_strategy._ensure_updated_strategy_flag_set": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.variational.variational_strategy.torch",
    "gpytorch.variational.variational_strategy.warnings",
    "list"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.variational_strategy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.variational.whitened_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.whitened_variational_strategy.WhitenedVariationalStrategy": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "gpytorch.variational.whitened_variational_strategy.WhitenedVariationalStrategy.__call__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "delattr",
    "dict",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.whitened_variational_strategy.WhitenedVariationalStrategy.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "DeprecationWarning",
    "gpytorch.variational.whitened_variational_strategy.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.whitened_variational_strategy.WhitenedVariationalStrategy.covar_trace": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "cached"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.whitened_variational_strategy.WhitenedVariationalStrategy.forward": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "CachedCGLazyTensor",
    "CholLazyTensor",
    "DiagLazyTensor",
    "MatmulLazyTensor",
    "MultivariateNormal",
    "PsdSumLazyTensor",
    "RootLazyTensor",
    "gpytorch.variational.whitened_variational_strategy.math",
    "gpytorch.variational.whitened_variational_strategy.torch",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.whitened_variational_strategy.WhitenedVariationalStrategy.initialize_variational_dist": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "gpytorch.variational.whitened_variational_strategy.torch"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.whitened_variational_strategy.WhitenedVariationalStrategy.kl_divergence": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.whitened_variational_strategy.WhitenedVariationalStrategy.mean_diff_inv_quad": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "cached"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.whitened_variational_strategy.WhitenedVariationalStrategy.prior_covar_logdet": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "cached"
   ]
  },
  "type": "function"
 },
 "gpytorch.variational.whitened_variational_strategy.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.variational.whitened_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.whitened_variational_strategy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test": {
  "data": {},
  "type": "module"
 },
 "test.constraints": {
  "data": {},
  "type": "module"
 },
 "test.constraints.test_constraints": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.constraints.test_constraints.unittest"
   ]
  },
  "type": "module"
 },
 "test.constraints.test_constraints.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.constraints.test_constraints.ExactGPModel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.constraints.test_constraints.ExactGPModel.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "super",
    "test.constraints.test_constraints.ExactGPModel",
    "test.constraints.test_constraints.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.ExactGPModel.forward": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestConstraintNaming": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.constraints.test_constraints.unittest"
   ]
  },
  "type": "class"
 },
 "test.constraints.test_constraints.TestConstraintNaming.test_constraint_by_name": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "test.constraints.test_constraints.ExactGPModel",
    "test.constraints.test_constraints.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestConstraintNaming.test_named_parameters_and_constraints": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "test.constraints.test_constraints.ExactGPModel",
    "test.constraints.test_constraints.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestGreaterThan": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.constraints.test_constraints.unittest"
   ]
  },
  "type": "class"
 },
 "test.constraints.test_constraints.TestGreaterThan.test_inverse_transform_float_greater_than": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestGreaterThan.test_inverse_transform_tensor_greater_than": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestGreaterThan.test_transform_float_greater_than": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch",
    "torch.nn.functional.softplus"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestGreaterThan.test_transform_tensor_greater_than": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch",
    "torch.nn.functional.softplus"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestInterval": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.constraints.test_constraints.unittest"
   ]
  },
  "type": "class"
 },
 "test.constraints.test_constraints.TestInterval.test_initial_value": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestInterval.test_inverse_transform_float_bounds": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestInterval.test_inverse_transform_tensor_bounds": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestInterval.test_transform_float_bounds": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch",
    "torch.sigmoid"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestInterval.test_transform_tensor_bounds": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch",
    "torch.sigmoid"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestLessThan": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.constraints.test_constraints.unittest"
   ]
  },
  "type": "class"
 },
 "test.constraints.test_constraints.TestLessThan.test_inverse_transform_float_less_than": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestLessThan.test_inverse_transform_tensor_less_than": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestLessThan.test_transform_float_less_than": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch",
    "torch.nn.functional.softplus"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestLessThan.test_transform_tensor_less_than": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch",
    "torch.nn.functional.softplus"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestPositive": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.constraints.test_constraints.unittest"
   ]
  },
  "type": "class"
 },
 "test.constraints.test_constraints.TestPositive.test_inverse_transform_float_positive": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestPositive.test_inverse_transform_tensor_positive": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestPositive.test_transform_float_positive": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch",
    "torch.nn.functional.softplus"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestPositive.test_transform_tensor_positive": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "test.constraints.test_constraints.gpytorch",
    "test.constraints.test_constraints.torch",
    "torch.nn.functional.softplus"
   ]
  },
  "type": "function"
 },
 "test.constraints.test_constraints.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.constraints.test_constraints.sigmoid": {
  "data": {
   "shadows": "torch.sigmoid"
  },
  "type": "import"
 },
 "test.constraints.test_constraints.softplus": {
  "data": {
   "shadows": "torch.nn.functional.softplus"
  },
  "type": "import"
 },
 "test.constraints.test_constraints.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.constraints.test_constraints.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.distributions": {
  "data": {},
  "type": "module"
 },
 "test.distributions.test_delta": {
  "data": {},
  "type": "module"
 },
 "test.distributions.test_delta.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.distributions.test_delta.TestDelta": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.distributions.test_delta.unittest"
   ]
  },
  "type": "class"
 },
 "test.distributions.test_delta.TestDelta.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "test.distributions.test_delta.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_delta.TestDelta.test_batch_log_prob": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "float",
    "gpytorch.distributions.Delta"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_delta.TestDelta.test_batch_log_prob_shape": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "gpytorch.distributions.Delta"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_delta.TestDelta.test_log_prob_sum": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.distributions.Delta"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_delta.TestDelta.test_mean_and_var": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "gpytorch.distributions.Delta",
    "numpy.mean",
    "numpy.var",
    "range"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_delta.dist": {
  "data": {
   "shadows": "gpytorch.distributions"
  },
  "type": "import"
 },
 "test.distributions.test_delta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.distributions.test_delta.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.distributions.test_delta.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.distributions.test_multitask_multivariate_normal.unittest"
   ]
  },
  "type": "module"
 },
 "test.distributions.test_multitask_multivariate_normal.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.distributions.test_multitask_multivariate_normal.unittest"
   ]
  },
  "type": "class"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.setUp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "test.distributions.test_multitask_multivariate_normal.os",
    "test.distributions.test_multitask_multivariate_normal.random",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.tearDown": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "hasattr",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_from_independent_mvns": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal.from_independent_mvns",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.DiagLazyTensor",
    "list",
    "range",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_from_independent_mvns_cuda": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_log_prob": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.lazy.DiagLazyTensor",
    "test.distributions.test_multitask_multivariate_normal.math",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_log_prob_cuda": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_from_batch": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.distributions.MultitaskMultivariateNormal.from_batch_mvn",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.DiagLazyTensor",
    "isinstance",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_from_repeat": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.distributions.MultitaskMultivariateNormal.from_repeated_mvn",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.DiagLazyTensor",
    "isinstance",
    "range",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_multivariate_normal": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_multivariate_normal_batch": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_multivariate_normal_batch_cuda": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_multivariate_normal_cuda": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_multivariate_normal_exceptions": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_multivariate_normal_exceptions_cuda": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multivariate_normal_batch_correlated_samples": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multivariate_normal_batch_correlated_samples_cuda": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multivariate_normal_correlated_samples": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multivariate_normal_correlated_samples_cuda": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multitask_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.distributions.test_multivariate_normal.unittest"
   ]
  },
  "type": "module"
 },
 "test.distributions.test_multivariate_normal.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.LazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.LazyTensor"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.TMultivariateNormal": {
  "data": {
   "shadows": "torch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.distributions.test_multivariate_normal.unittest"
   ]
  },
  "type": "class"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_getitem": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_kl_divergence": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.DiagLazyTensor",
    "test.distributions.test_multivariate_normal.math",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_kl_divergence_cuda": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_log_prob": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.DiagLazyTensor",
    "test.distributions.test_multivariate_normal.torch",
    "torch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_log_prob_cuda": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_batch_correlated_samples": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.NonLazyTensor",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_batch_correlated_samples_cuda": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_batch_lazy": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.LazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_batch_lazy_cuda": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_batch_non_lazy": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.LazyTensor",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_batch_non_lazy_cuda": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_correlated_samples": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.NonLazyTensor",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_correlated_samples_cuda": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_lazy": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.LazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_lazy_cuda": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_non_lazy": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.LazyTensor",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_non_lazy_cuda": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.distributions.test_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples": {
  "data": {},
  "type": "module"
 },
 "test.examples.test_batch_gp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_batch_gp_regression.math",
    "test.examples.test_batch_gp_regression.test_x1",
    "test.examples.test_batch_gp_regression.test_x2",
    "test.examples.test_batch_gp_regression.torch",
    "test.examples.test_batch_gp_regression.train_x1",
    "test.examples.test_batch_gp_regression.train_x2",
    "test.examples.test_batch_gp_regression.train_y1",
    "test.examples.test_batch_gp_regression.train_y2",
    "test.examples.test_batch_gp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_batch_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.ExactGPModel": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "test.examples.test_batch_gp_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_batch_gp_regression.ExactGPModel.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "super",
    "test.examples.test_batch_gp_regression.ExactGPModel",
    "test.examples.test_batch_gp_regression.gpytorch",
    "test.examples.test_batch_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_gp_regression.ExactGPModel.forward": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.TestBatchGPRegression": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "test.examples.test_batch_gp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_batch_gp_regression.TestBatchGPRegression.setUp": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "test.examples.test_batch_gp_regression.os",
    "test.examples.test_batch_gp_regression.random",
    "test.examples.test_batch_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_gp_regression.TestBatchGPRegression.tearDown": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_batch_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_gp_regression.TestBatchGPRegression.test_train_on_batch_test_on_batch": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gp_model.train",
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "likelihood.eval",
    "likelihood.parameters",
    "likelihood.train",
    "mll",
    "range",
    "test.examples.test_batch_gp_regression.ExactGPModel",
    "test.examples.test_batch_gp_regression.gpytorch",
    "test.examples.test_batch_gp_regression.test_x1",
    "test.examples.test_batch_gp_regression.test_x12",
    "test.examples.test_batch_gp_regression.test_y1",
    "test.examples.test_batch_gp_regression.test_y2",
    "test.examples.test_batch_gp_regression.torch",
    "test.examples.test_batch_gp_regression.train_x12",
    "test.examples.test_batch_gp_regression.train_y12",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_gp_regression.TestBatchGPRegression.test_train_on_batch_test_on_batch_shared_hypers_over_batch": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gp_model.train",
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "likelihood.eval",
    "likelihood.parameters",
    "likelihood.train",
    "mll",
    "range",
    "test.examples.test_batch_gp_regression.ExactGPModel",
    "test.examples.test_batch_gp_regression.gpytorch",
    "test.examples.test_batch_gp_regression.test_x1",
    "test.examples.test_batch_gp_regression.test_x12",
    "test.examples.test_batch_gp_regression.test_y1",
    "test.examples.test_batch_gp_regression.test_y2",
    "test.examples.test_batch_gp_regression.torch",
    "test.examples.test_batch_gp_regression.train_x12",
    "test.examples.test_batch_gp_regression.train_y12",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_gp_regression.TestBatchGPRegression.test_train_on_single_set_test_on_batch": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "mll",
    "range",
    "test.examples.test_batch_gp_regression.ExactGPModel",
    "test.examples.test_batch_gp_regression.gpytorch",
    "test.examples.test_batch_gp_regression.test_x1",
    "test.examples.test_batch_gp_regression.test_x12",
    "test.examples.test_batch_gp_regression.test_y1",
    "test.examples.test_batch_gp_regression.test_y2",
    "test.examples.test_batch_gp_regression.torch",
    "test.examples.test_batch_gp_regression.train_x1",
    "test.examples.test_batch_gp_regression.train_y1",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.test_x1": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.test_x12": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.test_x2": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.test_y1": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.test_y2": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.train_x1": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.train_x12": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.train_x2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.train_y1": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.train_y12": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.train_y2": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_batch_multitask_gp_regression.math",
    "test.examples.test_batch_multitask_gp_regression.test_x1",
    "test.examples.test_batch_multitask_gp_regression.test_x2",
    "test.examples.test_batch_multitask_gp_regression.torch",
    "test.examples.test_batch_multitask_gp_regression.train_x1",
    "test.examples.test_batch_multitask_gp_regression.train_x2",
    "test.examples.test_batch_multitask_gp_regression.train_y1",
    "test.examples.test_batch_multitask_gp_regression.train_y2",
    "test.examples.test_batch_multitask_gp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_batch_multitask_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.ExactGPModel": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "test.examples.test_batch_multitask_gp_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_batch_multitask_gp_regression.ExactGPModel.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "gpytorch.kernels.MultitaskKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.means.MultitaskMean",
    "super",
    "test.examples.test_batch_multitask_gp_regression.ExactGPModel",
    "test.examples.test_batch_multitask_gp_regression.gpytorch",
    "test.examples.test_batch_multitask_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_multitask_gp_regression.ExactGPModel.forward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_multitask_gp_regression.MultitaskGaussianLikelihoodKronecker": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihoodKronecker"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.MultitaskKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MultitaskKernel"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.MultitaskMean": {
  "data": {
   "shadows": "gpytorch.means.MultitaskMean"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.TestBatchMultitaskGPRegression": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "test.examples.test_batch_multitask_gp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_batch_multitask_gp_regression.TestBatchMultitaskGPRegression.setUp": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "test.examples.test_batch_multitask_gp_regression.os",
    "test.examples.test_batch_multitask_gp_regression.random",
    "test.examples.test_batch_multitask_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_multitask_gp_regression.TestBatchMultitaskGPRegression.tearDown": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_batch_multitask_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_multitask_gp_regression.TestBatchMultitaskGPRegression.test_train_on_batch_test_on_batch": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gp_model.train",
    "gpytorch.likelihoods.MultitaskGaussianLikelihoodKronecker",
    "likelihood",
    "likelihood.eval",
    "likelihood.parameters",
    "likelihood.train",
    "mll",
    "range",
    "test.examples.test_batch_multitask_gp_regression.ExactGPModel",
    "test.examples.test_batch_multitask_gp_regression.gpytorch",
    "test.examples.test_batch_multitask_gp_regression.test_x12",
    "test.examples.test_batch_multitask_gp_regression.test_y1",
    "test.examples.test_batch_multitask_gp_regression.test_y2",
    "test.examples.test_batch_multitask_gp_regression.torch",
    "test.examples.test_batch_multitask_gp_regression.train_x12",
    "test.examples.test_batch_multitask_gp_regression.train_y12",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_multitask_gp_regression.TestBatchMultitaskGPRegression.test_train_on_batch_test_on_batch_shared_hypers_over_batch": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gp_model.train",
    "gpytorch.likelihoods.MultitaskGaussianLikelihoodKronecker",
    "likelihood",
    "likelihood.eval",
    "likelihood.parameters",
    "likelihood.train",
    "mll",
    "range",
    "test.examples.test_batch_multitask_gp_regression.ExactGPModel",
    "test.examples.test_batch_multitask_gp_regression.gpytorch",
    "test.examples.test_batch_multitask_gp_regression.test_x12",
    "test.examples.test_batch_multitask_gp_regression.test_y1",
    "test.examples.test_batch_multitask_gp_regression.test_y2",
    "test.examples.test_batch_multitask_gp_regression.torch",
    "test.examples.test_batch_multitask_gp_regression.train_x12",
    "test.examples.test_batch_multitask_gp_regression.train_y12",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_multitask_gp_regression.TestBatchMultitaskGPRegression.test_train_on_single_set_test_on_batch": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gpytorch.likelihoods.MultitaskGaussianLikelihoodKronecker",
    "likelihood",
    "list",
    "mll",
    "range",
    "test.examples.test_batch_multitask_gp_regression.ExactGPModel",
    "test.examples.test_batch_multitask_gp_regression.gpytorch",
    "test.examples.test_batch_multitask_gp_regression.test_x12",
    "test.examples.test_batch_multitask_gp_regression.test_y1",
    "test.examples.test_batch_multitask_gp_regression.test_y2",
    "test.examples.test_batch_multitask_gp_regression.torch",
    "test.examples.test_batch_multitask_gp_regression.train_x1",
    "test.examples.test_batch_multitask_gp_regression.train_y1",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_multitask_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.test_x1": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.test_x12": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.test_x2": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.test_y1": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.test_y2": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.train_x1": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.train_x12": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.train_x2": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.train_y1": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.train_y12": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.train_y2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_batch_svgp_gp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_batch_svgp_gp_regression.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.CholeskyVariationalDistribution": {
  "data": {
   "shadows": "gpytorch.variational.CholeskyVariationalDistribution"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.SVGPRegressionModel": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "gpytorch.models.ApproximateGP"
   ]
  },
  "type": "class"
 },
 "test.examples.test_batch_svgp_gp_regression.SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "gpytorch.variational.CholeskyVariationalDistribution",
    "gpytorch.variational.VariationalStrategy",
    "super",
    "test.examples.test_batch_svgp_gp_regression.SVGPRegressionModel",
    "test.examples.test_batch_svgp_gp_regression.gpytorch",
    "test.examples.test_batch_svgp_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.SVGPRegressionModel.forward": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "test.examples.test_batch_svgp_gp_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.TestSVGPRegression": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "test.examples.test_batch_svgp_gp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_batch_svgp_gp_regression.TestSVGPRegression.setUp": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "test.examples.test_batch_svgp_gp_regression.os",
    "test.examples.test_batch_svgp_gp_regression.random",
    "test.examples.test_batch_svgp_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.TestSVGPRegression.tearDown": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_batch_svgp_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.TestSVGPRegression.test_regression_error": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "mll",
    "model",
    "model.eval",
    "model.parameters",
    "range",
    "test.examples.test_batch_svgp_gp_regression.SVGPRegressionModel",
    "test.examples.test_batch_svgp_gp_regression.gpytorch",
    "test.examples.test_batch_svgp_gp_regression.torch",
    "test.examples.test_batch_svgp_gp_regression.train_data",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.TestSVGPRegression.test_regression_error_cuda": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.test.utils.least_used_cuda_device",
    "likelihood",
    "likelihood.eval",
    "likelihood.parameters",
    "likelihood.train",
    "mll",
    "model",
    "model.eval",
    "model.parameters",
    "model.train",
    "range",
    "test.examples.test_batch_svgp_gp_regression.SVGPRegressionModel",
    "test.examples.test_batch_svgp_gp_regression.gpytorch",
    "test.examples.test_batch_svgp_gp_regression.torch",
    "test.examples.test_batch_svgp_gp_regression.train_data",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.TestSVGPRegression.test_regression_error_shared_inducing_locations": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "likelihood.eval",
    "likelihood.parameters",
    "likelihood.train",
    "mll",
    "model",
    "model.eval",
    "model.parameters",
    "model.train",
    "range",
    "test.examples.test_batch_svgp_gp_regression.SVGPRegressionModel",
    "test.examples.test_batch_svgp_gp_regression.gpytorch",
    "test.examples.test_batch_svgp_gp_regression.torch",
    "test.examples.test_batch_svgp_gp_regression.train_data",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.VariationalStrategy": {
  "data": {
   "shadows": "gpytorch.variational.VariationalStrategy"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.train_data": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "math.pi",
    "test.examples.test_batch_svgp_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_decoupled_svgp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_decoupled_svgp_regression.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.ExtraComputationWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.ExtraComputationWarning"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.SVGPRegressionModel": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "gpytorch.models.ApproximateGP"
   ]
  },
  "type": "class"
 },
 "test.examples.test_decoupled_svgp_regression.SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "super",
    "test.examples.test_decoupled_svgp_regression.SVGPRegressionModel",
    "test.examples.test_decoupled_svgp_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_decoupled_svgp_regression.SVGPRegressionModel.forward": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "test.examples.test_decoupled_svgp_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_decoupled_svgp_regression.TestSVGPRegression": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.examples.test_decoupled_svgp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_decoupled_svgp_regression.TestSVGPRegression.test_predictive_ll_regression_error": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "test.examples.test_decoupled_svgp_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_decoupled_svgp_regression.TestSVGPRegression.test_regression_error": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "any",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.utils.warnings.ExtraComputationWarning",
    "issubclass",
    "len",
    "likelihood",
    "mll",
    "mll_cls",
    "model",
    "model.eval",
    "model.parameters",
    "range",
    "test.examples.test_decoupled_svgp_regression.SVGPRegressionModel",
    "test.examples.test_decoupled_svgp_regression.gpytorch",
    "test.examples.test_decoupled_svgp_regression.torch",
    "test.examples.test_decoupled_svgp_regression.train_data",
    "test.examples.test_decoupled_svgp_regression.warnings",
    "torch.optim.Adam",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_decoupled_svgp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.train_data": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "test.examples.test_decoupled_svgp_regression.math",
    "test.examples.test_decoupled_svgp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_decoupled_svgp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_fixed_noise_fanatasy_updates.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.ExactGPModel": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "test.examples.test_fixed_noise_fanatasy_updates.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.ExactGPModel.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.SmoothedBoxPrior",
    "math.exp",
    "super",
    "test.examples.test_fixed_noise_fanatasy_updates.ExactGPModel"
   ]
  },
  "type": "function"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.ExactGPModel.forward": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.FixedGaussianNoise": {
  "data": {
   "shadows": "gpytorch.likelihoods.noise_models.FixedGaussianNoise"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.TestFixedNoiseFantasies": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.examples.test_fixed_noise_fanatasy_updates.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.TestFixedNoiseFantasies._get_data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "math.pi",
    "test.examples.test_fixed_noise_fanatasy_updates.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.TestFixedNoiseFantasies.test_fixed_noise_fantasy_updates": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "fant_model",
    "gp_model",
    "gp_model.eval",
    "gp_model.get_fantasy_model",
    "gp_model.likelihood.noise_covar",
    "gp_model.parameters",
    "gp_model.set_train_data",
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "gpytorch.likelihoods.noise_models.FixedGaussianNoise",
    "likelihood",
    "list",
    "math.exp",
    "mll",
    "range",
    "test.examples.test_fixed_noise_fanatasy_updates.ExactGPModel",
    "test.examples.test_fixed_noise_fanatasy_updates.gpytorch",
    "test.examples.test_fixed_noise_fanatasy_updates.torch",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.TestFixedNoiseFantasies.test_fixed_noise_fantasy_updates_batch": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "fant_model",
    "gp_model",
    "gp_model.covar_module.base_kernel.initialize",
    "gp_model.cuda",
    "gp_model.eval",
    "gp_model.get_fantasy_model",
    "gp_model.likelihood.noise_covar",
    "gp_model.mean_module.initialize",
    "gp_model.parameters",
    "gp_model.set_train_data",
    "gp_model.train",
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "gpytorch.likelihoods.noise_models.FixedGaussianNoise",
    "likelihood",
    "likelihood.cuda",
    "likelihood.eval",
    "likelihood.parameters",
    "likelihood.train",
    "list",
    "math.exp",
    "mll",
    "range",
    "test.examples.test_fixed_noise_fanatasy_updates.ExactGPModel",
    "test.examples.test_fixed_noise_fanatasy_updates.gpytorch",
    "test.examples.test_fixed_noise_fanatasy_updates.torch",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.TestFixedNoiseFantasies.test_fixed_noise_fantasy_updates_batch_cuda": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_fixed_noise_fanatasy_updates.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.TestFixedNoiseFantasies.test_fixed_noise_fantasy_updates_cuda": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_fixed_noise_fanatasy_updates.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_grid_gp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_grid_gp_regression.GPInputWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.GPInputWarning"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.GridGPRegressionModel": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "test.examples.test_grid_gp_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_grid_gp_regression.GridGPRegressionModel.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "super",
    "test.examples.test_grid_gp_regression.GridGPRegressionModel",
    "test.examples.test_grid_gp_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.GridGPRegressionModel.forward": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "test.examples.test_grid_gp_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.TestGridGPRegression": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "test.examples.test_grid_gp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_grid_gp_regression.TestGridGPRegression.setUp": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "test.examples.test_grid_gp_regression.os",
    "test.examples.test_grid_gp_regression.random",
    "test.examples.test_grid_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.TestGridGPRegression.tearDown": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_grid_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.TestGridGPRegression.test_grid_gp_mean_abs_error": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "float",
    "gp_model",
    "gp_model.eval",
    "gp_model.named_parameters",
    "gpytorch.utils.warnings.GPInputWarning",
    "len",
    "likelihood",
    "list",
    "mll",
    "range",
    "test.examples.test_grid_gp_regression.GridGPRegressionModel",
    "test.examples.test_grid_gp_regression.gpytorch",
    "test.examples.test_grid_gp_regression.make_data",
    "test.examples.test_grid_gp_regression.torch",
    "test.examples.test_grid_gp_regression.warnings",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.TestGridGPRegression.test_grid_gp_mean_abs_error_2d": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.TestGridGPRegression.test_grid_gp_mean_abs_error_2d_cuda": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_grid_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.TestGridGPRegression.test_grid_gp_mean_abs_error_cuda": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_grid_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.make_data": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "float",
    "int",
    "pow",
    "range",
    "test.examples.test_grid_gp_regression.gpytorch",
    "test.examples.test_grid_gp_regression.math",
    "test.examples.test_grid_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "math.pi",
    "test.examples.test_hadamard_multitask_gp_regression.test_x",
    "test.examples.test_hadamard_multitask_gp_regression.torch",
    "test.examples.test_hadamard_multitask_gp_regression.train_x",
    "test.examples.test_hadamard_multitask_gp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_hadamard_multitask_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.HadamardMultitaskGPModel": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "test.examples.test_hadamard_multitask_gp_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_hadamard_multitask_gp_regression.HadamardMultitaskGPModel.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "gpytorch.kernels.IndexKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.LKJCovariancePrior",
    "gpytorch.priors.SmoothedBoxPrior",
    "math.exp",
    "super",
    "test.examples.test_hadamard_multitask_gp_regression.HadamardMultitaskGPModel",
    "test.examples.test_hadamard_multitask_gp_regression.train_x"
   ]
  },
  "type": "function"
 },
 "test.examples.test_hadamard_multitask_gp_regression.HadamardMultitaskGPModel.forward": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_hadamard_multitask_gp_regression.IndexKernel": {
  "data": {
   "shadows": "gpytorch.kernels.IndexKernel"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.LKJCovariancePrior": {
  "data": {
   "shadows": "gpytorch.priors.LKJCovariancePrior"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.TestHadamardMultitaskGPRegression": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "test.examples.test_hadamard_multitask_gp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_hadamard_multitask_gp_regression.TestHadamardMultitaskGPRegression.setUp": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "test.examples.test_hadamard_multitask_gp_regression.os",
    "test.examples.test_hadamard_multitask_gp_regression.random",
    "test.examples.test_hadamard_multitask_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_hadamard_multitask_gp_regression.TestHadamardMultitaskGPRegression.tearDown": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_hadamard_multitask_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_hadamard_multitask_gp_regression.TestHadamardMultitaskGPRegression.test_multitask_gp_mean_abs_error": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.priors.SmoothedBoxPrior",
    "likelihood",
    "mll",
    "range",
    "test.examples.test_hadamard_multitask_gp_regression.HadamardMultitaskGPModel",
    "test.examples.test_hadamard_multitask_gp_regression.gpytorch",
    "test.examples.test_hadamard_multitask_gp_regression.test_x",
    "test.examples.test_hadamard_multitask_gp_regression.test_y1",
    "test.examples.test_hadamard_multitask_gp_regression.test_y2",
    "test.examples.test_hadamard_multitask_gp_regression.torch",
    "test.examples.test_hadamard_multitask_gp_regression.train_x",
    "test.examples.test_hadamard_multitask_gp_regression.train_y1",
    "test.examples.test_hadamard_multitask_gp_regression.train_y2",
    "test.examples.test_hadamard_multitask_gp_regression.y1_inds",
    "test.examples.test_hadamard_multitask_gp_regression.y1_inds_test",
    "test.examples.test_hadamard_multitask_gp_regression.y2_inds",
    "test.examples.test_hadamard_multitask_gp_regression.y2_inds_test",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_hadamard_multitask_gp_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.test_x": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.test_y1": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.test_y2": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.train_x": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.train_y1": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.train_y2": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.y1_inds": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.y1_inds_test": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.y2_inds": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.y2_inds_test": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_independent_multitask_gp_regression.math",
    "test.examples.test_independent_multitask_gp_regression.test_x",
    "test.examples.test_independent_multitask_gp_regression.test_y1",
    "test.examples.test_independent_multitask_gp_regression.test_y2",
    "test.examples.test_independent_multitask_gp_regression.torch",
    "test.examples.test_independent_multitask_gp_regression.train_x",
    "test.examples.test_independent_multitask_gp_regression.train_y1",
    "test.examples.test_independent_multitask_gp_regression.train_y2",
    "test.examples.test_independent_multitask_gp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_independent_multitask_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.ExactGPModel": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "test.examples.test_independent_multitask_gp_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_independent_multitask_gp_regression.ExactGPModel.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "super",
    "test.examples.test_independent_multitask_gp_regression.ExactGPModel",
    "test.examples.test_independent_multitask_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_independent_multitask_gp_regression.ExactGPModel.forward": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal.from_batch_mvn",
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_independent_multitask_gp_regression.MultitaskGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.TestIndependentMultitaskGPRegression": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "test.examples.test_independent_multitask_gp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_independent_multitask_gp_regression.TestIndependentMultitaskGPRegression.setUp": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "test.examples.test_independent_multitask_gp_regression.os",
    "test.examples.test_independent_multitask_gp_regression.random",
    "test.examples.test_independent_multitask_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_independent_multitask_gp_regression.TestIndependentMultitaskGPRegression.tearDown": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_independent_multitask_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_independent_multitask_gp_regression.TestIndependentMultitaskGPRegression.test_train_and_eval": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gpytorch.likelihoods.MultitaskGaussianLikelihood",
    "likelihood",
    "mll",
    "range",
    "test.examples.test_independent_multitask_gp_regression.ExactGPModel",
    "test.examples.test_independent_multitask_gp_regression.gpytorch",
    "test.examples.test_independent_multitask_gp_regression.test_x",
    "test.examples.test_independent_multitask_gp_regression.test_y1",
    "test.examples.test_independent_multitask_gp_regression.test_y12",
    "test.examples.test_independent_multitask_gp_regression.test_y2",
    "test.examples.test_independent_multitask_gp_regression.torch",
    "test.examples.test_independent_multitask_gp_regression.train_x",
    "test.examples.test_independent_multitask_gp_regression.train_y12",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_independent_multitask_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.test_x": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.test_y1": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.test_y12": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.test_y2": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.train_x": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.train_y1": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.train_y12": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.train_y2": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_kissgp_additive_classification.n",
    "test.examples.test_kissgp_additive_classification.torch",
    "test.examples.test_kissgp_additive_classification.train_x",
    "test.examples.test_kissgp_additive_classification.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_kissgp_additive_classification.AdditiveGridInterpolationVariationalStrategy": {
  "data": {
   "shadows": "gpytorch.variational.AdditiveGridInterpolationVariationalStrategy"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.BernoulliLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.BernoulliLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.CholeskyVariationalDistribution": {
  "data": {
   "shadows": "gpytorch.variational.CholeskyVariationalDistribution"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.GPClassificationModel": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "gpytorch.models.ApproximateGP"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_additive_classification.GPClassificationModel.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.SmoothedBoxPrior",
    "gpytorch.variational.AdditiveGridInterpolationVariationalStrategy",
    "gpytorch.variational.CholeskyVariationalDistribution",
    "math.exp",
    "super",
    "test.examples.test_kissgp_additive_classification.GPClassificationModel",
    "test.examples.test_kissgp_additive_classification.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_classification.GPClassificationModel.forward": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_classification.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.TestKISSGPAdditiveClassification": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "test.examples.test_kissgp_additive_classification.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_additive_classification.TestKISSGPAdditiveClassification.setUp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "test.examples.test_kissgp_additive_classification.os",
    "test.examples.test_kissgp_additive_classification.random",
    "test.examples.test_kissgp_additive_classification.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_classification.TestKISSGPAdditiveClassification.tearDown": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_kissgp_additive_classification.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_classification.TestKISSGPAdditiveClassification.test_kissgp_classification_error": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "gpytorch.likelihoods.BernoulliLikelihood",
    "len",
    "mll",
    "model",
    "model.eval",
    "model.parameters",
    "range",
    "test.examples.test_kissgp_additive_classification.GPClassificationModel",
    "test.examples.test_kissgp_additive_classification.gpytorch",
    "test.examples.test_kissgp_additive_classification.torch",
    "test.examples.test_kissgp_additive_classification.train_x",
    "test.examples.test_kissgp_additive_classification.train_y",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_classification.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.n": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_classification.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.train_x": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_classification.train_y": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_classification.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "pow",
    "range",
    "test.examples.test_kissgp_additive_regression.m",
    "test.examples.test_kissgp_additive_regression.n",
    "test.examples.test_kissgp_additive_regression.test_x",
    "test.examples.test_kissgp_additive_regression.torch",
    "test.examples.test_kissgp_additive_regression.train_x",
    "test.examples.test_kissgp_additive_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_kissgp_additive_regression.AdditiveStructureKernel": {
  "data": {
   "shadows": "gpytorch.kernels.AdditiveStructureKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.GPRegressionModel": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "test.examples.test_kissgp_additive_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_additive_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "gpytorch.kernels.AdditiveStructureKernel",
    "gpytorch.kernels.GridInterpolationKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ZeroMean",
    "super",
    "test.examples.test_kissgp_additive_regression.GPRegressionModel",
    "test.examples.test_kissgp_additive_regression.train_x",
    "test.examples.test_kissgp_additive_regression.train_y"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.TestKISSGPAdditiveRegression": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "test.examples.test_kissgp_additive_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_additive_regression.TestKISSGPAdditiveRegression.setUp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "test.examples.test_kissgp_additive_regression.os",
    "test.examples.test_kissgp_additive_regression.random",
    "test.examples.test_kissgp_additive_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_regression.TestKISSGPAdditiveRegression.tearDown": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_kissgp_additive_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_regression.TestKISSGPAdditiveRegression.test_kissgp_gp_mean_abs_error": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "mll",
    "range",
    "test.examples.test_kissgp_additive_regression.GPRegressionModel",
    "test.examples.test_kissgp_additive_regression.gpytorch",
    "test.examples.test_kissgp_additive_regression.test_x",
    "test.examples.test_kissgp_additive_regression.test_y",
    "test.examples.test_kissgp_additive_regression.torch",
    "test.examples.test_kissgp_additive_regression.train_x",
    "test.examples.test_kissgp_additive_regression.train_y",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_regression.ZeroMean": {
  "data": {
   "shadows": "gpytorch.means.ZeroMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.m": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_regression.n": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.test_x": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_regression.test_y": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.train_x": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_regression.train_y": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_kissgp_dkl_regression.SmallFeatureExtractor",
    "test.examples.test_kissgp_dkl_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_kissgp_dkl_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.GPRegressionModel": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "test.examples.test_kissgp_dkl_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_dkl_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "gpytorch.kernels.GridInterpolationKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.SmoothedBoxPrior",
    "math.exp",
    "super",
    "test.examples.test_kissgp_dkl_regression.GPRegressionModel",
    "test.examples.test_kissgp_dkl_regression.feature_extractor"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.SmallFeatureExtractor": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "torch.nn.Sequential"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_dkl_regression.SmallFeatureExtractor.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "super",
    "test.examples.test_kissgp_dkl_regression.SmallFeatureExtractor",
    "test.examples.test_kissgp_dkl_regression.data_dim",
    "torch.nn.Linear",
    "torch.nn.ReLU"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.TestDKLRegression": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "test.examples.test_kissgp_dkl_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_dkl_regression.TestDKLRegression.setUp": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "test.examples.test_kissgp_dkl_regression.os",
    "test.examples.test_kissgp_dkl_regression.random",
    "test.examples.test_kissgp_dkl_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.TestDKLRegression.tearDown": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_kissgp_dkl_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.TestDKLRegression.test_dkl_gp_fast_pred_var": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gp_model.train",
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "likelihood.eval",
    "likelihood.noise",
    "likelihood.parameters",
    "likelihood.raw_noise.data.fill_",
    "likelihood.train",
    "list",
    "mll",
    "range",
    "test.examples.test_kissgp_dkl_regression.GPRegressionModel",
    "test.examples.test_kissgp_dkl_regression.gpytorch",
    "test.examples.test_kissgp_dkl_regression.make_data",
    "test.examples.test_kissgp_dkl_regression.torch",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.TestDKLRegression.test_dkl_gp_mean_abs_error": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "list",
    "mll",
    "range",
    "test.examples.test_kissgp_dkl_regression.GPRegressionModel",
    "test.examples.test_kissgp_dkl_regression.gpytorch",
    "test.examples.test_kissgp_dkl_regression.make_data",
    "test.examples.test_kissgp_dkl_regression.torch",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.data_dim": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_dkl_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.feature_extractor": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_dkl_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.make_data": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "math.pi",
    "test.examples.test_kissgp_dkl_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "math.pi",
    "test.examples.test_kissgp_gp_classification.torch",
    "test.examples.test_kissgp_gp_classification.train_x",
    "test.examples.test_kissgp_gp_classification.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_kissgp_gp_classification.BernoulliLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.BernoulliLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.GPClassificationModel": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "test.examples.test_kissgp_gp_classification.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_gp_classification.GPClassificationModel.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.SmoothedBoxPrior",
    "int",
    "len",
    "math.exp",
    "pow",
    "super",
    "test.examples.test_kissgp_gp_classification.GPClassificationModel",
    "test.examples.test_kissgp_gp_classification.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_classification.GPClassificationModel.forward": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_classification.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.TestKISSGPClassification": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "test.examples.test_kissgp_gp_classification.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_gp_classification.TestKISSGPClassification.setUp": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "test.examples.test_kissgp_gp_classification.os",
    "test.examples.test_kissgp_gp_classification.random",
    "test.examples.test_kissgp_gp_classification.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_classification.TestKISSGPClassification.tearDown": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_kissgp_gp_classification.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_classification.TestKISSGPClassification.test_kissgp_classification_error": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "gpytorch.likelihoods.BernoulliLikelihood",
    "len",
    "likelihood",
    "mll",
    "model",
    "model.eval",
    "model.named_parameters",
    "range",
    "test.examples.test_kissgp_gp_classification.GPClassificationModel",
    "test.examples.test_kissgp_gp_classification.gpytorch",
    "test.examples.test_kissgp_gp_classification.torch",
    "test.examples.test_kissgp_gp_classification.train_x",
    "test.examples.test_kissgp_gp_classification.train_y",
    "torch.optim.SGD"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_classification.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.train_x": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_gp_classification.train_y": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_gp_classification.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_kissgp_gp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_kissgp_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.GPRegressionModel": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "test.examples.test_kissgp_gp_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_gp_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "gpytorch.kernels.GridInterpolationKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.SmoothedBoxPrior",
    "math.exp",
    "super",
    "test.examples.test_kissgp_gp_regression.GPRegressionModel"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.TestKISSGPRegression": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "test.examples.test_kissgp_gp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_gp_regression.TestKISSGPRegression.setUp": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "test.examples.test_kissgp_gp_regression.os",
    "test.examples.test_kissgp_gp_regression.random",
    "test.examples.test_kissgp_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.TestKISSGPRegression.tearDown": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_kissgp_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.TestKISSGPRegression.test_kissgp_gp_fast_pred_var": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gp_model.train",
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "likelihood.eval",
    "likelihood.noise",
    "likelihood.parameters",
    "likelihood.raw_noise.data.fill_",
    "likelihood.train",
    "list",
    "mll",
    "range",
    "test.examples.test_kissgp_gp_regression.GPRegressionModel",
    "test.examples.test_kissgp_gp_regression.gpytorch",
    "test.examples.test_kissgp_gp_regression.make_data",
    "test.examples.test_kissgp_gp_regression.torch",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.TestKISSGPRegression.test_kissgp_gp_mean_abs_error": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "list",
    "mll",
    "range",
    "test.examples.test_kissgp_gp_regression.GPRegressionModel",
    "test.examples.test_kissgp_gp_regression.gpytorch",
    "test.examples.test_kissgp_gp_regression.make_data",
    "test.examples.test_kissgp_gp_regression.torch",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.TestKISSGPRegression.test_kissgp_gp_mean_abs_error_cuda": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gp_model.train",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.test.utils.least_used_cuda_device",
    "likelihood",
    "likelihood.eval",
    "likelihood.parameters",
    "likelihood.train",
    "list",
    "mll",
    "range",
    "test.examples.test_kissgp_gp_regression.GPRegressionModel",
    "test.examples.test_kissgp_gp_regression.gpytorch",
    "test.examples.test_kissgp_gp_regression.make_data",
    "test.examples.test_kissgp_gp_regression.torch",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.make_data": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "math.pi",
    "test.examples.test_kissgp_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "int",
    "pow",
    "range",
    "test.examples.test_kissgp_kronecker_product_classification.n",
    "test.examples.test_kissgp_kronecker_product_classification.torch",
    "test.examples.test_kissgp_kronecker_product_classification.train_x",
    "test.examples.test_kissgp_kronecker_product_classification.train_y",
    "test.examples.test_kissgp_kronecker_product_classification.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_kissgp_kronecker_product_classification.BernoulliLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.BernoulliLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.GPClassificationModel": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "test.examples.test_kissgp_kronecker_product_classification.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_kronecker_product_classification.GPClassificationModel.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.SmoothedBoxPrior",
    "int",
    "len",
    "math.exp",
    "pow",
    "super",
    "test.examples.test_kissgp_kronecker_product_classification.GPClassificationModel",
    "test.examples.test_kissgp_kronecker_product_classification.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_classification.GPClassificationModel.forward": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_classification.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.TestKISSGPKroneckerProductClassification": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "test.examples.test_kissgp_kronecker_product_classification.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_kronecker_product_classification.TestKISSGPKroneckerProductClassification.setUp": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "test.examples.test_kissgp_kronecker_product_classification.os",
    "test.examples.test_kissgp_kronecker_product_classification.random",
    "test.examples.test_kissgp_kronecker_product_classification.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_classification.TestKISSGPKroneckerProductClassification.tearDown": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_kissgp_kronecker_product_classification.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_classification.TestKISSGPKroneckerProductClassification.test_kissgp_classification_error": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "gpytorch.likelihoods.BernoulliLikelihood",
    "len",
    "mll",
    "model",
    "model.eval",
    "model.parameters",
    "range",
    "test.examples.test_kissgp_kronecker_product_classification.GPClassificationModel",
    "test.examples.test_kissgp_kronecker_product_classification.gpytorch",
    "test.examples.test_kissgp_kronecker_product_classification.torch",
    "test.examples.test_kissgp_kronecker_product_classification.train_x",
    "test.examples.test_kissgp_kronecker_product_classification.train_y",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_classification.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.n": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_classification.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.train_x": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_classification.train_y": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_classification.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "math.pi",
    "pow",
    "range",
    "test.examples.test_kissgp_kronecker_product_regression.m",
    "test.examples.test_kissgp_kronecker_product_regression.n",
    "test.examples.test_kissgp_kronecker_product_regression.test_x",
    "test.examples.test_kissgp_kronecker_product_regression.torch",
    "test.examples.test_kissgp_kronecker_product_regression.train_x",
    "test.examples.test_kissgp_kronecker_product_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_kissgp_kronecker_product_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.GPRegressionModel": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "test.examples.test_kissgp_kronecker_product_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_kronecker_product_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "gpytorch.kernels.GridInterpolationKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.SmoothedBoxPrior",
    "math.exp",
    "super",
    "test.examples.test_kissgp_kronecker_product_regression.GPRegressionModel",
    "test.examples.test_kissgp_kronecker_product_regression.train_x",
    "test.examples.test_kissgp_kronecker_product_regression.train_y"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.TestKISSGPKroneckerProductRegression": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "test.examples.test_kissgp_kronecker_product_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_kronecker_product_regression.TestKISSGPKroneckerProductRegression.setUp": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "test.examples.test_kissgp_kronecker_product_regression.os",
    "test.examples.test_kissgp_kronecker_product_regression.random",
    "test.examples.test_kissgp_kronecker_product_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_regression.TestKISSGPKroneckerProductRegression.tearDown": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_kissgp_kronecker_product_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_regression.TestKISSGPKroneckerProductRegression.test_kissgp_gp_mean_abs_error": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "list",
    "mll",
    "range",
    "test.examples.test_kissgp_kronecker_product_regression.GPRegressionModel",
    "test.examples.test_kissgp_kronecker_product_regression.gpytorch",
    "test.examples.test_kissgp_kronecker_product_regression.test_x",
    "test.examples.test_kissgp_kronecker_product_regression.test_y",
    "test.examples.test_kissgp_kronecker_product_regression.torch",
    "test.examples.test_kissgp_kronecker_product_regression.train_x",
    "test.examples.test_kissgp_kronecker_product_regression.train_y",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.m": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_regression.n": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.test_x": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_regression.test_y": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.train_x": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_regression.train_y": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "float",
    "math.pi",
    "pow",
    "range",
    "test.examples.test_kissgp_multiplicative_regression.m",
    "test.examples.test_kissgp_multiplicative_regression.n",
    "test.examples.test_kissgp_multiplicative_regression.test_x",
    "test.examples.test_kissgp_multiplicative_regression.torch",
    "test.examples.test_kissgp_multiplicative_regression.train_x",
    "test.examples.test_kissgp_multiplicative_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_kissgp_multiplicative_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.GPRegressionModel": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "test.examples.test_kissgp_multiplicative_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_multiplicative_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "gpytorch.kernels.GridInterpolationKernel",
    "gpytorch.kernels.ProductStructureKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.SmoothedBoxPrior",
    "super",
    "test.examples.test_kissgp_multiplicative_regression.GPRegressionModel",
    "test.examples.test_kissgp_multiplicative_regression.train_x",
    "test.examples.test_kissgp_multiplicative_regression.train_y"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_multiplicative_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_multiplicative_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.ProductStructureKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ProductStructureKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.TestKISSGPMultiplicativeRegression": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "test.examples.test_kissgp_multiplicative_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_multiplicative_regression.TestKISSGPMultiplicativeRegression.setUp": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "test.examples.test_kissgp_multiplicative_regression.os",
    "test.examples.test_kissgp_multiplicative_regression.random",
    "test.examples.test_kissgp_multiplicative_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_multiplicative_regression.TestKISSGPMultiplicativeRegression.tearDown": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_kissgp_multiplicative_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_multiplicative_regression.TestKISSGPMultiplicativeRegression.test_kissgp_gp_mean_abs_error": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "list",
    "mll",
    "range",
    "test.examples.test_kissgp_multiplicative_regression.GPRegressionModel",
    "test.examples.test_kissgp_multiplicative_regression.gpytorch",
    "test.examples.test_kissgp_multiplicative_regression.test_x",
    "test.examples.test_kissgp_multiplicative_regression.test_y",
    "test.examples.test_kissgp_multiplicative_regression.torch",
    "test.examples.test_kissgp_multiplicative_regression.train_x",
    "test.examples.test_kissgp_multiplicative_regression.train_y",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_multiplicative_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.m": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_multiplicative_regression.n": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_multiplicative_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.test_x": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_multiplicative_regression.test_y": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_multiplicative_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.train_x": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_multiplicative_regression.train_y": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_multiplicative_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_kissgp_variational_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_kissgp_variational_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.DataLoader": {
  "data": {
   "shadows": "torch.utils.data.DataLoader"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.GPRegressionModel": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "test.examples.test_kissgp_variational_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_variational_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.SmoothedBoxPrior",
    "int",
    "len",
    "math.exp",
    "pow",
    "super",
    "test.examples.test_kissgp_variational_regression.GPRegressionModel",
    "test.examples.test_kissgp_variational_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_variational_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_variational_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.TensorDataset": {
  "data": {
   "shadows": "torch.utils.data.TensorDataset"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.TestKISSGPVariationalRegression": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "test.examples.test_kissgp_variational_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_variational_regression.TestKISSGPVariationalRegression.setUp": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "test.examples.test_kissgp_variational_regression.os",
    "test.examples.test_kissgp_variational_regression.random",
    "test.examples.test_kissgp_variational_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_variational_regression.TestKISSGPVariationalRegression.tearDown": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_kissgp_variational_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_variational_regression.TestKISSGPVariationalRegression.test_kissgp_gp_mean_abs_error": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "gpytorch.likelihoods.GaussianLikelihood",
    "len",
    "likelihood",
    "model",
    "model.eval",
    "model.named_parameters",
    "test.examples.test_kissgp_variational_regression.GPRegressionModel",
    "test.examples.test_kissgp_variational_regression.gpytorch",
    "test.examples.test_kissgp_variational_regression.make_data",
    "test.examples.test_kissgp_variational_regression.torch",
    "torch.utils.data.DataLoader",
    "torch.utils.data.TensorDataset",
    "train"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_variational_regression.TestKISSGPVariationalRegression.test_kissgp_gp_mean_abs_error.train": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "mll",
    "model",
    "range",
    "test.examples.test_kissgp_variational_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_variational_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.make_data": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "math.pi",
    "test.examples.test_kissgp_variational_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_variational_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_kissgp_white_noise_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_kissgp_white_noise_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.GPInputWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.GPInputWarning"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.GPRegressionModel": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "test.examples.test_kissgp_white_noise_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_white_noise_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "gpytorch.kernels.GridInterpolationKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.SmoothedBoxPrior",
    "math.exp",
    "super",
    "test.examples.test_kissgp_white_noise_regression.GPRegressionModel"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.TestKISSGPWhiteNoiseRegression": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "test.examples.test_kissgp_white_noise_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kissgp_white_noise_regression.TestKISSGPWhiteNoiseRegression.setUp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "test.examples.test_kissgp_white_noise_regression.os",
    "test.examples.test_kissgp_white_noise_regression.random",
    "test.examples.test_kissgp_white_noise_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.TestKISSGPWhiteNoiseRegression.tearDown": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_kissgp_white_noise_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.TestKISSGPWhiteNoiseRegression.test_kissgp_gp_fast_pred_var": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gp_model.train",
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "likelihood",
    "likelihood.eval",
    "likelihood.noise",
    "likelihood.parameters",
    "likelihood.train",
    "list",
    "mll",
    "range",
    "test.examples.test_kissgp_white_noise_regression.GPRegressionModel",
    "test.examples.test_kissgp_white_noise_regression.gpytorch",
    "test.examples.test_kissgp_white_noise_regression.make_data",
    "test.examples.test_kissgp_white_noise_regression.torch",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.TestKISSGPWhiteNoiseRegression.test_kissgp_gp_mean_abs_error": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "gpytorch.utils.warnings.GPInputWarning",
    "likelihood",
    "list",
    "mll",
    "range",
    "test.examples.test_kissgp_white_noise_regression.GPRegressionModel",
    "test.examples.test_kissgp_white_noise_regression.gpytorch",
    "test.examples.test_kissgp_white_noise_regression.make_data",
    "test.examples.test_kissgp_white_noise_regression.torch",
    "test.examples.test_kissgp_white_noise_regression.warnings",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.TestKISSGPWhiteNoiseRegression.test_kissgp_gp_mean_abs_error_cuda": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gp_model.train",
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "gpytorch.test.utils.least_used_cuda_device",
    "likelihood",
    "likelihood.eval",
    "likelihood.parameters",
    "likelihood.train",
    "list",
    "mll",
    "range",
    "test.examples.test_kissgp_white_noise_regression.GPRegressionModel",
    "test.examples.test_kissgp_white_noise_regression.gpytorch",
    "test.examples.test_kissgp_white_noise_regression.make_data",
    "test.examples.test_kissgp_white_noise_regression.torch",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.make_data": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "math.pi",
    "test.examples.test_kissgp_white_noise_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "math.pi",
    "test.examples.test_kronecker_multitask_gp_regression.torch",
    "test.examples.test_kronecker_multitask_gp_regression.train_x",
    "test.examples.test_kronecker_multitask_gp_regression.train_y1",
    "test.examples.test_kronecker_multitask_gp_regression.train_y2",
    "test.examples.test_kronecker_multitask_gp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_kronecker_multitask_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.MultitaskGPModel": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "test.examples.test_kronecker_multitask_gp_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kronecker_multitask_gp_regression.MultitaskGPModel.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "gpytorch.kernels.MultitaskKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.means.MultitaskMean",
    "super",
    "test.examples.test_kronecker_multitask_gp_regression.MultitaskGPModel",
    "test.examples.test_kronecker_multitask_gp_regression.train_x",
    "test.examples.test_kronecker_multitask_gp_regression.train_y"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_gp_regression.MultitaskGPModel.forward": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_gp_regression.MultitaskGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.MultitaskKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MultitaskKernel"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.MultitaskMean": {
  "data": {
   "shadows": "gpytorch.means.MultitaskMean"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.TestKroneckerMultiTaskGPRegression": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "test.examples.test_kronecker_multitask_gp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kronecker_multitask_gp_regression.TestKroneckerMultiTaskGPRegression.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "test.examples.test_kronecker_multitask_gp_regression.os",
    "test.examples.test_kronecker_multitask_gp_regression.random",
    "test.examples.test_kronecker_multitask_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_gp_regression.TestKroneckerMultiTaskGPRegression.tearDown": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_kronecker_multitask_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_gp_regression.TestKroneckerMultiTaskGPRegression.test_multitask_gp_mean_abs_error": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "gpytorch.likelihoods.MultitaskGaussianLikelihood",
    "likelihood",
    "math.pi",
    "mll",
    "model",
    "model.eval",
    "range",
    "test.examples.test_kronecker_multitask_gp_regression.MultitaskGPModel",
    "test.examples.test_kronecker_multitask_gp_regression.gpytorch",
    "test.examples.test_kronecker_multitask_gp_regression.torch",
    "test.examples.test_kronecker_multitask_gp_regression.train_x",
    "test.examples.test_kronecker_multitask_gp_regression.train_y"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.train_x": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "test.examples.test_kronecker_multitask_gp_regression.train_y": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_kronecker_multitask_gp_regression.train_y1": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.examples.test_kronecker_multitask_gp_regression.train_y2": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "test.examples.test_kronecker_multitask_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_kronecker_multitask_ski_gp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskGPModel": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "test.examples.test_kronecker_multitask_ski_gp_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskGPModel.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "gpytorch.kernels.GridInterpolationKernel",
    "gpytorch.kernels.MultitaskKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.means.MultitaskMean",
    "super",
    "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskGPModel"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskGPModel.forward": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MultitaskKernel"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskMean": {
  "data": {
   "shadows": "gpytorch.means.MultitaskMean"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.TestKroneckerMultiTaskKISSGPRegression": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "test.examples.test_kronecker_multitask_ski_gp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.TestKroneckerMultiTaskKISSGPRegression._get_data": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "math.pi",
    "test.examples.test_kronecker_multitask_ski_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.TestKroneckerMultiTaskKISSGPRegression.setUp": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "test.examples.test_kronecker_multitask_ski_gp_regression.os",
    "test.examples.test_kronecker_multitask_ski_gp_regression.random",
    "test.examples.test_kronecker_multitask_ski_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.TestKroneckerMultiTaskKISSGPRegression.tearDown": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_kronecker_multitask_ski_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.TestKroneckerMultiTaskKISSGPRegression.test_multitask_gp_mean_abs_error": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "gpytorch.likelihoods.MultitaskGaussianLikelihood",
    "likelihood",
    "math.pi",
    "mll",
    "model",
    "model.eval",
    "range",
    "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskGPModel",
    "test.examples.test_kronecker_multitask_ski_gp_regression.gpytorch",
    "test.examples.test_kronecker_multitask_ski_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.TestKroneckerMultiTaskKISSGPRegression.test_multitask_gp_mean_abs_error_cuda": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_kronecker_multitask_ski_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_lcm_kernel_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_lcm_kernel_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.LCMKernel": {
  "data": {
   "shadows": "gpytorch.kernels.LCMKernel"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskGPModel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "test.examples.test_lcm_kernel_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskGPModel.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.kernels.LCMKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.means.MultitaskMean",
    "super",
    "test.examples.test_lcm_kernel_regression.MultitaskGPModel"
   ]
  },
  "type": "function"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskGPModel.forward": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskGPModel_ICM": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "test.examples.test_lcm_kernel_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskGPModel_ICM.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.kernels.MultitaskKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.means.MultitaskMean",
    "super",
    "test.examples.test_lcm_kernel_regression.MultitaskGPModel_ICM"
   ]
  },
  "type": "function"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskGPModel_ICM.forward": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MultitaskKernel"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskMean": {
  "data": {
   "shadows": "gpytorch.means.MultitaskMean"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.TestLCMKernelRegression": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "test.examples.test_lcm_kernel_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_lcm_kernel_regression.TestLCMKernelRegression.test_lcm_icm_equivalence": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpytorch.likelihoods.MultitaskGaussianLikelihood",
    "likelihood",
    "likelihood.eval",
    "likelihood.train",
    "mll",
    "model",
    "model.eval",
    "model_icm",
    "model_icm.eval",
    "range",
    "test.examples.test_lcm_kernel_regression.MultitaskGPModel",
    "test.examples.test_lcm_kernel_regression.MultitaskGPModel_ICM",
    "test.examples.test_lcm_kernel_regression.gpytorch",
    "test.examples.test_lcm_kernel_regression.math",
    "test.examples.test_lcm_kernel_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_lcm_kernel_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_model_list_gp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_model_list_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.ExactGPModel": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "test.examples.test_model_list_gp_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_model_list_gp_regression.ExactGPModel.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.SmoothedBoxPrior",
    "super",
    "test.examples.test_model_list_gp_regression.ExactGPModel",
    "test.examples.test_model_list_gp_regression.math"
   ]
  },
  "type": "function"
 },
 "test.examples.test_model_list_gp_regression.ExactGPModel.forward": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_model_list_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.IndependentModelList": {
  "data": {
   "shadows": "gpytorch.models.IndependentModelList"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.LikelihoodList": {
  "data": {
   "shadows": "gpytorch.likelihoods.LikelihoodList"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.SumMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.SumMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.TestModelListGPRegression": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "test.examples.test_model_list_gp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_model_list_gp_regression.TestModelListGPRegression.test_simple_model_list_gp_regression": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.likelihoods.LikelihoodList",
    "gpytorch.mlls.SumMarginalLogLikelihood",
    "gpytorch.models.IndependentModelList",
    "len",
    "likelihood",
    "list",
    "mll",
    "model",
    "model.eval",
    "model.train_inputs",
    "model.train_targets",
    "range",
    "test.examples.test_model_list_gp_regression.ExactGPModel",
    "test.examples.test_model_list_gp_regression.gpytorch",
    "test.examples.test_model_list_gp_regression.math",
    "test.examples.test_model_list_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_model_list_gp_regression.TestModelListGPRegression.test_simple_model_list_gp_regression_cuda": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_model_list_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_model_list_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_pyro_integration": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "test.examples.test_pyro_integration.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_pyro_integration.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_pyro_integration.ClusterGaussianLikelihood": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "test.examples.test_pyro_integration.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_pyro_integration.ClusterGaussianLikelihood.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "str",
    "super",
    "test.examples.test_pyro_integration.time",
    "test.examples.test_pyro_integration.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.ClusterGaussianLikelihood._cluster_dist": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "test.examples.test_pyro_integration.pyro"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.ClusterGaussianLikelihood.forward": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "test.examples.test_pyro_integration.pyro"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.ClusterGaussianLikelihood.noise": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "property",
    "test.examples.test_pyro_integration.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.ClusterGaussianLikelihood.pyro_guide": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "super",
    "test.examples.test_pyro_integration.pyro"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.ClusterGaussianLikelihood.pyro_model": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "super",
    "test.examples.test_pyro_integration.pyro"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.ClusterMultitaskGPModel": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "test.examples.test_pyro_integration.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_pyro_integration.ClusterMultitaskGPModel.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "str",
    "super",
    "test.examples.test_pyro_integration.ClusterGaussianLikelihood",
    "test.examples.test_pyro_integration.gpytorch",
    "test.examples.test_pyro_integration.time",
    "test.examples.test_pyro_integration.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.ClusterMultitaskGPModel.forward": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "test.examples.test_pyro_integration.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.LowLevelInterfaceClusterMultitaskGPModel": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "test.examples.test_pyro_integration.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_pyro_integration.LowLevelInterfaceClusterMultitaskGPModel.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "super",
    "test.examples.test_pyro_integration.gpytorch",
    "test.examples.test_pyro_integration.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.LowLevelInterfaceClusterMultitaskGPModel.forward": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "test.examples.test_pyro_integration.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.LowLevelInterfaceClusterMultitaskGPModel.guide": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "test.examples.test_pyro_integration.pyro"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.LowLevelInterfaceClusterMultitaskGPModel.model": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "test.examples.test_pyro_integration.pyro",
    "test.examples.test_pyro_integration.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.LowLevelInterfaceClusterMultitaskGPModel.noise": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "property",
    "test.examples.test_pyro_integration.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.SVGPModel": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "test.examples.test_pyro_integration.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_pyro_integration.SVGPModel.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "str",
    "super",
    "test.examples.test_pyro_integration.gpytorch",
    "test.examples.test_pyro_integration.time",
    "test.examples.test_pyro_integration.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.SVGPModel.forward": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "test.examples.test_pyro_integration.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.TestPyroIntegration": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.examples.test_pyro_integration.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_pyro_integration.TestPyroIntegration.test_high_level_interface": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "math.pi",
    "model",
    "model.eval",
    "model.guide",
    "model.likelihood",
    "model.model",
    "model.train",
    "range",
    "test.examples.test_pyro_integration.ClusterMultitaskGPModel",
    "test.examples.test_pyro_integration.gpytorch",
    "test.examples.test_pyro_integration.pyro",
    "test.examples.test_pyro_integration.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.TestPyroIntegration.test_high_level_interface_mean_field": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.TestPyroIntegration.test_low_level_interface": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "math.pi",
    "model",
    "model.guide",
    "model.model",
    "model.train",
    "model.variational_logits",
    "model.variational_logits.max",
    "range",
    "test.examples.test_pyro_integration.LowLevelInterfaceClusterMultitaskGPModel",
    "test.examples.test_pyro_integration.pyro",
    "test.examples.test_pyro_integration.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.TestPyroIntegration.test_simple_high_level_interface": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "math.pi",
    "model",
    "range",
    "test.examples.test_pyro_integration.SVGPModel",
    "test.examples.test_pyro_integration.gpytorch",
    "test.examples.test_pyro_integration.pyro",
    "test.examples.test_pyro_integration.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_pyro_integration.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_pyro_integration.pyro": {
  "data": {
   "shadows": "pyro"
  },
  "type": "import"
 },
 "test.examples.test_pyro_integration.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "test.examples.test_pyro_integration.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_pyro_integration.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_sgpr_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_sgpr_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.GPRegressionModel": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "test.examples.test_sgpr_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_sgpr_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "gpytorch.kernels.InducingPointKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.SmoothedBoxPrior",
    "math.exp",
    "super",
    "test.examples.test_sgpr_regression.GPRegressionModel",
    "test.examples.test_sgpr_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.InducingPointKernel": {
  "data": {
   "shadows": "gpytorch.kernels.InducingPointKernel"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.NumericalWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.NumericalWarning"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.TestSGPRRegression": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "test.examples.test_sgpr_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_sgpr_regression.TestSGPRRegression.setUp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "test.examples.test_sgpr_regression.os",
    "test.examples.test_sgpr_regression.random",
    "test.examples.test_sgpr_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.TestSGPRRegression.tearDown": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_sgpr_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.TestSGPRRegression.test_sgpr_fast_pred_var": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gp_model.train",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.utils.warnings.NumericalWarning",
    "likelihood",
    "likelihood.eval",
    "likelihood.parameters",
    "likelihood.train",
    "mll",
    "range",
    "test.examples.test_sgpr_regression.GPRegressionModel",
    "test.examples.test_sgpr_regression.gpytorch",
    "test.examples.test_sgpr_regression.make_data",
    "test.examples.test_sgpr_regression.torch",
    "test.examples.test_sgpr_regression.warnings",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.TestSGPRRegression.test_sgpr_mean_abs_error": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.utils.warnings.NumericalWarning",
    "likelihood",
    "mll",
    "range",
    "test.examples.test_sgpr_regression.GPRegressionModel",
    "test.examples.test_sgpr_regression.gpytorch",
    "test.examples.test_sgpr_regression.make_data",
    "test.examples.test_sgpr_regression.torch",
    "test.examples.test_sgpr_regression.warnings",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.TestSGPRRegression.test_sgpr_mean_abs_error_cuda": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.parameters",
    "gp_model.train",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.test.utils.least_used_cuda_device",
    "gpytorch.utils.warnings.NumericalWarning",
    "likelihood",
    "likelihood.eval",
    "likelihood.parameters",
    "likelihood.train",
    "list",
    "mll",
    "range",
    "test.examples.test_sgpr_regression.GPRegressionModel",
    "test.examples.test_sgpr_regression.gpytorch",
    "test.examples.test_sgpr_regression.make_data",
    "test.examples.test_sgpr_regression.torch",
    "test.examples.test_sgpr_regression.warnings",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.make_data": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "math.pi",
    "test.examples.test_sgpr_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_simple_gp_classification.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_simple_gp_classification.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.BernoulliLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.BernoulliLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.CholeskyVariationalDistribution": {
  "data": {
   "shadows": "gpytorch.variational.CholeskyVariationalDistribution"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.GPClassificationModel": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpytorch.models.ApproximateGP"
   ]
  },
  "type": "class"
 },
 "test.examples.test_simple_gp_classification.GPClassificationModel.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "gpytorch.variational.CholeskyVariationalDistribution",
    "gpytorch.variational.UnwhitenedVariationalStrategy",
    "super",
    "test.examples.test_simple_gp_classification.GPClassificationModel",
    "test.examples.test_simple_gp_classification.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_classification.GPClassificationModel.forward": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "test.examples.test_simple_gp_classification.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_classification.TestSimpleGPClassification": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "test.examples.test_simple_gp_classification.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_simple_gp_classification.TestSimpleGPClassification.setUp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "test.examples.test_simple_gp_classification.os",
    "test.examples.test_simple_gp_classification.random",
    "test.examples.test_simple_gp_classification.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_classification.TestSimpleGPClassification.tearDown": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_simple_gp_classification.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_classification.TestSimpleGPClassification.test_classification_error": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "gpytorch.likelihoods.BernoulliLikelihood",
    "len",
    "likelihood",
    "mll",
    "model",
    "model.eval",
    "model.parameters",
    "range",
    "test.examples.test_simple_gp_classification.GPClassificationModel",
    "test.examples.test_simple_gp_classification.gpytorch",
    "test.examples.test_simple_gp_classification.torch",
    "test.examples.test_simple_gp_classification.train_data",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_classification.UnwhitenedVariationalStrategy": {
  "data": {
   "shadows": "gpytorch.variational.UnwhitenedVariationalStrategy"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.train_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "math.pi",
    "test.examples.test_simple_gp_classification.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_classification.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_simple_gp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_simple_gp_regression.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.ExactGPModel": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "test.examples.test_simple_gp_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_simple_gp_regression.ExactGPModel.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "super",
    "test.examples.test_simple_gp_regression.ExactGPModel"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.ExactGPModel.forward": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.LogNormalPrior": {
  "data": {
   "shadows": "gpytorch.priors.LogNormalPrior"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.MCMC": {
  "data": {
   "shadows": "pyro.infer.mcmc.MCMC"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.NUTS": {
  "data": {
   "shadows": "pyro.infer.mcmc.NUTS"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.Positive": {
  "data": {
   "shadows": "gpytorch.constraints.Positive"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.examples.test_simple_gp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression._get_data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "math.pi",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_fantasy_updates": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "fant_model",
    "gp_model",
    "gp_model.covar_module.base_kernel.initialize",
    "gp_model.cuda",
    "gp_model.eval",
    "gp_model.get_fantasy_model",
    "gp_model.mean_module.initialize",
    "gp_model.parameters",
    "gp_model.set_train_data",
    "gp_model.train",
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "likelihood.cuda",
    "likelihood.eval",
    "likelihood.initialize",
    "likelihood.parameters",
    "likelihood.train",
    "list",
    "math.exp",
    "mll",
    "range",
    "test.examples.test_simple_gp_regression.ExactGPModel",
    "test.examples.test_simple_gp_regression.gpytorch",
    "test.examples.test_simple_gp_regression.torch",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_fantasy_updates_batch": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "fant_model",
    "gp_model",
    "gp_model.covar_module.base_kernel.initialize",
    "gp_model.cuda",
    "gp_model.eval",
    "gp_model.get_fantasy_model",
    "gp_model.mean_module.initialize",
    "gp_model.parameters",
    "gp_model.set_train_data",
    "gp_model.train",
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "likelihood.cuda",
    "likelihood.eval",
    "likelihood.initialize",
    "likelihood.parameters",
    "likelihood.train",
    "list",
    "math.exp",
    "mll",
    "range",
    "test.examples.test_simple_gp_regression.ExactGPModel",
    "test.examples.test_simple_gp_regression.gpytorch",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_fantasy_updates_batch_cuda": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_fantasy_updates_cuda": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_gp_posterior_mean_skip_variances_fast_cuda": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.cuda",
    "gp_model.eval",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.test.utils.least_used_cuda_device",
    "likelihood",
    "likelihood.cuda",
    "likelihood.eval",
    "test.examples.test_simple_gp_regression.ExactGPModel",
    "test.examples.test_simple_gp_regression.gpytorch",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_gp_posterior_mean_skip_variances_slow_cuda": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.cuda",
    "gp_model.eval",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.test.utils.least_used_cuda_device",
    "likelihood",
    "likelihood.cuda",
    "likelihood.eval",
    "test.examples.test_simple_gp_regression.ExactGPModel",
    "test.examples.test_simple_gp_regression.gpytorch",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_gp_posterior_single_training_point_smoke_test": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.train",
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "likelihood.eval",
    "test.examples.test_simple_gp_regression.ExactGPModel",
    "test.examples.test_simple_gp_regression.gpytorch",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_gp_with_checkpointing": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_latent_gp_and_likelihood_fast_pred_var": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.covar_module.base_kernel.initialize",
    "gp_model.cuda",
    "gp_model.eval",
    "gp_model.mean_module.initialize",
    "gp_model.parameters",
    "gp_model.train",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.priors.SmoothedBoxPrior",
    "likelihood",
    "likelihood.cuda",
    "likelihood.eval",
    "likelihood.initialize",
    "likelihood.noise_covar.noise",
    "likelihood.noise_covar.raw_noise.data.fill_",
    "likelihood.parameters",
    "likelihood.train",
    "list",
    "math.exp",
    "mll",
    "range",
    "test.examples.test_simple_gp_regression.ExactGPModel",
    "test.examples.test_simple_gp_regression.gpytorch",
    "test.examples.test_simple_gp_regression.torch",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_latent_gp_and_likelihood_fast_pred_var_cuda": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_latent_gp_and_likelihood_with_optimization": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "bool",
    "gp_model",
    "gp_model.covar_module.base_kernel.initialize",
    "gp_model.cuda",
    "gp_model.eval",
    "gp_model.mean_module.initialize",
    "gp_model.parameters",
    "gp_model.train",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.priors.SmoothedBoxPrior",
    "likelihood",
    "likelihood.cuda",
    "likelihood.eval",
    "likelihood.initialize",
    "likelihood.parameters",
    "likelihood.train",
    "list",
    "math.exp",
    "mll",
    "range",
    "test.examples.test_simple_gp_regression.ExactGPModel",
    "test.examples.test_simple_gp_regression.gpytorch",
    "test.examples.test_simple_gp_regression.torch",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_latent_gp_and_likelihood_with_optimization_cuda": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_latent_gp_and_likelihood_without_optimization": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.covar_module.base_kernel.initialize",
    "gp_model.covar_module.outputscale.expand_as",
    "gp_model.cuda",
    "gp_model.eval",
    "gpytorch.constraints.Positive",
    "gpytorch.likelihoods.GaussianLikelihood",
    "likelihood",
    "likelihood.cuda",
    "likelihood.eval",
    "likelihood.initialize",
    "math.exp",
    "test.examples.test_simple_gp_regression.ExactGPModel",
    "test.examples.test_simple_gp_regression.gpytorch",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_latent_gp_and_likelihood_without_optimization_cuda": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_with_exact_computations": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "test.examples.test_simple_gp_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_with_exact_computations_cuda": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_simple_gp_regression.gpytorch",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_prior": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.covar_module.outputscale",
    "gpytorch.constraints.Positive",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.priors.SmoothedBoxPrior",
    "likelihood",
    "likelihood.noise",
    "math.exp",
    "test.examples.test_simple_gp_regression.ExactGPModel",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_prior_cuda": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_pyro_sampling": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "ImportError",
    "gp_model",
    "gp_model.covar_module.base_kernel.register_prior",
    "gp_model.covar_module.register_prior",
    "gp_model.eval",
    "gp_model.mean_module.register_prior",
    "gp_model.pyro_load_from_samples",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.priors.LogNormalPrior",
    "gpytorch.priors.UniformPrior",
    "likelihood",
    "likelihood.register_prior",
    "mll",
    "pyro.infer.mcmc.MCMC",
    "pyro.infer.mcmc.NUTS",
    "test.examples.test_simple_gp_regression.ExactGPModel",
    "test.examples.test_simple_gp_regression.gpytorch",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_pyro_sampling.pyro_model": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.pyro_sample_from_prior",
    "mll.pyro_factor"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_recursive_initialize": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "gpytorch.likelihoods.GaussianLikelihood",
    "test.examples.test_simple_gp_regression.ExactGPModel",
    "test.examples.test_simple_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.UniformPrior": {
  "data": {
   "shadows": "gpytorch.priors.UniformPrior"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.pyro": {
  "data": {
   "shadows": "pyro"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.OrderedDict",
    "math.pi",
    "test.examples.test_spectral_mixture_gp_regression.test_x",
    "test.examples.test_spectral_mixture_gp_regression.torch",
    "test.examples.test_spectral_mixture_gp_regression.train_x",
    "test.examples.test_spectral_mixture_gp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_spectral_mixture_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.SpectralMixtureGPModel": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "test.examples.test_spectral_mixture_gp_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_spectral_mixture_gp_regression.SpectralMixtureGPModel.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "gpytorch.kernels.SpectralMixtureKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.SmoothedBoxPrior",
    "super",
    "test.examples.test_spectral_mixture_gp_regression.SpectralMixtureGPModel",
    "test.examples.test_spectral_mixture_gp_regression.train_x",
    "test.examples.test_spectral_mixture_gp_regression.train_y"
   ]
  },
  "type": "function"
 },
 "test.examples.test_spectral_mixture_gp_regression.SpectralMixtureGPModel.forward": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_spectral_mixture_gp_regression.SpectralMixtureKernel": {
  "data": {
   "shadows": "gpytorch.kernels.SpectralMixtureKernel"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.TestSpectralMixtureGPRegression": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "test.examples.test_spectral_mixture_gp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_spectral_mixture_gp_regression.TestSpectralMixtureGPRegression.setUp": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "test.examples.test_spectral_mixture_gp_regression.os",
    "test.examples.test_spectral_mixture_gp_regression.random",
    "test.examples.test_spectral_mixture_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_spectral_mixture_gp_regression.TestSpectralMixtureGPRegression.tearDown": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_spectral_mixture_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_spectral_mixture_gp_regression.TestSpectralMixtureGPRegression.test_spectral_mixture_gp_mean_abs_error": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.eval",
    "gp_model.load_state_dict",
    "gp_model.parameters",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.priors.SmoothedBoxPrior",
    "likelihood",
    "list",
    "math.exp",
    "mll",
    "range",
    "test.examples.test_spectral_mixture_gp_regression.SpectralMixtureGPModel",
    "test.examples.test_spectral_mixture_gp_regression.good_state_dict",
    "test.examples.test_spectral_mixture_gp_regression.gpytorch",
    "test.examples.test_spectral_mixture_gp_regression.test_x",
    "test.examples.test_spectral_mixture_gp_regression.test_y",
    "test.examples.test_spectral_mixture_gp_regression.torch",
    "test.examples.test_spectral_mixture_gp_regression.train_x",
    "test.examples.test_spectral_mixture_gp_regression.train_y",
    "torch.optim.SGD"
   ]
  },
  "type": "function"
 },
 "test.examples.test_spectral_mixture_gp_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.good_state_dict": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "test.examples.test_spectral_mixture_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.test_x": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_spectral_mixture_gp_regression.test_y": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "test.examples.test_spectral_mixture_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.train_x": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.examples.test_spectral_mixture_gp_regression.train_y": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.examples.test_spectral_mixture_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_svgp_gp_classification.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_svgp_gp_classification.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.BernoulliLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.BernoulliLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.CholeskyVariationalDistribution": {
  "data": {
   "shadows": "gpytorch.variational.CholeskyVariationalDistribution"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.ExtraComputationWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.ExtraComputationWarning"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.SVGPClassificationModel": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpytorch.models.ApproximateGP"
   ]
  },
  "type": "class"
 },
 "test.examples.test_svgp_gp_classification.SVGPClassificationModel.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.variational.CholeskyVariationalDistribution",
    "gpytorch.variational.VariationalStrategy",
    "super",
    "test.examples.test_svgp_gp_classification.SVGPClassificationModel",
    "test.examples.test_svgp_gp_classification.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_classification.SVGPClassificationModel.forward": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "test.examples.test_svgp_gp_classification.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_classification.TestSVGPClassification": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.examples.test_svgp_gp_classification.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_svgp_gp_classification.TestSVGPClassification.test_classification_error": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "any",
    "gpytorch.likelihoods.BernoulliLikelihood",
    "gpytorch.utils.warnings.ExtraComputationWarning",
    "issubclass",
    "len",
    "likelihood",
    "mll",
    "mll_cls",
    "model",
    "model.eval",
    "model.parameters",
    "range",
    "test.examples.test_svgp_gp_classification.SVGPClassificationModel",
    "test.examples.test_svgp_gp_classification.gpytorch",
    "test.examples.test_svgp_gp_classification.torch",
    "test.examples.test_svgp_gp_classification.train_data",
    "test.examples.test_svgp_gp_classification.warnings",
    "torch.optim.Adam",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_classification.TestSVGPClassification.test_predictive_ll_classification_error": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "test.examples.test_svgp_gp_classification.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_classification.VariationalStrategy": {
  "data": {
   "shadows": "gpytorch.variational.VariationalStrategy"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.train_data": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "test.examples.test_svgp_gp_classification.math",
    "test.examples.test_svgp_gp_classification.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_classification.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_svgp_gp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_svgp_gp_regression.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.ExtraComputationWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.ExtraComputationWarning"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.OldVersionWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.OldVersionWarning"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.SVGPRegressionModel": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.models.ApproximateGP"
   ]
  },
  "type": "class"
 },
 "test.examples.test_svgp_gp_regression.SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "distribution_cls",
    "super",
    "test.examples.test_svgp_gp_regression.SVGPRegressionModel",
    "test.examples.test_svgp_gp_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.SVGPRegressionModel.forward": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "test.examples.test_svgp_gp_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.TestSVGPRegression": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.examples.test_svgp_gp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_svgp_gp_regression.TestSVGPRegression.test_loading_old_model": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "any",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.utils.warnings.OldVersionWarning",
    "issubclass",
    "likelihood",
    "model",
    "pathlib.Path",
    "test.examples.test_svgp_gp_regression.SVGPRegressionModel",
    "test.examples.test_svgp_gp_regression.gpytorch",
    "test.examples.test_svgp_gp_regression.torch",
    "test.examples.test_svgp_gp_regression.train_data",
    "test.examples.test_svgp_gp_regression.warnings"
   ]
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.TestSVGPRegression.test_predictive_ll_regression_error": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "test.examples.test_svgp_gp_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.TestSVGPRegression.test_predictive_ll_regression_error_delta": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "test.examples.test_svgp_gp_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.TestSVGPRegression.test_regression_error": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "any",
    "distribution_cls",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.utils.warnings.ExtraComputationWarning",
    "issubclass",
    "len",
    "likelihood",
    "likelihood.cuda",
    "likelihood.eval",
    "likelihood.parameters",
    "likelihood.train",
    "mll",
    "mll_cls",
    "model",
    "model.cuda",
    "model.eval",
    "model.parameters",
    "model.train",
    "range",
    "test.examples.test_svgp_gp_regression.SVGPRegressionModel",
    "test.examples.test_svgp_gp_regression.gpytorch",
    "test.examples.test_svgp_gp_regression.torch",
    "test.examples.test_svgp_gp_regression.train_data",
    "test.examples.test_svgp_gp_regression.warnings",
    "torch.optim.Adam",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.TestSVGPRegression.test_regression_error_cuda": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_svgp_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.TestSVGPRegression.test_robust_regression_error": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "test.examples.test_svgp_gp_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.train_data": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "test.examples.test_svgp_gp_regression.math",
    "test.examples.test_svgp_gp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_unwhitened_svgp_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_unwhitened_svgp_regression.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.ExtraComputationWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.ExtraComputationWarning"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.SVGPRegressionModel": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gpytorch.models.ApproximateGP"
   ]
  },
  "type": "class"
 },
 "test.examples.test_unwhitened_svgp_regression.SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "distribution_cls",
    "super",
    "test.examples.test_unwhitened_svgp_regression.SVGPRegressionModel",
    "test.examples.test_unwhitened_svgp_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_unwhitened_svgp_regression.SVGPRegressionModel.forward": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "test.examples.test_unwhitened_svgp_regression.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_unwhitened_svgp_regression.TestSVGPRegression": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.examples.test_unwhitened_svgp_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_unwhitened_svgp_regression.TestSVGPRegression.test_regression_error": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "any",
    "distribution_cls",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.utils.warnings.ExtraComputationWarning",
    "issubclass",
    "len",
    "likelihood",
    "mll",
    "mll_cls",
    "model",
    "model.eval",
    "model.parameters",
    "range",
    "test.examples.test_unwhitened_svgp_regression.SVGPRegressionModel",
    "test.examples.test_unwhitened_svgp_regression.gpytorch",
    "test.examples.test_unwhitened_svgp_regression.torch",
    "test.examples.test_unwhitened_svgp_regression.train_data",
    "test.examples.test_unwhitened_svgp_regression.warnings",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_unwhitened_svgp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.train_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "test.examples.test_unwhitened_svgp_regression.math",
    "test.examples.test_unwhitened_svgp_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_unwhitened_svgp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.examples.test_white_noise_regression.unittest"
   ]
  },
  "type": "module"
 },
 "test.examples.test_white_noise_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.ExactGPModel": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "test.examples.test_white_noise_regression.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.examples.test_white_noise_regression.ExactGPModel.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.priors.SmoothedBoxPrior",
    "math.exp",
    "super",
    "test.examples.test_white_noise_regression.ExactGPModel"
   ]
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.ExactGPModel.forward": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.GPInputWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.GPInputWarning"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "test.examples.test_white_noise_regression.unittest"
   ]
  },
  "type": "class"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression._get_data": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "math.pi",
    "test.examples.test_white_noise_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.setUp": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "test.examples.test_white_noise_regression.os",
    "test.examples.test_white_noise_regression.random",
    "test.examples.test_white_noise_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.tearDown": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "hasattr",
    "test.examples.test_white_noise_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.test_posterior_latent_gp_and_likelihood_fast_pred_var": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.cuda",
    "gp_model.eval",
    "gp_model.mean_module.initialize",
    "gp_model.parameters",
    "gp_model.rbf_covar_module.initialize",
    "gp_model.train",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.priors.SmoothedBoxPrior",
    "likelihood",
    "likelihood.cuda",
    "likelihood.eval",
    "likelihood.initialize",
    "likelihood.noise",
    "likelihood.parameters",
    "likelihood.raw_noise.data.fill_",
    "likelihood.train",
    "list",
    "math.exp",
    "mll",
    "range",
    "test.examples.test_white_noise_regression.ExactGPModel",
    "test.examples.test_white_noise_regression.gpytorch",
    "test.examples.test_white_noise_regression.torch",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.test_posterior_latent_gp_and_likelihood_fast_pred_var_cuda": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_white_noise_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.test_posterior_latent_gp_and_likelihood_with_optimization": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.cuda",
    "gp_model.eval",
    "gp_model.mean_module.initialize",
    "gp_model.parameters",
    "gp_model.rbf_covar_module.initialize",
    "gp_model.train",
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "gpytorch.utils.warnings.GPInputWarning",
    "likelihood",
    "likelihood.cuda",
    "likelihood.eval",
    "likelihood.parameters",
    "likelihood.train",
    "list",
    "math.exp",
    "mll",
    "range",
    "test.examples.test_white_noise_regression.ExactGPModel",
    "test.examples.test_white_noise_regression.gpytorch",
    "test.examples.test_white_noise_regression.torch",
    "test.examples.test_white_noise_regression.warnings",
    "torch.optim.Adam"
   ]
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.test_posterior_latent_gp_and_likelihood_with_optimization_cuda": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_white_noise_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.test_posterior_latent_gp_and_likelihood_without_optimization": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "gp_model",
    "gp_model.covar_module.outputscale",
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "likelihood",
    "math.exp",
    "test.examples.test_white_noise_regression.ExactGPModel",
    "test.examples.test_white_noise_regression.gpytorch",
    "test.examples.test_white_noise_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.test_posterior_latent_gp_and_likelihood_without_optimization_cuda": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.examples.test_white_noise_regression.torch"
   ]
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.functions": {
  "data": {},
  "type": "module"
 },
 "test.functions.test_dsmm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.functions.test_dsmm.unittest"
   ]
  },
  "type": "module"
 },
 "test.functions.test_dsmm.TestDSMM": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "test.functions.test_dsmm.unittest"
   ]
  },
  "type": "class"
 },
 "test.functions.test_dsmm.TestDSMM.test_backward": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "test.functions.test_dsmm.gpytorch",
    "test.functions.test_dsmm.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_backward_batch": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "test.functions.test_dsmm.gpytorch",
    "test.functions.test_dsmm.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_backward_multi_batch": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "test.functions.test_dsmm.gpytorch",
    "test.functions.test_dsmm.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_broadcast_rhs": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "test.functions.test_dsmm.gpytorch",
    "test.functions.test_dsmm.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_broadcast_singleton": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "test.functions.test_dsmm.gpytorch",
    "test.functions.test_dsmm.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_broadcast_sparse": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "test.functions.test_dsmm.gpytorch",
    "test.functions.test_dsmm.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_forward": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.functions.test_dsmm.gpytorch",
    "test.functions.test_dsmm.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_forward_batch": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "test.functions.test_dsmm.gpytorch",
    "test.functions.test_dsmm.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_forward_multi_batch": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "test.functions.test_dsmm.gpytorch",
    "test.functions.test_dsmm.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_dsmm.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.functions.test_dsmm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_dsmm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_inv_matmul": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.functions.test_inv_matmul.unittest"
   ]
  },
  "type": "module"
 },
 "test.functions.test_inv_matmul.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.functions.test_inv_matmul.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.functions.test_inv_matmul.TestInvMatmulBatch": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "test.functions.test_inv_matmul.TestInvMatmulNonBatch"
   ]
  },
  "type": "class"
 },
 "test.functions.test_inv_matmul.TestInvMatmulBatch._create_mat": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "test.functions.test_inv_matmul.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_matmul.TestInvMatmulNonBatch": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.functions.test_inv_matmul.unittest"
   ]
  },
  "type": "class"
 },
 "test.functions.test_inv_matmul.TestInvMatmulNonBatch._create_mat": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "test.functions.test_inv_matmul.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_matmul.TestInvMatmulNonBatch.test_inv_matmul_multiple_vecs": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "gpytorch.settings.terminate_cg_by_size",
    "test.functions.test_inv_matmul._ensure_symmetric_grad",
    "test.functions.test_inv_matmul.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_matmul.TestInvMatmulNonBatch.test_inv_matmul_vec": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "gpytorch.settings.terminate_cg_by_size",
    "test.functions.test_inv_matmul._ensure_symmetric_grad",
    "test.functions.test_inv_matmul.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_matmul._ensure_symmetric_grad": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "test.functions.test_inv_matmul.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_matmul.settings": {
  "data": {
   "shadows": "gpytorch.settings"
  },
  "type": "import"
 },
 "test.functions.test_inv_matmul.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_inv_matmul.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.functions.test_inv_quad.unittest"
   ]
  },
  "type": "module"
 },
 "test.functions.test_inv_quad.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad.TestInvQuadBatch": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "test.functions.test_inv_quad.unittest"
   ]
  },
  "type": "class"
 },
 "test.functions.test_inv_quad.TestInvQuadBatch.setUp": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "test.functions.test_inv_quad.os",
    "test.functions.test_inv_quad.random",
    "test.functions.test_inv_quad.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadBatch.tearDown": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "hasattr",
    "test.functions.test_inv_quad.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadBatch.test_inv_quad_many_vectors": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "test.functions.test_inv_quad.gpytorch",
    "test.functions.test_inv_quad.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadMultiBatch": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "test.functions.test_inv_quad.unittest"
   ]
  },
  "type": "class"
 },
 "test.functions.test_inv_quad.TestInvQuadMultiBatch.setUp": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "test.functions.test_inv_quad.os",
    "test.functions.test_inv_quad.random",
    "test.functions.test_inv_quad.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadMultiBatch.tearDown": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "hasattr",
    "test.functions.test_inv_quad.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadMultiBatch.test_inv_quad_many_vectors": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "test.functions.test_inv_quad.gpytorch",
    "test.functions.test_inv_quad.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadNonBatch": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "test.functions.test_inv_quad.unittest"
   ]
  },
  "type": "class"
 },
 "test.functions.test_inv_quad.TestInvQuadNonBatch.setUp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "test.functions.test_inv_quad.os",
    "test.functions.test_inv_quad.random",
    "test.functions.test_inv_quad.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadNonBatch.tearDown": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "hasattr",
    "test.functions.test_inv_quad.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadNonBatch.test_inv_quad_many_vectors": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "test.functions.test_inv_quad.gpytorch",
    "test.functions.test_inv_quad.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadNonBatch.test_inv_quad_vector": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "test.functions.test_inv_quad.gpytorch",
    "test.functions.test_inv_quad.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad_log_det": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.functions.test_inv_quad_log_det.unittest"
   ]
  },
  "type": "module"
 },
 "test.functions.test_inv_quad_log_det.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad_log_det.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad_log_det.RootLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.RootLazyTensor"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetBatch": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch",
    "test.functions.test_inv_quad_log_det.torch"
   ]
  },
  "type": "class"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetBatch.test_inv_quad_logdet_vector": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetBatch.test_inv_quad_only_vector": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetBatch.test_precond_inv_quad_logdet_vector": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetBatch.test_precond_inv_quad_only_vector": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetMultiBatch": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "test.functions.test_inv_quad_log_det.TestInvQuadLogDetBatch",
    "test.functions.test_inv_quad_log_det.torch"
   ]
  },
  "type": "class"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.functions.test_inv_quad_log_det.torch",
    "test.functions.test_inv_quad_log_det.unittest"
   ]
  },
  "type": "class"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch._test_inv_quad_logdet": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "gpytorch.lazy.RootLazyTensor",
    "test.functions.test_inv_quad_log_det.gpytorch",
    "test.functions.test_inv_quad_log_det.torch",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_inv_quad_logdet_many_vectors": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "test.functions.test_inv_quad_log_det.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_inv_quad_logdet_many_vectors_improper": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "test.functions.test_inv_quad_log_det.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_inv_quad_logdet_vector": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "test.functions.test_inv_quad_log_det.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_inv_quad_only_many_vectors": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "test.functions.test_inv_quad_log_det.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_inv_quad_only_vector": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "test.functions.test_inv_quad_log_det.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_precond_inv_quad_logdet_many_vectors": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "test.functions.test_inv_quad_log_det.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_precond_inv_quad_logdet_many_vectors_improper": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "test.functions.test_inv_quad_log_det.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_precond_inv_quad_logdet_vector": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "test.functions.test_inv_quad_log_det.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_precond_inv_quad_only_many_vectors": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "test.functions.test_inv_quad_log_det.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_precond_inv_quad_only_vector": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "test.functions.test_inv_quad_log_det.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad_log_det.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad_log_det.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad_log_det.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_log_normal_cdf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.functions.test_log_normal_cdf.unittest"
   ]
  },
  "type": "module"
 },
 "test.functions.test_log_normal_cdf.TestLogNormalCDF": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "test.functions.test_log_normal_cdf.unittest"
   ]
  },
  "type": "class"
 },
 "test.functions.test_log_normal_cdf.TestLogNormalCDF.test_backward": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "test.functions.test_log_normal_cdf.gpytorch",
    "test.functions.test_log_normal_cdf.torch",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "test.functions.test_log_normal_cdf.TestLogNormalCDF.test_forward": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "test.functions.test_log_normal_cdf.gpytorch",
    "test.functions.test_log_normal_cdf.math",
    "test.functions.test_log_normal_cdf.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_log_normal_cdf.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.functions.test_log_normal_cdf.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.functions.test_log_normal_cdf.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "test.functions.test_log_normal_cdf.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_log_normal_cdf.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_matern_covariance": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.functions.test_matern_covariance.unittest"
   ]
  },
  "type": "module"
 },
 "test.functions.test_matern_covariance.TestMaternCovariance": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "test.functions.test_matern_covariance.unittest"
   ]
  },
  "type": "class"
 },
 "test.functions.test_matern_covariance.TestMaternCovariance.test_1_2_backward": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "RuntimeError",
    "test.functions.test_matern_covariance.dist_func",
    "test.functions.test_matern_covariance.gpytorch",
    "test.functions.test_matern_covariance.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_matern_covariance.TestMaternCovariance.test_1_2_forward": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "test.functions.test_matern_covariance.dist_func",
    "test.functions.test_matern_covariance.gpytorch",
    "test.functions.test_matern_covariance.math",
    "test.functions.test_matern_covariance.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_matern_covariance.TestMaternCovariance.test_3_2_backward": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "RuntimeError",
    "test.functions.test_matern_covariance.dist_func",
    "test.functions.test_matern_covariance.gpytorch",
    "test.functions.test_matern_covariance.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_matern_covariance.TestMaternCovariance.test_3_2_forward": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "test.functions.test_matern_covariance.dist_func",
    "test.functions.test_matern_covariance.gpytorch",
    "test.functions.test_matern_covariance.math",
    "test.functions.test_matern_covariance.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_matern_covariance.TestMaternCovariance.test_5_2_backward": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "RuntimeError",
    "test.functions.test_matern_covariance.dist_func",
    "test.functions.test_matern_covariance.gpytorch",
    "test.functions.test_matern_covariance.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_matern_covariance.TestMaternCovariance.test_5_2_forward": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "test.functions.test_matern_covariance.dist_func",
    "test.functions.test_matern_covariance.gpytorch",
    "test.functions.test_matern_covariance.math",
    "test.functions.test_matern_covariance.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_matern_covariance.dist_func": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.functions.test_matern_covariance.gpytorch",
    "test.functions.test_matern_covariance.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_matern_covariance.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.functions.test_matern_covariance.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.functions.test_matern_covariance.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_matern_covariance.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_matmul": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.functions.test_matmul.unittest"
   ]
  },
  "type": "module"
 },
 "test.functions.test_matmul.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.functions.test_matmul.TestMatmulBatch": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "test.functions.test_matmul.unittest"
   ]
  },
  "type": "class"
 },
 "test.functions.test_matmul.TestMatmulBatch.setUp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "test.functions.test_matmul.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_matmul.TestMatmulBatch.test_matmul_multiple_vecs": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "gpytorch.test.utils.approx_equal",
    "test.functions.test_matmul.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_matmul.TestMatmulMultiBatch": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "test.functions.test_matmul.unittest"
   ]
  },
  "type": "class"
 },
 "test.functions.test_matmul.TestMatmulMultiBatch.setUp": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "test.functions.test_matmul.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_matmul.TestMatmulMultiBatch.test_matmul_multiple_vecs": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "gpytorch.test.utils.approx_equal",
    "test.functions.test_matmul.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_matmul.TestMatmulNonBatch": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.functions.test_matmul.unittest"
   ]
  },
  "type": "class"
 },
 "test.functions.test_matmul.TestMatmulNonBatch.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "test.functions.test_matmul.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_matmul.TestMatmulNonBatch.test_matmul_multiple_vecs": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "gpytorch.test.utils.approx_equal",
    "test.functions.test_matmul.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_matmul.TestMatmulNonBatch.test_matmul_vec": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "gpytorch.test.utils.approx_equal",
    "test.functions.test_matmul.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_matmul.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.functions.test_matmul.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_matmul.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_rbf_covariance": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.functions.test_rbf_covariance.unittest"
   ]
  },
  "type": "module"
 },
 "test.functions.test_rbf_covariance.TestRBFCovariance": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "test.functions.test_rbf_covariance.unittest"
   ]
  },
  "type": "class"
 },
 "test.functions.test_rbf_covariance.TestRBFCovariance.test_backward": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "RuntimeError",
    "test.functions.test_rbf_covariance.gpytorch",
    "test.functions.test_rbf_covariance.sq_dist_func",
    "test.functions.test_rbf_covariance.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_rbf_covariance.TestRBFCovariance.test_forward": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "test.functions.test_rbf_covariance.gpytorch",
    "test.functions.test_rbf_covariance.sq_dist_func",
    "test.functions.test_rbf_covariance.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_rbf_covariance.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.functions.test_rbf_covariance.sq_dist_func": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "test.functions.test_rbf_covariance.gpytorch",
    "test.functions.test_rbf_covariance.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_rbf_covariance.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_rbf_covariance.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_root_decomposition": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.functions.test_root_decomposition.unittest"
   ]
  },
  "type": "module"
 },
 "test.functions.test_root_decomposition.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.functions.test_root_decomposition.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.functions.test_root_decomposition.TestRootDecomposition": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.functions.test_root_decomposition.unittest"
   ]
  },
  "type": "class"
 },
 "test.functions.test_root_decomposition.TestRootDecomposition._create_mat": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "test.functions.test_root_decomposition.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_root_decomposition.TestRootDecomposition.test_root_decomposition": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "sum"
   ]
  },
  "type": "function"
 },
 "test.functions.test_root_decomposition.TestRootDecomposition.test_root_inv_decomposition": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "sum",
    "test.functions.test_root_decomposition.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_root_decomposition.TestRootDecompositionBatch": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "test.functions.test_root_decomposition.TestRootDecomposition"
   ]
  },
  "type": "class"
 },
 "test.functions.test_root_decomposition.TestRootDecompositionBatch._create_mat": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "test.functions.test_root_decomposition.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_root_decomposition.TestRootDecompositionMultiBatch": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "test.functions.test_root_decomposition.TestRootDecomposition"
   ]
  },
  "type": "class"
 },
 "test.functions.test_root_decomposition.TestRootDecompositionMultiBatch._create_mat": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "test.functions.test_root_decomposition.torch"
   ]
  },
  "type": "function"
 },
 "test.functions.test_root_decomposition.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_root_decomposition.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels": {
  "data": {},
  "type": "module"
 },
 "test.kernels.keops": {
  "data": {},
  "type": "module"
 },
 "test.kernels.keops.test_matern_kernel": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "test.kernels.keops.test_matern_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.keops.test_matern_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.keops.test_matern_kernel.GMaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MaternKernel"
  },
  "type": "import"
 },
 "test.kernels.keops.test_matern_kernel.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.keops.MaternKernel"
  },
  "type": "import"
 },
 "test.kernels.keops.test_matern_kernel.TestMatern25KeOpsBaseKernel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase",
    "test.kernels.keops.test_matern_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.keops.test_matern_kernel.TestMatern25KeOpsBaseKernel.create_kernel_ard": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "gpytorch.kernels.keops.MaternKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMatern25KeOpsBaseKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.kernels.keops.MaternKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "test.kernels.keops.test_matern_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_batch_matmul": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel",
    "gpytorch.kernels.keops.MaternKernel",
    "kern1",
    "kern2",
    "test.kernels.keops.test_matern_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_forward_nu05_x1_eq_x2": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_forward_nu05_x1_neq_x2": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_forward_nu15_x1_eq_x2": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_forward_nu15_x1_neq_x2": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_forward_nu25_x1_eq_x2": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_forward_nu25_x1_neq_x2": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_forward_x1_eq_x2": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel",
    "gpytorch.kernels.keops.MaternKernel",
    "kern1",
    "kern2",
    "test.kernels.keops.test_matern_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_forward_x1_neq_x2": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel",
    "gpytorch.kernels.keops.MaternKernel",
    "kern1",
    "kern2",
    "test.kernels.keops.test_matern_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.pykeops": {
  "data": {
   "shadows": "pykeops"
  },
  "type": "import"
 },
 "test.kernels.keops.test_matern_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.keops.test_matern_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.keops.test_rbf_kernel": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "test.kernels.keops.test_rbf_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.keops.test_rbf_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.keops.test_rbf_kernel.GRBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.keops.test_rbf_kernel.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.keops.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.keops.test_rbf_kernel.TestRBFKeOpsBaseKernel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase",
    "test.kernels.keops.test_rbf_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.keops.test_rbf_kernel.TestRBFKeOpsBaseKernel.create_kernel_ard": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "gpytorch.kernels.keops.RBFKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.keops.test_rbf_kernel.TestRBFKeOpsBaseKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.kernels.keops.RBFKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.keops.test_rbf_kernel.TestRBFKeOpsKernel": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "test.kernels.keops.test_rbf_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.keops.test_rbf_kernel.TestRBFKeOpsKernel.test_batch_matmul": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.keops.RBFKernel",
    "kern1",
    "kern2",
    "test.kernels.keops.test_rbf_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.keops.test_rbf_kernel.TestRBFKeOpsKernel.test_forward_x1_eq_x2": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.keops.RBFKernel",
    "kern1",
    "kern2",
    "test.kernels.keops.test_rbf_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.keops.test_rbf_kernel.TestRBFKeOpsKernel.test_forward_x1_neq_x2": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.keops.RBFKernel",
    "kern1",
    "kern2",
    "test.kernels.keops.test_rbf_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.keops.test_rbf_kernel.pykeops": {
  "data": {
   "shadows": "pykeops"
  },
  "type": "import"
 },
 "test.kernels.keops.test_rbf_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.keops.test_rbf_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_additive_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.kernels.test_additive_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_additive_kernel.AdditiveKernel": {
  "data": {
   "shadows": "gpytorch.kernels.AdditiveKernel"
  },
  "type": "import"
 },
 "test.kernels.test_additive_kernel.LinearKernel": {
  "data": {
   "shadows": "gpytorch.kernels.LinearKernel"
  },
  "type": "import"
 },
 "test.kernels.test_additive_kernel.ProductKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ProductKernel"
  },
  "type": "import"
 },
 "test.kernels.test_additive_kernel.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_additive_kernel.TestAdditiveKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.kernels.test_additive_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_additive_kernel.TestAdditiveKernel.test_computes_product_of_radial_basis_function": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "test.kernels.test_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_additive_kernel.TestAdditiveKernel.test_computes_product_of_radial_basis_function_diag": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "test.kernels.test_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_additive_kernel.TestAdditiveKernel.test_computes_product_of_three_radial_basis_function": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "gpytorch.kernels.ProductKernel",
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "test.kernels.test_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_additive_kernel.TestAdditiveKernel.test_computes_product_of_three_radial_basis_function_diag": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "test.kernels.test_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_additive_kernel.TestAdditiveKernel.test_computes_sum_of_radial_basis_function": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "test.kernels.test_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_additive_kernel.TestAdditiveKernel.test_computes_sum_of_radial_basis_function_diag": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "test.kernels.test_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_additive_kernel.TestAdditiveKernel.test_computes_sum_of_three_radial_basis_function": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "gpytorch.kernels.AdditiveKernel",
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "test.kernels.test_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_additive_kernel.TestAdditiveKernel.test_computes_sum_of_three_radial_basis_function_diag": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "test.kernels.test_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_additive_kernel.TestAdditiveKernel.test_computes_sum_radial_basis_function_gradient": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "kernel.kernels.raw_lengthscale.grad",
    "softplus",
    "test.kernels.test_additive_kernel.math",
    "test.kernels.test_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_additive_kernel.TestAdditiveKernel.test_computes_sum_three_radial_basis_function_gradient": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "gpytorch.kernels.AdditiveKernel",
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "kernel.kernels.raw_lengthscale.grad",
    "softplus",
    "test.kernels.test_additive_kernel.math",
    "test.kernels.test_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_additive_kernel.TestAdditiveKernel.test_is_stationary": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "gpytorch.kernels.LinearKernel",
    "gpytorch.kernels.RBFKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_additive_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_additive_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_additive_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_cosine_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.kernels.test_cosine_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_cosine_kernel.CosineKernel": {
  "data": {
   "shadows": "gpytorch.kernels.CosineKernel"
  },
  "type": "import"
 },
 "test.kernels.test_cosine_kernel.TestCosineKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.kernels.test_cosine_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_cosine_kernel.TestCosineKernel.test_batch": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gpytorch.kernels.CosineKernel",
    "kernel",
    "kernel.eval",
    "range",
    "test.kernels.test_cosine_kernel.math",
    "test.kernels.test_cosine_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_cosine_kernel.TestCosineKernel.test_batch_separate": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "gpytorch.kernels.CosineKernel",
    "kernel",
    "kernel.eval",
    "range",
    "test.kernels.test_cosine_kernel.math",
    "test.kernels.test_cosine_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_cosine_kernel.TestCosineKernel.test_computes_periodic_function": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.kernels.CosineKernel",
    "kernel",
    "range",
    "test.kernels.test_cosine_kernel.math",
    "test.kernels.test_cosine_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_cosine_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_cosine_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_cosine_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_cylindrical_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.kernels.test_cylindrical_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_cylindrical_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_cylindrical_kernel.CylindricalKernel": {
  "data": {
   "shadows": "gpytorch.kernels.CylindricalKernel"
  },
  "type": "import"
 },
 "test.kernels.test_cylindrical_kernel.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MaternKernel"
  },
  "type": "import"
 },
 "test.kernels.test_cylindrical_kernel.TestCylindricalKernel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase",
    "test.kernels.test_cylindrical_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_cylindrical_kernel.TestCylindricalKernel.create_data_double_batch": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "test.kernels.test_cylindrical_kernel.math",
    "test.kernels.test_cylindrical_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_cylindrical_kernel.TestCylindricalKernel.create_data_no_batch": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "test.kernels.test_cylindrical_kernel.math",
    "test.kernels.test_cylindrical_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_cylindrical_kernel.TestCylindricalKernel.create_data_single_batch": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "test.kernels.test_cylindrical_kernel.math",
    "test.kernels.test_cylindrical_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_cylindrical_kernel.TestCylindricalKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.kernels.CylindricalKernel",
    "gpytorch.kernels.MaternKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_cylindrical_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_cylindrical_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_cylindrical_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_grid_interpolation_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.kernels.test_grid_interpolation_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_grid_interpolation_kernel.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.kernels.test_grid_interpolation_kernel.InterpolatedLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.InterpolatedLazyTensor"
  },
  "type": "import"
 },
 "test.kernels.test_grid_interpolation_kernel.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_grid_interpolation_kernel.TestGridInterpolationKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.kernels.test_grid_interpolation_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_grid_interpolation_kernel.TestGridInterpolationKernel.test_batch_base_kernel": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "base_kernel",
    "gpytorch.kernels.GridInterpolationKernel",
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "test.kernels.test_grid_interpolation_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_grid_interpolation_kernel.TestGridInterpolationKernel.test_standard": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "base_kernel",
    "gpytorch.kernels.GridInterpolationKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.lazy.InterpolatedLazyTensor",
    "kernel",
    "test.kernels.test_grid_interpolation_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_grid_interpolation_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_grid_interpolation_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "gpytorch.utils.grid.create_data_from_grid",
    "len",
    "test.kernels.test_grid_kernel.grid",
    "test.kernels.test_grid_kernel.torch",
    "test.kernels.test_grid_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_grid_kernel.GridKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridKernel"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel.KroneckerProductLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.KroneckerProductLazyTensor"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel.LinearKernel": {
  "data": {
   "shadows": "gpytorch.kernels.LinearKernel"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel.TestGridKernel": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "test.kernels.test_grid_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_grid_kernel.TestGridKernel.test_grid_grid": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "base_kernel",
    "gpytorch.kernels.GridKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.lazy.KroneckerProductLazyTensor",
    "kernel",
    "test.kernels.test_grid_kernel.grid",
    "test.kernels.test_grid_kernel.grid_data",
    "test.kernels.test_grid_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_grid_kernel.TestGridKernel.test_non_stationary_base": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "RuntimeError",
    "base_kernel",
    "gpytorch.kernels.GridKernel",
    "gpytorch.kernels.LinearKernel",
    "test.kernels.test_grid_kernel.grid"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_grid_kernel.TestGridKernel.test_nongrid_grid": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "base_kernel",
    "gpytorch.kernels.GridKernel",
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "test.kernels.test_grid_kernel.d",
    "test.kernels.test_grid_kernel.grid",
    "test.kernels.test_grid_kernel.grid_data",
    "test.kernels.test_grid_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_grid_kernel.TestGridKernel.test_nongrid_nongrid": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "base_kernel",
    "gpytorch.kernels.GridKernel",
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "test.kernels.test_grid_kernel.d",
    "test.kernels.test_grid_kernel.grid",
    "test.kernels.test_grid_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_grid_kernel.create_data_from_grid": {
  "data": {
   "shadows": "gpytorch.utils.grid.create_data_from_grid"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel.d": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "test.kernels.test_grid_kernel.grid": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "test.kernels.test_grid_kernel.grid_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "test.kernels.test_grid_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_linear_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.kernels.test_linear_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_linear_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_linear_kernel.LinearKernel": {
  "data": {
   "shadows": "gpytorch.kernels.LinearKernel"
  },
  "type": "import"
 },
 "test.kernels.test_linear_kernel.TestLinearKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase",
    "test.kernels.test_linear_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_linear_kernel.TestLinearKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.kernels.LinearKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_linear_kernel.TestLinearKernel.test_computes_linear_function_rectangular": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.kernels.LinearKernel",
    "kernel",
    "test.kernels.test_linear_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_linear_kernel.TestLinearKernel.test_computes_linear_function_square": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "gpytorch.kernels.LinearKernel",
    "kernel",
    "kernel.eval",
    "range",
    "test.kernels.test_linear_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_linear_kernel.TestLinearKernel.test_computes_linear_function_square_batch": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "gpytorch.kernels.LinearKernel",
    "kernel",
    "kernel.eval",
    "range",
    "test.kernels.test_linear_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_linear_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_linear_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_matern_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.kernels.test_matern_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_matern_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_matern_kernel.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MaternKernel"
  },
  "type": "import"
 },
 "test.kernels.test_matern_kernel.TestMatern05BaseKernel": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase",
    "test.kernels.test_matern_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_matern_kernel.TestMatern05BaseKernel.create_kernel_ard": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMatern05BaseKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMatern25BaseKernel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase",
    "test.kernels.test_matern_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_matern_kernel.TestMatern25BaseKernel.create_kernel_ard": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMatern25BaseKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase",
    "test.kernels.test_matern_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.create_kernel_ard": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.test_ard": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "range",
    "test.kernels.test_matern_kernel.math",
    "test.kernels.test_matern_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.test_ard_batch": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "test.kernels.test_matern_kernel.math",
    "test.kernels.test_matern_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.test_ard_separate_batch": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "range",
    "test.kernels.test_matern_kernel.math",
    "test.kernels.test_matern_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.test_forward_nu_1_over_2": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel",
    "kernel",
    "test.kernels.test_matern_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.test_forward_nu_3_over_2": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel",
    "kernel",
    "kernel.eval",
    "test.kernels.test_matern_kernel.math",
    "test.kernels.test_matern_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.test_forward_nu_5_over_2": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "gpytorch.kernels.MaternKernel",
    "kernel",
    "kernel.eval",
    "test.kernels.test_matern_kernel.math",
    "test.kernels.test_matern_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_matern_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_matern_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel": {
  "data": {},
  "type": "module"
 },
 "test.kernels.test_newton_girard_additive_kernel.AdditiveKernel": {
  "data": {
   "shadows": "gpytorch.kernels.AdditiveKernel"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.ExactGP": {
  "data": {
   "shadows": "gpytorch.models.ExactGP"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.NewtonGirardAdditiveKernel": {
  "data": {
   "shadows": "gpytorch.kernels.NewtonGirardAdditiveKernel"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.create_kernel_ard": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpytorch.kernels.NewtonGirardAdditiveKernel",
    "gpytorch.kernels.RBFKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "gpytorch.kernels.NewtonGirardAdditiveKernel",
    "gpytorch.kernels.RBFKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_ard": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "AddK",
    "gpytorch.kernels.AdditiveKernel",
    "gpytorch.kernels.NewtonGirardAdditiveKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "manual_k",
    "manual_k.initialize",
    "range",
    "test.kernels.test_newton_girard_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_degree1": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "AddK",
    "gpytorch.kernels.AdditiveKernel",
    "gpytorch.kernels.NewtonGirardAdditiveKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "manual_k",
    "test.kernels.test_newton_girard_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_degree2": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "AddK",
    "AddK.base_kernel.lengthscale.numel",
    "AddK.outputscale.numel",
    "gpytorch.kernels.AdditiveKernel",
    "gpytorch.kernels.NewtonGirardAdditiveKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "manual_k",
    "test.kernels.test_newton_girard_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_degree3": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "AddK",
    "AddK.base_kernel.lengthscale.numel",
    "AddK.outputscale.numel",
    "gpytorch.kernels.AdditiveKernel",
    "gpytorch.kernels.NewtonGirardAdditiveKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "manual_k",
    "test.kernels.test_newton_girard_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_diag": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "AddK",
    "AddK.base_kernel.lengthscale.numel",
    "AddK.outputscale.numel",
    "gpytorch.kernels.AdditiveKernel",
    "gpytorch.kernels.NewtonGirardAdditiveKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "manual_k",
    "test.kernels.test_newton_girard_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_optimizing": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "AddK",
    "TestGPModel",
    "gpytorch.kernels.NewtonGirardAdditiveKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "gpytorch.likelihoods.GaussianLikelihood",
    "gpytorch.mlls.ExactMarginalLogLikelihood",
    "mll",
    "model",
    "range",
    "test.kernels.test_newton_girard_additive_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_optimizing.TestGPModel": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "gpytorch.models.ExactGP"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_optimizing.TestGPModel.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "gpytorch.means.ConstantMean",
    "super"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_optimizing.TestGPModel.forward": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "gpytorch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_periodic_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.kernels.test_periodic_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_periodic_kernel.PeriodicKernel": {
  "data": {
   "shadows": "gpytorch.kernels.PeriodicKernel"
  },
  "type": "import"
 },
 "test.kernels.test_periodic_kernel.TestPeriodicKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.kernels.test_periodic_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_periodic_kernel.TestPeriodicKernel.test_batch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "gpytorch.kernels.PeriodicKernel",
    "kernel",
    "kernel.eval",
    "range",
    "test.kernels.test_periodic_kernel.math",
    "test.kernels.test_periodic_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_periodic_kernel.TestPeriodicKernel.test_batch_separate": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "gpytorch.kernels.PeriodicKernel",
    "kernel",
    "kernel.eval",
    "range",
    "test.kernels.test_periodic_kernel.math",
    "test.kernels.test_periodic_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_periodic_kernel.TestPeriodicKernel.test_computes_periodic_function": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.kernels.PeriodicKernel",
    "kernel",
    "range",
    "test.kernels.test_periodic_kernel.math",
    "test.kernels.test_periodic_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_periodic_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_periodic_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_periodic_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_polynomial_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.kernels.test_polynomial_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_polynomial_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_polynomial_kernel.PolynomialKernel": {
  "data": {
   "shadows": "gpytorch.kernels.PolynomialKernel"
  },
  "type": "import"
 },
 "test.kernels.test_polynomial_kernel.TestPolynomialKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase",
    "test.kernels.test_polynomial_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_polynomial_kernel.TestPolynomialKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.kernels.PolynomialKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_polynomial_kernel.TestPolynomialKernel.test_computes_cubic_kernel": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "gpytorch.kernels.PolynomialKernel",
    "kernel",
    "kernel.eval",
    "kernel.offset.pow",
    "kernel.power",
    "range",
    "test.kernels.test_polynomial_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_polynomial_kernel.TestPolynomialKernel.test_computes_quadratic_kernel": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.kernels.PolynomialKernel",
    "kernel",
    "range",
    "test.kernels.test_polynomial_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_polynomial_kernel.TestPolynomialKernel.test_cubic_kernel_batch": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "gpytorch.kernels.PolynomialKernel",
    "kernel",
    "kernel.eval",
    "kernel.offset.pow",
    "kernel.power",
    "range",
    "test.kernels.test_polynomial_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_polynomial_kernel.TestPolynomialKernel.test_quadratic_kernel_batch": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "gpytorch.kernels.PolynomialKernel",
    "kernel",
    "kernel.eval",
    "kernel.offset.pow",
    "kernel.power",
    "range",
    "test.kernels.test_polynomial_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_polynomial_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_polynomial_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_polynomial_kernel_grad": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.kernels.test_polynomial_kernel_grad.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_polynomial_kernel_grad.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_polynomial_kernel_grad.PolynomialKernelGrad": {
  "data": {
   "shadows": "gpytorch.kernels.PolynomialKernelGrad"
  },
  "type": "import"
 },
 "test.kernels.test_polynomial_kernel_grad.TestPolynomialKernel": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase",
    "test.kernels.test_polynomial_kernel_grad.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_polynomial_kernel_grad.TestPolynomialKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "gpytorch.kernels.PolynomialKernelGrad"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_polynomial_kernel_grad.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.kernels.test_rbf_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_rbf_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase",
    "test.kernels.test_rbf_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.create_kernel_ard": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_ard": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "test.kernels.test_rbf_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_ard_batch": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "test.kernels.test_rbf_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_ard_separate_batch": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "test.kernels.test_rbf_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_computes_radial_basis_function": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "test.kernels.test_rbf_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_computes_radial_basis_function_gradient": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "kernel.raw_lengthscale.grad",
    "softplus",
    "test.kernels.test_rbf_kernel.math",
    "test.kernels.test_rbf_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_initialize_lengthscale": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.initialize",
    "kernel.lengthscale",
    "test.kernels.test_rbf_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_initialize_lengthscale_batch": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.initialize",
    "kernel.lengthscale",
    "test.kernels.test_rbf_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_subset_active_compute_radial_basis_function": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "test.kernels.test_rbf_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_subset_active_computes_radial_basis_function_gradient": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "kernel.raw_lengthscale.grad",
    "softplus",
    "test.kernels.test_rbf_kernel.math",
    "test.kernels.test_rbf_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel_grad": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.kernels.test_rbf_kernel_grad.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_rbf_kernel_grad.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel_grad.RBFKernelGrad": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernelGrad"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase",
    "test.kernels.test_rbf_kernel_grad.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad.create_kernel_ard": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernelGrad"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad.create_kernel_no_ard": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernelGrad"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad.test_initialize_lengthscale": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernelGrad",
    "kernel",
    "kernel.initialize",
    "kernel.lengthscale",
    "test.kernels.test_rbf_kernel_grad.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad.test_initialize_lengthscale_batch": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernelGrad",
    "kernel",
    "kernel.initialize",
    "kernel.lengthscale",
    "test.kernels.test_rbf_kernel_grad.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad.test_kernel": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernelGrad",
    "kernel",
    "test.kernels.test_rbf_kernel_grad.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad.test_kernel_batch": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernelGrad",
    "kernel",
    "test.kernels.test_rbf_kernel_grad.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad.test_kernel_cuda": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "test.kernels.test_rbf_kernel_grad.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel_grad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel_grad.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_rq_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.kernels.test_rq_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_rq_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_rq_kernel.RQKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RQKernel"
  },
  "type": "import"
 },
 "test.kernels.test_rq_kernel.TestRQKernel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase",
    "test.kernels.test_rq_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.create_kernel_ard": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.kernels.RQKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.kernels.RQKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_ard": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "gpytorch.kernels.RQKernel",
    "kernel",
    "kernel.alpha",
    "test.kernels.test_rq_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_ard_batch": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "gpytorch.kernels.RQKernel",
    "kernel",
    "kernel.alpha",
    "kernel.alpha.view",
    "kernel.eval",
    "kernel.initialize",
    "test.kernels.test_rq_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_ard_separate_batch": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "gpytorch.kernels.RQKernel",
    "kernel",
    "kernel.alpha",
    "kernel.eval",
    "kernel.initialize",
    "test.kernels.test_rq_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_computes_rational_quadratic": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "gpytorch.kernels.RQKernel",
    "kernel",
    "kernel.alpha",
    "kernel.eval",
    "test.kernels.test_rq_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_computes_rational_quadratic_gradient": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "gpytorch.kernels.RQKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "kernel.raw_alpha.grad",
    "kernel.raw_lengthscale.grad",
    "softplus",
    "test.kernels.test_rq_kernel.math",
    "test.kernels.test_rq_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_initialize_alpha": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "gpytorch.kernels.RQKernel",
    "kernel",
    "kernel.alpha",
    "kernel.initialize",
    "test.kernels.test_rq_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_initialize_lengthscale": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "gpytorch.kernels.RQKernel",
    "kernel",
    "kernel.initialize",
    "kernel.lengthscale",
    "test.kernels.test_rq_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_initialize_lengthscale_batch": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "gpytorch.kernels.RQKernel",
    "kernel",
    "kernel.initialize",
    "kernel.lengthscale",
    "test.kernels.test_rq_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_subset_active_compute_rational_quadratic": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "gpytorch.kernels.RQKernel",
    "kernel",
    "kernel.alpha",
    "kernel.eval",
    "kernel.initialize",
    "test.kernels.test_rq_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_subset_active_computes_rational_quadratic_gradient": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "gpytorch.kernels.RQKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "kernel.raw_alpha.grad",
    "kernel.raw_lengthscale.grad",
    "softplus",
    "test.kernels.test_rq_kernel.math",
    "test.kernels.test_rq_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_rq_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_rq_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_scale_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.kernels.test_scale_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_scale_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_scale_kernel.LinearKernel": {
  "data": {
   "shadows": "gpytorch.kernels.LinearKernel"
  },
  "type": "import"
 },
 "test.kernels.test_scale_kernel.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_scale_kernel.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase",
    "test.kernels.test_scale_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.create_kernel_ard": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.test_ard": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "kernel",
    "range",
    "test.kernels.test_scale_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.test_ard_batch": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "range",
    "test.kernels.test_scale_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.test_inherit_active_dims": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "kernel",
    "kernel.active_dims",
    "kernel.eval",
    "kernel.initialize",
    "test.kernels.test_scale_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.test_initialize_outputscale": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "kernel",
    "kernel.initialize",
    "kernel.outputscale",
    "test.kernels.test_scale_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.test_initialize_outputscale_batch": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "kernel",
    "kernel.initialize",
    "kernel.outputscale",
    "test.kernels.test_scale_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.test_non_stationary": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "gpytorch.kernels.LinearKernel",
    "gpytorch.kernels.ScaleKernel",
    "kernel",
    "kernel.is_stationary"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.test_stationary": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.kernels.ScaleKernel",
    "kernel",
    "kernel.is_stationary"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_scale_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_spectral_mixture_kernel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.kernels.test_spectral_mixture_kernel.unittest"
   ]
  },
  "type": "module"
 },
 "test.kernels.test_spectral_mixture_kernel.SpectralMixtureKernel": {
  "data": {
   "shadows": "gpytorch.kernels.SpectralMixtureKernel"
  },
  "type": "import"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.kernels.test_spectral_mixture_kernel.unittest"
   ]
  },
  "type": "class"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel.test_batch_separate": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "gpytorch.kernels.SpectralMixtureKernel",
    "kernel",
    "kernel.eval",
    "kernel.initialize",
    "range",
    "test.kernels.test_spectral_mixture_kernel.math",
    "test.kernels.test_spectral_mixture_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel.test_standard": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.kernels.SpectralMixtureKernel",
    "kernel",
    "range",
    "test.kernels.test_spectral_mixture_kernel.math",
    "test.kernels.test_spectral_mixture_kernel.torch"
   ]
  },
  "type": "function"
 },
 "test.kernels.test_spectral_mixture_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_spectral_mixture_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_spectral_mixture_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy": {
  "data": {},
  "type": "module"
 },
 "test.lazy.test_added_diag_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_added_diag_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_added_diag_lazy_tensor.AddedDiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.AddedDiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_added_diag_lazy_tensor.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_added_diag_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_added_diag_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_added_diag_lazy_tensor.RootLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.RootLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_added_diag_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.lazy.AddedDiagLazyTensor",
    "gpytorch.lazy.DiagLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_added_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorBatch": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_added_diag_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "gpytorch.lazy.AddedDiagLazyTensor",
    "gpytorch.lazy.DiagLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_added_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "test.lazy.test_added_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorMultiBatch": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_added_diag_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "gpytorch.lazy.AddedDiagLazyTensor",
    "gpytorch.lazy.DiagLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_added_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "test.lazy.test_added_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorPrecondOverride": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "test.lazy.test_added_diag_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorPrecondOverride.test_precond_solve": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "gpytorch.lazy.AddedDiagLazyTensor",
    "gpytorch.lazy.DiagLazyTensor",
    "gpytorch.lazy.RootLazyTensor",
    "test.lazy.test_added_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorPrecondOverride.test_precond_solve.nonstandard_preconditioner": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "gpytorch.lazy.RootLazyTensor",
    "test.lazy.test_added_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorPrecondOverride.test_precond_solve.nonstandard_preconditioner.precond_closure": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "test.lazy.test_added_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_added_diag_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_batch_repeat_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_batch_repeat_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.BatchRepeatLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.BatchRepeatLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.RectangularLazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_batch_repeat_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.lazy.BatchRepeatLazyTensor",
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_batch_repeat_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorBatch": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_batch_repeat_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpytorch.lazy.BatchRepeatLazyTensor",
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_batch_repeat_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorMultiBatch": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_batch_repeat_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "gpytorch.lazy.BatchRepeatLazyTensor",
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_batch_repeat_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorNonSquare": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase",
    "test.lazy.test_batch_repeat_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorNonSquare.create_lazy_tensor": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.lazify",
    "gpytorch.lazy.BatchRepeatLazyTensor",
    "test.lazy.test_batch_repeat_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorNonSquare.evaluate_lazy_tensor": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.ToeplitzLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.ToeplitzLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.lazify": {
  "data": {
   "shadows": "gpytorch.lazify"
  },
  "type": "import"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_block_diag_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_block_diag_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_block_diag_lazy_tensor.BlockDiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.BlockDiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_block_diag_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_block_diag_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_block_diag_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.lazy.BlockDiagLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_block_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "range",
    "test.lazy.test_block_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensorBatch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_block_diag_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "gpytorch.lazy.BlockDiagLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_block_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "range",
    "test.lazy.test_block_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensorMultiBatch": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_block_diag_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "gpytorch.lazy.BlockDiagLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_block_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "range",
    "test.lazy.test_block_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_block_diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_block_diag_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_block_interleaved_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_block_interleaved_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.BlockInterleavedLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.BlockInterleavedLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_block_interleaved_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.lazy.BlockInterleavedLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_block_interleaved_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "range",
    "test.lazy.test_block_interleaved_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensorBatch": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_block_interleaved_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "gpytorch.lazy.BlockInterleavedLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_block_interleaved_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "range",
    "test.lazy.test_block_interleaved_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensorMultiBatch": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_block_interleaved_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "gpytorch.lazy.BlockInterleavedLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_block_interleaved_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "range",
    "test.lazy.test_block_interleaved_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_cached_cg_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "test.lazy.test_cached_cg_lazy_tensor.CachedCGLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.CachedCGLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_cached_cg_lazy_tensor.ExtraComputationWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.ExtraComputationWarning"
  },
  "type": "import"
 },
 "test.lazy.test_cached_cg_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_cached_cg_lazy_tensor.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.lazy.test_cached_cg_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensor": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorNoLogdet"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensor.test_inv_quad_logdet": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "any",
    "gpytorch.utils.warnings.ExtraComputationWarning",
    "issubclass",
    "range",
    "test.lazy.test_cached_cg_lazy_tensor.gpytorch",
    "test.lazy.test_cached_cg_lazy_tensor.math",
    "test.lazy.test_cached_cg_lazy_tensor.torch",
    "test.lazy.test_cached_cg_lazy_tensor.warnings"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensor.test_inv_quad_logdet_no_reduce": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "any",
    "gpytorch.utils.warnings.ExtraComputationWarning",
    "issubclass",
    "range",
    "test.lazy.test_cached_cg_lazy_tensor.gpytorch",
    "test.lazy.test_cached_cg_lazy_tensor.math",
    "test.lazy.test_cached_cg_lazy_tensor.torch",
    "test.lazy.test_cached_cg_lazy_tensor.warnings"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorBatch": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensor"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "gpytorch.lazy.CachedCGLazyTensor",
    "gpytorch.lazy.CachedCGLazyTensor.precompute_terms",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_cached_cg_lazy_tensor.gpytorch",
    "test.lazy.test_cached_cg_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorMultiBatch": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensor"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "gpytorch.lazy.CachedCGLazyTensor",
    "gpytorch.lazy.CachedCGLazyTensor.precompute_terms",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_cached_cg_lazy_tensor.gpytorch",
    "test.lazy.test_cached_cg_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorNoLogdet": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_cached_cg_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorNoLogdet._test_inv_matmul": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "any",
    "gpytorch.test.lazy_tensor_test_case._ensure_symmetric_grad",
    "gpytorch.utils.warnings.ExtraComputationWarning",
    "issubclass",
    "len",
    "test.lazy.test_cached_cg_lazy_tensor.gpytorch",
    "test.lazy.test_cached_cg_lazy_tensor.math",
    "test.lazy.test_cached_cg_lazy_tensor.torch",
    "test.lazy.test_cached_cg_lazy_tensor.warnings",
    "unittest.mock.MagicMock",
    "unittest.mock.patch",
    "zip"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorNoLogdet._test_inv_quad_logdet": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "gpytorch.utils.warnings.ExtraComputationWarning",
    "super",
    "test.lazy.test_cached_cg_lazy_tensor.warnings"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorNoLogdet.create_lazy_tensor": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "gpytorch.lazy.CachedCGLazyTensor",
    "gpytorch.lazy.CachedCGLazyTensor.precompute_terms",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_cached_cg_lazy_tensor.gpytorch",
    "test.lazy.test_cached_cg_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorNoLogdet.evaluate_lazy_tensor": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorNoLogdet.test_inv_matmul_matrix_broadcast": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorNoLogdet.test_inv_matmul_vector": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorNoLogdet.test_inv_quad_logdet": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorNoLogdet.test_inv_quad_logdet_no_reduce": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorNoLogdet.test_root_inv_decomposition": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "gpytorch.utils.warnings.ExtraComputationWarning",
    "test.lazy.test_cached_cg_lazy_tensor.torch",
    "test.lazy.test_cached_cg_lazy_tensor.warnings"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorNoLogdetBatch": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorNoLogdet"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_cached_cg_lazy_tensor.TestCachedCGLazyTensorNoLogdetBatch.create_lazy_tensor": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "gpytorch.lazy.CachedCGLazyTensor",
    "gpytorch.lazy.CachedCGLazyTensor.precompute_terms",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_cached_cg_lazy_tensor.gpytorch",
    "test.lazy.test_cached_cg_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_cached_cg_lazy_tensor._ensure_symmetric_grad": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case._ensure_symmetric_grad"
  },
  "type": "import"
 },
 "test.lazy.test_cached_cg_lazy_tensor.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.lazy.test_cached_cg_lazy_tensor.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.lazy.test_cached_cg_lazy_tensor.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.lazy.test_cached_cg_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_cached_cg_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_cached_cg_lazy_tensor.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.lazy.test_cat_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_cat_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_cat_lazy_tensor.CatLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.CatLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_cat_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_cat_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_cat_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "gpytorch.lazy.CatLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_cat_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorBatch": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_cat_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "gpytorch.lazy.CatLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_cat_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorBatchCat": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_cat_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorBatchCat.create_lazy_tensor": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "gpytorch.lazy.CatLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_cat_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorBatchCat.evaluate_lazy_tensor": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorColumn": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_cat_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorColumn.create_lazy_tensor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "gpytorch.lazy.CatLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_cat_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorColumn.evaluate_lazy_tensor": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorMultiBatch": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_cat_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "gpytorch.lazy.CatLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_cat_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_cat_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_chol_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_chol_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_chol_lazy_tensor.CholLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.CholLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_chol_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_chol_lazy_tensor.TestCholLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_chol_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_chol_lazy_tensor.TestCholLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "gpytorch.lazy.CholLazyTensor",
    "test.lazy.test_chol_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_chol_lazy_tensor.TestCholLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "test.lazy.test_chol_lazy_tensor.TestCholLazyTensorBatch": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "test.lazy.test_chol_lazy_tensor.TestCholLazyTensor"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_chol_lazy_tensor.TestCholLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "gpytorch.lazy.CholLazyTensor",
    "test.lazy.test_chol_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_chol_lazy_tensor.TestCholLazyTensorMultiBatch": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "test.lazy.test_chol_lazy_tensor.TestCholLazyTensor"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_chol_lazy_tensor.TestCholLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "gpytorch.lazy.CholLazyTensor",
    "test.lazy.test_chol_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_chol_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_chol_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_constant_mul_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_constant_mul_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_constant_mul_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_constant_mul_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_constant_mul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpytorch.utils.toeplitz.sym_toeplitz"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorBatch": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_constant_mul_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_constant_mul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "gpytorch.utils.toeplitz.sym_toeplitz",
    "test.lazy.test_constant_mul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorMultiBatch": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_constant_mul_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_constant_mul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorMultiBatchBroadcastConstant": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_constant_mul_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorMultiBatchBroadcastConstant.create_lazy_tensor": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_constant_mul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorMultiBatchBroadcastConstant.evaluate_lazy_tensor": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.ToeplitzLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.ToeplitzLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_constant_mul_lazy_tensor.sym_toeplitz": {
  "data": {
   "shadows": "gpytorch.utils.toeplitz.sym_toeplitz"
  },
  "type": "import"
 },
 "test.lazy.test_constant_mul_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_constant_mul_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_diag_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_diag_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_diag_lazy_tensor.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_diag_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_diag_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "gpytorch.lazy.DiagLazyTensor",
    "test.lazy.test_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensorBatch": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensor"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "gpytorch.lazy.DiagLazyTensor",
    "test.lazy.test_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "range",
    "test.lazy.test_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensorMultiBatch": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensor"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gpytorch.lazy.DiagLazyTensor",
    "test.lazy.test_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "range",
    "test.lazy.test_diag_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_diag_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_interpolated_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_interpolated_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_interpolated_lazy_tensor.InterpolatedLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.InterpolatedLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_interpolated_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_interpolated_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_interpolated_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpytorch.lazy.InterpolatedLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_interpolated_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "test.lazy.test_interpolated_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensor.test_quad_form_derivative": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorBatch": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_interpolated_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "gpytorch.lazy.InterpolatedLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_interpolated_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "range",
    "test.lazy.test_interpolated_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorBatch.test_quad_form_derivative": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorMultiBatch": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_interpolated_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "gpytorch.lazy.InterpolatedLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_interpolated_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "range",
    "test.lazy.test_interpolated_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorMultiBatch.test_quad_form_derivative": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorRectangular": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_interpolated_lazy_tensor.empty_method",
    "test.lazy.test_interpolated_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorRectangular.create_lazy_tensor": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "gpytorch.lazy.InterpolatedLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_interpolated_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorRectangular.evaluate_lazy_tensor": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.empty_method": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_interpolated_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_kronecker_product_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.KroneckerProductLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.KroneckerProductLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.RectangularLazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_kronecker_product_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "gpytorch.lazy.KroneckerProductLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_kronecker_product_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "test.lazy.test_kronecker_product_lazy_tensor.kron"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorBatch": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensor"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "gpytorch.lazy.KroneckerProductLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_kronecker_product_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorRectangular": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase",
    "test.lazy.test_kronecker_product_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorRectangular.create_lazy_tensor": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "gpytorch.lazy.KroneckerProductLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_kronecker_product_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorRectangular.evaluate_lazy_tensor": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "test.lazy.test_kronecker_product_lazy_tensor.kron"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorRectangularMultiBatch": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorRectangular"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorRectangularMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "gpytorch.lazy.KroneckerProductLazyTensor",
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_kronecker_product_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.kron": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "range",
    "test.lazy.test_kronecker_product_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor": {
  "data": {},
  "type": "module"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorAdditive": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorAdditive.create_lazy_tensor": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "kern",
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch",
    "test.lazy.test_lazy_evaluated_kernel_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorAdditive.evaluate_lazy_tensor": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorAdditive.test_inv_matmul_matrix_with_checkpointing": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_lazy_evaluated_kernel_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch._test_inv_matmul": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case._ensure_symmetric_grad",
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch",
    "test.lazy.test_lazy_evaluated_kernel_tensor.math",
    "test.lazy.test_lazy_evaluated_kernel_tensor.torch",
    "unittest.mock.MagicMock",
    "unittest.mock.patch",
    "zip"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch._test_matmul": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "test.lazy.test_lazy_evaluated_kernel_tensor.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "kern",
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch",
    "test.lazy.test_lazy_evaluated_kernel_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch.test_batch_getitem": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "kern",
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch",
    "test.lazy.test_lazy_evaluated_kernel_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch.test_getitem_tensor_index": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch.test_inv_matmul_matrix_with_checkpointing": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch",
    "test.lazy.test_lazy_evaluated_kernel_tensor.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch.test_quad_form_derivative": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorMultitaskBatch": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorMultitaskBatch.create_lazy_tensor": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "kern",
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch",
    "test.lazy.test_lazy_evaluated_kernel_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorMultitaskBatch.test_inv_matmul_matrix_with_checkpointing": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor._ensure_symmetric_grad": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case._ensure_symmetric_grad"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_matmul_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_matmul_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_matmul_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_matmul_lazy_tensor.MatmulLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.MatmulLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_matmul_lazy_tensor.RectangularLazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_matmul_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "gpytorch.lazy.MatmulLazyTensor",
    "test.lazy.test_matmul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorBatch": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_matmul_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpytorch.lazy.MatmulLazyTensor",
    "test.lazy.test_matmul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorRectangular": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase",
    "test.lazy.test_matmul_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorRectangular.create_lazy_tensor": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "gpytorch.lazy.MatmulLazyTensor",
    "test.lazy.test_matmul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorRectangular.evaluate_lazy_tensor": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorRectangularMultiBatch": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase",
    "test.lazy.test_matmul_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorRectangularMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "gpytorch.lazy.MatmulLazyTensor",
    "test.lazy.test_matmul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorRectangularMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_matmul_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_mul_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_mul_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_mul_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_mul_lazy_tensor.RootLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.RootLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensor": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_mul_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "gpytorch.lazy.RootLazyTensor",
    "test.lazy.test_mul_lazy_tensor.make_random_mat",
    "test.lazy.test_mul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "test.lazy.test_mul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensorBatch": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_mul_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "gpytorch.lazy.RootLazyTensor",
    "test.lazy.test_mul_lazy_tensor.make_random_mat",
    "test.lazy.test_mul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "test.lazy.test_mul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensorMultiBatch": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_mul_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "gpytorch.lazy.RootLazyTensor",
    "test.lazy.test_mul_lazy_tensor.make_random_mat",
    "test.lazy.test_mul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "test.lazy.test_mul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensorMultiBatch.test_inv_quad_logdet": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.make_random_mat": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.lazy.test_mul_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_mul_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_non_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "test.lazy.test_non_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_non_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_non_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_non_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensor.test_root_decomposition_exact": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "test.lazy.test_non_lazy_tensor.gpytorch",
    "test.lazy.test_non_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensorBatch": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_non_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_non_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensorBatch.test_root_decomposition_exact": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "test.lazy.test_non_lazy_tensor.gpytorch",
    "test.lazy.test_non_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensorMultiBatch": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_non_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "test.lazy.test_non_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.lazy.test_non_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_non_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_psd_sum_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_psd_sum_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_psd_sum_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_psd_sum_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_psd_sum_lazy_tensor.PsdSumLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.PsdSumLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_psd_sum_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.lazy.PsdSumLazyTensor",
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_psd_sum_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensorBatch": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_psd_sum_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "gpytorch.lazy.PsdSumLazyTensor",
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_psd_sum_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensorMultiBatch": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_psd_sum_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "gpytorch.lazy.PsdSumLazyTensor",
    "test.lazy.test_psd_sum_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_psd_sum_lazy_tensor.ToeplitzLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.ToeplitzLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_psd_sum_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_psd_sum_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_root_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_root_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_root_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_root_lazy_tensor.RootLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.RootLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_root_lazy_tensor.TestRootLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_root_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_root_lazy_tensor.TestRootLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.lazy.RootLazyTensor",
    "test.lazy.test_root_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_root_lazy_tensor.TestRootLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "test.lazy.test_root_lazy_tensor.TestRootLazyTensorBatch": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "test.lazy.test_root_lazy_tensor.TestRootLazyTensor"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_root_lazy_tensor.TestRootLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "gpytorch.lazy.RootLazyTensor",
    "test.lazy.test_root_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_root_lazy_tensor.TestRootLazyTensorMultiBatch": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "test.lazy.test_root_lazy_tensor.TestRootLazyTensor"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_root_lazy_tensor.TestRootLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "gpytorch.lazy.RootLazyTensor",
    "test.lazy.test_root_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_root_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_root_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_sum_batch_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_sum_batch_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_sum_batch_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_sum_batch_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_sum_batch_lazy_tensor.SumBatchLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.SumBatchLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_sum_batch_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "gpytorch.lazy.SumBatchLazyTensor",
    "test.lazy.test_sum_batch_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensorBatch": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_sum_batch_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "gpytorch.lazy.SumBatchLazyTensor",
    "test.lazy.test_sum_batch_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensorMultiBatch": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_sum_batch_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "gpytorch.lazy.NonLazyTensor",
    "gpytorch.lazy.SumBatchLazyTensor",
    "test.lazy.test_sum_batch_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "test.lazy.test_sum_batch_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_sum_batch_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_sum_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_sum_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_sum_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_sum_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_sum_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorBatch": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_sum_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_sum_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorBroadcasting": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "test.lazy.test_sum_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorBroadcasting.test_broadcast_lazy_shape": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "gpytorch.lazy.lazify",
    "test.lazy.test_sum_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorBroadcasting.test_broadcast_same_shape": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "gpytorch.lazy.lazify",
    "test.lazy.test_sum_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorBroadcasting.test_broadcast_tensor_shape": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "gpytorch.lazy.lazify",
    "test.lazy.test_sum_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorMultiBatch": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_sum_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_sum_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.ToeplitzLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.ToeplitzLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_sum_lazy_tensor.lazify": {
  "data": {
   "shadows": "gpytorch.lazy.lazify"
  },
  "type": "import"
 },
 "test.lazy.test_sum_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_sum_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_toeplitz_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_toeplitz_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_toeplitz_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_toeplitz_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_toeplitz_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "gpytorch.utils.toeplitz.sym_toeplitz"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensorBatch": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_toeplitz_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_toeplitz_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "gpytorch.utils.toeplitz.sym_toeplitz",
    "test.lazy.test_toeplitz_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensorMultiBatch": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase",
    "test.lazy.test_toeplitz_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "gpytorch.lazy.ToeplitzLazyTensor",
    "test.lazy.test_toeplitz_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "gpytorch.utils.toeplitz.sym_toeplitz",
    "test.lazy.test_toeplitz_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_toeplitz_lazy_tensor.ToeplitzLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.ToeplitzLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_toeplitz_lazy_tensor.toeplitz": {
  "data": {
   "shadows": "gpytorch.utils.toeplitz"
  },
  "type": "import"
 },
 "test.lazy.test_toeplitz_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_toeplitz_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_zero_lazy_tensor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.lazy.test_zero_lazy_tensor.unittest"
   ]
  },
  "type": "module"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.lazy.test_zero_lazy_tensor.unittest"
   ]
  },
  "type": "class"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor.test_add_diag": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "gpytorch.lazy.ZeroLazyTensor",
    "gpytorch.test.utils.approx_equal",
    "test.lazy.test_zero_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor.test_evaluate": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.lazy.ZeroLazyTensor",
    "test.lazy.test_zero_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor.test_get_item_tensor_index": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Ellipsis",
    "gpytorch.lazy.ZeroLazyTensor",
    "gpytorch.test.utils.approx_equal",
    "slice",
    "test.lazy.test_zero_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor.test_get_item_tensor_index_on_batch": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Ellipsis",
    "gpytorch.lazy.ZeroLazyTensor",
    "gpytorch.test.utils.approx_equal",
    "slice",
    "test.lazy.test_zero_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor.test_getitem": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "gpytorch.lazy.ZeroLazyTensor",
    "test.lazy.test_zero_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor.test_getitem_complex": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.lazy.ZeroLazyTensor",
    "test.lazy.test_zero_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor.test_getitem_ellipsis": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "gpytorch.lazy.ZeroLazyTensor",
    "test.lazy.test_zero_lazy_tensor.torch"
   ]
  },
  "type": "function"
 },
 "test.lazy.test_zero_lazy_tensor.ZeroLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.ZeroLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_zero_lazy_tensor.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.lazy.test_zero_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_zero_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.likelihoods": {
  "data": {},
  "type": "module"
 },
 "test.likelihoods.test_bernoulli_likelihood": {
  "data": {},
  "type": "module"
 },
 "test.likelihoods.test_bernoulli_likelihood.BaseLikelihoodTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase"
  },
  "type": "import"
 },
 "test.likelihoods.test_bernoulli_likelihood.BernoulliLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.BernoulliLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_bernoulli_likelihood.TestBernoulliLikelihood": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase",
    "test.likelihoods.test_bernoulli_likelihood.unittest"
   ]
  },
  "type": "class"
 },
 "test.likelihoods.test_bernoulli_likelihood.TestBernoulliLikelihood._create_targets": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "test.likelihoods.test_bernoulli_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_bernoulli_likelihood.TestBernoulliLikelihood._test_log_marginal": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "gpytorch.likelihoods._OneDimensionalLikelihood.log_marginal",
    "input",
    "test.likelihoods.test_bernoulli_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_bernoulli_likelihood.TestBernoulliLikelihood._test_log_prob": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "gpytorch.likelihoods._OneDimensionalLikelihood.expected_log_prob",
    "input",
    "test.likelihoods.test_bernoulli_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_bernoulli_likelihood.TestBernoulliLikelihood.create_likelihood": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gpytorch.likelihoods.BernoulliLikelihood"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_bernoulli_likelihood._OneDimensionalLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods._OneDimensionalLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_bernoulli_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.likelihoods.test_bernoulli_likelihood.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.likelihoods.test_gaussian_likelihood.unittest"
   ]
  },
  "type": "module"
 },
 "test.likelihoods.test_gaussian_likelihood.BaseLikelihoodTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.FixedGaussianNoise": {
  "data": {
   "shadows": "gpytorch.likelihoods.noise_models.FixedGaussianNoise"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihood": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase",
    "test.likelihoods.test_gaussian_likelihood.unittest"
   ]
  },
  "type": "class"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihood.create_likelihood": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "test.likelihoods.test_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihood.test_fixed_noise_gaussian_likelihood": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "UserWarning",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.DiagLazyTensor",
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "gpytorch.likelihoods.noise_models.FixedGaussianNoise",
    "lkhd",
    "test.likelihoods.test_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihoodBatch": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase",
    "test.likelihoods.test_gaussian_likelihood.unittest"
   ]
  },
  "type": "class"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihoodBatch.create_likelihood": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "test.likelihoods.test_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihoodBatch.test_nonbatch": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihoodMultiBatch": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase",
    "test.likelihoods.test_gaussian_likelihood.unittest"
   ]
  },
  "type": "class"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihoodMultiBatch.create_likelihood": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "test.likelihoods.test_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihoodMultiBatch.test_batch": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihoodMultiBatch.test_nonbatch": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihood": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase",
    "test.likelihoods.test_gaussian_likelihood.unittest"
   ]
  },
  "type": "class"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihood.create_likelihood": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "gpytorch.likelihoods.GaussianLikelihood"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihoodBatch": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihood"
   ]
  },
  "type": "class"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihoodBatch.create_likelihood": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "gpytorch.likelihoods.GaussianLikelihood",
    "test.likelihoods.test_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihoodBatch.test_nonbatch": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihoodMultiBatch": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihood"
   ]
  },
  "type": "class"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihoodMultiBatch.create_likelihood": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "gpytorch.likelihoods.GaussianLikelihood",
    "test.likelihoods.test_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihoodMultiBatch.test_batch": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihoodMultiBatch.test_nonbatch": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "math.pi",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.latent_error",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.torch",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.train_x",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.train_y1",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.train_y2",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.unittest"
   ]
  },
  "type": "module"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskGPModel": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "test.likelihoods.test_general_multitask_gaussian_likelihood.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskGPModel.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "gpytorch.kernels.MultitaskKernel",
    "gpytorch.kernels.RBFKernel",
    "gpytorch.means.ConstantMean",
    "gpytorch.means.MultitaskMean",
    "super",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskGPModel",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.train_x",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.train_y"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskGPModel.forward": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskGaussianLikelihoodKronecker": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihoodKronecker"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MultitaskKernel"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskMean": {
  "data": {
   "shadows": "gpytorch.means.MultitaskMean"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.TestMultiTaskGPRegression": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "test.likelihoods.test_general_multitask_gaussian_likelihood.unittest"
   ]
  },
  "type": "class"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.TestMultiTaskGPRegression.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "test.likelihoods.test_general_multitask_gaussian_likelihood.os",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.random",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.TestMultiTaskGPRegression.tearDown": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "hasattr",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.TestMultiTaskGPRegression.test_multitask_low_rank_noise_covar": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "gpytorch.likelihoods.MultitaskGaussianLikelihoodKronecker",
    "mll",
    "model",
    "model.eval",
    "range",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskGPModel",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.gpytorch",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.torch",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.train_x",
    "test.likelihoods.test_general_multitask_gaussian_likelihood.train_y"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.latent_error": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.train_x": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.train_y": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.train_y1": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.train_y2": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood": {
  "data": {},
  "type": "module"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.BaseLikelihoodTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase"
  },
  "type": "import"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.KroneckerProductLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.KroneckerProductLazyTensor"
  },
  "type": "import"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.MultitaskGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.RootLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.RootLazyTensor"
  },
  "type": "import"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihood": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase",
    "test.likelihoods.test_multitask_gaussian_likelihood.unittest"
   ]
  },
  "type": "class"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihood._create_conditional_input": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "test.likelihoods.test_multitask_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihood._create_marginal_input": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal",
    "gpytorch.lazy.KroneckerProductLazyTensor",
    "gpytorch.lazy.RootLazyTensor",
    "test.likelihoods.test_multitask_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihood._create_targets": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "test.likelihoods.test_multitask_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihood.create_likelihood": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.likelihoods.MultitaskGaussianLikelihood"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihoodBatch": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihood"
   ]
  },
  "type": "class"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihoodBatch.create_likelihood": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "gpytorch.likelihoods.MultitaskGaussianLikelihood",
    "test.likelihoods.test_multitask_gaussian_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihoodBatch.test_nonbatch": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.likelihoods.test_softmax_likelihood": {
  "data": {},
  "type": "module"
 },
 "test.likelihoods.test_softmax_likelihood.BaseLikelihoodTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase"
  },
  "type": "import"
 },
 "test.likelihoods.test_softmax_likelihood.Distribution": {
  "data": {
   "shadows": "torch.distributions.Distribution"
  },
  "type": "import"
 },
 "test.likelihoods.test_softmax_likelihood.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.likelihoods.test_softmax_likelihood.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.likelihoods.test_softmax_likelihood.SoftmaxLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.SoftmaxLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase",
    "test.likelihoods.test_softmax_likelihood.unittest"
   ]
  },
  "type": "class"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood._create_conditional_input": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "test.likelihoods.test_softmax_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood._create_marginal_input": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "gpytorch.distributions.MultitaskMultivariateNormal.from_batch_mvn",
    "gpytorch.distributions.MultivariateNormal",
    "test.likelihoods.test_softmax_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood._create_targets": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "test.likelihoods.test_softmax_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood._test_conditional": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "input",
    "likelihood",
    "test.likelihoods.test_softmax_likelihood.torch",
    "torch.distributions.Distribution"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood._test_log_prob": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "input",
    "likelihood",
    "likelihood.expected_log_prob",
    "test.likelihoods.test_softmax_likelihood.torch"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood._test_marginal": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "input",
    "isinstance",
    "len",
    "likelihood",
    "test.likelihoods.test_softmax_likelihood.torch",
    "torch.distributions.Distribution"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood.create_likelihood": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "gpytorch.likelihoods.SoftmaxLikelihood"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihoodNoMixing": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood"
   ]
  },
  "type": "class"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihoodNoMixing.create_likelihood": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "gpytorch.likelihoods.SoftmaxLikelihood"
   ]
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.likelihoods.test_softmax_likelihood.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.means": {
  "data": {},
  "type": "module"
 },
 "test.means.test_constant_mean": {
  "data": {},
  "type": "module"
 },
 "test.means.test_constant_mean.BaseMeanTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_mean_test_case.BaseMeanTestCase"
  },
  "type": "import"
 },
 "test.means.test_constant_mean.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.means.test_constant_mean.TestConstantMean": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.base_mean_test_case.BaseMeanTestCase",
    "test.means.test_constant_mean.unittest"
   ]
  },
  "type": "class"
 },
 "test.means.test_constant_mean.TestConstantMean.create_mean": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.means.ConstantMean"
   ]
  },
  "type": "function"
 },
 "test.means.test_constant_mean.TestConstantMeanBatch": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "gpytorch.test.base_mean_test_case.BaseMeanTestCase",
    "test.means.test_constant_mean.torch",
    "test.means.test_constant_mean.unittest"
   ]
  },
  "type": "class"
 },
 "test.means.test_constant_mean.TestConstantMeanBatch.create_mean": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "gpytorch.means.ConstantMean"
   ]
  },
  "type": "function"
 },
 "test.means.test_constant_mean.TestConstantMeanMultiBatch": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "gpytorch.test.base_mean_test_case.BaseMeanTestCase",
    "test.means.test_constant_mean.torch",
    "test.means.test_constant_mean.unittest"
   ]
  },
  "type": "class"
 },
 "test.means.test_constant_mean.TestConstantMeanMultiBatch.create_mean": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "gpytorch.means.ConstantMean"
   ]
  },
  "type": "function"
 },
 "test.means.test_constant_mean.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.means.test_constant_mean.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.means.test_constant_mean_grad": {
  "data": {},
  "type": "module"
 },
 "test.means.test_constant_mean_grad.BaseMeanTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_mean_test_case.BaseMeanTestCase"
  },
  "type": "import"
 },
 "test.means.test_constant_mean_grad.ConstantMeanGrad": {
  "data": {
   "shadows": "gpytorch.means.ConstantMeanGrad"
  },
  "type": "import"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGrad": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.base_mean_test_case.BaseMeanTestCase",
    "test.means.test_constant_mean_grad.unittest"
   ]
  },
  "type": "class"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGrad.create_mean": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "gpytorch.means.ConstantMeanGrad",
    "test.means.test_constant_mean_grad.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGrad.test_forward_mat": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mean",
    "test.means.test_constant_mean_grad.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGrad.test_forward_mat_batch": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mean",
    "test.means.test_constant_mean_grad.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGrad.test_forward_mat_multi_batch": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "mean",
    "test.means.test_constant_mean_grad.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGrad.test_forward_vec": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mean",
    "test.means.test_constant_mean_grad.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGradBatch": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "test.means.test_constant_mean_grad.TestConstantMeanGrad",
    "test.means.test_constant_mean_grad.torch"
   ]
  },
  "type": "class"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGradMultiBatch": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "test.means.test_constant_mean_grad.TestConstantMeanGrad",
    "test.means.test_constant_mean_grad.torch"
   ]
  },
  "type": "class"
 },
 "test.means.test_constant_mean_grad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.means.test_constant_mean_grad.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.means.test_linear_mean": {
  "data": {},
  "type": "module"
 },
 "test.means.test_linear_mean.BaseMeanTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_mean_test_case.BaseMeanTestCase"
  },
  "type": "import"
 },
 "test.means.test_linear_mean.LinearMean": {
  "data": {
   "shadows": "gpytorch.means.LinearMean"
  },
  "type": "import"
 },
 "test.means.test_linear_mean.TestLinearMean": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.base_mean_test_case.BaseMeanTestCase",
    "test.means.test_linear_mean.unittest"
   ]
  },
  "type": "class"
 },
 "test.means.test_linear_mean.TestLinearMean.create_mean": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.means.LinearMean",
    "test.means.test_linear_mean.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_linear_mean.TestLinearMean.forward_vec": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mean",
    "test.means.test_linear_mean.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_linear_mean.TestLinearMean.test_forward_mat": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "mean",
    "test.means.test_linear_mean.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_linear_mean.TestLinearMean.test_forward_mat_batch": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mean",
    "test.means.test_linear_mean.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_linear_mean.TestLinearMean.test_forward_mat_multi_batch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mean",
    "test.means.test_linear_mean.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_linear_mean.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.means.test_linear_mean.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.means.test_multitask_mean": {
  "data": {},
  "type": "module"
 },
 "test.means.test_multitask_mean.BaseMeanTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_mean_test_case.BaseMeanTestCase"
  },
  "type": "import"
 },
 "test.means.test_multitask_mean.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.means.test_multitask_mean.MultitaskMean": {
  "data": {
   "shadows": "gpytorch.means.MultitaskMean"
  },
  "type": "import"
 },
 "test.means.test_multitask_mean.TestMultitaskMean": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.base_mean_test_case.BaseMeanTestCase",
    "test.means.test_multitask_mean.unittest"
   ]
  },
  "type": "class"
 },
 "test.means.test_multitask_mean.TestMultitaskMean.create_mean": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.means.ConstantMean",
    "gpytorch.means.MultitaskMean",
    "gpytorch.means.ZeroMean"
   ]
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMean.test_forward_mat": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "mean",
    "test.means.test_multitask_mean.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMean.test_forward_mat_batch": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mean",
    "test.means.test_multitask_mean.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMean.test_forward_mat_multi_batch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mean",
    "test.means.test_multitask_mean.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMean.test_forward_vec": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mean",
    "test.means.test_multitask_mean.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanBatch": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "test.means.test_multitask_mean.TestMultitaskMean"
   ]
  },
  "type": "class"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanBatch.create_mean": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpytorch.means.ConstantMean",
    "gpytorch.means.MultitaskMean",
    "gpytorch.means.ZeroMean",
    "test.means.test_multitask_mean.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanBatch.test_forward_mat": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanBatch.test_forward_vec": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanMultiBatch": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "test.means.test_multitask_mean.TestMultitaskMean"
   ]
  },
  "type": "class"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanMultiBatch.create_mean": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "gpytorch.means.ConstantMean",
    "gpytorch.means.MultitaskMean",
    "gpytorch.means.ZeroMean",
    "test.means.test_multitask_mean.torch"
   ]
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanMultiBatch.test_forward_mat": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanMultiBatch.test_forward_mat_batch": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanMultiBatch.test_forward_vec": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.ZeroMean": {
  "data": {
   "shadows": "gpytorch.means.ZeroMean"
  },
  "type": "import"
 },
 "test.means.test_multitask_mean.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.means.test_multitask_mean.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.means.test_zero_mean": {
  "data": {},
  "type": "module"
 },
 "test.means.test_zero_mean.BaseMeanTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_mean_test_case.BaseMeanTestCase"
  },
  "type": "import"
 },
 "test.means.test_zero_mean.TestZeroMean": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "gpytorch.test.base_mean_test_case.BaseMeanTestCase",
    "test.means.test_zero_mean.unittest"
   ]
  },
  "type": "class"
 },
 "test.means.test_zero_mean.TestZeroMean.create_mean": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "gpytorch.means.ZeroMean"
   ]
  },
  "type": "function"
 },
 "test.means.test_zero_mean.ZeroMean": {
  "data": {
   "shadows": "gpytorch.means.ZeroMean"
  },
  "type": "import"
 },
 "test.means.test_zero_mean.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.models": {
  "data": {},
  "type": "module"
 },
 "test.models.test_exact_gp": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.models.test_exact_gp.unittest"
   ]
  },
  "type": "module"
 },
 "test.models.test_exact_gp.BaseModelTestCase": {
  "data": {
   "shadows": "gpytorch.test.model_test_case.BaseModelTestCase"
  },
  "type": "import"
 },
 "test.models.test_exact_gp.ExactGP": {
  "data": {
   "shadows": "gpytorch.models.ExactGP"
  },
  "type": "import"
 },
 "test.models.test_exact_gp.ExactGPModel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.models.ExactGP"
   ]
  },
  "type": "class"
 },
 "test.models.test_exact_gp.ExactGPModel.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "super",
    "test.models.test_exact_gp.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.ExactGPModel.forward": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "test.models.test_exact_gp.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.InterpolatedExactGPModel": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "gpytorch.models.ExactGP"
   ]
  },
  "type": "class"
 },
 "test.models.test_exact_gp.InterpolatedExactGPModel.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "super",
    "test.models.test_exact_gp.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.InterpolatedExactGPModel.forward": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "test.models.test_exact_gp.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.SumExactGPModel": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "gpytorch.models.ExactGP"
   ]
  },
  "type": "class"
 },
 "test.models.test_exact_gp.SumExactGPModel.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "super",
    "test.models.test_exact_gp.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.SumExactGPModel.forward": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "test.models.test_exact_gp.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "gpytorch.test.model_test_case.BaseModelTestCase",
    "test.models.test_exact_gp.unittest"
   ]
  },
  "type": "class"
 },
 "test.models.test_exact_gp.TestExactGP.create_batch_likelihood_and_labels": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "test.models.test_exact_gp.gpytorch",
    "test.models.test_exact_gp.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.create_batch_test_data": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "test.models.test_exact_gp.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.create_likelihood_and_labels": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "test.models.test_exact_gp.gpytorch",
    "test.models.test_exact_gp.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.create_model": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "test.models.test_exact_gp.ExactGPModel"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.create_test_data": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "test.models.test_exact_gp.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.test_batch_forward_eval_fast": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "test.models.test_exact_gp.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.test_batch_forward_then_different_batch_forward_eval": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "model",
    "model.eval",
    "test.models.test_exact_gp.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.test_batch_forward_then_nonbatch_forward_eval": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "model"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.test_forward_eval_fast": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "test.models.test_exact_gp.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.test_multi_batch_forward_eval_fast": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "test.models.test_exact_gp.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.test_prior_mode": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "model",
    "model.eval",
    "prior_model",
    "test.models.test_exact_gp.gpytorch",
    "test.models.test_exact_gp.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestInterpolatedExactGP": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "test.models.test_exact_gp.TestExactGP"
   ]
  },
  "type": "class"
 },
 "test.models.test_exact_gp.TestInterpolatedExactGP.create_model": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "model",
    "test.models.test_exact_gp.InterpolatedExactGPModel"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestSumExactGP": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "test.models.test_exact_gp.TestExactGP"
   ]
  },
  "type": "class"
 },
 "test.models.test_exact_gp.TestSumExactGP.create_model": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "model",
    "test.models.test_exact_gp.SumExactGPModel"
   ]
  },
  "type": "function"
 },
 "test.models.test_exact_gp.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.models.test_exact_gp.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_exact_gp.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.models.test_model_list": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.models.test_model_list.unittest"
   ]
  },
  "type": "module"
 },
 "test.models.test_model_list.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "test.models.test_model_list.IndependentModelList": {
  "data": {
   "shadows": "gpytorch.models.IndependentModelList"
  },
  "type": "import"
 },
 "test.models.test_model_list.TestModelListGP": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "test.models.test_model_list.unittest"
   ]
  },
  "type": "class"
 },
 "test.models.test_model_list.TestModelListGP.create_model": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood",
    "test.models.test_model_list.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_model_list.TestModelListGP.test_forward_eval": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpytorch.models.IndependentModelList",
    "model",
    "range",
    "test.models.test_model_list.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_model_list.TestModelListGP.test_forward_eval_fixed_noise": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.models.IndependentModelList",
    "model",
    "model.eval",
    "range",
    "test.models.test_model_list.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_model_list.TestModelListGP.test_get_fantasy_model": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "fmodel",
    "gpytorch.models.IndependentModelList",
    "model",
    "model.eval",
    "model.get_fantasy_model",
    "range",
    "test.models.test_model_list.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_model_list.TestModelListGP.test_get_fantasy_model_fixed_noise": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "fmodel",
    "gpytorch.models.IndependentModelList",
    "model",
    "model.eval",
    "model.get_fantasy_model",
    "range",
    "test.models.test_model_list.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_model_list.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_model_list.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.models.test_variational_gp": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.models.test_variational_gp.unittest"
   ]
  },
  "type": "module"
 },
 "test.models.test_variational_gp.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.models.test_variational_gp.CholeskyVariationalDistribution": {
  "data": {
   "shadows": "gpytorch.variational.CholeskyVariationalDistribution"
  },
  "type": "import"
 },
 "test.models.test_variational_gp.GPClassificationModel": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.models.ApproximateGP"
   ]
  },
  "type": "class"
 },
 "test.models.test_variational_gp.GPClassificationModel.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "gpytorch.variational.CholeskyVariationalDistribution",
    "gpytorch.variational.VariationalStrategy",
    "strategy_cls",
    "super",
    "test.models.test_variational_gp.GPClassificationModel",
    "test.models.test_variational_gp.gpytorch",
    "test.models.test_variational_gp.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_variational_gp.GPClassificationModel.forward": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "test.models.test_variational_gp.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestSVGPVariationalGP": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "test.models.test_variational_gp.TestVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.models.test_variational_gp.TestSVGPVariationalGP.create_model": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "test.models.test_variational_gp.GPClassificationModel"
   ]
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestSVGPVariationalGP.test_backward_train_nochol": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "test.models.test_variational_gp.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestSVGPVariationalGP.test_batch_backward_train_nochol": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "test.models.test_variational_gp.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestSVGPVariationalGP.test_multi_batch_backward_train_nochol": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "test.models.test_variational_gp.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestVariationalGP": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "gpytorch.test.model_test_case.VariationalModelTestCase",
    "test.models.test_variational_gp.unittest"
   ]
  },
  "type": "class"
 },
 "test.models.test_variational_gp.TestVariationalGP.create_batch_likelihood_and_labels": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "test.models.test_variational_gp.gpytorch",
    "test.models.test_variational_gp.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestVariationalGP.create_batch_test_data": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "test.models.test_variational_gp.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestVariationalGP.create_likelihood_and_labels": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "test.models.test_variational_gp.gpytorch",
    "test.models.test_variational_gp.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestVariationalGP.create_model": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "test.models.test_variational_gp.GPClassificationModel"
   ]
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestVariationalGP.create_test_data": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "test.models.test_variational_gp.torch"
   ]
  },
  "type": "function"
 },
 "test.models.test_variational_gp.VariationalModelTestCase": {
  "data": {
   "shadows": "gpytorch.test.model_test_case.VariationalModelTestCase"
  },
  "type": "import"
 },
 "test.models.test_variational_gp.VariationalStrategy": {
  "data": {
   "shadows": "gpytorch.variational.VariationalStrategy"
  },
  "type": "import"
 },
 "test.models.test_variational_gp.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.models.test_variational_gp.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_variational_gp.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.priors": {
  "data": {},
  "type": "module"
 },
 "test.priors.test_gamma_prior": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.priors.test_gamma_prior.unittest"
   ]
  },
  "type": "module"
 },
 "test.priors.test_gamma_prior.Gamma": {
  "data": {
   "shadows": "torch.distributions.Gamma"
  },
  "type": "import"
 },
 "test.priors.test_gamma_prior.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.GammaPrior"
  },
  "type": "import"
 },
 "test.priors.test_gamma_prior.TestGammaPrior": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "test.priors.test_gamma_prior.unittest"
   ]
  },
  "type": "class"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_batch_log_prob": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.priors.GammaPrior",
    "test.priors.test_gamma_prior.torch",
    "torch.distributions.Gamma"
   ]
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_gamma_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_log_prob": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gpytorch.priors.GammaPrior",
    "test.priors.test_gamma_prior.torch",
    "torch.distributions.Gamma"
   ]
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_log_prob_cuda": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_gamma_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_log_prob_log_transform": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "gpytorch.priors.GammaPrior",
    "test.priors.test_gamma_prior.torch",
    "torch.distributions.Gamma"
   ]
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_log_prob_log_transform_cuda": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_gamma_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_to_gpu": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.priors.GammaPrior",
    "test.priors.test_gamma_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_validate_args": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.GammaPrior"
   ]
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.priors.test_gamma_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.priors.test_gamma_prior.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.priors.test_horseshoe_prior": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.priors.test_horseshoe_prior.unittest"
   ]
  },
  "type": "module"
 },
 "test.priors.test_horseshoe_prior.HorseshoePrior": {
  "data": {
   "shadows": "gpytorch.priors.HorseshoePrior"
  },
  "type": "import"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "test.priors.test_horseshoe_prior.unittest"
   ]
  },
  "type": "class"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_batch_log_prob": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.priors.HorseshoePrior",
    "test.priors.test_horseshoe_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "test.priors.test_horseshoe_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_log_prob": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpytorch.priors.HorseshoePrior",
    "test.priors.test_horseshoe_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_log_prob_cuda": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "test.priors.test_horseshoe_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_log_prob_log_transform": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "gpytorch.priors.HorseshoePrior",
    "test.priors.test_horseshoe_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_log_prob_log_transform_cuda": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "test.priors.test_horseshoe_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_to_gpu": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.priors.HorseshoePrior",
    "test.priors.test_horseshoe_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_validate_args": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.HorseshoePrior"
   ]
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.priors.test_horseshoe_prior.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.priors.test_lkj_prior.unittest"
   ]
  },
  "type": "module"
 },
 "test.priors.test_lkj_prior.LKJCholeskyFactorPrior": {
  "data": {
   "shadows": "gpytorch.priors.LKJCholeskyFactorPrior"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.LKJCovariancePrior": {
  "data": {
   "shadows": "gpytorch.priors.LKJCovariancePrior"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.LKJPrior": {
  "data": {
   "shadows": "gpytorch.priors.LKJPrior"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.TestLKJCholeskyFactorPrior": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "test.priors.test_lkj_prior.unittest"
   ]
  },
  "type": "class"
 },
 "test.priors.test_lkj_prior.TestLKJCholeskyFactorPrior.test_lkj_cholesky_factor_prior_batch_log_prob": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.LKJCholeskyFactorPrior",
    "gpytorch.test.utils.approx_equal",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCholeskyFactorPrior.test_lkj_cholesky_factor_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCholeskyFactorPrior.test_lkj_cholesky_factor_prior_log_prob": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.LKJCholeskyFactorPrior",
    "gpytorch.test.utils.approx_equal",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCholeskyFactorPrior.test_lkj_cholesky_factor_prior_log_prob_cuda": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCholeskyFactorPrior.test_lkj_cholesky_factor_prior_to_gpu": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "gpytorch.priors.LKJCholeskyFactorPrior",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCholeskyFactorPrior.test_lkj_cholesky_factor_prior_validate_args": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.LKJCholeskyFactorPrior"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "test.priors.test_lkj_prior.unittest"
   ]
  },
  "type": "class"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_batch_log_prob": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.LKJCovariancePrior",
    "gpytorch.priors.SmoothedBoxPrior",
    "gpytorch.test.utils.approx_equal",
    "math.exp",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_log_prob": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.LKJCovariancePrior",
    "gpytorch.priors.SmoothedBoxPrior",
    "gpytorch.test.utils.approx_equal",
    "math.exp",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_log_prob_cuda": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_log_prob_hetsd": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.LKJCovariancePrior",
    "gpytorch.priors.SmoothedBoxPrior",
    "gpytorch.test.utils.approx_equal",
    "math.exp",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_log_prob_hetsd_cuda": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_to_gpu": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "gpytorch.priors.LKJCovariancePrior",
    "gpytorch.priors.SmoothedBoxPrior",
    "math.exp",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_validate_args": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.LKJCovariancePrior",
    "gpytorch.priors.SmoothedBoxPrior",
    "math.exp"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJPrior": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "test.priors.test_lkj_prior.unittest"
   ]
  },
  "type": "class"
 },
 "test.priors.test_lkj_prior.TestLKJPrior.test_lkj_prior_batch_log_prob": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.LKJPrior",
    "gpytorch.test.utils.approx_equal",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJPrior.test_lkj_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJPrior.test_lkj_prior_log_prob": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.LKJPrior",
    "gpytorch.test.utils.approx_equal",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJPrior.test_lkj_prior_log_prob_cuda": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJPrior.test_lkj_prior_to_gpu": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.priors.LKJPrior",
    "test.priors.test_lkj_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJPrior.test_lkj_prior_validate_args": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.LKJPrior"
   ]
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.priors.test_multivariate_normal_prior": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.priors.test_multivariate_normal_prior.unittest"
   ]
  },
  "type": "module"
 },
 "test.priors.test_multivariate_normal_prior.MultivariateNormal": {
  "data": {
   "shadows": "torch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.priors.test_multivariate_normal_prior.MultivariateNormalPrior": {
  "data": {
   "shadows": "gpytorch.priors.MultivariateNormalPrior"
  },
  "type": "import"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "test.priors.test_multivariate_normal_prior.unittest"
   ]
  },
  "type": "class"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_batch_log_prob": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.priors.MultivariateNormalPrior",
    "test.priors.test_multivariate_normal_prior.torch",
    "torch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_multivariate_normal_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_log_prob": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.priors.MultivariateNormalPrior",
    "test.priors.test_multivariate_normal_prior.torch",
    "torch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_log_prob_cuda": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_multivariate_normal_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_log_prob_log_transform": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.priors.MultivariateNormalPrior",
    "test.priors.test_multivariate_normal_prior.torch",
    "torch.distributions.MultivariateNormal"
   ]
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_log_prob_log_transform_cuda": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_multivariate_normal_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_to_gpu": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.priors.MultivariateNormalPrior",
    "test.priors.test_multivariate_normal_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_validate_args": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.MultivariateNormalPrior",
    "test.priors.test_multivariate_normal_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.priors.test_multivariate_normal_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.priors.test_multivariate_normal_prior.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.priors.test_normal_prior": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.priors.test_normal_prior.unittest"
   ]
  },
  "type": "module"
 },
 "test.priors.test_normal_prior.Normal": {
  "data": {
   "shadows": "torch.distributions.Normal"
  },
  "type": "import"
 },
 "test.priors.test_normal_prior.NormalPrior": {
  "data": {
   "shadows": "gpytorch.priors.NormalPrior"
  },
  "type": "import"
 },
 "test.priors.test_normal_prior.TestNormalPrior": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "test.priors.test_normal_prior.unittest"
   ]
  },
  "type": "class"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_batch_log_prob": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.priors.NormalPrior",
    "test.priors.test_normal_prior.torch",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_normal_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_log_prob": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "gpytorch.priors.NormalPrior",
    "test.priors.test_normal_prior.torch",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_log_prob_cuda": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_normal_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_log_prob_log_transform": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "gpytorch.priors.NormalPrior",
    "test.priors.test_normal_prior.torch",
    "torch.distributions.Normal"
   ]
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_log_prob_log_transform_cuda": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_normal_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_to_gpu": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "gpytorch.priors.NormalPrior",
    "test.priors.test_normal_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_validate_args": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.NormalPrior"
   ]
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.priors.test_normal_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.priors.test_normal_prior.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.priors.test_smoothed_box_prior": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.priors.test_smoothed_box_prior.unittest"
   ]
  },
  "type": "module"
 },
 "test.priors.test_smoothed_box_prior.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.priors.test_smoothed_box_prior.unittest"
   ]
  },
  "type": "class"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_batch_log_prob": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_smoothed_box_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_log_prob": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.priors.SmoothedBoxPrior",
    "gpytorch.test.utils.approx_equal",
    "test.priors.test_smoothed_box_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_log_prob_cuda": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_smoothed_box_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_log_prob_log_transform": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "RuntimeError",
    "gpytorch.priors.SmoothedBoxPrior",
    "gpytorch.test.utils.approx_equal",
    "test.priors.test_smoothed_box_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_log_prob_log_transform_cuda": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.priors.test_smoothed_box_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_to_gpu": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.priors.SmoothedBoxPrior",
    "test.priors.test_smoothed_box_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_validate_args": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "gpytorch.priors.SmoothedBoxPrior",
    "test.priors.test_smoothed_box_prior.torch"
   ]
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.priors.test_smoothed_box_prior.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.priors.test_smoothed_box_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.priors.test_smoothed_box_prior.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_cholesky": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.utils.test_cholesky.unittest"
   ]
  },
  "type": "module"
 },
 "test.utils.test_cholesky.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.utils.test_cholesky.NanError": {
  "data": {
   "shadows": "gpytorch.utils.errors.NanError"
  },
  "type": "import"
 },
 "test.utils.test_cholesky.NumericalWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.NumericalWarning"
  },
  "type": "import"
 },
 "test.utils.test_cholesky.TestPSDSafeCholesky": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.utils.test_cholesky.unittest"
   ]
  },
  "type": "class"
 },
 "test.utils.test_cholesky.TestPSDSafeCholesky._gen_test_psd": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "test.utils.test_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_cholesky.TestPSDSafeCholesky.test_psd_safe_cholesky_nan": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "gpytorch.utils.cholesky.psd_safe_cholesky",
    "gpytorch.utils.errors.NanError"
   ]
  },
  "type": "function"
 },
 "test.utils.test_cholesky.TestPSDSafeCholesky.test_psd_safe_cholesky_pd": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpytorch.utils.cholesky.psd_safe_cholesky",
    "test.utils.test_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_cholesky.TestPSDSafeCholesky.test_psd_safe_cholesky_pd_cuda": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.utils.test_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_cholesky.TestPSDSafeCholesky.test_psd_safe_cholesky_psd": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "any",
    "gpytorch.utils.cholesky.psd_safe_cholesky",
    "gpytorch.utils.warnings.NumericalWarning",
    "issubclass",
    "str",
    "test.utils.test_cholesky.torch",
    "test.utils.test_cholesky.warnings"
   ]
  },
  "type": "function"
 },
 "test.utils.test_cholesky.TestPSDSafeCholesky.test_psd_safe_cholesky_psd_cuda": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.utils.test_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_cholesky.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.utils.test_cholesky.psd_safe_cholesky": {
  "data": {
   "shadows": "gpytorch.utils.cholesky.psd_safe_cholesky"
  },
  "type": "import"
 },
 "test.utils.test_cholesky.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_cholesky.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_cholesky.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.utils.test_fft": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.utils.test_fft.unittest"
   ]
  },
  "type": "module"
 },
 "test.utils.test_fft.TestFFT": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.utils.test_fft.unittest"
   ]
  },
  "type": "class"
 },
 "test.utils.test_fft.TestFFT.test_fft1_computes_fft_of_1d_input": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.utils.fft.fft1",
    "input",
    "input.numpy",
    "numpy.fft.fft",
    "test.utils.test_fft.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "test.utils.test_fft.TestFFT.test_fft1_computes_fft_of_nd_input": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "gpytorch.utils.fft.fft1",
    "input",
    "input.numpy",
    "numpy.fft.fft",
    "test.utils.test_fft.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "test.utils.test_fft.TestFFT.test_fft1_returns_type_of_original_input": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "gpytorch.utils.fft.fft1",
    "input",
    "isinstance",
    "test.utils.test_fft.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_fft.TestFFT.test_ifft1_computes_ifft_of_1d_input": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "gpytorch.utils.fft.fft1",
    "gpytorch.utils.fft.ifft1",
    "input",
    "input.size",
    "test.utils.test_fft.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_fft.TestFFT.test_ifft1_computes_ifft_of_1d_input_with_odd_size": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "gpytorch.utils.fft.fft1",
    "gpytorch.utils.fft.ifft1",
    "input",
    "input.size",
    "test.utils.test_fft.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_fft.TestFFT.test_ifft1_computes_ifft_of_2d_input": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "gpytorch.utils.fft.fft1",
    "gpytorch.utils.fft.ifft1",
    "input",
    "input.size",
    "test.utils.test_fft.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_fft.TestFFT.test_ifft1_returns_type_of_original_input": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "gpytorch.utils.fft.fft1",
    "gpytorch.utils.fft.ifft1",
    "input",
    "input.double",
    "input.size",
    "isinstance",
    "test.utils.test_fft.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_fft.fft": {
  "data": {
   "shadows": "gpytorch.utils.fft"
  },
  "type": "import"
 },
 "test.utils.test_fft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.utils.test_fft.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_fft.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_getitem": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_getitem.TestGetitem": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.utils.test_getitem.unittest"
   ]
  },
  "type": "class"
 },
 "test.utils.test_getitem.TestGetitem.test_compute_getitem_size": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.utils.getitem._compute_getitem_size",
    "itertools.product",
    "slice",
    "test.utils.test_getitem.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_getitem.TestGetitem.test_convert_indices_to_tensors": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "all",
    "any",
    "gpytorch.utils.getitem._convert_indices_to_tensors",
    "itertools.product",
    "slice",
    "test.utils.test_getitem.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_getitem._compute_getitem_size": {
  "data": {
   "shadows": "gpytorch.utils.getitem._compute_getitem_size"
  },
  "type": "import"
 },
 "test.utils.test_getitem._convert_indices_to_tensors": {
  "data": {
   "shadows": "gpytorch.utils.getitem._convert_indices_to_tensors"
  },
  "type": "import"
 },
 "test.utils.test_getitem.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "test.utils.test_getitem.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_getitem.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_grid": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_grid.TestGrid": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "test.utils.test_grid.unittest"
   ]
  },
  "type": "class"
 },
 "test.utils.test_grid.TestGrid.test_choose_grid_size": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "test.utils.test_grid.gpytorch",
    "test.utils.test_grid.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_grid.TestGrid.test_scale_to_bounds": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.utils.test_grid.gpytorch",
    "test.utils.test_grid.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_grid.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.utils.test_grid.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_grid.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_interpolation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.utils.test_interpolation.unittest"
   ]
  },
  "type": "module"
 },
 "test.utils.test_interpolation.Interpolation": {
  "data": {
   "shadows": "gpytorch.utils.interpolation.Interpolation"
  },
  "type": "import"
 },
 "test.utils.test_interpolation.TestCubicInterpolation": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.utils.test_interpolation.unittest"
   ]
  },
  "type": "class"
 },
 "test.utils.test_interpolation.TestCubicInterpolation.test_interpolation": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.interpolation.Interpolation",
    "gpytorch.utils.interpolation.left_interp",
    "test.utils.test_interpolation.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestCubicInterpolation.test_multidim_interpolation": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.interpolation.Interpolation",
    "test.utils.test_interpolation.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "test.utils.test_interpolation.unittest"
   ]
  },
  "type": "class"
 },
 "test.utils.test_interpolation.TestInterp.setUp": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "test.utils.test_interpolation.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_batch_left_interp_on_a_batch_matrix": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.interpolation.left_interp",
    "test.utils.test_interpolation.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_batch_left_interp_on_a_matrix": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.interpolation.left_interp",
    "test.utils.test_interpolation.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_batch_left_interp_on_a_vector": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.interpolation.left_interp",
    "test.utils.test_interpolation.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_batch_left_t_interp_on_a_batch_matrix": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.interpolation.left_t_interp",
    "test.utils.test_interpolation.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_batch_left_t_interp_on_a_matrix": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.interpolation.left_t_interp",
    "test.utils.test_interpolation.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_batch_left_t_interp_on_a_vector": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.interpolation.left_t_interp",
    "test.utils.test_interpolation.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_left_interp_on_a_matrix": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.interpolation.left_interp",
    "test.utils.test_interpolation.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_left_interp_on_a_vector": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.interpolation.left_interp",
    "test.utils.test_interpolation.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_left_t_interp_on_a_matrix": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.interpolation.left_t_interp",
    "test.utils.test_interpolation.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_left_t_interp_on_a_vector": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.interpolation.left_t_interp",
    "test.utils.test_interpolation.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_interpolation.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.utils.test_interpolation.left_interp": {
  "data": {
   "shadows": "gpytorch.utils.interpolation.left_interp"
  },
  "type": "import"
 },
 "test.utils.test_interpolation.left_t_interp": {
  "data": {
   "shadows": "gpytorch.utils.interpolation.left_t_interp"
  },
  "type": "import"
 },
 "test.utils.test_interpolation.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_interpolation.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_lanczos": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.utils.test_lanczos.unittest"
   ]
  },
  "type": "module"
 },
 "test.utils.test_lanczos.TestLanczos": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.utils.test_lanczos.unittest"
   ]
  },
  "type": "class"
 },
 "test.utils.test_lanczos.TestLanczos.test_lanczos": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.lanczos.lanczos_tridiag",
    "test.utils.test_lanczos.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_lanczos.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.utils.test_lanczos.lanczos_tridiag": {
  "data": {
   "shadows": "gpytorch.utils.lanczos.lanczos_tridiag"
  },
  "type": "import"
 },
 "test.utils.test_lanczos.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_lanczos.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_linear_cg": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.utils.test_linear_cg.unittest"
   ]
  },
  "type": "module"
 },
 "test.utils.test_linear_cg.TestLinearCG": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "test.utils.test_linear_cg.unittest"
   ]
  },
  "type": "class"
 },
 "test.utils.test_linear_cg.TestLinearCG.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "test.utils.test_linear_cg.os",
    "test.utils.test_linear_cg.random",
    "test.utils.test_linear_cg.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_linear_cg.TestLinearCG.tearDown": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "hasattr",
    "test.utils.test_linear_cg.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_linear_cg.TestLinearCG.test_batch_cg": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "gpytorch.utils.linear_cg.linear_cg",
    "test.utils.test_linear_cg.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_linear_cg.TestLinearCG.test_batch_cg_with_tridiag": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "gpytorch.utils.linear_cg.linear_cg",
    "range",
    "test.utils.test_linear_cg.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_linear_cg.TestLinearCG.test_cg": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "gpytorch.utils.linear_cg.linear_cg",
    "test.utils.test_linear_cg.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_linear_cg.TestLinearCG.test_cg_with_tridiag": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "gpytorch.utils.linear_cg.linear_cg",
    "range",
    "test.utils.test_linear_cg.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_linear_cg.linear_cg": {
  "data": {
   "shadows": "gpytorch.utils.linear_cg.linear_cg"
  },
  "type": "import"
 },
 "test.utils.test_linear_cg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.utils.test_linear_cg.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.utils.test_linear_cg.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_linear_cg.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.utils.test_pivoted_cholesky.unittest"
   ]
  },
  "type": "module"
 },
 "test.utils.test_pivoted_cholesky.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "test.utils.test_pivoted_cholesky.unittest"
   ]
  },
  "type": "class"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky.setUp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "test.utils.test_pivoted_cholesky.os",
    "test.utils.test_pivoted_cholesky.random",
    "test.utils.test_pivoted_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky.tearDown": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "hasattr",
    "test.utils.test_pivoted_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky.test_pivoted_cholesky": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.pivoted_cholesky.pivoted_cholesky",
    "test.utils.test_pivoted_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky.test_solve_qr": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.settings.min_preconditioning_size",
    "gpytorch.test.utils.approx_equal",
    "precondition_qr",
    "test.utils.test_pivoted_cholesky.math",
    "test.utils.test_pivoted_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky.test_solve_qr_constant_noise": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.settings.min_preconditioning_size",
    "gpytorch.test.utils.approx_equal",
    "precondition_qr",
    "test.utils.test_pivoted_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky.test_solve_qr_constant_noise_float32": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "test.utils.test_pivoted_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky.test_solve_qr_float32": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "test.utils.test_pivoted_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyBatch": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "test.utils.test_pivoted_cholesky.unittest"
   ]
  },
  "type": "class"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyBatch.setUp": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "test.utils.test_pivoted_cholesky.os",
    "test.utils.test_pivoted_cholesky.random",
    "test.utils.test_pivoted_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyBatch.tearDown": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "hasattr",
    "test.utils.test_pivoted_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyBatch.test_pivoted_cholesky": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.pivoted_cholesky.pivoted_cholesky",
    "test.utils.test_pivoted_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyMultiBatch": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "test.utils.test_pivoted_cholesky.unittest"
   ]
  },
  "type": "class"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyMultiBatch.setUp": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "test.utils.test_pivoted_cholesky.os",
    "test.utils.test_pivoted_cholesky.random",
    "test.utils.test_pivoted_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyMultiBatch.tearDown": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "hasattr",
    "test.utils.test_pivoted_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyMultiBatch.test_pivoted_cholesky": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "gpytorch.kernels.RBFKernel",
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.pivoted_cholesky.pivoted_cholesky",
    "test.utils.test_pivoted_cholesky.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.pivoted_cholesky": {
  "data": {
   "shadows": "gpytorch.utils.pivoted_cholesky"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.settings": {
  "data": {
   "shadows": "gpytorch.settings"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_quadrature": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.utils.test_quadrature.unittest"
   ]
  },
  "type": "module"
 },
 "test.utils.test_quadrature.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.utils.test_quadrature.GaussHermiteQuadrature1D": {
  "data": {
   "shadows": "gpytorch.utils.quadrature.GaussHermiteQuadrature1D"
  },
  "type": "import"
 },
 "test.utils.test_quadrature.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.utils.test_quadrature.TestQuadrature": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "test.utils.test_quadrature.unittest"
   ]
  },
  "type": "class"
 },
 "test.utils.test_quadrature.TestQuadrature.setUp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "test.utils.test_quadrature.os",
    "test.utils.test_quadrature.random",
    "test.utils.test_quadrature.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.tearDown": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "hasattr",
    "test.utils.test_quadrature.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_mvn_batch": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "func",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.DiagLazyTensor",
    "gpytorch.utils.quadrature.GaussHermiteQuadrature1D",
    "quadrature",
    "quadrature.cuda",
    "test.utils.test_quadrature.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_mvn_batch_cuda": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.utils.test_quadrature.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_mvn_nonbatch": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "func",
    "gpytorch.distributions.MultivariateNormal",
    "gpytorch.lazy.DiagLazyTensor",
    "gpytorch.utils.quadrature.GaussHermiteQuadrature1D",
    "quadrature",
    "quadrature.cuda",
    "test.utils.test_quadrature.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_mvn_nonbatch_cuda": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.utils.test_quadrature.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_normal_batch": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "func",
    "gpytorch.utils.quadrature.GaussHermiteQuadrature1D",
    "quadrature",
    "quadrature.cuda",
    "test.utils.test_quadrature.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_normal_batch_cuda": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.utils.test_quadrature.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_normal_nonbatch": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "func",
    "gpytorch.utils.quadrature.GaussHermiteQuadrature1D",
    "quadrature",
    "test.utils.test_quadrature.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_normal_nonbatch_cuda": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "gpytorch.test.utils.least_used_cuda_device",
    "test.utils.test_quadrature.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_quadrature.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.utils.test_quadrature.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.utils.test_quadrature.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.utils.test_quadrature.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_quadrature.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_sparse": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.utils.test_sparse.unittest"
   ]
  },
  "type": "module"
 },
 "test.utils.test_sparse.TestSparse": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "test.utils.test_sparse.unittest"
   ]
  },
  "type": "class"
 },
 "test.utils.test_sparse.TestSparse.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.utils.test_sparse.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sparse.TestSparse.test_sparse_eye": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "gpytorch.utils.sparse.sparse_eye",
    "test.utils.test_sparse.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sparse.TestSparse.test_sparse_getitem_one_dim_int": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "gpytorch.utils.sparse.sparse_getitem",
    "test.utils.test_sparse.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sparse.TestSparse.test_sparse_getitem_one_dim_slice": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpytorch.utils.sparse.sparse_getitem",
    "slice",
    "test.utils.test_sparse.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sparse.TestSparse.test_sparse_getitem_two_dim_int": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "gpytorch.utils.sparse.sparse_getitem"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sparse.TestSparse.test_sparse_getitem_two_dim_int_slice": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "gpytorch.utils.sparse.sparse_getitem",
    "slice",
    "test.utils.test_sparse.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sparse.TestSparse.test_sparse_getitem_two_dim_slice": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gpytorch.utils.sparse.sparse_getitem",
    "slice",
    "test.utils.test_sparse.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sparse.TestSparse.test_to_sparse": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "gpytorch.utils.sparse.to_sparse",
    "test.utils.test_sparse.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_sparse.sparse_eye": {
  "data": {
   "shadows": "gpytorch.utils.sparse.sparse_eye"
  },
  "type": "import"
 },
 "test.utils.test_sparse.sparse_getitem": {
  "data": {
   "shadows": "gpytorch.utils.sparse.sparse_getitem"
  },
  "type": "import"
 },
 "test.utils.test_sparse.to_sparse": {
  "data": {
   "shadows": "gpytorch.utils.sparse.to_sparse"
  },
  "type": "import"
 },
 "test.utils.test_sparse.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_sparse.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_toeplitz": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.utils.test_toeplitz.unittest"
   ]
  },
  "type": "module"
 },
 "test.utils.test_toeplitz.TestToeplitz": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.utils.test_toeplitz.unittest"
   ]
  },
  "type": "class"
 },
 "test.utils.test_toeplitz.TestToeplitz.test_sym_toeplitz_constructs_tensor_from_vector": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "gpytorch.utils.toeplitz.sym_toeplitz",
    "test.utils.test_toeplitz.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_toeplitz.TestToeplitz.test_toeplitz_matmul": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.toeplitz.toeplitz",
    "gpytorch.utils.toeplitz.toeplitz_matmul",
    "test.utils.test_toeplitz.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_toeplitz.TestToeplitz.test_toeplitz_matmul_batch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "enumerate",
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.toeplitz.toeplitz",
    "gpytorch.utils.toeplitz.toeplitz_matmul",
    "test.utils.test_toeplitz.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "test.utils.test_toeplitz.TestToeplitz.test_toeplitz_matmul_batchmat": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "gpytorch.test.utils.approx_equal",
    "gpytorch.utils.toeplitz.toeplitz",
    "gpytorch.utils.toeplitz.toeplitz_matmul",
    "test.utils.test_toeplitz.torch"
   ]
  },
  "type": "function"
 },
 "test.utils.test_toeplitz.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.utils.test_toeplitz.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_toeplitz.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_toeplitz.utils": {
  "data": {
   "shadows": "gpytorch.utils"
  },
  "type": "import"
 },
 "test.variational": {
  "data": {},
  "type": "module"
 },
 "test.variational.test_grid_interpolation_variational_strategy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.variational.test_grid_interpolation_variational_strategy.unittest"
   ]
  },
  "type": "module"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridMeanFieldPredictiveGP": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "test.variational.test_grid_interpolation_variational_strategy.TestGridPredictiveGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridMeanFieldPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "property",
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridMeanFieldRobustVGP": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "test.variational.test_grid_interpolation_variational_strategy.TestGridRobustVGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridMeanFieldRobustVGP.distribution_cls": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "property",
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridMeanFieldVariationalGP": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridMeanFieldVariationalGP.distribution_cls": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "property",
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridPredictiveGP": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridPredictiveGP.mll_cls": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "property",
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridRobustVGP": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridRobustVGP.mll_cls": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "property",
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.VariationalTestCase",
    "test.variational.test_grid_interpolation_variational_strategy.unittest"
   ]
  },
  "type": "class"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP._make_model_and_likelihood": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "_SVGPRegressionModel",
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch",
    "test.variational.test_grid_interpolation_variational_strategy.torch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP._make_model_and_likelihood._SVGPRegressionModel": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP._make_model_and_likelihood._SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "distribution_cls",
    "strategy_cls",
    "super",
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP._make_model_and_likelihood._SVGPRegressionModel.forward": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP.batch_shape": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property",
    "test.variational.test_grid_interpolation_variational_strategy.torch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP.distribution_cls": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property",
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP.learn_inducing_locations": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP.mll_cls": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "property",
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP.strategy_cls": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "property",
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "super",
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "super",
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.VariationalTestCase": {
  "data": {
   "shadows": "gpytorch.test.variational_test_case.VariationalTestCase"
  },
  "type": "import"
 },
 "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_grid_interpolation_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_grid_interpolation_variational_strategy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.variational.test_multitask_variational_strategy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.variational.test_multitask_variational_strategy.unittest"
   ]
  },
  "type": "module"
 },
 "test.variational.test_multitask_variational_strategy.TestDeltaMultitaskPredictiveGP": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "test.variational.test_multitask_variational_strategy.TestMultitaskPredictiveGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_multitask_variational_strategy.TestDeltaMultitaskPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "property",
    "test.variational.test_multitask_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestDeltaMultitaskRobustVGP": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "test.variational.test_multitask_variational_strategy.TestMultitaskRobustVGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_multitask_variational_strategy.TestDeltaMultitaskRobustVGP.distribution_cls": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "property",
    "test.variational.test_multitask_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestDeltaMultitaskVariationalGP": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "test.variational.test_multitask_variational_strategy.TestMultitaskVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_multitask_variational_strategy.TestDeltaMultitaskVariationalGP.distribution_cls": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "property",
    "test.variational.test_multitask_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestMeanFieldMultitaskPredictiveGP": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "test.variational.test_multitask_variational_strategy.TestMultitaskPredictiveGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_multitask_variational_strategy.TestMeanFieldMultitaskPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "property",
    "test.variational.test_multitask_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestMeanFieldMultitaskRobustVGP": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "test.variational.test_multitask_variational_strategy.TestMultitaskRobustVGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_multitask_variational_strategy.TestMeanFieldMultitaskRobustVGP.distribution_cls": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "property",
    "test.variational.test_multitask_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestMeanFieldMultitaskVariationalGP": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "test.variational.test_multitask_variational_strategy.TestMultitaskVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_multitask_variational_strategy.TestMeanFieldMultitaskVariationalGP.distribution_cls": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property",
    "test.variational.test_multitask_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestMultitaskPredictiveGP": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "test.variational.test_multitask_variational_strategy.TestMultitaskVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_multitask_variational_strategy.TestMultitaskPredictiveGP.mll_cls": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property",
    "test.variational.test_multitask_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestMultitaskRobustVGP": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "test.variational.test_multitask_variational_strategy.TestMultitaskVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_multitask_variational_strategy.TestMultitaskRobustVGP.mll_cls": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "property",
    "test.variational.test_multitask_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestMultitaskVariationalGP": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.VariationalTestCase",
    "test.variational.test_multitask_variational_strategy.unittest"
   ]
  },
  "type": "class"
 },
 "test.variational.test_multitask_variational_strategy.TestMultitaskVariationalGP.batch_shape": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "property",
    "test.variational.test_multitask_variational_strategy.torch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestMultitaskVariationalGP.distribution_cls": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "property",
    "test.variational.test_multitask_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestMultitaskVariationalGP.event_shape": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "property",
    "test.variational.test_multitask_variational_strategy.torch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestMultitaskVariationalGP.likelihood_cls": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "property",
    "test.variational.test_multitask_variational_strategy.likelihood_cls"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestMultitaskVariationalGP.mll_cls": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property",
    "test.variational.test_multitask_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestMultitaskVariationalGP.strategy_cls": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property",
    "test.variational.test_multitask_variational_strategy.strategy_cls"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestMultitaskVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.TestMultitaskVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.VariationalTestCase": {
  "data": {
   "shadows": "gpytorch.test.variational_test_case.VariationalTestCase"
  },
  "type": "import"
 },
 "test.variational.test_multitask_variational_strategy.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_multitask_variational_strategy.likelihood_cls": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.variational.test_multitask_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.strategy_cls": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "test.variational.test_multitask_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_multitask_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_multitask_variational_strategy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.variational.test_orthogonally_decoupled_variational_strategy.unittest"
   ]
  },
  "type": "module"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledPredictiveGP": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledPredictiveGP.mll_cls": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property",
    "test.variational.test_orthogonally_decoupled_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledRobustVGP": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledRobustVGP.mll_cls": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "property",
    "test.variational.test_orthogonally_decoupled_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.VariationalTestCase",
    "test.variational.test_orthogonally_decoupled_variational_strategy.unittest"
   ]
  },
  "type": "class"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP.batch_shape": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "property",
    "test.variational.test_orthogonally_decoupled_variational_strategy.torch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP.distribution_cls": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "property",
    "test.variational.test_orthogonally_decoupled_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP.likelihood_cls": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property",
    "test.variational.test_orthogonally_decoupled_variational_strategy.likelihood_cls"
   ]
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP.mll_cls": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property",
    "test.variational.test_orthogonally_decoupled_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP.strategy_cls": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "property",
    "test.variational.test_orthogonally_decoupled_variational_strategy.strategy_cls"
   ]
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.VariationalTestCase": {
  "data": {
   "shadows": "gpytorch.test.variational_test_case.VariationalTestCase"
  },
  "type": "import"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.likelihood_cls": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "test.variational.test_orthogonally_decoupled_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.strategy_cls": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "test.variational.test_orthogonally_decoupled_variational_strategy.gpytorch",
    "test.variational.test_orthogonally_decoupled_variational_strategy.torch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.variational.test_unwhitened_variational_strategy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.variational.test_unwhitened_variational_strategy.unittest"
   ]
  },
  "type": "module"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedDeltaPredictiveGP": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedPredictiveGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedDeltaPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "property",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedDeltaRobustVGP": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedRobustVGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedDeltaRobustVGP.distribution_cls": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "property",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedDeltaVariationalGP": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedDeltaVariationalGP.distribution_cls": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "property",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedMeanFieldPredictiveGP": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedPredictiveGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedMeanFieldPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "property",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedMeanFieldRobustVGP": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedRobustVGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedMeanFieldRobustVGP.distribution_cls": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "property",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedMeanFieldVariationalGP": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedMeanFieldVariationalGP.distribution_cls": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "property",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedPredictiveGP": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedPredictiveGP.mll_cls": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "property",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedRobustVGP": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedRobustVGP.mll_cls": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "property",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.VariationalTestCase",
    "test.variational.test_unwhitened_variational_strategy.unittest"
   ]
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP.batch_shape": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "property",
    "test.variational.test_unwhitened_variational_strategy.torch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP.distribution_cls": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "property",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP.mll_cls": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "property",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP.strategy_cls": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "property",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "super",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP_CG": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP_CG.test_eval_iteration": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.VariationalTestCase.test_eval_iteration",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP_CG.test_training_iteration": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.VariationalTestCase.test_training_iteration",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP_CG_NoLogDet": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP_CG"
   ]
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP_CG_NoLogDet.test_eval_iteration": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "super",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP_CG_NoLogDet.test_training_iteration": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "super",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP_CG_NoPosteriorVariance": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP_CG"
   ]
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP_CG_NoPosteriorVariance.test_eval_iteration": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.VariationalTestCase.test_eval_iteration",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP_CG_NoPosteriorVariance.test_training_iteration": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "super",
    "test.variational.test_unwhitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.VariationalTestCase": {
  "data": {
   "shadows": "gpytorch.test.variational_test_case.VariationalTestCase"
  },
  "type": "import"
 },
 "test.variational.test_unwhitened_variational_strategy.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_unwhitened_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_unwhitened_variational_strategy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.variational.test_variational_strategy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "test.variational.test_variational_strategy.unittest"
   ]
  },
  "type": "module"
 },
 "test.variational.test_variational_strategy.TestDeltaPredictiveGP": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "test.variational.test_variational_strategy.TestPredictiveGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestDeltaPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "property",
    "test.variational.test_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestDeltaRobustVGP": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "test.variational.test_variational_strategy.TestRobustVGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestDeltaRobustVGP.distribution_cls": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "property",
    "test.variational.test_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestDeltaVariationalGP": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "test.variational.test_variational_strategy.TestVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestDeltaVariationalGP.distribution_cls": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "property",
    "test.variational.test_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestMeanFieldPredictiveGP": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "test.variational.test_variational_strategy.TestPredictiveGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestMeanFieldPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "property",
    "test.variational.test_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestMeanFieldRobustVGP": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "test.variational.test_variational_strategy.TestRobustVGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestMeanFieldRobustVGP.distribution_cls": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "property",
    "test.variational.test_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestMeanFieldVariationalGP": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "test.variational.test_variational_strategy.TestVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestMeanFieldVariationalGP.distribution_cls": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property",
    "test.variational.test_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestPredictiveGP": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "test.variational.test_variational_strategy.TestVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestPredictiveGP.mll_cls": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property",
    "test.variational.test_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestRobustVGP": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "test.variational.test_variational_strategy.TestVariationalGP"
   ]
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestRobustVGP.mll_cls": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property",
    "test.variational.test_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestVariationalGP": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "gpytorch.test.variational_test_case.VariationalTestCase",
    "test.variational.test_variational_strategy.unittest"
   ]
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestVariationalGP.batch_shape": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "property",
    "test.variational.test_variational_strategy.torch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestVariationalGP.distribution_cls": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "property",
    "test.variational.test_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestVariationalGP.mll_cls": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "property",
    "test.variational.test_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestVariationalGP.strategy_cls": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "property",
    "test.variational.test_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.VariationalTestCase": {
  "data": {
   "shadows": "gpytorch.test.variational_test_case.VariationalTestCase"
  },
  "type": "import"
 },
 "test.variational.test_variational_strategy.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_variational_strategy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.variational.test_whitened_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "test.variational.test_whitened_variational_strategy.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.variational.test_whitened_variational_strategy.ExtraComputationWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.ExtraComputationWarning"
  },
  "type": "import"
 },
 "test.variational.test_whitened_variational_strategy.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "gpytorch.test.base_test_case.BaseTestCase",
    "test.variational.test_whitened_variational_strategy.unittest"
   ]
  },
  "type": "class"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP._eval_iter": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "DeprecationWarning",
    "any",
    "gpytorch.utils.warnings.ExtraComputationWarning",
    "issubclass",
    "model",
    "model.eval",
    "test.variational.test_whitened_variational_strategy.torch",
    "test.variational.test_whitened_variational_strategy.warnings"
   ]
  },
  "type": "function"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP._make_model_and_likelihood": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_SVGPRegressionModel",
    "test.variational.test_whitened_variational_strategy.gpytorch",
    "test.variational.test_whitened_variational_strategy.torch",
    "test.variational.test_whitened_variational_strategy.warnings"
   ]
  },
  "type": "function"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP._make_model_and_likelihood._SVGPRegressionModel": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "test.variational.test_whitened_variational_strategy.gpytorch"
   ]
  },
  "type": "class"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP._make_model_and_likelihood._SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "distribution_cls",
    "strategy_cls",
    "super",
    "test.variational.test_whitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP._make_model_and_likelihood._SVGPRegressionModel.forward": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "test.variational.test_whitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP._training_iter": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "DeprecationWarning",
    "any",
    "gpytorch.utils.warnings.ExtraComputationWarning",
    "issubclass",
    "len",
    "mll",
    "mll_cls",
    "model",
    "model.named_parameters",
    "test.variational.test_whitened_variational_strategy.gpytorch",
    "test.variational.test_whitened_variational_strategy.torch",
    "test.variational.test_whitened_variational_strategy.warnings"
   ]
  },
  "type": "function"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP.batch_shape": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "property",
    "test.variational.test_whitened_variational_strategy.torch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP.distribution_cls": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "property",
    "test.variational.test_whitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP.event_shape": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "property",
    "test.variational.test_whitened_variational_strategy.torch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP.likelihood_cls": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "property",
    "test.variational.test_whitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP.mll_cls": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "property",
    "test.variational.test_whitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP.strategy_cls": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "property",
    "test.variational.test_whitened_variational_strategy.gpytorch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "DeprecationWarning",
    "model",
    "test.variational.test_whitened_variational_strategy.gpytorch",
    "test.variational.test_whitened_variational_strategy.torch",
    "test.variational.test_whitened_variational_strategy.warnings",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_whitened_variational_strategy.TestVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "DeprecationWarning",
    "model",
    "model.variational_strategy.variational_params_initialized.item",
    "test.variational.test_whitened_variational_strategy.gpytorch",
    "test.variational.test_whitened_variational_strategy.torch",
    "test.variational.test_whitened_variational_strategy.warnings",
    "unittest.mock.MagicMock",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "test.variational.test_whitened_variational_strategy.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_whitened_variational_strategy.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.variational.test_whitened_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_whitened_variational_strategy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.variational.test_whitened_variational_strategy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}