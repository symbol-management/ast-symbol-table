{
 "gpytorch": {
  "data": {},
  "type": "module"
 },
 "gpytorch.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "gpytorch.__version__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "gpytorch.beta_features": {
  "data": {},
  "type": "module"
 },
 "gpytorch.beta_features.__all__": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "gpytorch.beta_features._moved_beta_feature": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "object": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.beta_features._moved_beta_feature.__call__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      16
     ]
    },
    "gpytorch.beta_features.warnings": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.beta_features._moved_beta_feature.__getattr__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.beta_features._moved_beta_feature.__init__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "gpytorch.beta_features.checkpoint_kernel": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "gpytorch.beta_features.default_preconditioner": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "gpytorch.beta_features.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.constraints": {
  "data": {},
  "type": "module"
 },
 "gpytorch.constraints.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "gpytorch.constraints.constraints": {
  "data": {
   "symbols_in_volume": {
    "gpytorch.constraints.constraints.torch": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "module"
 },
 "gpytorch.constraints.constraints.GreaterThan": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "gpytorch.constraints.constraints.Interval": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.constraints.constraints.GreaterThan.__init__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "gpytorch.constraints.constraints.math": {
     "line number": [
      171
     ]
    },
    "gpytorch.constraints.constraints.softplus": {
     "line number": [
      168
     ]
    },
    "super": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.GreaterThan.__repr__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "super": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.GreaterThan.inverse_transform": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.GreaterThan.transform": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "torch.nn.Module": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.constraints.constraints.Interval.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      30
     ]
    },
    "_get_inv_param_transform": {
     "line number": [
      41
     ]
    },
    "gpytorch.constraints.constraints.torch": {
     "line number": [
      26,
      27,
      29,
      29,
      44,
      45
     ]
    },
    "isinstance": {
     "line number": [
      44
     ]
    },
    "super": {
     "line number": [
      32
     ]
    },
    "torch.sigmoid": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.__iter__": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.__repr__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "super": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval._apply": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "fn": {
     "line number": [
      51,
      52,
      53
     ]
    },
    "super": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval._load_from_state_dict": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "super": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.check": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      76
     ]
    },
    "gpytorch.constraints.constraints.torch": {
     "line number": [
      76,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.check_raw": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      79
     ]
    },
    "gpytorch.constraints.constraints.torch": {
     "line number": [
      80,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.enforced": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "property": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.initial_value": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "property": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.intersect": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      95
     ]
    },
    "gpytorch.constraints.constraints.Interval": {
     "line number": [
      99
     ]
    },
    "gpytorch.constraints.constraints.torch": {
     "line number": [
      97,
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.inverse_transform": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      140
     ]
    },
    "gpytorch.constraints.constraints.math": {
     "line number": [
      139,
      139
     ]
    },
    "gpytorch.constraints.constraints.torch": {
     "line number": [
      136,
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Interval.transform": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      119
     ]
    },
    "gpytorch.constraints.constraints.math": {
     "line number": [
      118,
      118
     ]
    },
    "gpytorch.constraints.constraints.torch": {
     "line number": [
      115,
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.LessThan": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "gpytorch.constraints.constraints.Interval": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.constraints.constraints.LessThan.__init__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "gpytorch.constraints.constraints.math": {
     "line number": [
      211
     ]
    },
    "gpytorch.constraints.constraints.softplus": {
     "line number": [
      209
     ]
    },
    "super": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.LessThan.__repr__": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.LessThan.inverse_transform": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.LessThan.transform": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.constraints.constraints.Positive": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "gpytorch.constraints.constraints.GreaterThan": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.constraints.constraints.Positive.__init__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "gpytorch.constraints.constraints.softplus": {
     "line number": [
      193
     ]
    },
    "super": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Positive.__repr__": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Positive.inverse_transform": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.Positive.transform": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "gpytorch.constraints.constraints.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.constraints.constraints.sigmoid": {
  "data": {
   "shadows": "torch.sigmoid"
  },
  "type": "import"
 },
 "gpytorch.constraints.constraints.softplus": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "gpytorch.constraints.constraints.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.distributions": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "module"
 },
 "gpytorch.distributions.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "gpytorch.distributions.base_distributions": {
  "data": {
   "shadows": "torch.distributions"
  },
  "type": "import"
 },
 "gpytorch.distributions.delta": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "module"
 },
 "gpytorch.distributions.delta.Delta": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "torch.distributions.constraints.real": {
     "line number": [
      32,
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.distributions.delta.Delta.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      37,
      44
     ]
    },
    "gpytorch.distributions.delta.numbers": {
     "line number": [
      41
     ]
    },
    "gpytorch.distributions.delta.torch": {
     "line number": [
      42
     ]
    },
    "isinstance": {
     "line number": [
      41
     ]
    },
    "super": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.delta.Delta.expand": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "gpytorch.distributions.delta.torch": {
     "line number": [
      51
     ]
    },
    "pyro.distributions.Delta": {
     "line number": [
      50
     ]
    },
    "super": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.delta.Delta.log_prob": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "len": {
     "line number": [
      65,
      66
     ]
    },
    "list": {
     "line number": [
      66
     ]
    },
    "range": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.delta.Delta.mean": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "property": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.delta.Delta.rsample": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "gpytorch.distributions.delta.torch": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.delta.Delta.variance": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "gpytorch.distributions.delta.torch": {
     "line number": [
      75
     ]
    },
    "property": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.delta.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "gpytorch.distributions.delta.kl_mvn_mvn": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "pyro.distributions.Delta": {
     "line number": [
      78
     ]
    },
    "torch.distributions.kl.register_kl": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.delta.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "gpytorch.distributions.delta.register_kl": {
  "data": {
   "shadows": "torch.distributions.kl.register_kl"
  },
  "type": "import"
 },
 "gpytorch.distributions.delta.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.distributions.distribution": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "gpytorch.distributions.distribution.Distribution": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "gpytorch.distributions.distribution._DistributionBase": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.distributions.distribution.TDistribution": {
  "data": {
   "shadows": "torch.distributions.Distribution"
  },
  "type": "import"
 },
 "gpytorch.distributions.distribution.TorchDistributionMixin": {
  "data": {
   "shadows": "pyro.distributions.torch_distribution.TorchDistributionMixin"
  },
  "type": "import"
 },
 "gpytorch.distributions.distribution._DistributionBase": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "torch.distributions.Distribution": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.distributions.distribution._DistributionBase.__add__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.distribution._DistributionBase.__div__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.distribution._DistributionBase.__mul__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.distribution._DistributionBase.islazy": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "property": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal": {
  "data": {},
  "type": "module"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      29,
      32,
      35,
      42,
      50
     ]
    },
    "_mul_broadcast_shape": {
     "line number": [
      39
     ]
    },
    "gpytorch.distributions.multitask_multivariate_normal.torch": {
     "line number": [
      28,
      31
     ]
    },
    "isinstance": {
     "line number": [
      28,
      31
     ]
    },
    "super": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.base_sample_shape": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "property": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.event_shape": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "property": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.expand": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "gpytorch.distributions.multitask_multivariate_normal.torch": {
     "line number": [
      193,
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.from_batch_mvn": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "BlockInterleavedLazyTensor": {
     "line number": [
      114
     ]
    },
    "ValueError": {
     "line number": [
      107
     ]
    },
    "classmethod": {
     "line number": [
      78
     ]
    },
    "cls": {
     "line number": [
      112
     ]
    },
    "len": {
     "line number": [
      105,
      106
     ]
    },
    "range": {
     "line number": [
      113,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.from_independent_mvns": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "BlockDiagLazyTensor": {
     "line number": [
      162
     ]
    },
    "CatLazyTensor": {
     "line number": [
      159
     ]
    },
    "ValueError": {
     "line number": [
      146,
      148,
      150,
      152
     ]
    },
    "all": {
     "line number": [
      149,
      151
     ]
    },
    "any": {
     "line number": [
      147
     ]
    },
    "classmethod": {
     "line number": [
      118
     ]
    },
    "cls": {
     "line number": [
      163
     ]
    },
    "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal": {
     "line number": [
      147
     ]
    },
    "gpytorch.distributions.multitask_multivariate_normal.torch": {
     "line number": [
      153
     ]
    },
    "isinstance": {
     "line number": [
      147
     ]
    },
    "len": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.from_repeated_mvn": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      165
     ]
    },
    "cls.from_batch_mvn": {
     "line number": [
      190
     ]
    },
    "gpytorch.distributions.multitask_multivariate_normal.torch": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.get_base_samples": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "gpytorch.distributions.multitask_multivariate_normal.torch": {
     "line number": [
      198
     ]
    },
    "super": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.log_prob": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "super": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.mean": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "property": {
     "line number": [
      213
     ]
    },
    "super": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.num_tasks": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "property": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.rsample": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      232
     ]
    },
    "gpytorch.distributions.multitask_multivariate_normal.torch": {
     "line number": [
      226
     ]
    },
    "super": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.to_data_independent_dist": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "MultivariateNormal": {
     "line number": [
      263
     ]
    },
    "gpytorch.distributions.multitask_multivariate_normal.torch": {
     "line number": [
      258,
      259
     ]
    },
    "lazify": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal.variance": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "property": {
     "line number": [
      265
     ]
    },
    "super": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multitask_multivariate_normal.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.distributions.multivariate_normal": {
  "data": {},
  "type": "module"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "torch.distributions.MultivariateNormal": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.__add__": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      277
     ]
    },
    "float": {
     "line number": [
      274
     ]
    },
    "int": {
     "line number": [
      274
     ]
    },
    "isinstance": {
     "line number": [
      269,
      274,
      274
     ]
    },
    "torch.distributions.MultivariateNormal": {
     "line number": [
      269
     ]
    },
    "type": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.__getitem__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      309
     ]
    },
    "Ellipsis": {
     "line number": [
      301
     ]
    },
    "IndexError": {
     "line number": [
      304
     ]
    },
    "int": {
     "line number": [
      308
     ]
    },
    "isinstance": {
     "line number": [
      295,
      308,
      310
     ]
    },
    "len": {
     "line number": [
      301,
      303
     ]
    },
    "slice": {
     "line number": [
      310,
      315
     ]
    },
    "tuple": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      39
     ]
    },
    "_mul_broadcast_shape": {
     "line number": [
      44
     ]
    },
    "isinstance": {
     "line number": [
      32,
      32
     ]
    },
    "super": {
     "line number": [
      49,
      51
     ]
    },
    "torch.distributions.MultivariateNormal": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.__mul__": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      286
     ]
    },
    "float": {
     "line number": [
      285
     ]
    },
    "int": {
     "line number": [
      285
     ]
    },
    "isinstance": {
     "line number": [
      285,
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.__radd__": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.__truediv__": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal._extended_shape": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "gpytorch.distributions.multivariate_normal.torch": {
     "line number": [
      77,
      87,
      88
     ]
    },
    "isinstance": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal._repr_sizes": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal._unbroadcasted_scale_tril": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.add_jitter": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.base_sample_shape": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      130
     ]
    },
    "property": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.confidence_region": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "super": {
     "line number": [
      114
     ]
    },
    "torch.distributions.utils.lazy_property": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.expand": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "gpytorch.distributions.multivariate_normal.torch": {
     "line number": [
      72,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.get_base_samples": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "gpytorch.distributions.multivariate_normal.torch": {
     "line number": [
      116,
      118
     ]
    },
    "torch.distributions.utils._standard_normal": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.lazy_covariance_matrix": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "lazify": {
     "line number": [
      143
     ]
    },
    "super": {
     "line number": [
      143
     ]
    },
    "torch.distributions.utils.lazy_property": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.log_prob": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "gpytorch.distributions.multivariate_normal.math": {
     "line number": [
      171,
      171
     ]
    },
    "len": {
     "line number": [
      157,
      157
     ]
    },
    "range": {
     "line number": [
      160
     ]
    },
    "sum": {
     "line number": [
      171
     ]
    },
    "super": {
     "line number": [
      147
     ]
    },
    "zip": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.rsample": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      192
     ]
    },
    "gpytorch.distributions.multivariate_normal.torch": {
     "line number": [
      174
     ]
    },
    "range": {
     "line number": [
      203,
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.sample": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "gpytorch.distributions.multivariate_normal.torch": {
     "line number": [
      220,
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.stddev": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "property": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.to_data_independent_dist": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      235
     ]
    },
    "torch.distributions.Normal": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.MultivariateNormal.variance": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "gpytorch.distributions.multivariate_normal.warnings": {
     "line number": [
      259
     ]
    },
    "property": {
     "line number": [
      245
     ]
    },
    "super": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.TMultivariateNormal": {
  "data": {
   "shadows": "torch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "gpytorch.distributions.multivariate_normal._standard_normal": {
  "data": {
   "shadows": "torch.distributions.utils._standard_normal"
  },
  "type": "import"
 },
 "gpytorch.distributions.multivariate_normal.base_distributions": {
  "data": {
   "shadows": "torch.distributions"
  },
  "type": "import"
 },
 "gpytorch.distributions.multivariate_normal.kl_mvn_mvn": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "_mul_broadcast_shape": {
     "line number": [
      321
     ]
    },
    "float": {
     "line number": [
      344
     ]
    },
    "gpytorch.distributions.multivariate_normal.torch": {
     "line number": [
      339
     ]
    },
    "isinstance": {
     "line number": [
      335
     ]
    },
    "sum": {
     "line number": [
      344
     ]
    },
    "torch.distributions.MultivariateNormal": {
     "line number": [
      319,
      319
     ]
    },
    "torch.distributions.kl.register_kl": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.distributions.multivariate_normal.lazy_property": {
  "data": {
   "shadows": "torch.distributions.utils.lazy_property"
  },
  "type": "import"
 },
 "gpytorch.distributions.multivariate_normal.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.distributions.multivariate_normal.register_kl": {
  "data": {
   "shadows": "torch.distributions.kl.register_kl"
  },
  "type": "import"
 },
 "gpytorch.distributions.multivariate_normal.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.distributions.multivariate_normal.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.functions": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions.__all__": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "gpytorch.functions._dsmm": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._dsmm.DSMM": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "torch.autograd.Function": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.functions._dsmm.DSMM.backward": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "bdsmm": {
     "line number": [
      16
     ]
    },
    "staticmethod": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._dsmm.DSMM.forward": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "bdsmm": {
     "line number": [
      12
     ]
    },
    "staticmethod": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._dsmm.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._inv_matmul": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._inv_matmul.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._inv_matmul.InvMatmul": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "torch.autograd.Function": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.functions._inv_matmul.InvMatmul.backward": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "any": {
     "line number": [
      89,
      99,
      118
     ]
    },
    "gpytorch.functions._inv_matmul.InvMatmul": {
     "line number": [
      97
     ]
    },
    "gpytorch.functions._inv_matmul.torch": {
     "line number": [
      104,
      104,
      121,
      121
     ]
    },
    "hasattr": {
     "line number": [
      80
     ]
    },
    "len": {
     "line number": [
      86
     ]
    },
    "list": {
     "line number": [
      111,
      128
     ]
    },
    "staticmethod": {
     "line number": [
      69
     ]
    },
    "tuple": {
     "line number": [
      111,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._inv_matmul.InvMatmul.forward": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "gpytorch.functions._inv_matmul._solve": {
     "line number": [
      49,
      53
     ]
    },
    "gpytorch.functions._inv_matmul.torch": {
     "line number": [
      48
     ]
    },
    "list": {
     "line number": [
      60,
      62
     ]
    },
    "staticmethod": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._inv_matmul._solve": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "gpytorch.functions._inv_matmul.torch": {
     "line number": [
      19
     ]
    },
    "isinstance": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._inv_matmul.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions._inv_quad": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._inv_quad.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._inv_quad.InvQuad": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "torch.autograd.Function": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.functions._inv_quad.InvQuad.backward": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "any": {
     "line number": [
      78
     ]
    },
    "gpytorch.functions._inv_quad.torch": {
     "line number": [
      87
     ]
    },
    "hasattr": {
     "line number": [
      66
     ]
    },
    "len": {
     "line number": [
      75
     ]
    },
    "list": {
     "line number": [
      91
     ]
    },
    "staticmethod": {
     "line number": [
      62
     ]
    },
    "tuple": {
     "line number": [
      91,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._inv_quad.InvQuad.forward": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "gpytorch.functions._inv_quad._solve": {
     "line number": [
      51
     ]
    },
    "staticmethod": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._inv_quad._solve": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "gpytorch.functions._inv_quad.torch": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._inv_quad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions._inv_quad_log_det": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._inv_quad_log_det.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._inv_quad_log_det.InvQuadLogDet": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "torch.autograd.Function": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.functions._inv_quad_log_det.InvQuadLogDet.backward": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "any": {
     "line number": [
      236
     ]
    },
    "gpytorch.functions._inv_quad_log_det.torch": {
     "line number": [
      251,
      252,
      259
     ]
    },
    "hasattr": {
     "line number": [
      210
     ]
    },
    "list": {
     "line number": [
      264,
      266
     ]
    },
    "staticmethod": {
     "line number": [
      197
     ]
    },
    "tuple": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._inv_quad_log_det.InvQuadLogDet.forward": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      46,
      131
     ]
    },
    "StochasticLQ": {
     "line number": [
      174
     ]
    },
    "UserWarning": {
     "line number": [
      78,
      107
     ]
    },
    "float": {
     "line number": [
      169
     ]
    },
    "gpytorch.functions._inv_quad_log_det.torch": {
     "line number": [
      28,
      66,
      81,
      87,
      90,
      99,
      111,
      124,
      154,
      163,
      164,
      168,
      168,
      169
     ]
    },
    "gpytorch.functions._inv_quad_log_det.warnings": {
     "line number": [
      75,
      104
     ]
    },
    "lanczos_tridiag_to_diag": {
     "line number": [
      173
     ]
    },
    "list": {
     "line number": [
      189
     ]
    },
    "range": {
     "line number": [
      120
     ]
    },
    "staticmethod": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._inv_quad_log_det.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions._inv_quad_log_det.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.functions._log_normal_cdf": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._log_normal_cdf.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._log_normal_cdf.LogNormalCDF": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "torch.autograd.Function": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.functions._log_normal_cdf.LogNormalCDF.backward": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "gpytorch.functions._log_normal_cdf.math": {
     "line number": [
      109,
      109,
      111,
      113,
      113
     ]
    },
    "gpytorch.functions._log_normal_cdf.torch": {
     "line number": [
      103,
      109,
      113
     ]
    },
    "staticmethod": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._log_normal_cdf.LogNormalCDF.forward": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.functions._log_normal_cdf.math": {
     "line number": [
      25,
      26,
      68,
      68,
      73,
      84,
      87
     ]
    },
    "gpytorch.functions._log_normal_cdf.torch": {
     "line number": [
      13,
      34,
      46,
      59,
      78,
      80,
      90,
      95
     ]
    },
    "staticmethod": {
     "line number": [
      11
     ]
    },
    "torch.distributions.Normal": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._log_normal_cdf.Normal": {
  "data": {
   "shadows": "torch.distributions.Normal"
  },
  "type": "import"
 },
 "gpytorch.functions._log_normal_cdf.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.functions._log_normal_cdf.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions._matmul": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._matmul.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._matmul.Matmul": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "torch.autograd.Function": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.functions._matmul.Matmul.backward": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "any": {
     "line number": [
      43
     ]
    },
    "hasattr": {
     "line number": [
      50
     ]
    },
    "len": {
     "line number": [
      40,
      62
     ]
    },
    "list": {
     "line number": [
      65
     ]
    },
    "staticmethod": {
     "line number": [
      33
     ]
    },
    "tuple": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._matmul.Matmul.forward": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "list": {
     "line number": [
      23
     ]
    },
    "staticmethod": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._root_decomposition": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._root_decomposition.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._root_decomposition.RootDecomposition": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "torch.autograd.Function": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.functions._root_decomposition.RootDecomposition.backward": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "any": {
     "line number": [
      108
     ]
    },
    "gpytorch.functions._root_decomposition.torch": {
     "line number": [
      151,
      156
     ]
    },
    "hasattr": {
     "line number": [
      142
     ]
    },
    "is_empty": {
     "line number": [
      114,
      116
     ]
    },
    "list": {
     "line number": [
      172
     ]
    },
    "staticmethod": {
     "line number": [
      105
     ]
    },
    "tuple": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._root_decomposition.RootDecomposition.backward.is_empty": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "gpytorch.functions._root_decomposition.RootDecomposition.forward": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.functions._root_decomposition.torch": {
     "line number": [
      67,
      78,
      79
     ]
    },
    "lazify": {
     "line number": [
      66
     ]
    },
    "list": {
     "line number": [
      101
     ]
    },
    "staticmethod": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._root_decomposition.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions._sqrt_inv_matmul": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions._sqrt_inv_matmul.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "gpytorch.functions._sqrt_inv_matmul.SqrtInvMatmul": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "torch.autograd.Function": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.functions._sqrt_inv_matmul.SqrtInvMatmul.backward": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "gpytorch.functions._sqrt_inv_matmul.torch": {
     "line number": [
      69,
      70,
      72,
      72,
      98,
      98
     ]
    },
    "len": {
     "line number": [
      50
     ]
    },
    "staticmethod": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._sqrt_inv_matmul.SqrtInvMatmul.forward": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "gpytorch.functions._sqrt_inv_matmul.torch": {
     "line number": [
      23,
      38
     ]
    },
    "staticmethod": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions._sqrt_inv_matmul.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions.add_diag": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "input": {
     "line number": [
      26
     ]
    },
    "lazify": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions.add_jitter": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "gpytorch.functions.torch": {
     "line number": [
      42
     ]
    },
    "hasattr": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions.dsmm": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "DSMM": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions.inv_matmul": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "lazify": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions.inv_quad": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "gpytorch.functions.inv_quad_logdet": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions.inv_quad_logdet": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "lazify": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions.log_normal_cdf": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "LogNormalCDF": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions.logdet": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "gpytorch.functions.inv_quad_logdet": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions.matern_covariance": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions.matern_covariance.MaternCovariance": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "gpytorch.functions.matern_covariance.torch": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.functions.matern_covariance.MaternCovariance.backward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions.matern_covariance.MaternCovariance.forward": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      10
     ]
    },
    "ValueError": {
     "line number": [
      12
     ]
    },
    "any": {
     "line number": [
      9,
      15
     ]
    },
    "dist_func": {
     "line number": [
      19
     ]
    },
    "gpytorch.functions.matern_covariance.math": {
     "line number": [
      19
     ]
    },
    "staticmethod": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions.matern_covariance.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.functions.matern_covariance.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions.matmul": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "gpytorch.functions.rbf_covariance": {
  "data": {},
  "type": "module"
 },
 "gpytorch.functions.rbf_covariance.RBFCovariance": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "gpytorch.functions.rbf_covariance.torch": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.functions.rbf_covariance.RBFCovariance.backward": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions.rbf_covariance.RBFCovariance.forward": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      8
     ]
    },
    "ValueError": {
     "line number": [
      10
     ]
    },
    "any": {
     "line number": [
      7,
      11
     ]
    },
    "sq_dist_func": {
     "line number": [
      14
     ]
    },
    "staticmethod": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions.rbf_covariance.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.functions.root_decomposition": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "lazify": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions.root_inv_decomposition": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "lazify": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.functions.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "gpytorch.kernels.additive_structure_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.additive_structure_kernel.AdditiveStructureKernel": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.kernels.additive_structure_kernel.AdditiveStructureKernel.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "gpytorch.kernels.additive_structure_kernel.AdditiveStructureKernel": {
     "line number": [
      43
     ]
    },
    "super": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.additive_structure_kernel.AdditiveStructureKernel.forward": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.additive_structure_kernel.AdditiveStructureKernel.is_stationary": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      36
     ]
    },
    "property": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.additive_structure_kernel.AdditiveStructureKernel.num_outputs_per_input": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "gpytorch.kernels.additive_structure_kernel.AdditiveStructureKernel.prediction_strategy": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "gpytorch.kernels.arc_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.arc_kernel.ArcKernel": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.kernels.arc_kernel.ArcKernel.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "Interval": {
     "line number": [
      120
     ]
    },
    "Positive": {
     "line number": [
      140
     ]
    },
    "gpytorch.kernels.arc_kernel.ArcKernel": {
     "line number": [
      107
     ]
    },
    "gpytorch.kernels.arc_kernel.torch": {
     "line number": [
      122,
      122,
      132,
      132
     ]
    },
    "super": {
     "line number": [
      107
     ]
    },
    "typing.Optional": {
     "line number": [
      102,
      103,
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.arc_kernel.ArcKernel._set_angle": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "gpytorch.kernels.arc_kernel.torch": {
     "line number": [
      157,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.arc_kernel.ArcKernel._set_radius": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "gpytorch.kernels.arc_kernel.torch": {
     "line number": [
      170,
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.arc_kernel.ArcKernel.angle": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "gpytorch.kernels.arc_kernel.ArcKernel.default_delta_func": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "gpytorch.kernels.arc_kernel.torch": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.arc_kernel.ArcKernel.embedding": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "gpytorch.kernels.arc_kernel.torch": {
     "line number": [
      177,
      178,
      179
     ]
    },
    "math.pi": {
     "line number": [
      177,
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.arc_kernel.ArcKernel.forward": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "gpytorch.kernels.arc_kernel.ArcKernel.radius": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "gpytorch.kernels.arc_kernel.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.kernels.arc_kernel.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "gpytorch.kernels.arc_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.cosine_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.cosine_kernel.CosineKernel": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.kernels.cosine_kernel.CosineKernel.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "Positive": {
     "line number": [
      67
     ]
    },
    "gpytorch.kernels.cosine_kernel.CosineKernel": {
     "line number": [
      60
     ]
    },
    "gpytorch.kernels.cosine_kernel.torch": {
     "line number": [
      63,
      63
     ]
    },
    "super": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.cosine_kernel.CosineKernel._set_period_length": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "gpytorch.kernels.cosine_kernel.torch": {
     "line number": [
      88,
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.cosine_kernel.CosineKernel.forward": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "gpytorch.kernels.cosine_kernel.math": {
     "line number": [
      97
     ]
    },
    "gpytorch.kernels.cosine_kernel.torch": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.cosine_kernel.CosineKernel.period_length": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "gpytorch.kernels.cosine_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.kernels.cosine_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.cylindrical_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "Positive": {
     "line number": [
      55,
      58,
      61
     ]
    },
    "gpytorch.kernels.cylindrical_kernel.torch": {
     "line number": [
      70,
      70,
      73,
      73,
      75,
      75
     ]
    },
    "int": {
     "line number": [
      43,
      45
     ]
    },
    "super": {
     "line number": [
      63
     ]
    },
    "typing.Optional": {
     "line number": [
      45,
      46,
      47,
      48,
      49,
      50,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel.alpha": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "gpytorch.kernels.cylindrical_kernel.torch": {
     "line number": [
      106,
      107,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel.angular_weights": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "gpytorch.kernels.cylindrical_kernel.torch": {
     "line number": [
      95,
      96,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel.beta": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "gpytorch.kernels.cylindrical_kernel.torch": {
     "line number": [
      117,
      118,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel.forward": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      131
     ]
    },
    "bool": {
     "line number": [
      123
     ]
    },
    "gpytorch.kernels.cylindrical_kernel.torch": {
     "line number": [
      123,
      123,
      130,
      130,
      123
     ]
    },
    "range": {
     "line number": [
      136,
      143
     ]
    },
    "typing.Optional": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel.kuma": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "gpytorch.kernels.cylindrical_kernel.torch": {
     "line number": [
      153,
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.cylindrical_kernel.CylindricalKernel.num_outputs_per_input": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "gpytorch.kernels.cylindrical_kernel.torch": {
     "line number": [
      160,
      160
     ]
    },
    "int": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.cylindrical_kernel.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.kernels.cylindrical_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.distributional_input_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.distributional_input_kernel.DistributionalInputKernel": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.kernels.distributional_input_kernel.DistributionalInputKernel.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      28
     ]
    },
    "gpytorch.kernels.distributional_input_kernel.DistributionalInputKernel": {
     "line number": [
      26
     ]
    },
    "super": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.distributional_input_kernel.DistributionalInputKernel.forward": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "gpytorch.kernels.distributional_input_kernel.torch": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.distributional_input_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.gaussian_symmetrized_kl_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.gaussian_symmetrized_kl_kernel.GaussianSymmetrizedKLKernel": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "gpytorch.kernels.gaussian_symmetrized_kl_kernel.GaussianSymmetrizedKLKernel.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "gpytorch.kernels.gaussian_symmetrized_kl_kernel.GaussianSymmetrizedKLKernel": {
     "line number": [
      55
     ]
    },
    "gpytorch.kernels.gaussian_symmetrized_kl_kernel._symmetrized_kl": {
     "line number": [
      54
     ]
    },
    "super": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.gaussian_symmetrized_kl_kernel._symmetrized_kl": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "int": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_interpolation_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      86,
      96,
      107
     ]
    },
    "create_grid": {
     "line number": [
      114
     ]
    },
    "float": {
     "line number": [
      77,
      77
     ]
    },
    "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel": {
     "line number": [
      116
     ]
    },
    "gpytorch.kernels.grid_interpolation_kernel.torch": {
     "line number": [
      119,
      119
     ]
    },
    "int": {
     "line number": [
      75,
      75,
      76,
      78,
      101
     ]
    },
    "isinstance": {
     "line number": [
      101
     ]
    },
    "len": {
     "line number": [
      94,
      95,
      98,
      106
     ]
    },
    "list": {
     "line number": [
      104
     ]
    },
    "range": {
     "line number": [
      89,
      102
     ]
    },
    "super": {
     "line number": [
      116
     ]
    },
    "tuple": {
     "line number": [
      89
     ]
    },
    "typing.List": {
     "line number": [
      75
     ]
    },
    "typing.Optional": {
     "line number": [
      77
     ]
    },
    "typing.Tuple": {
     "line number": [
      77,
      78
     ]
    },
    "typing.Union": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel._compute_grid": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "Interpolation": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel._inducing_forward": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "super": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel._tight_grid_bounds": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      123
     ]
    },
    "property": {
     "line number": [
      121
     ]
    },
    "tuple": {
     "line number": [
      123,
      124
     ]
    },
    "zip": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel.forward": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "InterpolatedLazyTensor": {
     "line number": [
      191
     ]
    },
    "_mul_broadcast_shape": {
     "line number": [
      188
     ]
    },
    "any": {
     "line number": [
      158
     ]
    },
    "create_grid": {
     "line number": [
      172
     ]
    },
    "gpytorch.kernels.grid_interpolation_kernel.torch": {
     "line number": [
      148,
      151,
      182
     ]
    },
    "lazify": {
     "line number": [
      177
     ]
    },
    "tuple": {
     "line number": [
      165,
      168
     ]
    },
    "zip": {
     "line number": [
      160,
      166,
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_interpolation_kernel.GridInterpolationKernel.prediction_strategy": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "InterpolatedPredictionStrategy": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_interpolation_kernel.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_interpolation_kernel.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_interpolation_kernel.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_interpolation_kernel.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_interpolation_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.grid_kernel.GridKernel": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      52
     ]
    },
    "bool": {
     "line number": [
      49,
      49
     ]
    },
    "convert_legacy_grid": {
     "line number": [
      56
     ]
    },
    "create_data_from_grid": {
     "line number": [
      62
     ]
    },
    "gpytorch.kernels.grid_kernel.torch": {
     "line number": [
      55
     ]
    },
    "len": {
     "line number": [
      59
     ]
    },
    "super": {
     "line number": [
      54
     ]
    },
    "torch.Tensor": {
     "line number": [
      49
     ]
    },
    "typing.List": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.GridKernel._clear_cache": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.forward": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "KroneckerProductLazyTensor": {
     "line number": [
      150,
      159
     ]
    },
    "ToeplitzLazyTensor": {
     "line number": [
      143,
      148
     ]
    },
    "ValueError": {
     "line number": [
      102
     ]
    },
    "delazify": {
     "line number": [
      137,
      153
     ]
    },
    "enumerate": {
     "line number": [
      148,
      158
     ]
    },
    "gpytorch.kernels.grid_kernel.torch": {
     "line number": [
      115,
      115,
      128,
      128,
      135,
      136,
      152
     ]
    },
    "hasattr": {
     "line number": [
      129
     ]
    },
    "len": {
     "line number": [
      123
     ]
    },
    "max": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.grid": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      75
     ]
    },
    "property": {
     "line number": [
      73
     ]
    },
    "range": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.is_ragged": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "all": {
     "line number": [
      98
     ]
    },
    "property": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.num_outputs_per_input": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.register_buffer_list": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      70
     ]
    },
    "str": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.GridKernel.update_grid": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      85
     ]
    },
    "convert_legacy_grid": {
     "line number": [
      82
     ]
    },
    "create_data_from_grid": {
     "line number": [
      91
     ]
    },
    "gpytorch.kernels.grid_kernel.torch": {
     "line number": [
      81
     ]
    },
    "len": {
     "line number": [
      84
     ]
    },
    "range": {
     "line number": [
      87
     ]
    },
    "setattr": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.grid_kernel.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_kernel.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.kernels.grid_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.index_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.index_kernel.IndexKernel": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.kernels.index_kernel.IndexKernel.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "Positive": {
     "line number": [
      50
     ]
    },
    "RuntimeError": {
     "line number": [
      46
     ]
    },
    "gpytorch.kernels.index_kernel.torch": {
     "line number": [
      53,
      53,
      55,
      55
     ]
    },
    "super": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.index_kernel.IndexKernel._eval_covar_matrix": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "gpytorch.kernels.index_kernel.torch": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.index_kernel.IndexKernel._set_var": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "gpytorch.kernels.index_kernel.IndexKernel.covar_matrix": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      79
     ]
    },
    "PsdSumLazyTensor": {
     "line number": [
      79
     ]
    },
    "RootLazyTensor": {
     "line number": [
      79
     ]
    },
    "property": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.index_kernel.IndexKernel.forward": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "InterpolatedLazyTensor": {
     "line number": [
      87
     ]
    },
    "_mul_broadcast_shape": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.index_kernel.IndexKernel.var": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "gpytorch.kernels.index_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.inducing_point_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel.__deepcopy__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "gpytorch.kernels.inducing_point_kernel.copy": {
     "line number": [
      115,
      116
     ]
    },
    "hasattr": {
     "line number": [
      107,
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "gpytorch.kernels.inducing_point_kernel.InducingPointKernel": {
     "line number": [
      18
     ]
    },
    "gpytorch.kernels.inducing_point_kernel.torch": {
     "line number": [
      25
     ]
    },
    "super": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel._clear_cache": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel._covar_diag": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      79
     ]
    },
    "delazify": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel._get_covariance": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      64
     ]
    },
    "LowRankRootAddedDiagLazyTensor": {
     "line number": [
      64
     ]
    },
    "LowRankRootLazyTensor": {
     "line number": [
      59
     ]
    },
    "MatmulLazyTensor": {
     "line number": [
      67
     ]
    },
    "delazify": {
     "line number": [
      57,
      66
     ]
    },
    "gpytorch.kernels.inducing_point_kernel.math": {
     "line number": [
      63
     ]
    },
    "gpytorch.kernels.inducing_point_kernel.torch": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel._inducing_inv_root": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "gpytorch.kernels.inducing_point_kernel.torch": {
     "line number": [
      48,
      49
     ]
    },
    "hasattr": {
     "line number": [
      44
     ]
    },
    "property": {
     "line number": [
      42
     ]
    },
    "psd_safe_cholesky": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel._inducing_mat": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "delazify": {
     "line number": [
      37
     ]
    },
    "hasattr": {
     "line number": [
      34
     ]
    },
    "property": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel.forward": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "InducingPointKernelAddedLossTerm": {
     "line number": [
      88
     ]
    },
    "MultivariateNormal": {
     "line number": [
      89,
      90
     ]
    },
    "RuntimeError": {
     "line number": [
      86
     ]
    },
    "gpytorch.kernels.inducing_point_kernel.torch": {
     "line number": [
      85,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel.num_outputs_per_input": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.InducingPointKernel.prediction_strategy": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "gpytorch.kernels.inducing_point_kernel.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "gpytorch.kernels.inducing_point_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.kernels.inducing_point_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.keops.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "gpytorch.kernels.keops.keops_kernel": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "gpytorch.kernels.keops.keops_kernel.KEOLazyTensor": {
  "data": {
   "shadows": "pykeops.torch.LazyTensor"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops.keops_kernel.KeOpsKernel": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "gpytorch.kernels.keops.keops_kernel.KeOpsKernel.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.keops_kernel.KeOpsKernel.covar_func": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      13
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      11
     ]
    },
    "gpytorch.kernels.keops.keops_kernel.torch": {
     "line number": [
      12,
      12
     ]
    },
    "pykeops.torch.LazyTensor": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.keops_kernel.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops.keops_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops.matern_kernel": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "module"
 },
 "gpytorch.kernels.keops.matern_kernel.KEOLazyTensor": {
  "data": {
   "shadows": "pykeops.torch.LazyTensor"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops.matern_kernel.MaternKernel": {
  "data": {
   "lineno": 98
  },
  "type": "class"
 },
 "gpytorch.kernels.keops.matern_kernel.MaternKernel.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "super": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.matern_kernel.MaternKernel._nonkeops_covar_func": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "gpytorch.kernels.keops.matern_kernel.math": {
     "line number": [
      32,
      37,
      39
     ]
    },
    "gpytorch.kernels.keops.matern_kernel.torch": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.matern_kernel.MaternKernel.covar_func": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "gpytorch.kernels.keops.matern_kernel.math": {
     "line number": [
      72,
      77,
      79
     ]
    },
    "gpytorch.kernels.keops.matern_kernel.torch": {
     "line number": [
      58
     ]
    },
    "pykeops.torch.LazyTensor": {
     "line number": [
      68,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.matern_kernel.MaternKernel.forward": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "KeOpsLazyTensor": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.matern_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops.matern_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops.rbf_kernel": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "module"
 },
 "gpytorch.kernels.keops.rbf_kernel.KEOLazyTensor": {
  "data": {
   "shadows": "pykeops.torch.LazyTensor"
  },
  "type": "import"
 },
 "gpytorch.kernels.keops.rbf_kernel.RBFKernel": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "gpytorch.kernels.keops.rbf_kernel.RBFKernel.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "super": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.rbf_kernel.RBFKernel._nonkeops_covar_func": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.rbf_kernel.RBFKernel.covar_func": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "gpytorch.kernels.keops.rbf_kernel.torch": {
     "line number": [
      44
     ]
    },
    "pykeops.torch.LazyTensor": {
     "line number": [
      45,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.rbf_kernel.RBFKernel.forward": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "KeOpsLazyTensor": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.keops.rbf_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.kernel.AdditiveKernel": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": {
    "gpytorch.kernels.kernel.Kernel": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.kernels.kernel.AdditiveKernel.__getitem__": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      482
     ]
    },
    "enumerate": {
     "line number": [
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.AdditiveKernel.__init__": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": {
    "gpytorch.kernels.kernel.AdditiveKernel": {
     "line number": [
      459
     ]
    },
    "super": {
     "line number": [
      459
     ]
    },
    "torch.nn.ModuleList": {
     "line number": [
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.AdditiveKernel.forward": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "ZeroLazyTensor": {
     "line number": [
      463
     ]
    },
    "kern": {
     "line number": [
      465
     ]
    },
    "lazify": {
     "line number": [
      467
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.AdditiveKernel.is_stationary": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "all": {
     "line number": [
      456
     ]
    },
    "bool": {
     "line number": [
      452
     ]
    },
    "property": {
     "line number": [
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.AdditiveKernel.num_outputs_per_input": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.AdditiveKernel.prediction_strategy": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Distance": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "gpytorch.kernels.kernel.torch": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.kernels.kernel.Distance.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "gpytorch.kernels.kernel.default_postprocess_script": {
     "line number": [
      23
     ]
    },
    "super": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Distance._dist": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Distance._sq_dist": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "gpytorch.kernels.kernel.torch": {
     "line number": [
      35,
      40,
      41,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "gpytorch.kernels.kernel.Kernel.__add__": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "gpytorch.kernels.kernel.AdditiveKernel": {
     "line number": [
      410
     ]
    },
    "isinstance": {
     "line number": [
      408,
      409
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.__call__": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "LazyEvaluatedKernelTensor": {
     "line number": [
      396
     ]
    },
    "RuntimeError": {
     "line number": [
      372,
      380
     ]
    },
    "gpytorch.kernels.kernel.Kernel": {
     "line number": [
      386,
      398
     ]
    },
    "gpytorch.kernels.kernel.torch": {
     "line number": [
      390
     ]
    },
    "isinstance": {
     "line number": [
      389
     ]
    },
    "lazify": {
     "line number": [
      398
     ]
    },
    "super": {
     "line number": [
      386,
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.__getitem__": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      425
     ]
    },
    "isinstance": {
     "line number": [
      427
     ]
    },
    "len": {
     "line number": [
      422,
      431,
      431,
      432
     ]
    },
    "tuple": {
     "line number": [
      427
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.__getstate__": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      160
     ]
    },
    "Positive": {
     "line number": [
      154
     ]
    },
    "gpytorch.kernels.kernel.Kernel": {
     "line number": [
      142
     ]
    },
    "gpytorch.kernels.kernel.torch": {
     "line number": [
      135,
      144,
      145,
      145,
      167,
      167
     ]
    },
    "gpytorch.kernels.kernel.warnings": {
     "line number": [
      157
     ]
    },
    "super": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.__mul__": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "gpytorch.kernels.kernel.ProductKernel": {
     "line number": [
      416
     ]
    },
    "isinstance": {
     "line number": [
      414,
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.__setstate__": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel._set_lengthscale": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      249
     ]
    },
    "gpytorch.kernels.kernel.torch": {
     "line number": [
      251,
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.batch_shape": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.covar_dist": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "dist_postprocess_func": {
     "line number": [
      316,
      323
     ]
    },
    "gpytorch.kernels.kernel.Distance": {
     "line number": [
      309
     ]
    },
    "gpytorch.kernels.kernel.default_postprocess_script": {
     "line number": [
      268
     ]
    },
    "gpytorch.kernels.kernel.torch": {
     "line number": [
      300,
      303,
      314,
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.dtype": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "gpytorch.kernels.kernel.torch": {
     "line number": [
      227
     ]
    },
    "property": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.forward": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      206
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.is_stationary": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      230
     ]
    },
    "property": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.lengthscale": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.local_load_samples": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "gpytorch.kernels.kernel.torch": {
     "line number": [
      258
     ]
    },
    "iter": {
     "line number": [
      257
     ]
    },
    "next": {
     "line number": [
      257
     ]
    },
    "super": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.named_sub_kernels": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "gpytorch.kernels.kernel.Kernel": {
     "line number": [
      335
     ]
    },
    "isinstance": {
     "line number": [
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.num_outputs_per_input": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.prediction_strategy": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.Kernel.sub_kernels": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.ModuleList": {
  "data": {
   "shadows": "torch.nn.ModuleList"
  },
  "type": "import"
 },
 "gpytorch.kernels.kernel.ProductKernel": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": {
    "gpytorch.kernels.kernel.Kernel": {
     "line number": [
      489
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.kernels.kernel.ProductKernel.__getitem__": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      539
     ]
    },
    "enumerate": {
     "line number": [
      540
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.ProductKernel.__init__": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "gpytorch.kernels.kernel.ProductKernel": {
     "line number": [
      507
     ]
    },
    "super": {
     "line number": [
      507
     ]
    },
    "torch.nn.ModuleList": {
     "line number": [
      508
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.ProductKernel.forward": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "delazify": {
     "line number": [
      515,
      526
     ]
    },
    "gpytorch.kernels.kernel.torch": {
     "line number": [
      511
     ]
    },
    "kern": {
     "line number": [
      522,
      523
     ]
    },
    "lazify": {
     "line number": [
      520,
      529
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.ProductKernel.is_stationary": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "all": {
     "line number": [
      504
     ]
    },
    "bool": {
     "line number": [
      500
     ]
    },
    "property": {
     "line number": [
      499
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.ProductKernel.num_outputs_per_input": {
  "data": {
   "lineno": 535
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.kernels.kernel.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "gpytorch.kernels.kernel.default_postprocess_script": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "gpytorch.kernels.kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.kernel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.kernels.lcm_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.lcm_kernel.LCMKernel": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.kernels.lcm_kernel.LCMKernel.__getitem__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      58
     ]
    },
    "torch.nn.ModuleList": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.lcm_kernel.LCMKernel.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "MultitaskKernel": {
     "line number": [
      39
     ]
    },
    "ValueError": {
     "line number": [
      32,
      35
     ]
    },
    "gpytorch.kernels.lcm_kernel.LCMKernel": {
     "line number": [
      36
     ]
    },
    "isinstance": {
     "line number": [
      34
     ]
    },
    "len": {
     "line number": [
      31
     ]
    },
    "super": {
     "line number": [
      36
     ]
    },
    "torch.nn.ModuleList": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.lcm_kernel.LCMKernel.forward": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "gpytorch.kernels.lcm_kernel.LCMKernel.num_outputs_per_input": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "gpytorch.kernels.lcm_kernel.ModuleList": {
  "data": {
   "shadows": "torch.nn.ModuleList"
  },
  "type": "import"
 },
 "gpytorch.kernels.lcm_kernel.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "gpytorch.kernels.linear_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.linear_kernel.LinearKernel": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "gpytorch.kernels.linear_kernel.LinearKernel.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      54,
      58
     ]
    },
    "Positive": {
     "line number": [
      50
     ]
    },
    "gpytorch.kernels.linear_kernel.LinearKernel": {
     "line number": [
      48
     ]
    },
    "gpytorch.kernels.linear_kernel.torch": {
     "line number": [
      55,
      55,
      59,
      59
     ]
    },
    "gpytorch.kernels.linear_kernel.warnings": {
     "line number": [
      54,
      58
     ]
    },
    "super": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.linear_kernel.LinearKernel._set_variance": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "gpytorch.kernels.linear_kernel.torch": {
     "line number": [
      74,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.linear_kernel.LinearKernel.forward": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "MatmulLazyTensor": {
     "line number": [
      93
     ]
    },
    "RootLazyTensor": {
     "line number": [
      86
     ]
    },
    "gpytorch.kernels.linear_kernel.torch": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.linear_kernel.LinearKernel.variance": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "gpytorch.kernels.linear_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.linear_kernel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.kernels.matern_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.matern_kernel.MaternKernel": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "gpytorch.kernels.matern_kernel.MaternKernel.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      84
     ]
    },
    "gpytorch.kernels.matern_kernel.MaternKernel": {
     "line number": [
      85
     ]
    },
    "super": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.matern_kernel.MaternKernel.forward": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "MaternCovariance": {
     "line number": [
      111
     ]
    },
    "gpytorch.kernels.matern_kernel.math": {
     "line number": [
      102,
      107,
      109
     ]
    },
    "gpytorch.kernels.matern_kernel.torch": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.matern_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.kernels.matern_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.multi_device_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.multi_device_kernel.DataParallel": {
  "data": {
   "shadows": "torch.nn.parallel.DataParallel"
  },
  "type": "import"
 },
 "gpytorch.kernels.multi_device_kernel.MultiDeviceKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "torch.nn.parallel.DataParallel": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.kernels.multi_device_kernel.MultiDeviceKernel.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.kernels.multi_device_kernel.torch": {
     "line number": [
      26,
      32,
      33
     ]
    },
    "torch.nn.parallel.DataParallel.__init__": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.multi_device_kernel.MultiDeviceKernel.base_kernel": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "property": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.multi_device_kernel.MultiDeviceKernel.forward": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "gpytorch.kernels.multi_device_kernel.torch": {
     "line number": [
      46,
      50
     ]
    },
    "len": {
     "line number": [
      43,
      59,
      71
     ]
    },
    "tuple": {
     "line number": [
      54
     ]
    },
    "zip": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.multi_device_kernel.MultiDeviceKernel.forward.set_distance_module_to_none": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.multi_device_kernel.MultiDeviceKernel.gather": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "CatLazyTensor": {
     "line number": [
      80
     ]
    },
    "lazify": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.multi_device_kernel.MultiDeviceKernel.num_outputs_per_input": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "gpytorch.kernels.multi_device_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.multitask_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.multitask_kernel.MultitaskKernel": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.kernels.multitask_kernel.MultitaskKernel.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "IndexKernel": {
     "line number": [
      28
     ]
    },
    "gpytorch.kernels.multitask_kernel.MultitaskKernel": {
     "line number": [
      27
     ]
    },
    "super": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.multitask_kernel.MultitaskKernel.forward": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "KroneckerProductLazyTensor": {
     "line number": [
      41
     ]
    },
    "RuntimeError": {
     "line number": [
      36
     ]
    },
    "lazify": {
     "line number": [
      40
     ]
    },
    "len": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.multitask_kernel.MultitaskKernel.num_outputs_per_input": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "gpytorch.kernels.newton_girard_additive_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.newton_girard_additive_kernel.NewtonGirardAdditiveKernel": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.kernels.newton_girard_additive_kernel.NewtonGirardAdditiveKernel.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "Positive": {
     "line number": [
      31
     ]
    },
    "gpytorch.kernels.newton_girard_additive_kernel.NewtonGirardAdditiveKernel": {
     "line number": [
      17
     ]
    },
    "gpytorch.kernels.newton_girard_additive_kernel.torch": {
     "line number": [
      29,
      29
     ]
    },
    "range": {
     "line number": [
      34
     ]
    },
    "super": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.newton_girard_additive_kernel.NewtonGirardAdditiveKernel._set_outputscale": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "gpytorch.kernels.newton_girard_additive_kernel.torch": {
     "line number": [
      45,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.newton_girard_additive_kernel.NewtonGirardAdditiveKernel.forward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      53
     ]
    },
    "delazify": {
     "line number": [
      58
     ]
    },
    "gpytorch.kernels.newton_girard_additive_kernel.torch": {
     "line number": [
      65,
      73,
      84,
      84,
      91,
      91,
      92,
      92
     ]
    },
    "len": {
     "line number": [
      63,
      86
     ]
    },
    "range": {
     "line number": [
      63,
      86,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.newton_girard_additive_kernel.NewtonGirardAdditiveKernel.outputscale": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "gpytorch.kernels.newton_girard_additive_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.periodic_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.periodic_kernel.PeriodicKernel": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.kernels.periodic_kernel.PeriodicKernel.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "Positive": {
     "line number": [
      80
     ]
    },
    "gpytorch.kernels.periodic_kernel.PeriodicKernel": {
     "line number": [
      78
     ]
    },
    "gpytorch.kernels.periodic_kernel.torch": {
     "line number": [
      83,
      83
     ]
    },
    "super": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.periodic_kernel.PeriodicKernel._set_period_length": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "gpytorch.kernels.periodic_kernel.torch": {
     "line number": [
      105,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.periodic_kernel.PeriodicKernel.forward": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "gpytorch.kernels.periodic_kernel.math": {
     "line number": [
      113
     ]
    },
    "gpytorch.kernels.periodic_kernel.torch": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.periodic_kernel.PeriodicKernel.period_length": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "gpytorch.kernels.periodic_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.kernels.periodic_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.polynomial_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.polynomial_kernel.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.kernels.polynomial_kernel.PolynomialKernel": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "gpytorch.kernels.polynomial_kernel.PolynomialKernel.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "Positive": {
     "line number": [
      42
     ]
    },
    "RuntimeError": {
     "line number": [
      49
     ]
    },
    "gpytorch.kernels.polynomial_kernel.torch": {
     "line number": [
      44,
      44,
      47
     ]
    },
    "int": {
     "line number": [
      38
     ]
    },
    "super": {
     "line number": [
      40
     ]
    },
    "typing.Optional": {
     "line number": [
      38,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.polynomial_kernel.PolynomialKernel._set_offset": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "gpytorch.kernels.polynomial_kernel.torch": {
     "line number": [
      68,
      69,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.polynomial_kernel.PolynomialKernel.forward": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      77,
      78
     ]
    },
    "gpytorch.kernels.polynomial_kernel.torch": {
     "line number": [
      75,
      76,
      91,
      93,
      80
     ]
    },
    "typing.Optional": {
     "line number": [
      77,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.polynomial_kernel.PolynomialKernel.offset": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "gpytorch.kernels.polynomial_kernel.torch": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.polynomial_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.polynomial_kernel_grad": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.polynomial_kernel_grad.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.kernels.polynomial_kernel_grad.PolynomialKernelGrad": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.kernels.polynomial_kernel_grad.PolynomialKernelGrad.forward": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      15,
      16
     ]
    },
    "gpytorch.kernels.polynomial_kernel_grad.torch": {
     "line number": [
      13,
      14,
      33,
      38,
      40,
      45,
      49,
      51,
      52,
      55,
      56,
      60,
      71,
      71,
      71,
      74,
      75,
      18
     ]
    },
    "range": {
     "line number": [
      66
     ]
    },
    "typing.Optional": {
     "line number": [
      15,
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.polynomial_kernel_grad.PolynomialKernelGrad.num_outputs_per_input": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "gpytorch.kernels.polynomial_kernel_grad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.product_structure_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.product_structure_kernel.ProductStructureKernel": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "gpytorch.kernels.product_structure_kernel.ProductStructureKernel.__call__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "lazify": {
     "line number": [
      77
     ]
    },
    "super": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.product_structure_kernel.ProductStructureKernel.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "gpytorch.kernels.product_structure_kernel.ProductStructureKernel": {
     "line number": [
      49
     ]
    },
    "super": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.product_structure_kernel.ProductStructureKernel.forward": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.product_structure_kernel.ProductStructureKernel.is_stationary": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      42
     ]
    },
    "property": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.product_structure_kernel.ProductStructureKernel.num_outputs_per_input": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "gpytorch.kernels.rbf_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.rbf_kernel.RBFKernel": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "gpytorch.kernels.rbf_kernel.RBFKernel.forward": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "RBFCovariance": {
     "line number": [
      86
     ]
    },
    "gpytorch.kernels.rbf_kernel.postprocess_rbf": {
     "line number": [
      84,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.rbf_kernel.postprocess_rbf": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "gpytorch.kernels.rbf_kernel_grad": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.rbf_kernel_grad.RBFKernelGrad": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.kernels.rbf_kernel_grad.RBFKernelGrad.forward": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "KroneckerProductLazyTensor": {
     "line number": [
      88
     ]
    },
    "RuntimeError": {
     "line number": [
      108
     ]
    },
    "gpytorch.kernels.rbf_kernel_grad.RBFKernelGrad": {
     "line number": [
      110
     ]
    },
    "gpytorch.kernels.rbf_kernel_grad.torch": {
     "line number": [
      60,
      70,
      89,
      90,
      96,
      100,
      101,
      107,
      111,
      113,
      114
     ]
    },
    "len": {
     "line number": [
      56
     ]
    },
    "super": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.rbf_kernel_grad.RBFKernelGrad.num_outputs_per_input": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "gpytorch.kernels.rbf_kernel_grad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.rff_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.rff_kernel.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.kernels.rff_kernel.RFFKernel": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "gpytorch.kernels.rff_kernel.RFFKernel.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "int": {
     "line number": [
      95,
      95
     ]
    },
    "super": {
     "line number": [
      96
     ]
    },
    "typing.Optional": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.rff_kernel.RFFKernel._featurize": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      139
     ]
    },
    "gpytorch.kernels.rff_kernel.math": {
     "line number": [
      146
     ]
    },
    "gpytorch.kernels.rff_kernel.torch": {
     "line number": [
      143,
      143,
      143
     ]
    },
    "torch.Tensor": {
     "line number": [
      139,
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.rff_kernel.RFFKernel._init_weights": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "gpytorch.kernels.rff_kernel.torch": {
     "line number": [
      108,
      109
     ]
    },
    "int": {
     "line number": [
      102,
      102
     ]
    },
    "torch.Tensor": {
     "line number": [
      102
     ]
    },
    "typing.Optional": {
     "line number": [
      102,
      102,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.rff_kernel.RFFKernel.forward": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "LowRankRootLazyTensor": {
     "line number": [
      133
     ]
    },
    "MatmulLazyTensor": {
     "line number": [
      137
     ]
    },
    "RootLazyTensor": {
     "line number": [
      135
     ]
    },
    "bool": {
     "line number": [
      114,
      114
     ]
    },
    "float": {
     "line number": [
      127
     ]
    },
    "gpytorch.kernels.rff_kernel.math": {
     "line number": [
      133,
      135
     ]
    },
    "gpytorch.kernels.rff_kernel.torch": {
     "line number": [
      121
     ]
    },
    "hasattr": {
     "line number": [
      119
     ]
    },
    "torch.Tensor": {
     "line number": [
      114,
      114,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.rff_kernel.RFFKernel.prediction_strategy": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "gpytorch.kernels.rff_kernel.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.kernels.rff_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.kernels.rff_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.rq_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.rq_kernel.RQKernel": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.kernels.rq_kernel.RQKernel.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "Positive": {
     "line number": [
      64
     ]
    },
    "gpytorch.kernels.rq_kernel.RQKernel": {
     "line number": [
      61
     ]
    },
    "gpytorch.kernels.rq_kernel.torch": {
     "line number": [
      62,
      62
     ]
    },
    "super": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.rq_kernel.RQKernel.alpha": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "gpytorch.kernels.rq_kernel.torch": {
     "line number": [
      87,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.rq_kernel.RQKernel.forward": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "gpytorch.kernels.rq_kernel.RQKernel.forward.postprocess_rq": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "len": {
     "line number": [
      71,
      71
     ]
    },
    "range": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.rq_kernel.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "gpytorch.kernels.rq_kernel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "gpytorch.kernels.rq_kernel.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "gpytorch.kernels.rq_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.rq_kernel.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "gpytorch.kernels.scale_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "Positive": {
     "line number": [
      66
     ]
    },
    "gpytorch.kernels.scale_kernel.ScaleKernel": {
     "line number": [
      64
     ]
    },
    "gpytorch.kernels.scale_kernel.torch": {
     "line number": [
      69,
      69,
      70
     ]
    },
    "len": {
     "line number": [
      69
     ]
    },
    "super": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel._set_outputscale": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "gpytorch.kernels.scale_kernel.torch": {
     "line number": [
      87,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel.forward": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "delazify": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel.is_stationary": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      55
     ]
    },
    "property": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel.num_outputs_per_input": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel.outputscale": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "gpytorch.kernels.scale_kernel.ScaleKernel.prediction_strategy": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "gpytorch.kernels.scale_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_delta_kernel": {
  "data": {},
  "type": "module"
 },
 "gpytorch.kernels.spectral_delta_kernel.SpectralDeltaKernel": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.kernels.spectral_delta_kernel.SpectralDeltaKernel.Z": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_delta_kernel.SpectralDeltaKernel.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "Positive": {
     "line number": [
      35
     ]
    },
    "gpytorch.kernels.spectral_delta_kernel.torch": {
     "line number": [
      27,
      30,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_delta_kernel.SpectralDeltaKernel._set_Z": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "gpytorch.kernels.spectral_delta_kernel.torch": {
     "line number": [
      100,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_delta_kernel.SpectralDeltaKernel.forward": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "MatmulLazyTensor": {
     "line number": [
      123
     ]
    },
    "RootLazyTensor": {
     "line number": [
      121
     ]
    },
    "gpytorch.kernels.spectral_delta_kernel.math": {
     "line number": [
      114,
      115,
      117,
      118
     ]
    },
    "gpytorch.kernels.spectral_delta_kernel.torch": {
     "line number": [
      117,
      118,
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_delta_kernel.SpectralDeltaKernel.initialize_from_data": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "gpytorch.kernels.spectral_delta_kernel.math": {
     "line number": [
      51
     ]
    },
    "numpy.abs": {
     "line number": [
      50
     ]
    },
    "numpy.arange": {
     "line number": [
      53,
      54
     ]
    },
    "numpy.digitize": {
     "line number": [
      65
     ]
    },
    "numpy.histogram": {
     "line number": [
      64
     ]
    },
    "numpy.hstack": {
     "line number": [
      55,
      60
     ]
    },
    "numpy.random.rand": {
     "line number": [
      63
     ]
    },
    "numpy.trapz": {
     "line number": [
      59
     ]
    },
    "numpy.zeros": {
     "line number": [
      60
     ]
    },
    "scipy.fftpack.fft": {
     "line number": [
      50
     ]
    },
    "scipy.integrate.cumtrapz": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_delta_kernel.SpectralDeltaKernel.initialize_from_data_simple": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      74
     ]
    },
    "gpytorch.kernels.spectral_delta_kernel.torch": {
     "line number": [
      73,
      73,
      83,
      85,
      87
     ]
    },
    "range": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_delta_kernel.cumtrapz": {
  "data": {
   "shadows": "scipy.integrate.cumtrapz"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_delta_kernel.fft": {
  "data": {
   "shadows": "scipy.fftpack.fft"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_delta_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_delta_kernel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_delta_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel": {
  "data": {
   "symbols_in_volume": {
    "gpytorch.kernels.spectral_mixture_kernel.logging": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "module"
 },
 "gpytorch.kernels.spectral_mixture_kernel.GaussianMixture": {
  "data": {
   "shadows": "sklearn.mixture.GaussianMixture"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "Positive": {
     "line number": [
      100,
      103,
      106
     ]
    },
    "RuntimeError": {
     "line number": [
      91
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel": {
     "line number": [
      96
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.logger": {
     "line number": [
      93
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.torch": {
     "line number": [
      81,
      81,
      109,
      109,
      111,
      112,
      112,
      113,
      113
     ]
    },
    "int": {
     "line number": [
      79,
      80
     ]
    },
    "super": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel._create_input_grid": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      271,
      271
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.torch": {
     "line number": [
      271,
      271,
      298,
      272,
      272
     ]
    },
    "typing.Tuple": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel._set_mixture_means": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "float": {
     "line number": [
      140
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.torch": {
     "line number": [
      140,
      141,
      142
     ]
    },
    "typing.Union": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel._set_mixture_scales": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "float": {
     "line number": [
      127
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.torch": {
     "line number": [
      127,
      128,
      129
     ]
    },
    "typing.Union": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel._set_mixture_weights": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "float": {
     "line number": [
      153
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.torch": {
     "line number": [
      153,
      154,
      155
     ]
    },
    "typing.Union": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel.forward": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      314
     ]
    },
    "bool": {
     "line number": [
      309,
      309
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.math": {
     "line number": [
      335,
      336
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.torch": {
     "line number": [
      309,
      309,
      310,
      310
     ]
    },
    "list": {
     "line number": [
      349
     ]
    },
    "range": {
     "line number": [
      349
     ]
    },
    "typing.Tuple": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel.initialize_from_data": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      229
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.torch": {
     "line number": [
      218,
      218,
      227,
      228,
      228,
      242,
      242,
      264,
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel.initialize_from_data_empspect": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      174
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.math": {
     "line number": [
      186
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.torch": {
     "line number": [
      158,
      158,
      172,
      173,
      173,
      214,
      215,
      216
     ]
    },
    "numpy.abs": {
     "line number": [
      185
     ]
    },
    "numpy.arange": {
     "line number": [
      188,
      189
     ]
    },
    "numpy.digitize": {
     "line number": [
      200
     ]
    },
    "numpy.histogram": {
     "line number": [
      199
     ]
    },
    "numpy.hstack": {
     "line number": [
      190,
      195
     ]
    },
    "numpy.random.rand": {
     "line number": [
      198
     ]
    },
    "numpy.trapz": {
     "line number": [
      194
     ]
    },
    "numpy.zeros": {
     "line number": [
      195
     ]
    },
    "scipy.fftpack.fft": {
     "line number": [
      185
     ]
    },
    "scipy.integrate.cumtrapz": {
     "line number": [
      195
     ]
    },
    "sklearn.mixture.GaussianMixture": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel.mixture_means": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "float": {
     "line number": [
      137
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.torch": {
     "line number": [
      137
     ]
    },
    "typing.Union": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel.mixture_scales": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "float": {
     "line number": [
      124
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.torch": {
     "line number": [
      124
     ]
    },
    "typing.Union": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.SpectralMixtureKernel.mixture_weights": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "float": {
     "line number": [
      150
     ]
    },
    "gpytorch.kernels.spectral_mixture_kernel.torch": {
     "line number": [
      150
     ]
    },
    "typing.Union": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.kernels.spectral_mixture_kernel.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel.cumtrapz": {
  "data": {
   "shadows": "scipy.integrate.cumtrapz"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel.fft": {
  "data": {
   "shadows": "scipy.fftpack.fft"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "gpytorch.kernels.spectral_mixture_kernel.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpytorch.kernels.spectral_mixture_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "gpytorch.lazy.added_diag_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor.__add__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      30,
      35,
      43
     ]
    },
    "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor": {
     "line number": [
      28
     ]
    },
    "isinstance": {
     "line number": [
      34,
      34,
      36,
      39
     ]
    },
    "len": {
     "line number": [
      29
     ]
    },
    "list": {
     "line number": [
      27
     ]
    },
    "super": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor._init_cache": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "PsdSumLazyTensor": {
     "line number": [
      134
     ]
    },
    "RootLazyTensor": {
     "line number": [
      134
     ]
    },
    "gpytorch.lazy.added_diag_lazy_tensor.torch": {
     "line number": [
      125,
      125,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor._init_cache_for_constant_diag": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "gpytorch.lazy.added_diag_lazy_tensor.torch": {
     "line number": [
      139,
      139
     ]
    },
    "len": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor._init_cache_for_non_constant_diag": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "gpytorch.lazy.added_diag_lazy_tensor.torch": {
     "line number": [
      149,
      149
     ]
    },
    "len": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor._matmul": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "gpytorch.lazy.added_diag_lazy_tensor.torch": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor._preconditioner": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "gpytorch.lazy.added_diag_lazy_tensor.torch": {
     "line number": [
      101,
      101
     ]
    },
    "gpytorch.lazy.added_diag_lazy_tensor.warnings": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor._preconditioner.precondition_closure": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor._svd": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      157
     ]
    },
    "isinstance": {
     "line number": [
      159
     ]
    },
    "super": {
     "line number": [
      163
     ]
    },
    "torch.Tensor": {
     "line number": [
      158
     ]
    },
    "typing.Tuple": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor._symeig": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      165
     ]
    },
    "isinstance": {
     "line number": [
      166
     ]
    },
    "super": {
     "line number": [
      170
     ]
    },
    "torch.Tensor": {
     "line number": [
      165
     ]
    },
    "typing.Optional": {
     "line number": [
      165
     ]
    },
    "typing.Tuple": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor.add_diag": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.AddedDiagLazyTensor.evaluate_kernel": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.added_diag_lazy_tensor.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      19,
      23
     ]
    },
    "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor": {
     "line number": [
      22
     ]
    },
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch": {
     "line number": [
      16,
      18
     ]
    },
    "isinstance": {
     "line number": [
      18,
      22
     ]
    },
    "len": {
     "line number": [
      32
     ]
    },
    "range": {
     "line number": [
      32
     ]
    },
    "super": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._cholesky": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "TriangularLazyTensor": {
     "line number": [
      45
     ]
    },
    "cached": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._cholesky_solve": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "_matmul_broadcast_shape": {
     "line number": [
      49
     ]
    },
    "bool": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._compute_batch_repeat_size": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch": {
     "line number": [
      59
     ]
    },
    "zip": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._expand_batch": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch": {
     "line number": [
      66
     ]
    },
    "len": {
     "line number": [
      66
     ]
    },
    "max": {
     "line number": [
      66
     ]
    },
    "range": {
     "line number": [
      66
     ]
    },
    "tuple": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._get_indices": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "len": {
     "line number": [
      75
     ]
    },
    "zip": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._getitem": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch": {
     "line number": [
      92
     ]
    },
    "isinstance": {
     "line number": [
      92
     ]
    },
    "len": {
     "line number": [
      89
     ]
    },
    "max": {
     "line number": [
      93
     ]
    },
    "range": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._matmul": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "_matmul_broadcast_shape": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._move_repeat_batches_back": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "gpytorch.lazy.batch_repeat_lazy_tensor.itertools": {
     "line number": [
      140
     ]
    },
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch": {
     "line number": [
      132
     ]
    },
    "hasattr": {
     "line number": [
      128
     ]
    },
    "len": {
     "line number": [
      132,
      138,
      140
     ]
    },
    "max": {
     "line number": [
      132
     ]
    },
    "range": {
     "line number": [
      132,
      140
     ]
    },
    "tuple": {
     "line number": [
      132,
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._move_repeat_batches_to_columns": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "gpytorch.lazy.batch_repeat_lazy_tensor.itertools": {
     "line number": [
      162
     ]
    },
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch": {
     "line number": [
      154,
      160
     ]
    },
    "len": {
     "line number": [
      154,
      173,
      174
     ]
    },
    "max": {
     "line number": [
      154
     ]
    },
    "range": {
     "line number": [
      154,
      173,
      174
     ]
    },
    "tuple": {
     "line number": [
      154,
      161
     ]
    },
    "zip": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._permute_batch": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch": {
     "line number": [
      182
     ]
    },
    "tuple": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "_matmul_broadcast_shape": {
     "line number": [
      188,
      192
     ]
    },
    "super": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._root_decomposition": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._root_inv_decomposition": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._size": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch": {
     "line number": [
      210,
      213
     ]
    },
    "zip": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._svd": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      289
     ]
    },
    "torch.Tensor": {
     "line number": [
      290
     ]
    },
    "typing.Tuple": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._symeig": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      297
     ]
    },
    "torch.Tensor": {
     "line number": [
      297
     ]
    },
    "typing.Optional": {
     "line number": [
      297
     ]
    },
    "typing.Tuple": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor._unsqueeze_batch": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch": {
     "line number": [
      223
     ]
    },
    "len": {
     "line number": [
      226,
      226
     ]
    },
    "list": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor.add_jitter": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      236,
      243,
      248
     ]
    },
    "_matmul_broadcast_shape": {
     "line number": [
      255
     ]
    },
    "list": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.BatchRepeatLazyTensor.repeat": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      275
     ]
    },
    "gpytorch.lazy.batch_repeat_lazy_tensor.torch": {
     "line number": [
      283
     ]
    },
    "len": {
     "line number": [
      274,
      280,
      280
     ]
    },
    "range": {
     "line number": [
      280
     ]
    },
    "tuple": {
     "line number": [
      274,
      277,
      280
     ]
    },
    "zip": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "gpytorch.lazy.batch_repeat_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.block_diag_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._add_batch_dim": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "list": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._cholesky": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "TriangularLazyTensor": {
     "line number": [
      45
     ]
    },
    "cached": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._cholesky_solve": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._get_indices": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "gpytorch.lazy.block_diag_lazy_tensor.torch": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._remove_batch_dim": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "list": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._root_decomposition": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._root_inv_decomposition": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._size": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "gpytorch.lazy.block_diag_lazy_tensor.torch": {
     "line number": [
      86
     ]
    },
    "list": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._solve": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "super": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._svd": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      118
     ]
    },
    "torch.Tensor": {
     "line number": [
      119
     ]
    },
    "typing.Tuple": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor._symeig": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      128
     ]
    },
    "torch.Tensor": {
     "line number": [
      128
     ]
    },
    "typing.Optional": {
     "line number": [
      128
     ]
    },
    "typing.Tuple": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor.diag": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor.num_blocks": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "property": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "gpytorch.lazy.block_diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._add_batch_dim": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "list": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._cholesky": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "TriangularLazyTensor": {
     "line number": [
      42
     ]
    },
    "cached": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._cholesky_solve": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._get_indices": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "gpytorch.lazy.block_interleaved_lazy_tensor.torch": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._remove_batch_dim": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "list": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._root_decomposition": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._root_inv_decomposition": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._size": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "gpytorch.lazy.block_interleaved_lazy_tensor.torch": {
     "line number": [
      84
     ]
    },
    "list": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor._solve": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "super": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor.diag": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.BlockInterleavedLazyTensor.num_blocks": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "property": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_interleaved_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.block_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      33
     ]
    },
    "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor": {
     "line number": [
      52
     ]
    },
    "lazify": {
     "line number": [
      52
     ]
    },
    "range": {
     "line number": [
      47,
      48
     ]
    },
    "super": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._add_batch_dim": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      57
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._expand_batch": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "gpytorch.lazy.block_lazy_tensor.torch": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._getitem": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "_is_noop_index": {
     "line number": [
      66,
      66
     ]
    },
    "isinstance": {
     "line number": [
      70,
      70
     ]
    },
    "slice": {
     "line number": [
      70,
      70,
      91,
      92
     ]
    },
    "super": {
     "line number": [
      72,
      82,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._matmul": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._mul_constant": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "ConstantMulLazyTensor": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._permute_batch": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "gpytorch.lazy.block_lazy_tensor.torch": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._remove_batch_dim": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      143
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor._unsqueeze_batch": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "gpytorch.lazy.block_lazy_tensor.torch": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.BlockLazyTensor.zero_mean_mvn_samples": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "gpytorch.lazy.block_lazy_tensor.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.lazy.block_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.cat_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      90
     ]
    },
    "gpytorch.lazy.cat_lazy_tensor.torch": {
     "line number": [
      86,
      87,
      87,
      88,
      89,
      89,
      96
     ]
    },
    "len": {
     "line number": [
      87
     ]
    },
    "super": {
     "line number": [
      80
     ]
    },
    "zip": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._check_args": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      50,
      52,
      54,
      62,
      67
     ]
    },
    "all": {
     "line number": [
      53
     ]
    },
    "isinstance": {
     "line number": [
      53
     ]
    },
    "len": {
     "line number": [
      49,
      51
     ]
    },
    "list": {
     "line number": [
      57,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._expand_batch": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      132
     ]
    },
    "list": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._get_indices": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "_mul_broadcast_shape": {
     "line number": [
      148
     ]
    },
    "gpytorch.lazy.cat_lazy_tensor.torch": {
     "line number": [
      154,
      155,
      166,
      184
     ]
    },
    "len": {
     "line number": [
      166,
      181
     ]
    },
    "list": {
     "line number": [
      166,
      171
     ]
    },
    "zip": {
     "line number": [
      164,
      174,
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._getitem": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "gpytorch.lazy.cat_lazy_tensor.torch": {
     "line number": [
      204,
      207,
      208,
      219
     ]
    },
    "int": {
     "line number": [
      235
     ]
    },
    "isinstance": {
     "line number": [
      190,
      235
     ]
    },
    "len": {
     "line number": [
      219,
      242
     ]
    },
    "list": {
     "line number": [
      219,
      224
     ]
    },
    "slice": {
     "line number": [
      190
     ]
    },
    "zip": {
     "line number": [
      199,
      217,
      227,
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._matmul": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "_matmul_broadcast_shape": {
     "line number": [
      277
     ]
    },
    "gpytorch.lazy.cat_lazy_tensor.torch": {
     "line number": [
      262,
      287
     ]
    },
    "range": {
     "line number": [
      266
     ]
    },
    "slice": {
     "line number": [
      266,
      268
     ]
    },
    "zip": {
     "line number": [
      259,
      267,
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._permute_batch": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._size": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._split_slice": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      107
     ]
    },
    "list": {
     "line number": [
      124
     ]
    },
    "range": {
     "line number": [
      124
     ]
    },
    "slice": {
     "line number": [
      118,
      121,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor._unsqueeze_batch": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.all_to": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      386,
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.device": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "property": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.device_count": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "len": {
     "line number": [
      365
     ]
    },
    "property": {
     "line number": [
      363
     ]
    },
    "set": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.devices": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "property": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.diag": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      325
     ]
    },
    "gpytorch.lazy.cat_lazy_tensor.torch": {
     "line number": [
      332,
      332,
      333,
      333,
      336,
      342,
      342,
      343,
      343,
      346,
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "super": {
     "line number": [
      352
     ]
    },
    "tuple": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor.to": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.cat": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      26
     ]
    },
    "all": {
     "line number": [
      14,
      19,
      23
     ]
    },
    "delazify": {
     "line number": [
      21
     ]
    },
    "gpytorch.lazy.cat_lazy_tensor.CatLazyTensor": {
     "line number": [
      28
     ]
    },
    "gpytorch.lazy.cat_lazy_tensor.torch": {
     "line number": [
      14,
      15,
      21
     ]
    },
    "isinstance": {
     "line number": [
      19
     ]
    },
    "lazify": {
     "line number": [
      17,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.cat_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.chol_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      11
     ]
    },
    "super": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor._chol_diag": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "property": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor._cholesky": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor._solve": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "super": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor.diag": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor.evaluate": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor.inv_matmul": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor.inv_quad": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      73,
      81,
      87,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor.inverse": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "TriangularLazyTensor": {
     "line number": [
      48
     ]
    },
    "cached": {
     "line number": [
      45
     ]
    },
    "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.CholLazyTensor.root_inv_decomposition": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "RootLazyTensor": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.chol_lazy_tensor.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor": {
     "line number": [
      64
     ]
    },
    "gpytorch.lazy.constant_mul_lazy_tensor.torch": {
     "line number": [
      61,
      62
     ]
    },
    "super": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._approx_diag": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._expand_batch": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "len": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._get_indices": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._getitem": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._matmul": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._permute_batch": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "range": {
     "line number": [
      115
     ]
    },
    "tuple": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._size": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._t_matmul": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor.diag": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor.evaluate": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor.expanded_constant": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      141,
      142
     ]
    },
    "property": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor.root_decomposition": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "RootLazyTensor": {
     "line number": [
      163
     ]
    },
    "cached": {
     "line number": [
      159
     ]
    },
    "gpytorch.lazy.constant_mul_lazy_tensor.ConstantMulLazyTensor": {
     "line number": [
      163
     ]
    },
    "gpytorch.lazy.constant_mul_lazy_tensor.torch": {
     "line number": [
      161
     ]
    },
    "str": {
     "line number": [
      160
     ]
    },
    "super": {
     "line number": [
      165
     ]
    },
    "typing.Optional": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.lazy.constant_mul_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.diag_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor.__add__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      231
     ]
    },
    "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor": {
     "line number": [
      228,
      230
     ]
    },
    "isinstance": {
     "line number": [
      228
     ]
    },
    "super": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "TriangularLazyTensor": {
     "line number": [
      223
     ]
    },
    "ValueError": {
     "line number": [
      219
     ]
    },
    "super": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor._diag": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "property": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor._expand_batch": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor._mul_constant": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor._mul_matrix": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      250
     ]
    },
    "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor": {
     "line number": [
      248
     ]
    },
    "isinstance": {
     "line number": [
      248
     ]
    },
    "super": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor._prod_batch": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor._sum_batch": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor.abs": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor.exp": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor.inverse": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor.log": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor.matmul": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor": {
     "line number": [
      285
     ]
    },
    "isinstance": {
     "line number": [
      285
     ]
    },
    "super": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor.sqrt": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.__add__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "AddedDiagLazyTensor": {
     "line number": [
      34
     ]
    },
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor": {
     "line number": [
      30
     ]
    },
    "isinstance": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "super": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._cholesky": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._cholesky_solve": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._expand_batch": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._get_indices": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "gpytorch.lazy.diag_lazy_tensor.torch": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._matmul": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "NonLazyTensor": {
     "line number": [
      60
     ]
    },
    "isinstance": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._mul_constant": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._mul_matrix": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._prod_batch": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._root_decomposition": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._root_inv_decomposition": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._size": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._sum_batch": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._svd": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      186
     ]
    },
    "gpytorch.lazy.diag_lazy_tensor.torch": {
     "line number": [
      189,
      191
     ]
    },
    "torch.Tensor": {
     "line number": [
      187
     ]
    },
    "typing.Tuple": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._symeig": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      194
     ]
    },
    "gpytorch.lazy.diag_lazy_tensor.ConstantDiagLazyTensor": {
     "line number": [
      198
     ]
    },
    "gpytorch.lazy.diag_lazy_tensor.torch": {
     "line number": [
      197
     ]
    },
    "torch.Tensor": {
     "line number": [
      194
     ]
    },
    "typing.Optional": {
     "line number": [
      194
     ]
    },
    "typing.Tuple": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._t_matmul": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.abs": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.add_diag": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "_mul_broadcast_shape": {
     "line number": [
      105
     ]
    },
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.diag": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.evaluate": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      111
     ]
    },
    "gpytorch.lazy.diag_lazy_tensor.torch": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.exp": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.inv_matmul": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "gpytorch.lazy.diag_lazy_tensor.torch": {
     "line number": [
      132,
      137,
      147
     ]
    },
    "len": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.inverse": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.log": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.matmul": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "NonLazyTensor": {
     "line number": [
      163,
      164
     ]
    },
    "TriangularLazyTensor": {
     "line number": [
      167
     ]
    },
    "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor": {
     "line number": [
      160,
      161
     ]
    },
    "isinstance": {
     "line number": [
      160,
      163,
      166
     ]
    },
    "super": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.sqrt": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.sqrt_inv_matmul": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor.zero_mean_mvn_samples": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "gpytorch.lazy.diag_lazy_tensor.torch": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.diag_lazy_tensor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.lazy.diag_lazy_tensor.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.lazy.diag_lazy_tensor.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "gpytorch.lazy.diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.interpolated_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      72,
      73
     ]
    },
    "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor": {
     "line number": [
      79
     ]
    },
    "gpytorch.lazy.interpolated_lazy_tensor.torch": {
     "line number": [
      49,
      49,
      54,
      60,
      60,
      65
     ]
    },
    "lazify": {
     "line number": [
      45
     ]
    },
    "super": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._approx_diag": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "left_interp": {
     "line number": [
      90,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._check_args": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._expand_batch": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._get_indices": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._getitem": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "len": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._matmul": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._mul_constant": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "gpytorch.lazy.interpolated_lazy_tensor.torch": {
     "line number": [
      253,
      256,
      256,
      273,
      273,
      288,
      290
     ]
    },
    "len": {
     "line number": [
      255,
      272
     ]
    },
    "list": {
     "line number": [
      241
     ]
    },
    "tuple": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._size": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "gpytorch.lazy.interpolated_lazy_tensor.torch": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._sparse_left_interp_t": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "gpytorch.lazy.interpolated_lazy_tensor.torch": {
     "line number": [
      314,
      314
     ]
    },
    "hasattr": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._sparse_right_interp_t": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "gpytorch.lazy.interpolated_lazy_tensor.torch": {
     "line number": [
      329,
      329
     ]
    },
    "hasattr": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._sum_batch": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "BlockDiagLazyTensor": {
     "line number": [
      370
     ]
    },
    "_pad_with_singletons": {
     "line number": [
      350,
      354
     ]
    },
    "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor": {
     "line number": [
      373
     ]
    },
    "gpytorch.lazy.interpolated_lazy_tensor.torch": {
     "line number": [
      349,
      349,
      353,
      353
     ]
    },
    "range": {
     "line number": [
      359,
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._t_matmul": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor.diag": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor": {
     "line number": [
      387
     ]
    },
    "isinstance": {
     "line number": [
      378,
      378
     ]
    },
    "left_interp": {
     "line number": [
      379,
      382
     ]
    },
    "super": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor.matmul": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "left_interp": {
     "line number": [
      408
     ]
    },
    "left_t_interp": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.InterpolatedLazyTensor.zero_mean_mvn_samples": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "left_interp": {
     "line number": [
      419
     ]
    },
    "range": {
     "line number": [
      417,
      420
     ]
    },
    "tuple": {
     "line number": [
      417,
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.interpolated_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.keops_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "super": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor._get_indices": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor._getitem": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      54,
      71
     ]
    },
    "RuntimeError": {
     "line number": [
      59,
      76
     ]
    },
    "any": {
     "line number": [
      58,
      75
     ]
    },
    "isinstance": {
     "line number": [
      55,
      57,
      58,
      72,
      74,
      75
     ]
    },
    "len": {
     "line number": [
      63,
      80
     ]
    },
    "slice": {
     "line number": [
      55,
      58,
      72,
      75
     ]
    },
    "tuple": {
     "line number": [
      57,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor._matmul": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "super": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor._size": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "gpytorch.lazy.keops_lazy_tensor.torch": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor.covar_mat": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      25
     ]
    },
    "property": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.KeOpsLazyTensor.diag": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.keops_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor.__add__": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor": {
     "line number": [
      275
     ]
    },
    "isinstance": {
     "line number": [
      273
     ]
    },
    "super": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      50,
      53
     ]
    },
    "RuntimeError": {
     "line number": [
      49,
      57
     ]
    },
    "isinstance": {
     "line number": [
      50,
      53,
      58
     ]
    },
    "len": {
     "line number": [
      48
     ]
    },
    "super": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor._logdet": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "KroneckerProductDiagLazyTensor": {
     "line number": [
      77
     ]
    },
    "KroneckerProductLazyTensor": {
     "line number": [
      89
     ]
    },
    "NotImplementedError": {
     "line number": [
      102
     ]
    },
    "all": {
     "line number": [
      81
     ]
    },
    "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor": {
     "line number": [
      101
     ]
    },
    "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor._symmetrize_kpadlt_constructor": {
     "line number": [
      106
     ]
    },
    "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.torch": {
     "line number": [
      75
     ]
    },
    "isinstance": {
     "line number": [
      76,
      82,
      101
     ]
    },
    "len": {
     "line number": [
      81,
      81
     ]
    },
    "super": {
     "line number": [
      111
     ]
    },
    "zip": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor._preconditioner": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor._root_decomposition": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      202,
      210,
      225
     ]
    },
    "KroneckerProductDiagLazyTensor": {
     "line number": [
      207
     ]
    },
    "KroneckerProductLazyTensor": {
     "line number": [
      219
     ]
    },
    "MatmulLazyTensor": {
     "line number": [
      203,
      220,
      226,
      226
     ]
    },
    "all": {
     "line number": [
      208
     ]
    },
    "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor._constant_kpadlt_constructor": {
     "line number": [
      209
     ]
    },
    "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor._symmetrize_kpadlt_constructor": {
     "line number": [
      224
     ]
    },
    "isinstance": {
     "line number": [
      207,
      208
     ]
    },
    "super": {
     "line number": [
      228
     ]
    },
    "zip": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor._root_inv_decomposition": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      233,
      241,
      256
     ]
    },
    "KroneckerProductDiagLazyTensor": {
     "line number": [
      238
     ]
    },
    "KroneckerProductLazyTensor": {
     "line number": [
      250
     ]
    },
    "MatmulLazyTensor": {
     "line number": [
      234,
      251,
      257,
      257
     ]
    },
    "all": {
     "line number": [
      239
     ]
    },
    "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor._constant_kpadlt_constructor": {
     "line number": [
      240
     ]
    },
    "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor._symmetrize_kpadlt_constructor": {
     "line number": [
      254
     ]
    },
    "isinstance": {
     "line number": [
      238,
      239
     ]
    },
    "super": {
     "line number": [
      259
     ]
    },
    "zip": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor._solve": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      129
     ]
    },
    "KroneckerProductDiagLazyTensor": {
     "line number": [
      142
     ]
    },
    "NotImplementedError": {
     "line number": [
      174
     ]
    },
    "all": {
     "line number": [
      144,
      164
     ]
    },
    "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor": {
     "line number": [
      137,
      172
     ]
    },
    "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor._constant_kpadlt_constructor": {
     "line number": [
      165
     ]
    },
    "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor._symmetrize_kpadlt_constructor": {
     "line number": [
      188
     ]
    },
    "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.torch": {
     "line number": [
      126,
      158,
      159
     ]
    },
    "isinstance": {
     "line number": [
      137,
      142,
      164,
      172
     ]
    },
    "len": {
     "line number": [
      143,
      143
     ]
    },
    "super": {
     "line number": [
      197
     ]
    },
    "zip": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor._symeig": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      261
     ]
    },
    "super": {
     "line number": [
      270
     ]
    },
    "torch.Tensor": {
     "line number": [
      261
     ]
    },
    "typing.Optional": {
     "line number": [
      261
     ]
    },
    "typing.Tuple": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "super": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor._constant_kpadlt_constructor": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      23,
      26
     ]
    },
    "KroneckerProductDiagLazyTensor": {
     "line number": [
      25
     ]
    },
    "KroneckerProductLazyTensor": {
     "line number": [
      27
     ]
    },
    "zip": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor._symmetrize_kpadlt_constructor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      40
     ]
    },
    "KroneckerProductLazyTensor": {
     "line number": [
      36
     ]
    },
    "zip": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductDiagLazyTensor": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      324
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductTriangularLazyTensor": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductDiagLazyTensor.__init__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      326
     ]
    },
    "RuntimeError": {
     "line number": [
      327
     ]
    },
    "all": {
     "line number": [
      326
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductTriangularLazyTensor": {
     "line number": [
      328
     ]
    },
    "isinstance": {
     "line number": [
      326
     ]
    },
    "super": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductDiagLazyTensor._cholesky": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      331
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductDiagLazyTensor": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductDiagLazyTensor._diag": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "gpytorch.lazy.kronecker_product_lazy_tensor._kron_diag": {
     "line number": [
      338
     ]
    },
    "property": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductDiagLazyTensor._expand_batch": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductTriangularLazyTensor": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductDiagLazyTensor._mul_constant": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductDiagLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductTriangularLazyTensor": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductDiagLazyTensor._symeig": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      363
     ]
    },
    "bool": {
     "line number": [
      353,
      353
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductDiagLazyTensor": {
     "line number": [
      363,
      369
     ]
    },
    "torch.Tensor": {
     "line number": [
      354
     ]
    },
    "typing.Optional": {
     "line number": [
      354
     ]
    },
    "typing.Tuple": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductDiagLazyTensor.inverse": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductDiagLazyTensor.sqrt": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor.__add__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "KroneckerProductAddedDiagLazyTensor": {
     "line number": [
      88
     ]
    },
    "SumKroneckerLazyTensor": {
     "line number": [
      92
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor": {
     "line number": [
      89
     ]
    },
    "isinstance": {
     "line number": [
      85,
      89,
      93
     ]
    },
    "super": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      74,
      77
     ]
    },
    "TypeError": {
     "line number": [
      73
     ]
    },
    "lazify": {
     "line number": [
      72
     ]
    },
    "super": {
     "line number": [
      81
     ]
    },
    "tuple": {
     "line number": [
      72
     ]
    },
    "zip": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._cholesky": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      153
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductTriangularLazyTensor": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._expand_batch": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._get_indices": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._inv_matmul": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "_mul_broadcast_shape": {
     "line number": [
      185
     ]
    },
    "len": {
     "line number": [
      186
     ]
    },
    "range": {
     "line number": [
      186
     ]
    },
    "tuple": {
     "line number": [
      186
     ]
    },
    "zip": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._matmul": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "gpytorch.lazy.kronecker_product_lazy_tensor._matmul": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._size": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      232
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor._prod": {
     "line number": [
      234,
      235
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor.torch": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._svd": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      246
     ]
    },
    "cached": {
     "line number": [
      238
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor": {
     "line number": [
      246,
      247,
      248
     ]
    },
    "torch.Tensor": {
     "line number": [
      239
     ]
    },
    "typing.Tuple": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._symeig": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      262
     ]
    },
    "bool": {
     "line number": [
      252,
      252
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductDiagLazyTensor": {
     "line number": [
      262
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor": {
     "line number": [
      268
     ]
    },
    "torch.Tensor": {
     "line number": [
      253
     ]
    },
    "typing.Optional": {
     "line number": [
      253
     ]
    },
    "typing.Tuple": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._t_matmul": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "gpytorch.lazy.kronecker_product_lazy_tensor._t_matmul": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor.add_diag": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "ConstantDiagLazyTensor": {
     "line number": [
      110,
      113
     ]
    },
    "DiagLazyTensor": {
     "line number": [
      123
     ]
    },
    "KroneckerProductAddedDiagLazyTensor": {
     "line number": [
      125
     ]
    },
    "RuntimeError": {
     "line number": [
      105,
      117,
      118
     ]
    },
    "len": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor.diag": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      138
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor._kron_diag": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor.inv_matmul": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "super": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor.inverse": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor.root_decomposition": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      208
     ]
    },
    "gpytorch.lazy.RootLazyTensor": {
     "line number": [
      218
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor": {
     "line number": [
      217
     ]
    },
    "str": {
     "line number": [
      209
     ]
    },
    "super": {
     "line number": [
      214
     ]
    },
    "typing.Optional": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor.root_inv_decomposition": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      220
     ]
    },
    "gpytorch.lazy.RootLazyTensor": {
     "line number": [
      230
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor": {
     "line number": [
      229
     ]
    },
    "super": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductTriangularLazyTensor": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductTriangularLazyTensor.__init__": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      291
     ]
    },
    "all": {
     "line number": [
      290
     ]
    },
    "isinstance": {
     "line number": [
      290
     ]
    },
    "super": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductTriangularLazyTensor._cholesky": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      307
     ]
    },
    "cached": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductTriangularLazyTensor._cholesky_solve": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductTriangularLazyTensor._symeig": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      321
     ]
    },
    "bool": {
     "line number": [
      320
     ]
    },
    "torch.Tensor": {
     "line number": [
      320
     ]
    },
    "typing.Optional": {
     "line number": [
      320
     ]
    },
    "typing.Tuple": {
     "line number": [
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductTriangularLazyTensor.inv_matmul": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductTriangularLazyTensor.inverse": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.RootLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.RootLazyTensor"
  },
  "type": "import"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor._kron_diag": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "len": {
     "line number": [
      22
     ]
    },
    "torch.Tensor": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor._matmul": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "_matmul_broadcast_shape": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor._prod": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "functools.reduce": {
     "line number": [
      30
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor.operator": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor._t_matmul": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "_matmul_broadcast_shape": {
     "line number": [
      49
     ]
    },
    "gpytorch.lazy.kronecker_product_lazy_tensor.torch": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "gpytorch.lazy.kronecker_product_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.__getitem__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      326
     ]
    },
    "isinstance": {
     "line number": [
      324,
      326,
      326
     ]
    },
    "len": {
     "line number": [
      326
     ]
    },
    "slice": {
     "line number": [
      326,
      326,
      328
     ]
    },
    "super": {
     "line number": [
      331
     ]
    },
    "tuple": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor": {
     "line number": [
      23
     ]
    },
    "super": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._check_args": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "gpytorch.lazy.lazy_evaluated_kernel_tensor.torch": {
     "line number": [
      17,
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._expand_batch": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._getitem": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      91,
      105
     ]
    },
    "RuntimeError": {
     "line number": [
      93,
      107
     ]
    },
    "all": {
     "line number": [
      114
     ]
    },
    "any": {
     "line number": [
      92,
      106
     ]
    },
    "isinstance": {
     "line number": [
      54,
      54,
      92,
      106
     ]
    },
    "len": {
     "line number": [
      97,
      111,
      114
     ]
    },
    "slice": {
     "line number": [
      54,
      54,
      74,
      75,
      92,
      106,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._matmul": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      131
     ]
    },
    "gpytorch.lazy.lazy_evaluated_kernel_tensor.torch": {
     "line number": [
      136,
      137,
      145
     ]
    },
    "lazify": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._quad_form_derivative": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      154
     ]
    },
    "gpytorch.lazy.lazy_evaluated_kernel_tensor.torch": {
     "line number": [
      163,
      164,
      168,
      174,
      176
     ]
    },
    "lazify": {
     "line number": [
      169
     ]
    },
    "tuple": {
     "line number": [
      172,
      173
     ]
    },
    "zip": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._size": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      183
     ]
    },
    "cached": {
     "line number": [
      179
     ]
    },
    "gpytorch.lazy.lazy_evaluated_kernel_tensor.torch": {
     "line number": [
      194,
      199,
      200
     ]
    },
    "hasattr": {
     "line number": [
      182
     ]
    },
    "str": {
     "line number": [
      202,
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._transpose_nonbatch": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor._unsqueeze_batch": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.add_jitter": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.device": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "property": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.diag": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      253
     ]
    },
    "cached": {
     "line number": [
      232
     ]
    },
    "isinstance": {
     "line number": [
      258
     ]
    },
    "super": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.dtype": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "property": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.evaluate": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.evaluate_kernel": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      280
     ]
    },
    "cached": {
     "line number": [
      262
     ]
    },
    "lazify": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.repeat": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      292
     ]
    },
    "len": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.representation": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "super": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.LazyEvaluatedKernelTensor.representation_tree": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "super": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_evaluated_kernel_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.lazy_tensor_representation_tree": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.lazy_tensor_representation_tree.LazyTensorRepresentationTree": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "object": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.lazy.lazy_tensor_representation_tree.LazyTensorRepresentationTree.__call__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "subtree": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.lazy_tensor_representation_tree.LazyTensorRepresentationTree.__init__": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "callable": {
     "line number": [
      12
     ]
    },
    "hasattr": {
     "line number": [
      12
     ]
    },
    "len": {
     "line number": [
      13
     ]
    },
    "slice": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor.__add__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "AddedDiagLazyTensor": {
     "line number": [
      86
     ]
    },
    "isinstance": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      17,
      20,
      22
     ]
    },
    "isinstance": {
     "line number": [
      19,
      19,
      21,
      21
     ]
    },
    "len": {
     "line number": [
      16
     ]
    },
    "super": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor._inv_matmul_preconditioner": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor._logdet": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.torch": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor._mul_constant": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "AddedDiagLazyTensor": {
     "line number": [
      47
     ]
    },
    "super": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor._preconditioner": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor._solve": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.torch": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor._sum_batch": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "SumBatchLazyTensor": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor.chol_cap_mat": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "ConstantDiagLazyTensor": {
     "line number": [
      32
     ]
    },
    "cached": {
     "line number": [
      27
     ]
    },
    "delazify": {
     "line number": [
      34
     ]
    },
    "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.torch": {
     "line number": [
      32
     ]
    },
    "property": {
     "line number": [
      26
     ]
    },
    "psd_safe_cholesky": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      90,
      98,
      104,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.low_rank_root_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.low_rank_root_lazy_tensor.LowRankRootLazyTensor": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.lazy.low_rank_root_lazy_tensor.LowRankRootLazyTensor.__add__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      52
     ]
    },
    "LowRankRootAddedDiagLazyTensor": {
     "line number": [
      53
     ]
    },
    "isinstance": {
     "line number": [
      52
     ]
    },
    "super": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.low_rank_root_lazy_tensor.LowRankRootLazyTensor.add_diag": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "ConstantDiagLazyTensor": {
     "line number": [
      31,
      34
     ]
    },
    "DiagLazyTensor": {
     "line number": [
      44
     ]
    },
    "LowRankRootAddedDiagLazyTensor": {
     "line number": [
      46
     ]
    },
    "RuntimeError": {
     "line number": [
      26,
      38,
      39
     ]
    },
    "len": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "_mul_broadcast_shape": {
     "line number": [
      27,
      34
     ]
    },
    "lazify": {
     "line number": [
      23,
      24
     ]
    },
    "super": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._expand_batch": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._get_indices": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "_pad_with_singletons": {
     "line number": [
      54
     ]
    },
    "gpytorch.lazy.matmul_lazy_tensor.torch": {
     "line number": [
      53
     ]
    },
    "len": {
     "line number": [
      57,
      60
     ]
    },
    "tuple": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._getitem": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor": {
     "line number": [
      75
     ]
    },
    "gpytorch.lazy.matmul_lazy_tensor.torch": {
     "line number": [
      67,
      67
     ]
    },
    "lazify": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._matmul": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._permute_batch": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      93,
      94
     ]
    },
    "tuple": {
     "line number": [
      93,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._size": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "_matmul_broadcast_shape": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._t_matmul": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor.diag": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      107,
      107,
      109,
      109
     ]
    },
    "super": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.MatmulLazyTensor.evaluate": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "gpytorch.lazy.matmul_lazy_tensor.torch": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor._inner_repeat": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor._outer_repeat": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "gpytorch.lazy.matmul_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.mul_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor": {
     "line number": [
      29
     ]
    },
    "isinstance": {
     "line number": [
      25,
      27
     ]
    },
    "super": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._check_args": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      13,
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._expand_batch": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._get_indices": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._matmul": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "_matmul_broadcast_shape": {
     "line number": [
      39
     ]
    },
    "isinstance": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._mul_constant": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "super": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "gpytorch.lazy.mul_lazy_tensor.torch": {
     "line number": [
      89,
      104
     ]
    },
    "isinstance": {
     "line number": [
      82,
      97
     ]
    },
    "list": {
     "line number": [
      112,
      112
     ]
    },
    "tuple": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._size": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor.diag": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor.evaluate": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor.representation": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor": {
     "line number": [
      138
     ]
    },
    "super": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor.representation_tree": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "gpytorch.lazy.mul_lazy_tensor.MulLazyTensor": {
     "line number": [
      142
     ]
    },
    "super": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.mul_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.non_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor.__add__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "gpytorch.lazy.non_lazy_tensor.NonLazyTensor": {
     "line number": [
      76,
      77,
      79,
      81
     ]
    },
    "gpytorch.lazy.non_lazy_tensor.torch": {
     "line number": [
      78
     ]
    },
    "isinstance": {
     "line number": [
      76,
      78
     ]
    },
    "super": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "gpytorch.lazy.non_lazy_tensor.NonLazyTensor": {
     "line number": [
      24
     ]
    },
    "super": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._check_args": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "gpytorch.lazy.non_lazy_tensor.torch": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._cholesky_solve": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "gpytorch.lazy.non_lazy_tensor.torch": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._expand_batch": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._get_indices": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._getitem": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._matmul": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "gpytorch.lazy.non_lazy_tensor.torch": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._prod_batch": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._size": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._sum_batch": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._t_matmul": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "gpytorch.lazy.non_lazy_tensor.torch": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "gpytorch.lazy.non_lazy_tensor.NonLazyTensor": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor.diag": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "gpytorch.lazy.non_lazy_tensor.torch": {
     "line number": [
      69,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor.evaluate": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.NonLazyTensor.mul": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "gpytorch.lazy.non_lazy_tensor.NonLazyTensor": {
     "line number": [
      84,
      85,
      87
     ]
    },
    "isinstance": {
     "line number": [
      84
     ]
    },
    "super": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.__all__": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "gpytorch.lazy.non_lazy_tensor.lazify": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      103
     ]
    },
    "gpytorch.lazy.non_lazy_tensor.NonLazyTensor": {
     "line number": [
      99
     ]
    },
    "gpytorch.lazy.non_lazy_tensor.torch": {
     "line number": [
      98
     ]
    },
    "isinstance": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.non_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.psd_sum_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.psd_sum_lazy_tensor.PsdSumLazyTensor": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.lazy.psd_sum_lazy_tensor.PsdSumLazyTensor.zero_mean_mvn_samples": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "lazify": {
     "line number": [
      15
     ]
    },
    "super": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._expand_batch": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "len": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._get_indices": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "_pad_with_singletons": {
     "line number": [
      29
     ]
    },
    "gpytorch.lazy.root_lazy_tensor.torch": {
     "line number": [
      28,
      32
     ]
    },
    "tuple": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._getitem": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "MatmulLazyTensor": {
     "line number": [
      51
     ]
    },
    "_equal_indices": {
     "line number": [
      47
     ]
    },
    "gpytorch.lazy.root_lazy_tensor.torch": {
     "line number": [
      41,
      41
     ]
    },
    "lazify": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._matmul": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._mul_constant": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "super": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._root_decomposition": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._root_decomposition_size": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._size": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "gpytorch.lazy.root_lazy_tensor.torch": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._t_matmul": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor.diag": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      85
     ]
    },
    "super": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor.evaluate": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "gpytorch.lazy.root_lazy_tensor.torch": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.RootLazyTensor.root_decomposition": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "gpytorch.lazy.root_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor._add_batch_dim": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "list": {
     "line number": [
      26,
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor._get_indices": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "_pad_with_singletons": {
     "line number": [
      36
     ]
    },
    "gpytorch.lazy.sum_batch_lazy_tensor.torch": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor._getitem": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor._remove_batch_dim": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor._size": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "gpytorch.lazy.sum_batch_lazy_tensor.torch": {
     "line number": [
      54
     ]
    },
    "list": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor.diag": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.SumBatchLazyTensor.evaluate": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_batch_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.sum_kronecker_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.sum_kronecker_lazy_tensor.SumKroneckerLazyTensor": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.lazy.sum_kronecker_lazy_tensor.SumKroneckerLazyTensor._logdet": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_kronecker_lazy_tensor.SumKroneckerLazyTensor._root_decomposition": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "KroneckerProductLazyTensor": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_kronecker_lazy_tensor.SumKroneckerLazyTensor._root_inv_decomposition": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_kronecker_lazy_tensor.SumKroneckerLazyTensor._solve": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "KroneckerProductLazyTensor": {
     "line number": [
      46
     ]
    },
    "super": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_kronecker_lazy_tensor.SumKroneckerLazyTensor._sum_formulation": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "KroneckerProductLazyTensor": {
     "line number": [
      35
     ]
    },
    "property": {
     "line number": [
      24
     ]
    },
    "zip": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor.__add__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "AddedDiagLazyTensor": {
     "line number": [
      75
     ]
    },
    "AttributeError": {
     "line number": [
      92
     ]
    },
    "_mul_broadcast_shape": {
     "line number": [
      82
     ]
    },
    "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor": {
     "line number": [
      76,
      77,
      79,
      90
     ]
    },
    "isinstance": {
     "line number": [
      72,
      74,
      76,
      78,
      80
     ]
    },
    "lazify": {
     "line number": [
      85
     ]
    },
    "list": {
     "line number": [
      77,
      77,
      79,
      90
     ]
    },
    "torch.Tensor": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      17,
      18
     ]
    },
    "_mul_broadcast_shape": {
     "line number": [
      19
     ]
    },
    "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor": {
     "line number": [
      23
     ]
    },
    "lazify": {
     "line number": [
      16
     ]
    },
    "super": {
     "line number": [
      23
     ]
    },
    "tuple": {
     "line number": [
      16,
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._expand_batch": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._get_indices": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._getitem": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._matmul": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._mul_constant": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._size": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "_mul_broadcast_shape": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._sum_batch": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._t_matmul": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor.diag": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.SumLazyTensor.evaluate": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.sum_lazy_tensor.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor": {
     "line number": [
      19
     ]
    },
    "super": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor._expand_batch": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor._get_indices": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor._matmul": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "sym_toeplitz_matmul": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "sym_toeplitz_derivative_quadratic_form": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor._size": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "gpytorch.lazy.toeplitz_lazy_tensor.torch": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor._t_matmul": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor.add_jitter": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor": {
     "line number": [
      58
     ]
    },
    "gpytorch.lazy.toeplitz_lazy_tensor.torch": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.ToeplitzLazyTensor.diag": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "gpytorch.lazy.toeplitz_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.triangular_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "torch.Tensor": {
     "line number": [
      15
     ]
    },
    "typing.Union": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "module"
 },
 "gpytorch.lazy.triangular_lazy_tensor.Allsor": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "gpytorch.lazy.triangular_lazy_tensor.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "gpytorch.lazy.triangular_lazy_tensor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.lazy.triangular_lazy_tensor.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor.__add__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "AddedDiagLazyTensor": {
     "line number": [
      51
     ]
    },
    "gpytorch.lazy.triangular_lazy_tensor.Allsor": {
     "line number": [
      45
     ]
    },
    "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor": {
     "line number": [
      52
     ]
    },
    "isinstance": {
     "line number": [
      48,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "NonLazyTensor": {
     "line number": [
      40
     ]
    },
    "bool": {
     "line number": [
      19
     ]
    },
    "gpytorch.lazy.triangular_lazy_tensor.Allsor": {
     "line number": [
      19
     ]
    },
    "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor": {
     "line number": [
      30,
      35,
      37
     ]
    },
    "gpytorch.lazy.triangular_lazy_tensor.torch": {
     "line number": [
      39
     ]
    },
    "isinstance": {
     "line number": [
      30,
      33,
      35
     ]
    },
    "super": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor._cholesky": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "NotPSDError": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor._cholesky_solve": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      63
     ]
    },
    "bool": {
     "line number": [
      59
     ]
    },
    "torch.Tensor": {
     "line number": [
      59,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor._expand_batch": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "len": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor._get_indices": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor._matmul": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "torch.Tensor": {
     "line number": [
      77,
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor._mul_constant": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor": {
     "line number": [
      81
     ]
    },
    "torch.Tensor": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor._root_decomposition": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "NotPSDError": {
     "line number": [
      84
     ]
    },
    "gpytorch.lazy.triangular_lazy_tensor.Allsor": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor._root_inv_decomposition": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "NotPSDError": {
     "line number": [
      87
     ]
    },
    "gpytorch.lazy.triangular_lazy_tensor.Allsor": {
     "line number": [
      86
     ]
    },
    "torch.Tensor": {
     "line number": [
      86
     ]
    },
    "typing.Optional": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor._size": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "gpytorch.lazy.triangular_lazy_tensor.torch": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor._solve": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "int": {
     "line number": [
      92
     ]
    },
    "torch.Tensor": {
     "line number": [
      92,
      92,
      92,
      92
     ]
    },
    "typing.Callable": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor._sum_batch": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor": {
     "line number": [
      97
     ]
    },
    "int": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor.abs": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor.add_diag": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "AddedDiagLazyTensor": {
     "line number": [
      109
     ]
    },
    "_mul_broadcast_shape": {
     "line number": [
      108
     ]
    },
    "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor": {
     "line number": [
      110
     ]
    },
    "torch.Tensor": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor.diag": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "torch.Tensor": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor.evaluate": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "torch.Tensor": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor.exp": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor.inv_matmul": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "NonLazyTensor": {
     "line number": [
      123
     ]
    },
    "gpytorch.lazy.triangular_lazy_tensor.torch": {
     "line number": [
      124
     ]
    },
    "isinstance": {
     "line number": [
      123,
      125
     ]
    },
    "torch.Tensor": {
     "line number": [
      122,
      122,
      122
     ]
    },
    "typing.Optional": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      137,
      137
     ]
    },
    "float": {
     "line number": [
      148
     ]
    },
    "gpytorch.lazy.triangular_lazy_tensor.torch": {
     "line number": [
      140,
      147,
      148,
      150
     ]
    },
    "torch.Tensor": {
     "line number": [
      137,
      138,
      138
     ]
    },
    "typing.Optional": {
     "line number": [
      137
     ]
    },
    "typing.Tuple": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor.inverse": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "gpytorch.lazy.triangular_lazy_tensor.TriangularLazyTensor": {
     "line number": [
      159
     ]
    },
    "gpytorch.lazy.triangular_lazy_tensor.torch": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.triangular_lazy_tensor.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "gpytorch.lazy.triangular_lazy_tensor.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "gpytorch.lazy.triangular_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.lazy.zero_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.__add__": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.__div__": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor": {
     "line number": [
      17
     ]
    },
    "gpytorch.lazy.zero_lazy_tensor.torch": {
     "line number": [
      20,
      21
     ]
    },
    "list": {
     "line number": [
      18
     ]
    },
    "super": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.__mul__": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._expand_batch": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._get_indices": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "_compute_getitem_size": {
     "line number": [
      35
     ]
    },
    "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._getitem": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "_compute_getitem_size": {
     "line number": [
      39
     ]
    },
    "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._matmul": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._prod_batch": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "list": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._quad_form_derivative": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._root_decomposition": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._root_decomposition_size": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._root_inv_decomposition": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._size": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "gpytorch.lazy.zero_lazy_tensor.torch": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._sum_batch": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "list": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._t_matmul": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._transpose_nonbatch": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor._unsqueeze_batch": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.add_diag": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      116
     ]
    },
    "RuntimeError": {
     "line number": [
      91,
      101,
      111,
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.device": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "property": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.diag": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      127
     ]
    },
    "gpytorch.lazy.zero_lazy_tensor.torch": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.dtype": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "property": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.evaluate": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "gpytorch.lazy.zero_lazy_tensor.torch": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.inv_matmul": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.inv_quad": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.inv_quad_logdet": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.logdet": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "gpytorch.lazy.zero_lazy_tensor.torch": {
     "line number": [
      144,
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.matmul": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.mul": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "_mul_broadcast_shape": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor.transpose": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "gpytorch.lazy.zero_lazy_tensor.ZeroLazyTensor": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.lazy.zero_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "gpytorch.likelihoods.bernoulli_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.bernoulli_likelihood.BernoulliLikelihood": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "gpytorch.likelihoods.bernoulli_likelihood.BernoulliLikelihood.expected_log_prob": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      46
     ]
    },
    "gpytorch.likelihoods.bernoulli_likelihood.torch": {
     "line number": [
      41
     ]
    },
    "gpytorch.likelihoods.bernoulli_likelihood.warnings": {
     "line number": [
      43
     ]
    },
    "log_normal_cdf": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.bernoulli_likelihood.BernoulliLikelihood.forward": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "gpytorch.likelihoods.bernoulli_likelihood.BernoulliLikelihood.log_marginal": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "gpytorch.likelihoods.bernoulli_likelihood.BernoulliLikelihood.marginal": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "gpytorch.likelihoods.bernoulli_likelihood.torch": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.bernoulli_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.bernoulli_likelihood.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.beta_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.beta_likelihood.BetaLikelihood": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.likelihoods.beta_likelihood.BetaLikelihood.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "Positive": {
     "line number": [
      43
     ]
    },
    "gpytorch.likelihoods.beta_likelihood.torch": {
     "line number": [
      39,
      45,
      45
     ]
    },
    "super": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.beta_likelihood.BetaLikelihood._set_scale": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "gpytorch.likelihoods.beta_likelihood.torch": {
     "line number": [
      60,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.beta_likelihood.BetaLikelihood.forward": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "gpytorch.likelihoods.beta_likelihood.torch": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.beta_likelihood.BetaLikelihood.scale": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "gpytorch.likelihoods.beta_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.gaussian_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.gaussian_likelihood.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.gaussian_likelihood.DirichletClassificationLikelihood": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.likelihoods.gaussian_likelihood.DirichletClassificationLikelihood.__call__": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "super": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.DirichletClassificationLikelihood.__init__": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      286
     ]
    },
    "gpytorch.likelihoods.gaussian_likelihood.torch": {
     "line number": [
      287,
      288,
      287,
      288,
      297
     ]
    },
    "int": {
     "line number": [
      285
     ]
    },
    "super": {
     "line number": [
      294
     ]
    },
    "torch.Tensor": {
     "line number": [
      284
     ]
    },
    "typing.Optional": {
     "line number": [
      286,
      287,
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.DirichletClassificationLikelihood._prepare_targets": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "gpytorch.likelihoods.gaussian_likelihood.torch": {
     "line number": [
      266,
      269,
      272,
      272,
      275
     ]
    },
    "len": {
     "line number": [
      272,
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.DirichletClassificationLikelihood.get_fantasy_likelihood": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "FixedGaussianNoise": {
     "line number": [
      324
     ]
    },
    "RuntimeError": {
     "line number": [
      309
     ]
    },
    "copy.deepcopy": {
     "line number": [
      313
     ]
    },
    "gpytorch.likelihoods.gaussian_likelihood.torch": {
     "line number": [
      319,
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "FixedGaussianNoise": {
     "line number": [
      162
     ]
    },
    "HomoskedasticNoise": {
     "line number": [
      167
     ]
    },
    "bool": {
     "line number": [
      158
     ]
    },
    "gpytorch.likelihoods.gaussian_likelihood.torch": {
     "line number": [
      159,
      159
     ]
    },
    "super": {
     "line number": [
      162
     ]
    },
    "torch.Tensor": {
     "line number": [
      157
     ]
    },
    "typing.Any": {
     "line number": [
      160
     ]
    },
    "typing.Optional": {
     "line number": [
      158,
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood._shaped_noise_covar": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "gpytorch.likelihoods.gaussian_likelihood.torch": {
     "line number": [
      212
     ]
    },
    "gpytorch.likelihoods.gaussian_likelihood.warnings": {
     "line number": [
      225
     ]
    },
    "isinstance": {
     "line number": [
      224
     ]
    },
    "len": {
     "line number": [
      213
     ]
    },
    "typing.Any": {
     "line number": [
      212,
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood.get_fantasy_likelihood": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "FixedGaussianNoise": {
     "line number": [
      209
     ]
    },
    "RuntimeError": {
     "line number": [
      199
     ]
    },
    "copy.deepcopy": {
     "line number": [
      202
     ]
    },
    "gpytorch.likelihoods.gaussian_likelihood.torch": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood.noise": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "torch.Tensor": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.FixedNoiseGaussianLikelihood.second_noise": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      191
     ]
    },
    "torch.Tensor": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "HomoskedasticNoise": {
     "line number": [
      100
     ]
    },
    "gpytorch.likelihoods.gaussian_likelihood.torch": {
     "line number": [
      99
     ]
    },
    "super": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood.noise": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "torch.Tensor": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood.raw_noise": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "torch.Tensor": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.gaussian_likelihood.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      29
     ]
    },
    "gpytorch.likelihoods.gaussian_likelihood.warnings": {
     "line number": [
      26
     ]
    },
    "super": {
     "line number": [
      23
     ]
    },
    "typing.Any": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase._shaped_noise_covar": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "gpytorch.likelihoods.gaussian_likelihood.torch": {
     "line number": [
      34
     ]
    },
    "typing.Any": {
     "line number": [
      34,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase.expected_log_prob": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "gpytorch.likelihoods.gaussian_likelihood.math": {
     "line number": [
      45,
      45
     ]
    },
    "input.event_shape": {
     "line number": [
      39,
      43
     ]
    },
    "input.mean": {
     "line number": [
      38
     ]
    },
    "input.variance": {
     "line number": [
      38
     ]
    },
    "len": {
     "line number": [
      39
     ]
    },
    "list": {
     "line number": [
      48
     ]
    },
    "range": {
     "line number": [
      48
     ]
    },
    "torch.Tensor": {
     "line number": [
      37,
      37
     ]
    },
    "typing.Any": {
     "line number": [
      37,
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase.forward": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "torch.Tensor": {
     "line number": [
      51
     ]
    },
    "typing.Any": {
     "line number": [
      51,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase.log_marginal": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "len": {
     "line number": [
      64
     ]
    },
    "list": {
     "line number": [
      66
     ]
    },
    "range": {
     "line number": [
      66
     ]
    },
    "torch.Tensor": {
     "line number": [
      56,
      57
     ]
    },
    "typing.Any": {
     "line number": [
      56,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood._GaussianLikelihoodBase.marginal": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "typing.Any": {
     "line number": [
      69,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.gaussian_likelihood.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.gaussian_likelihood.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.gaussian_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.gaussian_likelihood.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.laplace_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.laplace_likelihood.LaplaceLikelihood": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.likelihoods.laplace_likelihood.LaplaceLikelihood.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "Positive": {
     "line number": [
      29
     ]
    },
    "gpytorch.likelihoods.laplace_likelihood.torch": {
     "line number": [
      25,
      31,
      31
     ]
    },
    "super": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.laplace_likelihood.LaplaceLikelihood._set_noise": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "gpytorch.likelihoods.laplace_likelihood.torch": {
     "line number": [
      47,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.laplace_likelihood.LaplaceLikelihood.forward": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "gpytorch.likelihoods.laplace_likelihood.LaplaceLikelihood.noise": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "gpytorch.likelihoods.laplace_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "module"
 },
 "gpytorch.likelihoods.likelihood.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood.Likelihood": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "gpytorch.likelihoods.likelihood._Likelihood": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.__call__": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      301
     ]
    },
    "any": {
     "line number": [
      288
     ]
    },
    "gpytorch.likelihoods.likelihood.pyro": {
     "line number": [
      291,
      293,
      294
     ]
    },
    "gpytorch.likelihoods.likelihood.torch": {
     "line number": [
      285
     ]
    },
    "input": {
     "line number": [
      285,
      286,
      290,
      291,
      293,
      298
     ]
    },
    "input.__class__.__name__": {
     "line number": [
      303
     ]
    },
    "input.base_dist": {
     "line number": [
      294
     ]
    },
    "isinstance": {
     "line number": [
      290,
      291,
      293,
      294
     ]
    },
    "self.marginal": {
     "line number": [
      298
     ]
    },
    "super": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood._draw_likelihood_samples": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "function_dist": {
     "line number": [
      157
     ]
    },
    "function_dist.event_shape": {
     "line number": [
      160
     ]
    },
    "gpytorch.likelihoods.likelihood.pyro": {
     "line number": [
      150,
      152
     ]
    },
    "len": {
     "line number": [
      143,
      149,
      154,
      156,
      160
     ]
    },
    "max": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.expected_log_prob": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "function_dist": {
     "line number": [
      179
     ]
    },
    "super": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.forward": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      196
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.get_fantasy_likelihood": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "super": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.log_marginal": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "function_dist": {
     "line number": [
      221
     ]
    },
    "super": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.marginal": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "function_dist": {
     "line number": [
      241
     ]
    },
    "super": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.name_prefix": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      326
     ]
    },
    "gpytorch.likelihoods.likelihood.warnings": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.num_data": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      317
     ]
    },
    "gpytorch.likelihoods.likelihood.warnings": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.pyro_guide": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "function_dist": {
     "line number": [
      257
     ]
    },
    "gpytorch.likelihoods.likelihood.pyro": {
     "line number": [
      256,
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.pyro_model": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "function_dist": {
     "line number": [
      274
     ]
    },
    "gpytorch.likelihoods.likelihood.pyro": {
     "line number": [
      273,
      274
     ]
    },
    "self": {
     "line number": [
      275
     ]
    },
    "self.sample_target": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.Likelihood.sample_target": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "gpytorch.likelihoods.likelihood.pyro": {
     "line number": [
      280,
      281
     ]
    },
    "self.name_prefix": {
     "line number": [
      281
     ]
    },
    "self.num_data": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "abc.ABC": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.likelihoods.likelihood._Likelihood.__call__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      68
     ]
    },
    "gpytorch.likelihoods.likelihood.torch": {
     "line number": [
      61
     ]
    },
    "input": {
     "line number": [
      61,
      62,
      64,
      65
     ]
    },
    "input.__class__.__name__": {
     "line number": [
      70
     ]
    },
    "isinstance": {
     "line number": [
      64
     ]
    },
    "super": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "super": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood._draw_likelihood_samples": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "gpytorch.likelihoods.likelihood.torch": {
     "line number": [
      24
     ]
    },
    "len": {
     "line number": [
      26,
      29,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood.expected_log_prob": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood.forward": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      44
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood.get_fantasy_likelihood": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood.log_marginal": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "gpytorch.likelihoods.likelihood.math": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._Likelihood.marginal": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._OneDimensionalLikelihood": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "abc.ABC": {
     "line number": [
      329
     ]
    },
    "gpytorch.likelihoods.likelihood.Likelihood": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.likelihoods.likelihood._OneDimensionalLikelihood.__init__": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "GaussHermiteQuadrature1D": {
     "line number": [
      340
     ]
    },
    "self.quadrature": {
     "line number": [
      340
     ]
    },
    "super": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._OneDimensionalLikelihood.expected_log_prob": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "function_dist": {
     "line number": [
      344
     ]
    },
    "self.forward": {
     "line number": [
      343
     ]
    },
    "self.quadrature": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood._OneDimensionalLikelihood.log_marginal": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "function_dist": {
     "line number": [
      349
     ]
    },
    "self.forward": {
     "line number": [
      348
     ]
    },
    "self.quadrature": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood.pyro": {
  "data": {
   "shadows": "pyro"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood_list": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.likelihood_list.Likelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.Likelihood"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood_list.LikelihoodList": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "gpytorch.likelihoods.Likelihood": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.likelihoods.likelihood_list.LikelihoodList.__call__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "gpytorch.likelihoods.likelihood_list._get_tuple_args_": {
     "line number": [
      53,
      57
     ]
    },
    "likelihood": {
     "line number": [
      52,
      53,
      57,
      57
     ]
    },
    "zip": {
     "line number": [
      53,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood_list.LikelihoodList.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "super": {
     "line number": [
      18
     ]
    },
    "torch.nn.ModuleList": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood_list.LikelihoodList.expected_log_prob": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.likelihoods.likelihood_list._get_tuple_args_": {
     "line number": [
      24
     ]
    },
    "zip": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood_list.LikelihoodList.forward": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "gpytorch.likelihoods.likelihood_list._get_tuple_args_": {
     "line number": [
      33,
      38
     ]
    },
    "zip": {
     "line number": [
      33,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood_list.LikelihoodList.pyro_sample_output": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "gpytorch.likelihoods.likelihood_list._get_tuple_args_": {
     "line number": [
      44
     ]
    },
    "zip": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.likelihood_list.ModuleList": {
  "data": {
   "shadows": "torch.nn.ModuleList"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.likelihood_list._get_tuple_args_": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      10
     ]
    },
    "tuple": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihood": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "gpytorch.likelihoods.multitask_gaussian_likelihood._MultitaskGaussianLikelihoodBase": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihood.__init__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "GreaterThan": {
     "line number": [
      174
     ]
    },
    "RuntimeError": {
     "line number": [
      190
     ]
    },
    "ValueError": {
     "line number": [
      177
     ]
    },
    "gpytorch.likelihoods.multitask_gaussian_likelihood.torch": {
     "line number": [
      148,
      185,
      185,
      194,
      194,
      202,
      202
     ]
    },
    "super": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihood._eval_covar_matrix": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "gpytorch.likelihoods.multitask_gaussian_likelihood.torch": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihood._set_noise": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihood.noise": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.MultitaskGaussianLikelihood.task_noises": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "property": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood._MultitaskGaussianLikelihoodBase": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood._MultitaskGaussianLikelihoodBase.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      42,
      52
     ]
    },
    "gpytorch.likelihoods.multitask_gaussian_likelihood.torch": {
     "line number": [
      23,
      43,
      43,
      45,
      46
     ]
    },
    "super": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood._MultitaskGaussianLikelihoodBase._eval_corr_matrix": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "gpytorch.likelihoods.multitask_gaussian_likelihood.torch": {
     "line number": [
      58,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood._MultitaskGaussianLikelihoodBase._shaped_noise_covar": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "ConstantDiagLazyTensor": {
     "line number": [
      97,
      111,
      119
     ]
    },
    "DiagLazyTensor": {
     "line number": [
      102
     ]
    },
    "RootLazyTensor": {
     "line number": [
      107
     ]
    },
    "ckl_init": {
     "line number": [
      122
     ]
    },
    "gpytorch.likelihoods.multitask_gaussian_likelihood.torch": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood._MultitaskGaussianLikelihoodBase.forward": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "torch.Tensor": {
     "line number": [
      126
     ]
    },
    "typing.Any": {
     "line number": [
      126,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood._MultitaskGaussianLikelihoodBase.marginal": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "gpytorch.likelihoods.multitask_gaussian_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.noise_models": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.noise_models.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.noise_models.FixedGaussianNoise": {
  "data": {
   "lineno": 132
  },
  "type": "class"
 },
 "gpytorch.likelihoods.noise_models.FixedGaussianNoise.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "super": {
     "line number": [
      134
     ]
    },
    "torch.Tensor": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.FixedGaussianNoise._apply": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "fn": {
     "line number": [
      152,
      153
     ]
    },
    "gpytorch.likelihoods.noise_models.FixedGaussianNoise": {
     "line number": [
      153
     ]
    },
    "super": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.FixedGaussianNoise.forward": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      145,
      147,
      139
     ]
    },
    "ZeroLazyTensor": {
     "line number": [
      149
     ]
    },
    "gpytorch.likelihoods.noise_models.torch": {
     "line number": [
      138,
      141
     ]
    },
    "len": {
     "line number": [
      142
     ]
    },
    "torch.Tensor": {
     "line number": [
      138
     ]
    },
    "typing.Any": {
     "line number": [
      138,
      138
     ]
    },
    "typing.Optional": {
     "line number": [
      138,
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.HeteroskedasticNoise": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "gpytorch.likelihoods.noise_models.Noise": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.likelihoods.noise_models.HeteroskedasticNoise.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "GreaterThan": {
     "line number": [
      101
     ]
    },
    "super": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.HeteroskedasticNoise.forward": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      115,
      129,
      113
     ]
    },
    "NotImplementedError": {
     "line number": [
      125
     ]
    },
    "gpytorch.likelihoods.noise_models.torch": {
     "line number": [
      110,
      111,
      119
     ]
    },
    "isinstance": {
     "line number": [
      124
     ]
    },
    "len": {
     "line number": [
      119
     ]
    },
    "torch.Tensor": {
     "line number": [
      112
     ]
    },
    "typing.Any": {
     "line number": [
      109
     ]
    },
    "typing.Optional": {
     "line number": [
      110,
      111,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.HomoskedasticNoise": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "gpytorch.likelihoods.noise_models._HomoskedasticNoiseBase": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.likelihoods.noise_models.HomoskedasticNoise.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "gpytorch.likelihoods.noise_models.torch": {
     "line number": [
      85
     ]
    },
    "super": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.MultitaskHomoskedasticNoise": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "gpytorch.likelihoods.noise_models._HomoskedasticNoiseBase": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.likelihoods.noise_models.MultitaskHomoskedasticNoise.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "gpytorch.likelihoods.noise_models.torch": {
     "line number": [
      92
     ]
    },
    "super": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.Noise": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "gpytorch.likelihoods.noise_models.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.noise_models.Parameter": {
  "data": {
   "shadows": "torch.nn.Parameter"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.noise_models.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.noise_models._HomoskedasticNoiseBase": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.likelihoods.noise_models.Noise": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.likelihoods.noise_models._HomoskedasticNoiseBase.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "GreaterThan": {
     "line number": [
      25
     ]
    },
    "gpytorch.likelihoods.noise_models.torch": {
     "line number": [
      22,
      27
     ]
    },
    "super": {
     "line number": [
      23
     ]
    },
    "torch.nn.Parameter": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models._HomoskedasticNoiseBase._set_noise": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "gpytorch.likelihoods.noise_models.torch": {
     "line number": [
      42,
      43
     ]
    },
    "torch.Tensor": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models._HomoskedasticNoiseBase.forward": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "ConstantDiagLazyTensor": {
     "line number": [
      81
     ]
    },
    "DiagLazyTensor": {
     "line number": [
      66,
      46
     ]
    },
    "_mul_broadcast_shape": {
     "line number": [
      74
     ]
    },
    "gpytorch.likelihoods.noise_models.torch": {
     "line number": [
      46,
      68,
      72
     ]
    },
    "len": {
     "line number": [
      69
     ]
    },
    "typing.Any": {
     "line number": [
      46,
      46
     ]
    },
    "typing.Optional": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models._HomoskedasticNoiseBase.noise": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "torch.Tensor": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.noise_models.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.softmax_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.softmax_likelihood.SoftmaxLikelihood": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.likelihoods.softmax_likelihood.SoftmaxLikelihood.__call__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      75
     ]
    },
    "gpytorch.likelihoods.softmax_likelihood.warnings": {
     "line number": [
      72
     ]
    },
    "isinstance": {
     "line number": [
      71,
      71
     ]
    },
    "super": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.softmax_likelihood.SoftmaxLikelihood.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      31,
      36
     ]
    },
    "gpytorch.likelihoods.softmax_likelihood.torch": {
     "line number": [
      39,
      39
     ]
    },
    "super": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.softmax_likelihood.SoftmaxLikelihood.forward": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      55
     ]
    },
    "RuntimeError": {
     "line number": [
      61
     ]
    },
    "gpytorch.likelihoods.softmax_likelihood.warnings": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.softmax_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.softmax_likelihood.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.likelihoods.student_t_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.likelihoods.student_t_likelihood.StudentTLikelihood": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.likelihoods.student_t_likelihood.StudentTLikelihood.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "GreaterThan": {
     "line number": [
      42
     ]
    },
    "Positive": {
     "line number": [
      45
     ]
    },
    "gpytorch.likelihoods.student_t_likelihood.torch": {
     "line number": [
      33,
      33,
      47,
      47,
      48,
      48
     ]
    },
    "super": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.student_t_likelihood.StudentTLikelihood._set_deg_free": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "gpytorch.likelihoods.student_t_likelihood.torch": {
     "line number": [
      72,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.student_t_likelihood.StudentTLikelihood._set_noise": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "gpytorch.likelihoods.student_t_likelihood.torch": {
     "line number": [
      85,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.likelihoods.student_t_likelihood.StudentTLikelihood.deg_free": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "gpytorch.likelihoods.student_t_likelihood.StudentTLikelihood.forward": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "gpytorch.likelihoods.student_t_likelihood.StudentTLikelihood.noise": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "gpytorch.likelihoods.student_t_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.means": {
  "data": {},
  "type": "module"
 },
 "gpytorch.means.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "gpytorch.means.constant_mean": {
  "data": {},
  "type": "module"
 },
 "gpytorch.means.constant_mean.ConstantMean": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.means.constant_mean.ConstantMean.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "gpytorch.means.constant_mean.ConstantMean": {
     "line number": [
      11
     ]
    },
    "gpytorch.means.constant_mean.torch": {
     "line number": [
      10,
      13,
      13
     ]
    },
    "super": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.means.constant_mean.ConstantMean.forward": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "_mul_broadcast_shape": {
     "line number": [
      21
     ]
    },
    "input.shape": {
     "line number": [
      18,
      19,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.means.constant_mean.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.means.constant_mean_grad": {
  "data": {},
  "type": "module"
 },
 "gpytorch.means.constant_mean_grad.ConstantMeanGrad": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.means.constant_mean_grad.ConstantMeanGrad.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "gpytorch.means.constant_mean_grad.ConstantMeanGrad": {
     "line number": [
      11
     ]
    },
    "gpytorch.means.constant_mean_grad.torch": {
     "line number": [
      10,
      13,
      13
     ]
    },
    "super": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.means.constant_mean_grad.ConstantMeanGrad.forward": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "_mul_broadcast_shape": {
     "line number": [
      18
     ]
    },
    "input.shape": {
     "line number": [
      18
     ]
    },
    "input.size": {
     "line number": [
      19,
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.means.constant_mean_grad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.means.linear_mean": {
  "data": {},
  "type": "module"
 },
 "gpytorch.means.linear_mean.LinearMean": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.means.linear_mean.LinearMean.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "gpytorch.means.linear_mean.torch": {
     "line number": [
      9,
      11,
      11,
      13,
      13
     ]
    },
    "super": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.means.linear_mean.LinearMean.forward": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "gpytorch.means.linear_mean.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.means.mean": {
  "data": {},
  "type": "module"
 },
 "gpytorch.means.mean.Mean": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.means.mean.Mean.__call__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "gpytorch.means.mean.Mean": {
     "line number": [
      22
     ]
    },
    "super": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.means.mean.Mean.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "super": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.means.mean.Mean.forward": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.means.multitask_mean": {
  "data": {},
  "type": "module"
 },
 "gpytorch.means.multitask_mean.ModuleList": {
  "data": {
   "shadows": "torch.nn.ModuleList"
  },
  "type": "import"
 },
 "gpytorch.means.multitask_mean.MultitaskMean": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.means.multitask_mean.MultitaskMean.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      31
     ]
    },
    "copy.deepcopy": {
     "line number": [
      34
     ]
    },
    "gpytorch.means.multitask_mean.MultitaskMean": {
     "line number": [
      25
     ]
    },
    "isinstance": {
     "line number": [
      27,
      30
     ]
    },
    "len": {
     "line number": [
      30,
      30,
      33
     ]
    },
    "list": {
     "line number": [
      30
     ]
    },
    "range": {
     "line number": [
      34
     ]
    },
    "super": {
     "line number": [
      25
     ]
    },
    "torch.nn.ModuleList": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.means.multitask_mean.MultitaskMean.forward": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "gpytorch.means.multitask_mean.torch": {
     "line number": [
      43
     ]
    },
    "input": {
     "line number": [
      43
     ]
    },
    "sub_mean": {
     "line number": [
      43,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.means.multitask_mean.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "gpytorch.means.multitask_mean.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.means.zero_mean": {
  "data": {},
  "type": "module"
 },
 "gpytorch.means.zero_mean.ZeroMean": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.means.zero_mean.ZeroMean.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "gpytorch.means.zero_mean.ZeroMean": {
     "line number": [
      11
     ]
    },
    "gpytorch.means.zero_mean.torch": {
     "line number": [
      10
     ]
    },
    "super": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.means.zero_mean.ZeroMean.forward": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "_mul_broadcast_shape": {
     "line number": [
      19
     ]
    },
    "gpytorch.means.zero_mean.torch": {
     "line number": [
      15
     ]
    },
    "input.device": {
     "line number": [
      15
     ]
    },
    "input.dtype": {
     "line number": [
      15
     ]
    },
    "input.shape": {
     "line number": [
      16,
      17,
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.means.zero_mean.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.mlls": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.VariationalELBOEmpirical": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "gpytorch.mlls.VariationalELBOEmpirical.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      32
     ]
    },
    "gpytorch.mlls.warnings": {
     "line number": [
      32
     ]
    },
    "super": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.VariationalMarginalLogLikelihood": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "gpytorch.mlls.VariationalMarginalLogLikelihood.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      24
     ]
    },
    "gpytorch.mlls.warnings": {
     "line number": [
      23
     ]
    },
    "super": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "gpytorch.mlls._approximate_mll": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls._approximate_mll.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "gpytorch.mlls._approximate_mll._ApproximateMarginalLogLikelihood": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "abc.ABC": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.mlls._approximate_mll._ApproximateMarginalLogLikelihood.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "super": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls._approximate_mll._ApproximateMarginalLogLikelihood._log_likelihood_term": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      40
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls._approximate_mll._ApproximateMarginalLogLikelihood.forward": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "closure": {
     "line number": [
      70
     ]
    },
    "gpytorch.mlls._approximate_mll.torch": {
     "line number": [
      61,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls._approximate_mll.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.mlls._approximate_mll.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.mlls.added_loss_term": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.added_loss_term.AddedLossTerm": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "object": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.mlls.added_loss_term.AddedLossTerm.loss": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.deep_approximate_mll": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.deep_approximate_mll.DeepApproximateMLL": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "gpytorch.mlls.deep_approximate_mll.DeepApproximateMLL.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      19
     ]
    },
    "super": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.deep_approximate_mll.DeepApproximateMLL._log_likelihood_term": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "gpytorch.mlls.deep_approximate_mll.DeepApproximateMLL.forward": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "gpytorch.mlls.deep_predictive_log_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.deep_predictive_log_likelihood.DeepPredictiveLogLikelihood": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "gpytorch.mlls.deep_predictive_log_likelihood.DeepPredictiveLogLikelihood.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      16,
      22
     ]
    },
    "isinstance": {
     "line number": [
      21
     ]
    },
    "super": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.deep_predictive_log_likelihood.DeepPredictiveLogLikelihood._log_likelihood_term": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "gpytorch.mlls.exact_marginal_log_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      33
     ]
    },
    "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood": {
     "line number": [
      34
     ]
    },
    "isinstance": {
     "line number": [
      32
     ]
    },
    "super": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood._add_other_terms": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "closure": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood.forward": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      58
     ]
    },
    "isinstance": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood.pyro_factor": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "gpytorch.mlls.exact_marginal_log_likelihood.pyro": {
     "line number": [
      73
     ]
    },
    "self": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.exact_marginal_log_likelihood.pyro": {
  "data": {
   "shadows": "pyro"
  },
  "type": "import"
 },
 "gpytorch.mlls.gamma_robust_variational_elbo": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.gamma_robust_variational_elbo.GammaRobustVariationalELBO": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "gpytorch.mlls.gamma_robust_variational_elbo.GammaRobustVariationalELBO.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      68
     ]
    },
    "ValueError": {
     "line number": [
      71
     ]
    },
    "isinstance": {
     "line number": [
      67
     ]
    },
    "super": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.gamma_robust_variational_elbo.GammaRobustVariationalELBO._log_likelihood_term": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "gpytorch.mlls.gamma_robust_variational_elbo.math": {
     "line number": [
      87,
      89,
      90
     ]
    },
    "gpytorch.mlls.gamma_robust_variational_elbo.torch": {
     "line number": [
      87,
      90,
      91
     ]
    },
    "len": {
     "line number": [
      101
     ]
    },
    "list": {
     "line number": [
      103
     ]
    },
    "numpy.log1p": {
     "line number": [
      87
     ]
    },
    "range": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.gamma_robust_variational_elbo.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.mlls.gamma_robust_variational_elbo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpytorch.mlls.gamma_robust_variational_elbo.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.mlls.inducing_point_kernel_added_loss_term": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.inducing_point_kernel_added_loss_term.InducingPointKernelAddedLossTerm": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.mlls.inducing_point_kernel_added_loss_term.InducingPointKernelAddedLossTerm.__init__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "gpytorch.mlls.inducing_point_kernel_added_loss_term.InducingPointKernelAddedLossTerm.loss": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "gpytorch.mlls.leave_one_out_pseudo_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.leave_one_out_pseudo_likelihood.LeaveOneOutPseudoLikelihood": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.mlls.leave_one_out_pseudo_likelihood.LeaveOneOutPseudoLikelihood.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "super": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.leave_one_out_pseudo_likelihood.LeaveOneOutPseudoLikelihood.forward": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "gpytorch.mlls.leave_one_out_pseudo_likelihood.math": {
     "line number": [
      71,
      71
     ]
    },
    "gpytorch.mlls.leave_one_out_pseudo_likelihood.torch": {
     "line number": [
      60
     ]
    },
    "torch.Tensor": {
     "line number": [
      48,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.leave_one_out_pseudo_likelihood.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "gpytorch.mlls.leave_one_out_pseudo_likelihood.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.mlls.leave_one_out_pseudo_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.mlls.marginal_log_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      31
     ]
    },
    "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood": {
     "line number": [
      29
     ]
    },
    "isinstance": {
     "line number": [
      30
     ]
    },
    "super": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood.forward": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.marginal_log_likelihood.MarginalLogLikelihood.pyro_factor": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.noise_model_added_loss_term": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.noise_model_added_loss_term.NoiseModelAddedLossTerm": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.mlls.noise_model_added_loss_term.NoiseModelAddedLossTerm.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "ExactMarginalLogLikelihood": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.noise_model_added_loss_term.NoiseModelAddedLossTerm.loss": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "gpytorch.mlls.predictive_log_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.predictive_log_likelihood.PredictiveLogLikelihood": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.mlls.predictive_log_likelihood.PredictiveLogLikelihood._log_likelihood_term": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "gpytorch.mlls.predictive_log_likelihood.PredictiveLogLikelihood.forward": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "super": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.sum_marginal_log_likelihood": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.sum_marginal_log_likelihood.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "gpytorch.mlls.sum_marginal_log_likelihood.MarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.MarginalLogLikelihood"
  },
  "type": "import"
 },
 "gpytorch.mlls.sum_marginal_log_likelihood.ModuleList": {
  "data": {
   "shadows": "torch.nn.ModuleList"
  },
  "type": "import"
 },
 "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "gpytorch.mlls.MarginalLogLikelihood": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "gpytorch.mlls.ExactMarginalLogLikelihood": {
     "line number": [
      20
     ]
    },
    "mll_cls": {
     "line number": [
      22
     ]
    },
    "super": {
     "line number": [
      21
     ]
    },
    "torch.nn.ModuleList": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.sum_marginal_log_likelihood.SumMarginalLogLikelihood.forward": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "len": {
     "line number": [
      32,
      39
     ]
    },
    "mll": {
     "line number": [
      33,
      33,
      36,
      37
     ]
    },
    "sum": {
     "line number": [
      33,
      35
     ]
    },
    "zip": {
     "line number": [
      33,
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.variational_elbo": {
  "data": {},
  "type": "module"
 },
 "gpytorch.mlls.variational_elbo.VariationalELBO": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.mlls.variational_elbo.VariationalELBO._log_likelihood_term": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "gpytorch.mlls.variational_elbo.VariationalELBO.forward": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "super": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.mlls.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.models": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.AbstractVariationalGP": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "gpytorch.models.AbstractVariationalGP.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      20
     ]
    },
    "gpytorch.models.warnings": {
     "line number": [
      20
     ]
    },
    "super": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.PyroVariationalGP": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "gpytorch.models.PyroVariationalGP.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      28
     ]
    },
    "gpytorch.models.warnings": {
     "line number": [
      28
     ]
    },
    "super": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.VariationalGP": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "gpytorch.models.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "gpytorch.models.approximate_gp": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.approximate_gp.ApproximateGP": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "gpytorch.models.approximate_gp.ApproximateGP.__call__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "gpytorch.models.approximate_gp.ApproximateGP.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "super": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.approximate_gp.ApproximateGP.forward": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.approximate_gp.ApproximateGP.pyro_guide": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "input": {
     "line number": [
      62
     ]
    },
    "super": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.approximate_gp.ApproximateGP.pyro_model": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "input": {
     "line number": [
      76
     ]
    },
    "super": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.deep_gps.AbstractDeepGP": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.models.deep_gps.AbstractDeepGP.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      11
     ]
    },
    "gpytorch.models.deep_gps.warnings": {
     "line number": [
      11
     ]
    },
    "super": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.AbstractDeepGPLayer": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "gpytorch.models.deep_gps.AbstractDeepGPLayer.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      18
     ]
    },
    "gpytorch.models.deep_gps.warnings": {
     "line number": [
      18
     ]
    },
    "super": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "gpytorch.models.deep_gps.deep_gp": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.deep_gps.deep_gp.BlockDiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.BlockDiagLazyTensor"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepGP": {
  "data": {
   "lineno": 112
  },
  "type": "class"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepGP.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "gpytorch.models.deep_gps.deep_gp._DeepGPVariationalStrategy": {
     "line number": [
      121
     ]
    },
    "super": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepGP.forward": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepGPLayer": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepGPLayer.__call__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      88
     ]
    },
    "ValueError": {
     "line number": [
      82
     ]
    },
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      76,
      103
     ]
    },
    "gpytorch.lazy.BlockDiagLazyTensor": {
     "line number": [
      102
     ]
    },
    "gpytorch.models.deep_gps.deep_gp.torch": {
     "line number": [
      77,
      81,
      107
     ]
    },
    "gpytorch.settings.debug.on": {
     "line number": [
      80
     ]
    },
    "gpytorch.settings.num_likelihood_samples.value": {
     "line number": [
      107
     ]
    },
    "isinstance": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepGPLayer.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "gpytorch.models.deep_gps.deep_gp.DeepGPLayer": {
     "line number": [
      67
     ]
    },
    "super": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepGPLayer.forward": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepLikelihood": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "gpytorch.likelihoods.Likelihood": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepLikelihood.__call__": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepLikelihood.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      140
     ]
    },
    "gpytorch.models.deep_gps.deep_gp.warnings": {
     "line number": [
      137
     ]
    },
    "super": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepLikelihood.expected_log_prob": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepLikelihood.forward": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.DeepLikelihood.log_marginal": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.Likelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.Likelihood"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.deep_gp.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.deep_gp._DeepGPVariationalStrategy": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "object": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.models.deep_gps.deep_gp._DeepGPVariationalStrategy.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp._DeepGPVariationalStrategy.kl_divergence": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp._DeepGPVariationalStrategy.sub_variational_strategies": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      20
     ]
    },
    "isinstance": {
     "line number": [
      22
     ]
    },
    "property": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.deep_gp.settings": {
  "data": {
   "shadows": "gpytorch.settings"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.deep_gp.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.deep_gp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.dspp": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.deep_gps.dspp.BlockDiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.BlockDiagLazyTensor"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.dspp.DSPP": {
  "data": {
   "lineno": 95
  },
  "type": "class"
 },
 "gpytorch.models.deep_gps.dspp.DSPP.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "gpytorch.models.deep_gps.dspp.torch": {
     "line number": [
      108,
      108
     ]
    },
    "super": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.dspp.DSPP.quad_weights": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "property": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.dspp.DSPPLayer": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.models.deep_gps.dspp.DSPPLayer.__call__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      72
     ]
    },
    "ValueError": {
     "line number": [
      66
     ]
    },
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      47,
      85,
      88
     ]
    },
    "gpytorch.lazy.BlockDiagLazyTensor": {
     "line number": [
      87
     ]
    },
    "gpytorch.models.deep_gps.dspp.torch": {
     "line number": [
      65
     ]
    },
    "gpytorch.settings.debug.on": {
     "line number": [
      64
     ]
    },
    "isinstance": {
     "line number": [
      47,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.dspp.DSPPLayer.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "gpytorch.models.deep_gps.dspp.torch": {
     "line number": [
      44,
      44
     ]
    },
    "super": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.deep_gps.dspp.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.dspp.settings": {
  "data": {
   "shadows": "gpytorch.settings"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.dspp.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.models.deep_gps.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.models.exact_gp": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.exact_gp.ExactGP": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "gpytorch.models.exact_gp.ExactGP.__call__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      250,
      256,
      266,
      308
     ]
    },
    "_mul_broadcast_shape": {
     "line number": [
      296,
      299
     ]
    },
    "all": {
     "line number": [
      255,
      272
     ]
    },
    "gpytorch.models.exact_gp.ExactGP": {
     "line number": [
      263,
      305
     ]
    },
    "gpytorch.models.exact_gp.torch": {
     "line number": [
      255,
      272,
      302,
      315
     ]
    },
    "gpytorch.models.exact_gp.warnings": {
     "line number": [
      273
     ]
    },
    "input": {
     "line number": [
      255,
      255,
      272,
      272,
      293,
      301,
      302
     ]
    },
    "input.expand": {
     "line number": [
      301
     ]
    },
    "input.shape": {
     "line number": [
      298,
      299,
      301
     ]
    },
    "isinstance": {
     "line number": [
      265,
      307
     ]
    },
    "list": {
     "line number": [
      244
     ]
    },
    "prediction_strategy": {
     "line number": [
      283
     ]
    },
    "super": {
     "line number": [
      257,
      263,
      280,
      305
     ]
    },
    "zip": {
     "line number": [
      255,
      272,
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      59,
      61
     ]
    },
    "all": {
     "line number": [
      58
     ]
    },
    "gpytorch.models.exact_gp.ExactGP": {
     "line number": [
      63
     ]
    },
    "gpytorch.models.exact_gp.torch": {
     "line number": [
      56,
      58
     ]
    },
    "isinstance": {
     "line number": [
      60
     ]
    },
    "super": {
     "line number": [
      63
     ]
    },
    "tuple": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP._apply": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "fn": {
     "line number": [
      84,
      85,
      86
     ]
    },
    "gpytorch.models.exact_gp.ExactGP": {
     "line number": [
      86
     ]
    },
    "super": {
     "line number": [
      86
     ]
    },
    "tuple": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP._clear_cache": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP.get_fantasy_model": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      209
     ]
    },
    "RuntimeError": {
     "line number": [
      158,
      166,
      178
     ]
    },
    "_mul_broadcast_shape": {
     "line number": [
      188
     ]
    },
    "copy.deepcopy": {
     "line number": [
      223
     ]
    },
    "gpytorch.models.exact_gp.ExactGP": {
     "line number": [
      212
     ]
    },
    "gpytorch.models.exact_gp.torch": {
     "line number": [
      202,
      205
     ]
    },
    "input": {
     "line number": [
      203
     ]
    },
    "input.expand": {
     "line number": [
      202
     ]
    },
    "input.shape": {
     "line number": [
      202
     ]
    },
    "isinstance": {
     "line number": [
      168
     ]
    },
    "len": {
     "line number": [
      165,
      175,
      175,
      190,
      190,
      192,
      192
     ]
    },
    "list": {
     "line number": [
      168
     ]
    },
    "super": {
     "line number": [
      212
     ]
    },
    "zip": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP.local_load_samples": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      97
     ]
    },
    "next": {
     "line number": [
      97
     ]
    },
    "super": {
     "line number": [
      100
     ]
    },
    "tuple": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP.set_train_data": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      124,
      134
     ]
    },
    "getattr": {
     "line number": [
      119,
      120,
      129,
      130
     ]
    },
    "gpytorch.models.exact_gp.torch": {
     "line number": [
      113
     ]
    },
    "tuple": {
     "line number": [
      115
     ]
    },
    "zip": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.ExactGP.train_targets": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "object.__setattr__": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_gp.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "gpytorch.models.exact_gp.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.models.exact_gp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.models.exact_prediction_strategies": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "object": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.__deepcopy__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "RootLazyTensor": {
     "line number": [
      54,
      57
     ]
    },
    "add_to_cache": {
     "line number": [
      54,
      57
     ]
    },
    "len": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy._exact_predictive_covar_inv_quad_form_cache": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "gpytorch.models.exact_prediction_strategies.functools": {
     "line number": [
      83,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy._exact_predictive_covar_inv_quad_form_root": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.covar_cache": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      274
     ]
    },
    "delazify": {
     "line number": [
      277
     ]
    },
    "property": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.exact_prediction": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.exact_predictive_covar": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "MatmulLazyTensor": {
     "line number": [
      384,
      395
     ]
    },
    "ZeroLazyTensor": {
     "line number": [
      359
     ]
    },
    "delazify": {
     "line number": [
      370
     ]
    },
    "gpytorch.models.exact_prediction_strategies.torch": {
     "line number": [
      363,
      374,
      378,
      388,
      390
     ]
    },
    "lazify": {
     "line number": [
      377,
      381,
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.exact_predictive_mean": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.get_fantasy_strategy": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "BatchRepeatLazyTensor": {
     "line number": [
      256,
      257
     ]
    },
    "NonLazyTensor": {
     "line number": [
      257
     ]
    },
    "add_to_cache": {
     "line number": [
      269,
      270
     ]
    },
    "delazify": {
     "line number": [
      142,
      221
     ]
    },
    "fant_likelihood": {
     "line number": [
      139,
      265
     ]
    },
    "gpytorch.models.exact_prediction_strategies.string": {
     "line number": [
      168
     ]
    },
    "gpytorch.models.exact_prediction_strategies.torch": {
     "line number": [
      169,
      175,
      184,
      223,
      233,
      237,
      239,
      242,
      245,
      246,
      247,
      253
     ]
    },
    "len": {
     "line number": [
      252
     ]
    },
    "max": {
     "line number": [
      168
     ]
    },
    "psd_safe_cholesky": {
     "line number": [
      174,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.mean_cache": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      281
     ]
    },
    "gpytorch.models.exact_prediction_strategies.functools": {
     "line number": [
      293,
      294
     ]
    },
    "property": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.num_train": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "property": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy.train_shape": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "property": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy.__init__": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "super": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy._exact_predictive_covar_inv_quad_form_cache": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "left_t_interp": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy._exact_predictive_covar_inv_quad_form_root": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "left_interp": {
     "line number": [
      422
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy.covar_cache": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": {
    "InterpolatedLazyTensor": {
     "line number": [
      477,
      484
     ]
    },
    "RootLazyTensor": {
     "line number": [
      509
     ]
    },
    "cached": {
     "line number": [
      456
     ]
    },
    "gpytorch.models.exact_prediction_strategies.torch": {
     "line number": [
      466,
      474,
      494
     ]
    },
    "property": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy.exact_prediction": {
  "data": {
   "lineno": 523
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy.exact_predictive_covar": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "RootLazyTensor": {
     "line number": [
      558,
      561
     ]
    },
    "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy": {
     "line number": [
      543
     ]
    },
    "left_interp": {
     "line number": [
      560
     ]
    },
    "pop_from_cache": {
     "line number": [
      552
     ]
    },
    "super": {
     "line number": [
      543
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy.exact_predictive_mean": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "left_interp": {
     "line number": [
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy.get_fantasy_strategy": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      426
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.InterpolatedPredictionStrategy.mean_cache": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      431
     ]
    },
    "left_t_interp": {
     "line number": [
      446
     ]
    },
    "property": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.RFFPredictionStrategy": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": {
    "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy": {
     "line number": [
      609
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.models.exact_prediction_strategies.RFFPredictionStrategy.__init__": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": {
    "super": {
     "line number": [
      611
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.RFFPredictionStrategy.covar_cache": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      620
     ]
    },
    "gpytorch.models.exact_prediction_strategies.torch": {
     "line number": [
      627,
      632
     ]
    },
    "isinstance": {
     "line number": [
      623
     ]
    },
    "property": {
     "line number": [
      619
     ]
    },
    "psd_safe_cholesky": {
     "line number": [
      635
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.RFFPredictionStrategy.exact_prediction": {
  "data": {
   "lineno": 637
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.RFFPredictionStrategy.exact_predictive_covar": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": {
    "RootLazyTensor": {
     "line number": [
      660
     ]
    },
    "ZeroLazyTensor": {
     "line number": [
      650
     ]
    },
    "gpytorch.models.exact_prediction_strategies.torch": {
     "line number": [
      656
     ]
    },
    "isinstance": {
     "line number": [
      652
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.RFFPredictionStrategy.get_fantasy_strategy": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      617
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.SGPRPredictionStrategy": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": {
    "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy": {
     "line number": [
      664
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.models.exact_prediction_strategies.SGPRPredictionStrategy.covar_cache": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": {
    "AddedDiagLazyTensor": {
     "line number": [
      682
     ]
    },
    "MatmulLazyTensor": {
     "line number": [
      682
     ]
    },
    "cached": {
     "line number": [
      666
     ]
    },
    "gpytorch.models.exact_prediction_strategies.torch": {
     "line number": [
      677,
      679
     ]
    },
    "property": {
     "line number": [
      665
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.SGPRPredictionStrategy.exact_prediction": {
  "data": {
   "lineno": 690
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.SGPRPredictionStrategy.exact_predictive_covar": {
  "data": {
   "lineno": 701
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.SGPRPredictionStrategy.get_fantasy_strategy": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      686
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.SumPredictionStrategy": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": {
    "gpytorch.models.exact_prediction_strategies.DefaultPredictionStrategy": {
     "line number": [
      565
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.models.exact_prediction_strategies.SumPredictionStrategy._exact_predictive_covar_inv_quad_form_cache": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": {
    "gpytorch.models.exact_prediction_strategies.SumPredictionStrategy": {
     "line number": [
      583
     ]
    },
    "isinstance": {
     "line number": [
      582
     ]
    },
    "lazify": {
     "line number": [
      581
     ]
    },
    "super": {
     "line number": [
      583
     ]
    },
    "tuple": {
     "line number": [
      587
     ]
    },
    "zip": {
     "line number": [
      589
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.SumPredictionStrategy._exact_predictive_covar_inv_quad_form_root": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": {
    "gpytorch.models.exact_prediction_strategies.SumPredictionStrategy": {
     "line number": [
      597
     ]
    },
    "isinstance": {
     "line number": [
      596
     ]
    },
    "lazify": {
     "line number": [
      595
     ]
    },
    "sum": {
     "line number": [
      601
     ]
    },
    "super": {
     "line number": [
      597
     ]
    },
    "zip": {
     "line number": [
      603
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.SumPredictionStrategy._sub_strategies": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "gpytorch.models.exact_prediction_strategies.prediction_strategy": {
     "line number": [
      570
     ]
    },
    "property": {
     "line number": [
      566
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "gpytorch.models.exact_prediction_strategies.prediction_strategy": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "cls": {
     "line number": [
      34
     ]
    },
    "isinstance": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.exact_prediction_strategies.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "gpytorch.models.exact_prediction_strategies.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.models.gp": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.gp.GP": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "gpytorch.models.pyro": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "module"
 },
 "gpytorch.models.pyro.PyroGP": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "object": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.models.pyro.PyroGP.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.pyro._PyroMixin": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "object": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.models.pyro._PyroMixin.pyro_factors": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.pyro._PyroMixin.pyro_guide": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.pyro._PyroMixin.pyro_model": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.pyro.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "gpytorch.models.pyro._pyro_mixin": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.pyro._pyro_mixin._PyroMixin": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "object": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.models.pyro._pyro_mixin._PyroMixin.pyro_guide": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "gpytorch.models.pyro._pyro_mixin.pyro": {
     "line number": [
      10,
      13,
      17
     ]
    },
    "input": {
     "line number": [
      16
     ]
    },
    "len": {
     "line number": [
      12,
      18
     ]
    },
    "self": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.pyro._pyro_mixin._PyroMixin.pyro_model": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "closure": {
     "line number": [
      32
     ]
    },
    "gpytorch.models.pyro._pyro_mixin.pyro": {
     "line number": [
      24,
      27,
      33,
      39,
      43
     ]
    },
    "gpytorch.models.pyro._pyro_mixin.torch": {
     "line number": [
      30,
      36
     ]
    },
    "input": {
     "line number": [
      42
     ]
    },
    "len": {
     "line number": [
      26,
      44
     ]
    },
    "self": {
     "line number": [
      42
     ]
    },
    "self.added_loss_terms": {
     "line number": [
      37
     ]
    },
    "self.named_priors": {
     "line number": [
      31
     ]
    },
    "self.variational_strategy.prior_distribution": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.pyro._pyro_mixin.pyro": {
  "data": {
   "shadows": "pyro"
  },
  "type": "import"
 },
 "gpytorch.models.pyro._pyro_mixin.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.models.pyro.pyro_gp": {
  "data": {},
  "type": "module"
 },
 "gpytorch.models.pyro.pyro_gp.PyroGP": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.models.pyro.pyro_gp.PyroGP.__call__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "gpytorch.models.pyro.pyro_gp.PyroGP.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "super": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.pyro.pyro_gp.PyroGP.guide": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "input": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.pyro.pyro_gp.PyroGP.model": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "gpytorch.models.pyro.pyro_gp.pyro": {
     "line number": [
      96
     ]
    },
    "input": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.models.pyro.pyro_gp.pyro": {
  "data": {
   "shadows": "pyro"
  },
  "type": "import"
 },
 "gpytorch.models.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.module": {
  "data": {},
  "type": "module"
 },
 "gpytorch.module.Distribution": {
  "data": {
   "shadows": "torch.distributions.Distribution"
  },
  "type": "import"
 },
 "gpytorch.module.Module": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "torch.nn.Module": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.module.Module.__call__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "gpytorch.module._validate_module_outputs": {
     "line number": [
      30,
      31
     ]
    },
    "isinstance": {
     "line number": [
      29
     ]
    },
    "list": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.__getattr__": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      410,
      413
     ]
    },
    "super": {
     "line number": [
      409,
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      18,
      19,
      20
     ]
    },
    "super": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module._clear_cache": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "gpytorch.module.Module._get_module_and_name": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      46
     ]
    },
    "type": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module._load_from_state_dict": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "super": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module._load_state_hook_ignore_shapes": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "gpytorch.module.itertools": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module._strict": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "gpytorch.module._set_strict": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.added_loss_terms": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "gpytorch.module.Module.constraint_for_parameter_name": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      311
     ]
    },
    "getattr": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.constraints": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "gpytorch.module.Module.forward": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.hyperparameters": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "gpytorch.module.Module.initialize": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      92,
      123
     ]
    },
    "RuntimeError": {
     "line number": [
      98,
      106,
      115
     ]
    },
    "ValueError": {
     "line number": [
      131,
      132
     ]
    },
    "closure": {
     "line number": [
      130
     ]
    },
    "float": {
     "line number": [
      87,
      112
     ]
    },
    "gpytorch.module.torch": {
     "line number": [
      95
     ]
    },
    "hasattr": {
     "line number": [
      91
     ]
    },
    "int": {
     "line number": [
      86
     ]
    },
    "isinstance": {
     "line number": [
      86,
      112
     ]
    },
    "setattr": {
     "line number": [
      94
     ]
    },
    "type": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.load_strict_shapes": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "gpytorch.module.Module.load_strict_shapes.apply_fn": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "gpytorch.module.Module.local_load_samples": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "closure": {
     "line number": [
      374
     ]
    },
    "setting_closure": {
     "line number": [
      374,
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.named_added_loss_terms": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "gpytorch.module._extract_named_added_loss_terms": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.named_constraints": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "gpytorch.module._extract_named_constraints": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.named_hyperparameters": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.named_parameters_and_constraints": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "gpytorch.module.Module.named_priors": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "gpytorch.module._extract_named_priors": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.named_variational_parameters": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.pyro_load_from_samples": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "gpytorch.module._pyro_load_from_samples": {
     "line number": [
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.pyro_sample_from_prior": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "gpytorch.module._pyro_sample_from_prior": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.register_added_loss_term": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "gpytorch.module.Module.register_constraint": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      270
     ]
    },
    "isinstance": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.register_parameter": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      194
     ]
    },
    "super": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.register_prior": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      223
     ]
    },
    "RuntimeError": {
     "line number": [
      234
     ]
    },
    "ValueError": {
     "line number": [
      241,
      252
     ]
    },
    "closure": {
     "line number": [
      263,
      266
     ]
    },
    "gpytorch.module.inspect": {
     "line number": [
      240,
      251,
      251
     ]
    },
    "hasattr": {
     "line number": [
      222
     ]
    },
    "isinstance": {
     "line number": [
      221
     ]
    },
    "len": {
     "line number": [
      240,
      251
     ]
    },
    "str": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.register_prior.closure": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.register_prior.setting_closure": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "gpytorch.module.Module.sample_from_prior": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      348,
      351
     ]
    },
    "setting_closure": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.train": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "super": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.update_added_loss_term": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      398,
      400
     ]
    },
    "isinstance": {
     "line number": [
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.Module.variational_parameters": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "gpytorch.module.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "gpytorch.module._extract_named_added_loss_terms": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      488
     ]
    },
    "set": {
     "line number": [
      487
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module._extract_named_constraints": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      519
     ]
    },
    "set": {
     "line number": [
      518
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module._extract_named_priors": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "closure": {
     "line number": [
      503,
      507,
      510,
      513
     ]
    },
    "hasattr": {
     "line number": [
      502
     ]
    },
    "set": {
     "line number": [
      501
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module._pyro_load_from_samples": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      477
     ]
    },
    "set": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module._pyro_sample_from_prior": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      452
     ]
    },
    "RuntimeError": {
     "line number": [
      453,
      460
     ]
    },
    "closure": {
     "line number": [
      457,
      465
     ]
    },
    "gpytorch.module.pyro": {
     "line number": [
      466
     ]
    },
    "hasattr": {
     "line number": [
      456
     ]
    },
    "set": {
     "line number": [
      455
     ]
    },
    "setting_closure": {
     "line number": [
      457,
      459,
      467
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module._set_strict": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      442
     ]
    },
    "set": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module._validate_module_outputs": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      423,
      433
     ]
    },
    "all": {
     "line number": [
      419
     ]
    },
    "gpytorch.module.torch": {
     "line number": [
      420,
      430
     ]
    },
    "isinstance": {
     "line number": [
      418,
      420,
      420,
      430,
      430
     ]
    },
    "len": {
     "line number": [
      427
     ]
    },
    "torch.distributions.Distribution": {
     "line number": [
      420,
      430
     ]
    },
    "tuple": {
     "line number": [
      418
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.module.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "gpytorch.module.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "gpytorch.module.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "gpytorch.module.pyro": {
  "data": {
   "shadows": "pyro"
  },
  "type": "import"
 },
 "gpytorch.module.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.optim": {
  "data": {},
  "type": "module"
 },
 "gpytorch.optim.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "gpytorch.optim.ngd": {
  "data": {},
  "type": "module"
 },
 "gpytorch.optim.ngd.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "gpytorch.optim.ngd.NGD": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "gpytorch.optim.ngd.torch": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.optim.ngd.NGD.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      26,
      28
     ]
    },
    "float": {
     "line number": [
      26
     ]
    },
    "gpytorch.optim.ngd.torch": {
     "line number": [
      26
     ]
    },
    "int": {
     "line number": [
      26
     ]
    },
    "super": {
     "line number": [
      28
     ]
    },
    "typing.Iterable": {
     "line number": [
      26
     ]
    },
    "typing.Union": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.optim.ngd.NGD.step": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "gpytorch.optim.ngd.torch": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.optim.ngd.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "gpytorch.optim.ngd.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.priors": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "gpytorch.priors.horseshoe_prior": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.horseshoe_prior.HalfCauchy": {
  "data": {
   "shadows": "torch.distributions.HalfCauchy"
  },
  "type": "import"
 },
 "gpytorch.priors.horseshoe_prior.HorseshoePrior": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.priors.prior.Prior": {
     "line number": [
      13
     ]
    },
    "torch.distributions.constraints.positive": {
     "line number": [
      30
     ]
    },
    "torch.distributions.constraints.real": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.priors.horseshoe_prior.HorseshoePrior.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "float": {
     "line number": [
      37
     ]
    },
    "gpytorch.priors.horseshoe_prior.math": {
     "line number": [
      38,
      38
     ]
    },
    "gpytorch.priors.horseshoe_prior.torch": {
     "line number": [
      37
     ]
    },
    "isinstance": {
     "line number": [
      36
     ]
    },
    "numbers.Number": {
     "line number": [
      36
     ]
    },
    "super": {
     "line number": [
      40
     ]
    },
    "torch.nn.Module.__init__": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.horseshoe_prior.HorseshoePrior.expand": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "gpytorch.priors.horseshoe_prior.HorseshoePrior": {
     "line number": [
      59
     ]
    },
    "gpytorch.priors.horseshoe_prior.torch": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.horseshoe_prior.HorseshoePrior.log_prob": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "gpytorch.priors.horseshoe_prior.torch": {
     "line number": [
      48,
      49,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.horseshoe_prior.HorseshoePrior.rsample": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "gpytorch.priors.horseshoe_prior.torch": {
     "line number": [
      52
     ]
    },
    "torch.distributions.HalfCauchy": {
     "line number": [
      53
     ]
    },
    "torch.distributions.Normal": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.horseshoe_prior.Normal": {
  "data": {
   "shadows": "torch.distributions.Normal"
  },
  "type": "import"
 },
 "gpytorch.priors.horseshoe_prior.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "gpytorch.priors.horseshoe_prior.Prior": {
  "data": {
   "shadows": "gpytorch.priors.prior.Prior"
  },
  "type": "import"
 },
 "gpytorch.priors.horseshoe_prior.TModule": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.priors.horseshoe_prior.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "gpytorch.priors.horseshoe_prior.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.priors.horseshoe_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.priors.lkj_prior": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.lkj_prior.LKJCholeskyFactorPrior": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "gpytorch.priors.lkj_prior.LKJPrior": {
     "line number": [
      65
     ]
    },
    "torch.distributions.constraints.lower_cholesky": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.priors.lkj_prior.LKJCholeskyFactorPrior.log_prob": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      86,
      88
     ]
    },
    "any": {
     "line number": [
      85
     ]
    },
    "gpytorch.priors.lkj_prior._is_valid_correlation_matrix_cholesky_factor": {
     "line number": [
      87
     ]
    },
    "gpytorch.priors.lkj_prior.torch": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior.LKJCovariancePrior": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "gpytorch.priors.lkj_prior.LKJPrior": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.priors.lkj_prior.LKJCovariancePrior.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      107,
      109,
      111,
      114
     ]
    },
    "gpytorch.priors.lkj_prior.LKJPrior": {
     "line number": [
      112,
      116
     ]
    },
    "gpytorch.priors.lkj_prior.torch": {
     "line number": [
      110,
      110
     ]
    },
    "int": {
     "line number": [
      108
     ]
    },
    "isinstance": {
     "line number": [
      106,
      108
     ]
    },
    "super": {
     "line number": [
      116
     ]
    },
    "torch.nn.Module.__init__": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior.LKJCovariancePrior.log_prob": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      125
     ]
    },
    "gpytorch.priors.lkj_prior._batch_form_diag": {
     "line number": [
      127
     ]
    },
    "gpytorch.priors.lkj_prior.torch": {
     "line number": [
      123,
      124,
      128,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior.LKJPrior": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "torch.distributions.constraints.positive": {
     "line number": [
      29
     ]
    },
    "torch.distributions.constraints.positive_definite": {
     "line number": [
      31
     ]
    },
    "torch.distributions.constraints.positive_integer": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.priors.lkj_prior.LKJPrior.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      37
     ]
    },
    "float": {
     "line number": [
      39
     ]
    },
    "gpytorch.priors.lkj_prior.LKJPrior": {
     "line number": [
      50
     ]
    },
    "gpytorch.priors.lkj_prior.math": {
     "line number": [
      45
     ]
    },
    "gpytorch.priors.lkj_prior.torch": {
     "line number": [
      39,
      40,
      40,
      42,
      44,
      46,
      46,
      46
     ]
    },
    "int": {
     "line number": [
      36
     ]
    },
    "isinstance": {
     "line number": [
      36,
      38
     ]
    },
    "numbers.Number": {
     "line number": [
      38
     ]
    },
    "super": {
     "line number": [
      50
     ]
    },
    "torch.nn.Module.__init__": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior.LKJPrior.log_prob": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      58,
      60
     ]
    },
    "any": {
     "line number": [
      57
     ]
    },
    "gpytorch.priors.lkj_prior._is_valid_correlation_matrix": {
     "line number": [
      59
     ]
    },
    "psd_safe_cholesky": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "gpytorch.priors.lkj_prior.TModule": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.priors.lkj_prior._batch_form_diag": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "gpytorch.priors.lkj_prior.torch": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior._is_valid_correlation_matrix": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "all": {
     "line number": [
      163
     ]
    },
    "gpytorch.priors.lkj_prior.torch": {
     "line number": [
      160,
      161,
      163,
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior._is_valid_correlation_matrix_cholesky_factor": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "gpytorch.priors.lkj_prior.torch": {
     "line number": [
      184,
      184,
      185
     ]
    },
    "torch.distributions.constraints.lower_cholesky.check": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.lkj_prior.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "gpytorch.priors.lkj_prior.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.priors.lkj_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.priors.prior": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.prior.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "gpytorch.priors.prior.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.priors.prior.Prior": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "abc.ABC": {
     "line number": [
      10
     ]
    },
    "torch.nn.Module": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.priors.prior.Prior.log_prob": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "gpytorch.priors.prior.Prior": {
     "line number": [
      27
     ]
    },
    "super": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.prior.Prior.transform": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "gpytorch.priors.smoothed_box_prior": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.smoothed_box_prior.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "torch.distributions.constraints.positive": {
     "line number": [
      30
     ]
    },
    "torch.distributions.constraints.real": {
     "line number": [
      30,
      30,
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior._M": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "gpytorch.priors.smoothed_box_prior.math": {
     "line number": [
      65,
      65
     ]
    },
    "gpytorch.priors.smoothed_box_prior.torch": {
     "line number": [
      65
     ]
    },
    "property": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "NormalPrior": {
     "line number": [
      51
     ]
    },
    "ValueError": {
     "line number": [
      40
     ]
    },
    "float": {
     "line number": [
      36
     ]
    },
    "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior": {
     "line number": [
      45
     ]
    },
    "gpytorch.priors.smoothed_box_prior.torch": {
     "line number": [
      36,
      39,
      51
     ]
    },
    "isinstance": {
     "line number": [
      36
     ]
    },
    "numbers.Number": {
     "line number": [
      36
     ]
    },
    "super": {
     "line number": [
      45
     ]
    },
    "torch.distributions.constraints.less_than": {
     "line number": [
      39
     ]
    },
    "torch.distributions.utils.broadcast_all": {
     "line number": [
      38
     ]
    },
    "torch.nn.Module.__init__": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior._c": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "property": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior._log_prob": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior._r": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "property": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior.log_prob": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "gpytorch.priors.smoothed_box_prior.TModule": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.priors.smoothed_box_prior.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "gpytorch.priors.smoothed_box_prior.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "gpytorch.priors.smoothed_box_prior.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.priors.smoothed_box_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.priors.torch_priors": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.torch_priors.Gamma": {
  "data": {
   "shadows": "torch.distributions.Gamma"
  },
  "type": "import"
 },
 "gpytorch.priors.torch_priors.GammaPrior": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "torch.distributions.Gamma": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.priors.torch_priors.GammaPrior.__call__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "super": {
     "line number": [
      82
     ]
    },
    "torch.distributions.Gamma": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.GammaPrior.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "_bufferize_attributes": {
     "line number": [
      74
     ]
    },
    "torch.distributions.Gamma.__init__": {
     "line number": [
      73
     ]
    },
    "torch.nn.Module.__init__": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.GammaPrior.expand": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "gpytorch.priors.torch_priors.GammaPrior": {
     "line number": [
      79
     ]
    },
    "gpytorch.priors.torch_priors.torch": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.LogNormal": {
  "data": {
   "shadows": "torch.distributions.LogNormal"
  },
  "type": "import"
 },
 "gpytorch.priors.torch_priors.LogNormalPrior": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "torch.distributions.LogNormal": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.priors.torch_priors.LogNormalPrior.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "torch.distributions.LogNormal.__init__": {
     "line number": [
      40
     ]
    },
    "torch.nn.Module.__init__": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.LogNormalPrior.expand": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "gpytorch.priors.torch_priors.LogNormalPrior": {
     "line number": [
      45
     ]
    },
    "gpytorch.priors.torch_priors.torch": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.MVN_LAZY_PROPERTIES": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "gpytorch.priors.torch_priors.MultivariateNormal": {
  "data": {
   "shadows": "torch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "gpytorch.priors.torch_priors.MultivariateNormalPrior": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "torch.distributions.MultivariateNormal": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.priors.torch_priors.MultivariateNormalPrior.__init__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "_bufferize_attributes": {
     "line number": [
      105
     ]
    },
    "torch.distributions.MultivariateNormal.__init__": {
     "line number": [
      97
     ]
    },
    "torch.nn.Module.__init__": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.MultivariateNormalPrior.cpu": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "_del_attributes": {
     "line number": [
      117
     ]
    },
    "gpytorch.priors.torch_priors.MVN_LAZY_PROPERTIES": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.MultivariateNormalPrior.cuda": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "_del_attributes": {
     "line number": [
      111
     ]
    },
    "gpytorch.priors.torch_priors.MVN_LAZY_PROPERTIES": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.MultivariateNormalPrior.expand": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "gpytorch.priors.torch_priors.MultivariateNormalPrior": {
     "line number": [
      126
     ]
    },
    "gpytorch.priors.torch_priors.torch": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.Normal": {
  "data": {
   "shadows": "torch.distributions.Normal"
  },
  "type": "import"
 },
 "gpytorch.priors.torch_priors.NormalPrior": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "torch.distributions.Normal": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.priors.torch_priors.NormalPrior.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "_bufferize_attributes": {
     "line number": [
      25
     ]
    },
    "torch.distributions.Normal.__init__": {
     "line number": [
      24
     ]
    },
    "torch.nn.Module.__init__": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.NormalPrior.expand": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "gpytorch.priors.torch_priors.NormalPrior": {
     "line number": [
      30
     ]
    },
    "gpytorch.priors.torch_priors.torch": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.TModule": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.priors.torch_priors.Uniform": {
  "data": {
   "shadows": "torch.distributions.Uniform"
  },
  "type": "import"
 },
 "gpytorch.priors.torch_priors.UniformPrior": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "torch.distributions.Uniform": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.priors.torch_priors.UniformPrior.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "torch.distributions.Uniform.__init__": {
     "line number": [
      55
     ]
    },
    "torch.nn.Module.__init__": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.UniformPrior.expand": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "gpytorch.priors.torch_priors.UniformPrior": {
     "line number": [
      60
     ]
    },
    "gpytorch.priors.torch_priors.torch": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.torch_priors.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.priors.utils": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.utils._bufferize_attributes": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "delattr": {
     "line number": [
      7
     ]
    },
    "getattr": {
     "line number": [
      5
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.utils._del_attributes": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      15
     ]
    },
    "delattr": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.wishart_prior": {
  "data": {},
  "type": "module"
 },
 "gpytorch.priors.wishart_prior.InverseWishartPrior": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "torch.distributions.constraints.positive": {
     "line number": [
      76
     ]
    },
    "torch.distributions.constraints.positive_definite": {
     "line number": [
      76,
      77
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.priors.wishart_prior.InverseWishartPrior.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      83,
      88
     ]
    },
    "float": {
     "line number": [
      86
     ]
    },
    "gpytorch.priors.wishart_prior.InverseWishartPrior": {
     "line number": [
      100
     ]
    },
    "gpytorch.priors.wishart_prior.math": {
     "line number": [
      95
     ]
    },
    "gpytorch.priors.wishart_prior.torch": {
     "line number": [
      86,
      87,
      89,
      89,
      91,
      94,
      95
     ]
    },
    "isinstance": {
     "line number": [
      85
     ]
    },
    "numbers.Number": {
     "line number": [
      85
     ]
    },
    "super": {
     "line number": [
      100
     ]
    },
    "torch.nn.Module.__init__": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.wishart_prior.InverseWishartPrior.log_prob": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "gpytorch.priors.wishart_prior.torch": {
     "line number": [
      108,
      109,
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.wishart_prior.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "gpytorch.priors.wishart_prior.TModule": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.priors.wishart_prior.WishartPrior": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "torch.distributions.constraints.positive": {
     "line number": [
      24
     ]
    },
    "torch.distributions.constraints.positive_definite": {
     "line number": [
      24,
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.priors.wishart_prior.WishartPrior.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      31,
      34,
      38
     ]
    },
    "float": {
     "line number": [
      36
     ]
    },
    "gpytorch.priors.wishart_prior.WishartPrior": {
     "line number": [
      50
     ]
    },
    "gpytorch.priors.wishart_prior.math": {
     "line number": [
      44
     ]
    },
    "gpytorch.priors.wishart_prior.torch": {
     "line number": [
      36,
      37,
      39,
      39,
      41,
      43,
      44,
      45
     ]
    },
    "isinstance": {
     "line number": [
      35
     ]
    },
    "numbers.Number": {
     "line number": [
      35
     ]
    },
    "super": {
     "line number": [
      50
     ]
    },
    "torch.nn.Module.__init__": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.wishart_prior.WishartPrior.log_prob": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "gpytorch.priors.wishart_prior.torch": {
     "line number": [
      59,
      60,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.priors.wishart_prior.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "gpytorch.priors.wishart_prior.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.priors.wishart_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.settings": {
  "data": {},
  "type": "module"
 },
 "gpytorch.settings._dtype_value_context": {
  "data": {
   "lineno": 70
  },
  "type": "class"
 },
 "gpytorch.settings._dtype_value_context.__enter__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "gpytorch.settings._dtype_value_context.__exit__": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "gpytorch.settings._dtype_value_context.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "float": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings._dtype_value_context._set_value": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings._dtype_value_context.value": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      86
     ]
    },
    "classmethod": {
     "line number": [
      75
     ]
    },
    "gpytorch.settings.torch": {
     "line number": [
      77,
      79,
      81,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings._fast_covar_root_decomposition": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings._fast_log_prob": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings._fast_solves": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings._feature_flag": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.settings._feature_flag.__enter__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "gpytorch.settings._feature_flag.__exit__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "gpytorch.settings._feature_flag.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "gpytorch.settings._feature_flag._set_state": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings._feature_flag.is_default": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings._feature_flag.off": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings._feature_flag.on": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings._use_eval_tolerance": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      471
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings._value_context": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "gpytorch.settings._value_context.__enter__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "gpytorch.settings._value_context.__exit__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "gpytorch.settings._value_context.__init__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "gpytorch.settings._value_context._set_value": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings._value_context.value": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings.cg_tolerance": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      433
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.cholesky_jitter": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "gpytorch.settings._dtype_value_context": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.cholesky_jitter.value": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      427
     ]
    },
    "classmethod": {
     "line number": [
      421
     ]
    },
    "gpytorch.settings.warnings": {
     "line number": [
      425
     ]
    },
    "super": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings.ciq_samples": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      443
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.debug": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.detach_test_caches": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.deterministic_probes": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.deterministic_probes._set_state": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      214
     ]
    },
    "super": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings.eval_cg_tolerance": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      461
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.fast_computations": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "gpytorch.settings._fast_covar_root_decomposition": {
     "line number": [
      347
     ]
    },
    "gpytorch.settings._fast_log_prob": {
     "line number": [
      348
     ]
    },
    "gpytorch.settings._fast_solves": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.fast_computations.__enter__": {
  "data": {
   "lineno": 356
  },
  "type": "function"
 },
 "gpytorch.settings.fast_computations.__exit__": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "gpytorch.settings.fast_computations.__init__": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "gpytorch.settings._fast_covar_root_decomposition": {
     "line number": [
      352
     ]
    },
    "gpytorch.settings._fast_log_prob": {
     "line number": [
      353
     ]
    },
    "gpytorch.settings._fast_solves": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings.fast_pred_samples": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.fast_pred_var": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.fast_pred_var.__enter__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "super": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings.fast_pred_var.__exit__": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "super": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings.fast_pred_var.__init__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "super": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings.fast_pred_var._set_num_probe_vectors": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings.fast_pred_var.num_probe_vectors": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.settings.lazily_evaluate_kernels": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      368
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "gpytorch.settings.max_cg_iterations": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.max_cholesky_size": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      475
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.max_eager_kernel_size": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.max_lanczos_quadrature_iterations": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      507
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.max_preconditioner_size": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      497
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.max_root_decomposition_size": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      485
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.memory_efficient": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      516
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.min_preconditioning_size": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      526
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.min_variance": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "gpytorch.settings._dtype_value_context": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.minres_tolerance": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      537
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.num_contour_quadrature": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      547
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.num_gauss_hermite_locs": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      566
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.num_likelihood_samples": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      556
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.num_trace_samples": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      576
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.preconditioner_tolerance": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      451
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.prior_mode": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      587
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.skip_logdet_forward": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      596
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.skip_posterior_variances": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.terminate_cg_by_size": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      622
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.settings.trace_mode": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      630
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.tridiagonal_jitter": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": {
    "gpytorch.settings._value_context": {
     "line number": [
      646
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.use_toeplitz": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      657
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.verbose_linalg": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": {
    "gpytorch.settings._feature_flag": {
     "line number": [
      667
     ]
    },
    "gpytorch.settings.logging": {
     "line number": [
      675,
      676,
      679,
      680,
      681
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.settings.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.test": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.base_kernel_test_case": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.create_data_double_batch": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.torch": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.create_data_no_batch": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.torch": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.create_data_single_batch": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.torch": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.create_kernel_ard": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.create_kernel_no_ard": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      14
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_active_dims_list": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      31
     ]
    },
    "kernel_basic": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_active_dims_range": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      39,
      41
     ]
    },
    "kernel_basic": {
     "line number": [
      42,
      43
     ]
    },
    "list": {
     "line number": [
      38
     ]
    },
    "range": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_kernel_getitem_double_batch": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.torch": {
     "line number": [
      155
     ]
    },
    "kernel": {
     "line number": [
      155,
      158,
      160
     ]
    },
    "new_kernel": {
     "line number": [
      160,
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_kernel_getitem_single_batch": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.torch": {
     "line number": [
      144
     ]
    },
    "kernel": {
     "line number": [
      144,
      147,
      149
     ]
    },
    "new_kernel": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_kernel_pickle_unpickle": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.pickle": {
     "line number": [
      167,
      167
     ]
    },
    "gpytorch.test.base_kernel_test_case.torch": {
     "line number": [
      166
     ]
    },
    "kernel": {
     "line number": [
      166,
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_no_batch_kernel_double_batch_x_ard": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      103
     ]
    },
    "gpytorch.test.base_kernel_test_case.torch": {
     "line number": [
      102,
      114,
      116
     ]
    },
    "kernel": {
     "line number": [
      102,
      107,
      113,
      121
     ]
    },
    "range": {
     "line number": [
      110,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_no_batch_kernel_double_batch_x_no_ard": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.torch": {
     "line number": [
      80,
      89,
      91
     ]
    },
    "kernel": {
     "line number": [
      80,
      82,
      88,
      96
     ]
    },
    "range": {
     "line number": [
      85,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_no_batch_kernel_single_batch_x_no_ard": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.torch": {
     "line number": [
      54
     ]
    },
    "kernel": {
     "line number": [
      48,
      50,
      52,
      53,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_single_batch_kernel_single_batch_x_no_ard": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.torch": {
     "line number": [
      64,
      70
     ]
    },
    "kernel": {
     "line number": [
      64,
      66,
      68,
      69,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_smoke_double_batch_kernel_double_batch_x_ard": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      135
     ]
    },
    "gpytorch.test.base_kernel_test_case.torch": {
     "line number": [
      134
     ]
    },
    "kernel": {
     "line number": [
      134,
      139,
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.BaseKernelTestCase.test_smoke_double_batch_kernel_double_batch_x_no_ard": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.torch": {
     "line number": [
      126
     ]
    },
    "kernel": {
     "line number": [
      126,
      128,
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_kernel_test_case.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.test.base_kernel_test_case.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "gpytorch.test.base_kernel_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.base_likelihood_test_case": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase._create_conditional_input": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.torch": {
     "line number": [
      20,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase._create_marginal_input": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      26
     ]
    },
    "gpytorch.test.base_likelihood_test_case.torch": {
     "line number": [
      23,
      24,
      25,
      25,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase._create_targets": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.torch": {
     "line number": [
      28,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase._test_conditional": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "input": {
     "line number": [
      34,
      35
     ]
    },
    "input.shape": {
     "line number": [
      38
     ]
    },
    "isinstance": {
     "line number": [
      37
     ]
    },
    "len": {
     "line number": [
      33
     ]
    },
    "likelihood": {
     "line number": [
      35
     ]
    },
    "torch.distributions.Distribution": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase._test_log_marginal": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "gpytorch.likelihoods.Likelihood.log_marginal": {
     "line number": [
      51
     ]
    },
    "gpytorch.test.base_likelihood_test_case.gpytorch": {
     "line number": [
      45,
      50
     ]
    },
    "gpytorch.test.base_likelihood_test_case.torch": {
     "line number": [
      48,
      49
     ]
    },
    "input": {
     "line number": [
      43,
      46,
      51
     ]
    },
    "len": {
     "line number": [
      42
     ]
    },
    "likelihood": {
     "line number": [
      41,
      51
     ]
    },
    "likelihood.log_marginal": {
     "line number": [
      46
     ]
    },
    "likelihood.max_plate_nesting": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase._test_log_prob": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "gpytorch.likelihoods.Likelihood.expected_log_prob": {
     "line number": [
      65
     ]
    },
    "gpytorch.test.base_likelihood_test_case.gpytorch": {
     "line number": [
      59,
      64
     ]
    },
    "gpytorch.test.base_likelihood_test_case.torch": {
     "line number": [
      62,
      63
     ]
    },
    "input": {
     "line number": [
      57,
      60,
      65
     ]
    },
    "len": {
     "line number": [
      56
     ]
    },
    "likelihood": {
     "line number": [
      55,
      65
     ]
    },
    "likelihood.expected_log_prob": {
     "line number": [
      60
     ]
    },
    "likelihood.max_plate_nesting": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase._test_marginal": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "gpytorch.likelihoods.Likelihood.marginal": {
     "line number": [
      79
     ]
    },
    "gpytorch.test.base_likelihood_test_case.gpytorch": {
     "line number": [
      78
     ]
    },
    "input": {
     "line number": [
      71,
      72,
      79
     ]
    },
    "input.sample": {
     "line number": [
      75,
      75
     ]
    },
    "isinstance": {
     "line number": [
      74
     ]
    },
    "len": {
     "line number": [
      70,
      75
     ]
    },
    "likelihood": {
     "line number": [
      69,
      72,
      79
     ]
    },
    "likelihood.max_plate_nesting": {
     "line number": [
      70
     ]
    },
    "torch.distributions.Distribution": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase.create_likelihood": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      18
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase.test_batch": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.torch": {
     "line number": [
      94,
      95,
      96,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase.test_multi_batch": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.torch": {
     "line number": [
      100,
      101,
      102,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase.test_nonbatch": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.torch": {
     "line number": [
      88,
      89,
      90,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_likelihood_test_case.Distribution": {
  "data": {
   "shadows": "torch.distributions.Distribution"
  },
  "type": "import"
 },
 "gpytorch.test.base_likelihood_test_case.Likelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.Likelihood"
  },
  "type": "import"
 },
 "gpytorch.test.base_likelihood_test_case.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "gpytorch.test.base_likelihood_test_case.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.test.base_likelihood_test_case.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "gpytorch.test.base_likelihood_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.base_mean_test_case": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.base_mean_test_case.BaseMeanTestCase": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.test.base_mean_test_case.BaseMeanTestCase.create_mean": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      15
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_mean_test_case.BaseMeanTestCase.test_forward_mat": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "gpytorch.test.base_mean_test_case.torch": {
     "line number": [
      26,
      29,
      31
     ]
    },
    "mean": {
     "line number": [
      27,
      29,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_mean_test_case.BaseMeanTestCase.test_forward_mat_batch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "gpytorch.test.base_mean_test_case.torch": {
     "line number": [
      34,
      37,
      39
     ]
    },
    "mean": {
     "line number": [
      35,
      37,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_mean_test_case.BaseMeanTestCase.test_forward_mat_multi_batch": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "gpytorch.test.base_mean_test_case.torch": {
     "line number": [
      42,
      44
     ]
    },
    "mean": {
     "line number": [
      43,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_mean_test_case.BaseMeanTestCase.test_forward_vec": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "gpytorch.test.base_mean_test_case.torch": {
     "line number": [
      18,
      21,
      23
     ]
    },
    "mean": {
     "line number": [
      21,
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_mean_test_case.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.test.base_mean_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.base_test_case": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.base_test_case.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "gpytorch.test.base_test_case.BaseTestCase": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "abc.ABC": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.test.base_test_case.BaseTestCase.assertAllClose": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      34,
      36,
      46
     ]
    },
    "ValueError": {
     "line number": [
      27
     ]
    },
    "gpytorch.test.base_test_case.torch": {
     "line number": [
      29,
      33,
      35,
      38,
      38,
      39,
      42,
      42,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_test_case.BaseTestCase.assertEqual": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      56,
      58,
      62,
      64
     ]
    },
    "gpytorch.test.base_test_case.torch": {
     "line number": [
      52,
      52,
      53,
      57,
      57
     ]
    },
    "type": {
     "line number": [
      58,
      58,
      61,
      61,
      62,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_test_case.BaseTestCase.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.os": {
     "line number": [
      14,
      14
     ]
    },
    "gpytorch.test.base_test_case.random": {
     "line number": [
      19
     ]
    },
    "gpytorch.test.base_test_case.torch": {
     "line number": [
      15,
      16,
      17,
      18
     ]
    },
    "hasattr": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_test_case.BaseTestCase.tearDown": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.torch": {
     "line number": [
      23
     ]
    },
    "hasattr": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.base_test_case.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "gpytorch.test.base_test_case.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "gpytorch.test.base_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase": {
     "line number": [
      276,
      282
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase._test_inv_matmul": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case._ensure_symmetric_grad": {
     "line number": [
      302
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.gpytorch": {
     "line number": [
      311,
      313,
      313
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.math": {
     "line number": [
      313
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      324
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      311
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      312
     ]
    },
    "zip": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase._test_inv_quad_logdet": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.gpytorch": {
     "line number": [
      350,
      352,
      352,
      354
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.math": {
     "line number": [
      353
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      347,
      363,
      364
     ]
    },
    "range": {
     "line number": [
      364
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      350
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      351
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_add_diag": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      399
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      379,
      381,
      386,
      388,
      393,
      400
     ]
    },
    "itertools.product": {
     "line number": [
      398
     ]
    },
    "range": {
     "line number": [
      382,
      389,
      403
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_cholesky": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_diag": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_matmul_matrix": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_matmul_matrix_broadcast": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      472,
      473,
      478,
      479,
      483,
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_matmul_matrix_cholesky": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_matmul_matrix_with_left": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      464,
      465
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_matmul_vector": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      427
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_matmul_vector_with_left": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      438,
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_matmul_vector_with_left_cholesky": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      450,
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_quad_logdet": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_quad_logdet_no_reduce": {
  "data": {
   "lineno": 490
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_inv_quad_logdet_no_reduce_cholesky": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_prod": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.gpytorch": {
     "line number": [
      497
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_root_decomposition": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.gpytorch": {
     "line number": [
      507,
      511
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.math": {
     "line number": [
      511
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      510
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      507
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      508
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_root_decomposition_cholesky": {
  "data": {
   "lineno": 523
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_root_inv_decomposition": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_sample": {
  "data": {
   "lineno": 536
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_sqrt_inv_matmul": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case._ensure_symmetric_grad": {
     "line number": [
      552
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.gpytorch": {
     "line number": [
      561
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      555,
      556,
      573,
      574
     ]
    },
    "len": {
     "line number": [
      547
     ]
    },
    "zip": {
     "line number": [
      581
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_sqrt_inv_matmul_no_lhs": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case._ensure_symmetric_grad": {
     "line number": [
      592
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.gpytorch": {
     "line number": [
      599
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      595,
      609
     ]
    },
    "len": {
     "line number": [
      587
     ]
    },
    "zip": {
     "line number": [
      615
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_svd": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.itertools": {
     "line number": [
      696
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      676,
      678,
      679,
      682,
      689,
      698,
      705
     ]
    },
    "range": {
     "line number": [
      696
     ]
    },
    "zip": {
     "line number": [
      711
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.test_symeig": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.itertools": {
     "line number": [
      644
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      629,
      630,
      632,
      638,
      646,
      652
     ]
    },
    "range": {
     "line number": [
      644
     ]
    },
    "zip": {
     "line number": [
      658
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase._test_matmul": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      48
     ]
    },
    "zip": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.create_lazy_tensor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      33
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.evaluate_lazy_tensor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      37
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_add": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      59,
      62,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_constant_mul": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_evaluate": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_getitem": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      173,
      174,
      176,
      177
     ]
    },
    "itertools.product": {
     "line number": [
      161
     ]
    },
    "slice": {
     "line number": [
      161,
      162,
      162,
      163,
      163,
      165,
      166,
      168,
      169,
      173,
      174,
      176,
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_getitem_tensor_index": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      195,
      198,
      201,
      224,
      225,
      228,
      230
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.gpytorch": {
     "line number": [
      190,
      193,
      196,
      199,
      214,
      217,
      227
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      186,
      186,
      189,
      192,
      195,
      198,
      201,
      201,
      208,
      210,
      210,
      213,
      216,
      224,
      224,
      225,
      225,
      228,
      228,
      230,
      230
     ]
    },
    "itertools.product": {
     "line number": [
      207
     ]
    },
    "slice": {
     "line number": [
      189,
      192,
      208,
      213,
      216,
      219,
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_matmul_matrix": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_matmul_matrix_broadcast": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      88,
      89,
      94,
      95,
      99,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_matmul_vec": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_neg_constant_mul": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_permute": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_quad_form_derivative": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.gpytorch": {
     "line number": [
      249
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      245,
      246
     ]
    },
    "zip": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_sum": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase.test_transpose_batch": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "itertools.combinations": {
     "line number": [
      270
     ]
    },
    "range": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case._ensure_symmetric_grad": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.torch": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.lazy_tensor_test_case.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "gpytorch.test.lazy_tensor_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.model_test_case": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "object": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.create_batch_likelihood_and_labels": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      29
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      27
     ]
    },
    "gpytorch.test.model_test_case.torch": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.create_batch_test_data": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      25
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      23
     ]
    },
    "gpytorch.test.model_test_case.torch": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.create_likelihood_and_labels": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      21
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.create_model": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      13
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.create_test_data": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      17
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.test_batch_forward_eval": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "model": {
     "line number": [
      74,
      76
     ]
    },
    "model.eval": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.test_batch_forward_train": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "model": {
     "line number": [
      44,
      46
     ]
    },
    "model.train": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.test_forward_eval": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "model": {
     "line number": [
      64,
      66
     ]
    },
    "model.eval": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.test_forward_train": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "model": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.test_multi_batch_forward_eval": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "gpytorch.test.model_test_case.torch": {
     "line number": [
      82,
      83
     ]
    },
    "model": {
     "line number": [
      84,
      86
     ]
    },
    "model.eval": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.BaseModelTestCase.test_multi_batch_forward_train": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "gpytorch.test.model_test_case.torch": {
     "line number": [
      52,
      53
     ]
    },
    "model": {
     "line number": [
      54,
      56
     ]
    },
    "model.train": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.VariationalModelTestCase": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "gpytorch.test.model_test_case.BaseModelTestCase": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.test.model_test_case.VariationalModelTestCase.test_backward_train": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "gpytorch.test.model_test_case.gpytorch": {
     "line number": [
      97
     ]
    },
    "gpytorch.test.model_test_case.torch": {
     "line number": [
      102
     ]
    },
    "mll": {
     "line number": [
      105,
      110
     ]
    },
    "model": {
     "line number": [
      96,
      97,
      104,
      109
     ]
    },
    "model.named_parameters": {
     "line number": [
      113
     ]
    },
    "model.parameters": {
     "line number": [
      102
     ]
    },
    "model.train": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.VariationalModelTestCase.test_batch_backward_train": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "gpytorch.test.model_test_case.gpytorch": {
     "line number": [
      125
     ]
    },
    "gpytorch.test.model_test_case.torch": {
     "line number": [
      121,
      130
     ]
    },
    "mll": {
     "line number": [
      125,
      133,
      138
     ]
    },
    "model": {
     "line number": [
      124,
      125,
      132,
      137
     ]
    },
    "model.named_parameters": {
     "line number": [
      141
     ]
    },
    "model.parameters": {
     "line number": [
      130
     ]
    },
    "model.train": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.VariationalModelTestCase.test_multi_batch_backward_train": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "gpytorch.test.model_test_case.torch": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.model_test_case.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.test.model_test_case.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "gpytorch.test.model_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.utils": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.utils.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "gpytorch.test.utils.approx_equal": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      20
     ]
    },
    "gpytorch.test.utils.torch": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "gpytorch.test.utils.get_cuda_max_memory_allocations": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "gpytorch.test.utils.torch": {
     "line number": [
      28,
      28,
      28
     ]
    },
    "int": {
     "line number": [
      26
     ]
    },
    "range": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.utils.least_used_cuda_device": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      38
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      31
     ]
    },
    "gpytorch.test.utils.get_cuda_max_memory_allocations": {
     "line number": [
      36
     ]
    },
    "gpytorch.test.utils.random": {
     "line number": [
      40
     ]
    },
    "gpytorch.test.utils.torch": {
     "line number": [
      37,
      40,
      41
     ]
    },
    "typing.Generator": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.utils.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "gpytorch.test.utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.test.variational_test_case": {
  "data": {},
  "type": "module"
 },
 "gpytorch.test.variational_test_case.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase._eval_iter": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.torch": {
     "line number": [
      77,
      78,
      85
     ]
    },
    "model": {
     "line number": [
      81,
      86
     ]
    },
    "model.cuda": {
     "line number": [
      81
     ]
    },
    "model.eval": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase._make_model_and_likelihood": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "_SVGPRegressionModel": {
     "line number": [
      44
     ]
    },
    "gpytorch.test.variational_test_case.gpytorch": {
     "line number": [
      19,
      20
     ]
    },
    "gpytorch.test.variational_test_case.torch": {
     "line number": [
      17,
      18,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase._make_model_and_likelihood._SVGPRegressionModel": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.gpytorch": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase._make_model_and_likelihood._SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "distribution_cls": {
     "line number": [
      25
     ]
    },
    "gpytorch.test.variational_test_case.gpytorch": {
     "line number": [
      31,
      34,
      35,
      35
     ]
    },
    "strategy_cls": {
     "line number": [
      26
     ]
    },
    "super": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase._make_model_and_likelihood._SVGPRegressionModel.forward": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.gpytorch": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase._training_iter": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.gpytorch": {
     "line number": [
      47
     ]
    },
    "gpytorch.test.variational_test_case.torch": {
     "line number": [
      47,
      49,
      50
     ]
    },
    "len": {
     "line number": [
      51
     ]
    },
    "mll": {
     "line number": [
      64
     ]
    },
    "mll_cls": {
     "line number": [
      53
     ]
    },
    "model": {
     "line number": [
      63
     ]
    },
    "model.named_parameters": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.batch_shape": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      92
     ]
    },
    "abc.abstractproperty": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.cuda": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "property": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.distribution_cls": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      96
     ]
    },
    "abc.abstractproperty": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.event_shape": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.torch": {
     "line number": [
      100
     ]
    },
    "property": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.likelihood_cls": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.gpytorch": {
     "line number": [
      104
     ]
    },
    "property": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.mll_cls": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      108
     ]
    },
    "abc.abstractproperty": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.strategy_cls": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      112
     ]
    },
    "abc.abstractproperty": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_eval_iteration": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.gpytorch": {
     "line number": [
      135,
      136
     ]
    },
    "gpytorch.test.variational_test_case.torch": {
     "line number": [
      134
     ]
    },
    "model": {
     "line number": [
      142,
      150,
      155,
      156
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      134,
      135,
      136
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      137,
      138,
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_eval_larger_pred_batch": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.torch": {
     "line number": [
      172,
      174,
      175,
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_eval_smaller_pred_batch": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.torch": {
     "line number": [
      163,
      164,
      165,
      166,
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_training_all_batch_zero_mean": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.torch": {
     "line number": [
      251,
      252,
      253,
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_training_iteration": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.gpytorch": {
     "line number": [
      195,
      196
     ]
    },
    "gpytorch.test.variational_test_case.torch": {
     "line number": [
      194
     ]
    },
    "model": {
     "line number": [
      202,
      214,
      218
     ]
    },
    "model.variational_strategy.variational_params_initialized.item": {
     "line number": [
      213,
      215
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      194,
      195,
      196
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      197,
      198,
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_training_iteration_batch_data": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.torch": {
     "line number": [
      237,
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_training_iteration_batch_inducing": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.torch": {
     "line number": [
      227,
      229,
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.VariationalTestCase.test_training_iteration_batch_model": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.torch": {
     "line number": [
      243,
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.test.variational_test_case.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "gpytorch.test.variational_test_case.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "gpytorch.test.variational_test_case.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "gpytorch.test.variational_test_case.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "gpytorch.utils.broadcasting": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.broadcasting._matmul_broadcast_shape": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      38,
      40,
      45,
      47
     ]
    },
    "gpytorch.utils.broadcasting._mul_broadcast_shape": {
     "line number": [
      57
     ]
    },
    "gpytorch.utils.broadcasting.torch": {
     "line number": [
      49
     ]
    },
    "len": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.broadcasting._mul_broadcast_shape": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      20,
      22
     ]
    },
    "any": {
     "line number": [
      18
     ]
    },
    "gpytorch.utils.broadcasting.torch": {
     "line number": [
      28
     ]
    },
    "len": {
     "line number": [
      10,
      11,
      17
     ]
    },
    "list": {
     "line number": [
      11
     ]
    },
    "max": {
     "line number": [
      10
     ]
    },
    "tuple": {
     "line number": [
      11,
      16
     ]
    },
    "zip": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.broadcasting._pad_with_singletons": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "list": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.broadcasting.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.cholesky": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.cholesky.psd_safe_cholesky": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "NanError": {
     "line number": [
      37
     ]
    },
    "NotPSDError": {
     "line number": [
      55
     ]
    },
    "RuntimeError": {
     "line number": [
      34,
      53
     ]
    },
    "gpytorch.utils.cholesky.torch": {
     "line number": [
      32,
      35,
      50
     ]
    },
    "gpytorch.utils.cholesky.warnings": {
     "line number": [
      51
     ]
    },
    "range": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.cholesky.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.cholesky.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.utils.contour_integral_quad": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.contour_integral_quad.contour_integral_quad": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      59
     ]
    },
    "RuntimeError": {
     "line number": [
      88,
      89
     ]
    },
    "_mul_broadcast_shape": {
     "line number": [
      42
     ]
    },
    "enumerate": {
     "line number": [
      101
     ]
    },
    "gpytorch.utils.contour_integral_quad.math": {
     "line number": [
      115
     ]
    },
    "gpytorch.utils.contour_integral_quad.torch": {
     "line number": [
      61,
      97,
      98,
      112,
      116,
      130,
      131,
      135
     ]
    },
    "gpytorch.utils.contour_integral_quad.warnings": {
     "line number": [
      61,
      62
     ]
    },
    "linear_cg": {
     "line number": [
      63
     ]
    },
    "max": {
     "line number": [
      57
     ]
    },
    "minres": {
     "line number": [
      136
     ]
    },
    "numpy.arange": {
     "line number": [
      105
     ]
    },
    "numpy.imag": {
     "line number": [
      106
     ]
    },
    "numpy.power": {
     "line number": [
      111
     ]
    },
    "numpy.real": {
     "line number": [
      111
     ]
    },
    "numpy.sqrt": {
     "line number": [
      110,
      115
     ]
    },
    "scipy.special.ellipj": {
     "line number": [
      106
     ]
    },
    "scipy.special.ellipk": {
     "line number": [
      103
     ]
    },
    "slice": {
     "line number": [
      59,
      59
     ]
    },
    "sqrt_precond_matmul": {
     "line number": [
      53
     ]
    },
    "zip": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.contour_integral_quad.contour_integral_quad.sqrt_precond_matmul": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "gpytorch.utils.contour_integral_quad.contour_integral_quad": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.contour_integral_quad.ellipj": {
  "data": {
   "shadows": "scipy.special.ellipj"
  },
  "type": "import"
 },
 "gpytorch.utils.contour_integral_quad.ellipk": {
  "data": {
   "shadows": "scipy.special.ellipk"
  },
  "type": "import"
 },
 "gpytorch.utils.contour_integral_quad.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.utils.contour_integral_quad.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpytorch.utils.contour_integral_quad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.contour_integral_quad.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.utils.deprecation": {
  "data": {
   "symbols_in_volume": {
    "gpytorch.utils.deprecation.torch": {
     "line number": [
      10,
      11,
      13
     ]
    },
    "isinstance": {
     "line number": [
      10
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "module"
 },
 "gpytorch.utils.deprecation.DeprecationError": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.utils.deprecation.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "gpytorch.utils.deprecation._deprecate_kwarg": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      35
     ]
    },
    "ValueError": {
     "line number": [
      37
     ]
    },
    "gpytorch.utils.deprecation.warnings": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.deprecation._deprecate_kwarg_with_transform": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      45
     ]
    },
    "gpytorch.utils.deprecation.warnings": {
     "line number": [
      45
     ]
    },
    "transform": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.deprecation._deprecate_renamed_methods": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "gpytorch.utils.deprecation._deprecated_renamed_method": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.deprecation._deprecated_function_for": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "gpytorch.utils.deprecation._deprecated_function_for._deprecated_function": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      25
     ]
    },
    "function": {
     "line number": [
      27,
      21
     ]
    },
    "gpytorch.utils.deprecation.functools": {
     "line number": [
      21
     ]
    },
    "gpytorch.utils.deprecation.warnings": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.deprecation._deprecated_renamed_method": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.deprecation._deprecated_renamed_method._deprecated_method": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      54
     ]
    },
    "getattr": {
     "line number": [
      56
     ]
    },
    "gpytorch.utils.deprecation.warnings": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.deprecation.bool_compat": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "gpytorch.utils.deprecation.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "gpytorch.utils.deprecation.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.deprecation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.utils.errors": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.errors.CachingError": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.utils.errors.NanError": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.utils.errors.NotPSDError": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.utils.errors.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "gpytorch.utils.getitem": {
  "data": {
   "symbols_in_volume": {
    "slice": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "module"
 },
 "gpytorch.utils.getitem._compute_getitem_size": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      56,
      57,
      74
     ]
    },
    "RuntimeError": {
     "line number": [
      28,
      73
     ]
    },
    "_mul_broadcast_shape": {
     "line number": [
      72
     ]
    },
    "enumerate": {
     "line number": [
      38
     ]
    },
    "gpytorch.utils.getitem._noop_index": {
     "line number": [
      41
     ]
    },
    "gpytorch.utils.getitem.torch": {
     "line number": [
      63,
      76,
      88
     ]
    },
    "int": {
     "line number": [
      52
     ]
    },
    "isinstance": {
     "line number": [
      40,
      52
     ]
    },
    "len": {
     "line number": [
      27,
      30,
      44,
      66
     ]
    },
    "list": {
     "line number": [
      86
     ]
    },
    "range": {
     "line number": [
      44,
      55
     ]
    },
    "slice": {
     "line number": [
      40
     ]
    },
    "zip": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.getitem._convert_indices_to_tensors": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "_mul_broadcast_shape": {
     "line number": [
      113
     ]
    },
    "_pad_with_singletons": {
     "line number": [
      136,
      142,
      152
     ]
    },
    "enumerate": {
     "line number": [
      131
     ]
    },
    "gpytorch.utils.getitem._is_tensor_index_moved_to_start": {
     "line number": [
      118
     ]
    },
    "gpytorch.utils.getitem.torch": {
     "line number": [
      112,
      135,
      141,
      141,
      144
     ]
    },
    "int": {
     "line number": [
      140
     ]
    },
    "isinstance": {
     "line number": [
      111,
      133,
      140
     ]
    },
    "len": {
     "line number": [
      116,
      116,
      122,
      123,
      127,
      148,
      151
     ]
    },
    "slice": {
     "line number": [
      111,
      133
     ]
    },
    "tuple": {
     "line number": [
      111,
      112,
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.getitem._equal_indices": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "gpytorch.utils.getitem.torch": {
     "line number": [
      163,
      163,
      164,
      165,
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.getitem._is_noop_index": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "gpytorch.utils.getitem._noop_index": {
     "line number": [
      175
     ]
    },
    "isinstance": {
     "line number": [
      175
     ]
    },
    "slice": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.getitem._is_tensor_index_moved_to_start": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "gpytorch.utils.getitem.torch": {
     "line number": [
      185,
      189
     ]
    },
    "isinstance": {
     "line number": [
      195
     ]
    },
    "slice": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.getitem._noop_index": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "gpytorch.utils.getitem.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.grid": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.grid.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "gpytorch.utils.grid.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "gpytorch.utils.grid.choose_grid_size": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "gpytorch.utils.grid.math": {
     "line number": [
      46
     ]
    },
    "int": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.grid.convert_legacy_grid": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "gpytorch.utils.grid.torch": {
     "line number": [
      51,
      51
     ]
    },
    "range": {
     "line number": [
      52
     ]
    },
    "typing.List": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.grid.create_data_from_grid": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "all": {
     "line number": [
      65
     ]
    },
    "gpytorch.utils.grid.convert_legacy_grid": {
     "line number": [
      63
     ]
    },
    "gpytorch.utils.grid.torch": {
     "line number": [
      55,
      62,
      66,
      67,
      55
     ]
    },
    "len": {
     "line number": [
      64
     ]
    },
    "range": {
     "line number": [
      74
     ]
    },
    "reversed": {
     "line number": [
      74
     ]
    },
    "typing.List": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.grid.create_grid": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      79
     ]
    },
    "float": {
     "line number": [
      79,
      79,
      101
     ]
    },
    "gpytorch.utils.grid.torch": {
     "line number": [
      79,
      103,
      107,
      80
     ]
    },
    "int": {
     "line number": [
      79
     ]
    },
    "len": {
     "line number": [
      100
     ]
    },
    "range": {
     "line number": [
      100
     ]
    },
    "typing.List": {
     "line number": [
      79,
      79,
      80
     ]
    },
    "typing.Tuple": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.grid.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.utils.grid.scale_to_bounds": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "gpytorch.utils.grid.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.interpolation": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.interpolation.Interpolation": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "object": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.utils.interpolation.Interpolation._cubic_interpolation_kernel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "gpytorch.utils.interpolation.torch": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.interpolation.Interpolation.interpolate": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      60,
      74
     ]
    },
    "convert_legacy_grid": {
     "line number": [
      44
     ]
    },
    "functools.reduce": {
     "line number": [
      158
     ]
    },
    "gpytorch.utils.interpolation.torch": {
     "line number": [
      42,
      42,
      43,
      53,
      54,
      88,
      93,
      96,
      97,
      104,
      127,
      128,
      144,
      145
     ]
    },
    "len": {
     "line number": [
      47,
      49,
      91,
      110,
      120,
      136
     ]
    },
    "operator.mul": {
     "line number": [
      158
     ]
    },
    "range": {
     "line number": [
      42,
      49,
      53,
      54,
      100,
      130,
      147
     ]
    },
    "typing.List": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.interpolation.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "gpytorch.utils.interpolation.left_interp": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "_matmul_broadcast_shape": {
     "line number": [
      183
     ]
    },
    "gpytorch.utils.interpolation.torch": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.interpolation.left_t_interp": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "_matmul_broadcast_shape": {
     "line number": [
      210
     ]
    },
    "cls": {
     "line number": [
      230
     ]
    },
    "dsmm": {
     "line number": [
      234
     ]
    },
    "getattr": {
     "line number": [
      227,
      229
     ]
    },
    "gpytorch.utils.interpolation.torch": {
     "line number": [
      209,
      216,
      216,
      218,
      218,
      220,
      221,
      224,
      227,
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.interpolation.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "gpytorch.utils.interpolation.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "gpytorch.utils.interpolation.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.lanczos": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.lanczos.lanczos_tridiag": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      25,
      38,
      42,
      46,
      50
     ]
    },
    "callable": {
     "line number": [
      24
     ]
    },
    "gpytorch.utils.lanczos.torch": {
     "line number": [
      14,
      32,
      69,
      70,
      74,
      83,
      114,
      127,
      133,
      140
     ]
    },
    "len": {
     "line number": [
      147,
      149
     ]
    },
    "matmul_closure": {
     "line number": [
      78,
      101
     ]
    },
    "min": {
     "line number": [
      57
     ]
    },
    "range": {
     "line number": [
      94,
      126,
      147,
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.lanczos.lanczos_tridiag_to_diag": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "gpytorch.utils.lanczos.torch": {
     "line number": [
      173,
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.lanczos.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.linear_cg": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.linear_cg._default_preconditioner": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "gpytorch.utils.linear_cg._jit_linear_cg_updates": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "gpytorch.utils.linear_cg.torch": {
     "line number": [
      22,
      26,
      27,
      30,
      32,
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.linear_cg._jit_linear_cg_updates_no_precond": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "gpytorch.utils.linear_cg._jit_linear_cg_updates": {
     "line number": [
      75
     ]
    },
    "gpytorch.utils.linear_cg.torch": {
     "line number": [
      55,
      56,
      59,
      61,
      69,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.linear_cg.linear_cg": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      149,
      155,
      188
     ]
    },
    "bool": {
     "line number": [
      285
     ]
    },
    "callable": {
     "line number": [
      154
     ]
    },
    "gpytorch.utils.linear_cg._default_preconditioner": {
     "line number": [
      142
     ]
    },
    "gpytorch.utils.linear_cg._jit_linear_cg_updates": {
     "line number": [
      253
     ]
    },
    "gpytorch.utils.linear_cg._jit_linear_cg_updates_no_precond": {
     "line number": [
      266
     ]
    },
    "gpytorch.utils.linear_cg.torch": {
     "line number": [
      135,
      152,
      161,
      187,
      193,
      206,
      207,
      208,
      209,
      213,
      216,
      217,
      218,
      219,
      233,
      234,
      237,
      239,
      247,
      281,
      283,
      293,
      295,
      301,
      302
     ]
    },
    "gpytorch.utils.linear_cg.warnings": {
     "line number": [
      317
     ]
    },
    "len": {
     "line number": [
      331
     ]
    },
    "matmul_closure": {
     "line number": [
      174,
      231
     ]
    },
    "min": {
     "line number": [
      159,
      160
     ]
    },
    "preconditioner": {
     "line number": [
      201,
      251
     ]
    },
    "range": {
     "line number": [
      228,
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.linear_cg.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.linear_cg.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.utils.minres": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.minres._jit_minres_updates": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "gpytorch.utils.minres.torch": {
     "line number": [
      234,
      235,
      238,
      241,
      245,
      246,
      247,
      255,
      258,
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.minres.minres": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "_pad_with_singletons": {
     "line number": [
      60
     ]
    },
    "gpytorch.utils.minres._jit_minres_updates": {
     "line number": [
      140
     ]
    },
    "gpytorch.utils.minres.torch": {
     "line number": [
      26,
      33,
      52,
      61,
      64,
      67,
      68,
      70,
      71,
      79,
      80,
      81,
      82,
      83,
      84,
      85,
      87,
      88,
      89,
      95,
      96,
      97,
      98,
      103,
      106,
      107,
      125,
      126,
      131,
      132,
      171,
      172
     ]
    },
    "min": {
     "line number": [
      49
     ]
    },
    "mm_": {
     "line number": [
      55,
      119
     ]
    },
    "preconditioner": {
     "line number": [
      66,
      130
     ]
    },
    "range": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.minres.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.pivoted_cholesky": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.pivoted_cholesky.pivoted_cholesky": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      40
     ]
    },
    "gpytorch.utils.pivoted_cholesky.torch": {
     "line number": [
      26,
      27,
      28,
      31,
      31,
      36,
      36,
      38,
      38,
      50,
      51,
      52,
      78,
      87
     ]
    },
    "isinstance": {
     "line number": [
      67
     ]
    },
    "lazify": {
     "line number": [
      19
     ]
    },
    "min": {
     "line number": [
      23
     ]
    },
    "slice": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.pivoted_cholesky.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.prod": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "len": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.quadrature": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.quadrature.GaussHermiteQuadrature1D": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "torch.nn.Module": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.utils.quadrature.GaussHermiteQuadrature1D.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "super": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.quadrature.GaussHermiteQuadrature1D._apply": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "fn": {
     "line number": [
      33,
      34,
      35
     ]
    },
    "gpytorch.utils.quadrature.GaussHermiteQuadrature1D": {
     "line number": [
      35
     ]
    },
    "super": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.quadrature.GaussHermiteQuadrature1D._locs_and_weights": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "gpytorch.utils.quadrature.torch": {
     "line number": [
      45,
      46
     ]
    },
    "numpy.polynomial.hermite.hermgauss": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.quadrature.GaussHermiteQuadrature1D.forward": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "_pad_with_singletons": {
     "line number": [
      64,
      68
     ]
    },
    "func": {
     "line number": [
      67
     ]
    },
    "gpytorch.utils.quadrature.math": {
     "line number": [
      70,
      70
     ]
    },
    "gpytorch.utils.quadrature.torch": {
     "line number": [
      66
     ]
    },
    "range": {
     "line number": [
      71
     ]
    },
    "tuple": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.quadrature.Module": {
  "data": {
   "shadows": "torch.nn.Module"
  },
  "type": "import"
 },
 "gpytorch.utils.quadrature.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.utils.quadrature.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "gpytorch.utils.quadrature.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.sparse": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.sparse.bdsmm": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "_matmul_broadcast_shape": {
     "line number": [
      76
     ]
    },
    "gpytorch.utils.sparse.sparse_repeat": {
     "line number": [
      83
     ]
    },
    "gpytorch.utils.sparse.torch": {
     "line number": [
      89,
      90,
      91,
      92,
      104,
      107,
      113,
      119,
      121,
      127
     ]
    },
    "len": {
     "line number": [
      78,
      91
     ]
    },
    "list": {
     "line number": [
      78
     ]
    },
    "range": {
     "line number": [
      78,
      91
     ]
    },
    "tuple": {
     "line number": [
      79
     ]
    },
    "zip": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.sparse.make_sparse_from_indices_and_values": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      24
     ]
    },
    "cls": {
     "line number": [
      63
     ]
    },
    "enumerate": {
     "line number": [
      32
     ]
    },
    "getattr": {
     "line number": [
      60,
      62
     ]
    },
    "gpytorch.utils.sparse.torch": {
     "line number": [
      23,
      33,
      33,
      41,
      41,
      43,
      58,
      60,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.sparse.sparse_eye": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "cls": {
     "line number": [
      136,
      137
     ]
    },
    "getattr": {
     "line number": [
      136
     ]
    },
    "gpytorch.utils.sparse.torch": {
     "line number": [
      134,
      135,
      136,
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.sparse.sparse_getitem": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      147,
      150,
      182,
      196
     ]
    },
    "enumerate": {
     "line number": [
      156
     ]
    },
    "gpytorch.utils.sparse.torch": {
     "line number": [
      160,
      161,
      162,
      184,
      185,
      185,
      198,
      198
     ]
    },
    "int": {
     "line number": [
      157
     ]
    },
    "isinstance": {
     "line number": [
      143,
      157,
      178
     ]
    },
    "len": {
     "line number": [
      149,
      175
     ]
    },
    "list": {
     "line number": [
      154,
      156,
      180,
      180
     ]
    },
    "range": {
     "line number": [
      164,
      186
     ]
    },
    "slice": {
     "line number": [
      178
     ]
    },
    "sum": {
     "line number": [
      176
     ]
    },
    "tuple": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.sparse.sparse_repeat": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      225
     ]
    },
    "gpytorch.utils.sparse.torch": {
     "line number": [
      210,
      212,
      217,
      220,
      228,
      232,
      235
     ]
    },
    "isinstance": {
     "line number": [
      204
     ]
    },
    "len": {
     "line number": [
      204,
      207,
      207,
      208,
      208
     ]
    },
    "range": {
     "line number": [
      220
     ]
    },
    "tuple": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.sparse.to_sparse": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      255
     ]
    },
    "gpytorch.utils.sparse.torch": {
     "line number": [
      252,
      255
     ]
    },
    "klass": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.sparse.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.stochastic_lq": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.stochastic_lq.StochasticLQ": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "object": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.utils.stochastic_lq.StochasticLQ.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "gpytorch.utils.stochastic_lq.StochasticLQ.evaluate": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      73
     ]
    },
    "float": {
     "line number": [
      79
     ]
    },
    "func": {
     "line number": [
      76
     ]
    },
    "gpytorch.utils.stochastic_lq.torch": {
     "line number": [
      66,
      67
     ]
    },
    "range": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.stochastic_lq.StochasticLQ.lanczos_batch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "gpytorch.utils.stochastic_lq.torch": {
     "line number": [
      41
     ]
    },
    "lanczos_tridiag": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.stochastic_lq.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.toeplitz": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.toeplitz.fft": {
  "data": {
   "shadows": "torch.fft.fft"
  },
  "type": "import"
 },
 "gpytorch.utils.toeplitz.ifft": {
  "data": {
   "shadows": "torch.fft.ifft"
  },
  "type": "import"
 },
 "gpytorch.utils.toeplitz.sym_toeplitz": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "gpytorch.utils.toeplitz.toeplitz": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.toeplitz.sym_toeplitz_derivative_quadratic_form": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "gpytorch.utils.toeplitz.toeplitz_matmul": {
     "line number": [
      192,
      195
     ]
    },
    "gpytorch.utils.toeplitz.torch": {
     "line number": [
      190,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.toeplitz.sym_toeplitz_getitem": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "gpytorch.utils.toeplitz.toeplitz_getitem": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.toeplitz.sym_toeplitz_matmul": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "gpytorch.utils.toeplitz.toeplitz_matmul": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.toeplitz.toeplitz": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      19,
      22,
      25,
      32,
      35
     ]
    },
    "enumerate": {
     "line number": [
      43,
      46
     ]
    },
    "gpytorch.utils.toeplitz.torch": {
     "line number": [
      40
     ]
    },
    "len": {
     "line number": [
      31,
      31,
      37,
      41,
      41,
      44,
      47
     ]
    },
    "list": {
     "line number": [
      46
     ]
    },
    "range": {
     "line number": [
      44,
      47
     ]
    },
    "type": {
     "line number": [
      34,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.toeplitz.toeplitz_getitem": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.toeplitz.toeplitz_matmul": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      105,
      118,
      125
     ]
    },
    "gpytorch.utils.toeplitz.torch": {
     "line number": [
      107,
      117,
      130,
      134
     ]
    },
    "torch.fft.fft": {
     "line number": [
      139,
      140
     ]
    },
    "torch.fft.ifft": {
     "line number": [
      143
     ]
    },
    "type": {
     "line number": [
      124,
      124,
      124,
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.toeplitz.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.transforms": {
  "data": {
   "symbols_in_volume": {
    "gpytorch.utils.transforms.inv_sigmoid": {
     "line number": [
      25
     ]
    },
    "gpytorch.utils.transforms.inv_softplus": {
     "line number": [
      25
     ]
    },
    "gpytorch.utils.transforms.torch": {
     "line number": [
      25,
      25,
      25,
      25
     ]
    }
   }
  },
  "type": "module"
 },
 "gpytorch.utils.transforms.TRANSFORM_REGISTRY": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "gpytorch.utils.transforms._get_inv_param_transform": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      18,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.transforms.inv_sigmoid": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "gpytorch.utils.transforms.torch": {
     "line number": [
      11,
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.transforms.inv_softplus": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "gpytorch.utils.transforms.torch": {
     "line number": [
      7,
      7
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.utils.transforms.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.utils.warnings": {
  "data": {},
  "type": "module"
 },
 "gpytorch.utils.warnings.GPInputWarning": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.utils.warnings.NumericalWarning": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.utils.warnings.OldVersionWarning": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.variational": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "gpytorch.variational._variational_distribution": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational._variational_distribution.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "abc.ABC": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution.__call__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      66
     ]
    },
    "NotImplementedError": {
     "line number": [
      62
     ]
    },
    "gpytorch.variational._variational_distribution.warnings": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution.__getattr__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      76
     ]
    },
    "gpytorch.variational._variational_distribution.warnings": {
     "line number": [
      73
     ]
    },
    "super": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "gpytorch.variational._variational_distribution.torch": {
     "line number": [
      19
     ]
    },
    "super": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution.device": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "next": {
     "line number": [
      27
     ]
    },
    "property": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution.dtype": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "next": {
     "line number": [
      31
     ]
    },
    "property": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution.forward": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution.initialize_variational_distribution": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      56
     ]
    },
    "abc.abstractmethod": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_distribution._VariationalDistribution.shape": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "gpytorch.variational._variational_distribution.torch": {
     "line number": [
      47,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_distribution.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "gpytorch.variational._variational_distribution.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational._variational_distribution.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.variational._variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational._variational_strategy.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "abc.ABC": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy.__call__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      136
     ]
    },
    "isinstance": {
     "line number": [
      123,
      131
     ]
    },
    "super": {
     "line number": [
      124,
      132
     ]
    },
    "type": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "gpytorch.variational._variational_strategy.torch": {
     "line number": [
      30,
      36
     ]
    },
    "object.__setattr__": {
     "line number": [
      23
     ]
    },
    "super": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy._clear_cache": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "clear_cache_hook": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy._expand_inputs": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "_mul_broadcast_shape": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy.forward": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy.kl_divergence": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "gpytorch.variational._variational_strategy.torch": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      61
     ]
    },
    "abc.abstractproperty": {
     "line number": [
      50
     ]
    },
    "cached": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy._VariationalStrategy.variational_distribution": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "cached": {
     "line number": [
      64
     ]
    },
    "property": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational._variational_strategy.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "gpytorch.variational._variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.additive_grid_interpolation_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy": {
     "line number": [
      14
     ]
    },
    "gpytorch.variational.additive_grid_interpolation_variational_strategy.torch": {
     "line number": [
      21,
      21
     ]
    },
    "super": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy._compute_grid": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy": {
     "line number": [
      40
     ]
    },
    "hasattr": {
     "line number": [
      44
     ]
    },
    "super": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy.forward": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "Delta": {
     "line number": [
      65
     ]
    },
    "MultivariateNormal": {
     "line number": [
      63
     ]
    },
    "RuntimeError": {
     "line number": [
      52,
      56
     ]
    },
    "super": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "MultivariateNormal": {
     "line number": [
      35
     ]
    },
    "gpytorch.variational.additive_grid_interpolation_variational_strategy.AdditiveGridInterpolationVariationalStrategy": {
     "line number": [
      32
     ]
    },
    "property": {
     "line number": [
      23
     ]
    },
    "super": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.additive_grid_interpolation_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.batch_decoupled_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.batch_decoupled_variational_strategy.BatchDecoupledVariationalStrategy": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "gpytorch.variational.batch_decoupled_variational_strategy.BatchDecoupledVariationalStrategy.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      138
     ]
    },
    "ValueError": {
     "line number": [
      143
     ]
    },
    "gpytorch.variational.batch_decoupled_variational_strategy.torch": {
     "line number": [
      153,
      155
     ]
    },
    "isinstance": {
     "line number": [
      137
     ]
    },
    "super": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.batch_decoupled_variational_strategy.BatchDecoupledVariationalStrategy._expand_inputs": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "super": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.batch_decoupled_variational_strategy.BatchDecoupledVariationalStrategy.forward": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "MatmulLazyTensor": {
     "line number": [
      215
     ]
    },
    "MultivariateNormal": {
     "line number": [
      218
     ]
    },
    "SumLazyTensor": {
     "line number": [
      212,
      213
     ]
    },
    "gpytorch.variational.batch_decoupled_variational_strategy.torch": {
     "line number": [
      173,
      203,
      204
     ]
    },
    "pop_from_cache_ignore_args": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.batch_decoupled_variational_strategy.BatchDecoupledVariationalStrategy.kl_divergence": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "Delta": {
     "line number": [
      224
     ]
    },
    "MultivariateNormal": {
     "line number": [
      225
     ]
    },
    "gpytorch.variational.batch_decoupled_variational_strategy.torch": {
     "line number": [
      226
     ]
    },
    "torch.distributions.kl.kl_divergence": {
     "line number": [
      228,
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.batch_decoupled_variational_strategy.kl_divergence": {
  "data": {
   "shadows": "torch.distributions.kl.kl_divergence"
  },
  "type": "import"
 },
 "gpytorch.variational.batch_decoupled_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.cholesky_variational_distribution": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.cholesky_variational_distribution.CholeskyVariationalDistribution": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.variational.cholesky_variational_distribution.CholeskyVariationalDistribution.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "gpytorch.variational.cholesky_variational_distribution.torch": {
     "line number": [
      27,
      29,
      30,
      34,
      35
     ]
    },
    "super": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.cholesky_variational_distribution.CholeskyVariationalDistribution.forward": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "CholLazyTensor": {
     "line number": [
      47
     ]
    },
    "MultivariateNormal": {
     "line number": [
      48
     ]
    },
    "TriangularLazyTensor": {
     "line number": [
      44
     ]
    },
    "gpytorch.variational.cholesky_variational_distribution.torch": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.cholesky_variational_distribution.CholeskyVariationalDistribution.initialize_variational_distribution": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "gpytorch.variational.cholesky_variational_distribution.torch": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.cholesky_variational_distribution.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.ciq_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.ciq_variational_strategy.CiqVariationalStrategy": {
  "data": {
   "lineno": 125
  },
  "type": "class"
 },
 "gpytorch.variational.ciq_variational_strategy.CiqVariationalStrategy.__call__": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "MultivariateNormal": {
     "line number": [
      311,
      272
     ]
    },
    "RuntimeError": {
     "line number": [
      331
     ]
    },
    "bool": {
     "line number": [
      272
     ]
    },
    "gpytorch.variational.ciq_variational_strategy.torch": {
     "line number": [
      272,
      287,
      288
     ]
    },
    "isinstance": {
     "line number": [
      311,
      320
     ]
    },
    "type": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.ciq_variational_strategy.CiqVariationalStrategy._ngd": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.ciq_variational_strategy.CiqVariationalStrategy.forward": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      225
     ]
    },
    "MatmulLazyTensor": {
     "line number": [
      244
     ]
    },
    "MultivariateNormal": {
     "line number": [
      194,
      252,
      196
     ]
    },
    "SumLazyTensor": {
     "line number": [
      241,
      242
     ]
    },
    "dict": {
     "line number": [
      229
     ]
    },
    "gpytorch.variational.ciq_variational_strategy._NgdInterpTerms": {
     "line number": [
      218
     ]
    },
    "gpytorch.variational.ciq_variational_strategy.torch": {
     "line number": [
      191,
      192,
      193,
      198,
      224,
      234
     ]
    },
    "hasattr": {
     "line number": [
      228
     ]
    },
    "lazify": {
     "line number": [
      213
     ]
    },
    "typing.Optional": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.ciq_variational_strategy.CiqVariationalStrategy.kl_divergence": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      265
     ]
    },
    "hasattr": {
     "line number": [
      262
     ]
    },
    "super": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.ciq_variational_strategy.CiqVariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      176
     ]
    },
    "MultivariateNormal": {
     "line number": [
      176
     ]
    },
    "cached": {
     "line number": [
      168
     ]
    },
    "gpytorch.variational.ciq_variational_strategy.torch": {
     "line number": [
      170,
      175
     ]
    },
    "property": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.ciq_variational_strategy.CiqVariationalStrategy.variational_distribution": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      183
     ]
    },
    "cached": {
     "line number": [
      180
     ]
    },
    "property": {
     "line number": [
      179
     ]
    },
    "super": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.ciq_variational_strategy.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "gpytorch.variational.ciq_variational_strategy.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "gpytorch.variational.ciq_variational_strategy._NgdInterpTerms": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "gpytorch.variational.ciq_variational_strategy.torch": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.variational.ciq_variational_strategy._NgdInterpTerms.backward": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "gpytorch.variational.ciq_variational_strategy.torch": {
     "line number": [
      82,
      82,
      82,
      115,
      116,
      83,
      83,
      83
     ]
    },
    "staticmethod": {
     "line number": [
      80
     ]
    },
    "sum": {
     "line number": [
      103
     ]
    },
    "typing.Tuple": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.ciq_variational_strategy._NgdInterpTerms.forward": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "_mul_broadcast_shape": {
     "line number": [
      44
     ]
    },
    "gpytorch.variational.ciq_variational_strategy.torch": {
     "line number": [
      37,
      37,
      37,
      53,
      74,
      38,
      38,
      38
     ]
    },
    "linear_cg": {
     "line number": [
      51
     ]
    },
    "min": {
     "line number": [
      56
     ]
    },
    "staticmethod": {
     "line number": [
      35
     ]
    },
    "typing.Tuple": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.ciq_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.delta_variational_distribution": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.delta_variational_distribution.DeltaVariationalDistribution": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "gpytorch.variational.delta_variational_distribution.DeltaVariationalDistribution.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "gpytorch.variational.delta_variational_distribution.torch": {
     "line number": [
      22,
      24,
      26
     ]
    },
    "super": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.delta_variational_distribution.DeltaVariationalDistribution.forward": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "Delta": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.delta_variational_distribution.DeltaVariationalDistribution.initialize_variational_distribution": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "gpytorch.variational.delta_variational_distribution.torch": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.delta_variational_distribution.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.grid_interpolation_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.grid_interpolation_variational_strategy.GridInterpolationVariationalStrategy": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.variational.grid_interpolation_variational_strategy.GridInterpolationVariationalStrategy.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "float": {
     "line number": [
      38
     ]
    },
    "gpytorch.variational.grid_interpolation_variational_strategy.GridInterpolationVariationalStrategy": {
     "line number": [
      50
     ]
    },
    "gpytorch.variational.grid_interpolation_variational_strategy.torch": {
     "line number": [
      36,
      39,
      41
     ]
    },
    "int": {
     "line number": [
      41
     ]
    },
    "len": {
     "line number": [
      36,
      37,
      41,
      41,
      43
     ]
    },
    "object.__setattr__": {
     "line number": [
      53
     ]
    },
    "pow": {
     "line number": [
      41
     ]
    },
    "range": {
     "line number": [
      37,
      43,
      44
     ]
    },
    "super": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.grid_interpolation_variational_strategy.GridInterpolationVariationalStrategy._compute_grid": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "Interpolation": {
     "line number": [
      62
     ]
    },
    "_mul_broadcast_shape": {
     "line number": [
      67
     ]
    },
    "len": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.grid_interpolation_variational_strategy.GridInterpolationVariationalStrategy.forward": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "InterpolatedLazyTensor": {
     "line number": [
      97
     ]
    },
    "MultivariateNormal": {
     "line number": [
      104
     ]
    },
    "RuntimeError": {
     "line number": [
      81
     ]
    },
    "left_interp": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.grid_interpolation_variational_strategy.GridInterpolationVariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "MultivariateNormal": {
     "line number": [
      76
     ]
    },
    "cached": {
     "line number": [
      73
     ]
    },
    "property": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.grid_interpolation_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.independent_multitask_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.independent_multitask_variational_strategy.IndependentMultitaskVariationalStrategy": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.variational.independent_multitask_variational_strategy.IndependentMultitaskVariationalStrategy.__call__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "len": {
     "line number": [
      50,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.independent_multitask_variational_strategy.IndependentMultitaskVariationalStrategy.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "gpytorch.variational.independent_multitask_variational_strategy.IndependentMultitaskVariationalStrategy.kl_divergence": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "super": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.independent_multitask_variational_strategy.IndependentMultitaskVariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "property": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.independent_multitask_variational_strategy.IndependentMultitaskVariationalStrategy.variational_distribution": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "property": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.independent_multitask_variational_strategy.IndependentMultitaskVariationalStrategy.variational_params_initialized": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "property": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.independent_multitask_variational_strategy.MultitaskVariationalStrategy": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "gpytorch.variational.independent_multitask_variational_strategy.IndependentMultitaskVariationalStrategy": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.variational.independent_multitask_variational_strategy.MultitaskVariationalStrategy.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      79
     ]
    },
    "gpytorch.variational.independent_multitask_variational_strategy.warnings": {
     "line number": [
      77
     ]
    },
    "super": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.independent_multitask_variational_strategy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "gpytorch.variational.lmc_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.lmc_variational_strategy.LMCVariationalStrategy": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.variational.lmc_variational_strategy.LMCVariationalStrategy.__call__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "KroneckerProductLazyTensor": {
     "line number": [
      139
     ]
    },
    "MatmulLazyTensor": {
     "line number": [
      138
     ]
    },
    "MultitaskMultivariateNormal": {
     "line number": [
      146
     ]
    },
    "len": {
     "line number": [
      126,
      127
     ]
    },
    "range": {
     "line number": [
      131,
      131,
      133,
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.lmc_variational_strategy.LMCVariationalStrategy.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      90,
      92
     ]
    },
    "gpytorch.variational.lmc_variational_strategy.torch": {
     "line number": [
      102,
      105,
      106
     ]
    },
    "list": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.lmc_variational_strategy.LMCVariationalStrategy.kl_divergence": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "super": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.lmc_variational_strategy.LMCVariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "property": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.lmc_variational_strategy.LMCVariationalStrategy.variational_distribution": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "property": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.lmc_variational_strategy.LMCVariationalStrategy.variational_params_initialized": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "property": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.lmc_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.mean_field_variational_distribution": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.mean_field_variational_distribution.MeanFieldVariationalDistribution": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "gpytorch.variational.mean_field_variational_distribution.MeanFieldVariationalDistribution.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "gpytorch.variational.mean_field_variational_distribution.torch": {
     "line number": [
      24,
      26,
      27,
      31,
      32
     ]
    },
    "super": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.mean_field_variational_distribution.MeanFieldVariationalDistribution.forward": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      47
     ]
    },
    "MultivariateNormal": {
     "line number": [
      48
     ]
    },
    "gpytorch.variational.mean_field_variational_distribution.torch": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.mean_field_variational_distribution.MeanFieldVariationalDistribution.initialize_variational_distribution": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "gpytorch.variational.mean_field_variational_distribution.torch": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.mean_field_variational_distribution.MeanFieldVariationalDistribution.variational_stddev": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "gpytorch.variational.mean_field_variational_distribution.torch": {
     "line number": [
      39
     ]
    },
    "property": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.mean_field_variational_distribution.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.natural_variational_distribution": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.natural_variational_distribution.NaturalVariationalDistribution": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "gpytorch.variational.natural_variational_distribution._NaturalVariationalDistribution": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.variational.natural_variational_distribution.NaturalVariationalDistribution.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "gpytorch.variational.natural_variational_distribution.torch": {
     "line number": [
      49,
      51,
      52,
      57,
      58
     ]
    },
    "super": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.natural_variational_distribution.NaturalVariationalDistribution.forward": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "CholLazyTensor": {
     "line number": [
      62
     ]
    },
    "MultivariateNormal": {
     "line number": [
      62
     ]
    },
    "TriangularLazyTensor": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.natural_variational_distribution.NaturalVariationalDistribution.initialize_variational_distribution": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "gpytorch.variational.natural_variational_distribution.torch": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.natural_variational_distribution._NaturalToMuVarSqrt": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "gpytorch.variational.natural_variational_distribution.torch": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.variational.natural_variational_distribution._NaturalToMuVarSqrt._backward": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "gpytorch.variational.natural_variational_distribution._cholesky_backward": {
     "line number": [
      137
     ]
    },
    "staticmethod": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.natural_variational_distribution._NaturalToMuVarSqrt._forward": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      100,
      102
     ]
    },
    "gpytorch.variational.natural_variational_distribution._triangular_inverse": {
     "line number": [
      109
     ]
    },
    "psd_safe_cholesky": {
     "line number": [
      99,
      114
     ]
    },
    "staticmethod": {
     "line number": [
      96
     ]
    },
    "str": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.natural_variational_distribution._NaturalToMuVarSqrt.backward": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "gpytorch.variational.natural_variational_distribution._NaturalToMuVarSqrt": {
     "line number": [
      146
     ]
    },
    "gpytorch.variational.natural_variational_distribution._triangular_inverse": {
     "line number": [
      145
     ]
    },
    "staticmethod": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.natural_variational_distribution._NaturalToMuVarSqrt.forward": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "gpytorch.variational.natural_variational_distribution._NaturalToMuVarSqrt": {
     "line number": [
      118
     ]
    },
    "staticmethod": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.natural_variational_distribution._NaturalVariationalDistribution": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.variational.natural_variational_distribution.abc": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.variational.natural_variational_distribution._cholesky_backward": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "gpytorch.variational.natural_variational_distribution._phi_for_cholesky_": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.natural_variational_distribution._phi_for_cholesky_": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "gpytorch.variational.natural_variational_distribution._triangular_inverse": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "gpytorch.variational.natural_variational_distribution.torch": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.natural_variational_distribution.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "gpytorch.variational.natural_variational_distribution.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.orthogonally_decoupled_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.orthogonally_decoupled_variational_strategy.OrthogonallyDecoupledVariationalStrategy": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "gpytorch.variational.orthogonally_decoupled_variational_strategy.OrthogonallyDecoupledVariationalStrategy.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      51
     ]
    },
    "isinstance": {
     "line number": [
      50
     ]
    },
    "super": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.orthogonally_decoupled_variational_strategy.OrthogonallyDecoupledVariationalStrategy.forward": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "MultivariateNormal": {
     "line number": [
      81,
      90
     ]
    },
    "NotImplementedError": {
     "line number": [
      69
     ]
    },
    "add_to_cache": {
     "line number": [
      82
     ]
    },
    "gpytorch.variational.orthogonally_decoupled_variational_strategy.torch": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.orthogonally_decoupled_variational_strategy.OrthogonallyDecoupledVariationalStrategy.kl_divergence": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "gpytorch.variational.orthogonally_decoupled_variational_strategy.OrthogonallyDecoupledVariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "MultivariateNormal": {
     "line number": [
      64
     ]
    },
    "cached": {
     "line number": [
      61
     ]
    },
    "property": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.orthogonally_decoupled_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.tril_natural_variational_distribution": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.tril_natural_variational_distribution.TrilNaturalVariationalDistribution": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "gpytorch.variational.tril_natural_variational_distribution.TrilNaturalVariationalDistribution.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "gpytorch.variational.tril_natural_variational_distribution.torch": {
     "line number": [
      47,
      49,
      50,
      55,
      56
     ]
    },
    "super": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.tril_natural_variational_distribution.TrilNaturalVariationalDistribution.forward": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "CholLazyTensor": {
     "line number": [
      60
     ]
    },
    "MultivariateNormal": {
     "line number": [
      60
     ]
    },
    "TriangularLazyTensor": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.tril_natural_variational_distribution.TrilNaturalVariationalDistribution.initialize_variational_distribution": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "_triangular_inverse": {
     "line number": [
      65
     ]
    },
    "gpytorch.variational.tril_natural_variational_distribution.torch": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.tril_natural_variational_distribution._TrilNaturalToMuVarSqrt": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "gpytorch.variational.tril_natural_variational_distribution.torch": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "class"
 },
 "gpytorch.variational.tril_natural_variational_distribution._TrilNaturalToMuVarSqrt._forward": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "_triangular_inverse": {
     "line number": [
      77
     ]
    },
    "staticmethod": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.tril_natural_variational_distribution._TrilNaturalToMuVarSqrt.backward": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "_phi_for_cholesky_": {
     "line number": [
      116
     ]
    },
    "staticmethod": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.tril_natural_variational_distribution._TrilNaturalToMuVarSqrt.forward": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "gpytorch.variational.tril_natural_variational_distribution._TrilNaturalToMuVarSqrt": {
     "line number": [
      84
     ]
    },
    "staticmethod": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.tril_natural_variational_distribution.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.unwhitened_variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.unwhitened_variational_strategy.UnwhitenedVariationalStrategy": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "gpytorch.variational.unwhitened_variational_strategy.UnwhitenedVariationalStrategy._cholesky_factor": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "TriangularLazyTensor": {
     "line number": [
      52
     ]
    },
    "cached": {
     "line number": [
      48
     ]
    },
    "delazify": {
     "line number": [
      51
     ]
    },
    "psd_safe_cholesky": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.unwhitened_variational_strategy.UnwhitenedVariationalStrategy.forward": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "CholLazyTensor": {
     "line number": [
      87
     ]
    },
    "DiagLazyTensor": {
     "line number": [
      128
     ]
    },
    "MultivariateNormal": {
     "line number": [
      67,
      96,
      112,
      137
     ]
    },
    "PsdSumLazyTensor": {
     "line number": [
      134
     ]
    },
    "RootLazyTensor": {
     "line number": [
      134
     ]
    },
    "RuntimeError": {
     "line number": [
      65
     ]
    },
    "ZeroLazyTensor": {
     "line number": [
      95
     ]
    },
    "_mul_broadcast_shape": {
     "line number": [
      103
     ]
    },
    "add_to_cache": {
     "line number": [
      113
     ]
    },
    "gpytorch.variational.unwhitened_variational_strategy.math": {
     "line number": [
      128
     ]
    },
    "gpytorch.variational.unwhitened_variational_strategy.torch": {
     "line number": [
      63,
      71,
      92,
      119,
      121,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.unwhitened_variational_strategy.UnwhitenedVariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "MultivariateNormal": {
     "line number": [
      58
     ]
    },
    "cached": {
     "line number": [
      55
     ]
    },
    "property": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.unwhitened_variational_strategy.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "gpytorch.variational.unwhitened_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.variational_strategy": {
  "data": {},
  "type": "module"
 },
 "gpytorch.variational.variational_strategy.VariationalStrategy": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "gpytorch.variational.variational_strategy.VariationalStrategy.__call__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "RootLazyTensor": {
     "line number": [
      155
     ]
    },
    "clear_cache_hook": {
     "line number": [
      163
     ]
    },
    "gpytorch.variational.variational_strategy.torch": {
     "line number": [
      140
     ]
    },
    "self": {
     "line number": [
      142,
      163
     ]
    },
    "self._cholesky_factor": {
     "line number": [
      144
     ]
    },
    "self._variational_distribution.initialize_variational_distribution": {
     "line number": [
      157
     ]
    },
    "self._variational_distribution.mean_init_std": {
     "line number": [
      147,
      148,
      160
     ]
    },
    "self.inducing_points": {
     "line number": [
      142
     ]
    },
    "self.updated_strategy.fill_": {
     "line number": [
      166
     ]
    },
    "self.variational_distribution": {
     "line number": [
      151
     ]
    },
    "super": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.variational_strategy.VariationalStrategy.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "gpytorch.variational.variational_strategy._ensure_updated_strategy_flag_set": {
     "line number": [
      68
     ]
    },
    "gpytorch.variational.variational_strategy.torch": {
     "line number": [
      67
     ]
    },
    "super": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.variational_strategy.VariationalStrategy._cholesky_factor": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "TriangularLazyTensor": {
     "line number": [
      73
     ]
    },
    "cached": {
     "line number": [
      70
     ]
    },
    "delazify": {
     "line number": [
      72
     ]
    },
    "psd_safe_cholesky": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.variational_strategy.VariationalStrategy.forward": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "MatmulLazyTensor": {
     "line number": [
      132
     ]
    },
    "MultivariateNormal": {
     "line number": [
      136
     ]
    },
    "SumLazyTensor": {
     "line number": [
      122,
      130
     ]
    },
    "gpytorch.variational.variational_strategy.torch": {
     "line number": [
      89
     ]
    },
    "pop_from_cache_ignore_args": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.variational_strategy.VariationalStrategy.prior_distribution": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "DiagLazyTensor": {
     "line number": [
      84
     ]
    },
    "MultivariateNormal": {
     "line number": [
      84
     ]
    },
    "cached": {
     "line number": [
      76
     ]
    },
    "gpytorch.variational.variational_strategy.torch": {
     "line number": [
      78,
      83
     ]
    },
    "property": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.variational_strategy._ensure_updated_strategy_flag_set": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "gpytorch.variational.variational_strategy.torch": {
     "line number": [
      22
     ]
    },
    "gpytorch.variational.variational_strategy.warnings": {
     "line number": [
      23
     ]
    },
    "list": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "gpytorch.variational.variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "gpytorch.variational.variational_strategy.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test": {
  "data": {},
  "type": "module"
 },
 "test.constraints": {
  "data": {},
  "type": "module"
 },
 "test.constraints.test_constraints": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      228
     ]
    },
    "test.constraints.test_constraints.unittest": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "module"
 },
 "test.constraints.test_constraints.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.constraints.test_constraints.ExactGPModel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "test.constraints.test_constraints.ExactGPModel.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "super": {
     "line number": [
      16
     ]
    },
    "test.constraints.test_constraints.ExactGPModel": {
     "line number": [
      16
     ]
    },
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      17,
      18,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.ExactGPModel.forward": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestConstraintNaming": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      199
     ]
    },
    "test.constraints.test_constraints.unittest": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "class"
 },
 "test.constraints.test_constraints.TestConstraintNaming.test_constraint_by_name": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "test.constraints.test_constraints.ExactGPModel": {
     "line number": [
      202
     ]
    },
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      201,
      205,
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestConstraintNaming.test_named_parameters_and_constraints": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "test.constraints.test_constraints.ExactGPModel": {
     "line number": [
      215
     ]
    },
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      214,
      219,
      223,
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestGreaterThan": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      73
     ]
    },
    "test.constraints.test_constraints.unittest": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "class"
 },
 "test.constraints.test_constraints.TestGreaterThan.test_inverse_transform_float_greater_than": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      97
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestGreaterThan.test_inverse_transform_tensor_greater_than": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      106
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestGreaterThan.test_transform_float_greater_than": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      75
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      77
     ]
    },
    "torch.nn.functional.softplus": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestGreaterThan.test_transform_tensor_greater_than": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      85
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      87
     ]
    },
    "torch.nn.functional.softplus": {
     "line number": [
      91,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestInterval": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      26
     ]
    },
    "test.constraints.test_constraints.unittest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "test.constraints.test_constraints.TestInterval.test_initial_value": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      68,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestInterval.test_inverse_transform_float_bounds": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      38
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestInterval.test_inverse_transform_tensor_bounds": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      59
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      59,
      59,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestInterval.test_transform_float_bounds": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      28
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      30
     ]
    },
    "torch.sigmoid": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestInterval.test_transform_tensor_bounds": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      47
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      47,
      47,
      49
     ]
    },
    "torch.sigmoid": {
     "line number": [
      53,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestLessThan": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      115
     ]
    },
    "test.constraints.test_constraints.unittest": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "class"
 },
 "test.constraints.test_constraints.TestLessThan.test_inverse_transform_float_less_than": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      139
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestLessThan.test_inverse_transform_tensor_less_than": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      148
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestLessThan.test_transform_float_less_than": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      117
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      119
     ]
    },
    "torch.nn.functional.softplus": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestLessThan.test_transform_tensor_less_than": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      127
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      129
     ]
    },
    "torch.nn.functional.softplus": {
     "line number": [
      133,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestPositive": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      157
     ]
    },
    "test.constraints.test_constraints.unittest": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "class"
 },
 "test.constraints.test_constraints.TestPositive.test_inverse_transform_float_positive": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      181
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestPositive.test_inverse_transform_tensor_positive": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      190
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestPositive.test_transform_float_positive": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      159
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      161
     ]
    },
    "torch.nn.functional.softplus": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.TestPositive.test_transform_tensor_positive": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "test.constraints.test_constraints.gpytorch": {
     "line number": [
      169
     ]
    },
    "test.constraints.test_constraints.torch": {
     "line number": [
      171
     ]
    },
    "torch.nn.functional.softplus": {
     "line number": [
      175,
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "test.constraints.test_constraints.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.constraints.test_constraints.sigmoid": {
  "data": {
   "shadows": "torch.sigmoid"
  },
  "type": "import"
 },
 "test.constraints.test_constraints.softplus": {
  "data": {
   "shadows": "torch.nn.functional.softplus"
  },
  "type": "import"
 },
 "test.constraints.test_constraints.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.constraints.test_constraints.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.distributions": {
  "data": {},
  "type": "module"
 },
 "test.distributions.test_delta": {
  "data": {},
  "type": "module"
 },
 "test.distributions.test_delta.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.distributions.test_delta.TestDelta": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      13
     ]
    },
    "test.distributions.test_delta.unittest": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "test.distributions.test_delta.TestDelta.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "test.distributions.test_delta.torch": {
     "line number": [
      15,
      16,
      18,
      19,
      20,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_delta.TestDelta.test_batch_log_prob": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "float": {
     "line number": [
      36
     ]
    },
    "gpytorch.distributions.Delta": {
     "line number": [
      33,
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_delta.TestDelta.test_batch_log_prob_shape": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "gpytorch.distributions.Delta": {
     "line number": [
      39,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_delta.TestDelta.test_log_prob_sum": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "gpytorch.distributions.Delta": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_delta.TestDelta.test_mean_and_var": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "gpytorch.distributions.Delta": {
     "line number": [
      43
     ]
    },
    "numpy.mean": {
     "line number": [
      44
     ]
    },
    "numpy.var": {
     "line number": [
      45
     ]
    },
    "range": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_delta.dist": {
  "data": {
   "shadows": "gpytorch.distributions"
  },
  "type": "import"
 },
 "test.distributions.test_delta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "test.distributions.test_delta.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.distributions.test_delta.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      297
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.unittest": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "module"
 },
 "test.distributions.test_multitask_multivariate_normal.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      16
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.unittest": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.setUp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "test.distributions.test_multitask_multivariate_normal.os": {
     "line number": [
      18,
      18
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.random": {
     "line number": [
      23
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      19,
      20,
      21,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.tearDown": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      26
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_from_independent_mvns": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal.from_independent_mvns": {
     "line number": [
      253,
      268
     ]
    },
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      247,
      262
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      249,
      264
     ]
    },
    "list": {
     "line number": [
      256,
      257,
      269,
      270
     ]
    },
    "range": {
     "line number": [
      251,
      266
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      241,
      241,
      242,
      242,
      248,
      249,
      263,
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_from_independent_mvns_cuda": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      274
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_log_prob": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      186,
      195
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      186,
      195
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.math": {
     "line number": [
      187,
      187,
      196,
      196
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      179,
      179,
      180,
      180,
      181,
      182,
      190,
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_log_prob_cuda": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      201
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_from_batch": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      209,
      220
     ]
    },
    "gpytorch.distributions.MultitaskMultivariateNormal.from_batch_mvn": {
     "line number": [
      208,
      219
     ]
    },
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      207,
      218
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      207,
      218
     ]
    },
    "isinstance": {
     "line number": [
      209,
      220
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      205,
      206,
      210,
      211,
      212,
      216,
      217,
      221,
      222,
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_from_repeat": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      232
     ]
    },
    "gpytorch.distributions.MultitaskMultivariateNormal.from_repeated_mvn": {
     "line number": [
      231
     ]
    },
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      230
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      230
     ]
    },
    "isinstance": {
     "line number": [
      232
     ]
    },
    "range": {
     "line number": [
      236
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      228,
      229,
      233,
      234,
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_multivariate_normal": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      50,
      81
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      43,
      43,
      44,
      44,
      45,
      46,
      51,
      52,
      53,
      54,
      55,
      57,
      58,
      60,
      61,
      63,
      64,
      67,
      69,
      70,
      71,
      73,
      74,
      75,
      76,
      76,
      77,
      77,
      82,
      83,
      84,
      85,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_multivariate_normal_batch": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      101,
      132
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      94,
      94,
      95,
      95,
      96,
      97,
      100,
      102,
      103,
      104,
      105,
      106,
      108,
      109,
      111,
      112,
      114,
      115,
      116,
      116,
      117,
      118,
      119,
      120,
      121,
      122,
      124,
      125,
      126,
      127,
      127,
      128,
      128,
      131,
      133,
      134,
      135,
      136,
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_multivariate_normal_batch_cuda": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      141
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_multivariate_normal_broadcasting": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      290
     ]
    },
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      281,
      287,
      294
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      278,
      279,
      282,
      284,
      285,
      288,
      291,
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_multivariate_normal_cuda": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      90
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_multivariate_normal_exceptions": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      34
     ]
    },
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      35
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      30,
      30,
      31,
      31,
      32,
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multitask_multivariate_normal_exceptions_cuda": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      39
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multivariate_normal_batch_correlated_samples": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      167
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      162,
      162,
      163,
      163,
      164,
      165,
      166,
      168,
      169,
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multivariate_normal_batch_correlated_samples_cuda": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      175
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multivariate_normal_correlated_samples": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      150
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      145,
      145,
      146,
      146,
      147,
      148,
      151,
      152,
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.TestMultiTaskMultivariateNormal.test_multivariate_normal_correlated_samples_cuda": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      158
     ]
    },
    "test.distributions.test_multitask_multivariate_normal.torch": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multitask_multivariate_normal.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.distributions.test_multitask_multivariate_normal.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      320
     ]
    },
    "test.distributions.test_multivariate_normal.unittest": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "module"
 },
 "test.distributions.test_multivariate_normal.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.LazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.LazyTensor"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.RootLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.RootLazyTensor"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.TMultivariateNormal": {
  "data": {
   "shadows": "torch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      15
     ]
    },
    "test.distributions.test_multivariate_normal.unittest": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_base_sample_shape": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      309
     ]
    },
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      302,
      314
     ]
    },
    "gpytorch.lazy.RootLazyTensor": {
     "line number": [
      301
     ]
    },
    "gpytorch.lazy.lazify": {
     "line number": [
      301,
      313
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      300,
      302,
      305,
      305,
      306,
      309,
      309,
      314,
      316,
      316,
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_getitem": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      275
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      272,
      274,
      279,
      283,
      285,
      288,
      292,
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_kl_divergence": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      249,
      250,
      251
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      249,
      250,
      251
     ]
    },
    "test.distributions.test_multivariate_normal.math": {
     "line number": [
      247,
      262
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      242,
      242,
      243,
      243,
      244,
      246,
      253,
      257,
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_kl_divergence_cuda": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      267
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_log_prob": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      222,
      230
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      222,
      230
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      216,
      216,
      217,
      217,
      218,
      219,
      220,
      223,
      226,
      227,
      228,
      232
     ]
    },
    "torch.distributions.MultivariateNormal": {
     "line number": [
      223,
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_log_prob_cuda": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      238
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_batch_correlated_samples": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      204
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      204
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      200,
      200,
      201,
      201,
      202,
      203,
      203,
      205,
      206,
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_batch_correlated_samples_cuda": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      212
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_batch_lazy": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      145
     ]
    },
    "gpytorch.lazy.LazyTensor": {
     "line number": [
      147
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      145
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      140,
      140,
      141,
      141,
      142,
      143,
      143,
      144,
      146,
      148,
      174,
      175,
      175,
      176,
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_batch_lazy_cuda": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      180
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_batch_non_lazy": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      59
     ]
    },
    "gpytorch.lazy.LazyTensor": {
     "line number": [
      63
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      55,
      55,
      56,
      56,
      57,
      58,
      58,
      62,
      65,
      75,
      76,
      77,
      79,
      80,
      85,
      86,
      86,
      87,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_batch_non_lazy_cuda": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      91
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_correlated_samples": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      188
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      188
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      184,
      184,
      185,
      185,
      186,
      187,
      187,
      189,
      190,
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_correlated_samples_cuda": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      196
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_lazy": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      100
     ]
    },
    "gpytorch.lazy.LazyTensor": {
     "line number": [
      102
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      100
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      95,
      95,
      96,
      96,
      97,
      98,
      98,
      99,
      101,
      103,
      130,
      131,
      131,
      132,
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_lazy_cuda": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      136
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_non_lazy": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      23
     ]
    },
    "gpytorch.lazy.LazyTensor": {
     "line number": [
      25
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      19,
      19,
      20,
      20,
      21,
      22,
      22,
      24,
      26,
      38,
      39,
      40,
      45,
      46,
      46,
      47,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.TestMultivariateNormal.test_multivariate_normal_non_lazy_cuda": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      51
     ]
    },
    "test.distributions.test_multivariate_normal.torch": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "test.distributions.test_multivariate_normal.lazify": {
  "data": {
   "shadows": "gpytorch.lazy.lazify"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.distributions.test_multivariate_normal.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples": {
  "data": {},
  "type": "module"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      86
     ]
    },
    "test.examples.test_batch_decoupled_ppgpr_regression.unittest": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.SVGPRegressionModel": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.models.ApproximateGP": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "super": {
     "line number": [
      30
     ]
    },
    "test.examples.test_batch_decoupled_ppgpr_regression.SVGPRegressionModel": {
     "line number": [
      30
     ]
    },
    "test.examples.test_batch_decoupled_ppgpr_regression.gpytorch": {
     "line number": [
      23,
      26,
      31,
      32,
      33
     ]
    },
    "test.examples.test_batch_decoupled_ppgpr_regression.torch": {
     "line number": [
      31,
      33,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.SVGPRegressionModel.forward": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "test.examples.test_batch_decoupled_ppgpr_regression.gpytorch": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.TestPPGPRRegression": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      44
     ]
    },
    "test.examples.test_batch_decoupled_ppgpr_regression.unittest": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.TestPPGPRRegression.test_model": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      49
     ]
    },
    "len": {
     "line number": [
      51
     ]
    },
    "likelihood": {
     "line number": [
      78
     ]
    },
    "mll": {
     "line number": [
      64
     ]
    },
    "model": {
     "line number": [
      63,
      78
     ]
    },
    "model.eval": {
     "line number": [
      76
     ]
    },
    "model.parameters": {
     "line number": [
      68
     ]
    },
    "range": {
     "line number": [
      61
     ]
    },
    "test.examples.test_batch_decoupled_ppgpr_regression.SVGPRegressionModel": {
     "line number": [
      50
     ]
    },
    "test.examples.test_batch_decoupled_ppgpr_regression.gpytorch": {
     "line number": [
      51,
      58
     ]
    },
    "test.examples.test_batch_decoupled_ppgpr_regression.torch": {
     "line number": [
      50,
      50,
      79,
      79
     ]
    },
    "test.examples.test_batch_decoupled_ppgpr_regression.train_data": {
     "line number": [
      48
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      56
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      58
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.train_data": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "test.examples.test_batch_decoupled_ppgpr_regression.math": {
     "line number": [
      17
     ]
    },
    "test.examples.test_batch_decoupled_ppgpr_regression.torch": {
     "line number": [
      16,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_decoupled_ppgpr_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      234
     ]
    },
    "test.examples.test_batch_gp_regression.math": {
     "line number": [
      20,
      23,
      26,
      29
     ]
    },
    "test.examples.test_batch_gp_regression.test_x1": {
     "line number": [
      23,
      34
     ]
    },
    "test.examples.test_batch_gp_regression.test_x2": {
     "line number": [
      29,
      34
     ]
    },
    "test.examples.test_batch_gp_regression.torch": {
     "line number": [
      19,
      20,
      21,
      22,
      23,
      25,
      26,
      27,
      28,
      29,
      32,
      33,
      34
     ]
    },
    "test.examples.test_batch_gp_regression.train_x1": {
     "line number": [
      20,
      32
     ]
    },
    "test.examples.test_batch_gp_regression.train_x2": {
     "line number": [
      26,
      32
     ]
    },
    "test.examples.test_batch_gp_regression.train_y1": {
     "line number": [
      21,
      21,
      33
     ]
    },
    "test.examples.test_batch_gp_regression.train_y2": {
     "line number": [
      27,
      27,
      33
     ]
    },
    "test.examples.test_batch_gp_regression.unittest": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_batch_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.ExactGPModel": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "test.examples.test_batch_gp_regression.gpytorch": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_batch_gp_regression.ExactGPModel.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      42
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      41
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      40
     ]
    },
    "super": {
     "line number": [
      39
     ]
    },
    "test.examples.test_batch_gp_regression.ExactGPModel": {
     "line number": [
      39
     ]
    },
    "test.examples.test_batch_gp_regression.gpytorch": {
     "line number": [
      40,
      44,
      49
     ]
    },
    "test.examples.test_batch_gp_regression.torch": {
     "line number": [
      38,
      45,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_gp_regression.ExactGPModel.forward": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.TestBatchGPRegression": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "test.examples.test_batch_gp_regression.unittest": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_batch_gp_regression.TestBatchGPRegression.setUp": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "test.examples.test_batch_gp_regression.os": {
     "line number": [
      60,
      60
     ]
    },
    "test.examples.test_batch_gp_regression.random": {
     "line number": [
      65
     ]
    },
    "test.examples.test_batch_gp_regression.torch": {
     "line number": [
      61,
      62,
      63,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_gp_regression.TestBatchGPRegression.tearDown": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      68
     ]
    },
    "test.examples.test_batch_gp_regression.torch": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_gp_regression.TestBatchGPRegression.test_train_on_batch_test_on_batch": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      130,
      131,
      139,
      153,
      159,
      169,
      175
     ]
    },
    "gp_model.eval": {
     "line number": [
      149
     ]
    },
    "gp_model.parameters": {
     "line number": [
      136,
      144
     ]
    },
    "gp_model.train": {
     "line number": [
      134
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      126
     ]
    },
    "likelihood": {
     "line number": [
      126,
      130,
      131,
      153,
      159,
      169,
      175
     ]
    },
    "likelihood.eval": {
     "line number": [
      150
     ]
    },
    "likelihood.train": {
     "line number": [
      135
     ]
    },
    "mll": {
     "line number": [
      131,
      140
     ]
    },
    "range": {
     "line number": [
      137
     ]
    },
    "test.examples.test_batch_gp_regression.ExactGPModel": {
     "line number": [
      130
     ]
    },
    "test.examples.test_batch_gp_regression.gpytorch": {
     "line number": [
      127,
      131
     ]
    },
    "test.examples.test_batch_gp_regression.test_x1": {
     "line number": [
      153,
      174
     ]
    },
    "test.examples.test_batch_gp_regression.test_x12": {
     "line number": [
      159,
      168
     ]
    },
    "test.examples.test_batch_gp_regression.test_y1": {
     "line number": [
      155,
      162
     ]
    },
    "test.examples.test_batch_gp_regression.test_y2": {
     "line number": [
      163
     ]
    },
    "test.examples.test_batch_gp_regression.torch": {
     "line number": [
      127,
      127,
      128,
      130,
      155,
      155,
      162,
      162,
      163,
      163,
      168,
      174
     ]
    },
    "test.examples.test_batch_gp_regression.train_x12": {
     "line number": [
      130,
      139,
      140
     ]
    },
    "test.examples.test_batch_gp_regression.train_y12": {
     "line number": [
      130,
      140
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_gp_regression.TestBatchGPRegression.test_train_on_batch_test_on_batch_shared_hypers_over_batch": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      184,
      185,
      193,
      207,
      213,
      223,
      229
     ]
    },
    "gp_model.eval": {
     "line number": [
      203
     ]
    },
    "gp_model.parameters": {
     "line number": [
      190,
      198
     ]
    },
    "gp_model.train": {
     "line number": [
      188
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      181
     ]
    },
    "likelihood": {
     "line number": [
      181,
      184,
      185,
      207,
      213,
      223,
      229
     ]
    },
    "likelihood.eval": {
     "line number": [
      204
     ]
    },
    "likelihood.train": {
     "line number": [
      189
     ]
    },
    "mll": {
     "line number": [
      185,
      194
     ]
    },
    "range": {
     "line number": [
      191
     ]
    },
    "test.examples.test_batch_gp_regression.ExactGPModel": {
     "line number": [
      184
     ]
    },
    "test.examples.test_batch_gp_regression.gpytorch": {
     "line number": [
      182,
      185
     ]
    },
    "test.examples.test_batch_gp_regression.test_x1": {
     "line number": [
      207,
      228
     ]
    },
    "test.examples.test_batch_gp_regression.test_x12": {
     "line number": [
      213,
      222
     ]
    },
    "test.examples.test_batch_gp_regression.test_y1": {
     "line number": [
      209,
      216
     ]
    },
    "test.examples.test_batch_gp_regression.test_y2": {
     "line number": [
      217
     ]
    },
    "test.examples.test_batch_gp_regression.torch": {
     "line number": [
      182,
      182,
      209,
      209,
      216,
      216,
      217,
      217,
      222,
      228
     ]
    },
    "test.examples.test_batch_gp_regression.train_x12": {
     "line number": [
      184,
      193,
      194
     ]
    },
    "test.examples.test_batch_gp_regression.train_y12": {
     "line number": [
      184,
      194
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_gp_regression.TestBatchGPRegression.test_train_on_single_set_test_on_batch": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      84,
      98,
      104,
      114,
      120
     ]
    },
    "gp_model.eval": {
     "line number": [
      94
     ]
    },
    "gp_model.parameters": {
     "line number": [
      89
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      73
     ]
    },
    "likelihood": {
     "line number": [
      98,
      104,
      114,
      120
     ]
    },
    "mll": {
     "line number": [
      85
     ]
    },
    "range": {
     "line number": [
      82
     ]
    },
    "test.examples.test_batch_gp_regression.ExactGPModel": {
     "line number": [
      74
     ]
    },
    "test.examples.test_batch_gp_regression.gpytorch": {
     "line number": [
      75
     ]
    },
    "test.examples.test_batch_gp_regression.test_x1": {
     "line number": [
      98,
      113
     ]
    },
    "test.examples.test_batch_gp_regression.test_x12": {
     "line number": [
      104,
      119
     ]
    },
    "test.examples.test_batch_gp_regression.test_y1": {
     "line number": [
      100,
      107
     ]
    },
    "test.examples.test_batch_gp_regression.test_y2": {
     "line number": [
      108
     ]
    },
    "test.examples.test_batch_gp_regression.torch": {
     "line number": [
      100,
      100,
      107,
      107,
      108,
      108,
      113,
      119
     ]
    },
    "test.examples.test_batch_gp_regression.train_x1": {
     "line number": [
      74,
      84
     ]
    },
    "test.examples.test_batch_gp_regression.train_y1": {
     "line number": [
      74,
      85
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.test_x1": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.test_x12": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.test_x2": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.test_y1": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.test_y2": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_batch_gp_regression.train_x1": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.train_x12": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.train_x2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.train_y1": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.train_y12": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.train_y2": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_batch_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      186
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.math": {
     "line number": [
      20,
      20,
      22,
      22,
      25,
      25,
      27,
      27
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.test_x1": {
     "line number": [
      22,
      22,
      32
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.test_x2": {
     "line number": [
      27,
      27,
      32
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.torch": {
     "line number": [
      19,
      20,
      20,
      20,
      21,
      22,
      22,
      22,
      24,
      25,
      25,
      25,
      26,
      27,
      27,
      27,
      30,
      31,
      32
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.train_x1": {
     "line number": [
      20,
      20,
      30
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.train_x2": {
     "line number": [
      25,
      25,
      30
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.train_y1": {
     "line number": [
      31
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.train_y2": {
     "line number": [
      31
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.unittest": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_batch_multitask_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.ExactGPModel": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "test.examples.test_batch_multitask_gp_regression.gpytorch": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_batch_multitask_gp_regression.ExactGPModel.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "gpytorch.kernels.MultitaskKernel": {
     "line number": [
      41
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      42
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      39
     ]
    },
    "gpytorch.means.MultitaskMean": {
     "line number": [
      38
     ]
    },
    "super": {
     "line number": [
      37
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.ExactGPModel": {
     "line number": [
      37
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.gpytorch": {
     "line number": [
      39,
      44
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.torch": {
     "line number": [
      36,
      44,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_multitask_gp_regression.ExactGPModel.forward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_multitask_gp_regression.MultitaskGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.MultitaskKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MultitaskKernel"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.MultitaskMean": {
  "data": {
   "shadows": "gpytorch.means.MultitaskMean"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.TestBatchMultitaskGPRegression": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "test.examples.test_batch_multitask_gp_regression.unittest": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_batch_multitask_gp_regression.TestBatchMultitaskGPRegression.setUp": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "test.examples.test_batch_multitask_gp_regression.os": {
     "line number": [
      58,
      58
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.random": {
     "line number": [
      63
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.torch": {
     "line number": [
      59,
      60,
      61,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_multitask_gp_regression.TestBatchMultitaskGPRegression.tearDown": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      66
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.torch": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_multitask_gp_regression.TestBatchMultitaskGPRegression.test_train_on_batch_test_on_batch": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      116,
      117,
      125,
      139
     ]
    },
    "gp_model.eval": {
     "line number": [
      135
     ]
    },
    "gp_model.parameters": {
     "line number": [
      122,
      130
     ]
    },
    "gp_model.train": {
     "line number": [
      120
     ]
    },
    "gpytorch.likelihoods.MultitaskGaussianLikelihood": {
     "line number": [
      111
     ]
    },
    "likelihood": {
     "line number": [
      111,
      116,
      117,
      139
     ]
    },
    "likelihood.eval": {
     "line number": [
      136
     ]
    },
    "likelihood.train": {
     "line number": [
      121
     ]
    },
    "mll": {
     "line number": [
      117,
      126
     ]
    },
    "range": {
     "line number": [
      123
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.ExactGPModel": {
     "line number": [
      116
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.gpytorch": {
     "line number": [
      112,
      117
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.test_x12": {
     "line number": [
      139
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.test_y1": {
     "line number": [
      142
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.test_y2": {
     "line number": [
      143
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.torch": {
     "line number": [
      112,
      112,
      113,
      116,
      142,
      142,
      143,
      143
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.train_x12": {
     "line number": [
      116,
      125
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.train_y12": {
     "line number": [
      116,
      126
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_multitask_gp_regression.TestBatchMultitaskGPRegression.test_train_on_batch_test_on_batch_shared_hypers_over_batch": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      154,
      155,
      163,
      177
     ]
    },
    "gp_model.eval": {
     "line number": [
      173
     ]
    },
    "gp_model.parameters": {
     "line number": [
      160,
      168
     ]
    },
    "gp_model.train": {
     "line number": [
      158
     ]
    },
    "gpytorch.likelihoods.MultitaskGaussianLikelihood": {
     "line number": [
      149
     ]
    },
    "likelihood": {
     "line number": [
      149,
      154,
      155,
      177
     ]
    },
    "likelihood.eval": {
     "line number": [
      174
     ]
    },
    "likelihood.train": {
     "line number": [
      159
     ]
    },
    "mll": {
     "line number": [
      155,
      164
     ]
    },
    "range": {
     "line number": [
      161
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.ExactGPModel": {
     "line number": [
      154
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.gpytorch": {
     "line number": [
      150,
      155
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.test_x12": {
     "line number": [
      177
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.test_y1": {
     "line number": [
      180
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.test_y2": {
     "line number": [
      181
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.torch": {
     "line number": [
      150,
      150,
      151,
      154,
      180,
      180,
      181,
      181
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.train_x12": {
     "line number": [
      154,
      163
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.train_y12": {
     "line number": [
      154,
      164
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_multitask_gp_regression.TestBatchMultitaskGPRegression.test_train_on_single_set_test_on_batch": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      87,
      101
     ]
    },
    "gp_model.eval": {
     "line number": [
      97
     ]
    },
    "gp_model.parameters": {
     "line number": [
      92
     ]
    },
    "gpytorch.likelihoods.MultitaskGaussianLikelihood": {
     "line number": [
      71
     ]
    },
    "likelihood": {
     "line number": [
      101
     ]
    },
    "mll": {
     "line number": [
      88
     ]
    },
    "range": {
     "line number": [
      85
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.ExactGPModel": {
     "line number": [
      74
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.gpytorch": {
     "line number": [
      72,
      75
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.test_x12": {
     "line number": [
      101
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.test_y1": {
     "line number": [
      104
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.test_y2": {
     "line number": [
      105
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.torch": {
     "line number": [
      72,
      72,
      104,
      104,
      105,
      105
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.train_x1": {
     "line number": [
      74,
      87
     ]
    },
    "test.examples.test_batch_multitask_gp_regression.train_y1": {
     "line number": [
      74,
      88
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      80,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_multitask_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.test_x1": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.test_x12": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.test_x2": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.test_y1": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.test_y2": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_batch_multitask_gp_regression.train_x1": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.train_x12": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.train_x2": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.train_y1": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.train_y12": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.train_y2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "test.examples.test_batch_multitask_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      174
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.unittest": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_batch_svgp_gp_regression.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.CholeskyVariationalDistribution": {
  "data": {
   "shadows": "gpytorch.variational.CholeskyVariationalDistribution"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.SVGPRegressionModel": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "gpytorch.models.ApproximateGP": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_batch_svgp_gp_regression.SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "gpytorch.variational.CholeskyVariationalDistribution": {
     "line number": [
      33
     ]
    },
    "gpytorch.variational.VariationalStrategy": {
     "line number": [
      36
     ]
    },
    "super": {
     "line number": [
      39
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.SVGPRegressionModel": {
     "line number": [
      39
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.gpytorch": {
     "line number": [
      40,
      41,
      42,
      42
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.torch": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.SVGPRegressionModel.forward": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "test.examples.test_batch_svgp_gp_regression.gpytorch": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.TestSVGPRegression": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "test.examples.test_batch_svgp_gp_regression.unittest": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_batch_svgp_gp_regression.TestSVGPRegression.setUp": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "test.examples.test_batch_svgp_gp_regression.os": {
     "line number": [
      54,
      54
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.random": {
     "line number": [
      59
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.torch": {
     "line number": [
      55,
      56,
      57,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.TestSVGPRegression.tearDown": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      62
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.torch": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.TestSVGPRegression.test_regression_error": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      67
     ]
    },
    "likelihood": {
     "line number": [
      94
     ]
    },
    "mll": {
     "line number": [
      79
     ]
    },
    "model": {
     "line number": [
      78,
      94
     ]
    },
    "model.eval": {
     "line number": [
      92
     ]
    },
    "model.parameters": {
     "line number": [
      84
     ]
    },
    "range": {
     "line number": [
      76
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.SVGPRegressionModel": {
     "line number": [
      69
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.gpytorch": {
     "line number": [
      70
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.torch": {
     "line number": [
      68,
      95,
      95,
      96,
      96
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.train_data": {
     "line number": [
      66
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.TestSVGPRegression.test_regression_error_cuda": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      140
     ]
    },
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      138
     ]
    },
    "likelihood": {
     "line number": [
      140,
      143,
      167
     ]
    },
    "likelihood.eval": {
     "line number": [
      166
     ]
    },
    "likelihood.parameters": {
     "line number": [
      148,
      160
     ]
    },
    "likelihood.train": {
     "line number": [
      147
     ]
    },
    "mll": {
     "line number": [
      143,
      152
     ]
    },
    "model": {
     "line number": [
      142,
      143,
      151,
      167
     ]
    },
    "model.eval": {
     "line number": [
      165
     ]
    },
    "model.parameters": {
     "line number": [
      148,
      157
     ]
    },
    "model.train": {
     "line number": [
      146
     ]
    },
    "range": {
     "line number": [
      149
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.SVGPRegressionModel": {
     "line number": [
      142
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.gpytorch": {
     "line number": [
      143
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.torch": {
     "line number": [
      136,
      141,
      168,
      168,
      169,
      169
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.train_data": {
     "line number": [
      139
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.TestSVGPRegression.test_regression_error_shared_inducing_locations": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      102
     ]
    },
    "likelihood": {
     "line number": [
      102,
      105,
      129
     ]
    },
    "likelihood.eval": {
     "line number": [
      128
     ]
    },
    "likelihood.parameters": {
     "line number": [
      110,
      122
     ]
    },
    "likelihood.train": {
     "line number": [
      109
     ]
    },
    "mll": {
     "line number": [
      105,
      114
     ]
    },
    "model": {
     "line number": [
      104,
      105,
      113,
      129
     ]
    },
    "model.eval": {
     "line number": [
      127
     ]
    },
    "model.parameters": {
     "line number": [
      110,
      119
     ]
    },
    "model.train": {
     "line number": [
      108
     ]
    },
    "range": {
     "line number": [
      111
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.SVGPRegressionModel": {
     "line number": [
      104
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.gpytorch": {
     "line number": [
      105
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.torch": {
     "line number": [
      103,
      130,
      130,
      131,
      131
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.train_data": {
     "line number": [
      101
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.VariationalStrategy": {
  "data": {
   "shadows": "gpytorch.variational.VariationalStrategy"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_batch_svgp_gp_regression.train_data": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      19,
      20
     ]
    },
    "test.examples.test_batch_svgp_gp_regression.torch": {
     "line number": [
      18,
      19,
      19,
      20,
      20,
      23,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_batch_svgp_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      94
     ]
    },
    "test.examples.test_decoupled_svgp_regression.unittest": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_decoupled_svgp_regression.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.SVGPRegressionModel": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.models.ApproximateGP": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_decoupled_svgp_regression.SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "super": {
     "line number": [
      32
     ]
    },
    "test.examples.test_decoupled_svgp_regression.SVGPRegressionModel": {
     "line number": [
      32
     ]
    },
    "test.examples.test_decoupled_svgp_regression.gpytorch": {
     "line number": [
      23,
      26,
      27,
      28,
      33,
      34,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_decoupled_svgp_regression.SVGPRegressionModel.forward": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "test.examples.test_decoupled_svgp_regression.gpytorch": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_decoupled_svgp_regression.TestSVGPRegression": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      43
     ]
    },
    "test.examples.test_decoupled_svgp_regression.unittest": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_decoupled_svgp_regression.TestSVGPRegression.test_predictive_ll_regression_error": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "test.examples.test_decoupled_svgp_regression.gpytorch": {
     "line number": [
      89,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_decoupled_svgp_regression.TestSVGPRegression.test_regression_error": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      52
     ]
    },
    "len": {
     "line number": [
      54
     ]
    },
    "likelihood": {
     "line number": [
      81
     ]
    },
    "mll": {
     "line number": [
      67
     ]
    },
    "mll_cls": {
     "line number": [
      54
     ]
    },
    "model": {
     "line number": [
      66,
      81
     ]
    },
    "model.eval": {
     "line number": [
      79
     ]
    },
    "model.parameters": {
     "line number": [
      71
     ]
    },
    "range": {
     "line number": [
      64
     ]
    },
    "test.examples.test_decoupled_svgp_regression.SVGPRegressionModel": {
     "line number": [
      53
     ]
    },
    "test.examples.test_decoupled_svgp_regression.gpytorch": {
     "line number": [
      48,
      49,
      61
     ]
    },
    "test.examples.test_decoupled_svgp_regression.torch": {
     "line number": [
      53,
      53,
      82,
      82
     ]
    },
    "test.examples.test_decoupled_svgp_regression.train_data": {
     "line number": [
      51
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      59
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      61
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_decoupled_svgp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_decoupled_svgp_regression.train_data": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "test.examples.test_decoupled_svgp_regression.math": {
     "line number": [
      17
     ]
    },
    "test.examples.test_decoupled_svgp_regression.torch": {
     "line number": [
      16,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_decoupled_svgp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      173
     ]
    },
    "test.examples.test_fixed_noise_fanatasy_updates.unittest": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.ExactGPModel": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "test.examples.test_fixed_noise_fanatasy_updates.gpytorch": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.ExactGPModel.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      23
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      23
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      22
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      22,
      23
     ]
    },
    "math.exp": {
     "line number": [
      23,
      23
     ]
    },
    "super": {
     "line number": [
      21
     ]
    },
    "test.examples.test_fixed_noise_fanatasy_updates.ExactGPModel": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.ExactGPModel.forward": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.FixedGaussianNoise": {
  "data": {
   "shadows": "gpytorch.likelihoods.noise_models.FixedGaussianNoise"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.TestFixedNoiseFantasies": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      31
     ]
    },
    "test.examples.test_fixed_noise_fanatasy_updates.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.TestFixedNoiseFantasies._get_data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      38,
      42
     ]
    },
    "test.examples.test_fixed_noise_fanatasy_updates.torch": {
     "line number": [
      35,
      35,
      37,
      38,
      40,
      41,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.TestFixedNoiseFantasies.test_fixed_noise_fantasy_updates": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "fant_model": {
     "line number": [
      104
     ]
    },
    "gp_model": {
     "line number": [
      72,
      88,
      99
     ]
    },
    "gp_model.eval": {
     "line number": [
      86
     ]
    },
    "gp_model.get_fantasy_model": {
     "line number": [
      102
     ]
    },
    "gp_model.likelihood.noise_covar": {
     "line number": [
      98
     ]
    },
    "gp_model.parameters": {
     "line number": [
      77
     ]
    },
    "gp_model.set_train_data": {
     "line number": [
      83,
      94,
      97
     ]
    },
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood": {
     "line number": [
      55
     ]
    },
    "gpytorch.likelihoods.noise_models.FixedGaussianNoise": {
     "line number": [
      98
     ]
    },
    "likelihood": {
     "line number": [
      88,
      99,
      104
     ]
    },
    "math.exp": {
     "line number": [
      58
     ]
    },
    "mll": {
     "line number": [
      73
     ]
    },
    "range": {
     "line number": [
      69
     ]
    },
    "test.examples.test_fixed_noise_fanatasy_updates.ExactGPModel": {
     "line number": [
      56
     ]
    },
    "test.examples.test_fixed_noise_fanatasy_updates.gpytorch": {
     "line number": [
      57,
      71,
      84,
      84
     ]
    },
    "test.examples.test_fixed_noise_fanatasy_updates.torch": {
     "line number": [
      52,
      53,
      111
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.TestFixedNoiseFantasies.test_fixed_noise_fantasy_updates_batch": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "fant_model": {
     "line number": [
      164,
      165
     ]
    },
    "gp_model": {
     "line number": [
      125,
      126,
      141,
      155,
      160
     ]
    },
    "gp_model.covar_module.base_kernel.initialize": {
     "line number": [
      127
     ]
    },
    "gp_model.cuda": {
     "line number": [
      131
     ]
    },
    "gp_model.eval": {
     "line number": [
      153
     ]
    },
    "gp_model.get_fantasy_model": {
     "line number": [
      164
     ]
    },
    "gp_model.likelihood.noise_covar": {
     "line number": [
      159
     ]
    },
    "gp_model.mean_module.initialize": {
     "line number": [
      128
     ]
    },
    "gp_model.parameters": {
     "line number": [
      137,
      146
     ]
    },
    "gp_model.set_train_data": {
     "line number": [
      158
     ]
    },
    "gp_model.train": {
     "line number": [
      135
     ]
    },
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood": {
     "line number": [
      124
     ]
    },
    "gpytorch.likelihoods.noise_models.FixedGaussianNoise": {
     "line number": [
      159
     ]
    },
    "likelihood": {
     "line number": [
      124,
      125,
      126,
      155,
      160,
      165
     ]
    },
    "likelihood.cuda": {
     "line number": [
      132
     ]
    },
    "likelihood.eval": {
     "line number": [
      154
     ]
    },
    "likelihood.train": {
     "line number": [
      136
     ]
    },
    "math.exp": {
     "line number": [
      127
     ]
    },
    "mll": {
     "line number": [
      126,
      142
     ]
    },
    "range": {
     "line number": [
      138
     ]
    },
    "test.examples.test_fixed_noise_fanatasy_updates.ExactGPModel": {
     "line number": [
      125
     ]
    },
    "test.examples.test_fixed_noise_fanatasy_updates.gpytorch": {
     "line number": [
      126,
      140,
      151
     ]
    },
    "test.examples.test_fixed_noise_fanatasy_updates.torch": {
     "line number": [
      121,
      122
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.TestFixedNoiseFantasies.test_fixed_noise_fantasy_updates_batch_cuda": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      116
     ]
    },
    "test.examples.test_fixed_noise_fanatasy_updates.torch": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.TestFixedNoiseFantasies.test_fixed_noise_fantasy_updates_cuda": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      47
     ]
    },
    "test.examples.test_fixed_noise_fanatasy_updates.torch": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_fixed_noise_fanatasy_updates.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      124
     ]
    },
    "test.examples.test_grid_gp_regression.unittest": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_grid_gp_regression.GPInputWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.GPInputWarning"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.GridGPRegressionModel": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "test.examples.test_grid_gp_regression.gpytorch": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_grid_gp_regression.GridGPRegressionModel.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "super": {
     "line number": [
      37
     ]
    },
    "test.examples.test_grid_gp_regression.GridGPRegressionModel": {
     "line number": [
      37
     ]
    },
    "test.examples.test_grid_gp_regression.gpytorch": {
     "line number": [
      38,
      39,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.GridGPRegressionModel.forward": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "test.examples.test_grid_gp_regression.gpytorch": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.TestGridGPRegression": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "test.examples.test_grid_gp_regression.unittest": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_grid_gp_regression.TestGridGPRegression.setUp": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "test.examples.test_grid_gp_regression.os": {
     "line number": [
      49,
      49
     ]
    },
    "test.examples.test_grid_gp_regression.random": {
     "line number": [
      54
     ]
    },
    "test.examples.test_grid_gp_regression.torch": {
     "line number": [
      50,
      51,
      52,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.TestGridGPRegression.tearDown": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      57
     ]
    },
    "test.examples.test_grid_gp_regression.torch": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.TestGridGPRegression.test_grid_gp_mean_abs_error": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "float": {
     "line number": [
      66
     ]
    },
    "gp_model": {
     "line number": [
      89,
      105
     ]
    },
    "gp_model.eval": {
     "line number": [
      100
     ]
    },
    "gp_model.named_parameters": {
     "line number": [
      95
     ]
    },
    "gpytorch.utils.warnings.GPInputWarning": {
     "line number": [
      103
     ]
    },
    "len": {
     "line number": [
      64,
      65
     ]
    },
    "likelihood": {
     "line number": [
      105
     ]
    },
    "mll": {
     "line number": [
      90
     ]
    },
    "range": {
     "line number": [
      65,
      87
     ]
    },
    "test.examples.test_grid_gp_regression.GridGPRegressionModel": {
     "line number": [
      73
     ]
    },
    "test.examples.test_grid_gp_regression.gpytorch": {
     "line number": [
      72,
      74,
      86
     ]
    },
    "test.examples.test_grid_gp_regression.make_data": {
     "line number": [
      71
     ]
    },
    "test.examples.test_grid_gp_regression.torch": {
     "line number": [
      61,
      61,
      64,
      67,
      106,
      106
     ]
    },
    "test.examples.test_grid_gp_regression.warnings": {
     "line number": [
      103
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.TestGridGPRegression.test_grid_gp_mean_abs_error_2d": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.TestGridGPRegression.test_grid_gp_mean_abs_error_2d_cuda": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      120
     ]
    },
    "test.examples.test_grid_gp_regression.torch": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.TestGridGPRegression.test_grid_gp_mean_abs_error_cuda": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      112
     ]
    },
    "test.examples.test_grid_gp_regression.torch": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.make_data": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "float": {
     "line number": [
      24,
      25
     ]
    },
    "int": {
     "line number": [
      21
     ]
    },
    "pow": {
     "line number": [
      21
     ]
    },
    "range": {
     "line number": [
      22,
      23
     ]
    },
    "test.examples.test_grid_gp_regression.gpytorch": {
     "line number": [
      18
     ]
    },
    "test.examples.test_grid_gp_regression.math": {
     "line number": [
      19,
      26
     ]
    },
    "test.examples.test_grid_gp_regression.torch": {
     "line number": [
      19,
      19,
      21,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_grid_gp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_grid_gp_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      104
     ]
    },
    "math.pi": {
     "line number": [
      21,
      22,
      27,
      28
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.test_x": {
     "line number": [
      27,
      28
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.torch": {
     "line number": [
      18,
      19,
      19,
      20,
      20,
      21,
      21,
      22,
      22,
      24,
      25,
      25,
      26,
      26,
      27,
      28
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.train_x": {
     "line number": [
      21,
      21,
      22,
      22
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.unittest": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_hadamard_multitask_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.HadamardMultitaskGPModel": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "test.examples.test_hadamard_multitask_gp_regression.gpytorch": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_hadamard_multitask_gp_regression.HadamardMultitaskGPModel.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "gpytorch.kernels.IndexKernel": {
     "line number": [
      42
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      37
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      35
     ]
    },
    "gpytorch.priors.LKJCovariancePrior": {
     "line number": [
      41
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      40
     ]
    },
    "math.exp": {
     "line number": [
      40,
      40
     ]
    },
    "super": {
     "line number": [
      33
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.HadamardMultitaskGPModel": {
     "line number": [
      33
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.train_x": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_hadamard_multitask_gp_regression.HadamardMultitaskGPModel.forward": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_hadamard_multitask_gp_regression.IndexKernel": {
  "data": {
   "shadows": "gpytorch.kernels.IndexKernel"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.LKJCovariancePrior": {
  "data": {
   "shadows": "gpytorch.priors.LKJCovariancePrior"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.TestHadamardMultitaskGPRegression": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "test.examples.test_hadamard_multitask_gp_regression.unittest": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_hadamard_multitask_gp_regression.TestHadamardMultitaskGPRegression.setUp": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "test.examples.test_hadamard_multitask_gp_regression.os": {
     "line number": [
      57,
      57
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.random": {
     "line number": [
      62
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.torch": {
     "line number": [
      58,
      59,
      60,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_hadamard_multitask_gp_regression.TestHadamardMultitaskGPRegression.tearDown": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      65
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.torch": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_hadamard_multitask_gp_regression.TestHadamardMultitaskGPRegression.test_multitask_gp_mean_abs_error": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      81,
      93,
      98
     ]
    },
    "gp_model.eval": {
     "line number": [
      91
     ]
    },
    "gp_model.parameters": {
     "line number": [
      86
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      69
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      69
     ]
    },
    "likelihood": {
     "line number": [
      93,
      98
     ]
    },
    "mll": {
     "line number": [
      82
     ]
    },
    "range": {
     "line number": [
      79
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.HadamardMultitaskGPModel": {
     "line number": [
      70
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.gpytorch": {
     "line number": [
      73
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.test_x": {
     "line number": [
      93,
      98
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.test_y1": {
     "line number": [
      94
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.test_y2": {
     "line number": [
      99
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.torch": {
     "line number": [
      71,
      71,
      71,
      81,
      81,
      82,
      94,
      94,
      99,
      99
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.train_x": {
     "line number": [
      71,
      71,
      81,
      81
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.train_y1": {
     "line number": [
      71,
      82
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.train_y2": {
     "line number": [
      71,
      82
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.y1_inds": {
     "line number": [
      71,
      81
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.y1_inds_test": {
     "line number": [
      93
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.y2_inds": {
     "line number": [
      71,
      81
     ]
    },
    "test.examples.test_hadamard_multitask_gp_regression.y2_inds_test": {
     "line number": [
      98
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_hadamard_multitask_gp_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.test_x": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.test_y1": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.test_y2": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.train_x": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.train_y1": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.train_y2": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_hadamard_multitask_gp_regression.y1_inds": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.y1_inds_test": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.y2_inds": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_hadamard_multitask_gp_regression.y2_inds_test": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      100
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.math": {
     "line number": [
      21,
      23,
      24,
      26
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.test_x": {
     "line number": [
      23,
      26
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.test_y1": {
     "line number": [
      30
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.test_y2": {
     "line number": [
      30
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.torch": {
     "line number": [
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      29,
      30
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.train_x": {
     "line number": [
      21,
      24
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.train_y1": {
     "line number": [
      22,
      22,
      29
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.train_y2": {
     "line number": [
      25,
      25,
      29
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.unittest": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_independent_multitask_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.ExactGPModel": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "test.examples.test_independent_multitask_gp_regression.gpytorch": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_independent_multitask_gp_regression.ExactGPModel.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      37
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      37
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      36
     ]
    },
    "super": {
     "line number": [
      35
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.ExactGPModel": {
     "line number": [
      35
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.torch": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_independent_multitask_gp_regression.ExactGPModel.forward": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal.from_batch_mvn": {
     "line number": [
      42
     ]
    },
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_independent_multitask_gp_regression.MultitaskGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.TestIndependentMultitaskGPRegression": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "test.examples.test_independent_multitask_gp_regression.unittest": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_independent_multitask_gp_regression.TestIndependentMultitaskGPRegression.setUp": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "test.examples.test_independent_multitask_gp_regression.os": {
     "line number": [
      47,
      47
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.random": {
     "line number": [
      52
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.torch": {
     "line number": [
      48,
      49,
      50,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_independent_multitask_gp_regression.TestIndependentMultitaskGPRegression.tearDown": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      55
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.torch": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_independent_multitask_gp_regression.TestIndependentMultitaskGPRegression.test_train_and_eval": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      71,
      86
     ]
    },
    "gp_model.eval": {
     "line number": [
      81
     ]
    },
    "gp_model.parameters": {
     "line number": [
      76
     ]
    },
    "gpytorch.likelihoods.MultitaskGaussianLikelihood": {
     "line number": [
      60
     ]
    },
    "likelihood": {
     "line number": [
      86
     ]
    },
    "mll": {
     "line number": [
      72
     ]
    },
    "range": {
     "line number": [
      69
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.ExactGPModel": {
     "line number": [
      61
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.gpytorch": {
     "line number": [
      62,
      85
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.test_x": {
     "line number": [
      86
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.test_y1": {
     "line number": [
      89
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.test_y12": {
     "line number": [
      96,
      97
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.test_y2": {
     "line number": [
      90
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.torch": {
     "line number": [
      85,
      89,
      89,
      90,
      90
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.train_x": {
     "line number": [
      61,
      71
     ]
    },
    "test.examples.test_independent_multitask_gp_regression.train_y12": {
     "line number": [
      61,
      72
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_independent_multitask_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.test_x": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.test_y1": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.test_y12": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.test_y2": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_independent_multitask_gp_regression.train_x": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.train_y1": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.train_y12": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.train_y2": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "test.examples.test_independent_multitask_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      102
     ]
    },
    "test.examples.test_kissgp_additive_classification.n": {
     "line number": [
      21,
      22,
      22,
      23,
      23
     ]
    },
    "test.examples.test_kissgp_additive_classification.torch": {
     "line number": [
      21,
      22,
      23
     ]
    },
    "test.examples.test_kissgp_additive_classification.train_x": {
     "line number": [
      22,
      23,
      24,
      25
     ]
    },
    "test.examples.test_kissgp_additive_classification.unittest": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_kissgp_additive_classification.AdditiveGridInterpolationVariationalStrategy": {
  "data": {
   "shadows": "gpytorch.variational.AdditiveGridInterpolationVariationalStrategy"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.BernoulliLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.BernoulliLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.CholeskyVariationalDistribution": {
  "data": {
   "shadows": "gpytorch.variational.CholeskyVariationalDistribution"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.GPClassificationModel": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "gpytorch.models.ApproximateGP": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_additive_classification.GPClassificationModel.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      42
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      41
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      40
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      40,
      42,
      43
     ]
    },
    "gpytorch.variational.AdditiveGridInterpolationVariationalStrategy": {
     "line number": [
      32
     ]
    },
    "gpytorch.variational.CholeskyVariationalDistribution": {
     "line number": [
      31
     ]
    },
    "math.exp": {
     "line number": [
      42,
      42,
      43,
      43
     ]
    },
    "super": {
     "line number": [
      39
     ]
    },
    "test.examples.test_kissgp_additive_classification.GPClassificationModel": {
     "line number": [
      39
     ]
    },
    "test.examples.test_kissgp_additive_classification.torch": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_classification.GPClassificationModel.forward": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_classification.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.TestKISSGPAdditiveClassification": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "test.examples.test_kissgp_additive_classification.unittest": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_additive_classification.TestKISSGPAdditiveClassification.setUp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "test.examples.test_kissgp_additive_classification.os": {
     "line number": [
      55,
      55
     ]
    },
    "test.examples.test_kissgp_additive_classification.random": {
     "line number": [
      60
     ]
    },
    "test.examples.test_kissgp_additive_classification.torch": {
     "line number": [
      56,
      57,
      58,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_classification.TestKISSGPAdditiveClassification.tearDown": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      63
     ]
    },
    "test.examples.test_kissgp_additive_classification.torch": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_classification.TestKISSGPAdditiveClassification.test_kissgp_classification_error": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "gpytorch.likelihoods.BernoulliLikelihood": {
     "line number": [
      69
     ]
    },
    "len": {
     "line number": [
      70
     ]
    },
    "mll": {
     "line number": [
      83
     ]
    },
    "model": {
     "line number": [
      81,
      96
     ]
    },
    "model.eval": {
     "line number": [
      93
     ]
    },
    "model.parameters": {
     "line number": [
      88
     ]
    },
    "range": {
     "line number": [
      78
     ]
    },
    "test.examples.test_kissgp_additive_classification.GPClassificationModel": {
     "line number": [
      68
     ]
    },
    "test.examples.test_kissgp_additive_classification.gpytorch": {
     "line number": [
      67,
      67,
      70
     ]
    },
    "test.examples.test_kissgp_additive_classification.torch": {
     "line number": [
      97,
      97
     ]
    },
    "test.examples.test_kissgp_additive_classification.train_x": {
     "line number": [
      81,
      96
     ]
    },
    "test.examples.test_kissgp_additive_classification.train_y": {
     "line number": [
      70,
      83,
      97
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_classification.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.n": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_classification.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_classification.train_x": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_classification.train_y": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_classification.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      96
     ]
    },
    "float": {
     "line number": [
      19,
      20,
      28,
      29
     ]
    },
    "pow": {
     "line number": [
      16,
      25
     ]
    },
    "range": {
     "line number": [
      17,
      18,
      26,
      27
     ]
    },
    "test.examples.test_kissgp_additive_regression.m": {
     "line number": [
      25,
      26,
      27,
      28,
      28,
      29,
      29
     ]
    },
    "test.examples.test_kissgp_additive_regression.n": {
     "line number": [
      16,
      17,
      18,
      19,
      19,
      20,
      20
     ]
    },
    "test.examples.test_kissgp_additive_regression.test_x": {
     "line number": [
      28,
      29,
      30,
      30
     ]
    },
    "test.examples.test_kissgp_additive_regression.torch": {
     "line number": [
      16,
      21,
      21,
      22,
      25,
      30,
      30
     ]
    },
    "test.examples.test_kissgp_additive_regression.train_x": {
     "line number": [
      19,
      20,
      21,
      21
     ]
    },
    "test.examples.test_kissgp_additive_regression.unittest": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_kissgp_additive_regression.AdditiveStructureKernel": {
  "data": {
   "shadows": "gpytorch.kernels.AdditiveStructureKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.GPRegressionModel": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "test.examples.test_kissgp_additive_regression.gpytorch": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_additive_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "gpytorch.kernels.AdditiveStructureKernel": {
     "line number": [
      39
     ]
    },
    "gpytorch.kernels.GridInterpolationKernel": {
     "line number": [
      40
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      38
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      38
     ]
    },
    "gpytorch.means.ZeroMean": {
     "line number": [
      37
     ]
    },
    "super": {
     "line number": [
      36
     ]
    },
    "test.examples.test_kissgp_additive_regression.GPRegressionModel": {
     "line number": [
      36
     ]
    },
    "test.examples.test_kissgp_additive_regression.train_x": {
     "line number": [
      36
     ]
    },
    "test.examples.test_kissgp_additive_regression.train_y": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.TestKISSGPAdditiveRegression": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "test.examples.test_kissgp_additive_regression.unittest": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_additive_regression.TestKISSGPAdditiveRegression.setUp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "test.examples.test_kissgp_additive_regression.os": {
     "line number": [
      51,
      51
     ]
    },
    "test.examples.test_kissgp_additive_regression.random": {
     "line number": [
      56
     ]
    },
    "test.examples.test_kissgp_additive_regression.torch": {
     "line number": [
      52,
      53,
      54,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_regression.TestKISSGPAdditiveRegression.tearDown": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      59
     ]
    },
    "test.examples.test_kissgp_additive_regression.torch": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_regression.TestKISSGPAdditiveRegression.test_kissgp_gp_mean_abs_error": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      77,
      91
     ]
    },
    "gp_model.eval": {
     "line number": [
      88
     ]
    },
    "gp_model.parameters": {
     "line number": [
      83
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      63
     ]
    },
    "likelihood": {
     "line number": [
      91
     ]
    },
    "mll": {
     "line number": [
      78
     ]
    },
    "range": {
     "line number": [
      75
     ]
    },
    "test.examples.test_kissgp_additive_regression.GPRegressionModel": {
     "line number": [
      64
     ]
    },
    "test.examples.test_kissgp_additive_regression.gpytorch": {
     "line number": [
      65,
      67,
      67,
      68,
      68
     ]
    },
    "test.examples.test_kissgp_additive_regression.test_x": {
     "line number": [
      91
     ]
    },
    "test.examples.test_kissgp_additive_regression.test_y": {
     "line number": [
      92
     ]
    },
    "test.examples.test_kissgp_additive_regression.torch": {
     "line number": [
      92,
      92
     ]
    },
    "test.examples.test_kissgp_additive_regression.train_x": {
     "line number": [
      64,
      77
     ]
    },
    "test.examples.test_kissgp_additive_regression.train_y": {
     "line number": [
      64,
      78
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_additive_regression.ZeroMean": {
  "data": {
   "shadows": "gpytorch.means.ZeroMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.m": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_regression.n": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.test_x": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_regression.test_y": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_additive_regression.train_x": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_regression.train_y": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_additive_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      151
     ]
    },
    "test.examples.test_kissgp_dkl_regression.SmallFeatureExtractor": {
     "line number": [
      45
     ]
    },
    "test.examples.test_kissgp_dkl_regression.unittest": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_kissgp_dkl_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.GPRegressionModel": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "test.examples.test_kissgp_dkl_regression.gpytorch": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_dkl_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "gpytorch.kernels.GridInterpolationKernel": {
     "line number": [
      53
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      52
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      52
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      51
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      51,
      52
     ]
    },
    "math.exp": {
     "line number": [
      52,
      52
     ]
    },
    "super": {
     "line number": [
      50
     ]
    },
    "test.examples.test_kissgp_dkl_regression.GPRegressionModel": {
     "line number": [
      50
     ]
    },
    "test.examples.test_kissgp_dkl_regression.feature_extractor": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.SmallFeatureExtractor": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "torch.nn.Sequential": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_dkl_regression.SmallFeatureExtractor.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "super": {
     "line number": [
      39
     ]
    },
    "test.examples.test_kissgp_dkl_regression.SmallFeatureExtractor": {
     "line number": [
      39
     ]
    },
    "test.examples.test_kissgp_dkl_regression.data_dim": {
     "line number": [
      40
     ]
    },
    "torch.nn.Linear": {
     "line number": [
      40,
      42
     ]
    },
    "torch.nn.ReLU": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.TestDKLRegression": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "test.examples.test_kissgp_dkl_regression.unittest": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_dkl_regression.TestDKLRegression.setUp": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "test.examples.test_kissgp_dkl_regression.os": {
     "line number": [
      65,
      65
     ]
    },
    "test.examples.test_kissgp_dkl_regression.random": {
     "line number": [
      70
     ]
    },
    "test.examples.test_kissgp_dkl_regression.torch": {
     "line number": [
      66,
      67,
      68,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.TestDKLRegression.tearDown": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      73
     ]
    },
    "test.examples.test_kissgp_dkl_regression.torch": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.TestDKLRegression.test_dkl_gp_fast_pred_var": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      114,
      115,
      125,
      139,
      144
     ]
    },
    "gp_model.eval": {
     "line number": [
      136
     ]
    },
    "gp_model.parameters": {
     "line number": [
      121,
      131
     ]
    },
    "gp_model.train": {
     "line number": [
      118
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      113
     ]
    },
    "likelihood": {
     "line number": [
      113,
      114,
      115,
      139,
      144
     ]
    },
    "likelihood.eval": {
     "line number": [
      137
     ]
    },
    "likelihood.noise": {
     "line number": [
      146
     ]
    },
    "likelihood.raw_noise.data.fill_": {
     "line number": [
      143
     ]
    },
    "likelihood.train": {
     "line number": [
      119
     ]
    },
    "mll": {
     "line number": [
      115,
      126
     ]
    },
    "range": {
     "line number": [
      123
     ]
    },
    "test.examples.test_kissgp_dkl_regression.GPRegressionModel": {
     "line number": [
      114
     ]
    },
    "test.examples.test_kissgp_dkl_regression.gpytorch": {
     "line number": [
      111,
      111,
      115
     ]
    },
    "test.examples.test_kissgp_dkl_regression.make_data": {
     "line number": [
      112
     ]
    },
    "test.examples.test_kissgp_dkl_regression.torch": {
     "line number": [
      148
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.TestDKLRegression.test_dkl_gp_mean_abs_error": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      91,
      105
     ]
    },
    "gp_model.eval": {
     "line number": [
      102
     ]
    },
    "gp_model.parameters": {
     "line number": [
      97
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      78
     ]
    },
    "likelihood": {
     "line number": [
      105
     ]
    },
    "mll": {
     "line number": [
      92
     ]
    },
    "range": {
     "line number": [
      89
     ]
    },
    "test.examples.test_kissgp_dkl_regression.GPRegressionModel": {
     "line number": [
      79
     ]
    },
    "test.examples.test_kissgp_dkl_regression.gpytorch": {
     "line number": [
      80,
      88
     ]
    },
    "test.examples.test_kissgp_dkl_regression.make_data": {
     "line number": [
      77
     ]
    },
    "test.examples.test_kissgp_dkl_regression.torch": {
     "line number": [
      106,
      106
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.data_dim": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_dkl_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.feature_extractor": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_dkl_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.make_data": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      23,
      25
     ]
    },
    "test.examples.test_kissgp_dkl_regression.torch": {
     "line number": [
      22,
      23,
      24,
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_dkl_regression.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_dkl_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      89
     ]
    },
    "math.pi": {
     "line number": [
      20
     ]
    },
    "test.examples.test_kissgp_gp_classification.torch": {
     "line number": [
      19,
      20,
      20
     ]
    },
    "test.examples.test_kissgp_gp_classification.train_x": {
     "line number": [
      20
     ]
    },
    "test.examples.test_kissgp_gp_classification.unittest": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_kissgp_gp_classification.BernoulliLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.BernoulliLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.GPClassificationModel": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "test.examples.test_kissgp_gp_classification.gpytorch": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_gp_classification.GPClassificationModel.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      34
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      33
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      32
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      32,
      34,
      35
     ]
    },
    "int": {
     "line number": [
      26
     ]
    },
    "len": {
     "line number": [
      26
     ]
    },
    "math.exp": {
     "line number": [
      34,
      34,
      35,
      35
     ]
    },
    "pow": {
     "line number": [
      26
     ]
    },
    "super": {
     "line number": [
      31
     ]
    },
    "test.examples.test_kissgp_gp_classification.GPClassificationModel": {
     "line number": [
      31
     ]
    },
    "test.examples.test_kissgp_gp_classification.gpytorch": {
     "line number": [
      25,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_classification.GPClassificationModel.forward": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_classification.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.TestKISSGPClassification": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "test.examples.test_kissgp_gp_classification.unittest": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_gp_classification.TestKISSGPClassification.setUp": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "test.examples.test_kissgp_gp_classification.os": {
     "line number": [
      47,
      47
     ]
    },
    "test.examples.test_kissgp_gp_classification.random": {
     "line number": [
      52
     ]
    },
    "test.examples.test_kissgp_gp_classification.torch": {
     "line number": [
      48,
      49,
      50,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_classification.TestKISSGPClassification.tearDown": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      55
     ]
    },
    "test.examples.test_kissgp_gp_classification.torch": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_classification.TestKISSGPClassification.test_kissgp_classification_error": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "gpytorch.likelihoods.BernoulliLikelihood": {
     "line number": [
      60
     ]
    },
    "len": {
     "line number": [
      61
     ]
    },
    "likelihood": {
     "line number": [
      84
     ]
    },
    "mll": {
     "line number": [
      72
     ]
    },
    "model": {
     "line number": [
      71,
      84
     ]
    },
    "model.eval": {
     "line number": [
      82
     ]
    },
    "model.named_parameters": {
     "line number": [
      77
     ]
    },
    "range": {
     "line number": [
      69
     ]
    },
    "test.examples.test_kissgp_gp_classification.GPClassificationModel": {
     "line number": [
      59
     ]
    },
    "test.examples.test_kissgp_gp_classification.gpytorch": {
     "line number": [
      61
     ]
    },
    "test.examples.test_kissgp_gp_classification.torch": {
     "line number": [
      85,
      85
     ]
    },
    "test.examples.test_kissgp_gp_classification.train_x": {
     "line number": [
      71,
      84
     ]
    },
    "test.examples.test_kissgp_gp_classification.train_y": {
     "line number": [
      61,
      72,
      85
     ]
    },
    "torch.optim.SGD": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_classification.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_classification.train_x": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_gp_classification.train_y": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_gp_classification.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      171
     ]
    },
    "test.examples.test_kissgp_gp_regression.unittest": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_kissgp_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.GPRegressionModel": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "test.examples.test_kissgp_gp_regression.gpytorch": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_gp_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "gpytorch.kernels.GridInterpolationKernel": {
     "line number": [
      39
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      38
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      38
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      37
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      37,
      38
     ]
    },
    "math.exp": {
     "line number": [
      38,
      38
     ]
    },
    "super": {
     "line number": [
      36
     ]
    },
    "test.examples.test_kissgp_gp_regression.GPRegressionModel": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.TestKISSGPRegression": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "test.examples.test_kissgp_gp_regression.unittest": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_gp_regression.TestKISSGPRegression.setUp": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "test.examples.test_kissgp_gp_regression.os": {
     "line number": [
      49,
      49
     ]
    },
    "test.examples.test_kissgp_gp_regression.random": {
     "line number": [
      54
     ]
    },
    "test.examples.test_kissgp_gp_regression.torch": {
     "line number": [
      50,
      51,
      52,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.TestKISSGPRegression.tearDown": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      57
     ]
    },
    "test.examples.test_kissgp_gp_regression.torch": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.TestKISSGPRegression.test_kissgp_gp_fast_pred_var": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      98,
      99,
      109,
      123,
      128
     ]
    },
    "gp_model.eval": {
     "line number": [
      120
     ]
    },
    "gp_model.parameters": {
     "line number": [
      105,
      115
     ]
    },
    "gp_model.train": {
     "line number": [
      102
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      97
     ]
    },
    "likelihood": {
     "line number": [
      97,
      98,
      99,
      123,
      128
     ]
    },
    "likelihood.eval": {
     "line number": [
      121
     ]
    },
    "likelihood.noise": {
     "line number": [
      130
     ]
    },
    "likelihood.raw_noise.data.fill_": {
     "line number": [
      127
     ]
    },
    "likelihood.train": {
     "line number": [
      103
     ]
    },
    "mll": {
     "line number": [
      99,
      110
     ]
    },
    "range": {
     "line number": [
      107
     ]
    },
    "test.examples.test_kissgp_gp_regression.GPRegressionModel": {
     "line number": [
      98
     ]
    },
    "test.examples.test_kissgp_gp_regression.gpytorch": {
     "line number": [
      95,
      95,
      99
     ]
    },
    "test.examples.test_kissgp_gp_regression.make_data": {
     "line number": [
      96
     ]
    },
    "test.examples.test_kissgp_gp_regression.torch": {
     "line number": [
      132
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.TestKISSGPRegression.test_kissgp_gp_mean_abs_error": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      75,
      89
     ]
    },
    "gp_model.eval": {
     "line number": [
      86
     ]
    },
    "gp_model.parameters": {
     "line number": [
      81
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      62
     ]
    },
    "likelihood": {
     "line number": [
      89
     ]
    },
    "mll": {
     "line number": [
      76
     ]
    },
    "range": {
     "line number": [
      73
     ]
    },
    "test.examples.test_kissgp_gp_regression.GPRegressionModel": {
     "line number": [
      63
     ]
    },
    "test.examples.test_kissgp_gp_regression.gpytorch": {
     "line number": [
      64,
      72
     ]
    },
    "test.examples.test_kissgp_gp_regression.make_data": {
     "line number": [
      61
     ]
    },
    "test.examples.test_kissgp_gp_regression.torch": {
     "line number": [
      90,
      90
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.TestKISSGPRegression.test_kissgp_gp_mean_abs_error_cuda": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      140,
      141,
      152,
      165
     ]
    },
    "gp_model.eval": {
     "line number": [
      163
     ]
    },
    "gp_model.parameters": {
     "line number": [
      147,
      158
     ]
    },
    "gp_model.train": {
     "line number": [
      144
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      139
     ]
    },
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      137
     ]
    },
    "likelihood": {
     "line number": [
      139,
      140,
      141,
      165
     ]
    },
    "likelihood.eval": {
     "line number": [
      164
     ]
    },
    "likelihood.train": {
     "line number": [
      145
     ]
    },
    "mll": {
     "line number": [
      141,
      153
     ]
    },
    "range": {
     "line number": [
      150
     ]
    },
    "test.examples.test_kissgp_gp_regression.GPRegressionModel": {
     "line number": [
      140
     ]
    },
    "test.examples.test_kissgp_gp_regression.gpytorch": {
     "line number": [
      141,
      149
     ]
    },
    "test.examples.test_kissgp_gp_regression.make_data": {
     "line number": [
      138
     ]
    },
    "test.examples.test_kissgp_gp_regression.torch": {
     "line number": [
      135,
      166,
      166
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.make_data": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      23,
      25
     ]
    },
    "test.examples.test_kissgp_gp_regression.torch": {
     "line number": [
      22,
      23,
      24,
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      97
     ]
    },
    "float": {
     "line number": [
      23,
      24
     ]
    },
    "int": {
     "line number": [
      25,
      25
     ]
    },
    "pow": {
     "line number": [
      19,
      20,
      25
     ]
    },
    "range": {
     "line number": [
      21,
      22
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.n": {
     "line number": [
      19,
      20,
      21,
      22,
      23,
      23,
      24,
      24,
      25
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.torch": {
     "line number": [
      19,
      20
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.train_x": {
     "line number": [
      23,
      24
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.train_y": {
     "line number": [
      25
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.unittest": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_kissgp_kronecker_product_classification.BernoulliLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.BernoulliLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.GPClassificationModel": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "test.examples.test_kissgp_kronecker_product_classification.gpytorch": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_kronecker_product_classification.GPClassificationModel.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      41
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      40
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      39
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      39,
      41
     ]
    },
    "int": {
     "line number": [
      33
     ]
    },
    "len": {
     "line number": [
      33
     ]
    },
    "math.exp": {
     "line number": [
      41,
      41
     ]
    },
    "pow": {
     "line number": [
      33
     ]
    },
    "super": {
     "line number": [
      38
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.GPClassificationModel": {
     "line number": [
      38
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.gpytorch": {
     "line number": [
      32,
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_classification.GPClassificationModel.forward": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_classification.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.TestKISSGPKroneckerProductClassification": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "test.examples.test_kissgp_kronecker_product_classification.unittest": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_kronecker_product_classification.TestKISSGPKroneckerProductClassification.setUp": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "test.examples.test_kissgp_kronecker_product_classification.os": {
     "line number": [
      53,
      53
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.random": {
     "line number": [
      58
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.torch": {
     "line number": [
      54,
      55,
      56,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_classification.TestKISSGPKroneckerProductClassification.tearDown": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      61
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.torch": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_classification.TestKISSGPKroneckerProductClassification.test_kissgp_classification_error": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "gpytorch.likelihoods.BernoulliLikelihood": {
     "line number": [
      66
     ]
    },
    "len": {
     "line number": [
      67
     ]
    },
    "mll": {
     "line number": [
      79
     ]
    },
    "model": {
     "line number": [
      78,
      92
     ]
    },
    "model.eval": {
     "line number": [
      89
     ]
    },
    "model.parameters": {
     "line number": [
      84
     ]
    },
    "range": {
     "line number": [
      76
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.GPClassificationModel": {
     "line number": [
      65
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.gpytorch": {
     "line number": [
      67,
      73
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.torch": {
     "line number": [
      93,
      93
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.train_x": {
     "line number": [
      78,
      92
     ]
    },
    "test.examples.test_kissgp_kronecker_product_classification.train_y": {
     "line number": [
      67,
      79,
      93
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_classification.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.n": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_classification.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_classification.train_x": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_classification.train_y": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_classification.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      103
     ]
    },
    "float": {
     "line number": [
      24,
      25,
      34,
      35
     ]
    },
    "math.pi": {
     "line number": [
      27,
      37
     ]
    },
    "pow": {
     "line number": [
      21,
      31
     ]
    },
    "range": {
     "line number": [
      22,
      23,
      32,
      33
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.m": {
     "line number": [
      31,
      32,
      33,
      34,
      34,
      35,
      35
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.n": {
     "line number": [
      21,
      22,
      23,
      24,
      24,
      25,
      25
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.test_x": {
     "line number": [
      34,
      35,
      37,
      37
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.torch": {
     "line number": [
      21,
      27,
      28,
      31,
      37,
      38
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.train_x": {
     "line number": [
      24,
      25,
      27,
      27
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.unittest": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_kissgp_kronecker_product_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.GPRegressionModel": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "test.examples.test_kissgp_kronecker_product_regression.gpytorch": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_kronecker_product_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "gpytorch.kernels.GridInterpolationKernel": {
     "line number": [
      47
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      46
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      45
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      45
     ]
    },
    "super": {
     "line number": [
      44
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.GPRegressionModel": {
     "line number": [
      44
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.train_x": {
     "line number": [
      44
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.train_y": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.TestKISSGPKroneckerProductRegression": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "test.examples.test_kissgp_kronecker_product_regression.unittest": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_kronecker_product_regression.TestKISSGPKroneckerProductRegression.setUp": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "test.examples.test_kissgp_kronecker_product_regression.os": {
     "line number": [
      57,
      57
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.random": {
     "line number": [
      62
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.torch": {
     "line number": [
      58,
      59,
      60,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_regression.TestKISSGPKroneckerProductRegression.tearDown": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      65
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.torch": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_regression.TestKISSGPKroneckerProductRegression.test_kissgp_gp_mean_abs_error": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      82,
      98
     ]
    },
    "gp_model.eval": {
     "line number": [
      95
     ]
    },
    "gp_model.parameters": {
     "line number": [
      88
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      69
     ]
    },
    "likelihood": {
     "line number": [
      98
     ]
    },
    "mll": {
     "line number": [
      83
     ]
    },
    "range": {
     "line number": [
      80
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.GPRegressionModel": {
     "line number": [
      70
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.gpytorch": {
     "line number": [
      71,
      77,
      77,
      94,
      94
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.test_x": {
     "line number": [
      98
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.test_y": {
     "line number": [
      99
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.torch": {
     "line number": [
      99,
      99
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.train_x": {
     "line number": [
      70,
      82
     ]
    },
    "test.examples.test_kissgp_kronecker_product_regression.train_y": {
     "line number": [
      70,
      83
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_kronecker_product_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.m": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_regression.n": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.test_x": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_regression.test_y": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_kronecker_product_regression.train_x": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_regression.train_y": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_kronecker_product_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      102
     ]
    },
    "float": {
     "line number": [
      25,
      26,
      34,
      35
     ]
    },
    "math.pi": {
     "line number": [
      28,
      37
     ]
    },
    "pow": {
     "line number": [
      22,
      31
     ]
    },
    "range": {
     "line number": [
      23,
      24,
      32,
      33
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.m": {
     "line number": [
      31,
      32,
      33,
      34,
      34,
      35,
      35
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.n": {
     "line number": [
      22,
      23,
      24,
      25,
      25,
      26,
      26
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.test_x": {
     "line number": [
      34,
      35,
      37,
      37
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.torch": {
     "line number": [
      22,
      28,
      28,
      31,
      37,
      37
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.train_x": {
     "line number": [
      25,
      26,
      28,
      28
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.unittest": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_kissgp_multiplicative_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.GPRegressionModel": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "test.examples.test_kissgp_multiplicative_regression.gpytorch": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_multiplicative_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "gpytorch.kernels.GridInterpolationKernel": {
     "line number": [
      47
     ]
    },
    "gpytorch.kernels.ProductStructureKernel": {
     "line number": [
      46
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      45
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      45
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      44
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      44
     ]
    },
    "super": {
     "line number": [
      43
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.GPRegressionModel": {
     "line number": [
      43
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.train_x": {
     "line number": [
      43
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.train_y": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_multiplicative_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_multiplicative_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.ProductStructureKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ProductStructureKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.TestKISSGPMultiplicativeRegression": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "test.examples.test_kissgp_multiplicative_regression.unittest": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_multiplicative_regression.TestKISSGPMultiplicativeRegression.setUp": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "test.examples.test_kissgp_multiplicative_regression.os": {
     "line number": [
      58,
      58
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.random": {
     "line number": [
      63
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.torch": {
     "line number": [
      59,
      60,
      61,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_multiplicative_regression.TestKISSGPMultiplicativeRegression.tearDown": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      66
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.torch": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_multiplicative_regression.TestKISSGPMultiplicativeRegression.test_kissgp_gp_mean_abs_error": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      82,
      97
     ]
    },
    "gp_model.eval": {
     "line number": [
      93
     ]
    },
    "gp_model.parameters": {
     "line number": [
      87
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      70
     ]
    },
    "likelihood": {
     "line number": [
      97
     ]
    },
    "mll": {
     "line number": [
      83
     ]
    },
    "range": {
     "line number": [
      80
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.GPRegressionModel": {
     "line number": [
      71
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.gpytorch": {
     "line number": [
      72,
      96
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.test_x": {
     "line number": [
      97
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.test_y": {
     "line number": [
      98
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.torch": {
     "line number": [
      98,
      98
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.train_x": {
     "line number": [
      71,
      82
     ]
    },
    "test.examples.test_kissgp_multiplicative_regression.train_y": {
     "line number": [
      71,
      83
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_multiplicative_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.m": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_multiplicative_regression.n": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_multiplicative_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.test_x": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_multiplicative_regression.test_y": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_multiplicative_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_multiplicative_regression.train_x": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_multiplicative_regression.train_y": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "test.examples.test_kissgp_multiplicative_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      113
     ]
    },
    "test.examples.test_kissgp_variational_regression.unittest": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_kissgp_variational_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.DataLoader": {
  "data": {
   "shadows": "torch.utils.data.DataLoader"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.GPRegressionModel": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "test.examples.test_kissgp_variational_regression.gpytorch": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_variational_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      39
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      39
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      38
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      38,
      39
     ]
    },
    "int": {
     "line number": [
      32
     ]
    },
    "len": {
     "line number": [
      32
     ]
    },
    "math.exp": {
     "line number": [
      39,
      39
     ]
    },
    "pow": {
     "line number": [
      32
     ]
    },
    "super": {
     "line number": [
      37
     ]
    },
    "test.examples.test_kissgp_variational_regression.GPRegressionModel": {
     "line number": [
      37
     ]
    },
    "test.examples.test_kissgp_variational_regression.gpytorch": {
     "line number": [
      31,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_variational_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_variational_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.TensorDataset": {
  "data": {
   "shadows": "torch.utils.data.TensorDataset"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.TestKISSGPVariationalRegression": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "test.examples.test_kissgp_variational_regression.unittest": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_variational_regression.TestKISSGPVariationalRegression.setUp": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "test.examples.test_kissgp_variational_regression.os": {
     "line number": [
      49,
      49
     ]
    },
    "test.examples.test_kissgp_variational_regression.random": {
     "line number": [
      54
     ]
    },
    "test.examples.test_kissgp_variational_regression.torch": {
     "line number": [
      50,
      51,
      52,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_variational_regression.TestKISSGPVariationalRegression.tearDown": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      57
     ]
    },
    "test.examples.test_kissgp_variational_regression.torch": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_variational_regression.TestKISSGPVariationalRegression.test_kissgp_gp_mean_abs_error": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      66
     ]
    },
    "len": {
     "line number": [
      67
     ]
    },
    "likelihood": {
     "line number": [
      107
     ]
    },
    "model": {
     "line number": [
      107
     ]
    },
    "model.eval": {
     "line number": [
      104
     ]
    },
    "model.named_parameters": {
     "line number": [
      96
     ]
    },
    "test.examples.test_kissgp_variational_regression.GPRegressionModel": {
     "line number": [
      65
     ]
    },
    "test.examples.test_kissgp_variational_regression.gpytorch": {
     "line number": [
      67,
      74
     ]
    },
    "test.examples.test_kissgp_variational_regression.make_data": {
     "line number": [
      61
     ]
    },
    "test.examples.test_kissgp_variational_regression.torch": {
     "line number": [
      70,
      108,
      108
     ]
    },
    "torch.utils.data.DataLoader": {
     "line number": [
      63
     ]
    },
    "torch.utils.data.TensorDataset": {
     "line number": [
      62
     ]
    },
    "train": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_variational_regression.TestKISSGPVariationalRegression.test_kissgp_gp_mean_abs_error.train": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "mll": {
     "line number": [
      89
     ]
    },
    "model": {
     "line number": [
      88
     ]
    },
    "range": {
     "line number": [
      83
     ]
    },
    "test.examples.test_kissgp_variational_regression.torch": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_variational_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.make_data": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      23,
      25
     ]
    },
    "test.examples.test_kissgp_variational_regression.torch": {
     "line number": [
      22,
      23,
      23,
      24,
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_variational_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_variational_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      177
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.unittest": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_kissgp_white_noise_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.GPInputWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.GPInputWarning"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.GPRegressionModel": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "test.examples.test_kissgp_white_noise_regression.gpytorch": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_white_noise_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "gpytorch.kernels.GridInterpolationKernel": {
     "line number": [
      41
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      40
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      40
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      39
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      39,
      40
     ]
    },
    "math.exp": {
     "line number": [
      40,
      40
     ]
    },
    "super": {
     "line number": [
      38
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.GPRegressionModel": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.TestKISSGPWhiteNoiseRegression": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "test.examples.test_kissgp_white_noise_regression.unittest": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kissgp_white_noise_regression.TestKISSGPWhiteNoiseRegression.setUp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "test.examples.test_kissgp_white_noise_regression.os": {
     "line number": [
      52,
      52
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.random": {
     "line number": [
      57
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.torch": {
     "line number": [
      53,
      54,
      55,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.TestKISSGPWhiteNoiseRegression.tearDown": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      60
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.torch": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.TestKISSGPWhiteNoiseRegression.test_kissgp_gp_fast_pred_var": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      104,
      105,
      115,
      129,
      134
     ]
    },
    "gp_model.eval": {
     "line number": [
      126
     ]
    },
    "gp_model.parameters": {
     "line number": [
      111,
      121
     ]
    },
    "gp_model.train": {
     "line number": [
      108
     ]
    },
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood": {
     "line number": [
      103
     ]
    },
    "likelihood": {
     "line number": [
      103,
      104,
      105,
      129,
      134
     ]
    },
    "likelihood.eval": {
     "line number": [
      127
     ]
    },
    "likelihood.noise": {
     "line number": [
      133,
      136
     ]
    },
    "likelihood.train": {
     "line number": [
      109
     ]
    },
    "mll": {
     "line number": [
      105,
      116
     ]
    },
    "range": {
     "line number": [
      113
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.GPRegressionModel": {
     "line number": [
      104
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.gpytorch": {
     "line number": [
      101,
      101,
      105
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.make_data": {
     "line number": [
      102
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.torch": {
     "line number": [
      103,
      133,
      138
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.TestKISSGPWhiteNoiseRegression.test_kissgp_gp_mean_abs_error": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      81,
      95
     ]
    },
    "gp_model.eval": {
     "line number": [
      92
     ]
    },
    "gp_model.parameters": {
     "line number": [
      87
     ]
    },
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood": {
     "line number": [
      68
     ]
    },
    "gpytorch.utils.warnings.GPInputWarning": {
     "line number": [
      65
     ]
    },
    "likelihood": {
     "line number": [
      95
     ]
    },
    "mll": {
     "line number": [
      82
     ]
    },
    "range": {
     "line number": [
      79
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.GPRegressionModel": {
     "line number": [
      69
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.gpytorch": {
     "line number": [
      70,
      78
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.make_data": {
     "line number": [
      67
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.torch": {
     "line number": [
      68,
      96,
      96
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.warnings": {
     "line number": [
      65
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.TestKISSGPWhiteNoiseRegression.test_kissgp_gp_mean_abs_error_cuda": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      146,
      147,
      158,
      171
     ]
    },
    "gp_model.eval": {
     "line number": [
      169
     ]
    },
    "gp_model.parameters": {
     "line number": [
      153,
      164
     ]
    },
    "gp_model.train": {
     "line number": [
      150
     ]
    },
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood": {
     "line number": [
      145
     ]
    },
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      143
     ]
    },
    "likelihood": {
     "line number": [
      145,
      146,
      147,
      171
     ]
    },
    "likelihood.eval": {
     "line number": [
      170
     ]
    },
    "likelihood.train": {
     "line number": [
      151
     ]
    },
    "mll": {
     "line number": [
      147,
      159
     ]
    },
    "range": {
     "line number": [
      156
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.GPRegressionModel": {
     "line number": [
      146
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.gpytorch": {
     "line number": [
      147,
      155
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.make_data": {
     "line number": [
      144
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.torch": {
     "line number": [
      141,
      145,
      172,
      172
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.make_data": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      25,
      27
     ]
    },
    "test.examples.test_kissgp_white_noise_regression.torch": {
     "line number": [
      24,
      25,
      26,
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kissgp_white_noise_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kissgp_white_noise_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      94
     ]
    },
    "math.pi": {
     "line number": [
      21,
      23
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.torch": {
     "line number": [
      18,
      21,
      21,
      23,
      23,
      26
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.train_x": {
     "line number": [
      21,
      21,
      23,
      23
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.train_y1": {
     "line number": [
      26
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.train_y2": {
     "line number": [
      26
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.unittest": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_kronecker_multitask_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.MultitaskGPModel": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "test.examples.test_kronecker_multitask_gp_regression.gpytorch": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kronecker_multitask_gp_regression.MultitaskGPModel.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "gpytorch.kernels.MultitaskKernel": {
     "line number": [
      34
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      33
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      32
     ]
    },
    "gpytorch.means.MultitaskMean": {
     "line number": [
      32
     ]
    },
    "super": {
     "line number": [
      31
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.MultitaskGPModel": {
     "line number": [
      31
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.train_x": {
     "line number": [
      31
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.train_y": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_gp_regression.MultitaskGPModel.forward": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_gp_regression.MultitaskGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.MultitaskKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MultitaskKernel"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.MultitaskMean": {
  "data": {
   "shadows": "gpytorch.means.MultitaskMean"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.TestKroneckerMultiTaskGPRegression": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "test.examples.test_kronecker_multitask_gp_regression.unittest": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kronecker_multitask_gp_regression.TestKroneckerMultiTaskGPRegression.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "test.examples.test_kronecker_multitask_gp_regression.os": {
     "line number": [
      44,
      44
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.random": {
     "line number": [
      49
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.torch": {
     "line number": [
      45,
      46,
      47,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_gp_regression.TestKroneckerMultiTaskGPRegression.tearDown": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      52
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.torch": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_gp_regression.TestKroneckerMultiTaskGPRegression.test_multitask_gp_mean_abs_error": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "gpytorch.likelihoods.MultitaskGaussianLikelihood": {
     "line number": [
      56
     ]
    },
    "likelihood": {
     "line number": [
      86
     ]
    },
    "math.pi": {
     "line number": [
      84,
      85
     ]
    },
    "mll": {
     "line number": [
      76
     ]
    },
    "model": {
     "line number": [
      74,
      86
     ]
    },
    "model.eval": {
     "line number": [
      81
     ]
    },
    "range": {
     "line number": [
      69
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.MultitaskGPModel": {
     "line number": [
      57
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.gpytorch": {
     "line number": [
      66
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.torch": {
     "line number": [
      63,
      83,
      84,
      85,
      87,
      87,
      88,
      88
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.train_x": {
     "line number": [
      57,
      74
     ]
    },
    "test.examples.test_kronecker_multitask_gp_regression.train_y": {
     "line number": [
      57,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_gp_regression.train_x": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "test.examples.test_kronecker_multitask_gp_regression.train_y": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_kronecker_multitask_gp_regression.train_y1": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.examples.test_kronecker_multitask_gp_regression.train_y2": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "test.examples.test_kronecker_multitask_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      104
     ]
    },
    "test.examples.test_kronecker_multitask_ski_gp_regression.unittest": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskGPModel": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "test.examples.test_kronecker_multitask_ski_gp_regression.gpytorch": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskGPModel.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "gpytorch.kernels.GridInterpolationKernel": {
     "line number": [
      21
     ]
    },
    "gpytorch.kernels.MultitaskKernel": {
     "line number": [
      22
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      21
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      20
     ]
    },
    "gpytorch.means.MultitaskMean": {
     "line number": [
      20
     ]
    },
    "super": {
     "line number": [
      19
     ]
    },
    "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskGPModel": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskGPModel.forward": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MultitaskKernel"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskMean": {
  "data": {
   "shadows": "gpytorch.means.MultitaskMean"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.TestKroneckerMultiTaskKISSGPRegression": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "test.examples.test_kronecker_multitask_ski_gp_regression.unittest": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.TestKroneckerMultiTaskKISSGPRegression._get_data": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      47,
      49
     ]
    },
    "test.examples.test_kronecker_multitask_ski_gp_regression.torch": {
     "line number": [
      45,
      45,
      45,
      47,
      47,
      49,
      49,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.TestKroneckerMultiTaskKISSGPRegression.setUp": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "test.examples.test_kronecker_multitask_ski_gp_regression.os": {
     "line number": [
      32,
      32
     ]
    },
    "test.examples.test_kronecker_multitask_ski_gp_regression.random": {
     "line number": [
      37
     ]
    },
    "test.examples.test_kronecker_multitask_ski_gp_regression.torch": {
     "line number": [
      33,
      34,
      35,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.TestKroneckerMultiTaskKISSGPRegression.tearDown": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      40
     ]
    },
    "test.examples.test_kronecker_multitask_ski_gp_regression.torch": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.TestKroneckerMultiTaskKISSGPRegression.test_multitask_gp_mean_abs_error": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "gpytorch.likelihoods.MultitaskGaussianLikelihood": {
     "line number": [
      56
     ]
    },
    "likelihood": {
     "line number": [
      91
     ]
    },
    "math.pi": {
     "line number": [
      89,
      90
     ]
    },
    "mll": {
     "line number": [
      80
     ]
    },
    "model": {
     "line number": [
      78,
      91
     ]
    },
    "model.eval": {
     "line number": [
      85
     ]
    },
    "range": {
     "line number": [
      73
     ]
    },
    "test.examples.test_kronecker_multitask_ski_gp_regression.MultitaskGPModel": {
     "line number": [
      57
     ]
    },
    "test.examples.test_kronecker_multitask_ski_gp_regression.gpytorch": {
     "line number": [
      70
     ]
    },
    "test.examples.test_kronecker_multitask_ski_gp_regression.torch": {
     "line number": [
      67,
      88,
      88,
      88,
      89,
      90,
      92,
      92,
      93,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.TestKroneckerMultiTaskKISSGPRegression.test_multitask_gp_mean_abs_error_cuda": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      100
     ]
    },
    "test.examples.test_kronecker_multitask_ski_gp_regression.torch": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_kronecker_multitask_ski_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      100
     ]
    },
    "test.examples.test_lcm_kernel_regression.unittest": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_lcm_kernel_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.LCMKernel": {
  "data": {
   "shadows": "gpytorch.kernels.LCMKernel"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskGPModel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "test.examples.test_lcm_kernel_regression.gpytorch": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskGPModel.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.kernels.LCMKernel": {
     "line number": [
      19
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      18
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      17
     ]
    },
    "gpytorch.means.MultitaskMean": {
     "line number": [
      17
     ]
    },
    "super": {
     "line number": [
      16
     ]
    },
    "test.examples.test_lcm_kernel_regression.MultitaskGPModel": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskGPModel.forward": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskGPModel_ICM": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "test.examples.test_lcm_kernel_regression.gpytorch": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskGPModel_ICM.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "gpytorch.kernels.MultitaskKernel": {
     "line number": [
      32
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      31
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      30
     ]
    },
    "gpytorch.means.MultitaskMean": {
     "line number": [
      30
     ]
    },
    "super": {
     "line number": [
      29
     ]
    },
    "test.examples.test_lcm_kernel_regression.MultitaskGPModel_ICM": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskGPModel_ICM.forward": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MultitaskKernel"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskMean": {
  "data": {
   "shadows": "gpytorch.means.MultitaskMean"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.TestLCMKernelRegression": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "test.examples.test_lcm_kernel_regression.unittest": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_lcm_kernel_regression.TestLCMKernelRegression.test_lcm_icm_equivalence": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "gpytorch.likelihoods.MultitaskGaussianLikelihood": {
     "line number": [
      51,
      76
     ]
    },
    "likelihood": {
     "line number": [
      72,
      75,
      76,
      79,
      93
     ]
    },
    "likelihood.eval": {
     "line number": [
      88
     ]
    },
    "likelihood.train": {
     "line number": [
      78
     ]
    },
    "mll": {
     "line number": [
      63,
      79,
      84
     ]
    },
    "model": {
     "line number": [
      62,
      72
     ]
    },
    "model.eval": {
     "line number": [
      66
     ]
    },
    "model_icm": {
     "line number": [
      83,
      93
     ]
    },
    "model_icm.eval": {
     "line number": [
      87
     ]
    },
    "range": {
     "line number": [
      60,
      81
     ]
    },
    "test.examples.test_lcm_kernel_regression.MultitaskGPModel": {
     "line number": [
      52
     ]
    },
    "test.examples.test_lcm_kernel_regression.MultitaskGPModel_ICM": {
     "line number": [
      75
     ]
    },
    "test.examples.test_lcm_kernel_regression.gpytorch": {
     "line number": [
      58,
      79
     ]
    },
    "test.examples.test_lcm_kernel_regression.math": {
     "line number": [
      45,
      47
     ]
    },
    "test.examples.test_lcm_kernel_regression.torch": {
     "line number": [
      43,
      45,
      45,
      47,
      47,
      49,
      55,
      70,
      71,
      80,
      91,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_lcm_kernel_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_lcm_kernel_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_lmc_svgp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      136
     ]
    },
    "test.examples.test_lmc_svgp_regression.math": {
     "line number": [
      17,
      18,
      19,
      19,
      20
     ]
    },
    "test.examples.test_lmc_svgp_regression.torch": {
     "line number": [
      15,
      16,
      17,
      17,
      18,
      18,
      19,
      19,
      19,
      20,
      20
     ]
    },
    "test.examples.test_lmc_svgp_regression.train_x": {
     "line number": [
      17,
      17,
      18,
      18,
      19,
      19,
      19,
      20,
      20
     ]
    },
    "test.examples.test_lmc_svgp_regression.unittest": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_lmc_svgp_regression.LMCModel": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "test.examples.test_lmc_svgp_regression.gpytorch": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_lmc_svgp_regression.LMCModel.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "super": {
     "line number": [
      46
     ]
    },
    "test.examples.test_lmc_svgp_regression.gpytorch": {
     "line number": [
      31,
      37,
      38,
      50,
      51,
      52
     ]
    },
    "test.examples.test_lmc_svgp_regression.torch": {
     "line number": [
      27,
      32,
      50,
      52,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_lmc_svgp_regression.LMCModel.forward": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "test.examples.test_lmc_svgp_regression.gpytorch": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_lmc_svgp_regression.MultitaskGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_lmc_svgp_regression.TestIndependentMultitaskGPRegression": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "test.examples.test_lmc_svgp_regression.unittest": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_lmc_svgp_regression.TestIndependentMultitaskGPRegression.setUp": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "test.examples.test_lmc_svgp_regression.os": {
     "line number": [
      66,
      66
     ]
    },
    "test.examples.test_lmc_svgp_regression.random": {
     "line number": [
      71
     ]
    },
    "test.examples.test_lmc_svgp_regression.torch": {
     "line number": [
      67,
      68,
      69,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_lmc_svgp_regression.TestIndependentMultitaskGPRegression.tearDown": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      74
     ]
    },
    "test.examples.test_lmc_svgp_regression.torch": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_lmc_svgp_regression.TestIndependentMultitaskGPRegression.test_train_and_eval": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "gpytorch.likelihoods.MultitaskGaussianLikelihood": {
     "line number": [
      79
     ]
    },
    "likelihood": {
     "line number": [
      116
     ]
    },
    "mll": {
     "line number": [
      99
     ]
    },
    "model": {
     "line number": [
      98,
      116
     ]
    },
    "model.eval": {
     "line number": [
      111
     ]
    },
    "model.parameters": {
     "line number": [
      103
     ]
    },
    "range": {
     "line number": [
      95
     ]
    },
    "test.examples.test_lmc_svgp_regression.LMCModel": {
     "line number": [
      80
     ]
    },
    "test.examples.test_lmc_svgp_regression.gpytorch": {
     "line number": [
      91,
      115
     ]
    },
    "test.examples.test_lmc_svgp_regression.torch": {
     "line number": [
      85,
      115,
      121,
      121,
      122,
      122,
      123,
      123,
      124,
      124
     ]
    },
    "test.examples.test_lmc_svgp_regression.train_x": {
     "line number": [
      98,
      116
     ]
    },
    "test.examples.test_lmc_svgp_regression.train_y": {
     "line number": [
      91,
      99,
      121,
      122,
      123,
      124,
      132,
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_lmc_svgp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_lmc_svgp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_lmc_svgp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_lmc_svgp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_lmc_svgp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_lmc_svgp_regression.train_x": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "test.examples.test_lmc_svgp_regression.train_y": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "test.examples.test_lmc_svgp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      85
     ]
    },
    "test.examples.test_model_list_gp_regression.unittest": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_model_list_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.ExactGPModel": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "test.examples.test_model_list_gp_regression.gpytorch": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_model_list_gp_regression.ExactGPModel.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      23
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      22
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      21
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      21,
      23
     ]
    },
    "super": {
     "line number": [
      20
     ]
    },
    "test.examples.test_model_list_gp_regression.ExactGPModel": {
     "line number": [
      20
     ]
    },
    "test.examples.test_model_list_gp_regression.math": {
     "line number": [
      23,
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_model_list_gp_regression.ExactGPModel.forward": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_model_list_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.IndependentModelList": {
  "data": {
   "shadows": "gpytorch.models.IndependentModelList"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.LikelihoodList": {
  "data": {
   "shadows": "gpytorch.likelihoods.LikelihoodList"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.SumMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.SumMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.TestModelListGPRegression": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "test.examples.test_model_list_gp_regression.unittest": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_model_list_gp_regression.TestModelListGPRegression.test_simple_model_list_gp_regression": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      40,
      43
     ]
    },
    "gpytorch.likelihoods.LikelihoodList": {
     "line number": [
      47
     ]
    },
    "gpytorch.mlls.SumMarginalLogLikelihood": {
     "line number": [
      55
     ]
    },
    "gpytorch.models.IndependentModelList": {
     "line number": [
      46
     ]
    },
    "len": {
     "line number": [
      75,
      77
     ]
    },
    "likelihood": {
     "line number": [
      72
     ]
    },
    "list": {
     "line number": [
      74,
      76
     ]
    },
    "mll": {
     "line number": [
      62
     ]
    },
    "model": {
     "line number": [
      61,
      71
     ]
    },
    "model.eval": {
     "line number": [
      66
     ]
    },
    "model.train_inputs": {
     "line number": [
      61
     ]
    },
    "model.train_targets": {
     "line number": [
      62
     ]
    },
    "range": {
     "line number": [
      59
     ]
    },
    "test.examples.test_model_list_gp_regression.ExactGPModel": {
     "line number": [
      41,
      44
     ]
    },
    "test.examples.test_model_list_gp_regression.gpytorch": {
     "line number": [
      69
     ]
    },
    "test.examples.test_model_list_gp_regression.math": {
     "line number": [
      37,
      38
     ]
    },
    "test.examples.test_model_list_gp_regression.torch": {
     "line number": [
      34,
      34,
      35,
      35,
      37,
      37,
      38,
      38,
      57,
      69,
      70,
      70,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_model_list_gp_regression.TestModelListGPRegression.test_simple_model_list_gp_regression_cuda": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      81
     ]
    },
    "test.examples.test_model_list_gp_regression.torch": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_model_list_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_model_list_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_pyro_integration": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      305
     ]
    },
    "__name__": {
     "line number": [
      309
     ]
    },
    "test.examples.test_pyro_integration.unittest": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_pyro_integration.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_pyro_integration.ClusterGaussianLikelihood": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "test.examples.test_pyro_integration.gpytorch": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_pyro_integration.ClusterGaussianLikelihood.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "str": {
     "line number": [
      15
     ]
    },
    "super": {
     "line number": [
      16
     ]
    },
    "test.examples.test_pyro_integration.time": {
     "line number": [
      15
     ]
    },
    "test.examples.test_pyro_integration.torch": {
     "line number": [
      17,
      19,
      19,
      21,
      21,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.ClusterGaussianLikelihood._cluster_dist": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "test.examples.test_pyro_integration.pyro": {
     "line number": [
      36,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.ClusterGaussianLikelihood.forward": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "test.examples.test_pyro_integration.pyro": {
     "line number": [
      53,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.ClusterGaussianLikelihood.noise": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "property": {
     "line number": [
      30
     ]
    },
    "test.examples.test_pyro_integration.torch": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.ClusterGaussianLikelihood.pyro_guide": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "super": {
     "line number": [
      43
     ]
    },
    "test.examples.test_pyro_integration.pyro": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.ClusterGaussianLikelihood.pyro_model": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "super": {
     "line number": [
      49
     ]
    },
    "test.examples.test_pyro_integration.pyro": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.ClusterMultitaskGPModel": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "test.examples.test_pyro_integration.gpytorch": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_pyro_integration.ClusterMultitaskGPModel.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "str": {
     "line number": [
      79
     ]
    },
    "super": {
     "line number": [
      79
     ]
    },
    "test.examples.test_pyro_integration.ClusterGaussianLikelihood": {
     "line number": [
      76
     ]
    },
    "test.examples.test_pyro_integration.gpytorch": {
     "line number": [
      67,
      70,
      71,
      84,
      85,
      85
     ]
    },
    "test.examples.test_pyro_integration.time": {
     "line number": [
      79
     ]
    },
    "test.examples.test_pyro_integration.torch": {
     "line number": [
      66,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.ClusterMultitaskGPModel.forward": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "test.examples.test_pyro_integration.gpytorch": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.LowLevelInterfaceClusterMultitaskGPModel": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "test.examples.test_pyro_integration.gpytorch": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_pyro_integration.LowLevelInterfaceClusterMultitaskGPModel.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "super": {
     "line number": [
      130
     ]
    },
    "test.examples.test_pyro_integration.gpytorch": {
     "line number": [
      123,
      126,
      127,
      133,
      134,
      134
     ]
    },
    "test.examples.test_pyro_integration.torch": {
     "line number": [
      122,
      124,
      143,
      143,
      145,
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.LowLevelInterfaceClusterMultitaskGPModel.forward": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "test.examples.test_pyro_integration.gpytorch": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.LowLevelInterfaceClusterMultitaskGPModel.guide": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "test.examples.test_pyro_integration.pyro": {
     "line number": [
      159,
      161,
      163,
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.LowLevelInterfaceClusterMultitaskGPModel.model": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "test.examples.test_pyro_integration.pyro": {
     "line number": [
      167,
      173,
      175,
      181,
      182,
      183,
      186,
      187
     ]
    },
    "test.examples.test_pyro_integration.torch": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.LowLevelInterfaceClusterMultitaskGPModel.noise": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "property": {
     "line number": [
      147
     ]
    },
    "test.examples.test_pyro_integration.torch": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.SVGPModel": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "test.examples.test_pyro_integration.gpytorch": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_pyro_integration.SVGPModel.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "str": {
     "line number": [
      106
     ]
    },
    "super": {
     "line number": [
      106
     ]
    },
    "test.examples.test_pyro_integration.gpytorch": {
     "line number": [
      99,
      100,
      105,
      110,
      111,
      111
     ]
    },
    "test.examples.test_pyro_integration.time": {
     "line number": [
      106
     ]
    },
    "test.examples.test_pyro_integration.torch": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.SVGPModel.forward": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "test.examples.test_pyro_integration.gpytorch": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.TestPyroIntegration": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      189
     ]
    },
    "test.examples.test_pyro_integration.unittest": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_pyro_integration.TestPyroIntegration.test_high_level_interface": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      224,
      225,
      227,
      228,
      252,
      253,
      254,
      255
     ]
    },
    "model": {
     "line number": [
      232,
      256
     ]
    },
    "model.eval": {
     "line number": [
      250
     ]
    },
    "model.guide": {
     "line number": [
      242
     ]
    },
    "model.likelihood": {
     "line number": [
      256
     ]
    },
    "model.model": {
     "line number": [
      242
     ]
    },
    "model.train": {
     "line number": [
      234
     ]
    },
    "range": {
     "line number": [
      245
     ]
    },
    "test.examples.test_pyro_integration.ClusterMultitaskGPModel": {
     "line number": [
      232
     ]
    },
    "test.examples.test_pyro_integration.gpytorch": {
     "line number": [
      249
     ]
    },
    "test.examples.test_pyro_integration.pyro": {
     "line number": [
      237,
      239,
      241,
      242
     ]
    },
    "test.examples.test_pyro_integration.torch": {
     "line number": [
      221,
      224,
      224,
      225,
      225,
      227,
      227,
      228,
      228,
      230,
      249,
      251,
      252,
      253,
      254,
      255,
      257,
      257,
      258,
      258,
      259,
      259,
      260,
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.TestPyroIntegration.test_high_level_interface_mean_field": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.TestPyroIntegration.test_low_level_interface": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      275,
      276,
      278,
      279
     ]
    },
    "model": {
     "line number": [
      282
     ]
    },
    "model.guide": {
     "line number": [
      289
     ]
    },
    "model.model": {
     "line number": [
      289
     ]
    },
    "model.train": {
     "line number": [
      284
     ]
    },
    "model.variational_logits": {
     "line number": [
      298
     ]
    },
    "model.variational_logits.max": {
     "line number": [
      296
     ]
    },
    "range": {
     "line number": [
      292
     ]
    },
    "test.examples.test_pyro_integration.LowLevelInterfaceClusterMultitaskGPModel": {
     "line number": [
      282
     ]
    },
    "test.examples.test_pyro_integration.pyro": {
     "line number": [
      287,
      288,
      289
     ]
    },
    "test.examples.test_pyro_integration.torch": {
     "line number": [
      272,
      275,
      275,
      276,
      276,
      278,
      278,
      279,
      279,
      281,
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.TestPyroIntegration.test_simple_high_level_interface": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      195,
      214
     ]
    },
    "model": {
     "line number": [
      215
     ]
    },
    "range": {
     "line number": [
      207
     ]
    },
    "test.examples.test_pyro_integration.SVGPModel": {
     "line number": [
      197
     ]
    },
    "test.examples.test_pyro_integration.gpytorch": {
     "line number": [
      211
     ]
    },
    "test.examples.test_pyro_integration.pyro": {
     "line number": [
      202,
      203,
      204
     ]
    },
    "test.examples.test_pyro_integration.torch": {
     "line number": [
      194,
      195,
      195,
      211,
      213,
      214,
      216,
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_pyro_integration.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_pyro_integration.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_pyro_integration.pyro": {
  "data": {
   "shadows": "pyro"
  },
  "type": "import"
 },
 "test.examples.test_pyro_integration.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "test.examples.test_pyro_integration.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_pyro_integration.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression": {
  "data": {},
  "type": "module"
 },
 "test.examples.test_rff_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression.GPRegressionModel": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "test.examples.test_rff_gp_regression.gpytorch": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_rff_gp_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "gpytorch.kernels.RFFKernel": {
     "line number": [
      40
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      40
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      39
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      39
     ]
    },
    "super": {
     "line number": [
      38
     ]
    },
    "test.examples.test_rff_gp_regression.GPRegressionModel": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_rff_gp_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_rff_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression.NumericalWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.NumericalWarning"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression.RFFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RFFKernel"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression.TestRFFRegression": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "test.examples.test_rff_gp_regression.unittest": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_rff_gp_regression.TestRFFRegression.setUp": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "test.examples.test_rff_gp_regression.os": {
     "line number": [
      50,
      50
     ]
    },
    "test.examples.test_rff_gp_regression.random": {
     "line number": [
      55
     ]
    },
    "test.examples.test_rff_gp_regression.torch": {
     "line number": [
      51,
      52,
      53,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_rff_gp_regression.TestRFFRegression.tearDown": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      58
     ]
    },
    "test.examples.test_rff_gp_regression.torch": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_rff_gp_regression.TestRFFRegression.test_rff_mean_abs_error": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      77,
      83,
      94
     ]
    },
    "gp_model.eval": {
     "line number": [
      91
     ]
    },
    "gp_model.parameters": {
     "line number": [
      86
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      66
     ]
    },
    "gpytorch.utils.warnings.NumericalWarning": {
     "line number": [
      63
     ]
    },
    "likelihood": {
     "line number": [
      83,
      94
     ]
    },
    "likelihood.eval": {
     "line number": [
      92
     ]
    },
    "mll": {
     "line number": [
      78
     ]
    },
    "range": {
     "line number": [
      75
     ]
    },
    "test.examples.test_rff_gp_regression.GPRegressionModel": {
     "line number": [
      67
     ]
    },
    "test.examples.test_rff_gp_regression.gpytorch": {
     "line number": [
      68,
      84
     ]
    },
    "test.examples.test_rff_gp_regression.make_data": {
     "line number": [
      65
     ]
    },
    "test.examples.test_rff_gp_regression.torch": {
     "line number": [
      95,
      95
     ]
    },
    "test.examples.test_rff_gp_regression.warnings": {
     "line number": [
      63
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_rff_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression.make_data": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      24,
      27
     ]
    },
    "test.examples.test_rff_gp_regression.torch": {
     "line number": [
      23,
      24,
      25,
      26,
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_rff_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_rff_gp_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      183
     ]
    },
    "test.examples.test_sgpr_regression.unittest": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_sgpr_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.GPRegressionModel": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "test.examples.test_sgpr_regression.gpytorch": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_sgpr_regression.GPRegressionModel.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "gpytorch.kernels.InducingPointKernel": {
     "line number": [
      43
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      42
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      42
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      41
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      41,
      42
     ]
    },
    "math.exp": {
     "line number": [
      42,
      42
     ]
    },
    "super": {
     "line number": [
      40
     ]
    },
    "test.examples.test_sgpr_regression.GPRegressionModel": {
     "line number": [
      40
     ]
    },
    "test.examples.test_sgpr_regression.torch": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.GPRegressionModel.forward": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.InducingPointKernel": {
  "data": {
   "shadows": "gpytorch.kernels.InducingPointKernel"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.NumericalWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.NumericalWarning"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.TestSGPRRegression": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "test.examples.test_sgpr_regression.unittest": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_sgpr_regression.TestSGPRRegression.setUp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "test.examples.test_sgpr_regression.os": {
     "line number": [
      55,
      55
     ]
    },
    "test.examples.test_sgpr_regression.random": {
     "line number": [
      60
     ]
    },
    "test.examples.test_sgpr_regression.torch": {
     "line number": [
      56,
      57,
      58,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.TestSGPRRegression.tearDown": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      63
     ]
    },
    "test.examples.test_sgpr_regression.torch": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.TestSGPRRegression.test_sgpr_fast_pred_var": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      110,
      111,
      120,
      135,
      136,
      140
     ]
    },
    "gp_model.eval": {
     "line number": [
      130
     ]
    },
    "gp_model.parameters": {
     "line number": [
      117,
      125
     ]
    },
    "gp_model.train": {
     "line number": [
      114
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      109
     ]
    },
    "gpytorch.utils.warnings.NumericalWarning": {
     "line number": [
      106
     ]
    },
    "likelihood": {
     "line number": [
      109,
      110,
      111
     ]
    },
    "likelihood.eval": {
     "line number": [
      131
     ]
    },
    "likelihood.train": {
     "line number": [
      115
     ]
    },
    "mll": {
     "line number": [
      111,
      121
     ]
    },
    "range": {
     "line number": [
      118
     ]
    },
    "test.examples.test_sgpr_regression.GPRegressionModel": {
     "line number": [
      110
     ]
    },
    "test.examples.test_sgpr_regression.gpytorch": {
     "line number": [
      111,
      133,
      133,
      134,
      139
     ]
    },
    "test.examples.test_sgpr_regression.make_data": {
     "line number": [
      108
     ]
    },
    "test.examples.test_sgpr_regression.torch": {
     "line number": [
      137,
      142
     ]
    },
    "test.examples.test_sgpr_regression.warnings": {
     "line number": [
      106
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.TestSGPRRegression.test_sgpr_mean_abs_error": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      82,
      88,
      99
     ]
    },
    "gp_model.eval": {
     "line number": [
      96
     ]
    },
    "gp_model.parameters": {
     "line number": [
      91
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      71
     ]
    },
    "gpytorch.utils.warnings.NumericalWarning": {
     "line number": [
      68
     ]
    },
    "likelihood": {
     "line number": [
      88,
      99
     ]
    },
    "likelihood.eval": {
     "line number": [
      97
     ]
    },
    "mll": {
     "line number": [
      83
     ]
    },
    "range": {
     "line number": [
      80
     ]
    },
    "test.examples.test_sgpr_regression.GPRegressionModel": {
     "line number": [
      72
     ]
    },
    "test.examples.test_sgpr_regression.gpytorch": {
     "line number": [
      73,
      89
     ]
    },
    "test.examples.test_sgpr_regression.make_data": {
     "line number": [
      70
     ]
    },
    "test.examples.test_sgpr_regression.torch": {
     "line number": [
      100,
      100
     ]
    },
    "test.examples.test_sgpr_regression.warnings": {
     "line number": [
      68
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.TestSGPRRegression.test_sgpr_mean_abs_error_cuda": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      153,
      154,
      164,
      177
     ]
    },
    "gp_model.eval": {
     "line number": [
      175
     ]
    },
    "gp_model.parameters": {
     "line number": [
      160,
      170
     ]
    },
    "gp_model.train": {
     "line number": [
      157
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      152
     ]
    },
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      150
     ]
    },
    "gpytorch.utils.warnings.NumericalWarning": {
     "line number": [
      146
     ]
    },
    "likelihood": {
     "line number": [
      152,
      153,
      154,
      177
     ]
    },
    "likelihood.eval": {
     "line number": [
      176
     ]
    },
    "likelihood.train": {
     "line number": [
      158
     ]
    },
    "mll": {
     "line number": [
      154,
      165
     ]
    },
    "range": {
     "line number": [
      162
     ]
    },
    "test.examples.test_sgpr_regression.GPRegressionModel": {
     "line number": [
      153
     ]
    },
    "test.examples.test_sgpr_regression.gpytorch": {
     "line number": [
      154
     ]
    },
    "test.examples.test_sgpr_regression.make_data": {
     "line number": [
      151
     ]
    },
    "test.examples.test_sgpr_regression.torch": {
     "line number": [
      148,
      178,
      178
     ]
    },
    "test.examples.test_sgpr_regression.warnings": {
     "line number": [
      146
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.make_data": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      26,
      29
     ]
    },
    "test.examples.test_sgpr_regression.torch": {
     "line number": [
      25,
      26,
      27,
      28,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_sgpr_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_sgpr_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      81
     ]
    },
    "test.examples.test_simple_gp_classification.unittest": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_simple_gp_classification.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.BernoulliLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.BernoulliLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.CholeskyVariationalDistribution": {
  "data": {
   "shadows": "gpytorch.variational.CholeskyVariationalDistribution"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.GPClassificationModel": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "gpytorch.models.ApproximateGP": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_simple_gp_classification.GPClassificationModel.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "gpytorch.variational.CholeskyVariationalDistribution": {
     "line number": [
      24
     ]
    },
    "gpytorch.variational.UnwhitenedVariationalStrategy": {
     "line number": [
      25
     ]
    },
    "super": {
     "line number": [
      28
     ]
    },
    "test.examples.test_simple_gp_classification.GPClassificationModel": {
     "line number": [
      28
     ]
    },
    "test.examples.test_simple_gp_classification.gpytorch": {
     "line number": [
      29,
      30,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_classification.GPClassificationModel.forward": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "test.examples.test_simple_gp_classification.gpytorch": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_classification.TestSimpleGPClassification": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "test.examples.test_simple_gp_classification.unittest": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_simple_gp_classification.TestSimpleGPClassification.setUp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "test.examples.test_simple_gp_classification.os": {
     "line number": [
      41,
      41
     ]
    },
    "test.examples.test_simple_gp_classification.random": {
     "line number": [
      44
     ]
    },
    "test.examples.test_simple_gp_classification.torch": {
     "line number": [
      42,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_classification.TestSimpleGPClassification.tearDown": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      47
     ]
    },
    "test.examples.test_simple_gp_classification.torch": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_classification.TestSimpleGPClassification.test_classification_error": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "gpytorch.likelihoods.BernoulliLikelihood": {
     "line number": [
      52
     ]
    },
    "len": {
     "line number": [
      54
     ]
    },
    "likelihood": {
     "line number": [
      76
     ]
    },
    "mll": {
     "line number": [
      64
     ]
    },
    "model": {
     "line number": [
      63,
      76
     ]
    },
    "model.eval": {
     "line number": [
      74
     ]
    },
    "model.parameters": {
     "line number": [
      69
     ]
    },
    "range": {
     "line number": [
      61
     ]
    },
    "test.examples.test_simple_gp_classification.GPClassificationModel": {
     "line number": [
      53
     ]
    },
    "test.examples.test_simple_gp_classification.gpytorch": {
     "line number": [
      54
     ]
    },
    "test.examples.test_simple_gp_classification.torch": {
     "line number": [
      77,
      77
     ]
    },
    "test.examples.test_simple_gp_classification.train_data": {
     "line number": [
      51
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_classification.UnwhitenedVariationalStrategy": {
  "data": {
   "shadows": "gpytorch.variational.UnwhitenedVariationalStrategy"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_classification.train_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      18
     ]
    },
    "test.examples.test_simple_gp_classification.torch": {
     "line number": [
      17,
      18,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_classification.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      493
     ]
    },
    "test.examples.test_simple_gp_regression.unittest": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_simple_gp_regression.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.ExactGPModel": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "test.examples.test_simple_gp_regression.gpytorch": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_simple_gp_regression.ExactGPModel.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      24
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      24
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      23
     ]
    },
    "super": {
     "line number": [
      22
     ]
    },
    "test.examples.test_simple_gp_regression.ExactGPModel": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.ExactGPModel.forward": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.MCMC": {
  "data": {
   "shadows": "pyro.infer.mcmc.MCMC"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.NUTS": {
  "data": {
   "shadows": "pyro.infer.mcmc.NUTS"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.Positive": {
  "data": {
   "shadows": "gpytorch.constraints.Positive"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      32
     ]
    },
    "test.examples.test_simple_gp_regression.unittest": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression._get_data": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      39,
      43
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      36,
      36,
      38,
      39,
      41,
      42,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_fantasy_updates": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "fant_model": {
     "line number": [
      317
     ]
    },
    "gp_model": {
     "line number": [
      270,
      271,
      287,
      303,
      313
     ]
    },
    "gp_model.covar_module.base_kernel.initialize": {
     "line number": [
      272
     ]
    },
    "gp_model.cuda": {
     "line number": [
      277
     ]
    },
    "gp_model.eval": {
     "line number": [
      301
     ]
    },
    "gp_model.get_fantasy_model": {
     "line number": [
      316
     ]
    },
    "gp_model.mean_module.initialize": {
     "line number": [
      273
     ]
    },
    "gp_model.parameters": {
     "line number": [
      283,
      292
     ]
    },
    "gp_model.set_train_data": {
     "line number": [
      298,
      309,
      312
     ]
    },
    "gp_model.train": {
     "line number": [
      281
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      269
     ]
    },
    "likelihood": {
     "line number": [
      269,
      270,
      271,
      303,
      313,
      317
     ]
    },
    "likelihood.cuda": {
     "line number": [
      278
     ]
    },
    "likelihood.eval": {
     "line number": [
      302
     ]
    },
    "likelihood.initialize": {
     "line number": [
      274
     ]
    },
    "likelihood.train": {
     "line number": [
      282
     ]
    },
    "math.exp": {
     "line number": [
      272,
      274
     ]
    },
    "mll": {
     "line number": [
      271,
      288
     ]
    },
    "range": {
     "line number": [
      284
     ]
    },
    "test.examples.test_simple_gp_regression.ExactGPModel": {
     "line number": [
      270
     ]
    },
    "test.examples.test_simple_gp_regression.gpytorch": {
     "line number": [
      271,
      286,
      299,
      299
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      324
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_fantasy_updates_batch": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "fant_model": {
     "line number": [
      375,
      376
     ]
    },
    "gp_model": {
     "line number": [
      336,
      337,
      353,
      367,
      371
     ]
    },
    "gp_model.covar_module.base_kernel.initialize": {
     "line number": [
      338
     ]
    },
    "gp_model.cuda": {
     "line number": [
      343
     ]
    },
    "gp_model.eval": {
     "line number": [
      365
     ]
    },
    "gp_model.get_fantasy_model": {
     "line number": [
      375
     ]
    },
    "gp_model.mean_module.initialize": {
     "line number": [
      339
     ]
    },
    "gp_model.parameters": {
     "line number": [
      349,
      358
     ]
    },
    "gp_model.set_train_data": {
     "line number": [
      370
     ]
    },
    "gp_model.train": {
     "line number": [
      347
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      335
     ]
    },
    "likelihood": {
     "line number": [
      335,
      336,
      337,
      367,
      371,
      376
     ]
    },
    "likelihood.cuda": {
     "line number": [
      344
     ]
    },
    "likelihood.eval": {
     "line number": [
      366
     ]
    },
    "likelihood.initialize": {
     "line number": [
      340
     ]
    },
    "likelihood.train": {
     "line number": [
      348
     ]
    },
    "math.exp": {
     "line number": [
      338,
      340
     ]
    },
    "mll": {
     "line number": [
      337,
      354
     ]
    },
    "range": {
     "line number": [
      350
     ]
    },
    "test.examples.test_simple_gp_regression.ExactGPModel": {
     "line number": [
      336
     ]
    },
    "test.examples.test_simple_gp_regression.gpytorch": {
     "line number": [
      337,
      352,
      363
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_fantasy_updates_batch_cuda": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      329
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_fantasy_updates_cuda": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      263
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_gp_posterior_mean_skip_variances_fast_cuda": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      148,
      158,
      159,
      160
     ]
    },
    "gp_model.cuda": {
     "line number": [
      150
     ]
    },
    "gp_model.eval": {
     "line number": [
      154
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      147
     ]
    },
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      145
     ]
    },
    "likelihood": {
     "line number": [
      147,
      148,
      160
     ]
    },
    "likelihood.cuda": {
     "line number": [
      151
     ]
    },
    "likelihood.eval": {
     "line number": [
      155
     ]
    },
    "test.examples.test_simple_gp_regression.ExactGPModel": {
     "line number": [
      148
     ]
    },
    "test.examples.test_simple_gp_regression.gpytorch": {
     "line number": [
      157
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      143,
      162,
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_gp_posterior_mean_skip_variances_slow_cuda": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      171,
      182,
      183,
      184
     ]
    },
    "gp_model.cuda": {
     "line number": [
      173
     ]
    },
    "gp_model.eval": {
     "line number": [
      177
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      170
     ]
    },
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      168
     ]
    },
    "likelihood": {
     "line number": [
      170,
      171,
      184
     ]
    },
    "likelihood.cuda": {
     "line number": [
      174
     ]
    },
    "likelihood.eval": {
     "line number": [
      178
     ]
    },
    "test.examples.test_simple_gp_regression.ExactGPModel": {
     "line number": [
      171
     ]
    },
    "test.examples.test_simple_gp_regression.gpytorch": {
     "line number": [
      180,
      181
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      166,
      185,
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_gp_posterior_single_training_point_smoke_test": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      193,
      199,
      209
     ]
    },
    "gp_model.eval": {
     "line number": [
      195,
      207
     ]
    },
    "gp_model.train": {
     "line number": [
      206
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      192
     ]
    },
    "likelihood": {
     "line number": [
      192,
      193
     ]
    },
    "likelihood.eval": {
     "line number": [
      196
     ]
    },
    "test.examples.test_simple_gp_regression.ExactGPModel": {
     "line number": [
      193
     ]
    },
    "test.examples.test_simple_gp_regression.gpytorch": {
     "line number": [
      198
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      203,
      203,
      204,
      204,
      213,
      213,
      214,
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_gp_with_checkpointing": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_latent_gp_and_likelihood_fast_pred_var": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      404,
      405,
      420,
      434,
      439
     ]
    },
    "gp_model.covar_module.base_kernel.initialize": {
     "line number": [
      406
     ]
    },
    "gp_model.cuda": {
     "line number": [
      411
     ]
    },
    "gp_model.eval": {
     "line number": [
      431
     ]
    },
    "gp_model.mean_module.initialize": {
     "line number": [
      407
     ]
    },
    "gp_model.parameters": {
     "line number": [
      417,
      425
     ]
    },
    "gp_model.train": {
     "line number": [
      415
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      403
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      403
     ]
    },
    "likelihood": {
     "line number": [
      403,
      404,
      405,
      434,
      439
     ]
    },
    "likelihood.cuda": {
     "line number": [
      412
     ]
    },
    "likelihood.eval": {
     "line number": [
      432
     ]
    },
    "likelihood.initialize": {
     "line number": [
      408
     ]
    },
    "likelihood.noise_covar.noise": {
     "line number": [
      441
     ]
    },
    "likelihood.noise_covar.raw_noise.data.fill_": {
     "line number": [
      438
     ]
    },
    "likelihood.train": {
     "line number": [
      416
     ]
    },
    "math.exp": {
     "line number": [
      403,
      403,
      406,
      408
     ]
    },
    "mll": {
     "line number": [
      405,
      421
     ]
    },
    "range": {
     "line number": [
      418
     ]
    },
    "test.examples.test_simple_gp_regression.ExactGPModel": {
     "line number": [
      404
     ]
    },
    "test.examples.test_simple_gp_regression.gpytorch": {
     "line number": [
      400,
      400,
      405
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      444
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_latent_gp_and_likelihood_fast_pred_var_cuda": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      489
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      488
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_latent_gp_and_likelihood_with_optimization": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      218
     ]
    },
    "gp_model": {
     "line number": [
      222,
      223,
      239,
      253
     ]
    },
    "gp_model.covar_module.base_kernel.initialize": {
     "line number": [
      224
     ]
    },
    "gp_model.cuda": {
     "line number": [
      229
     ]
    },
    "gp_model.eval": {
     "line number": [
      250
     ]
    },
    "gp_model.mean_module.initialize": {
     "line number": [
      225
     ]
    },
    "gp_model.parameters": {
     "line number": [
      235,
      244
     ]
    },
    "gp_model.train": {
     "line number": [
      233
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      221
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      221
     ]
    },
    "likelihood": {
     "line number": [
      221,
      222,
      223,
      253
     ]
    },
    "likelihood.cuda": {
     "line number": [
      230
     ]
    },
    "likelihood.eval": {
     "line number": [
      251
     ]
    },
    "likelihood.initialize": {
     "line number": [
      226
     ]
    },
    "likelihood.train": {
     "line number": [
      234
     ]
    },
    "math.exp": {
     "line number": [
      221,
      221,
      224,
      226
     ]
    },
    "mll": {
     "line number": [
      240
     ]
    },
    "range": {
     "line number": [
      237
     ]
    },
    "test.examples.test_simple_gp_regression.ExactGPModel": {
     "line number": [
      222
     ]
    },
    "test.examples.test_simple_gp_regression.gpytorch": {
     "line number": [
      223,
      236,
      236,
      252
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      254,
      254
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_latent_gp_and_likelihood_with_optimization_cuda": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      385
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_latent_gp_and_likelihood_without_optimization": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      108,
      123,
      129
     ]
    },
    "gp_model.covar_module.base_kernel.initialize": {
     "line number": [
      109
     ]
    },
    "gp_model.covar_module.outputscale.expand_as": {
     "line number": [
      134
     ]
    },
    "gp_model.cuda": {
     "line number": [
      113
     ]
    },
    "gp_model.eval": {
     "line number": [
      117
     ]
    },
    "gpytorch.constraints.Positive": {
     "line number": [
      107
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      107
     ]
    },
    "likelihood": {
     "line number": [
      107,
      108,
      123
     ]
    },
    "likelihood.cuda": {
     "line number": [
      114
     ]
    },
    "likelihood.eval": {
     "line number": [
      118
     ]
    },
    "likelihood.initialize": {
     "line number": [
      110
     ]
    },
    "math.exp": {
     "line number": [
      109,
      110
     ]
    },
    "test.examples.test_simple_gp_regression.ExactGPModel": {
     "line number": [
      108
     ]
    },
    "test.examples.test_simple_gp_regression.gpytorch": {
     "line number": [
      104,
      122
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      126,
      129,
      131
     ]
    },
    "test.examples.test_simple_gp_regression.warnings": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_latent_gp_and_likelihood_without_optimization_cuda": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      139
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_with_exact_computations": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "test.examples.test_simple_gp_regression.gpytorch": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_posterior_with_exact_computations_cuda": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      394
     ]
    },
    "test.examples.test_simple_gp_regression.gpytorch": {
     "line number": [
      395
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_prior": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      71
     ]
    },
    "gp_model.covar_module.outputscale": {
     "line number": [
      72
     ]
    },
    "gpytorch.constraints.Positive": {
     "line number": [
      51
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      49
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      50,
      56
     ]
    },
    "likelihood": {
     "line number": [
      71
     ]
    },
    "likelihood.noise": {
     "line number": [
      72
     ]
    },
    "math.exp": {
     "line number": [
      50,
      50,
      56,
      56
     ]
    },
    "test.examples.test_simple_gp_regression.ExactGPModel": {
     "line number": [
      53
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_prior_cuda": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      81
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_pyro_sampling": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      450
     ]
    },
    "gp_model": {
     "line number": [
      454,
      462,
      478
     ]
    },
    "gp_model.covar_module.base_kernel.register_prior": {
     "line number": [
      458
     ]
    },
    "gp_model.covar_module.register_prior": {
     "line number": [
      459
     ]
    },
    "gp_model.eval": {
     "line number": [
      476
     ]
    },
    "gp_model.mean_module.register_prior": {
     "line number": [
      457
     ]
    },
    "gp_model.pyro_load_from_samples": {
     "line number": [
      474
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      453
     ]
    },
    "gpytorch.priors.UniformPrior": {
     "line number": [
      457,
      458,
      459,
      460
     ]
    },
    "likelihood": {
     "line number": [
      453,
      454,
      462
     ]
    },
    "likelihood.register_prior": {
     "line number": [
      460
     ]
    },
    "mll": {
     "line number": [
      462
     ]
    },
    "pyro.infer.mcmc.MCMC": {
     "line number": [
      471
     ]
    },
    "pyro.infer.mcmc.NUTS": {
     "line number": [
      470
     ]
    },
    "test.examples.test_simple_gp_regression.ExactGPModel": {
     "line number": [
      454
     ]
    },
    "test.examples.test_simple_gp_regression.gpytorch": {
     "line number": [
      453,
      462
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      483,
      484,
      485
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_pyro_sampling.pyro_model": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      466
     ]
    },
    "gp_model.pyro_sample_from_prior": {
     "line number": [
      465
     ]
    },
    "mll.pyro_factor": {
     "line number": [
      467
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.TestSimpleGPRegression.test_recursive_initialize": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      87,
      90
     ]
    },
    "test.examples.test_simple_gp_regression.ExactGPModel": {
     "line number": [
      88,
      91
     ]
    },
    "test.examples.test_simple_gp_regression.torch": {
     "line number": [
      96,
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_simple_gp_regression.UniformPrior": {
  "data": {
   "shadows": "gpytorch.priors.UniformPrior"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.pyro": {
  "data": {
   "shadows": "pyro"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_simple_gp_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      107
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      28
     ]
    },
    "math.pi": {
     "line number": [
      21,
      26
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.test_x": {
     "line number": [
      26
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.torch": {
     "line number": [
      20,
      21,
      25,
      26,
      30,
      31,
      32,
      35,
      39
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.train_x": {
     "line number": [
      21
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.unittest": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_spectral_mixture_gp_regression.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.SpectralMixtureGPModel": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "test.examples.test_spectral_mixture_gp_regression.gpytorch": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_spectral_mixture_gp_regression.SpectralMixtureGPModel.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "gpytorch.kernels.SpectralMixtureKernel": {
     "line number": [
      49
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      48
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      48
     ]
    },
    "super": {
     "line number": [
      47
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.SpectralMixtureGPModel": {
     "line number": [
      47
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.train_x": {
     "line number": [
      47,
      51,
      53
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.train_y": {
     "line number": [
      47,
      51,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_spectral_mixture_gp_regression.SpectralMixtureGPModel.forward": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_spectral_mixture_gp_regression.SpectralMixtureKernel": {
  "data": {
   "shadows": "gpytorch.kernels.SpectralMixtureKernel"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.TestSpectralMixtureGPRegression": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      61
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.unittest": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_spectral_mixture_gp_regression.TestSpectralMixtureGPRegression.test_spectral_mixture_gp_mean_abs_error": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      83,
      99
     ]
    },
    "gp_model.eval": {
     "line number": [
      97
     ]
    },
    "gp_model.parameters": {
     "line number": [
      90
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      68
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      68
     ]
    },
    "likelihood": {
     "line number": [
      99
     ]
    },
    "list": {
     "line number": [
      75
     ]
    },
    "math.exp": {
     "line number": [
      68,
      68
     ]
    },
    "mll": {
     "line number": [
      84
     ]
    },
    "range": {
     "line number": [
      81
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.SpectralMixtureGPModel": {
     "line number": [
      69
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.good_state_dict": {
     "line number": [
      79
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.gpytorch": {
     "line number": [
      70
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.test_x": {
     "line number": [
      99
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.test_y": {
     "line number": [
      100
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.torch": {
     "line number": [
      96,
      100,
      100
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.train_x": {
     "line number": [
      69,
      83
     ]
    },
    "test.examples.test_spectral_mixture_gp_regression.train_y": {
     "line number": [
      69,
      84
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_spectral_mixture_gp_regression.TestSpectralMixtureGPRegression.test_spectral_mixture_gp_mean_abs_error_empspect_init": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "test.examples.test_spectral_mixture_gp_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.good_state_dict": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "test.examples.test_spectral_mixture_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.test_x": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "test.examples.test_spectral_mixture_gp_regression.test_y": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.examples.test_spectral_mixture_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_spectral_mixture_gp_regression.train_x": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "test.examples.test_spectral_mixture_gp_regression.train_y": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.examples.test_spectral_mixture_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      92
     ]
    },
    "test.examples.test_svgp_gp_classification.unittest": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_svgp_gp_classification.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.BernoulliLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.BernoulliLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.CholeskyVariationalDistribution": {
  "data": {
   "shadows": "gpytorch.variational.CholeskyVariationalDistribution"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.SVGPClassificationModel": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "gpytorch.models.ApproximateGP": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_svgp_gp_classification.SVGPClassificationModel.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "gpytorch.variational.CholeskyVariationalDistribution": {
     "line number": [
      27
     ]
    },
    "gpytorch.variational.VariationalStrategy": {
     "line number": [
      28
     ]
    },
    "super": {
     "line number": [
      31
     ]
    },
    "test.examples.test_svgp_gp_classification.SVGPClassificationModel": {
     "line number": [
      31
     ]
    },
    "test.examples.test_svgp_gp_classification.gpytorch": {
     "line number": [
      32,
      33,
      34,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_classification.SVGPClassificationModel.forward": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "test.examples.test_svgp_gp_classification.gpytorch": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_classification.TestSVGPClassification": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      44
     ]
    },
    "test.examples.test_svgp_gp_classification.unittest": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_svgp_gp_classification.TestSVGPClassification.test_classification_error": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "gpytorch.likelihoods.BernoulliLikelihood": {
     "line number": [
      49
     ]
    },
    "len": {
     "line number": [
      51
     ]
    },
    "likelihood": {
     "line number": [
      82
     ]
    },
    "mll": {
     "line number": [
      68
     ]
    },
    "mll_cls": {
     "line number": [
      51
     ]
    },
    "model": {
     "line number": [
      67,
      82
     ]
    },
    "model.eval": {
     "line number": [
      80
     ]
    },
    "model.parameters": {
     "line number": [
      72
     ]
    },
    "range": {
     "line number": [
      65
     ]
    },
    "test.examples.test_svgp_gp_classification.SVGPClassificationModel": {
     "line number": [
      50
     ]
    },
    "test.examples.test_svgp_gp_classification.gpytorch": {
     "line number": [
      47,
      62
     ]
    },
    "test.examples.test_svgp_gp_classification.torch": {
     "line number": [
      50,
      83,
      83
     ]
    },
    "test.examples.test_svgp_gp_classification.train_data": {
     "line number": [
      48
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      60
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      62
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_classification.TestSVGPClassification.test_predictive_ll_classification_error": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "test.examples.test_svgp_gp_classification.gpytorch": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_classification.VariationalStrategy": {
  "data": {
   "shadows": "gpytorch.variational.VariationalStrategy"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_classification.train_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "test.examples.test_svgp_gp_classification.math": {
     "line number": [
      18
     ]
    },
    "test.examples.test_svgp_gp_classification.torch": {
     "line number": [
      17,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_classification.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      139
     ]
    },
    "test.examples.test_svgp_gp_regression.unittest": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_svgp_gp_regression.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.OldVersionWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.OldVersionWarning"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.SVGPRegressionModel": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "gpytorch.models.ApproximateGP": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_svgp_gp_regression.SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "distribution_cls": {
     "line number": [
      30
     ]
    },
    "super": {
     "line number": [
      34
     ]
    },
    "test.examples.test_svgp_gp_regression.SVGPRegressionModel": {
     "line number": [
      34
     ]
    },
    "test.examples.test_svgp_gp_regression.gpytorch": {
     "line number": [
      31,
      35,
      36,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.SVGPRegressionModel.forward": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "test.examples.test_svgp_gp_regression.gpytorch": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.TestSVGPRegression": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      45
     ]
    },
    "test.examples.test_svgp_gp_regression.unittest": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_svgp_gp_regression.TestSVGPRegression.test_loading_old_model": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "any": {
     "line number": [
      61
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      50
     ]
    },
    "gpytorch.utils.warnings.OldVersionWarning": {
     "line number": [
      58,
      61
     ]
    },
    "issubclass": {
     "line number": [
      61
     ]
    },
    "likelihood": {
     "line number": [
      66
     ]
    },
    "model": {
     "line number": [
      66
     ]
    },
    "pathlib.Path": {
     "line number": [
      52
     ]
    },
    "test.examples.test_svgp_gp_regression.SVGPRegressionModel": {
     "line number": [
      51
     ]
    },
    "test.examples.test_svgp_gp_regression.gpytorch": {
     "line number": [
      51
     ]
    },
    "test.examples.test_svgp_gp_regression.torch": {
     "line number": [
      51,
      53,
      63,
      67,
      67
     ]
    },
    "test.examples.test_svgp_gp_regression.train_data": {
     "line number": [
      49
     ]
    },
    "test.examples.test_svgp_gp_regression.warnings": {
     "line number": [
      57,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.TestSVGPRegression.test_predictive_ll_regression_error": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "test.examples.test_svgp_gp_regression.gpytorch": {
     "line number": [
      119,
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.TestSVGPRegression.test_predictive_ll_regression_error_delta": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "test.examples.test_svgp_gp_regression.gpytorch": {
     "line number": [
      125,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.TestSVGPRegression.test_regression_error": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "distribution_cls": {
     "line number": [
      78
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      77
     ]
    },
    "len": {
     "line number": [
      79
     ]
    },
    "likelihood": {
     "line number": [
      77,
      79,
      81,
      110
     ]
    },
    "likelihood.cuda": {
     "line number": [
      81
     ]
    },
    "likelihood.eval": {
     "line number": [
      109
     ]
    },
    "likelihood.parameters": {
     "line number": [
      88,
      103
     ]
    },
    "likelihood.train": {
     "line number": [
      87
     ]
    },
    "mll": {
     "line number": [
      96
     ]
    },
    "mll_cls": {
     "line number": [
      79
     ]
    },
    "model": {
     "line number": [
      78,
      79,
      82,
      95,
      110
     ]
    },
    "model.cuda": {
     "line number": [
      82
     ]
    },
    "model.eval": {
     "line number": [
      108
     ]
    },
    "model.parameters": {
     "line number": [
      88,
      100
     ]
    },
    "model.train": {
     "line number": [
      86
     ]
    },
    "range": {
     "line number": [
      93
     ]
    },
    "test.examples.test_svgp_gp_regression.SVGPRegressionModel": {
     "line number": [
      78
     ]
    },
    "test.examples.test_svgp_gp_regression.gpytorch": {
     "line number": [
      73,
      74,
      90
     ]
    },
    "test.examples.test_svgp_gp_regression.torch": {
     "line number": [
      78,
      111,
      111
     ]
    },
    "test.examples.test_svgp_gp_regression.train_data": {
     "line number": [
      76
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      88
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      90
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.TestSVGPRegression.test_regression_error_cuda": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      135
     ]
    },
    "test.examples.test_svgp_gp_regression.torch": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.TestSVGPRegression.test_robust_regression_error": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "test.examples.test_svgp_gp_regression.gpytorch": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.train_data": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "test.examples.test_svgp_gp_regression.math": {
     "line number": [
      21
     ]
    },
    "test.examples.test_svgp_gp_regression.torch": {
     "line number": [
      20,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_svgp_gp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_svgp_gp_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      85
     ]
    },
    "test.examples.test_unwhitened_svgp_regression.unittest": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_unwhitened_svgp_regression.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.SVGPRegressionModel": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "gpytorch.models.ApproximateGP": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_unwhitened_svgp_regression.SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "distribution_cls": {
     "line number": [
      25
     ]
    },
    "super": {
     "line number": [
      29
     ]
    },
    "test.examples.test_unwhitened_svgp_regression.SVGPRegressionModel": {
     "line number": [
      29
     ]
    },
    "test.examples.test_unwhitened_svgp_regression.gpytorch": {
     "line number": [
      26,
      30,
      31,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_unwhitened_svgp_regression.SVGPRegressionModel.forward": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "test.examples.test_unwhitened_svgp_regression.gpytorch": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_unwhitened_svgp_regression.TestSVGPRegression": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      40
     ]
    },
    "test.examples.test_unwhitened_svgp_regression.unittest": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_unwhitened_svgp_regression.TestSVGPRegression.test_regression_error": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "distribution_cls": {
     "line number": [
      51
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      50
     ]
    },
    "len": {
     "line number": [
      52
     ]
    },
    "likelihood": {
     "line number": [
      80
     ]
    },
    "mll": {
     "line number": [
      66
     ]
    },
    "mll_cls": {
     "line number": [
      52
     ]
    },
    "model": {
     "line number": [
      65,
      80
     ]
    },
    "model.eval": {
     "line number": [
      78
     ]
    },
    "model.parameters": {
     "line number": [
      70
     ]
    },
    "range": {
     "line number": [
      63
     ]
    },
    "test.examples.test_unwhitened_svgp_regression.SVGPRegressionModel": {
     "line number": [
      51
     ]
    },
    "test.examples.test_unwhitened_svgp_regression.gpytorch": {
     "line number": [
      46,
      47
     ]
    },
    "test.examples.test_unwhitened_svgp_regression.torch": {
     "line number": [
      51,
      81,
      81
     ]
    },
    "test.examples.test_unwhitened_svgp_regression.train_data": {
     "line number": [
      49
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_unwhitened_svgp_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_unwhitened_svgp_regression.train_data": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "test.examples.test_unwhitened_svgp_regression.math": {
     "line number": [
      16
     ]
    },
    "test.examples.test_unwhitened_svgp_regression.torch": {
     "line number": [
      15,
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_unwhitened_svgp_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      163
     ]
    },
    "test.examples.test_white_noise_regression.unittest": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "module"
 },
 "test.examples.test_white_noise_regression.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.ExactGPModel": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "test.examples.test_white_noise_regression.gpytorch": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_white_noise_regression.ExactGPModel.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      25
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      26
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      24
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      24,
      25
     ]
    },
    "math.exp": {
     "line number": [
      25,
      25
     ]
    },
    "super": {
     "line number": [
      23
     ]
    },
    "test.examples.test_white_noise_regression.ExactGPModel": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.ExactGPModel.forward": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.GPInputWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.GPInputWarning"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "test.examples.test_white_noise_regression.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression._get_data": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "math.pi": {
     "line number": [
      51,
      53
     ]
    },
    "test.examples.test_white_noise_regression.torch": {
     "line number": [
      48,
      48,
      50,
      51,
      52,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.setUp": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "test.examples.test_white_noise_regression.os": {
     "line number": [
      36,
      36
     ]
    },
    "test.examples.test_white_noise_regression.random": {
     "line number": [
      41
     ]
    },
    "test.examples.test_white_noise_regression.torch": {
     "line number": [
      37,
      38,
      39,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.tearDown": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      44
     ]
    },
    "test.examples.test_white_noise_regression.torch": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.test_posterior_latent_gp_and_likelihood_fast_pred_var": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      113,
      114,
      130,
      145,
      150
     ]
    },
    "gp_model.cuda": {
     "line number": [
      120
     ]
    },
    "gp_model.eval": {
     "line number": [
      142
     ]
    },
    "gp_model.mean_module.initialize": {
     "line number": [
      116
     ]
    },
    "gp_model.parameters": {
     "line number": [
      126,
      136
     ]
    },
    "gp_model.rbf_covar_module.initialize": {
     "line number": [
      115
     ]
    },
    "gp_model.train": {
     "line number": [
      124
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      112
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      112
     ]
    },
    "likelihood": {
     "line number": [
      112,
      113,
      114,
      145,
      150
     ]
    },
    "likelihood.cuda": {
     "line number": [
      121
     ]
    },
    "likelihood.eval": {
     "line number": [
      143
     ]
    },
    "likelihood.initialize": {
     "line number": [
      117
     ]
    },
    "likelihood.noise": {
     "line number": [
      152
     ]
    },
    "likelihood.raw_noise.data.fill_": {
     "line number": [
      149
     ]
    },
    "likelihood.train": {
     "line number": [
      125
     ]
    },
    "math.exp": {
     "line number": [
      112,
      112,
      115,
      117
     ]
    },
    "mll": {
     "line number": [
      114,
      131
     ]
    },
    "range": {
     "line number": [
      128
     ]
    },
    "test.examples.test_white_noise_regression.ExactGPModel": {
     "line number": [
      113
     ]
    },
    "test.examples.test_white_noise_regression.gpytorch": {
     "line number": [
      110,
      110,
      114
     ]
    },
    "test.examples.test_white_noise_regression.torch": {
     "line number": [
      155
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.test_posterior_latent_gp_and_likelihood_fast_pred_var_cuda": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      159
     ]
    },
    "test.examples.test_white_noise_regression.torch": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.test_posterior_latent_gp_and_likelihood_with_optimization": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "gp_model": {
     "line number": [
      81,
      95
     ]
    },
    "gp_model.eval": {
     "line number": [
      93
     ]
    },
    "gp_model.parameters": {
     "line number": [
      87
     ]
    },
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood": {
     "line number": [
      62
     ]
    },
    "gpytorch.utils.warnings.GPInputWarning": {
     "line number": [
      58
     ]
    },
    "likelihood": {
     "line number": [
      95
     ]
    },
    "math.exp": {
     "line number": [
      65
     ]
    },
    "mll": {
     "line number": [
      82
     ]
    },
    "range": {
     "line number": [
      79
     ]
    },
    "test.examples.test_white_noise_regression.ExactGPModel": {
     "line number": [
      63
     ]
    },
    "test.examples.test_white_noise_regression.gpytorch": {
     "line number": [
      64,
      78,
      78
     ]
    },
    "test.examples.test_white_noise_regression.torch": {
     "line number": [
      62,
      96,
      96
     ]
    },
    "test.examples.test_white_noise_regression.warnings": {
     "line number": [
      58
     ]
    },
    "torch.optim.Adam": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.test_posterior_latent_gp_and_likelihood_with_optimization_cuda": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      105
     ]
    },
    "test.examples.test_white_noise_regression.torch": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.TestWhiteNoiseGPRegression.test_posterior_latent_gp_and_likelihood_with_optimization_with_cg": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "test.examples.test_white_noise_regression.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.examples.test_white_noise_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.functions": {
  "data": {},
  "type": "module"
 },
 "test.functions.test_dsmm": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      151
     ]
    },
    "test.functions.test_dsmm.unittest": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "module"
 },
 "test.functions.test_dsmm.TestDSMM": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "test.functions.test_dsmm.unittest": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_dsmm.TestDSMM.test_backward": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "test.functions.test_dsmm.gpytorch": {
     "line number": [
      51
     ]
    },
    "test.functions.test_dsmm.torch": {
     "line number": [
      44,
      44,
      45,
      45,
      46,
      46,
      47,
      49,
      53,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_backward_batch": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "test.functions.test_dsmm.gpytorch": {
     "line number": [
      65
     ]
    },
    "test.functions.test_dsmm.torch": {
     "line number": [
      58,
      58,
      59,
      59,
      60,
      60,
      61,
      63,
      67,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_backward_multi_batch": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "test.functions.test_dsmm.gpytorch": {
     "line number": [
      81
     ]
    },
    "test.functions.test_dsmm.torch": {
     "line number": [
      72,
      73,
      75,
      75,
      76,
      76,
      77,
      79,
      83,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_broadcast_rhs": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "test.functions.test_dsmm.gpytorch": {
     "line number": [
      94,
      109
     ]
    },
    "test.functions.test_dsmm.torch": {
     "line number": [
      88,
      88,
      89,
      89,
      90,
      90,
      91,
      95,
      96,
      98,
      101,
      103,
      103,
      104,
      104,
      105,
      105,
      106,
      110,
      111,
      113,
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_broadcast_singleton": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "test.functions.test_dsmm.gpytorch": {
     "line number": [
      141
     ]
    },
    "test.functions.test_dsmm.torch": {
     "line number": [
      135,
      135,
      136,
      136,
      137,
      137,
      138,
      142,
      143,
      145,
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_broadcast_sparse": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "test.functions.test_dsmm.gpytorch": {
     "line number": [
      125
     ]
    },
    "test.functions.test_dsmm.torch": {
     "line number": [
      119,
      119,
      120,
      120,
      121,
      121,
      122,
      126,
      127,
      129,
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_forward": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.functions.test_dsmm.gpytorch": {
     "line number": [
      17
     ]
    },
    "test.functions.test_dsmm.torch": {
     "line number": [
      12,
      12,
      13,
      13,
      14,
      14,
      15,
      18,
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_forward_batch": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "test.functions.test_dsmm.gpytorch": {
     "line number": [
      27
     ]
    },
    "test.functions.test_dsmm.torch": {
     "line number": [
      22,
      22,
      23,
      23,
      24,
      24,
      25,
      28,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_dsmm.TestDSMM.test_forward_multi_batch": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "test.functions.test_dsmm.gpytorch": {
     "line number": [
      39
     ]
    },
    "test.functions.test_dsmm.torch": {
     "line number": [
      32,
      33,
      35,
      35,
      36,
      36,
      37,
      40,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_dsmm.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.functions.test_dsmm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_dsmm.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_inv_matmul": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      80
     ]
    },
    "test.functions.test_inv_matmul.unittest": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "module"
 },
 "test.functions.test_inv_matmul.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.functions.test_inv_matmul.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.functions.test_inv_matmul.TestInvMatmulBatch": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "test.functions.test_inv_matmul.TestInvMatmulNonBatch": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_inv_matmul.TestInvMatmulBatch._create_mat": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "test.functions.test_inv_matmul.torch": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_matmul.TestInvMatmulNonBatch": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      20
     ]
    },
    "test.functions.test_inv_matmul.unittest": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_inv_matmul.TestInvMatmulNonBatch._create_mat": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "test.functions.test_inv_matmul.torch": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_matmul.TestInvMatmulNonBatch.test_inv_matmul_multiple_vecs": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      59
     ]
    },
    "gpytorch.settings.terminate_cg_by_size": {
     "line number": [
      58
     ]
    },
    "test.functions.test_inv_matmul._ensure_symmetric_grad": {
     "line number": [
      53
     ]
    },
    "test.functions.test_inv_matmul.torch": {
     "line number": [
      54,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_matmul.TestInvMatmulNonBatch.test_inv_matmul_vec": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      39
     ]
    },
    "gpytorch.settings.terminate_cg_by_size": {
     "line number": [
      38
     ]
    },
    "test.functions.test_inv_matmul._ensure_symmetric_grad": {
     "line number": [
      33
     ]
    },
    "test.functions.test_inv_matmul.torch": {
     "line number": [
      34,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_matmul._ensure_symmetric_grad": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "test.functions.test_inv_matmul.torch": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_matmul.settings": {
  "data": {
   "shadows": "gpytorch.settings"
  },
  "type": "import"
 },
 "test.functions.test_inv_matmul.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_inv_matmul.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      168
     ]
    },
    "test.functions.test_inv_quad.unittest": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "module"
 },
 "test.functions.test_inv_quad.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad.TestInvQuadBatch": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "test.functions.test_inv_quad.unittest": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_inv_quad.TestInvQuadBatch.setUp": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "test.functions.test_inv_quad.os": {
     "line number": [
      77,
      77
     ]
    },
    "test.functions.test_inv_quad.random": {
     "line number": [
      82
     ]
    },
    "test.functions.test_inv_quad.torch": {
     "line number": [
      78,
      79,
      80,
      81,
      84,
      86,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadBatch.tearDown": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      73
     ]
    },
    "test.functions.test_inv_quad.torch": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadBatch.test_inv_quad_many_vectors": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      103
     ]
    },
    "test.functions.test_inv_quad.gpytorch": {
     "line number": [
      102
     ]
    },
    "test.functions.test_inv_quad.torch": {
     "line number": [
      96,
      107,
      110,
      110,
      114,
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadMultiBatch": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "test.functions.test_inv_quad.unittest": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_inv_quad.TestInvQuadMultiBatch.setUp": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "test.functions.test_inv_quad.os": {
     "line number": [
      124,
      124
     ]
    },
    "test.functions.test_inv_quad.random": {
     "line number": [
      129
     ]
    },
    "test.functions.test_inv_quad.torch": {
     "line number": [
      125,
      126,
      127,
      128,
      131,
      133,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadMultiBatch.tearDown": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      120
     ]
    },
    "test.functions.test_inv_quad.torch": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadMultiBatch.test_inv_quad_many_vectors": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      153
     ]
    },
    "test.functions.test_inv_quad.gpytorch": {
     "line number": [
      152
     ]
    },
    "test.functions.test_inv_quad.torch": {
     "line number": [
      144,
      157,
      160,
      160,
      164,
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadNonBatch": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "test.functions.test_inv_quad.unittest": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_inv_quad.TestInvQuadNonBatch.setUp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "test.functions.test_inv_quad.os": {
     "line number": [
      19,
      19
     ]
    },
    "test.functions.test_inv_quad.random": {
     "line number": [
      24
     ]
    },
    "test.functions.test_inv_quad.torch": {
     "line number": [
      20,
      21,
      22,
      23,
      26,
      28,
      29,
      30,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadNonBatch.tearDown": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      15
     ]
    },
    "test.functions.test_inv_quad.torch": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadNonBatch.test_inv_quad_many_vectors": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      59
     ]
    },
    "test.functions.test_inv_quad.gpytorch": {
     "line number": [
      58
     ]
    },
    "test.functions.test_inv_quad.torch": {
     "line number": [
      67,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.TestInvQuadNonBatch.test_inv_quad_vector": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      43
     ]
    },
    "test.functions.test_inv_quad.gpytorch": {
     "line number": [
      42
     ]
    },
    "test.functions.test_inv_quad.torch": {
     "line number": [
      52,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad_log_det": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      144
     ]
    },
    "test.functions.test_inv_quad_log_det.unittest": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "module"
 },
 "test.functions.test_inv_quad_log_det.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad_log_det.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad_log_det.RootLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.RootLazyTensor"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetBatch": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch": {
     "line number": [
      122
     ]
    },
    "test.functions.test_inv_quad_log_det.torch": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetBatch.test_inv_quad_logdet_vector": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetBatch.test_inv_quad_only_vector": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetBatch.test_precond_inv_quad_logdet_vector": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetBatch.test_precond_inv_quad_only_vector": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetMultiBatch": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "test.functions.test_inv_quad_log_det.TestInvQuadLogDetBatch": {
     "line number": [
      139
     ]
    },
    "test.functions.test_inv_quad_log_det.torch": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      13
     ]
    },
    "test.functions.test_inv_quad_log_det.torch": {
     "line number": [
      15
     ]
    },
    "test.functions.test_inv_quad_log_det.unittest": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch._test_inv_quad_logdet": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "gpytorch.lazy.RootLazyTensor": {
     "line number": [
      50
     ]
    },
    "test.functions.test_inv_quad_log_det.gpytorch": {
     "line number": [
      44,
      45,
      45,
      47,
      47
     ]
    },
    "test.functions.test_inv_quad_log_det.torch": {
     "line number": [
      19,
      37
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      44
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_inv_quad_logdet_many_vectors": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "test.functions.test_inv_quad_log_det.torch": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_inv_quad_logdet_many_vectors_improper": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "test.functions.test_inv_quad_log_det.torch": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_inv_quad_logdet_vector": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "test.functions.test_inv_quad_log_det.torch": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_inv_quad_only_many_vectors": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "test.functions.test_inv_quad_log_det.torch": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_inv_quad_only_vector": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "test.functions.test_inv_quad_log_det.torch": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_precond_inv_quad_logdet_many_vectors": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "test.functions.test_inv_quad_log_det.torch": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_precond_inv_quad_logdet_many_vectors_improper": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "test.functions.test_inv_quad_log_det.torch": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_precond_inv_quad_logdet_vector": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "test.functions.test_inv_quad_log_det.torch": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_precond_inv_quad_only_many_vectors": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "test.functions.test_inv_quad_log_det.torch": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.TestInvQuadLogDetNonBatch.test_precond_inv_quad_only_vector": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "test.functions.test_inv_quad_log_det.torch": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_inv_quad_log_det.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad_log_det.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad_log_det.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_inv_quad_log_det.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_log_normal_cdf": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      48
     ]
    },
    "test.functions.test_log_normal_cdf.unittest": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "module"
 },
 "test.functions.test_log_normal_cdf.TestLogNormalCDF": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "test.functions.test_log_normal_cdf.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_log_normal_cdf.TestLogNormalCDF.test_backward": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "test.functions.test_log_normal_cdf.gpytorch": {
     "line number": [
      31
     ]
    },
    "test.functions.test_log_normal_cdf.torch": {
     "line number": [
      30,
      30,
      32,
      35,
      36,
      40,
      44
     ]
    },
    "torch.nn.Parameter": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_log_normal_cdf.TestLogNormalCDF.test_forward": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "test.functions.test_log_normal_cdf.gpytorch": {
     "line number": [
      15
     ]
    },
    "test.functions.test_log_normal_cdf.math": {
     "line number": [
      18,
      19,
      20,
      21,
      24,
      25,
      26,
      27
     ]
    },
    "test.functions.test_log_normal_cdf.torch": {
     "line number": [
      14,
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_log_normal_cdf.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.functions.test_log_normal_cdf.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.functions.test_log_normal_cdf.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "test.functions.test_log_normal_cdf.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_log_normal_cdf.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_matern_covariance": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      96
     ]
    },
    "test.functions.test_matern_covariance.unittest": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "module"
 },
 "test.functions.test_matern_covariance.TestMaternCovariance": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "test.functions.test_matern_covariance.unittest": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_matern_covariance.TestMaternCovariance.test_1_2_backward": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      40
     ]
    },
    "test.functions.test_matern_covariance.dist_func": {
     "line number": [
      37
     ]
    },
    "test.functions.test_matern_covariance.gpytorch": {
     "line number": [
      37
     ]
    },
    "test.functions.test_matern_covariance.torch": {
     "line number": [
      34,
      34,
      35,
      35,
      36,
      36,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_matern_covariance.TestMaternCovariance.test_1_2_forward": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "test.functions.test_matern_covariance.dist_func": {
     "line number": [
      25,
      26
     ]
    },
    "test.functions.test_matern_covariance.gpytorch": {
     "line number": [
      25
     ]
    },
    "test.functions.test_matern_covariance.math": {
     "line number": [
      26
     ]
    },
    "test.functions.test_matern_covariance.torch": {
     "line number": [
      20,
      21,
      23,
      27,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_matern_covariance.TestMaternCovariance.test_3_2_backward": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      66
     ]
    },
    "test.functions.test_matern_covariance.dist_func": {
     "line number": [
      63
     ]
    },
    "test.functions.test_matern_covariance.gpytorch": {
     "line number": [
      63
     ]
    },
    "test.functions.test_matern_covariance.torch": {
     "line number": [
      60,
      60,
      61,
      61,
      62,
      62,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_matern_covariance.TestMaternCovariance.test_3_2_forward": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "test.functions.test_matern_covariance.dist_func": {
     "line number": [
      51,
      52
     ]
    },
    "test.functions.test_matern_covariance.gpytorch": {
     "line number": [
      51
     ]
    },
    "test.functions.test_matern_covariance.math": {
     "line number": [
      52
     ]
    },
    "test.functions.test_matern_covariance.torch": {
     "line number": [
      46,
      47,
      49,
      53,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_matern_covariance.TestMaternCovariance.test_5_2_backward": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      92
     ]
    },
    "test.functions.test_matern_covariance.dist_func": {
     "line number": [
      89
     ]
    },
    "test.functions.test_matern_covariance.gpytorch": {
     "line number": [
      89
     ]
    },
    "test.functions.test_matern_covariance.torch": {
     "line number": [
      86,
      86,
      87,
      87,
      88,
      88,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_matern_covariance.TestMaternCovariance.test_5_2_forward": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "test.functions.test_matern_covariance.dist_func": {
     "line number": [
      77,
      78
     ]
    },
    "test.functions.test_matern_covariance.gpytorch": {
     "line number": [
      77
     ]
    },
    "test.functions.test_matern_covariance.math": {
     "line number": [
      78
     ]
    },
    "test.functions.test_matern_covariance.torch": {
     "line number": [
      72,
      73,
      75,
      79,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_matern_covariance.dist_func": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.functions.test_matern_covariance.gpytorch": {
     "line number": [
      12
     ]
    },
    "test.functions.test_matern_covariance.torch": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_matern_covariance.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.functions.test_matern_covariance.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.functions.test_matern_covariance.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_matern_covariance.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_matmul": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      96
     ]
    },
    "test.functions.test_matmul.unittest": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "module"
 },
 "test.functions.test_matmul.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.functions.test_matmul.TestMatmulBatch": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "test.functions.test_matmul.unittest": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_matmul.TestMatmulBatch.setUp": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "test.functions.test_matmul.torch": {
     "line number": [
      52,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_matmul.TestMatmulBatch.test_matmul_multiple_vecs": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      61
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      63,
      69,
      70
     ]
    },
    "test.functions.test_matmul.torch": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_matmul.TestMatmulMultiBatch": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "test.functions.test_matmul.unittest": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_matmul.TestMatmulMultiBatch.setUp": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "test.functions.test_matmul.torch": {
     "line number": [
      75,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_matmul.TestMatmulMultiBatch.test_matmul_multiple_vecs": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      84
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      86,
      92,
      93
     ]
    },
    "test.functions.test_matmul.torch": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_matmul.TestMatmulNonBatch": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.functions.test_matmul.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_matmul.TestMatmulNonBatch.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "test.functions.test_matmul.torch": {
     "line number": [
      13,
      13,
      14,
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_matmul.TestMatmulNonBatch.test_matmul_multiple_vecs": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      38
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      40,
      46,
      47
     ]
    },
    "test.functions.test_matmul.torch": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_matmul.TestMatmulNonBatch.test_matmul_vec": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      25
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      27,
      33,
      34
     ]
    },
    "test.functions.test_matmul.torch": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_matmul.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.functions.test_matmul.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_matmul.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_rbf_covariance": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      38
     ]
    },
    "test.functions.test_rbf_covariance.unittest": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "test.functions.test_rbf_covariance.TestRBFCovariance": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "test.functions.test_rbf_covariance.unittest": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_rbf_covariance.TestRBFCovariance.test_backward": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      34
     ]
    },
    "test.functions.test_rbf_covariance.gpytorch": {
     "line number": [
      31
     ]
    },
    "test.functions.test_rbf_covariance.sq_dist_func": {
     "line number": [
      31
     ]
    },
    "test.functions.test_rbf_covariance.torch": {
     "line number": [
      28,
      28,
      29,
      29,
      30,
      30,
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_rbf_covariance.TestRBFCovariance.test_forward": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "test.functions.test_rbf_covariance.gpytorch": {
     "line number": [
      22
     ]
    },
    "test.functions.test_rbf_covariance.sq_dist_func": {
     "line number": [
      22,
      23
     ]
    },
    "test.functions.test_rbf_covariance.torch": {
     "line number": [
      18,
      19,
      21,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_rbf_covariance.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.functions.test_rbf_covariance.sq_dist_func": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "test.functions.test_rbf_covariance.gpytorch": {
     "line number": [
      11
     ]
    },
    "test.functions.test_rbf_covariance.torch": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_rbf_covariance.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_rbf_covariance.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.functions.test_root_decomposition": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      72
     ]
    },
    "test.functions.test_root_decomposition.unittest": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "module"
 },
 "test.functions.test_root_decomposition.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.functions.test_root_decomposition.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.functions.test_root_decomposition.TestRootDecomposition": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      11
     ]
    },
    "test.functions.test_root_decomposition.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_root_decomposition.TestRootDecomposition._create_mat": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "test.functions.test_root_decomposition.torch": {
     "line number": [
      15,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_root_decomposition.TestRootDecomposition.test_root_decomposition": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      25
     ]
    },
    "sum": {
     "line number": [
      30,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_root_decomposition.TestRootDecomposition.test_root_inv_decomposition": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      41
     ]
    },
    "sum": {
     "line number": [
      47,
      48
     ]
    },
    "test.functions.test_root_decomposition.torch": {
     "line number": [
      39,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_root_decomposition.TestRootDecompositionBatch": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "test.functions.test_root_decomposition.TestRootDecomposition": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_root_decomposition.TestRootDecompositionBatch._create_mat": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "test.functions.test_root_decomposition.torch": {
     "line number": [
      56,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_root_decomposition.TestRootDecompositionMultiBatch": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "test.functions.test_root_decomposition.TestRootDecomposition": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "class"
 },
 "test.functions.test_root_decomposition.TestRootDecompositionMultiBatch._create_mat": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "test.functions.test_root_decomposition.torch": {
     "line number": [
      66,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "test.functions.test_root_decomposition.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.functions.test_root_decomposition.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels": {
  "data": {},
  "type": "module"
 },
 "test.kernels.keops": {
  "data": {},
  "type": "module"
 },
 "test.kernels.keops.test_matern_kernel": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      84
     ]
    },
    "__name__": {
     "line number": [
      87
     ]
    },
    "test.kernels.keops.test_matern_kernel.unittest": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.keops.test_matern_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.keops.test_matern_kernel.GMaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MaternKernel"
  },
  "type": "import"
 },
 "test.kernels.keops.test_matern_kernel.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.keops.MaternKernel"
  },
  "type": "import"
 },
 "test.kernels.keops.test_matern_kernel.TestMatern25KeOpsBaseKernel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      14
     ]
    },
    "test.kernels.keops.test_matern_kernel.unittest": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.keops.test_matern_kernel.TestMatern25KeOpsBaseKernel.create_kernel_ard": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "gpytorch.kernels.keops.MaternKernel": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMatern25KeOpsBaseKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.kernels.keops.MaternKernel": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "test.kernels.keops.test_matern_kernel.unittest": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.forward_x1_eq_x2": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      29
     ]
    },
    "gpytorch.kernels.keops.MaternKernel": {
     "line number": [
      28
     ]
    },
    "kern1": {
     "line number": [
      31
     ]
    },
    "kern2": {
     "line number": [
      32
     ]
    },
    "test.kernels.keops.test_matern_kernel.torch": {
     "line number": [
      23,
      26,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.forward_x1_neq_x2": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      44
     ]
    },
    "gpytorch.kernels.keops.MaternKernel": {
     "line number": [
      43
     ]
    },
    "kern1": {
     "line number": [
      43,
      46
     ]
    },
    "kern2": {
     "line number": [
      44,
      47
     ]
    },
    "test.kernels.keops.test_matern_kernel.torch": {
     "line number": [
      37,
      40,
      41,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_batch_matmul": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      75
     ]
    },
    "gpytorch.kernels.keops.MaternKernel": {
     "line number": [
      74
     ]
    },
    "kern1": {
     "line number": [
      74,
      78
     ]
    },
    "kern2": {
     "line number": [
      75,
      79
     ]
    },
    "test.kernels.keops.test_matern_kernel.torch": {
     "line number": [
      70,
      73,
      77,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_forward_nu05_x1_eq_x2": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_forward_nu05_x1_neq_x2": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_forward_nu15_x1_eq_x2": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_forward_nu15_x1_neq_x2": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_forward_nu25_x1_eq_x2": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.TestMaternKeOpsKernel.test_forward_nu25_x1_neq_x2": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "test.kernels.keops.test_matern_kernel.pykeops": {
  "data": {
   "shadows": "pykeops"
  },
  "type": "import"
 },
 "test.kernels.keops.test_matern_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.keops.test_matern_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.keops.test_rbf_kernel": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      66
     ]
    },
    "__name__": {
     "line number": [
      69
     ]
    },
    "test.kernels.keops.test_rbf_kernel.unittest": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.keops.test_rbf_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.keops.test_rbf_kernel.GRBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.keops.test_rbf_kernel.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.keops.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.keops.test_rbf_kernel.TestRBFKeOpsBaseKernel": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      14
     ]
    },
    "test.kernels.keops.test_rbf_kernel.unittest": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.keops.test_rbf_kernel.TestRBFKeOpsBaseKernel.create_kernel_ard": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "gpytorch.kernels.keops.RBFKernel": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.keops.test_rbf_kernel.TestRBFKeOpsBaseKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.kernels.keops.RBFKernel": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.keops.test_rbf_kernel.TestRBFKeOpsKernel": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "test.kernels.keops.test_rbf_kernel.unittest": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.keops.test_rbf_kernel.TestRBFKeOpsKernel.test_batch_matmul": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      57
     ]
    },
    "gpytorch.kernels.keops.RBFKernel": {
     "line number": [
      56
     ]
    },
    "kern1": {
     "line number": [
      56,
      60
     ]
    },
    "kern2": {
     "line number": [
      57,
      61
     ]
    },
    "test.kernels.keops.test_rbf_kernel.torch": {
     "line number": [
      52,
      55,
      59,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.keops.test_rbf_kernel.TestRBFKeOpsKernel.test_forward_x1_eq_x2": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      29
     ]
    },
    "gpytorch.kernels.keops.RBFKernel": {
     "line number": [
      28
     ]
    },
    "kern1": {
     "line number": [
      31
     ]
    },
    "kern2": {
     "line number": [
      32
     ]
    },
    "test.kernels.keops.test_rbf_kernel.torch": {
     "line number": [
      23,
      26,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.keops.test_rbf_kernel.TestRBFKeOpsKernel.test_forward_x1_neq_x2": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      44
     ]
    },
    "gpytorch.kernels.keops.RBFKernel": {
     "line number": [
      43
     ]
    },
    "kern1": {
     "line number": [
      43,
      46
     ]
    },
    "kern2": {
     "line number": [
      44,
      47
     ]
    },
    "test.kernels.keops.test_rbf_kernel.torch": {
     "line number": [
      37,
      40,
      41,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.keops.test_rbf_kernel.pykeops": {
  "data": {
   "shadows": "pykeops"
  },
  "type": "import"
 },
 "test.kernels.keops.test_rbf_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.keops.test_rbf_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_additive_and_product_kernels": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      363
     ]
    },
    "test.kernels.test_additive_and_product_kernels.unittest": {
     "line number": [
      364
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_additive_and_product_kernels.LinearKernel": {
  "data": {
   "shadows": "gpytorch.kernels.LinearKernel"
  },
  "type": "import"
 },
 "test.kernels.test_additive_and_product_kernels.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.kernels.test_additive_and_product_kernels.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MaternKernel"
  },
  "type": "import"
 },
 "test.kernels.test_additive_and_product_kernels.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_additive_and_product_kernels.RFFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RFFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "test.kernels.test_additive_and_product_kernels.unittest": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_computes_product_of_four_radial_basis_function": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      182,
      183,
      184,
      185,
      189
     ]
    },
    "kernel": {
     "line number": [
      186,
      195
     ]
    },
    "kernel.eval": {
     "line number": [
      194
     ]
    },
    "kernel.kernels": {
     "line number": [
      187,
      188
     ]
    },
    "len": {
     "line number": [
      187
     ]
    },
    "test.kernels.test_additive_and_product_kernels.torch": {
     "line number": [
      178,
      178,
      179,
      179,
      191,
      191,
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_computes_product_of_radial_basis_function": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      49,
      50
     ]
    },
    "kernel": {
     "line number": [
      57
     ]
    },
    "test.kernels.test_additive_and_product_kernels.torch": {
     "line number": [
      45,
      45,
      46,
      46,
      53,
      53,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_computes_product_of_radial_basis_function_diag": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      118,
      119,
      120
     ]
    },
    "kernel": {
     "line number": [
      121,
      125
     ]
    },
    "kernel.eval": {
     "line number": [
      122,
      124
     ]
    },
    "test.kernels.test_additive_and_product_kernels.torch": {
     "line number": [
      111,
      111,
      112,
      112,
      114,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_computes_product_of_three_radial_basis_function": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      150,
      151,
      152,
      156,
      165,
      166,
      167,
      171
     ]
    },
    "kernel": {
     "line number": [
      153,
      162,
      168,
      174
     ]
    },
    "kernel.eval": {
     "line number": [
      161,
      173
     ]
    },
    "kernel.kernels": {
     "line number": [
      154,
      155,
      169,
      170
     ]
    },
    "len": {
     "line number": [
      154,
      169
     ]
    },
    "test.kernels.test_additive_and_product_kernels.torch": {
     "line number": [
      146,
      146,
      147,
      147,
      158,
      158,
      163,
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_computes_product_of_three_radial_basis_function_diag": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      136,
      137
     ]
    },
    "kernel": {
     "line number": [
      138,
      142
     ]
    },
    "kernel.eval": {
     "line number": [
      139,
      141
     ]
    },
    "test.kernels.test_additive_and_product_kernels.torch": {
     "line number": [
      129,
      129,
      130,
      130,
      132,
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_computes_sum_of_four_radial_basis_function": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      203,
      204,
      205,
      206,
      210
     ]
    },
    "kernel": {
     "line number": [
      207,
      217
     ]
    },
    "kernel.eval": {
     "line number": [
      216
     ]
    },
    "kernel.kernels": {
     "line number": [
      208,
      209
     ]
    },
    "len": {
     "line number": [
      208
     ]
    },
    "test.kernels.test_additive_and_product_kernels.torch": {
     "line number": [
      199,
      199,
      200,
      200,
      213,
      213,
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_computes_sum_of_radial_basis_function": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      65,
      66
     ]
    },
    "kernel": {
     "line number": [
      67,
      73
     ]
    },
    "kernel.eval": {
     "line number": [
      72
     ]
    },
    "test.kernels.test_additive_and_product_kernels.torch": {
     "line number": [
      61,
      61,
      62,
      62,
      69,
      69,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_computes_sum_of_radial_basis_function_diag": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      84,
      85
     ]
    },
    "kernel": {
     "line number": [
      86,
      90
     ]
    },
    "kernel.eval": {
     "line number": [
      87,
      89
     ]
    },
    "test.kernels.test_additive_and_product_kernels.torch": {
     "line number": [
      77,
      77,
      78,
      78,
      80,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_computes_sum_of_three_radial_basis_function": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      225,
      226,
      227,
      231,
      241,
      242,
      243,
      247
     ]
    },
    "kernel": {
     "line number": [
      228,
      238,
      244,
      250
     ]
    },
    "kernel.eval": {
     "line number": [
      237,
      249
     ]
    },
    "kernel.kernels": {
     "line number": [
      229,
      230,
      245,
      246
     ]
    },
    "len": {
     "line number": [
      229,
      245
     ]
    },
    "test.kernels.test_additive_and_product_kernels.torch": {
     "line number": [
      221,
      221,
      222,
      222,
      234,
      234,
      239,
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_computes_sum_of_three_radial_basis_function_diag": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      101,
      102,
      103
     ]
    },
    "kernel": {
     "line number": [
      104,
      107
     ]
    },
    "kernel.eval": {
     "line number": [
      105
     ]
    },
    "test.kernels.test_additive_and_product_kernels.torch": {
     "line number": [
      94,
      94,
      95,
      95,
      97,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_computes_sum_radial_basis_function_gradient": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      266,
      267
     ]
    },
    "kernel": {
     "line number": [
      268,
      271
     ]
    },
    "kernel.eval": {
     "line number": [
      269
     ]
    },
    "kernel.kernels.raw_lengthscale.grad": {
     "line number": [
      273,
      273
     ]
    },
    "softplus": {
     "line number": [
      262
     ]
    },
    "test.kernels.test_additive_and_product_kernels.math": {
     "line number": [
      259,
      259
     ]
    },
    "test.kernels.test_additive_and_product_kernels.torch": {
     "line number": [
      254,
      255,
      255,
      256,
      256,
      259,
      263,
      272,
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_computes_sum_three_radial_basis_function_gradient": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      289,
      290,
      291
     ]
    },
    "kernel": {
     "line number": [
      292,
      295
     ]
    },
    "kernel.eval": {
     "line number": [
      293
     ]
    },
    "kernel.kernels.raw_lengthscale.grad": {
     "line number": [
      298,
      299,
      300
     ]
    },
    "softplus": {
     "line number": [
      277,
      285
     ]
    },
    "test.kernels.test_additive_and_product_kernels.math": {
     "line number": [
      282,
      282
     ]
    },
    "test.kernels.test_additive_and_product_kernels.torch": {
     "line number": [
      277,
      278,
      278,
      279,
      279,
      282,
      286,
      296,
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_is_stationary": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "gpytorch.kernels.LinearKernel": {
     "line number": [
      307
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      305,
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_kernel_output": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "model": {
     "line number": [
      322,
      327,
      334
     ]
    },
    "model.eval": {
     "line number": [
      333
     ]
    },
    "model.likelihood": {
     "line number": [
      327,
      334
     ]
    },
    "model.train": {
     "line number": [
      326
     ]
    },
    "test.kernels.test_additive_and_product_kernels.TestModel": {
     "line number": [
      318
     ]
    },
    "test.kernels.test_additive_and_product_kernels.gpytorch": {
     "line number": [
      323,
      328,
      331
     ]
    },
    "test.kernels.test_additive_and_product_kernels.torch": {
     "line number": [
      315,
      316,
      317
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      331
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestAdditiveAndProductKernel.test_kernel_output_no_structure": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "model": {
     "line number": [
      342,
      346,
      351,
      358
     ]
    },
    "model.eval": {
     "line number": [
      357
     ]
    },
    "model.likelihood": {
     "line number": [
      351,
      358
     ]
    },
    "model.train": {
     "line number": [
      345,
      350
     ]
    },
    "test.kernels.test_additive_and_product_kernels.TestModelNoStructure": {
     "line number": [
      342
     ]
    },
    "test.kernels.test_additive_and_product_kernels.gpytorch": {
     "line number": [
      347,
      352,
      355
     ]
    },
    "test.kernels.test_additive_and_product_kernels.torch": {
     "line number": [
      339,
      340,
      341
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      355
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestModel": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "test.kernels.test_additive_and_product_kernels.gpytorch": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_additive_and_product_kernels.TestModel.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      19
     ]
    },
    "gpytorch.kernels.RFFKernel": {
     "line number": [
      19
     ]
    },
    "super": {
     "line number": [
      16
     ]
    },
    "test.kernels.test_additive_and_product_kernels.gpytorch": {
     "line number": [
      15,
      17,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestModel.forward": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "input": {
     "line number": [
      23,
      24
     ]
    },
    "test.kernels.test_additive_and_product_kernels.gpytorch": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestModelNoStructure": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "test.kernels.test_additive_and_product_kernels.gpytorch": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_additive_and_product_kernels.TestModelNoStructure.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      34
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      34
     ]
    },
    "super": {
     "line number": [
      31
     ]
    },
    "test.kernels.test_additive_and_product_kernels.gpytorch": {
     "line number": [
      30,
      32,
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.TestModelNoStructure.forward": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "input": {
     "line number": [
      38,
      39
     ]
    },
    "test.kernels.test_additive_and_product_kernels.gpytorch": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_additive_and_product_kernels.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.kernels.test_additive_and_product_kernels.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_additive_and_product_kernels.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.kernels.test_additive_and_product_kernels.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_additive_and_product_kernels.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_arc_kernel": {
  "data": {},
  "type": "module"
 },
 "test.kernels.test_arc_kernel.ArcKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ArcKernel"
  },
  "type": "import"
 },
 "test.kernels.test_arc_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_arc_kernel.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MaternKernel"
  },
  "type": "import"
 },
 "test.kernels.test_arc_kernel.TestArcKernel": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      9
     ]
    },
    "test.kernels.test_arc_kernel.unittest": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_arc_kernel.TestArcKernel.create_kernel_ard": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.kernels.ArcKernel": {
     "line number": [
      14
     ]
    },
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_arc_kernel.TestArcKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "gpytorch.kernels.ArcKernel": {
     "line number": [
      11
     ]
    },
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_arc_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_cosine_kernel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      99
     ]
    },
    "test.kernels.test_cosine_kernel.unittest": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_cosine_kernel.CosineKernel": {
  "data": {
   "shadows": "gpytorch.kernels.CosineKernel"
  },
  "type": "import"
 },
 "test.kernels.test_cosine_kernel.TestCosineKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.kernels.test_cosine_kernel.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_cosine_kernel.TestCosineKernel.test_batch": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "gpytorch.kernels.CosineKernel": {
     "line number": [
      50
     ]
    },
    "kernel": {
     "line number": [
      50,
      59
     ]
    },
    "kernel.eval": {
     "line number": [
      51
     ]
    },
    "range": {
     "line number": [
      54,
      55,
      56
     ]
    },
    "test.kernels.test_cosine_kernel.math": {
     "line number": [
      57
     ]
    },
    "test.kernels.test_cosine_kernel.torch": {
     "line number": [
      47,
      47,
      48,
      48,
      49,
      49,
      53,
      57,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_cosine_kernel.TestCosineKernel.test_batch_separate": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "gpytorch.kernels.CosineKernel": {
     "line number": [
      66
     ]
    },
    "kernel": {
     "line number": [
      66,
      75,
      79,
      90,
      94
     ]
    },
    "kernel.eval": {
     "line number": [
      67
     ]
    },
    "range": {
     "line number": [
      70,
      71,
      72,
      80,
      85,
      86,
      87,
      88
     ]
    },
    "test.kernels.test_cosine_kernel.math": {
     "line number": [
      73,
      89
     ]
    },
    "test.kernels.test_cosine_kernel.torch": {
     "line number": [
      63,
      63,
      64,
      64,
      65,
      65,
      66,
      69,
      73,
      76,
      80,
      81,
      84,
      89,
      91,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_cosine_kernel.TestCosineKernel.test_computes_periodic_function": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.kernels.CosineKernel": {
     "line number": [
      16
     ]
    },
    "kernel": {
     "line number": [
      24,
      28,
      38,
      42
     ]
    },
    "range": {
     "line number": [
      20,
      21,
      34,
      35,
      36,
      43
     ]
    },
    "test.kernels.test_cosine_kernel.math": {
     "line number": [
      22,
      37
     ]
    },
    "test.kernels.test_cosine_kernel.torch": {
     "line number": [
      13,
      13,
      14,
      14,
      19,
      22,
      25,
      30,
      33,
      37,
      39,
      43,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_cosine_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_cosine_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_cosine_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_cylindrical_kernel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      26
     ]
    },
    "test.kernels.test_cylindrical_kernel.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_cylindrical_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_cylindrical_kernel.CylindricalKernel": {
  "data": {
   "shadows": "gpytorch.kernels.CylindricalKernel"
  },
  "type": "import"
 },
 "test.kernels.test_cylindrical_kernel.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MaternKernel"
  },
  "type": "import"
 },
 "test.kernels.test_cylindrical_kernel.TestCylindricalKernel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      12
     ]
    },
    "test.kernels.test_cylindrical_kernel.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_cylindrical_kernel.TestCylindricalKernel.create_data_double_batch": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "test.kernels.test_cylindrical_kernel.math": {
     "line number": [
      23
     ]
    },
    "test.kernels.test_cylindrical_kernel.torch": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_cylindrical_kernel.TestCylindricalKernel.create_data_no_batch": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "test.kernels.test_cylindrical_kernel.math": {
     "line number": [
      17
     ]
    },
    "test.kernels.test_cylindrical_kernel.torch": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_cylindrical_kernel.TestCylindricalKernel.create_data_single_batch": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "test.kernels.test_cylindrical_kernel.math": {
     "line number": [
      20
     ]
    },
    "test.kernels.test_cylindrical_kernel.torch": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_cylindrical_kernel.TestCylindricalKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.kernels.CylindricalKernel": {
     "line number": [
      14
     ]
    },
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_cylindrical_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_cylindrical_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_cylindrical_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_gaussian_symmetrized_kl_kernel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      35
     ]
    },
    "test.kernels.test_gaussian_symmetrized_kl_kernel.unittest": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_gaussian_symmetrized_kl_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_gaussian_symmetrized_kl_kernel.GaussianSymmetrizedKLKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GaussianSymmetrizedKLKernel"
  },
  "type": "import"
 },
 "test.kernels.test_gaussian_symmetrized_kl_kernel.Normal": {
  "data": {
   "shadows": "torch.distributions.Normal"
  },
  "type": "import"
 },
 "test.kernels.test_gaussian_symmetrized_kl_kernel.TestGaussianSymmetrizedKLKernel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      12
     ]
    },
    "test.kernels.test_gaussian_symmetrized_kl_kernel.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_gaussian_symmetrized_kl_kernel.TestGaussianSymmetrizedKLKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "gpytorch.kernels.GaussianSymmetrizedKLKernel": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_gaussian_symmetrized_kl_kernel.TestGaussianSymmetrizedKLKernel.test_kernel_symkl": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.kernels.GaussianSymmetrizedKLKernel": {
     "line number": [
      14
     ]
    },
    "kernel": {
     "line number": [
      19
     ]
    },
    "test.kernels.test_gaussian_symmetrized_kl_kernel.torch": {
     "line number": [
      17,
      18,
      20,
      26,
      26
     ]
    },
    "torch.distributions.Normal": {
     "line number": [
      24,
      26
     ]
    },
    "torch.distributions.kl_divergence": {
     "line number": [
      28,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_gaussian_symmetrized_kl_kernel.kl_divergence": {
  "data": {
   "shadows": "torch.distributions.kl_divergence"
  },
  "type": "import"
 },
 "test.kernels.test_gaussian_symmetrized_kl_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_gaussian_symmetrized_kl_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_grid_interpolation_kernel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      50
     ]
    },
    "test.kernels.test_grid_interpolation_kernel.unittest": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_grid_interpolation_kernel.GridInterpolationKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridInterpolationKernel"
  },
  "type": "import"
 },
 "test.kernels.test_grid_interpolation_kernel.InterpolatedLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.InterpolatedLazyTensor"
  },
  "type": "import"
 },
 "test.kernels.test_grid_interpolation_kernel.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_grid_interpolation_kernel.TestGridInterpolationKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.kernels.test_grid_interpolation_kernel.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_grid_interpolation_kernel.TestGridInterpolationKernel.test_batch_base_kernel": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "base_kernel": {
     "line number": [
      31,
      32,
      36,
      41,
      46
     ]
    },
    "gpytorch.kernels.GridInterpolationKernel": {
     "line number": [
      32
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      31
     ]
    },
    "kernel": {
     "line number": [
      32,
      35,
      40,
      45
     ]
    },
    "test.kernels.test_grid_interpolation_kernel.torch": {
     "line number": [
      31,
      34,
      37,
      39,
      42,
      44,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_grid_interpolation_kernel.TestGridInterpolationKernel.test_standard": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "base_kernel": {
     "line number": [
      22,
      27
     ]
    },
    "gpytorch.kernels.GridInterpolationKernel": {
     "line number": [
      14
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      13
     ]
    },
    "gpytorch.lazy.InterpolatedLazyTensor": {
     "line number": [
      18
     ]
    },
    "kernel": {
     "line number": [
      17,
      21,
      26
     ]
    },
    "test.kernels.test_grid_interpolation_kernel.torch": {
     "line number": [
      16,
      20,
      23,
      25,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_grid_interpolation_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_grid_interpolation_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      61
     ]
    },
    "gpytorch.utils.grid.create_data_from_grid": {
     "line number": [
      14
     ]
    },
    "len": {
     "line number": [
      13
     ]
    },
    "test.kernels.test_grid_kernel.grid": {
     "line number": [
      13,
      14
     ]
    },
    "test.kernels.test_grid_kernel.torch": {
     "line number": [
      12,
      12
     ]
    },
    "test.kernels.test_grid_kernel.unittest": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_grid_kernel.GridKernel": {
  "data": {
   "shadows": "gpytorch.kernels.GridKernel"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel.KroneckerProductLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.KroneckerProductLazyTensor"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel.LinearKernel": {
  "data": {
   "shadows": "gpytorch.kernels.LinearKernel"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel.TestGridKernel": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "test.kernels.test_grid_kernel.unittest": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_grid_kernel.TestGridKernel.test_grid_grid": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "base_kernel": {
     "line number": [
      25
     ]
    },
    "gpytorch.kernels.GridKernel": {
     "line number": [
      21
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      20
     ]
    },
    "gpytorch.lazy.KroneckerProductLazyTensor": {
     "line number": [
      23
     ]
    },
    "kernel": {
     "line number": [
      22,
      24
     ]
    },
    "test.kernels.test_grid_kernel.gpytorch": {
     "line number": [
      19
     ]
    },
    "test.kernels.test_grid_kernel.grid": {
     "line number": [
      21
     ]
    },
    "test.kernels.test_grid_kernel.grid_data": {
     "line number": [
      22,
      22,
      24,
      24,
      25,
      25
     ]
    },
    "test.kernels.test_grid_kernel.torch": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_grid_kernel.TestGridKernel.test_grid_grid_nontoeplitz": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "test.kernels.test_grid_kernel.TestGridKernel.test_non_stationary_base": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      57
     ]
    },
    "base_kernel": {
     "line number": [
      56,
      58
     ]
    },
    "gpytorch.kernels.GridKernel": {
     "line number": [
      58
     ]
    },
    "gpytorch.kernels.LinearKernel": {
     "line number": [
      56
     ]
    },
    "test.kernels.test_grid_kernel.grid": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_grid_kernel.TestGridKernel.test_nongrid_grid": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "base_kernel": {
     "line number": [
      33,
      35,
      37
     ]
    },
    "gpytorch.kernels.GridKernel": {
     "line number": [
      35
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      33
     ]
    },
    "kernel": {
     "line number": [
      35,
      36
     ]
    },
    "test.kernels.test_grid_kernel.d": {
     "line number": [
      34
     ]
    },
    "test.kernels.test_grid_kernel.gpytorch": {
     "line number": [
      32
     ]
    },
    "test.kernels.test_grid_kernel.grid": {
     "line number": [
      35
     ]
    },
    "test.kernels.test_grid_kernel.grid_data": {
     "line number": [
      36,
      37
     ]
    },
    "test.kernels.test_grid_kernel.torch": {
     "line number": [
      34,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_grid_kernel.TestGridKernel.test_nongrid_grid_nontoeplitz": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "test.kernels.test_grid_kernel.TestGridKernel.test_nongrid_nongrid": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "base_kernel": {
     "line number": [
      45,
      47,
      49
     ]
    },
    "gpytorch.kernels.GridKernel": {
     "line number": [
      47
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      45
     ]
    },
    "kernel": {
     "line number": [
      47,
      48
     ]
    },
    "test.kernels.test_grid_kernel.d": {
     "line number": [
      46
     ]
    },
    "test.kernels.test_grid_kernel.gpytorch": {
     "line number": [
      44
     ]
    },
    "test.kernels.test_grid_kernel.grid": {
     "line number": [
      47
     ]
    },
    "test.kernels.test_grid_kernel.torch": {
     "line number": [
      46,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_grid_kernel.TestGridKernel.test_nongrid_nongrid_nontoeplitz": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "test.kernels.test_grid_kernel.create_data_from_grid": {
  "data": {
   "shadows": "gpytorch.utils.grid.create_data_from_grid"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel.d": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "test.kernels.test_grid_kernel.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel.grid": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "test.kernels.test_grid_kernel.grid_data": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "test.kernels.test_grid_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_grid_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_inducing_point_kernel": {
  "data": {},
  "type": "module"
 },
 "test.kernels.test_inducing_point_kernel.InducingPointKernel": {
  "data": {
   "shadows": "gpytorch.kernels.InducingPointKernel"
  },
  "type": "import"
 },
 "test.kernels.test_inducing_point_kernel.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.kernels.test_inducing_point_kernel.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_inducing_point_kernel.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.kernels.test_inducing_point_kernel.TestInducingPointKernel": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "test.kernels.test_inducing_point_kernel.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_inducing_point_kernel.TestInducingPointKernel.test_kernel_output": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "model": {
     "line number": [
      36,
      41,
      48
     ]
    },
    "model.eval": {
     "line number": [
      47
     ]
    },
    "model.likelihood": {
     "line number": [
      41,
      48
     ]
    },
    "model.train": {
     "line number": [
      40
     ]
    },
    "test.kernels.test_inducing_point_kernel.TestModel": {
     "line number": [
      32
     ]
    },
    "test.kernels.test_inducing_point_kernel.gpytorch": {
     "line number": [
      37,
      42,
      45
     ]
    },
    "test.kernels.test_inducing_point_kernel.torch": {
     "line number": [
      29,
      30,
      31
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      45
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_inducing_point_kernel.TestModel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "test.kernels.test_inducing_point_kernel.gpytorch": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_inducing_point_kernel.TestModel.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.kernels.InducingPointKernel": {
     "line number": [
      17
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      18
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      18
     ]
    },
    "super": {
     "line number": [
      15
     ]
    },
    "test.kernels.test_inducing_point_kernel.gpytorch": {
     "line number": [
      14,
      16
     ]
    },
    "test.kernels.test_inducing_point_kernel.torch": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_inducing_point_kernel.TestModel.forward": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "input": {
     "line number": [
      22,
      23
     ]
    },
    "test.kernels.test_inducing_point_kernel.gpytorch": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_inducing_point_kernel.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.kernels.test_inducing_point_kernel.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.kernels.test_inducing_point_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_inducing_point_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_linear_kernel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      83
     ]
    },
    "test.kernels.test_linear_kernel.unittest": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_linear_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_linear_kernel.LinearKernel": {
  "data": {
   "shadows": "gpytorch.kernels.LinearKernel"
  },
  "type": "import"
 },
 "test.kernels.test_linear_kernel.TestLinearKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      11
     ]
    },
    "test.kernels.test_linear_kernel.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_linear_kernel.TestLinearKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.kernels.LinearKernel": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_linear_kernel.TestLinearKernel.test_computes_linear_function_rectangular": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.kernels.LinearKernel": {
     "line number": [
      19
     ]
    },
    "kernel": {
     "line number": [
      22,
      26
     ]
    },
    "test.kernels.test_linear_kernel.torch": {
     "line number": [
      16,
      16,
      17,
      17,
      21,
      23,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_linear_kernel.TestLinearKernel.test_computes_linear_function_square": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "gpytorch.kernels.LinearKernel": {
     "line number": [
      33
     ]
    },
    "kernel": {
     "line number": [
      33,
      36,
      40,
      48,
      52
     ]
    },
    "kernel.eval": {
     "line number": [
      34
     ]
    },
    "range": {
     "line number": [
      53
     ]
    },
    "test.kernels.test_linear_kernel.torch": {
     "line number": [
      31,
      31,
      35,
      37,
      42,
      47,
      49,
      53,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_linear_kernel.TestLinearKernel.test_computes_linear_function_square_batch": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "gpytorch.kernels.LinearKernel": {
     "line number": [
      59
     ]
    },
    "kernel": {
     "line number": [
      59,
      62,
      66,
      74,
      78
     ]
    },
    "kernel.eval": {
     "line number": [
      60
     ]
    },
    "range": {
     "line number": [
      67
     ]
    },
    "test.kernels.test_linear_kernel.torch": {
     "line number": [
      57,
      57,
      61,
      63,
      67,
      68,
      75,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_linear_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_linear_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_matern_kernel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      163
     ]
    },
    "test.kernels.test_matern_kernel.unittest": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_matern_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_matern_kernel.MaternKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MaternKernel"
  },
  "type": "import"
 },
 "test.kernels.test_matern_kernel.TestMatern05BaseKernel": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      20
     ]
    },
    "test.kernels.test_matern_kernel.unittest": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_matern_kernel.TestMatern05BaseKernel.create_kernel_ard": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMatern05BaseKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMatern25BaseKernel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      12
     ]
    },
    "test.kernels.test_matern_kernel.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_matern_kernel.TestMatern25BaseKernel.create_kernel_ard": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMatern25BaseKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      32
     ]
    },
    "test.kernels.test_matern_kernel.unittest": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.create_kernel_ard": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.test_ard": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      82
     ]
    },
    "kernel": {
     "line number": [
      82,
      89,
      93,
      101,
      105
     ]
    },
    "kernel.eval": {
     "line number": [
      84
     ]
    },
    "kernel.initialize": {
     "line number": [
      83
     ]
    },
    "range": {
     "line number": [
      106
     ]
    },
    "test.kernels.test_matern_kernel.math": {
     "line number": [
      87,
      99
     ]
    },
    "test.kernels.test_matern_kernel.torch": {
     "line number": [
      78,
      78,
      79,
      79,
      80,
      80,
      86,
      86,
      88,
      90,
      95,
      98,
      98,
      100,
      102,
      106,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.test_ard_batch": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      114
     ]
    },
    "kernel": {
     "line number": [
      114,
      120
     ]
    },
    "kernel.eval": {
     "line number": [
      116
     ]
    },
    "kernel.initialize": {
     "line number": [
      115
     ]
    },
    "test.kernels.test_matern_kernel.math": {
     "line number": [
      118
     ]
    },
    "test.kernels.test_matern_kernel.torch": {
     "line number": [
      110,
      110,
      111,
      111,
      112,
      112,
      114,
      118,
      118,
      119,
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.test_ard_separate_batch": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      128
     ]
    },
    "kernel": {
     "line number": [
      128,
      134,
      138,
      154,
      158
     ]
    },
    "kernel.eval": {
     "line number": [
      130
     ]
    },
    "kernel.initialize": {
     "line number": [
      129
     ]
    },
    "range": {
     "line number": [
      139
     ]
    },
    "test.kernels.test_matern_kernel.math": {
     "line number": [
      132,
      151
     ]
    },
    "test.kernels.test_matern_kernel.torch": {
     "line number": [
      124,
      124,
      125,
      125,
      126,
      126,
      128,
      132,
      132,
      133,
      135,
      139,
      140,
      143,
      153,
      155,
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.test_forward_nu_1_over_2": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      44
     ]
    },
    "kernel": {
     "line number": [
      48
     ]
    },
    "test.kernels.test_matern_kernel.torch": {
     "line number": [
      40,
      40,
      41,
      41,
      47,
      47,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.test_forward_nu_3_over_2": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      56
     ]
    },
    "kernel": {
     "line number": [
      56,
      61
     ]
    },
    "kernel.eval": {
     "line number": [
      57
     ]
    },
    "test.kernels.test_matern_kernel.math": {
     "line number": [
      59
     ]
    },
    "test.kernels.test_matern_kernel.torch": {
     "line number": [
      52,
      52,
      53,
      53,
      59,
      59,
      60,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.TestMaternKernel.test_forward_nu_5_over_2": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "gpytorch.kernels.MaternKernel": {
     "line number": [
      69
     ]
    },
    "kernel": {
     "line number": [
      69,
      74
     ]
    },
    "kernel.eval": {
     "line number": [
      70
     ]
    },
    "test.kernels.test_matern_kernel.math": {
     "line number": [
      72
     ]
    },
    "test.kernels.test_matern_kernel.torch": {
     "line number": [
      65,
      65,
      66,
      66,
      72,
      72,
      73,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_matern_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_matern_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_matern_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel": {
  "data": {},
  "type": "module"
 },
 "test.kernels.test_newton_girard_additive_kernel.AdditiveKernel": {
  "data": {
   "shadows": "gpytorch.kernels.AdditiveKernel"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.ExactGP": {
  "data": {
   "shadows": "gpytorch.models.ExactGP"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.ExactMarginalLogLikelihood": {
  "data": {
   "shadows": "gpytorch.mlls.ExactMarginalLogLikelihood"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.NewtonGirardAdditiveKernel": {
  "data": {
   "shadows": "gpytorch.kernels.NewtonGirardAdditiveKernel"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      16
     ]
    },
    "unittest.TestCase": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.create_kernel_ard": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "gpytorch.kernels.NewtonGirardAdditiveKernel": {
     "line number": [
      21
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "gpytorch.kernels.NewtonGirardAdditiveKernel": {
     "line number": [
      18
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_ard": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "AddK": {
     "line number": [
      121,
      124
     ]
    },
    "gpytorch.kernels.AdditiveKernel": {
     "line number": [
      131
     ]
    },
    "gpytorch.kernels.NewtonGirardAdditiveKernel": {
     "line number": [
      121
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      119,
      128
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      131
     ]
    },
    "manual_k": {
     "line number": [
      131,
      133
     ]
    },
    "manual_k.initialize": {
     "line number": [
      132
     ]
    },
    "range": {
     "line number": [
      127
     ]
    },
    "test.kernels.test_newton_girard_additive_kernel.torch": {
     "line number": [
      123,
      123,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_degree1": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "AddK": {
     "line number": [
      29
     ]
    },
    "gpytorch.kernels.AdditiveKernel": {
     "line number": [
      32
     ]
    },
    "gpytorch.kernels.NewtonGirardAdditiveKernel": {
     "line number": [
      24
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      24,
      32,
      32,
      32
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      31
     ]
    },
    "manual_k": {
     "line number": [
      35
     ]
    },
    "test.kernels.test_newton_girard_additive_kernel.torch": {
     "line number": [
      28,
      28,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_degree2": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "AddK": {
     "line number": [
      41,
      46
     ]
    },
    "AddK.base_kernel.lengthscale.numel": {
     "line number": [
      42
     ]
    },
    "AddK.outputscale.numel": {
     "line number": [
      43
     ]
    },
    "gpytorch.kernels.AdditiveKernel": {
     "line number": [
      49,
      53,
      56
     ]
    },
    "gpytorch.kernels.NewtonGirardAdditiveKernel": {
     "line number": [
      41
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      41,
      49,
      49,
      49,
      53,
      53,
      53
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      48,
      52
     ]
    },
    "manual_k": {
     "line number": [
      56,
      57
     ]
    },
    "test.kernels.test_newton_girard_additive_kernel.torch": {
     "line number": [
      45,
      45,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_degree3": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "AddK": {
     "line number": [
      64,
      69
     ]
    },
    "AddK.base_kernel.lengthscale.numel": {
     "line number": [
      65
     ]
    },
    "AddK.outputscale.numel": {
     "line number": [
      66
     ]
    },
    "gpytorch.kernels.AdditiveKernel": {
     "line number": [
      72,
      76,
      80,
      82
     ]
    },
    "gpytorch.kernels.NewtonGirardAdditiveKernel": {
     "line number": [
      64
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      64,
      72,
      72,
      72,
      76,
      76,
      76,
      80
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      71,
      75,
      80
     ]
    },
    "manual_k": {
     "line number": [
      82,
      83
     ]
    },
    "test.kernels.test_newton_girard_additive_kernel.torch": {
     "line number": [
      68,
      68,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_diag": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "AddK": {
     "line number": [
      139,
      144
     ]
    },
    "AddK.base_kernel.lengthscale.numel": {
     "line number": [
      140
     ]
    },
    "AddK.outputscale.numel": {
     "line number": [
      141
     ]
    },
    "gpytorch.kernels.AdditiveKernel": {
     "line number": [
      147,
      151,
      154
     ]
    },
    "gpytorch.kernels.NewtonGirardAdditiveKernel": {
     "line number": [
      139
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      139,
      147,
      147,
      147,
      151,
      151,
      151
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      146,
      150
     ]
    },
    "manual_k": {
     "line number": [
      154,
      155
     ]
    },
    "test.kernels.test_newton_girard_additive_kernel.torch": {
     "line number": [
      143,
      143,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_optimizing": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "AddK": {
     "line number": [
      94,
      107
     ]
    },
    "TestGPModel": {
     "line number": [
      107
     ]
    },
    "gpytorch.kernels.NewtonGirardAdditiveKernel": {
     "line number": [
      94
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      94
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      107
     ]
    },
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      107
     ]
    },
    "gpytorch.mlls.ExactMarginalLogLikelihood": {
     "line number": [
      109
     ]
    },
    "mll": {
     "line number": [
      114
     ]
    },
    "model": {
     "line number": [
      113
     ]
    },
    "range": {
     "line number": [
      111
     ]
    },
    "test.kernels.test_newton_girard_additive_kernel.torch": {
     "line number": [
      89,
      90,
      91,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_optimizing.TestGPModel": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "gpytorch.models.ExactGP": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_optimizing.TestGPModel.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "gpytorch.means.ConstantMean": {
     "line number": [
      99
     ]
    },
    "super": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.TestNewtonGirardAdditiveKernel.test_optimizing.TestGPModel.forward": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_newton_girard_additive_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_periodic_kernel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      66
     ]
    },
    "test.kernels.test_periodic_kernel.unittest": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_periodic_kernel.PeriodicKernel": {
  "data": {
   "shadows": "gpytorch.kernels.PeriodicKernel"
  },
  "type": "import"
 },
 "test.kernels.test_periodic_kernel.TestPeriodicKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.kernels.test_periodic_kernel.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_periodic_kernel.TestPeriodicKernel.test_batch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "gpytorch.kernels.PeriodicKernel": {
     "line number": [
      34
     ]
    },
    "kernel": {
     "line number": [
      34,
      44
     ]
    },
    "kernel.eval": {
     "line number": [
      35
     ]
    },
    "range": {
     "line number": [
      38,
      39,
      40
     ]
    },
    "test.kernels.test_periodic_kernel.math": {
     "line number": [
      41
     ]
    },
    "test.kernels.test_periodic_kernel.torch": {
     "line number": [
      30,
      30,
      31,
      31,
      32,
      32,
      33,
      33,
      37,
      41,
      41,
      42,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_periodic_kernel.TestPeriodicKernel.test_batch_separate": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "gpytorch.kernels.PeriodicKernel": {
     "line number": [
      52
     ]
    },
    "kernel": {
     "line number": [
      52,
      62
     ]
    },
    "kernel.eval": {
     "line number": [
      53
     ]
    },
    "range": {
     "line number": [
      56,
      57,
      58
     ]
    },
    "test.kernels.test_periodic_kernel.math": {
     "line number": [
      59
     ]
    },
    "test.kernels.test_periodic_kernel.torch": {
     "line number": [
      48,
      48,
      49,
      49,
      50,
      50,
      51,
      51,
      52,
      55,
      59,
      59,
      60,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_periodic_kernel.TestPeriodicKernel.test_computes_periodic_function": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.kernels.PeriodicKernel": {
     "line number": [
      17
     ]
    },
    "kernel": {
     "line number": [
      26
     ]
    },
    "range": {
     "line number": [
      21,
      22
     ]
    },
    "test.kernels.test_periodic_kernel.math": {
     "line number": [
      23
     ]
    },
    "test.kernels.test_periodic_kernel.torch": {
     "line number": [
      13,
      13,
      14,
      14,
      20,
      23,
      23,
      24,
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_periodic_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_periodic_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_periodic_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_polynomial_kernel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      110
     ]
    },
    "test.kernels.test_polynomial_kernel.unittest": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_polynomial_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_polynomial_kernel.PolynomialKernel": {
  "data": {
   "shadows": "gpytorch.kernels.PolynomialKernel"
  },
  "type": "import"
 },
 "test.kernels.test_polynomial_kernel.TestPolynomialKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      11
     ]
    },
    "test.kernels.test_polynomial_kernel.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_polynomial_kernel.TestPolynomialKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.kernels.PolynomialKernel": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_polynomial_kernel.TestPolynomialKernel.test_computes_cubic_kernel": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "gpytorch.kernels.PolynomialKernel": {
     "line number": [
      50
     ]
    },
    "kernel": {
     "line number": [
      50,
      58,
      62,
      69,
      71,
      75
     ]
    },
    "kernel.eval": {
     "line number": [
      51
     ]
    },
    "kernel.offset.pow": {
     "line number": [
      56
     ]
    },
    "kernel.power": {
     "line number": [
      56
     ]
    },
    "range": {
     "line number": [
      54,
      55,
      68,
      76
     ]
    },
    "test.kernels.test_polynomial_kernel.torch": {
     "line number": [
      48,
      48,
      49,
      49,
      53,
      59,
      64,
      67,
      72,
      76,
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_polynomial_kernel.TestPolynomialKernel.test_computes_quadratic_kernel": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.kernels.PolynomialKernel": {
     "line number": [
      18
     ]
    },
    "kernel": {
     "line number": [
      26,
      30,
      37,
      39,
      43
     ]
    },
    "range": {
     "line number": [
      22,
      23,
      36,
      44
     ]
    },
    "test.kernels.test_polynomial_kernel.torch": {
     "line number": [
      16,
      16,
      17,
      17,
      21,
      27,
      32,
      35,
      40,
      44,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_polynomial_kernel.TestPolynomialKernel.test_cubic_kernel_batch": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "gpytorch.kernels.PolynomialKernel": {
     "line number": [
      97
     ]
    },
    "kernel": {
     "line number": [
      97,
      106
     ]
    },
    "kernel.eval": {
     "line number": [
      98
     ]
    },
    "kernel.offset.pow": {
     "line number": [
      104
     ]
    },
    "kernel.power": {
     "line number": [
      104
     ]
    },
    "range": {
     "line number": [
      101,
      102,
      103
     ]
    },
    "test.kernels.test_polynomial_kernel.torch": {
     "line number": [
      95,
      95,
      96,
      96,
      97,
      97,
      100,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_polynomial_kernel.TestPolynomialKernel.test_quadratic_kernel_batch": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "gpytorch.kernels.PolynomialKernel": {
     "line number": [
      82
     ]
    },
    "kernel": {
     "line number": [
      82,
      91
     ]
    },
    "kernel.eval": {
     "line number": [
      83
     ]
    },
    "kernel.offset.pow": {
     "line number": [
      89
     ]
    },
    "kernel.power": {
     "line number": [
      89
     ]
    },
    "range": {
     "line number": [
      86,
      87,
      88
     ]
    },
    "test.kernels.test_polynomial_kernel.torch": {
     "line number": [
      80,
      80,
      81,
      81,
      82,
      82,
      85,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_polynomial_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_polynomial_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_polynomial_kernel_grad": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      14
     ]
    },
    "test.kernels.test_polynomial_kernel_grad.unittest": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_polynomial_kernel_grad.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_polynomial_kernel_grad.PolynomialKernelGrad": {
  "data": {
   "shadows": "gpytorch.kernels.PolynomialKernelGrad"
  },
  "type": "import"
 },
 "test.kernels.test_polynomial_kernel_grad.TestPolynomialKernel": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      9
     ]
    },
    "test.kernels.test_polynomial_kernel_grad.unittest": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_polynomial_kernel_grad.TestPolynomialKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "gpytorch.kernels.PolynomialKernelGrad": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_polynomial_kernel_grad.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      202
     ]
    },
    "test.kernels.test_rbf_kernel.unittest": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_rbf_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      12
     ]
    },
    "test.kernels.test_rbf_kernel.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.create_kernel_ard": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_ard": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      24
     ]
    },
    "kernel": {
     "line number": [
      31,
      35,
      42,
      46
     ]
    },
    "test.kernels.test_rbf_kernel.torch": {
     "line number": [
      20,
      20,
      21,
      21,
      22,
      22,
      32,
      37,
      43,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_ard_batch": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      55
     ]
    },
    "kernel": {
     "line number": [
      55,
      62,
      66,
      75,
      79
     ]
    },
    "kernel.eval": {
     "line number": [
      57
     ]
    },
    "kernel.initialize": {
     "line number": [
      56
     ]
    },
    "test.kernels.test_rbf_kernel.torch": {
     "line number": [
      51,
      51,
      52,
      52,
      53,
      53,
      55,
      63,
      68,
      76,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_ard_separate_batch": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      88
     ]
    },
    "kernel": {
     "line number": [
      88,
      95,
      99
     ]
    },
    "kernel.eval": {
     "line number": [
      90
     ]
    },
    "kernel.initialize": {
     "line number": [
      89
     ]
    },
    "test.kernels.test_rbf_kernel.torch": {
     "line number": [
      84,
      84,
      85,
      85,
      86,
      86,
      88,
      96,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_computes_radial_basis_function": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      129
     ]
    },
    "kernel": {
     "line number": [
      129,
      134,
      138
     ]
    },
    "kernel.eval": {
     "line number": [
      130
     ]
    },
    "test.kernels.test_rbf_kernel.torch": {
     "line number": [
      125,
      125,
      126,
      126,
      132,
      132,
      135,
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_computes_radial_basis_function_gradient": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      148
     ]
    },
    "kernel": {
     "line number": [
      148,
      158
     ]
    },
    "kernel.eval": {
     "line number": [
      149
     ]
    },
    "kernel.raw_lengthscale.grad": {
     "line number": [
      160
     ]
    },
    "softplus": {
     "line number": [
      154
     ]
    },
    "test.kernels.test_rbf_kernel.math": {
     "line number": [
      151,
      151
     ]
    },
    "test.kernels.test_rbf_kernel.torch": {
     "line number": [
      143,
      144,
      144,
      145,
      145,
      151,
      155,
      159,
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_initialize_lengthscale": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      189
     ]
    },
    "kernel": {
     "line number": [
      189
     ]
    },
    "kernel.initialize": {
     "line number": [
      190
     ]
    },
    "kernel.lengthscale": {
     "line number": [
      191,
      192
     ]
    },
    "test.kernels.test_rbf_kernel.torch": {
     "line number": [
      191,
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_initialize_lengthscale_batch": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      195
     ]
    },
    "kernel": {
     "line number": [
      195
     ]
    },
    "kernel.initialize": {
     "line number": [
      197
     ]
    },
    "kernel.lengthscale": {
     "line number": [
      198,
      199
     ]
    },
    "test.kernels.test_rbf_kernel.torch": {
     "line number": [
      195,
      196,
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_subset_active_compute_radial_basis_function": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      110
     ]
    },
    "kernel": {
     "line number": [
      110,
      116,
      120
     ]
    },
    "kernel.eval": {
     "line number": [
      112
     ]
    },
    "kernel.initialize": {
     "line number": [
      111
     ]
    },
    "test.kernels.test_rbf_kernel.torch": {
     "line number": [
      104,
      104,
      105,
      105,
      106,
      107,
      107,
      114,
      114,
      117,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.TestRBFKernel.test_subset_active_computes_radial_basis_function_gradient": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      179
     ]
    },
    "kernel": {
     "line number": [
      179,
      182
     ]
    },
    "kernel.eval": {
     "line number": [
      181
     ]
    },
    "kernel.initialize": {
     "line number": [
      180
     ]
    },
    "kernel.raw_lengthscale.grad": {
     "line number": [
      184
     ]
    },
    "softplus": {
     "line number": [
      165,
      175
     ]
    },
    "test.kernels.test_rbf_kernel.math": {
     "line number": [
      172,
      172
     ]
    },
    "test.kernels.test_rbf_kernel.torch": {
     "line number": [
      165,
      166,
      166,
      167,
      167,
      168,
      169,
      169,
      172,
      176,
      183,
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel_grad": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      77
     ]
    },
    "test.kernels.test_rbf_kernel_grad.unittest": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_rbf_kernel_grad.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel_grad.RBFKernelGrad": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernelGrad"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      11
     ]
    },
    "test.kernels.test_rbf_kernel_grad.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad.create_kernel_ard": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernelGrad": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad.create_kernel_no_ard": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernelGrad": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad.test_initialize_lengthscale": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernelGrad": {
     "line number": [
      64
     ]
    },
    "kernel": {
     "line number": [
      64
     ]
    },
    "kernel.initialize": {
     "line number": [
      65
     ]
    },
    "kernel.lengthscale": {
     "line number": [
      66,
      67
     ]
    },
    "test.kernels.test_rbf_kernel_grad.torch": {
     "line number": [
      66,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad.test_initialize_lengthscale_batch": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernelGrad": {
     "line number": [
      70
     ]
    },
    "kernel": {
     "line number": [
      70
     ]
    },
    "kernel.initialize": {
     "line number": [
      72
     ]
    },
    "kernel.lengthscale": {
     "line number": [
      73,
      74
     ]
    },
    "test.kernels.test_rbf_kernel_grad.torch": {
     "line number": [
      70,
      71,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad.test_kernel": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernelGrad": {
     "line number": [
      33
     ]
    },
    "kernel": {
     "line number": [
      41
     ]
    },
    "test.kernels.test_rbf_kernel_grad.torch": {
     "line number": [
      19,
      19,
      20,
      20,
      22,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad.test_kernel_batch": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernelGrad": {
     "line number": [
      53
     ]
    },
    "kernel": {
     "line number": [
      53,
      54,
      58,
      59
     ]
    },
    "test.kernels.test_rbf_kernel_grad.torch": {
     "line number": [
      50,
      50,
      51,
      51,
      57,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel_grad.TestRBFKernelGrad.test_kernel_cuda": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "test.kernels.test_rbf_kernel_grad.torch": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rbf_kernel_grad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_rbf_kernel_grad.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_rff_kernel": {
  "data": {},
  "type": "module"
 },
 "test.kernels.test_rff_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_rff_kernel.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.kernels.test_rff_kernel.RFFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RFFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_rff_kernel.TestModel": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "test.kernels.test_rff_kernel.gpytorch": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_rff_kernel.TestModel.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "gpytorch.kernels.RFFKernel": {
     "line number": [
      18
     ]
    },
    "super": {
     "line number": [
      16
     ]
    },
    "test.kernels.test_rff_kernel.gpytorch": {
     "line number": [
      15,
      17,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rff_kernel.TestModel.forward": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "input": {
     "line number": [
      21,
      22
     ]
    },
    "test.kernels.test_rff_kernel.gpytorch": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rff_kernel.TestRFFKernel": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      26
     ]
    },
    "test.kernels.test_rff_kernel.unittest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_rff_kernel.TestRFFKernel.create_kernel_ard": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "gpytorch.kernels.RFFKernel": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rff_kernel.TestRFFKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "gpytorch.kernels.RFFKernel": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rff_kernel.TestRFFKernel.test_active_dims_list": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      36
     ]
    },
    "kernel.randn_weights": {
     "line number": [
      37
     ]
    },
    "kernel_basic": {
     "line number": [
      40
     ]
    },
    "test.kernels.test_rff_kernel.torch": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rff_kernel.TestRFFKernel.test_active_dims_range": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      46,
      48
     ]
    },
    "kernel.randn_weights": {
     "line number": [
      49
     ]
    },
    "kernel_basic": {
     "line number": [
      50,
      52
     ]
    },
    "kernel_basic._init_weights": {
     "line number": [
      51
     ]
    },
    "list": {
     "line number": [
      45
     ]
    },
    "range": {
     "line number": [
      45
     ]
    },
    "test.kernels.test_rff_kernel.torch": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rff_kernel.TestRFFKernel.test_kernel_getitem_double_batch": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      71,
      74,
      77
     ]
    },
    "kernel.randn_weights": {
     "line number": [
      75
     ]
    },
    "new_kernel": {
     "line number": [
      77,
      79
     ]
    },
    "new_kernel._init_weights": {
     "line number": [
      78
     ]
    },
    "test.kernels.test_rff_kernel.torch": {
     "line number": [
      71,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rff_kernel.TestRFFKernel.test_kernel_getitem_single_batch": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      57,
      60,
      63
     ]
    },
    "kernel.randn_weights": {
     "line number": [
      61
     ]
    },
    "new_kernel": {
     "line number": [
      65
     ]
    },
    "test.kernels.test_rff_kernel.torch": {
     "line number": [
      57,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rff_kernel.TestRFFKernel.test_kernel_output_fewer_features_than_data": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "model": {
     "line number": [
      93,
      98,
      105
     ]
    },
    "model.eval": {
     "line number": [
      104
     ]
    },
    "model.likelihood": {
     "line number": [
      98,
      105
     ]
    },
    "model.train": {
     "line number": [
      97
     ]
    },
    "test.kernels.test_rff_kernel.TestModel": {
     "line number": [
      89
     ]
    },
    "test.kernels.test_rff_kernel.gpytorch": {
     "line number": [
      94,
      99,
      102
     ]
    },
    "test.kernels.test_rff_kernel.torch": {
     "line number": [
      85,
      86,
      87,
      88
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      102
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rff_kernel.TestRFFKernel.test_kernel_output_more_features_than_data": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "model": {
     "line number": [
      113,
      117,
      123,
      131
     ]
    },
    "model.eval": {
     "line number": [
      130
     ]
    },
    "model.likelihood": {
     "line number": [
      123,
      131
     ]
    },
    "model.train": {
     "line number": [
      116,
      122
     ]
    },
    "test.kernels.test_rff_kernel.TestModel": {
     "line number": [
      113
     ]
    },
    "test.kernels.test_rff_kernel.gpytorch": {
     "line number": [
      118,
      119,
      124,
      125,
      128
     ]
    },
    "test.kernels.test_rff_kernel.torch": {
     "line number": [
      110,
      111,
      112
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      128
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rff_kernel.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.kernels.test_rff_kernel.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.kernels.test_rff_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_rff_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_rq_kernel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      226
     ]
    },
    "test.kernels.test_rq_kernel.unittest": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_rq_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_rq_kernel.RQKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RQKernel"
  },
  "type": "import"
 },
 "test.kernels.test_rq_kernel.TestRQKernel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      12
     ]
    },
    "test.kernels.test_rq_kernel.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.create_kernel_ard": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "gpytorch.kernels.RQKernel": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.kernels.RQKernel": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_ard": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "gpytorch.kernels.RQKernel": {
     "line number": [
      24
     ]
    },
    "kernel": {
     "line number": [
      33,
      37,
      44,
      48
     ]
    },
    "kernel.alpha": {
     "line number": [
      43,
      43
     ]
    },
    "test.kernels.test_rq_kernel.torch": {
     "line number": [
      20,
      20,
      21,
      21,
      22,
      22,
      34,
      39,
      45,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_ard_batch": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "gpytorch.kernels.RQKernel": {
     "line number": [
      57
     ]
    },
    "kernel": {
     "line number": [
      57,
      66,
      70,
      80,
      84
     ]
    },
    "kernel.alpha": {
     "line number": [
      65,
      65
     ]
    },
    "kernel.alpha.view": {
     "line number": [
      78
     ]
    },
    "kernel.eval": {
     "line number": [
      60
     ]
    },
    "kernel.initialize": {
     "line number": [
      58,
      59
     ]
    },
    "test.kernels.test_rq_kernel.torch": {
     "line number": [
      53,
      53,
      54,
      54,
      55,
      55,
      57,
      67,
      72,
      81,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_ard_separate_batch": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "gpytorch.kernels.RQKernel": {
     "line number": [
      93
     ]
    },
    "kernel": {
     "line number": [
      93,
      102,
      106
     ]
    },
    "kernel.alpha": {
     "line number": [
      101,
      101
     ]
    },
    "kernel.eval": {
     "line number": [
      96
     ]
    },
    "kernel.initialize": {
     "line number": [
      94,
      95
     ]
    },
    "test.kernels.test_rq_kernel.torch": {
     "line number": [
      89,
      89,
      90,
      90,
      91,
      91,
      93,
      103,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_computes_rational_quadratic": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "gpytorch.kernels.RQKernel": {
     "line number": [
      115
     ]
    },
    "kernel": {
     "line number": [
      115,
      120,
      124
     ]
    },
    "kernel.alpha": {
     "line number": [
      119,
      119
     ]
    },
    "kernel.eval": {
     "line number": [
      116
     ]
    },
    "test.kernels.test_rq_kernel.torch": {
     "line number": [
      111,
      111,
      112,
      112,
      118,
      118,
      121,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_computes_rational_quadratic_gradient": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "gpytorch.kernels.RQKernel": {
     "line number": [
      133
     ]
    },
    "kernel": {
     "line number": [
      133,
      147
     ]
    },
    "kernel.eval": {
     "line number": [
      136
     ]
    },
    "kernel.initialize": {
     "line number": [
      134,
      135
     ]
    },
    "kernel.raw_alpha.grad": {
     "line number": [
      152
     ]
    },
    "kernel.raw_lengthscale.grad": {
     "line number": [
      150
     ]
    },
    "softplus": {
     "line number": [
      142,
      142
     ]
    },
    "test.kernels.test_rq_kernel.math": {
     "line number": [
      138,
      138,
      140,
      140
     ]
    },
    "test.kernels.test_rq_kernel.torch": {
     "line number": [
      129,
      130,
      130,
      131,
      131,
      138,
      140,
      145,
      148,
      151,
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_initialize_alpha": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "gpytorch.kernels.RQKernel": {
     "line number": [
      220
     ]
    },
    "kernel": {
     "line number": [
      220
     ]
    },
    "kernel.alpha": {
     "line number": [
      222,
      223
     ]
    },
    "kernel.initialize": {
     "line number": [
      221
     ]
    },
    "test.kernels.test_rq_kernel.torch": {
     "line number": [
      222,
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_initialize_lengthscale": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "gpytorch.kernels.RQKernel": {
     "line number": [
      207
     ]
    },
    "kernel": {
     "line number": [
      207
     ]
    },
    "kernel.initialize": {
     "line number": [
      208
     ]
    },
    "kernel.lengthscale": {
     "line number": [
      209,
      210
     ]
    },
    "test.kernels.test_rq_kernel.torch": {
     "line number": [
      209,
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_initialize_lengthscale_batch": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "gpytorch.kernels.RQKernel": {
     "line number": [
      213
     ]
    },
    "kernel": {
     "line number": [
      213
     ]
    },
    "kernel.initialize": {
     "line number": [
      215
     ]
    },
    "kernel.lengthscale": {
     "line number": [
      216,
      217
     ]
    },
    "test.kernels.test_rq_kernel.torch": {
     "line number": [
      213,
      214,
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_subset_active_compute_rational_quadratic": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "gpytorch.kernels.RQKernel": {
     "line number": [
      162
     ]
    },
    "kernel": {
     "line number": [
      162,
      169,
      173
     ]
    },
    "kernel.alpha": {
     "line number": [
      168,
      168
     ]
    },
    "kernel.eval": {
     "line number": [
      165
     ]
    },
    "kernel.initialize": {
     "line number": [
      163,
      164
     ]
    },
    "test.kernels.test_rq_kernel.torch": {
     "line number": [
      156,
      156,
      157,
      157,
      158,
      159,
      159,
      167,
      167,
      170,
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.TestRQKernel.test_subset_active_computes_rational_quadratic_gradient": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "gpytorch.kernels.RQKernel": {
     "line number": [
      184
     ]
    },
    "kernel": {
     "line number": [
      184,
      198
     ]
    },
    "kernel.eval": {
     "line number": [
      187
     ]
    },
    "kernel.initialize": {
     "line number": [
      185,
      186
     ]
    },
    "kernel.raw_alpha.grad": {
     "line number": [
      203
     ]
    },
    "kernel.raw_lengthscale.grad": {
     "line number": [
      201
     ]
    },
    "softplus": {
     "line number": [
      178,
      193,
      193
     ]
    },
    "test.kernels.test_rq_kernel.math": {
     "line number": [
      189,
      189,
      191,
      191
     ]
    },
    "test.kernels.test_rq_kernel.torch": {
     "line number": [
      178,
      179,
      179,
      180,
      180,
      181,
      182,
      182,
      189,
      191,
      196,
      199,
      202,
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_rq_kernel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.kernels.test_rq_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_rq_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_scale_kernel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      125
     ]
    },
    "test.kernels.test_scale_kernel.unittest": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_scale_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_scale_kernel.LinearKernel": {
  "data": {
   "shadows": "gpytorch.kernels.LinearKernel"
  },
  "type": "import"
 },
 "test.kernels.test_scale_kernel.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.kernels.test_scale_kernel.ScaleKernel": {
  "data": {
   "shadows": "gpytorch.kernels.ScaleKernel"
  },
  "type": "import"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      11
     ]
    },
    "test.kernels.test_scale_kernel.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.create_kernel_ard": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      18
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      13
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.test_ard": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      27
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      29
     ]
    },
    "kernel": {
     "line number": [
      37,
      41,
      49,
      53
     ]
    },
    "range": {
     "line number": [
      54
     ]
    },
    "test.kernels.test_scale_kernel.torch": {
     "line number": [
      23,
      23,
      24,
      24,
      25,
      25,
      30,
      30,
      38,
      43,
      50,
      54,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.test_ard_batch": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      62
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      64
     ]
    },
    "kernel": {
     "line number": [
      64,
      72,
      76,
      86,
      90
     ]
    },
    "kernel.eval": {
     "line number": [
      66
     ]
    },
    "kernel.initialize": {
     "line number": [
      65
     ]
    },
    "range": {
     "line number": [
      77
     ]
    },
    "test.kernels.test_scale_kernel.torch": {
     "line number": [
      58,
      58,
      59,
      59,
      60,
      60,
      62,
      64,
      65,
      65,
      73,
      77,
      78,
      87,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.test_inherit_active_dims": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      117
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      119
     ]
    },
    "kernel": {
     "line number": [
      119
     ]
    },
    "kernel.active_dims": {
     "line number": [
      122
     ]
    },
    "kernel.eval": {
     "line number": [
      121
     ]
    },
    "kernel.initialize": {
     "line number": [
      120
     ]
    },
    "test.kernels.test_scale_kernel.torch": {
     "line number": [
      116,
      116,
      120,
      120,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.test_initialize_outputscale": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      95
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      95
     ]
    },
    "kernel": {
     "line number": [
      95
     ]
    },
    "kernel.initialize": {
     "line number": [
      96
     ]
    },
    "kernel.outputscale": {
     "line number": [
      97,
      98
     ]
    },
    "test.kernels.test_scale_kernel.torch": {
     "line number": [
      97,
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.test_initialize_outputscale_batch": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      101
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      101
     ]
    },
    "kernel": {
     "line number": [
      101
     ]
    },
    "kernel.initialize": {
     "line number": [
      103
     ]
    },
    "kernel.outputscale": {
     "line number": [
      104,
      105
     ]
    },
    "test.kernels.test_scale_kernel.torch": {
     "line number": [
      101,
      102,
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.test_non_stationary": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "gpytorch.kernels.LinearKernel": {
     "line number": [
      112
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      112
     ]
    },
    "kernel": {
     "line number": [
      112
     ]
    },
    "kernel.is_stationary": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.TestScaleKernel.test_stationary": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      108
     ]
    },
    "gpytorch.kernels.ScaleKernel": {
     "line number": [
      108
     ]
    },
    "kernel": {
     "line number": [
      108
     ]
    },
    "kernel.is_stationary": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_scale_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_scale_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_spectral_delta_kernel": {
  "data": {},
  "type": "module"
 },
 "test.kernels.test_spectral_delta_kernel.BaseKernelTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_kernel_test_case.BaseKernelTestCase"
  },
  "type": "import"
 },
 "test.kernels.test_spectral_delta_kernel.SpectralDeltaKernel": {
  "data": {
   "shadows": "gpytorch.kernels.SpectralDeltaKernel"
  },
  "type": "import"
 },
 "test.kernels.test_spectral_delta_kernel.TestSpectralDeltaKernel": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "gpytorch.test.base_kernel_test_case.BaseKernelTestCase": {
     "line number": [
      9
     ]
    },
    "test.kernels.test_spectral_delta_kernel.unittest": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_spectral_delta_kernel.TestSpectralDeltaKernel.create_data_double_batch": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "test.kernels.test_spectral_delta_kernel.torch": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_delta_kernel.TestSpectralDeltaKernel.create_data_no_batch": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "test.kernels.test_spectral_delta_kernel.torch": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_delta_kernel.TestSpectralDeltaKernel.create_data_single_batch": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "test.kernels.test_spectral_delta_kernel.torch": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_delta_kernel.TestSpectralDeltaKernel.create_kernel_ard": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.kernels.SpectralDeltaKernel": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_delta_kernel.TestSpectralDeltaKernel.create_kernel_no_ard": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "gpytorch.kernels.SpectralDeltaKernel": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_delta_kernel.TestSpectralDeltaKernel.test_active_dims_list": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      31
     ]
    },
    "kernel.Z": {
     "line number": [
      33
     ]
    },
    "kernel_basic": {
     "line number": [
      34
     ]
    },
    "test.kernels.test_spectral_delta_kernel.torch": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_delta_kernel.TestSpectralDeltaKernel.test_active_dims_range": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      43,
      45
     ]
    },
    "kernel.Z": {
     "line number": [
      47
     ]
    },
    "kernel_basic": {
     "line number": [
      46,
      48
     ]
    },
    "kernel_basic.Z": {
     "line number": [
      47
     ]
    },
    "len": {
     "line number": [
      43,
      46
     ]
    },
    "list": {
     "line number": [
      42
     ]
    },
    "range": {
     "line number": [
      42
     ]
    },
    "test.kernels.test_spectral_delta_kernel.torch": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_delta_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_spectral_delta_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.kernels.test_spectral_mixture_kernel": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      138
     ]
    },
    "test.kernels.test_spectral_mixture_kernel.unittest": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "module"
 },
 "test.kernels.test_spectral_mixture_kernel.SpectralMixtureKernel": {
  "data": {
   "shadows": "gpytorch.kernels.SpectralMixtureKernel"
  },
  "type": "import"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "test.kernels.test_spectral_mixture_kernel.unittest": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel.create_data_double_batch": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "test.kernels.test_spectral_mixture_kernel.torch": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel.create_data_no_batch": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "test.kernels.test_spectral_mixture_kernel.torch": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel.create_data_single_batch": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "test.kernels.test_spectral_mixture_kernel.torch": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel.create_kernel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.kernels.SpectralMixtureKernel": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel.test_active_dims_list": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      30
     ]
    },
    "kernel.raw_mixture_means": {
     "line number": [
      33
     ]
    },
    "kernel.raw_mixture_scales": {
     "line number": [
      34
     ]
    },
    "kernel.raw_mixture_weights": {
     "line number": [
      32
     ]
    },
    "kernel_basic": {
     "line number": [
      35
     ]
    },
    "test.kernels.test_spectral_mixture_kernel.torch": {
     "line number": [
      26,
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel.test_active_dims_range": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      42,
      47
     ]
    },
    "kernel.initialize_from_data": {
     "line number": [
      44
     ]
    },
    "kernel.initialize_from_data_empspect": {
     "line number": [
      45
     ]
    },
    "kernel.raw_mixture_means": {
     "line number": [
      50
     ]
    },
    "kernel.raw_mixture_scales": {
     "line number": [
      51
     ]
    },
    "kernel.raw_mixture_weights": {
     "line number": [
      49
     ]
    },
    "kernel_basic": {
     "line number": [
      48,
      52
     ]
    },
    "kernel_basic.raw_mixture_means.data": {
     "line number": [
      50
     ]
    },
    "kernel_basic.raw_mixture_scales.data": {
     "line number": [
      51
     ]
    },
    "kernel_basic.raw_mixture_weights.data": {
     "line number": [
      49
     ]
    },
    "list": {
     "line number": [
      40
     ]
    },
    "range": {
     "line number": [
      40
     ]
    },
    "test.kernels.test_spectral_mixture_kernel.torch": {
     "line number": [
      43,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel.test_kernel_getitem_double_batch": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      123,
      125,
      127,
      133
     ]
    },
    "new_kernel": {
     "line number": [
      127,
      128
     ]
    },
    "test.kernels.test_spectral_mixture_kernel.torch": {
     "line number": [
      123,
      130,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel.test_kernel_getitem_single_batch": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      107,
      109,
      111,
      117
     ]
    },
    "new_kernel": {
     "line number": [
      112
     ]
    },
    "test.kernels.test_spectral_mixture_kernel.torch": {
     "line number": [
      107,
      114,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel.test_no_batch_kernel_single_batch_x": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      58,
      62,
      64,
      65,
      71
     ]
    },
    "kernel.initialize_from_data": {
     "line number": [
      60
     ]
    },
    "kernel.initialize_from_data_empspect": {
     "line number": [
      61
     ]
    },
    "test.kernels.test_spectral_mixture_kernel.torch": {
     "line number": [
      59,
      66,
      68,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel.test_single_batch_kernel_single_batch_x": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      77,
      81,
      83,
      84,
      90
     ]
    },
    "kernel.initialize_from_data": {
     "line number": [
      79
     ]
    },
    "kernel.initialize_from_data_empspect": {
     "line number": [
      80
     ]
    },
    "test.kernels.test_spectral_mixture_kernel.torch": {
     "line number": [
      77,
      78,
      85,
      87,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_mixture_kernel.TestSpectralMixtureKernel.test_smoke_double_batch_kernel_double_batch_x": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "kernel": {
     "line number": [
      96,
      101,
      102
     ]
    },
    "kernel.initialize_from_data": {
     "line number": [
      98
     ]
    },
    "kernel.initialize_from_data_empspect": {
     "line number": [
      99
     ]
    },
    "test.kernels.test_spectral_mixture_kernel.torch": {
     "line number": [
      96,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "test.kernels.test_spectral_mixture_kernel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.kernels.test_spectral_mixture_kernel.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy": {
  "data": {},
  "type": "module"
 },
 "test.lazy.test_added_diag_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      108
     ]
    },
    "test.lazy.test_added_diag_lazy_tensor.unittest": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_added_diag_lazy_tensor.AddedDiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.AddedDiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_added_diag_lazy_tensor.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_added_diag_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_added_diag_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_added_diag_lazy_tensor.RootLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.RootLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      11
     ]
    },
    "test.lazy.test_added_diag_lazy_tensor.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.lazy.AddedDiagLazyTensor": {
     "line number": [
      19
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      19
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      19
     ]
    },
    "test.lazy.test_added_diag_lazy_tensor.torch": {
     "line number": [
      16,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorBatch": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      27
     ]
    },
    "test.lazy.test_added_diag_lazy_tensor.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "gpytorch.lazy.AddedDiagLazyTensor": {
     "line number": [
      37
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      37
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      37
     ]
    },
    "test.lazy.test_added_diag_lazy_tensor.torch": {
     "line number": [
      32,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "test.lazy.test_added_diag_lazy_tensor.torch": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorMultiBatch": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      45
     ]
    },
    "test.lazy.test_added_diag_lazy_tensor.unittest": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "gpytorch.lazy.AddedDiagLazyTensor": {
     "line number": [
      61
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      61
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      61
     ]
    },
    "test.lazy.test_added_diag_lazy_tensor.torch": {
     "line number": [
      52,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "test.lazy.test_added_diag_lazy_tensor.torch": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorPrecondOverride": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "test.lazy.test_added_diag_lazy_tensor.unittest": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorPrecondOverride.test_precond_solve": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "gpytorch.lazy.AddedDiagLazyTensor": {
     "line number": [
      77,
      94
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      77,
      95
     ]
    },
    "gpytorch.lazy.RootLazyTensor": {
     "line number": [
      77,
      95
     ]
    },
    "test.lazy.test_added_diag_lazy_tensor.torch": {
     "line number": [
      72,
      74,
      75,
      75,
      99,
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorPrecondOverride.test_precond_solve.nonstandard_preconditioner": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "gpytorch.lazy.RootLazyTensor": {
     "line number": [
      85
     ]
    },
    "test.lazy.test_added_diag_lazy_tensor.torch": {
     "line number": [
      83,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.TestAddedDiagLazyTensorPrecondOverride.test_precond_solve.nonstandard_preconditioner.precond_closure": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "test.lazy.test_added_diag_lazy_tensor.torch": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_added_diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_added_diag_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_batch_repeat_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      69
     ]
    },
    "test.lazy.test_batch_repeat_lazy_tensor.unittest": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.BatchRepeatLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.BatchRepeatLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.RectangularLazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      12
     ]
    },
    "test.lazy.test_batch_repeat_lazy_tensor.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.lazy.BatchRepeatLazyTensor": {
     "line number": [
      18
     ]
    },
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      18
     ]
    },
    "test.lazy.test_batch_repeat_lazy_tensor.torch": {
     "line number": [
      16,
      16,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorBatch": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      38
     ]
    },
    "test.lazy.test_batch_repeat_lazy_tensor.unittest": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "gpytorch.lazy.BatchRepeatLazyTensor": {
     "line number": [
      44,
      45
     ]
    },
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      44,
      45
     ]
    },
    "test.lazy.test_batch_repeat_lazy_tensor.torch": {
     "line number": [
      42,
      42,
      44,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorMultiBatch": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      52
     ]
    },
    "test.lazy.test_batch_repeat_lazy_tensor.unittest": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "gpytorch.lazy.BatchRepeatLazyTensor": {
     "line number": [
      62
     ]
    },
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      62
     ]
    },
    "test.lazy.test_batch_repeat_lazy_tensor.torch": {
     "line number": [
      58,
      59,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorNonSquare": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase": {
     "line number": [
      25
     ]
    },
    "test.lazy.test_batch_repeat_lazy_tensor.unittest": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorNonSquare.create_lazy_tensor": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "gpytorch.lazify": {
     "line number": [
      31
     ]
    },
    "gpytorch.lazy.BatchRepeatLazyTensor": {
     "line number": [
      31
     ]
    },
    "test.lazy.test_batch_repeat_lazy_tensor.torch": {
     "line number": [
      29,
      29,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.TestBatchRepeatLazyTensorNonSquare.evaluate_lazy_tensor": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.ToeplitzLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.ToeplitzLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.lazify": {
  "data": {
   "shadows": "gpytorch.lazify"
  },
  "type": "import"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_batch_repeat_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_block_diag_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      71
     ]
    },
    "test.lazy.test_block_diag_lazy_tensor.unittest": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_block_diag_lazy_tensor.BlockDiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.BlockDiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_block_diag_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_block_diag_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      11
     ]
    },
    "test.lazy.test_block_diag_lazy_tensor.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.lazy.BlockDiagLazyTensor": {
     "line number": [
      19
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      19
     ]
    },
    "test.lazy.test_block_diag_lazy_tensor.torch": {
     "line number": [
      16,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "range": {
     "line number": [
      24
     ]
    },
    "test.lazy.test_block_diag_lazy_tensor.torch": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensorBatch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      29
     ]
    },
    "test.lazy.test_block_diag_lazy_tensor.unittest": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "gpytorch.lazy.BlockDiagLazyTensor": {
     "line number": [
      37
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      37
     ]
    },
    "test.lazy.test_block_diag_lazy_tensor.torch": {
     "line number": [
      34,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "range": {
     "line number": [
      42,
      43
     ]
    },
    "test.lazy.test_block_diag_lazy_tensor.torch": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensorMultiBatch": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      48
     ]
    },
    "test.lazy.test_block_diag_lazy_tensor.unittest": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "gpytorch.lazy.BlockDiagLazyTensor": {
     "line number": [
      59
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      59
     ]
    },
    "test.lazy.test_block_diag_lazy_tensor.torch": {
     "line number": [
      55,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_block_diag_lazy_tensor.TestBlockDiagLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "range": {
     "line number": [
      64,
      65,
      66
     ]
    },
    "test.lazy.test_block_diag_lazy_tensor.torch": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_block_diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_block_diag_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_block_interleaved_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      77
     ]
    },
    "test.lazy.test_block_interleaved_lazy_tensor.unittest": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.BlockInterleavedLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.BlockInterleavedLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      11
     ]
    },
    "test.lazy.test_block_interleaved_lazy_tensor.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.lazy.BlockInterleavedLazyTensor": {
     "line number": [
      19
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      19
     ]
    },
    "test.lazy.test_block_interleaved_lazy_tensor.torch": {
     "line number": [
      16,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "range": {
     "line number": [
      24,
      25,
      26
     ]
    },
    "test.lazy.test_block_interleaved_lazy_tensor.torch": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensorBatch": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      31
     ]
    },
    "test.lazy.test_block_interleaved_lazy_tensor.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "gpytorch.lazy.BlockInterleavedLazyTensor": {
     "line number": [
      39
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      39
     ]
    },
    "test.lazy.test_block_interleaved_lazy_tensor.torch": {
     "line number": [
      36,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "range": {
     "line number": [
      44,
      45,
      46,
      47
     ]
    },
    "test.lazy.test_block_interleaved_lazy_tensor.torch": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensorMultiBatch": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      52
     ]
    },
    "test.lazy.test_block_interleaved_lazy_tensor.unittest": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "gpytorch.lazy.BlockInterleavedLazyTensor": {
     "line number": [
      63
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      63
     ]
    },
    "test.lazy.test_block_interleaved_lazy_tensor.torch": {
     "line number": [
      59,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.TestBlockInterleavedLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "range": {
     "line number": [
      68,
      69,
      70,
      71,
      72
     ]
    },
    "test.lazy.test_block_interleaved_lazy_tensor.torch": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_block_interleaved_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_cat_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      120
     ]
    },
    "test.lazy.test_cat_lazy_tensor.unittest": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_cat_lazy_tensor.CatLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.CatLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_cat_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_cat_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      11
     ]
    },
    "test.lazy.test_cat_lazy_tensor.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "gpytorch.lazy.CatLazyTensor": {
     "line number": [
      26
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      22,
      23,
      24
     ]
    },
    "test.lazy.test_cat_lazy_tensor.torch": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorBatch": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      53
     ]
    },
    "test.lazy.test_cat_lazy_tensor.unittest": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "gpytorch.lazy.CatLazyTensor": {
     "line number": [
      68
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      64,
      65,
      66
     ]
    },
    "test.lazy.test_cat_lazy_tensor.torch": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorBatchCat": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      97
     ]
    },
    "test.lazy.test_cat_lazy_tensor.unittest": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorBatchCat.create_lazy_tensor": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "gpytorch.lazy.CatLazyTensor": {
     "line number": [
      114
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      110,
      111,
      112
     ]
    },
    "test.lazy.test_cat_lazy_tensor.torch": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorBatchCat.evaluate_lazy_tensor": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorColumn": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      32
     ]
    },
    "test.lazy.test_cat_lazy_tensor.unittest": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorColumn.create_lazy_tensor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "gpytorch.lazy.CatLazyTensor": {
     "line number": [
      47
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      43,
      44,
      45
     ]
    },
    "test.lazy.test_cat_lazy_tensor.torch": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorColumn.evaluate_lazy_tensor": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorMultiBatch": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      74
     ]
    },
    "test.lazy.test_cat_lazy_tensor.unittest": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "gpytorch.lazy.CatLazyTensor": {
     "line number": [
      91
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      87,
      88,
      89
     ]
    },
    "test.lazy.test_cat_lazy_tensor.torch": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.TestCatLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "test.lazy.test_cat_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_cat_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_chol_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      68
     ]
    },
    "test.lazy.test_chol_lazy_tensor.unittest": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_chol_lazy_tensor.CholLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.CholLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_chol_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_chol_lazy_tensor.TestCholLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      11
     ]
    },
    "test.lazy.test_chol_lazy_tensor.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_chol_lazy_tensor.TestCholLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "gpytorch.lazy.CholLazyTensor": {
     "line number": [
      23
     ]
    },
    "gpytorch.lazy.TriangularLazyTensor": {
     "line number": [
      23
     ]
    },
    "test.lazy.test_chol_lazy_tensor.torch": {
     "line number": [
      18,
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_chol_lazy_tensor.TestCholLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "test.lazy.test_chol_lazy_tensor.TestCholLazyTensorBatch": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "test.lazy.test_chol_lazy_tensor.TestCholLazyTensor": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_chol_lazy_tensor.TestCholLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "gpytorch.lazy.CholLazyTensor": {
     "line number": [
      43
     ]
    },
    "gpytorch.lazy.TriangularLazyTensor": {
     "line number": [
      43
     ]
    },
    "test.lazy.test_chol_lazy_tensor.torch": {
     "line number": [
      34,
      39,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_chol_lazy_tensor.TestCholLazyTensorMultiBatch": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "test.lazy.test_chol_lazy_tensor.TestCholLazyTensor": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_chol_lazy_tensor.TestCholLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "gpytorch.lazy.CholLazyTensor": {
     "line number": [
      65
     ]
    },
    "gpytorch.lazy.TriangularLazyTensor": {
     "line number": [
      65
     ]
    },
    "test.lazy.test_chol_lazy_tensor.torch": {
     "line number": [
      53,
      58,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_chol_lazy_tensor.TriangularLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.TriangularLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_chol_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_chol_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_constant_mul_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      79
     ]
    },
    "test.lazy.test_constant_mul_lazy_tensor.unittest": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_constant_mul_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      12
     ]
    },
    "test.lazy.test_constant_mul_lazy_tensor.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      18
     ]
    },
    "test.lazy.test_constant_mul_lazy_tensor.torch": {
     "line number": [
      16,
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "gpytorch.utils.toeplitz.sym_toeplitz": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorBatch": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      26
     ]
    },
    "test.lazy.test_constant_mul_lazy_tensor.unittest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      33
     ]
    },
    "test.lazy.test_constant_mul_lazy_tensor.torch": {
     "line number": [
      30,
      30,
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "gpytorch.utils.toeplitz.sym_toeplitz": {
     "line number": [
      38,
      38
     ]
    },
    "test.lazy.test_constant_mul_lazy_tensor.torch": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorMultiBatch": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      43
     ]
    },
    "test.lazy.test_constant_mul_lazy_tensor.unittest": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      53
     ]
    },
    "test.lazy.test_constant_mul_lazy_tensor.torch": {
     "line number": [
      50,
      50,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorMultiBatchBroadcastConstant": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      61
     ]
    },
    "test.lazy.test_constant_mul_lazy_tensor.unittest": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorMultiBatchBroadcastConstant.create_lazy_tensor": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      71
     ]
    },
    "test.lazy.test_constant_mul_lazy_tensor.torch": {
     "line number": [
      68,
      68,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.TestConstantMulLazyTensorMultiBatchBroadcastConstant.evaluate_lazy_tensor": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "test.lazy.test_constant_mul_lazy_tensor.ToeplitzLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.ToeplitzLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_constant_mul_lazy_tensor.sym_toeplitz": {
  "data": {
   "shadows": "gpytorch.utils.toeplitz.sym_toeplitz"
  },
  "type": "import"
 },
 "test.lazy.test_constant_mul_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_constant_mul_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_diag_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      58
     ]
    },
    "test.lazy.test_diag_lazy_tensor.unittest": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_diag_lazy_tensor.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_diag_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      11
     ]
    },
    "test.lazy.test_diag_lazy_tensor.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      19
     ]
    },
    "test.lazy.test_diag_lazy_tensor.torch": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensorBatch": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensor": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      33
     ]
    },
    "test.lazy.test_diag_lazy_tensor.torch": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "range": {
     "line number": [
      37
     ]
    },
    "test.lazy.test_diag_lazy_tensor.torch": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensorMultiBatch": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensor": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      49
     ]
    },
    "test.lazy.test_diag_lazy_tensor.torch": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_diag_lazy_tensor.TestDiagLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "range": {
     "line number": [
      54
     ]
    },
    "test.lazy.test_diag_lazy_tensor.torch": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_diag_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_interpolated_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      179
     ]
    },
    "test.lazy.test_interpolated_lazy_tensor.unittest": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_interpolated_lazy_tensor.InterpolatedLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.InterpolatedLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_interpolated_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_interpolated_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_interpolated_lazy_tensor.RectangularLazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      11
     ]
    },
    "test.lazy.test_interpolated_lazy_tensor.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "gpytorch.lazy.InterpolatedLazyTensor": {
     "line number": [
      33
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      31
     ]
    },
    "test.lazy.test_interpolated_lazy_tensor.torch": {
     "line number": [
      21,
      22,
      22,
      24,
      25,
      25,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "test.lazy.test_interpolated_lazy_tensor.torch": {
     "line number": [
      38,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensor.test_quad_form_derivative": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorBatch": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      48
     ]
    },
    "test.lazy.test_interpolated_lazy_tensor.unittest": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "gpytorch.lazy.InterpolatedLazyTensor": {
     "line number": [
      70
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      68
     ]
    },
    "test.lazy.test_interpolated_lazy_tensor.torch": {
     "line number": [
      58,
      59,
      59,
      61,
      62,
      62,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "range": {
     "line number": [
      77
     ]
    },
    "test.lazy.test_interpolated_lazy_tensor.torch": {
     "line number": [
      78,
      79,
      84,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorBatch.test_quad_form_derivative": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorMultiBatch": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      92
     ]
    },
    "test.lazy.test_interpolated_lazy_tensor.unittest": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "gpytorch.lazy.InterpolatedLazyTensor": {
     "line number": [
      115
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      113
     ]
    },
    "test.lazy.test_interpolated_lazy_tensor.torch": {
     "line number": [
      104,
      105,
      105,
      107,
      108,
      108,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "range": {
     "line number": [
      122,
      123
     ]
    },
    "test.lazy.test_interpolated_lazy_tensor.torch": {
     "line number": [
      124,
      125,
      134,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorMultiBatch.test_quad_form_derivative": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorRectangular": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase": {
     "line number": [
      148
     ]
    },
    "test.lazy.test_interpolated_lazy_tensor.empty_method": {
     "line number": [
      157,
      158,
      159,
      160,
      161,
      162,
      163,
      164,
      165,
      166,
      167,
      168,
      169,
      170,
      171,
      172,
      173,
      174,
      175,
      176
     ]
    },
    "test.lazy.test_interpolated_lazy_tensor.unittest": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorRectangular.create_lazy_tensor": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "gpytorch.lazy.InterpolatedLazyTensor": {
     "line number": [
      150
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      150
     ]
    },
    "test.lazy.test_interpolated_lazy_tensor.torch": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.TestInterpolatedLazyTensorRectangular.evaluate_lazy_tensor": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.empty_method": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "test.lazy.test_interpolated_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_interpolated_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      136
     ]
    },
    "test.lazy.test_kronecker_product_added_diag_lazy_tensor.unittest": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.ConstantDiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.ConstantDiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.KroneckerProductAddedDiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.KroneckerProductDiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.KroneckerProductDiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.KroneckerProductLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.KroneckerProductLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.TestKroneckerProductAddedConstDiagLazyTensor": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "test.lazy.test_kronecker_product_added_diag_lazy_tensor.TestKroneckerProductAddedDiagLazyTensor": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.TestKroneckerProductAddedConstDiagLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "gpytorch.lazy.ConstantDiagLazyTensor": {
     "line number": [
      110
     ]
    },
    "gpytorch.lazy.KroneckerProductAddedDiagLazyTensor": {
     "line number": [
      113
     ]
    },
    "gpytorch.lazy.KroneckerProductLazyTensor": {
     "line number": [
      109
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      109,
      109,
      109
     ]
    },
    "test.lazy.test_kronecker_product_added_diag_lazy_tensor.torch": {
     "line number": [
      103,
      103,
      104,
      104,
      105,
      105,
      111,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.TestKroneckerProductAddedConstDiagLazyTensor.test_if_cholesky_used": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "test.lazy.test_kronecker_product_added_diag_lazy_tensor.torch": {
     "line number": [
      117
     ]
    },
    "unittest.mock.patch.object": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.TestKroneckerProductAddedConstDiagLazyTensor.test_root_inv_decomposition_no_cholesky": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "gpytorch.settings.max_cholesky_size": {
     "line number": [
      124
     ]
    },
    "test.lazy.test_kronecker_product_added_diag_lazy_tensor.torch": {
     "line number": [
      126,
      131
     ]
    },
    "unittest.mock.patch.object": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.TestKroneckerProductAddedDiagLazyTensor": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      20
     ]
    },
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase.tolerances": {
     "line number": [
      24
     ]
    },
    "test.lazy.test_kronecker_product_added_diag_lazy_tensor.unittest": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.TestKroneckerProductAddedDiagLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      40
     ]
    },
    "gpytorch.lazy.KroneckerProductAddedDiagLazyTensor": {
     "line number": [
      41
     ]
    },
    "gpytorch.lazy.KroneckerProductLazyTensor": {
     "line number": [
      39
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      39,
      39,
      39
     ]
    },
    "test.lazy.test_kronecker_product_added_diag_lazy_tensor.torch": {
     "line number": [
      31,
      31,
      32,
      32,
      33,
      33,
      34,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.TestKroneckerProductAddedDiagLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.TestKroneckerProductAddedKroneckerConstDiagLazyTensor": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "test.lazy.test_kronecker_product_added_diag_lazy_tensor.TestKroneckerProductAddedKroneckerDiagLazyTensor": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.TestKroneckerProductAddedKroneckerConstDiagLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "gpytorch.lazy.ConstantDiagLazyTensor": {
     "line number": [
      91,
      92,
      93
     ]
    },
    "gpytorch.lazy.KroneckerProductAddedDiagLazyTensor": {
     "line number": [
      95
     ]
    },
    "gpytorch.lazy.KroneckerProductDiagLazyTensor": {
     "line number": [
      90
     ]
    },
    "gpytorch.lazy.KroneckerProductLazyTensor": {
     "line number": [
      89
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      89,
      89,
      89
     ]
    },
    "test.lazy.test_kronecker_product_added_diag_lazy_tensor.torch": {
     "line number": [
      77,
      77,
      78,
      78,
      79,
      79,
      80,
      80,
      81,
      81,
      82,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.TestKroneckerProductAddedKroneckerDiagLazyTensor": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "test.lazy.test_kronecker_product_added_diag_lazy_tensor.TestKroneckerProductAddedDiagLazyTensor": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.TestKroneckerProductAddedKroneckerDiagLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "gpytorch.lazy.ConstantDiagLazyTensor": {
     "line number": [
      70,
      70
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      70
     ]
    },
    "gpytorch.lazy.KroneckerProductAddedDiagLazyTensor": {
     "line number": [
      72
     ]
    },
    "gpytorch.lazy.KroneckerProductDiagLazyTensor": {
     "line number": [
      69
     ]
    },
    "gpytorch.lazy.KroneckerProductLazyTensor": {
     "line number": [
      68
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      68,
      68,
      68
     ]
    },
    "test.lazy.test_kronecker_product_added_diag_lazy_tensor.torch": {
     "line number": [
      56,
      56,
      57,
      57,
      58,
      58,
      59,
      59,
      60,
      60,
      61,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.settings": {
  "data": {
   "shadows": "gpytorch.settings"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_added_diag_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      113
     ]
    },
    "test.lazy.test_kronecker_product_lazy_tensor.unittest": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.KroneckerProductDiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.KroneckerProductDiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.KroneckerProductLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.KroneckerProductLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.RectangularLazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductDiagLazyTensor": {
  "data": {
   "lineno": 53
  },
  "type": "class"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductDiagLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      61,
      61,
      61
     ]
    },
    "gpytorch.lazy.KroneckerProductDiagLazyTensor": {
     "line number": [
      61
     ]
    },
    "test.lazy.test_kronecker_product_lazy_tensor.torch": {
     "line number": [
      55,
      55,
      56,
      56,
      57,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductDiagLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "test.lazy.test_kronecker_product_lazy_tensor.kron_diag": {
     "line number": [
      65
     ]
    },
    "test.lazy.test_kronecker_product_lazy_tensor.torch": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensor": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      33
     ]
    },
    "test.lazy.test_kronecker_product_lazy_tensor.unittest": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "gpytorch.lazy.KroneckerProductLazyTensor": {
     "line number": [
      44
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      44,
      44,
      44
     ]
    },
    "test.lazy.test_kronecker_product_lazy_tensor.torch": {
     "line number": [
      38,
      38,
      39,
      39,
      40,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "test.lazy.test_kronecker_product_lazy_tensor.kron": {
     "line number": [
      48,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorBatch": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensor": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "gpytorch.lazy.KroneckerProductLazyTensor": {
     "line number": [
      82
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      82,
      82,
      82
     ]
    },
    "test.lazy.test_kronecker_product_lazy_tensor.torch": {
     "line number": [
      74,
      74,
      75,
      75,
      76,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorRectangular": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase": {
     "line number": [
      86
     ]
    },
    "test.lazy.test_kronecker_product_lazy_tensor.unittest": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorRectangular.create_lazy_tensor": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "gpytorch.lazy.KroneckerProductLazyTensor": {
     "line number": [
      93
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      93,
      93,
      93
     ]
    },
    "test.lazy.test_kronecker_product_lazy_tensor.torch": {
     "line number": [
      90,
      91,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorRectangular.evaluate_lazy_tensor": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "test.lazy.test_kronecker_product_lazy_tensor.kron": {
     "line number": [
      97,
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorRectangularMultiBatch": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorRectangular": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.TestKroneckerProductLazyTensorRectangularMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "gpytorch.lazy.KroneckerProductLazyTensor": {
     "line number": [
      109
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      109,
      109,
      109
     ]
    },
    "test.lazy.test_kronecker_product_lazy_tensor.torch": {
     "line number": [
      106,
      107,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.kron": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "range": {
     "line number": [
      15,
      17
     ]
    },
    "test.lazy.test_kronecker_product_lazy_tensor.torch": {
     "line number": [
      19,
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.kron_diag": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "len": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_kronecker_product_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor": {
  "data": {},
  "type": "module"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorAdditive": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorAdditive.create_lazy_tensor": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "kern": {
     "line number": [
      148,
      151
     ]
    },
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch": {
     "line number": [
      148,
      148
     ]
    },
    "test.lazy.test_lazy_evaluated_kernel_tensor.torch": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorAdditive.evaluate_lazy_tensor": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch": {
     "line number": [
      154,
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorAdditive.test_inv_matmul_matrix_with_checkpointing": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      13
     ]
    },
    "test.lazy.test_lazy_evaluated_kernel_tensor.unittest": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch._test_inv_matmul": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case._ensure_symmetric_grad": {
     "line number": [
      48
     ]
    },
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch": {
     "line number": [
      57,
      59,
      59
     ]
    },
    "test.lazy.test_lazy_evaluated_kernel_tensor.math": {
     "line number": [
      59
     ]
    },
    "test.lazy.test_lazy_evaluated_kernel_tensor.torch": {
     "line number": [
      70
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      57
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      58
     ]
    },
    "zip": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch._test_matmul": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "test.lazy.test_lazy_evaluated_kernel_tensor.torch": {
     "line number": [
      35
     ]
    },
    "zip": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "kern": {
     "line number": [
      20
     ]
    },
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch": {
     "line number": [
      17
     ]
    },
    "test.lazy.test_lazy_evaluated_kernel_tensor.torch": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch": {
     "line number": [
      23,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch.test_batch_getitem": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "kern": {
     "line number": [
      118,
      119
     ]
    },
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch": {
     "line number": [
      118
     ]
    },
    "test.lazy.test_lazy_evaluated_kernel_tensor.torch": {
     "line number": [
      116,
      117,
      118,
      120,
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch.test_getitem_tensor_index": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch.test_inv_matmul_matrix_with_checkpointing": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch": {
     "line number": [
      98
     ]
    },
    "test.lazy.test_lazy_evaluated_kernel_tensor.torch": {
     "line number": [
      96,
      103
     ]
    },
    "zip": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch.test_quad_form_derivative": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorMultitaskBatch": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorBatch": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorMultitaskBatch.create_lazy_tensor": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "kern": {
     "line number": [
      135,
      138
     ]
    },
    "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch": {
     "line number": [
      135,
      135
     ]
    },
    "test.lazy.test_lazy_evaluated_kernel_tensor.torch": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.TestLazyEvaluatedKernelTensorMultitaskBatch.test_inv_matmul_matrix_with_checkpointing": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor._ensure_symmetric_grad": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case._ensure_symmetric_grad"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_lazy_evaluated_kernel_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      139
     ]
    },
    "test.lazy.test_low_rank_root_added_diag_lazy_tensor.unittest": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.LowRankRootAddedDiagLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.LowRankRootLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.LowRankRootLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.TestLowRankRootAddedDiagLazyTensor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      14
     ]
    },
    "test.lazy.test_low_rank_root_added_diag_lazy_tensor.unittest": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.TestLowRankRootAddedDiagLazyTensor._test_inv_matmul": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case._ensure_symmetric_grad": {
     "line number": [
      34
     ]
    },
    "test.lazy.test_low_rank_root_added_diag_lazy_tensor.gpytorch": {
     "line number": [
      43,
      45,
      45
     ]
    },
    "test.lazy.test_low_rank_root_added_diag_lazy_tensor.math": {
     "line number": [
      45
     ]
    },
    "test.lazy.test_low_rank_root_added_diag_lazy_tensor.torch": {
     "line number": [
      56
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      43
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      44
     ]
    },
    "zip": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.TestLowRankRootAddedDiagLazyTensor._test_inv_quad_logdet": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "range": {
     "line number": [
      92
     ]
    },
    "test.lazy.test_low_rank_root_added_diag_lazy_tensor.gpytorch": {
     "line number": [
      78,
      80,
      80,
      82
     ]
    },
    "test.lazy.test_low_rank_root_added_diag_lazy_tensor.math": {
     "line number": [
      81
     ]
    },
    "test.lazy.test_low_rank_root_added_diag_lazy_tensor.torch": {
     "line number": [
      75,
      91,
      92
     ]
    },
    "unittest.mock.MagicMock": {
     "line number": [
      78
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.TestLowRankRootAddedDiagLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "gpytorch.lazy.LowRankRootAddedDiagLazyTensor": {
     "line number": [
      22
     ]
    },
    "gpytorch.lazy.LowRankRootLazyTensor": {
     "line number": [
      21
     ]
    },
    "isinstance": {
     "line number": [
      22
     ]
    },
    "test.lazy.test_low_rank_root_added_diag_lazy_tensor.torch": {
     "line number": [
      19,
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.TestLowRankRootAddedDiagLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.TestLowRankRootAddedDiagLazyTensorBatch": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "test.lazy.test_low_rank_root_added_diag_lazy_tensor.TestLowRankRootAddedDiagLazyTensor": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.TestLowRankRootAddedDiagLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "gpytorch.lazy.LowRankRootAddedDiagLazyTensor": {
     "line number": [
      109
     ]
    },
    "gpytorch.lazy.LowRankRootLazyTensor": {
     "line number": [
      108
     ]
    },
    "isinstance": {
     "line number": [
      109
     ]
    },
    "test.lazy.test_low_rank_root_added_diag_lazy_tensor.torch": {
     "line number": [
      106,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.TestLowRankRootAddedDiagLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.TestLowRankRootAddedDiagLazyTensorMultiBatch": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "test.lazy.test_low_rank_root_added_diag_lazy_tensor.TestLowRankRootAddedDiagLazyTensor": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.TestLowRankRootAddedDiagLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "gpytorch.lazy.LowRankRootAddedDiagLazyTensor": {
     "line number": [
      130
     ]
    },
    "gpytorch.lazy.LowRankRootLazyTensor": {
     "line number": [
      129
     ]
    },
    "isinstance": {
     "line number": [
      130
     ]
    },
    "test.lazy.test_low_rank_root_added_diag_lazy_tensor.torch": {
     "line number": [
      125,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.TestLowRankRootAddedDiagLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor._ensure_symmetric_grad": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case._ensure_symmetric_grad"
  },
  "type": "import"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_low_rank_root_added_diag_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_low_rank_root_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      41
     ]
    },
    "test.lazy.test_low_rank_root_lazy_tensor.unittest": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_low_rank_root_lazy_tensor.LowRankRootLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.LowRankRootLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_low_rank_root_lazy_tensor.RectangularLazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_low_rank_root_lazy_tensor.TestLowRankRootLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase": {
     "line number": [
      11
     ]
    },
    "test.lazy.test_low_rank_root_lazy_tensor.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_low_rank_root_lazy_tensor.TestLowRankRootLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.lazy.LowRankRootLazyTensor": {
     "line number": [
      14
     ]
    },
    "test.lazy.test_low_rank_root_lazy_tensor.torch": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_low_rank_root_lazy_tensor.TestLowRankRootLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "test.lazy.test_low_rank_root_lazy_tensor.TestLowRankRootLazyTensorBatch": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "test.lazy.test_low_rank_root_lazy_tensor.TestLowRankRootLazyTensor": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_low_rank_root_lazy_tensor.TestLowRankRootLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "gpytorch.lazy.LowRankRootLazyTensor": {
     "line number": [
      27
     ]
    },
    "test.lazy.test_low_rank_root_lazy_tensor.torch": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_low_rank_root_lazy_tensor.TestLowRankRootLazyTensorMultiBatch": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "test.lazy.test_low_rank_root_lazy_tensor.TestLowRankRootLazyTensor": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_low_rank_root_lazy_tensor.TestLowRankRootLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "gpytorch.lazy.LowRankRootLazyTensor": {
     "line number": [
      38
     ]
    },
    "test.lazy.test_low_rank_root_lazy_tensor.torch": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_low_rank_root_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_low_rank_root_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_matmul_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      59
     ]
    },
    "test.lazy.test_matmul_lazy_tensor.unittest": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_matmul_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_matmul_lazy_tensor.MatmulLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.MatmulLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_matmul_lazy_tensor.RectangularLazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      11
     ]
    },
    "test.lazy.test_matmul_lazy_tensor.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "gpytorch.lazy.MatmulLazyTensor": {
     "line number": [
      17
     ]
    },
    "test.lazy.test_matmul_lazy_tensor.torch": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorBatch": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      24
     ]
    },
    "test.lazy.test_matmul_lazy_tensor.unittest": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "gpytorch.lazy.MatmulLazyTensor": {
     "line number": [
      30
     ]
    },
    "test.lazy.test_matmul_lazy_tensor.torch": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorRectangular": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase": {
     "line number": [
      37
     ]
    },
    "test.lazy.test_matmul_lazy_tensor.unittest": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorRectangular.create_lazy_tensor": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "gpytorch.lazy.MatmulLazyTensor": {
     "line number": [
      41
     ]
    },
    "test.lazy.test_matmul_lazy_tensor.torch": {
     "line number": [
      39,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorRectangular.evaluate_lazy_tensor": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorRectangularMultiBatch": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.RectangularLazyTensorTestCase": {
     "line number": [
      48
     ]
    },
    "test.lazy.test_matmul_lazy_tensor.unittest": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorRectangularMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "gpytorch.lazy.MatmulLazyTensor": {
     "line number": [
      52
     ]
    },
    "test.lazy.test_matmul_lazy_tensor.torch": {
     "line number": [
      50,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.TestMatmulLazyTensorRectangularMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "test.lazy.test_matmul_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_matmul_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_mul_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      74
     ]
    },
    "test.lazy.test_mul_lazy_tensor.unittest": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_mul_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_mul_lazy_tensor.RootLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.RootLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensor": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      16
     ]
    },
    "test.lazy.test_mul_lazy_tensor.unittest": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "gpytorch.lazy.RootLazyTensor": {
     "line number": [
      22,
      22
     ]
    },
    "test.lazy.test_mul_lazy_tensor.make_random_mat": {
     "line number": [
      20,
      21
     ]
    },
    "test.lazy.test_mul_lazy_tensor.torch": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "test.lazy.test_mul_lazy_tensor.torch": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensorBatch": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      34
     ]
    },
    "test.lazy.test_mul_lazy_tensor.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "gpytorch.lazy.RootLazyTensor": {
     "line number": [
      40,
      40
     ]
    },
    "test.lazy.test_mul_lazy_tensor.make_random_mat": {
     "line number": [
      38,
      39
     ]
    },
    "test.lazy.test_mul_lazy_tensor.torch": {
     "line number": [
      38,
      39,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "test.lazy.test_mul_lazy_tensor.torch": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensorMultiBatch": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      52
     ]
    },
    "test.lazy.test_mul_lazy_tensor.unittest": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "gpytorch.lazy.RootLazyTensor": {
     "line number": [
      59,
      59
     ]
    },
    "test.lazy.test_mul_lazy_tensor.make_random_mat": {
     "line number": [
      57,
      58
     ]
    },
    "test.lazy.test_mul_lazy_tensor.torch": {
     "line number": [
      57,
      58,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "test.lazy.test_mul_lazy_tensor.torch": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.TestMulLazyTensorMultiBatch.test_inv_quad_logdet": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.make_random_mat": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.lazy.test_mul_lazy_tensor.torch": {
     "line number": [
      11,
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_mul_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_mul_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_non_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "test.lazy.test_non_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_non_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      12
     ]
    },
    "test.lazy.test_non_lazy_tensor.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      19
     ]
    },
    "test.lazy.test_non_lazy_tensor.torch": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensor.test_root_decomposition_exact": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "test.lazy.test_non_lazy_tensor.gpytorch": {
     "line number": [
      27
     ]
    },
    "test.lazy.test_non_lazy_tensor.torch": {
     "line number": [
      26,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensorBatch": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      34
     ]
    },
    "test.lazy.test_non_lazy_tensor.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      41
     ]
    },
    "test.lazy.test_non_lazy_tensor.torch": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensorBatch.test_root_decomposition_exact": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "test.lazy.test_non_lazy_tensor.gpytorch": {
     "line number": [
      49
     ]
    },
    "test.lazy.test_non_lazy_tensor.torch": {
     "line number": [
      48,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensorMultiBatch": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      56
     ]
    },
    "test.lazy.test_non_lazy_tensor.unittest": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      66
     ]
    },
    "test.lazy.test_non_lazy_tensor.torch": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.TestNonLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "test.lazy.test_non_lazy_tensor.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.lazy.test_non_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_non_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_psd_sum_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      61
     ]
    },
    "test.lazy.test_psd_sum_lazy_tensor.unittest": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_psd_sum_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_psd_sum_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_psd_sum_lazy_tensor.PsdSumLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.PsdSumLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      11
     ]
    },
    "test.lazy.test_psd_sum_lazy_tensor.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.lazy.PsdSumLazyTensor": {
     "line number": [
      20
     ]
    },
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      17,
      19
     ]
    },
    "test.lazy.test_psd_sum_lazy_tensor.torch": {
     "line number": [
      16,
      16,
      18,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensorBatch": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      27
     ]
    },
    "test.lazy.test_psd_sum_lazy_tensor.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "gpytorch.lazy.PsdSumLazyTensor": {
     "line number": [
      36
     ]
    },
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      33,
      35
     ]
    },
    "test.lazy.test_psd_sum_lazy_tensor.torch": {
     "line number": [
      32,
      32,
      34,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensorMultiBatch": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      43
     ]
    },
    "test.lazy.test_psd_sum_lazy_tensor.unittest": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      51,
      53
     ]
    },
    "gpytorch.lazy.PsdSumLazyTensor": {
     "line number": [
      54
     ]
    },
    "test.lazy.test_psd_sum_lazy_tensor.torch": {
     "line number": [
      50,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_psd_sum_lazy_tensor.TestPsdSumLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_psd_sum_lazy_tensor.ToeplitzLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.ToeplitzLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_psd_sum_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_psd_sum_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_root_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      48
     ]
    },
    "test.lazy.test_root_lazy_tensor.unittest": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_root_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_root_lazy_tensor.RootLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.RootLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_root_lazy_tensor.TestRootLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      11
     ]
    },
    "test.lazy.test_root_lazy_tensor.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_root_lazy_tensor.TestRootLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "gpytorch.lazy.RootLazyTensor": {
     "line number": [
      18
     ]
    },
    "test.lazy.test_root_lazy_tensor.torch": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_root_lazy_tensor.TestRootLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "test.lazy.test_root_lazy_tensor.TestRootLazyTensorBatch": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "test.lazy.test_root_lazy_tensor.TestRootLazyTensor": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_root_lazy_tensor.TestRootLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "gpytorch.lazy.RootLazyTensor": {
     "line number": [
      33
     ]
    },
    "test.lazy.test_root_lazy_tensor.torch": {
     "line number": [
      30,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_root_lazy_tensor.TestRootLazyTensorMultiBatch": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "test.lazy.test_root_lazy_tensor.TestRootLazyTensor": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_root_lazy_tensor.TestRootLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "gpytorch.lazy.RootLazyTensor": {
     "line number": [
      45
     ]
    },
    "test.lazy.test_root_lazy_tensor.torch": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_root_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_root_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_sum_batch_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      58
     ]
    },
    "test.lazy.test_sum_batch_lazy_tensor.unittest": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_sum_batch_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_sum_batch_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_sum_batch_lazy_tensor.SumBatchLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.SumBatchLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      11
     ]
    },
    "test.lazy.test_sum_batch_lazy_tensor.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      19
     ]
    },
    "gpytorch.lazy.SumBatchLazyTensor": {
     "line number": [
      19
     ]
    },
    "test.lazy.test_sum_batch_lazy_tensor.torch": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensorBatch": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      26
     ]
    },
    "test.lazy.test_sum_batch_lazy_tensor.unittest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      34
     ]
    },
    "gpytorch.lazy.SumBatchLazyTensor": {
     "line number": [
      34
     ]
    },
    "test.lazy.test_sum_batch_lazy_tensor.torch": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensorMultiBatch": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      41
     ]
    },
    "test.lazy.test_sum_batch_lazy_tensor.unittest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      51
     ]
    },
    "gpytorch.lazy.SumBatchLazyTensor": {
     "line number": [
      51
     ]
    },
    "test.lazy.test_sum_batch_lazy_tensor.torch": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_batch_lazy_tensor.TestSumBatchLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "test.lazy.test_sum_batch_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_sum_batch_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_sum_kronecker_lazy_tensor": {
  "data": {},
  "type": "module"
 },
 "test.lazy.test_sum_kronecker_lazy_tensor.KroneckerProductLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.KroneckerProductLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_sum_kronecker_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_sum_kronecker_lazy_tensor.NonLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.NonLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_sum_kronecker_lazy_tensor.SumKroneckerLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.SumKroneckerLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_sum_kronecker_lazy_tensor.TestSumKroneckerLazyTensor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      21
     ]
    },
    "test.lazy.test_sum_kronecker_lazy_tensor.unittest": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_sum_kronecker_lazy_tensor.TestSumKroneckerLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "gpytorch.lazy.KroneckerProductLazyTensor": {
     "line number": [
      37,
      38
     ]
    },
    "gpytorch.lazy.NonLazyTensor": {
     "line number": [
      37,
      37,
      38,
      38
     ]
    },
    "gpytorch.lazy.SumKroneckerLazyTensor": {
     "line number": [
      40
     ]
    },
    "test.lazy.test_sum_kronecker_lazy_tensor.torch": {
     "line number": [
      28,
      28,
      29,
      29,
      30,
      30,
      31,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_kronecker_lazy_tensor.TestSumKroneckerLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "test.lazy.test_sum_kronecker_lazy_tensor.kron": {
     "line number": [
      43,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_kronecker_lazy_tensor.kron": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "range": {
     "line number": [
      13,
      15
     ]
    },
    "test.lazy.test_sum_kronecker_lazy_tensor.torch": {
     "line number": [
      17,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_kronecker_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_sum_kronecker_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_sum_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      100
     ]
    },
    "test.lazy.test_sum_lazy_tensor.unittest": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_sum_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      11
     ]
    },
    "test.lazy.test_sum_lazy_tensor.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      16,
      18
     ]
    },
    "test.lazy.test_sum_lazy_tensor.torch": {
     "line number": [
      15,
      15,
      17,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorBatch": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      26
     ]
    },
    "test.lazy.test_sum_lazy_tensor.unittest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      31,
      33
     ]
    },
    "test.lazy.test_sum_lazy_tensor.torch": {
     "line number": [
      30,
      30,
      32,
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorBroadcasting": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "test.lazy.test_sum_lazy_tensor.unittest": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorBroadcasting.test_broadcast_lazy_shape": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "gpytorch.lazy.lazify": {
     "line number": [
      88
     ]
    },
    "test.lazy.test_sum_lazy_tensor.torch": {
     "line number": [
      88,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorBroadcasting.test_broadcast_same_shape": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "gpytorch.lazy.lazify": {
     "line number": [
      64
     ]
    },
    "test.lazy.test_sum_lazy_tensor.torch": {
     "line number": [
      64,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorBroadcasting.test_broadcast_tensor_shape": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "gpytorch.lazy.lazify": {
     "line number": [
      76
     ]
    },
    "test.lazy.test_sum_lazy_tensor.torch": {
     "line number": [
      76,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorMultiBatch": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      41
     ]
    },
    "test.lazy.test_sum_lazy_tensor.unittest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      50,
      54
     ]
    },
    "test.lazy.test_sum_lazy_tensor.torch": {
     "line number": [
      47,
      48,
      51,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.TestSumLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_sum_lazy_tensor.ToeplitzLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.ToeplitzLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_sum_lazy_tensor.lazify": {
  "data": {
   "shadows": "gpytorch.lazy.lazify"
  },
  "type": "import"
 },
 "test.lazy.test_sum_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_sum_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_toeplitz_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      61
     ]
    },
    "test.lazy.test_toeplitz_lazy_tensor.unittest": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_toeplitz_lazy_tensor.LazyTensorTestCase": {
  "data": {
   "shadows": "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase"
  },
  "type": "import"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      12
     ]
    },
    "test.lazy.test_toeplitz_lazy_tensor.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensor.create_lazy_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      17
     ]
    },
    "test.lazy.test_toeplitz_lazy_tensor.torch": {
     "line number": [
      16,
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensor.evaluate_lazy_tensor": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "gpytorch.utils.toeplitz.sym_toeplitz": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensorBatch": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      23
     ]
    },
    "test.lazy.test_toeplitz_lazy_tensor.unittest": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensorBatch.create_lazy_tensor": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      28
     ]
    },
    "test.lazy.test_toeplitz_lazy_tensor.torch": {
     "line number": [
      27,
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensorBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "gpytorch.utils.toeplitz.sym_toeplitz": {
     "line number": [
      33,
      34
     ]
    },
    "test.lazy.test_toeplitz_lazy_tensor.torch": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensorMultiBatch": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase": {
     "line number": [
      39
     ]
    },
    "test.lazy.test_toeplitz_lazy_tensor.unittest": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensorMultiBatch.create_lazy_tensor": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "gpytorch.lazy.ToeplitzLazyTensor": {
     "line number": [
      46
     ]
    },
    "test.lazy.test_toeplitz_lazy_tensor.torch": {
     "line number": [
      43,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_toeplitz_lazy_tensor.TestToeplitzLazyTensorMultiBatch.evaluate_lazy_tensor": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "gpytorch.utils.toeplitz.sym_toeplitz": {
     "line number": [
      51,
      52,
      53,
      54,
      55,
      56
     ]
    },
    "test.lazy.test_toeplitz_lazy_tensor.torch": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_toeplitz_lazy_tensor.ToeplitzLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.ToeplitzLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_toeplitz_lazy_tensor.toeplitz": {
  "data": {
   "shadows": "gpytorch.utils.toeplitz"
  },
  "type": "import"
 },
 "test.lazy.test_toeplitz_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_toeplitz_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.lazy.test_zero_lazy_tensor": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      125
     ]
    },
    "test.lazy.test_zero_lazy_tensor.unittest": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "module"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.lazy.test_zero_lazy_tensor.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor.test_add_diag": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "gpytorch.lazy.ZeroLazyTensor": {
     "line number": [
      90,
      95,
      100,
      105,
      110,
      115,
      120
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      92,
      97,
      102,
      107,
      112,
      117,
      122
     ]
    },
    "test.lazy.test_zero_lazy_tensor.torch": {
     "line number": [
      89,
      91,
      94,
      96,
      99,
      104,
      106,
      109,
      111,
      114,
      119,
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor.test_evaluate": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.lazy.ZeroLazyTensor": {
     "line number": [
      13
     ]
    },
    "test.lazy.test_zero_lazy_tensor.torch": {
     "line number": [
      14,
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor.test_get_item_tensor_index": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      59,
      61
     ]
    },
    "gpytorch.lazy.ZeroLazyTensor": {
     "line number": [
      50
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      54,
      56,
      58,
      60,
      62
     ]
    },
    "slice": {
     "line number": [
      55,
      57,
      59
     ]
    },
    "test.lazy.test_zero_lazy_tensor.torch": {
     "line number": [
      53,
      53,
      55,
      57,
      59,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor.test_get_item_tensor_index_on_batch": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "Ellipsis": {
     "line number": [
      85
     ]
    },
    "gpytorch.lazy.ZeroLazyTensor": {
     "line number": [
      66
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      70,
      72,
      74,
      76,
      78,
      80,
      82,
      84,
      86
     ]
    },
    "slice": {
     "line number": [
      71,
      73,
      75,
      77,
      77,
      79,
      81,
      83
     ]
    },
    "test.lazy.test_zero_lazy_tensor.torch": {
     "line number": [
      69,
      69,
      69,
      71,
      71,
      73,
      73,
      75,
      75,
      77,
      79,
      79,
      81,
      81,
      83,
      83,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor.test_getitem": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "gpytorch.lazy.ZeroLazyTensor": {
     "line number": [
      19
     ]
    },
    "test.lazy.test_zero_lazy_tensor.torch": {
     "line number": [
      22,
      22,
      24,
      24,
      26,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor.test_getitem_complex": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "gpytorch.lazy.ZeroLazyTensor": {
     "line number": [
      29
     ]
    },
    "test.lazy.test_zero_lazy_tensor.torch": {
     "line number": [
      32,
      32,
      34,
      34,
      36,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_zero_lazy_tensor.TestZeroLazyTensor.test_getitem_ellipsis": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "gpytorch.lazy.ZeroLazyTensor": {
     "line number": [
      39
     ]
    },
    "test.lazy.test_zero_lazy_tensor.torch": {
     "line number": [
      42,
      42,
      44,
      44,
      46,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "test.lazy.test_zero_lazy_tensor.ZeroLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.ZeroLazyTensor"
  },
  "type": "import"
 },
 "test.lazy.test_zero_lazy_tensor.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.lazy.test_zero_lazy_tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.lazy.test_zero_lazy_tensor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.likelihoods": {
  "data": {},
  "type": "module"
 },
 "test.likelihoods.test_bernoulli_likelihood": {
  "data": {},
  "type": "module"
 },
 "test.likelihoods.test_bernoulli_likelihood.BaseLikelihoodTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase"
  },
  "type": "import"
 },
 "test.likelihoods.test_bernoulli_likelihood.BernoulliLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.BernoulliLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_bernoulli_likelihood.TestBernoulliLikelihood": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase": {
     "line number": [
      11
     ]
    },
    "test.likelihoods.test_bernoulli_likelihood.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_bernoulli_likelihood.TestBernoulliLikelihood._create_targets": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "test.likelihoods.test_bernoulli_likelihood.torch": {
     "line number": [
      14,
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_bernoulli_likelihood.TestBernoulliLikelihood._test_log_marginal": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "gpytorch.likelihoods._OneDimensionalLikelihood.log_marginal": {
     "line number": [
      29
     ]
    },
    "input": {
     "line number": [
      23,
      25,
      29
     ]
    },
    "test.likelihoods.test_bernoulli_likelihood.torch": {
     "line number": [
      27,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_bernoulli_likelihood.TestBernoulliLikelihood._test_log_prob": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "gpytorch.likelihoods._OneDimensionalLikelihood.expected_log_prob": {
     "line number": [
      43
     ]
    },
    "input": {
     "line number": [
      37,
      39,
      43
     ]
    },
    "test.likelihoods.test_bernoulli_likelihood.torch": {
     "line number": [
      41,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_bernoulli_likelihood.TestBernoulliLikelihood.create_likelihood": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "gpytorch.likelihoods.BernoulliLikelihood": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_bernoulli_likelihood._OneDimensionalLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods._OneDimensionalLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_bernoulli_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.likelihoods.test_bernoulli_likelihood.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.likelihoods.test_beta_likelihood": {
  "data": {},
  "type": "module"
 },
 "test.likelihoods.test_beta_likelihood.BaseLikelihoodTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase"
  },
  "type": "import"
 },
 "test.likelihoods.test_beta_likelihood.BetaLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.BetaLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_beta_likelihood.TestBetaLikelihood": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase": {
     "line number": [
      11
     ]
    },
    "test.likelihoods.test_beta_likelihood.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_beta_likelihood.TestBetaLikelihood._create_targets": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "test.likelihoods.test_beta_likelihood.torch": {
     "line number": [
      14,
      15,
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_beta_likelihood.TestBetaLikelihood._test_log_marginal": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.likelihoods._OneDimensionalLikelihood.log_marginal": {
     "line number": [
      29
     ]
    },
    "input": {
     "line number": [
      23,
      25,
      29
     ]
    },
    "test.likelihoods.test_beta_likelihood.torch": {
     "line number": [
      27,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_beta_likelihood.TestBetaLikelihood._test_log_prob": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "gpytorch.likelihoods._OneDimensionalLikelihood.expected_log_prob": {
     "line number": [
      40
     ]
    },
    "input": {
     "line number": [
      34,
      36,
      40
     ]
    },
    "test.likelihoods.test_beta_likelihood.torch": {
     "line number": [
      38,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_beta_likelihood.TestBetaLikelihood._test_marginal": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "test.likelihoods.test_beta_likelihood.TestBetaLikelihood.create_likelihood": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "gpytorch.likelihoods.BetaLikelihood": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_beta_likelihood._OneDimensionalLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods._OneDimensionalLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_beta_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.likelihoods.test_beta_likelihood.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      148
     ]
    },
    "test.likelihoods.test_gaussian_likelihood.unittest": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "module"
 },
 "test.likelihoods.test_gaussian_likelihood.BaseLikelihoodTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.DirichletClassificationLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.DirichletClassificationLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.FixedGaussianNoise": {
  "data": {
   "shadows": "gpytorch.likelihoods.noise_models.FixedGaussianNoise"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.GaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.GaussianLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.TestDirichletClassificationLikelihood": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase": {
     "line number": [
      99
     ]
    },
    "test.likelihoods.test_gaussian_likelihood.unittest": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_gaussian_likelihood.TestDirichletClassificationLikelihood.create_likelihood": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "gpytorch.likelihoods.DirichletClassificationLikelihood": {
     "line number": [
      103
     ]
    },
    "test.likelihoods.test_gaussian_likelihood.torch": {
     "line number": [
      101,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestDirichletClassificationLikelihood.test_batch": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestDirichletClassificationLikelihood.test_dirichlet_classification_likelihood": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      138
     ]
    },
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      131,
      137
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      130,
      136
     ]
    },
    "gpytorch.likelihoods.DirichletClassificationLikelihood": {
     "line number": [
      120
     ]
    },
    "gpytorch.likelihoods.noise_models.FixedGaussianNoise": {
     "line number": [
      122
     ]
    },
    "lkhd": {
     "line number": [
      120,
      132,
      139,
      143
     ]
    },
    "lkhd._prepare_targets": {
     "line number": [
      125,
      144
     ]
    },
    "lkhd.noise": {
     "line number": [
      126,
      127
     ]
    },
    "lkhd.noise_covar": {
     "line number": [
      122
     ]
    },
    "test.likelihoods.test_gaussian_likelihood.torch": {
     "line number": [
      116,
      116,
      117,
      117,
      118,
      123,
      127,
      129,
      130,
      133,
      135,
      136,
      141,
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestDirichletClassificationLikelihood.test_multi_batch": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestDirichletClassificationLikelihood.test_nonbatch": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihood": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase": {
     "line number": [
      44
     ]
    },
    "test.likelihoods.test_gaussian_likelihood.unittest": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihood.create_likelihood": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood": {
     "line number": [
      47
     ]
    },
    "test.likelihoods.test_gaussian_likelihood.torch": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihood.test_fixed_noise_gaussian_likelihood": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "UserWarning": {
     "line number": [
      70
     ]
    },
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      63,
      69
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      62,
      68
     ]
    },
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood": {
     "line number": [
      53
     ]
    },
    "gpytorch.likelihoods.noise_models.FixedGaussianNoise": {
     "line number": [
      55
     ]
    },
    "lkhd": {
     "line number": [
      64,
      71,
      74
     ]
    },
    "test.likelihoods.test_gaussian_likelihood.torch": {
     "line number": [
      50,
      50,
      51,
      51,
      52,
      56,
      57,
      59,
      61,
      62,
      65,
      67,
      68,
      73,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihoodBatch": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase": {
     "line number": [
      78
     ]
    },
    "test.likelihoods.test_gaussian_likelihood.unittest": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihoodBatch.create_likelihood": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood": {
     "line number": [
      81
     ]
    },
    "test.likelihoods.test_gaussian_likelihood.torch": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihoodBatch.test_nonbatch": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihoodMultiBatch": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase": {
     "line number": [
      87
     ]
    },
    "test.likelihoods.test_gaussian_likelihood.unittest": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihoodMultiBatch.create_likelihood": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood": {
     "line number": [
      90
     ]
    },
    "test.likelihoods.test_gaussian_likelihood.torch": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihoodMultiBatch.test_batch": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestFixedNoiseGaussianLikelihoodMultiBatch.test_nonbatch": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihood": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase": {
     "line number": [
      14
     ]
    },
    "test.likelihoods.test_gaussian_likelihood.unittest": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihood.create_likelihood": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihoodBatch": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihood": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihoodBatch.create_likelihood": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      25
     ]
    },
    "test.likelihoods.test_gaussian_likelihood.torch": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihoodBatch.test_nonbatch": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihoodMultiBatch": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihood": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihoodMultiBatch.create_likelihood": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "gpytorch.likelihoods.GaussianLikelihood": {
     "line number": [
      35
     ]
    },
    "test.likelihoods.test_gaussian_likelihood.torch": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihoodMultiBatch.test_batch": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.TestGaussianLikelihoodMultiBatch.test_nonbatch": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "test.likelihoods.test_gaussian_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.likelihoods.test_gaussian_likelihood.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      94
     ]
    },
    "math.pi": {
     "line number": [
      21,
      23
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.latent_error": {
     "line number": [
      21,
      23
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.torch": {
     "line number": [
      17,
      18,
      21,
      21,
      23,
      23,
      26
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.train_x": {
     "line number": [
      18,
      21,
      21,
      23,
      23
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.train_y1": {
     "line number": [
      26
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.train_y2": {
     "line number": [
      26
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.unittest": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "module"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskGPModel": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "test.likelihoods.test_general_multitask_gaussian_likelihood.gpytorch": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskGPModel.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "gpytorch.kernels.MultitaskKernel": {
     "line number": [
      34
     ]
    },
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      33
     ]
    },
    "gpytorch.means.ConstantMean": {
     "line number": [
      32
     ]
    },
    "gpytorch.means.MultitaskMean": {
     "line number": [
      32
     ]
    },
    "super": {
     "line number": [
      31
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskGPModel": {
     "line number": [
      31
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.train_x": {
     "line number": [
      31
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.train_y": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskGPModel.forward": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskKernel": {
  "data": {
   "shadows": "gpytorch.kernels.MultitaskKernel"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskMean": {
  "data": {
   "shadows": "gpytorch.means.MultitaskMean"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.TestMultiTaskGPRegression": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "test.likelihoods.test_general_multitask_gaussian_likelihood.unittest": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.TestMultiTaskGPRegression.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "test.likelihoods.test_general_multitask_gaussian_likelihood.os": {
     "line number": [
      44,
      44
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.random": {
     "line number": [
      49
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.torch": {
     "line number": [
      45,
      46,
      47,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.TestMultiTaskGPRegression.tearDown": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      52
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.torch": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.TestMultiTaskGPRegression.test_multitask_low_rank_noise_covar": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "gpytorch.likelihoods.MultitaskGaussianLikelihood": {
     "line number": [
      56
     ]
    },
    "mll": {
     "line number": [
      76
     ]
    },
    "model": {
     "line number": [
      74
     ]
    },
    "model.eval": {
     "line number": [
      81
     ]
    },
    "range": {
     "line number": [
      69
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.MultitaskGPModel": {
     "line number": [
      57
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.gpytorch": {
     "line number": [
      66
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.torch": {
     "line number": [
      63,
      89
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.train_x": {
     "line number": [
      57,
      74
     ]
    },
    "test.likelihoods.test_general_multitask_gaussian_likelihood.train_y": {
     "line number": [
      57,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.latent_error": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.train_x": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.train_y": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.train_y1": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.train_y2": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "test.likelihoods.test_general_multitask_gaussian_likelihood.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.likelihoods.test_laplace_likelihood": {
  "data": {},
  "type": "module"
 },
 "test.likelihoods.test_laplace_likelihood.BaseLikelihoodTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase"
  },
  "type": "import"
 },
 "test.likelihoods.test_laplace_likelihood.LaplaceLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.LaplaceLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_laplace_likelihood.TestLaplaceLikelihood": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase": {
     "line number": [
      11
     ]
    },
    "test.likelihoods.test_laplace_likelihood.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_laplace_likelihood.TestLaplaceLikelihood._create_targets": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "test.likelihoods.test_laplace_likelihood.torch": {
     "line number": [
      14,
      15,
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_laplace_likelihood.TestLaplaceLikelihood._test_log_marginal": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.likelihoods._OneDimensionalLikelihood.log_marginal": {
     "line number": [
      29
     ]
    },
    "input": {
     "line number": [
      23,
      25,
      29
     ]
    },
    "test.likelihoods.test_laplace_likelihood.torch": {
     "line number": [
      27,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_laplace_likelihood.TestLaplaceLikelihood._test_log_prob": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "gpytorch.likelihoods._OneDimensionalLikelihood.expected_log_prob": {
     "line number": [
      40
     ]
    },
    "input": {
     "line number": [
      34,
      36,
      40
     ]
    },
    "test.likelihoods.test_laplace_likelihood.torch": {
     "line number": [
      38,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_laplace_likelihood.TestLaplaceLikelihood._test_marginal": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "test.likelihoods.test_laplace_likelihood.TestLaplaceLikelihood.create_likelihood": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "gpytorch.likelihoods.LaplaceLikelihood": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_laplace_likelihood._OneDimensionalLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods._OneDimensionalLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_laplace_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.likelihoods.test_laplace_likelihood.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood": {
  "data": {},
  "type": "module"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.BaseLikelihoodTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase"
  },
  "type": "import"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.KroneckerProductLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.KroneckerProductLazyTensor"
  },
  "type": "import"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.MultitaskGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.MultitaskGaussianLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.RootLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.RootLazyTensor"
  },
  "type": "import"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihood": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase": {
     "line number": [
      13
     ]
    },
    "test.likelihoods.test_multitask_gaussian_likelihood.unittest": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihood._create_conditional_input": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "test.likelihoods.test_multitask_gaussian_likelihood.torch": {
     "line number": [
      16,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihood._create_marginal_input": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal": {
     "line number": [
      23
     ]
    },
    "gpytorch.lazy.KroneckerProductLazyTensor": {
     "line number": [
      22
     ]
    },
    "gpytorch.lazy.RootLazyTensor": {
     "line number": [
      22,
      22
     ]
    },
    "test.likelihoods.test_multitask_gaussian_likelihood.torch": {
     "line number": [
      19,
      20,
      21,
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihood._create_targets": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "test.likelihoods.test_multitask_gaussian_likelihood.torch": {
     "line number": [
      25,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihood.create_likelihood": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "gpytorch.likelihoods.MultitaskGaussianLikelihood": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihoodBatch": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihood": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihoodBatch.create_likelihood": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "gpytorch.likelihoods.MultitaskGaussianLikelihood": {
     "line number": [
      36
     ]
    },
    "test.likelihoods.test_multitask_gaussian_likelihood.torch": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.TestMultitaskGaussianLikelihoodBatch.test_nonbatch": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.likelihoods.test_multitask_gaussian_likelihood.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.likelihoods.test_softmax_likelihood": {
  "data": {},
  "type": "module"
 },
 "test.likelihoods.test_softmax_likelihood.BaseLikelihoodTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase"
  },
  "type": "import"
 },
 "test.likelihoods.test_softmax_likelihood.Distribution": {
  "data": {
   "shadows": "torch.distributions.Distribution"
  },
  "type": "import"
 },
 "test.likelihoods.test_softmax_likelihood.MultitaskMultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultitaskMultivariateNormal"
  },
  "type": "import"
 },
 "test.likelihoods.test_softmax_likelihood.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.likelihoods.test_softmax_likelihood.SoftmaxLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.SoftmaxLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase": {
     "line number": [
      13
     ]
    },
    "test.likelihoods.test_softmax_likelihood.unittest": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood._create_conditional_input": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "test.likelihoods.test_softmax_likelihood.torch": {
     "line number": [
      16,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood._create_marginal_input": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "gpytorch.distributions.MultitaskMultivariateNormal.from_batch_mvn": {
     "line number": [
      21
     ]
    },
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      22
     ]
    },
    "test.likelihoods.test_softmax_likelihood.torch": {
     "line number": [
      19,
      20,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood._create_targets": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "test.likelihoods.test_softmax_likelihood.torch": {
     "line number": [
      25,
      26,
      26,
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood._test_conditional": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "input": {
     "line number": [
      35,
      36
     ]
    },
    "likelihood": {
     "line number": [
      36
     ]
    },
    "test.likelihoods.test_softmax_likelihood.torch": {
     "line number": [
      39
     ]
    },
    "torch.distributions.Distribution": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood._test_log_prob": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "input": {
     "line number": [
      43,
      45
     ]
    },
    "likelihood": {
     "line number": [
      42
     ]
    },
    "likelihood.expected_log_prob": {
     "line number": [
      45
     ]
    },
    "test.likelihoods.test_softmax_likelihood.torch": {
     "line number": [
      47,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood._test_marginal": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "input": {
     "line number": [
      52,
      53
     ]
    },
    "isinstance": {
     "line number": [
      55
     ]
    },
    "len": {
     "line number": [
      56
     ]
    },
    "likelihood": {
     "line number": [
      51,
      53
     ]
    },
    "test.likelihoods.test_softmax_likelihood.torch": {
     "line number": [
      56
     ]
    },
    "torch.distributions.Distribution": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood.create_likelihood": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "gpytorch.likelihoods.SoftmaxLikelihood": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihoodNoMixing": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihood": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_softmax_likelihood.TestSoftmaxLikelihoodNoMixing.create_likelihood": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "gpytorch.likelihoods.SoftmaxLikelihood": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_softmax_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.likelihoods.test_softmax_likelihood.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.likelihoods.test_student_t_likelihood": {
  "data": {},
  "type": "module"
 },
 "test.likelihoods.test_student_t_likelihood.BaseLikelihoodTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase"
  },
  "type": "import"
 },
 "test.likelihoods.test_student_t_likelihood.StudentTLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.StudentTLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_student_t_likelihood.TestStudentTLikelihood": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_likelihood_test_case.BaseLikelihoodTestCase": {
     "line number": [
      11
     ]
    },
    "test.likelihoods.test_student_t_likelihood.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.likelihoods.test_student_t_likelihood.TestStudentTLikelihood._create_targets": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "test.likelihoods.test_student_t_likelihood.torch": {
     "line number": [
      14,
      15,
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_student_t_likelihood.TestStudentTLikelihood._test_log_marginal": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.likelihoods._OneDimensionalLikelihood.log_marginal": {
     "line number": [
      29
     ]
    },
    "input": {
     "line number": [
      23,
      25,
      29
     ]
    },
    "test.likelihoods.test_student_t_likelihood.torch": {
     "line number": [
      27,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_student_t_likelihood.TestStudentTLikelihood._test_log_prob": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "gpytorch.likelihoods._OneDimensionalLikelihood.expected_log_prob": {
     "line number": [
      40
     ]
    },
    "input": {
     "line number": [
      34,
      36,
      40
     ]
    },
    "test.likelihoods.test_student_t_likelihood.torch": {
     "line number": [
      38,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_student_t_likelihood.TestStudentTLikelihood._test_marginal": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "test.likelihoods.test_student_t_likelihood.TestStudentTLikelihood.create_likelihood": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "gpytorch.likelihoods.StudentTLikelihood": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "test.likelihoods.test_student_t_likelihood._OneDimensionalLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods._OneDimensionalLikelihood"
  },
  "type": "import"
 },
 "test.likelihoods.test_student_t_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.likelihoods.test_student_t_likelihood.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.means": {
  "data": {},
  "type": "module"
 },
 "test.means.test_constant_mean": {
  "data": {},
  "type": "module"
 },
 "test.means.test_constant_mean.BaseMeanTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_mean_test_case.BaseMeanTestCase"
  },
  "type": "import"
 },
 "test.means.test_constant_mean.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.means.test_constant_mean.TestConstantMean": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_mean_test_case.BaseMeanTestCase": {
     "line number": [
      11
     ]
    },
    "test.means.test_constant_mean.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.means.test_constant_mean.TestConstantMean.create_mean": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.means.ConstantMean": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_constant_mean.TestConstantMeanBatch": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "gpytorch.test.base_mean_test_case.BaseMeanTestCase": {
     "line number": [
      16
     ]
    },
    "test.means.test_constant_mean.torch": {
     "line number": [
      17
     ]
    },
    "test.means.test_constant_mean.unittest": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "test.means.test_constant_mean.TestConstantMeanBatch.create_mean": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "gpytorch.means.ConstantMean": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_constant_mean.TestConstantMeanMultiBatch": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "gpytorch.test.base_mean_test_case.BaseMeanTestCase": {
     "line number": [
      23
     ]
    },
    "test.means.test_constant_mean.torch": {
     "line number": [
      24
     ]
    },
    "test.means.test_constant_mean.unittest": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "test.means.test_constant_mean.TestConstantMeanMultiBatch.create_mean": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "gpytorch.means.ConstantMean": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_constant_mean.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.means.test_constant_mean.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.means.test_constant_mean_grad": {
  "data": {},
  "type": "module"
 },
 "test.means.test_constant_mean_grad.BaseMeanTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_mean_test_case.BaseMeanTestCase"
  },
  "type": "import"
 },
 "test.means.test_constant_mean_grad.ConstantMeanGrad": {
  "data": {
   "shadows": "gpytorch.means.ConstantMeanGrad"
  },
  "type": "import"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGrad": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_mean_test_case.BaseMeanTestCase": {
     "line number": [
      11
     ]
    },
    "test.means.test_constant_mean_grad.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGrad.create_mean": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "gpytorch.means.ConstantMeanGrad": {
     "line number": [
      15
     ]
    },
    "test.means.test_constant_mean_grad.torch": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGrad.test_forward_mat": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "mean": {
     "line number": [
      28,
      30,
      32,
      33
     ]
    },
    "test.means.test_constant_mean_grad.torch": {
     "line number": [
      27,
      30,
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGrad.test_forward_mat_batch": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "mean": {
     "line number": [
      37,
      39,
      41,
      42
     ]
    },
    "test.means.test_constant_mean_grad.torch": {
     "line number": [
      36,
      39,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGrad.test_forward_mat_multi_batch": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "mean": {
     "line number": [
      46,
      47,
      48
     ]
    },
    "test.means.test_constant_mean_grad.torch": {
     "line number": [
      45,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGrad.test_forward_vec": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "mean": {
     "line number": [
      21,
      23,
      24
     ]
    },
    "test.means.test_constant_mean_grad.torch": {
     "line number": [
      18,
      21,
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGradBatch": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "test.means.test_constant_mean_grad.TestConstantMeanGrad": {
     "line number": [
      51
     ]
    },
    "test.means.test_constant_mean_grad.torch": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "test.means.test_constant_mean_grad.TestConstantMeanGradMultiBatch": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "test.means.test_constant_mean_grad.TestConstantMeanGrad": {
     "line number": [
      55
     ]
    },
    "test.means.test_constant_mean_grad.torch": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "class"
 },
 "test.means.test_constant_mean_grad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.means.test_constant_mean_grad.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.means.test_linear_mean": {
  "data": {},
  "type": "module"
 },
 "test.means.test_linear_mean.BaseMeanTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_mean_test_case.BaseMeanTestCase"
  },
  "type": "import"
 },
 "test.means.test_linear_mean.LinearMean": {
  "data": {
   "shadows": "gpytorch.means.LinearMean"
  },
  "type": "import"
 },
 "test.means.test_linear_mean.TestLinearMean": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_mean_test_case.BaseMeanTestCase": {
     "line number": [
      11
     ]
    },
    "test.means.test_linear_mean.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.means.test_linear_mean.TestLinearMean.create_mean": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.means.LinearMean": {
     "line number": [
      13
     ]
    },
    "test.means.test_linear_mean.torch": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_linear_mean.TestLinearMean.forward_vec": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "mean": {
     "line number": [
      19
     ]
    },
    "test.means.test_linear_mean.torch": {
     "line number": [
      17,
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_linear_mean.TestLinearMean.test_forward_mat": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "mean": {
     "line number": [
      24,
      25
     ]
    },
    "test.means.test_linear_mean.torch": {
     "line number": [
      23,
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_linear_mean.TestLinearMean.test_forward_mat_batch": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "mean": {
     "line number": [
      30,
      31
     ]
    },
    "test.means.test_linear_mean.torch": {
     "line number": [
      28,
      29,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_linear_mean.TestLinearMean.test_forward_mat_multi_batch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "mean": {
     "line number": [
      36,
      37
     ]
    },
    "test.means.test_linear_mean.torch": {
     "line number": [
      34,
      35,
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_linear_mean.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.means.test_linear_mean.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.means.test_multitask_mean": {
  "data": {},
  "type": "module"
 },
 "test.means.test_multitask_mean.BaseMeanTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_mean_test_case.BaseMeanTestCase"
  },
  "type": "import"
 },
 "test.means.test_multitask_mean.ConstantMean": {
  "data": {
   "shadows": "gpytorch.means.ConstantMean"
  },
  "type": "import"
 },
 "test.means.test_multitask_mean.MultitaskMean": {
  "data": {
   "shadows": "gpytorch.means.MultitaskMean"
  },
  "type": "import"
 },
 "test.means.test_multitask_mean.TestMultitaskMean": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_mean_test_case.BaseMeanTestCase": {
     "line number": [
      11
     ]
    },
    "test.means.test_multitask_mean.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.means.test_multitask_mean.TestMultitaskMean.create_mean": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.means.ConstantMean": {
     "line number": [
      13
     ]
    },
    "gpytorch.means.MultitaskMean": {
     "line number": [
      13
     ]
    },
    "gpytorch.means.ZeroMean": {
     "line number": [
      13,
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMean.test_forward_mat": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "mean": {
     "line number": [
      23,
      24,
      25
     ]
    },
    "test.means.test_multitask_mean.torch": {
     "line number": [
      22,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMean.test_forward_mat_batch": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "mean": {
     "line number": [
      29,
      30,
      31
     ]
    },
    "test.means.test_multitask_mean.torch": {
     "line number": [
      28,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMean.test_forward_mat_multi_batch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "mean": {
     "line number": [
      35,
      36,
      37
     ]
    },
    "test.means.test_multitask_mean.torch": {
     "line number": [
      34,
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMean.test_forward_vec": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "mean": {
     "line number": [
      18,
      19
     ]
    },
    "test.means.test_multitask_mean.torch": {
     "line number": [
      16,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanBatch": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "test.means.test_multitask_mean.TestMultitaskMean": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanBatch.create_mean": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "gpytorch.means.ConstantMean": {
     "line number": [
      42
     ]
    },
    "gpytorch.means.MultitaskMean": {
     "line number": [
      42
     ]
    },
    "gpytorch.means.ZeroMean": {
     "line number": [
      42,
      42
     ]
    },
    "test.means.test_multitask_mean.torch": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanBatch.test_forward_mat": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanBatch.test_forward_vec": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanMultiBatch": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "test.means.test_multitask_mean.TestMultitaskMean": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanMultiBatch.create_mean": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "gpytorch.means.ConstantMean": {
     "line number": [
      53
     ]
    },
    "gpytorch.means.MultitaskMean": {
     "line number": [
      53
     ]
    },
    "gpytorch.means.ZeroMean": {
     "line number": [
      53,
      53
     ]
    },
    "test.means.test_multitask_mean.torch": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanMultiBatch.test_forward_mat": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanMultiBatch.test_forward_mat_batch": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.TestMultitaskMeanMultiBatch.test_forward_vec": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "test.means.test_multitask_mean.ZeroMean": {
  "data": {
   "shadows": "gpytorch.means.ZeroMean"
  },
  "type": "import"
 },
 "test.means.test_multitask_mean.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.means.test_multitask_mean.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.means.test_zero_mean": {
  "data": {},
  "type": "module"
 },
 "test.means.test_zero_mean.BaseMeanTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_mean_test_case.BaseMeanTestCase"
  },
  "type": "import"
 },
 "test.means.test_zero_mean.TestZeroMean": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "gpytorch.test.base_mean_test_case.BaseMeanTestCase": {
     "line number": [
      9
     ]
    },
    "test.means.test_zero_mean.unittest": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "test.means.test_zero_mean.TestZeroMean.create_mean": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "gpytorch.means.ZeroMean": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "function"
 },
 "test.means.test_zero_mean.ZeroMean": {
  "data": {
   "shadows": "gpytorch.means.ZeroMean"
  },
  "type": "import"
 },
 "test.means.test_zero_mean.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.mlls": {
  "data": {},
  "type": "module"
 },
 "test.mlls.test_leave_one_out_pseudo_likelihood": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      75
     ]
    },
    "test.mlls.test_leave_one_out_pseudo_likelihood.unittest": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "module"
 },
 "test.mlls.test_leave_one_out_pseudo_likelihood.ExactGPModel": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.mlls.test_leave_one_out_pseudo_likelihood.gpytorch": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.mlls.test_leave_one_out_pseudo_likelihood.ExactGPModel.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "super": {
     "line number": [
      13
     ]
    },
    "test.mlls.test_leave_one_out_pseudo_likelihood.gpytorch": {
     "line number": [
      14,
      15,
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "test.mlls.test_leave_one_out_pseudo_likelihood.ExactGPModel.forward": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "test.mlls.test_leave_one_out_pseudo_likelihood.gpytorch": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "test.mlls.test_leave_one_out_pseudo_likelihood.TestLeaveOneOutPseudoLikelihood": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "test.mlls.test_leave_one_out_pseudo_likelihood.unittest": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "test.mlls.test_leave_one_out_pseudo_likelihood.TestLeaveOneOutPseudoLikelihood.get_data": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "test.mlls.test_leave_one_out_pseudo_likelihood.ExactGPModel": {
     "line number": [
      28
     ]
    },
    "test.mlls.test_leave_one_out_pseudo_likelihood.gpytorch": {
     "line number": [
      27,
      29
     ]
    },
    "test.mlls.test_leave_one_out_pseudo_likelihood.torch": {
     "line number": [
      25,
      26,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "test.mlls.test_leave_one_out_pseudo_likelihood.TestLeaveOneOutPseudoLikelihood.test_check_bordered_system": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "likelihood": {
     "line number": [
      65
     ]
    },
    "loocv": {
     "line number": [
      53,
      55
     ]
    },
    "loocv.model": {
     "line number": [
      54
     ]
    },
    "model": {
     "line number": [
      65
     ]
    },
    "range": {
     "line number": [
      59
     ]
    },
    "test.mlls.test_leave_one_out_pseudo_likelihood.ExactGPModel": {
     "line number": [
      62
     ]
    },
    "test.mlls.test_leave_one_out_pseudo_likelihood.gpytorch": {
     "line number": [
      61
     ]
    },
    "test.mlls.test_leave_one_out_pseudo_likelihood.math": {
     "line number": [
      67,
      67
     ]
    },
    "test.mlls.test_leave_one_out_pseudo_likelihood.torch": {
     "line number": [
      53,
      60,
      60,
      60,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "test.mlls.test_leave_one_out_pseudo_likelihood.TestLeaveOneOutPseudoLikelihood.test_smoke": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "loocv": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "test.mlls.test_leave_one_out_pseudo_likelihood.TestLeaveOneOutPseudoLikelihood.test_smoke_batch": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "loocv": {
     "line number": [
      42,
      44
     ]
    },
    "loocv.model": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "test.mlls.test_leave_one_out_pseudo_likelihood.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.mlls.test_leave_one_out_pseudo_likelihood.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.mlls.test_leave_one_out_pseudo_likelihood.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.mlls.test_leave_one_out_pseudo_likelihood.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.models": {
  "data": {},
  "type": "module"
 },
 "test.models.test_exact_gp": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      171
     ]
    },
    "test.models.test_exact_gp.unittest": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "module"
 },
 "test.models.test_exact_gp.BaseModelTestCase": {
  "data": {
   "shadows": "gpytorch.test.model_test_case.BaseModelTestCase"
  },
  "type": "import"
 },
 "test.models.test_exact_gp.ExactGP": {
  "data": {
   "shadows": "gpytorch.models.ExactGP"
  },
  "type": "import"
 },
 "test.models.test_exact_gp.ExactGPModel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.models.ExactGP": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.models.test_exact_gp.ExactGPModel.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "super": {
     "line number": [
      14
     ]
    },
    "test.models.test_exact_gp.gpytorch": {
     "line number": [
      15,
      16,
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.ExactGPModel.forward": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "test.models.test_exact_gp.gpytorch": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.InterpolatedExactGPModel": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "gpytorch.models.ExactGP": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "test.models.test_exact_gp.InterpolatedExactGPModel.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "super": {
     "line number": [
      26
     ]
    },
    "test.models.test_exact_gp.gpytorch": {
     "line number": [
      27,
      28,
      29,
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.InterpolatedExactGPModel.forward": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "test.models.test_exact_gp.gpytorch": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.SumExactGPModel": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "gpytorch.models.ExactGP": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "test.models.test_exact_gp.SumExactGPModel.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "super": {
     "line number": [
      40
     ]
    },
    "test.models.test_exact_gp.gpytorch": {
     "line number": [
      41,
      42,
      42,
      43,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.SumExactGPModel.forward": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "test.models.test_exact_gp.gpytorch": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "gpytorch.test.model_test_case.BaseModelTestCase": {
     "line number": [
      52
     ]
    },
    "test.models.test_exact_gp.unittest": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "test.models.test_exact_gp.TestExactGP.create_batch_likelihood_and_labels": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "test.models.test_exact_gp.gpytorch": {
     "line number": [
      69
     ]
    },
    "test.models.test_exact_gp.torch": {
     "line number": [
      68,
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.create_batch_test_data": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "test.models.test_exact_gp.torch": {
     "line number": [
      65,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.create_likelihood_and_labels": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "test.models.test_exact_gp.gpytorch": {
     "line number": [
      61
     ]
    },
    "test.models.test_exact_gp.torch": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.create_model": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "test.models.test_exact_gp.ExactGPModel": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.create_test_data": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "test.models.test_exact_gp.torch": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.test_batch_forward_eval_fast": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "test.models.test_exact_gp.gpytorch": {
     "line number": [
      78,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.test_batch_forward_then_different_batch_forward_eval": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "model": {
     "line number": [
      112,
      117,
      124,
      131,
      138
     ]
    },
    "model.eval": {
     "line number": [
      113
     ]
    },
    "test.models.test_exact_gp.torch": {
     "line number": [
      123,
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.test_batch_forward_then_nonbatch_forward_eval": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "model": {
     "line number": [
      90,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.test_forward_eval_fast": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "test.models.test_exact_gp.gpytorch": {
     "line number": [
      74,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.test_multi_batch_forward_eval_fast": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "test.models.test_exact_gp.gpytorch": {
     "line number": [
      82,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestExactGP.test_prior_mode": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "model": {
     "line number": [
      147,
      154
     ]
    },
    "model.eval": {
     "line number": [
      149
     ]
    },
    "prior_model": {
     "line number": [
      152
     ]
    },
    "test.models.test_exact_gp.gpytorch": {
     "line number": [
      153
     ]
    },
    "test.models.test_exact_gp.torch": {
     "line number": [
      155,
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestInterpolatedExactGP": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "test.models.test_exact_gp.TestExactGP": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "class"
 },
 "test.models.test_exact_gp.TestInterpolatedExactGP.create_model": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "model": {
     "line number": [
      161,
      162
     ]
    },
    "test.models.test_exact_gp.InterpolatedExactGPModel": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.TestSumExactGP": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "test.models.test_exact_gp.TestExactGP": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "class"
 },
 "test.models.test_exact_gp.TestSumExactGP.create_model": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "model": {
     "line number": [
      167,
      168
     ]
    },
    "test.models.test_exact_gp.SumExactGPModel": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_exact_gp.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.models.test_exact_gp.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_exact_gp.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.models.test_model_list": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      56
     ]
    },
    "test.models.test_model_list.unittest": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "module"
 },
 "test.models.test_model_list.FixedNoiseGaussianLikelihood": {
  "data": {
   "shadows": "gpytorch.likelihoods.FixedNoiseGaussianLikelihood"
  },
  "type": "import"
 },
 "test.models.test_model_list.IndependentModelList": {
  "data": {
   "shadows": "gpytorch.models.IndependentModelList"
  },
  "type": "import"
 },
 "test.models.test_model_list.TestModelListGP": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "test.models.test_model_list.unittest": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "test.models.test_model_list.TestModelListGP.create_model": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "gpytorch.likelihoods.FixedNoiseGaussianLikelihood": {
     "line number": [
      19
     ]
    },
    "test.models.test_model_list.torch": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_model_list.TestModelListGP.test_forward_eval": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "gpytorch.models.IndependentModelList": {
     "line number": [
      24
     ]
    },
    "model": {
     "line number": [
      26
     ]
    },
    "range": {
     "line number": [
      23
     ]
    },
    "test.models.test_model_list.torch": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_model_list.TestModelListGP.test_forward_eval_fixed_noise": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "gpytorch.models.IndependentModelList": {
     "line number": [
      30
     ]
    },
    "model": {
     "line number": [
      30,
      32
     ]
    },
    "model.eval": {
     "line number": [
      31
     ]
    },
    "range": {
     "line number": [
      29
     ]
    },
    "test.models.test_model_list.torch": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_model_list.TestModelListGP.test_get_fantasy_model": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "fmodel": {
     "line number": [
      42
     ]
    },
    "gpytorch.models.IndependentModelList": {
     "line number": [
      36
     ]
    },
    "model": {
     "line number": [
      36,
      38
     ]
    },
    "model.eval": {
     "line number": [
      37
     ]
    },
    "model.get_fantasy_model": {
     "line number": [
      41
     ]
    },
    "range": {
     "line number": [
      35
     ]
    },
    "test.models.test_model_list.torch": {
     "line number": [
      38,
      38,
      39,
      39,
      40,
      40,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_model_list.TestModelListGP.test_get_fantasy_model_fixed_noise": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "fmodel": {
     "line number": [
      52,
      53
     ]
    },
    "gpytorch.models.IndependentModelList": {
     "line number": [
      46
     ]
    },
    "model": {
     "line number": [
      46,
      48
     ]
    },
    "model.eval": {
     "line number": [
      47
     ]
    },
    "model.get_fantasy_model": {
     "line number": [
      52
     ]
    },
    "range": {
     "line number": [
      45
     ]
    },
    "test.models.test_model_list.torch": {
     "line number": [
      48,
      48,
      49,
      49,
      50,
      50,
      51,
      51,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_model_list.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_model_list.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.models.test_variational_gp": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      72
     ]
    },
    "test.models.test_variational_gp.unittest": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "module"
 },
 "test.models.test_variational_gp.ApproximateGP": {
  "data": {
   "shadows": "gpytorch.models.ApproximateGP"
  },
  "type": "import"
 },
 "test.models.test_variational_gp.CholeskyVariationalDistribution": {
  "data": {
   "shadows": "gpytorch.variational.CholeskyVariationalDistribution"
  },
  "type": "import"
 },
 "test.models.test_variational_gp.GPClassificationModel": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.models.ApproximateGP": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "test.models.test_variational_gp.GPClassificationModel.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "gpytorch.variational.CholeskyVariationalDistribution": {
     "line number": [
      15
     ]
    },
    "gpytorch.variational.VariationalStrategy": {
     "line number": [
      17
     ]
    },
    "strategy_cls": {
     "line number": [
      18
     ]
    },
    "super": {
     "line number": [
      21
     ]
    },
    "test.models.test_variational_gp.GPClassificationModel": {
     "line number": [
      21
     ]
    },
    "test.models.test_variational_gp.gpytorch": {
     "line number": [
      22,
      23,
      23
     ]
    },
    "test.models.test_variational_gp.torch": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_variational_gp.GPClassificationModel.forward": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "test.models.test_variational_gp.gpytorch": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestSVGPVariationalGP": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "test.models.test_variational_gp.TestVariationalGP": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "class"
 },
 "test.models.test_variational_gp.TestSVGPVariationalGP.create_model": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "test.models.test_variational_gp.GPClassificationModel": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestSVGPVariationalGP.test_backward_train_nochol": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "test.models.test_variational_gp.gpytorch": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestSVGPVariationalGP.test_batch_backward_train_nochol": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "test.models.test_variational_gp.gpytorch": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestSVGPVariationalGP.test_multi_batch_backward_train_nochol": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "test.models.test_variational_gp.gpytorch": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestVariationalGP": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "gpytorch.test.model_test_case.VariationalModelTestCase": {
     "line number": [
      32
     ]
    },
    "test.models.test_variational_gp.unittest": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "test.models.test_variational_gp.TestVariationalGP.create_batch_likelihood_and_labels": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "test.models.test_variational_gp.gpytorch": {
     "line number": [
      49
     ]
    },
    "test.models.test_variational_gp.torch": {
     "line number": [
      48,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestVariationalGP.create_batch_test_data": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "test.models.test_variational_gp.torch": {
     "line number": [
      45,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestVariationalGP.create_likelihood_and_labels": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "test.models.test_variational_gp.gpytorch": {
     "line number": [
      41
     ]
    },
    "test.models.test_variational_gp.torch": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestVariationalGP.create_model": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "test.models.test_variational_gp.GPClassificationModel": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_variational_gp.TestVariationalGP.create_test_data": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "test.models.test_variational_gp.torch": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.models.test_variational_gp.VariationalModelTestCase": {
  "data": {
   "shadows": "gpytorch.test.model_test_case.VariationalModelTestCase"
  },
  "type": "import"
 },
 "test.models.test_variational_gp.VariationalStrategy": {
  "data": {
   "shadows": "gpytorch.variational.VariationalStrategy"
  },
  "type": "import"
 },
 "test.models.test_variational_gp.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.models.test_variational_gp.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.models.test_variational_gp.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.optim": {
  "data": {},
  "type": "module"
 },
 "test.optim.test_ngd": {
  "data": {},
  "type": "module"
 },
 "test.optim.test_ngd.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.optim.test_ngd.NGD": {
  "data": {
   "shadows": "gpytorch.optim.NGD"
  },
  "type": "import"
 },
 "test.optim.test_ngd.TestNGD": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      11
     ]
    },
    "test.optim.test_ngd.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.optim.test_ngd.TestNGD.test_ngd_step_groups": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "gpytorch.optim.NGD": {
     "line number": [
      35
     ]
    },
    "test.optim.test_ngd.torch": {
     "line number": [
      31,
      31,
      32,
      32,
      37,
      37,
      41,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.optim.test_ngd.TestNGD.test_ngd_step_no_groups": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.optim.NGD": {
     "line number": [
      20
     ]
    },
    "test.optim.test_ngd.torch": {
     "line number": [
      14,
      14,
      15,
      15,
      22,
      22,
      26,
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "test.optim.test_ngd.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.optim.test_ngd.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.priors": {
  "data": {},
  "type": "module"
 },
 "test.priors.test_gamma_prior": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      96
     ]
    },
    "test.priors.test_gamma_prior.unittest": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "module"
 },
 "test.priors.test_gamma_prior.Gamma": {
  "data": {
   "shadows": "torch.distributions.Gamma"
  },
  "type": "import"
 },
 "test.priors.test_gamma_prior.GammaPrior": {
  "data": {
   "shadows": "gpytorch.priors.GammaPrior"
  },
  "type": "import"
 },
 "test.priors.test_gamma_prior.TestGammaPrior": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "test.priors.test_gamma_prior.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_batch_log_prob": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      74,
      85,
      87
     ]
    },
    "gpytorch.priors.GammaPrior": {
     "line number": [
      68,
      79
     ]
    },
    "test.priors.test_gamma_prior.torch": {
     "line number": [
      64,
      64,
      66,
      67,
      70,
      71,
      72,
      73,
      75,
      77,
      78,
      81,
      82,
      83,
      84,
      86,
      88
     ]
    },
    "torch.distributions.Gamma": {
     "line number": [
      69,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      92
     ]
    },
    "test.priors.test_gamma_prior.torch": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_log_prob": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "gpytorch.priors.GammaPrior": {
     "line number": [
      29
     ]
    },
    "test.priors.test_gamma_prior.torch": {
     "line number": [
      26,
      26,
      27,
      28,
      32,
      33,
      34,
      35,
      36,
      37
     ]
    },
    "torch.distributions.Gamma": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_log_prob_cuda": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      41
     ]
    },
    "test.priors.test_gamma_prior.torch": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_log_prob_log_transform": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "gpytorch.priors.GammaPrior": {
     "line number": [
      48
     ]
    },
    "test.priors.test_gamma_prior.torch": {
     "line number": [
      45,
      45,
      46,
      47,
      48,
      51,
      52,
      53,
      54,
      55,
      56
     ]
    },
    "torch.distributions.Gamma": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_log_prob_log_transform_cuda": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      60
     ]
    },
    "test.priors.test_gamma_prior.torch": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_to_gpu": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.priors.GammaPrior": {
     "line number": [
      15
     ]
    },
    "test.priors.test_gamma_prior.torch": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.TestGammaPrior.test_gamma_prior_validate_args": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      20,
      22
     ]
    },
    "gpytorch.priors.GammaPrior": {
     "line number": [
      21,
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_gamma_prior.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.priors.test_gamma_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.priors.test_gamma_prior.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.priors.test_horseshoe_prior": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      71
     ]
    },
    "test.priors.test_horseshoe_prior.unittest": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "module"
 },
 "test.priors.test_horseshoe_prior.HorseshoePrior": {
  "data": {
   "shadows": "gpytorch.priors.HorseshoePrior"
  },
  "type": "import"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "test.priors.test_horseshoe_prior.unittest": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_batch_log_prob": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      52,
      61,
      63
     ]
    },
    "gpytorch.priors.HorseshoePrior": {
     "line number": [
      47,
      56
     ]
    },
    "test.priors.test_horseshoe_prior.torch": {
     "line number": [
      44,
      44,
      46,
      48,
      50,
      53,
      55,
      57,
      59,
      62,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "test.priors.test_horseshoe_prior.torch": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_log_prob": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "gpytorch.priors.HorseshoePrior": {
     "line number": [
      23
     ]
    },
    "test.priors.test_horseshoe_prior.torch": {
     "line number": [
      21,
      21,
      22,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_log_prob_cuda": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "test.priors.test_horseshoe_prior.torch": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_log_prob_log_transform": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "gpytorch.priors.HorseshoePrior": {
     "line number": [
      34,
      35
     ]
    },
    "test.priors.test_horseshoe_prior.torch": {
     "line number": [
      32,
      32,
      33,
      35,
      36,
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_log_prob_log_transform_cuda": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "test.priors.test_horseshoe_prior.torch": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_to_gpu": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.priors.HorseshoePrior": {
     "line number": [
      13
     ]
    },
    "test.priors.test_horseshoe_prior.torch": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.TestHorseshoePrior.test_horseshoe_prior_validate_args": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      17
     ]
    },
    "gpytorch.priors.HorseshoePrior": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_horseshoe_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.priors.test_horseshoe_prior.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      201
     ]
    },
    "test.priors.test_lkj_prior.unittest": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "module"
 },
 "test.priors.test_lkj_prior.LKJCholeskyFactorPrior": {
  "data": {
   "shadows": "gpytorch.priors.LKJCholeskyFactorPrior"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.LKJCovariancePrior": {
  "data": {
   "shadows": "gpytorch.priors.LKJCovariancePrior"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.LKJPrior": {
  "data": {
   "shadows": "gpytorch.priors.LKJPrior"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.TestLKJCholeskyFactorPrior": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "test.priors.test_lkj_prior.unittest": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "class"
 },
 "test.priors.test_lkj_prior.TestLKJCholeskyFactorPrior.test_lkj_cholesky_factor_prior_batch_log_prob": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      108
     ]
    },
    "gpytorch.priors.LKJCholeskyFactorPrior": {
     "line number": [
      100
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      104,
      107
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      99,
      99,
      100,
      102,
      103,
      104,
      105,
      105,
      106,
      106,
      107,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCholeskyFactorPrior.test_lkj_cholesky_factor_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      113
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCholeskyFactorPrior.test_lkj_cholesky_factor_prior_log_prob": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      86
     ]
    },
    "gpytorch.priors.LKJCholeskyFactorPrior": {
     "line number": [
      79,
      90
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      85
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      78,
      78,
      79,
      80,
      81,
      83,
      83,
      84,
      84,
      85,
      87,
      90,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCholeskyFactorPrior.test_lkj_cholesky_factor_prior_log_prob_cuda": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      95
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCholeskyFactorPrior.test_lkj_cholesky_factor_prior_to_gpu": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "gpytorch.priors.LKJCholeskyFactorPrior": {
     "line number": [
      66
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCholeskyFactorPrior.test_lkj_cholesky_factor_prior_validate_args": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      72,
      74
     ]
    },
    "gpytorch.priors.LKJCholeskyFactorPrior": {
     "line number": [
      71,
      73,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "test.priors.test_lkj_prior.unittest": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "class"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_batch_log_prob": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      192
     ]
    },
    "gpytorch.priors.LKJCovariancePrior": {
     "line number": [
      186
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      185
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      189,
      191
     ]
    },
    "math.exp": {
     "line number": [
      185,
      185
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      183,
      183,
      184,
      186,
      188,
      189,
      190,
      190,
      191,
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      197
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_log_prob": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      144
     ]
    },
    "gpytorch.priors.LKJCovariancePrior": {
     "line number": [
      139,
      148
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      136
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      143,
      151
     ]
    },
    "math.exp": {
     "line number": [
      136,
      136
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      135,
      135,
      139,
      140,
      142,
      142,
      143,
      145,
      148,
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_log_prob_cuda": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      155
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_log_prob_hetsd": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      168
     ]
    },
    "gpytorch.priors.LKJCovariancePrior": {
     "line number": [
      163,
      172
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      162
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      167,
      175
     ]
    },
    "math.exp": {
     "line number": [
      160,
      160,
      161,
      161
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      159,
      159,
      160,
      161,
      163,
      164,
      166,
      166,
      167,
      169,
      172,
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_log_prob_hetsd_cuda": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      179
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_to_gpu": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "gpytorch.priors.LKJCovariancePrior": {
     "line number": [
      121
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      120
     ]
    },
    "math.exp": {
     "line number": [
      120,
      120
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJCovariancePrior.test_lkj_covariance_prior_validate_args": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      129,
      131
     ]
    },
    "gpytorch.priors.LKJCovariancePrior": {
     "line number": [
      128,
      130,
      132
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      127
     ]
    },
    "math.exp": {
     "line number": [
      127,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJPrior": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "test.priors.test_lkj_prior.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.priors.test_lkj_prior.TestLKJPrior.test_lkj_prior_batch_log_prob": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      54
     ]
    },
    "gpytorch.priors.LKJPrior": {
     "line number": [
      48
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      51,
      53
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      47,
      47,
      48,
      50,
      51,
      52,
      52,
      53,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJPrior.test_lkj_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      59
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJPrior.test_lkj_prior_log_prob": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      34
     ]
    },
    "gpytorch.priors.LKJPrior": {
     "line number": [
      28,
      38
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      33
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      27,
      27,
      28,
      30,
      32,
      32,
      33,
      35,
      38,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJPrior.test_lkj_prior_log_prob_cuda": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      43
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJPrior.test_lkj_prior_to_gpu": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.priors.LKJPrior": {
     "line number": [
      15
     ]
    },
    "test.priors.test_lkj_prior.torch": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.TestLKJPrior.test_lkj_prior_validate_args": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      21,
      23
     ]
    },
    "gpytorch.priors.LKJPrior": {
     "line number": [
      20,
      22,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_lkj_prior.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.exp": {
  "data": {
   "shadows": "math.exp"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.priors.test_lkj_prior.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.priors.test_multivariate_normal_prior": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      104
     ]
    },
    "test.priors.test_multivariate_normal_prior.unittest": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "module"
 },
 "test.priors.test_multivariate_normal_prior.MultivariateNormal": {
  "data": {
   "shadows": "torch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.priors.test_multivariate_normal_prior.MultivariateNormalPrior": {
  "data": {
   "shadows": "gpytorch.priors.MultivariateNormalPrior"
  },
  "type": "import"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "test.priors.test_multivariate_normal_prior.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_batch_log_prob": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      77,
      93,
      95
     ]
    },
    "gpytorch.priors.MultivariateNormalPrior": {
     "line number": [
      70,
      82
     ]
    },
    "test.priors.test_multivariate_normal_prior.torch": {
     "line number": [
      66,
      66,
      68,
      69,
      73,
      74,
      75,
      76,
      78,
      80,
      81,
      85,
      86,
      87,
      88,
      89,
      90,
      91,
      92,
      94,
      96
     ]
    },
    "torch.distributions.MultivariateNormal": {
     "line number": [
      71,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      100
     ]
    },
    "test.priors.test_multivariate_normal_prior.torch": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_log_prob": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      38
     ]
    },
    "gpytorch.priors.MultivariateNormalPrior": {
     "line number": [
      31
     ]
    },
    "test.priors.test_multivariate_normal_prior.torch": {
     "line number": [
      28,
      28,
      29,
      30,
      34,
      35,
      36,
      37,
      39
     ]
    },
    "torch.distributions.MultivariateNormal": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_log_prob_cuda": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      43
     ]
    },
    "test.priors.test_multivariate_normal_prior.torch": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_log_prob_log_transform": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      57
     ]
    },
    "gpytorch.priors.MultivariateNormalPrior": {
     "line number": [
      50
     ]
    },
    "test.priors.test_multivariate_normal_prior.torch": {
     "line number": [
      47,
      47,
      48,
      49,
      50,
      53,
      54,
      55,
      56,
      58
     ]
    },
    "torch.distributions.MultivariateNormal": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_log_prob_log_transform_cuda": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      62
     ]
    },
    "test.priors.test_multivariate_normal_prior.torch": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_to_gpu": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.priors.MultivariateNormalPrior": {
     "line number": [
      15
     ]
    },
    "test.priors.test_multivariate_normal_prior.torch": {
     "line number": [
      14,
      15,
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.TestMultivariateNormalPrior.test_multivariate_normal_prior_validate_args": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      22
     ]
    },
    "gpytorch.priors.MultivariateNormalPrior": {
     "line number": [
      25
     ]
    },
    "test.priors.test_multivariate_normal_prior.torch": {
     "line number": [
      23,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_multivariate_normal_prior.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.priors.test_multivariate_normal_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.priors.test_multivariate_normal_prior.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.priors.test_normal_prior": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      94
     ]
    },
    "test.priors.test_normal_prior.unittest": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "module"
 },
 "test.priors.test_normal_prior.Normal": {
  "data": {
   "shadows": "torch.distributions.Normal"
  },
  "type": "import"
 },
 "test.priors.test_normal_prior.NormalPrior": {
  "data": {
   "shadows": "gpytorch.priors.NormalPrior"
  },
  "type": "import"
 },
 "test.priors.test_normal_prior.TestNormalPrior": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "test.priors.test_normal_prior.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_batch_log_prob": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      72,
      83,
      85
     ]
    },
    "gpytorch.priors.NormalPrior": {
     "line number": [
      66,
      77
     ]
    },
    "test.priors.test_normal_prior.torch": {
     "line number": [
      62,
      62,
      64,
      65,
      68,
      69,
      70,
      71,
      73,
      75,
      76,
      79,
      80,
      81,
      82,
      84,
      86
     ]
    },
    "torch.distributions.Normal": {
     "line number": [
      67,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      90
     ]
    },
    "test.priors.test_normal_prior.torch": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_log_prob": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "gpytorch.priors.NormalPrior": {
     "line number": [
      27
     ]
    },
    "test.priors.test_normal_prior.torch": {
     "line number": [
      24,
      24,
      25,
      26,
      30,
      31,
      32,
      33,
      34,
      35
     ]
    },
    "torch.distributions.Normal": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_log_prob_cuda": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      39
     ]
    },
    "test.priors.test_normal_prior.torch": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_log_prob_log_transform": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "gpytorch.priors.NormalPrior": {
     "line number": [
      46
     ]
    },
    "test.priors.test_normal_prior.torch": {
     "line number": [
      43,
      43,
      44,
      45,
      46,
      49,
      50,
      51,
      52,
      53,
      54
     ]
    },
    "torch.distributions.Normal": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_log_prob_log_transform_cuda": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      58
     ]
    },
    "test.priors.test_normal_prior.torch": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_to_gpu": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "gpytorch.priors.NormalPrior": {
     "line number": [
      15
     ]
    },
    "test.priors.test_normal_prior.torch": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.TestNormalPrior.test_normal_prior_validate_args": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      20
     ]
    },
    "gpytorch.priors.NormalPrior": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_normal_prior.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.priors.test_normal_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.priors.test_normal_prior.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.priors.test_smoothed_box_prior": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      81
     ]
    },
    "test.priors.test_smoothed_box_prior.unittest": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "module"
 },
 "test.priors.test_smoothed_box_prior.SmoothedBoxPrior": {
  "data": {
   "shadows": "gpytorch.priors.SmoothedBoxPrior"
  },
  "type": "import"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.priors.test_smoothed_box_prior.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_batch_log_prob": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_batch_log_prob_cuda": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      77
     ]
    },
    "test.priors.test_smoothed_box_prior.torch": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_log_prob": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      44
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      32
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      37,
      43
     ]
    },
    "test.priors.test_smoothed_box_prior.torch": {
     "line number": [
      29,
      29,
      30,
      30,
      34,
      35,
      36,
      36,
      37,
      37,
      39,
      41,
      42,
      43,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_log_prob_cuda": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      49
     ]
    },
    "test.priors.test_smoothed_box_prior.torch": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_log_prob_log_transform": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      63
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      56
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      62
     ]
    },
    "test.priors.test_smoothed_box_prior.torch": {
     "line number": [
      53,
      53,
      54,
      54,
      56,
      58,
      60,
      61,
      62,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_log_prob_log_transform_cuda": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      68
     ]
    },
    "test.priors.test_smoothed_box_prior.torch": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_to_gpu": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      14
     ]
    },
    "test.priors.test_smoothed_box_prior.torch": {
     "line number": [
      13,
      14,
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.TestSmoothedBoxPrior.test_smoothed_box_prior_validate_args": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      25
     ]
    },
    "gpytorch.priors.SmoothedBoxPrior": {
     "line number": [
      26
     ]
    },
    "test.priors.test_smoothed_box_prior.torch": {
     "line number": [
      26,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "test.priors.test_smoothed_box_prior.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.priors.test_smoothed_box_prior.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.priors.test_smoothed_box_prior.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.priors.test_smoothed_box_prior.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.test_module": {
  "data": {},
  "type": "module"
 },
 "test.test_module.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.test_module.Module": {
  "data": {
   "shadows": "gpytorch.module.Module"
  },
  "type": "import"
 },
 "test.test_module.TestModule": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      11
     ]
    },
    "test.test_module.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.test_module.TestModule.test_register_prior": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      15
     ]
    },
    "RuntimeError": {
     "line number": [
      18
     ]
    },
    "ValueError": {
     "line number": [
      21,
      24
     ]
    },
    "gpytorch.module.Module": {
     "line number": [
      13,
      14
     ]
    },
    "test.test_module.torch": {
     "line number": [
      17,
      17
     ]
    },
    "test.test_module.unittest": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "test.test_module.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.test_module.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.test_settings": {
  "data": {},
  "type": "module"
 },
 "test.test_settings.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.test_settings.TestSettings": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      9
     ]
    },
    "test.test_settings.unittest": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "test.test_settings.TestSettings.test_feature_flag": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "gpytorch.settings.fast_pred_var": {
     "line number": [
      13,
      16
     ]
    },
    "gpytorch.settings.fast_pred_var.is_default": {
     "line number": [
      11,
      14,
      17
     ]
    },
    "gpytorch.settings.fast_pred_var.on": {
     "line number": [
      12,
      15,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.test_settings.settings": {
  "data": {
   "shadows": "gpytorch.settings"
  },
  "type": "import"
 },
 "test.test_settings.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_cholesky": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      106
     ]
    },
    "test.utils.test_cholesky.unittest": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "module"
 },
 "test.utils.test_cholesky.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.utils.test_cholesky.NanError": {
  "data": {
   "shadows": "gpytorch.utils.errors.NanError"
  },
  "type": "import"
 },
 "test.utils.test_cholesky.NumericalWarning": {
  "data": {
   "shadows": "gpytorch.utils.warnings.NumericalWarning"
  },
  "type": "import"
 },
 "test.utils.test_cholesky.TestPSDSafeCholesky": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      15
     ]
    },
    "test.utils.test_cholesky.unittest": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "test.utils.test_cholesky.TestPSDSafeCholesky._gen_test_psd": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "test.utils.test_cholesky.torch": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_cholesky.TestPSDSafeCholesky.test_psd_safe_cholesky_nan": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.utils.cholesky.psd_safe_cholesky": {
     "line number": [
      24
     ]
    },
    "gpytorch.utils.errors.NanError": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_cholesky.TestPSDSafeCholesky.test_psd_safe_cholesky_pd": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "gpytorch.utils.cholesky.psd_safe_cholesky": {
     "line number": [
      40,
      44,
      50,
      54,
      58
     ]
    },
    "test.utils.test_cholesky.torch": {
     "line number": [
      28,
      28,
      29,
      29,
      33,
      36,
      39,
      41,
      43,
      45,
      47,
      48,
      49,
      51,
      53,
      55,
      57,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_cholesky.TestPSDSafeCholesky.test_psd_safe_cholesky_pd_cuda": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      63
     ]
    },
    "test.utils.test_cholesky.torch": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_cholesky.TestPSDSafeCholesky.test_psd_safe_cholesky_psd": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "any": {
     "line number": [
      84,
      85,
      96,
      97
     ]
    },
    "gpytorch.utils.cholesky.psd_safe_cholesky": {
     "line number": [
      83,
      95
     ]
    },
    "gpytorch.utils.warnings.NumericalWarning": {
     "line number": [
      81,
      84,
      93,
      96
     ]
    },
    "issubclass": {
     "line number": [
      84,
      96
     ]
    },
    "str": {
     "line number": [
      85,
      97
     ]
    },
    "test.utils.test_cholesky.torch": {
     "line number": [
      67,
      67,
      68,
      68,
      74,
      77,
      78,
      86,
      90,
      98
     ]
    },
    "test.utils.test_cholesky.warnings": {
     "line number": [
      79,
      81,
      91,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_cholesky.TestPSDSafeCholesky.test_psd_safe_cholesky_psd_cuda": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      102
     ]
    },
    "test.utils.test_cholesky.torch": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_cholesky.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.utils.test_cholesky.psd_safe_cholesky": {
  "data": {
   "shadows": "gpytorch.utils.cholesky.psd_safe_cholesky"
  },
  "type": "import"
 },
 "test.utils.test_cholesky.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_cholesky.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_cholesky.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "test.utils.test_getitem": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_getitem.TestGetitem": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.utils.test_getitem.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.utils.test_getitem.TestGetitem.test_compute_getitem_size": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.utils.getitem._compute_getitem_size": {
     "line number": [
      16
     ]
    },
    "itertools.product": {
     "line number": [
      15
     ]
    },
    "slice": {
     "line number": [
      15,
      15
     ]
    },
    "test.utils.test_getitem.torch": {
     "line number": [
      13,
      15
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_getitem.TestGetitem.test_convert_indices_to_tensors": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "all": {
     "line number": [
      27
     ]
    },
    "any": {
     "line number": [
      24
     ]
    },
    "gpytorch.utils.getitem._convert_indices_to_tensors": {
     "line number": [
      26
     ]
    },
    "itertools.product": {
     "line number": [
      23
     ]
    },
    "slice": {
     "line number": [
      23,
      23
     ]
    },
    "test.utils.test_getitem.torch": {
     "line number": [
      21,
      23,
      24,
      27,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_getitem._compute_getitem_size": {
  "data": {
   "shadows": "gpytorch.utils.getitem._compute_getitem_size"
  },
  "type": "import"
 },
 "test.utils.test_getitem._convert_indices_to_tensors": {
  "data": {
   "shadows": "gpytorch.utils.getitem._convert_indices_to_tensors"
  },
  "type": "import"
 },
 "test.utils.test_getitem.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "test.utils.test_getitem.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_getitem.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_grid": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_grid.TestGrid": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "test.utils.test_grid.unittest": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "test.utils.test_grid.TestGrid.test_choose_grid_size": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "test.utils.test_grid.gpytorch": {
     "line number": [
      23,
      27,
      31,
      35
     ]
    },
    "test.utils.test_grid.torch": {
     "line number": [
      22,
      26,
      30,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_grid.TestGrid.test_scale_to_bounds": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.utils.test_grid.gpytorch": {
     "line number": [
      15
     ]
    },
    "test.utils.test_grid.torch": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_grid.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.utils.test_grid.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_grid.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_interpolation": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      269
     ]
    },
    "test.utils.test_interpolation.unittest": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "module"
 },
 "test.utils.test_interpolation.Interpolation": {
  "data": {
   "shadows": "gpytorch.utils.interpolation.Interpolation"
  },
  "type": "import"
 },
 "test.utils.test_interpolation.TestCubicInterpolation": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.utils.test_interpolation.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.utils.test_interpolation.TestCubicInterpolation.test_interpolation": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      23
     ]
    },
    "gpytorch.utils.interpolation.Interpolation": {
     "line number": [
      15
     ]
    },
    "gpytorch.utils.interpolation.left_interp": {
     "line number": [
      21
     ]
    },
    "test.utils.test_interpolation.torch": {
     "line number": [
      13,
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestCubicInterpolation.test_multidim_interpolation": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      81,
      144
     ]
    },
    "gpytorch.utils.interpolation.Interpolation": {
     "line number": [
      29
     ]
    },
    "test.utils.test_interpolation.torch": {
     "line number": [
      26,
      27,
      31,
      33,
      40,
      42,
      49,
      51,
      58,
      60,
      67,
      69,
      76,
      83,
      85,
      93,
      101,
      109,
      117,
      125,
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "test.utils.test_interpolation.unittest": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "class"
 },
 "test.utils.test_interpolation.TestInterp.setUp": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "test.utils.test_interpolation.torch": {
     "line number": [
      149,
      149,
      150,
      150,
      151,
      151,
      152,
      152,
      153,
      154,
      155,
      167,
      170,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_batch_left_interp_on_a_batch_matrix": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      259
     ]
    },
    "gpytorch.utils.interpolation.left_interp": {
     "line number": [
      257
     ]
    },
    "test.utils.test_interpolation.torch": {
     "line number": [
      255,
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_batch_left_interp_on_a_matrix": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      245
     ]
    },
    "gpytorch.utils.interpolation.left_interp": {
     "line number": [
      243
     ]
    },
    "test.utils.test_interpolation.torch": {
     "line number": [
      241,
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_batch_left_interp_on_a_vector": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      217
     ]
    },
    "gpytorch.utils.interpolation.left_interp": {
     "line number": [
      216
     ]
    },
    "test.utils.test_interpolation.torch": {
     "line number": [
      213,
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_batch_left_t_interp_on_a_batch_matrix": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      266
     ]
    },
    "gpytorch.utils.interpolation.left_t_interp": {
     "line number": [
      264
     ]
    },
    "test.utils.test_interpolation.torch": {
     "line number": [
      262,
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_batch_left_t_interp_on_a_matrix": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      252
     ]
    },
    "gpytorch.utils.interpolation.left_t_interp": {
     "line number": [
      250
     ]
    },
    "test.utils.test_interpolation.torch": {
     "line number": [
      248,
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_batch_left_t_interp_on_a_vector": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      224
     ]
    },
    "gpytorch.utils.interpolation.left_t_interp": {
     "line number": [
      223
     ]
    },
    "test.utils.test_interpolation.torch": {
     "line number": [
      220,
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_left_interp_on_a_matrix": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      231
     ]
    },
    "gpytorch.utils.interpolation.left_interp": {
     "line number": [
      229
     ]
    },
    "test.utils.test_interpolation.torch": {
     "line number": [
      227,
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_left_interp_on_a_vector": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      203
     ]
    },
    "gpytorch.utils.interpolation.left_interp": {
     "line number": [
      201
     ]
    },
    "test.utils.test_interpolation.torch": {
     "line number": [
      199,
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_left_t_interp_on_a_matrix": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      238
     ]
    },
    "gpytorch.utils.interpolation.left_t_interp": {
     "line number": [
      236
     ]
    },
    "test.utils.test_interpolation.torch": {
     "line number": [
      234,
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_interpolation.TestInterp.test_left_t_interp_on_a_vector": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      210
     ]
    },
    "gpytorch.utils.interpolation.left_t_interp": {
     "line number": [
      208
     ]
    },
    "test.utils.test_interpolation.torch": {
     "line number": [
      206,
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_interpolation.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.utils.test_interpolation.left_interp": {
  "data": {
   "shadows": "gpytorch.utils.interpolation.left_interp"
  },
  "type": "import"
 },
 "test.utils.test_interpolation.left_t_interp": {
  "data": {
   "shadows": "gpytorch.utils.interpolation.left_t_interp"
  },
  "type": "import"
 },
 "test.utils.test_interpolation.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_interpolation.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_lanczos": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      26
     ]
    },
    "test.utils.test_lanczos.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "test.utils.test_lanczos.TestLanczos": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.utils.test_lanczos.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.utils.test_lanczos.TestLanczos.test_lanczos": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      23
     ]
    },
    "gpytorch.utils.lanczos.lanczos_tridiag": {
     "line number": [
      18
     ]
    },
    "test.utils.test_lanczos.torch": {
     "line number": [
      14,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_lanczos.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.utils.test_lanczos.lanczos_tridiag": {
  "data": {
   "shadows": "gpytorch.utils.lanczos.lanczos_tridiag"
  },
  "type": "import"
 },
 "test.utils.test_lanczos.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_lanczos.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_linear_cg": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      105
     ]
    },
    "test.utils.test_linear_cg.unittest": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "module"
 },
 "test.utils.test_linear_cg.TestLinearCG": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "test.utils.test_linear_cg.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.utils.test_linear_cg.TestLinearCG.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "test.utils.test_linear_cg.os": {
     "line number": [
      14,
      14
     ]
    },
    "test.utils.test_linear_cg.random": {
     "line number": [
      19
     ]
    },
    "test.utils.test_linear_cg.torch": {
     "line number": [
      15,
      16,
      17,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_linear_cg.TestLinearCG.tearDown": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      22
     ]
    },
    "test.utils.test_linear_cg.torch": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_linear_cg.TestLinearCG.test_batch_cg": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "gpytorch.utils.linear_cg.linear_cg": {
     "line number": [
      72
     ]
    },
    "test.utils.test_linear_cg.torch": {
     "line number": [
      66,
      66,
      69,
      69,
      71,
      71,
      75,
      76,
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_linear_cg.TestLinearCG.test_batch_cg_with_tridiag": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "gpytorch.utils.linear_cg.linear_cg": {
     "line number": [
      88
     ]
    },
    "range": {
     "line number": [
      98,
      100
     ]
    },
    "test.utils.test_linear_cg.torch": {
     "line number": [
      82,
      82,
      85,
      85,
      87,
      87,
      93,
      94,
      95,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_linear_cg.TestLinearCG.test_cg": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "gpytorch.utils.linear_cg.linear_cg": {
     "line number": [
      33
     ]
    },
    "test.utils.test_linear_cg.torch": {
     "line number": [
      27,
      27,
      30,
      30,
      32,
      32,
      37,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_linear_cg.TestLinearCG.test_cg_with_tridiag": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "gpytorch.utils.linear_cg.linear_cg": {
     "line number": [
      48
     ]
    },
    "range": {
     "line number": [
      59
     ]
    },
    "test.utils.test_linear_cg.torch": {
     "line number": [
      42,
      42,
      45,
      45,
      47,
      47,
      54,
      55,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_linear_cg.linear_cg": {
  "data": {
   "shadows": "gpytorch.utils.linear_cg.linear_cg"
  },
  "type": "import"
 },
 "test.utils.test_linear_cg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.utils.test_linear_cg.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.utils.test_linear_cg.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_linear_cg.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_minres": {
  "data": {},
  "type": "module"
 },
 "test.utils.test_minres.BaseTestCase": {
  "data": {
   "shadows": "gpytorch.test.base_test_case.BaseTestCase"
  },
  "type": "import"
 },
 "test.utils.test_minres.TestMinres": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.test.base_test_case.BaseTestCase": {
     "line number": [
      12
     ]
    },
    "test.utils.test_minres.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "test.utils.test_minres.TestMinres._test_minres": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "gpytorch.utils.minres.minres": {
     "line number": [
      29
     ]
    },
    "len": {
     "line number": [
      16,
      32
     ]
    },
    "test.utils.test_minres.gpytorch": {
     "line number": [
      28
     ]
    },
    "test.utils.test_minres.torch": {
     "line number": [
      15,
      17,
      17,
      19,
      19,
      22,
      22,
      37,
      38,
      38,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_minres.TestMinres.test_minres_mat": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "test.utils.test_minres.torch": {
     "line number": [
      56,
      57,
      58,
      58,
      59,
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_minres.TestMinres.test_minres_mat_multiple_shifts": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "test.utils.test_minres.torch": {
     "line number": [
      62,
      63,
      64,
      65,
      65,
      66,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_minres.TestMinres.test_minres_vec": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "test.utils.test_minres.torch": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_minres.TestMinres.test_minres_vec_multiple_shifts": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "test.utils.test_minres.torch": {
     "line number": [
      52,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_minres.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.utils.test_minres.minres": {
  "data": {
   "shadows": "gpytorch.utils.minres.minres"
  },
  "type": "import"
 },
 "test.utils.test_minres.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_minres.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      149
     ]
    },
    "test.utils.test_pivoted_cholesky.unittest": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "module"
 },
 "test.utils.test_pivoted_cholesky.RBFKernel": {
  "data": {
   "shadows": "gpytorch.kernels.RBFKernel"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "test.utils.test_pivoted_cholesky.unittest": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky.setUp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "test.utils.test_pivoted_cholesky.os": {
     "line number": [
      18,
      18
     ]
    },
    "test.utils.test_pivoted_cholesky.random": {
     "line number": [
      23
     ]
    },
    "test.utils.test_pivoted_cholesky.torch": {
     "line number": [
      19,
      20,
      21,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky.tearDown": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      26
     ]
    },
    "test.utils.test_pivoted_cholesky.torch": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky.test_pivoted_cholesky": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      32
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      35
     ]
    },
    "gpytorch.utils.pivoted_cholesky.pivoted_cholesky": {
     "line number": [
      33
     ]
    },
    "test.utils.test_pivoted_cholesky.torch": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky.test_solve_qr": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      43
     ]
    },
    "gpytorch.settings.min_preconditioning_size": {
     "line number": [
      41
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      52,
      55
     ]
    },
    "precondition_qr": {
     "line number": [
      50
     ]
    },
    "test.utils.test_pivoted_cholesky.math": {
     "line number": [
      42,
      42
     ]
    },
    "test.utils.test_pivoted_cholesky.torch": {
     "line number": [
      37,
      39,
      40,
      40,
      42,
      49,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky.test_solve_qr_constant_noise": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      64
     ]
    },
    "gpytorch.settings.min_preconditioning_size": {
     "line number": [
      62
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      73,
      76
     ]
    },
    "precondition_qr": {
     "line number": [
      65,
      71
     ]
    },
    "test.utils.test_pivoted_cholesky.torch": {
     "line number": [
      57,
      59,
      60,
      60,
      63,
      70,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky.test_solve_qr_constant_noise_float32": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "test.utils.test_pivoted_cholesky.torch": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholesky.test_solve_qr_float32": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "test.utils.test_pivoted_cholesky.torch": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyBatch": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "test.utils.test_pivoted_cholesky.unittest": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "class"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyBatch.setUp": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "test.utils.test_pivoted_cholesky.os": {
     "line number": [
      87,
      87
     ]
    },
    "test.utils.test_pivoted_cholesky.random": {
     "line number": [
      92
     ]
    },
    "test.utils.test_pivoted_cholesky.torch": {
     "line number": [
      88,
      89,
      90,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyBatch.tearDown": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      95
     ]
    },
    "test.utils.test_pivoted_cholesky.torch": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyBatch.test_pivoted_cholesky": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      103
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      107
     ]
    },
    "gpytorch.utils.pivoted_cholesky.pivoted_cholesky": {
     "line number": [
      104
     ]
    },
    "test.utils.test_pivoted_cholesky.torch": {
     "line number": [
      100,
      101,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyMultiBatch": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "test.utils.test_pivoted_cholesky.unittest": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "class"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyMultiBatch.setUp": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "test.utils.test_pivoted_cholesky.os": {
     "line number": [
      112,
      112
     ]
    },
    "test.utils.test_pivoted_cholesky.random": {
     "line number": [
      117
     ]
    },
    "test.utils.test_pivoted_cholesky.torch": {
     "line number": [
      113,
      114,
      115,
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyMultiBatch.tearDown": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      120
     ]
    },
    "test.utils.test_pivoted_cholesky.torch": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.TestPivotedCholeskyMultiBatch.test_pivoted_cholesky": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "gpytorch.kernels.RBFKernel": {
     "line number": [
      142
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      146
     ]
    },
    "gpytorch.utils.pivoted_cholesky.pivoted_cholesky": {
     "line number": [
      143
     ]
    },
    "test.utils.test_pivoted_cholesky.torch": {
     "line number": [
      125,
      127,
      128,
      129,
      130,
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_pivoted_cholesky.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.pivoted_cholesky": {
  "data": {
   "shadows": "gpytorch.utils.pivoted_cholesky"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.settings": {
  "data": {
   "shadows": "gpytorch.settings"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_pivoted_cholesky.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_quadrature": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      142
     ]
    },
    "test.utils.test_quadrature.unittest": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "module"
 },
 "test.utils.test_quadrature.DiagLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.DiagLazyTensor"
  },
  "type": "import"
 },
 "test.utils.test_quadrature.GaussHermiteQuadrature1D": {
  "data": {
   "shadows": "gpytorch.utils.quadrature.GaussHermiteQuadrature1D"
  },
  "type": "import"
 },
 "test.utils.test_quadrature.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.utils.test_quadrature.TestQuadrature": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "test.utils.test_quadrature.unittest": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "class"
 },
 "test.utils.test_quadrature.TestQuadrature.setUp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "test.utils.test_quadrature.os": {
     "line number": [
      17,
      17
     ]
    },
    "test.utils.test_quadrature.random": {
     "line number": [
      22
     ]
    },
    "test.utils.test_quadrature.torch": {
     "line number": [
      18,
      19,
      20,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.tearDown": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      25
     ]
    },
    "test.utils.test_quadrature.torch": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_mvn_batch": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "func": {
     "line number": [
      114,
      128,
      132
     ]
    },
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      125
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      125
     ]
    },
    "gpytorch.utils.quadrature.GaussHermiteQuadrature1D": {
     "line number": [
      118
     ]
    },
    "quadrature": {
     "line number": [
      118,
      123,
      128
     ]
    },
    "quadrature.cuda": {
     "line number": [
      123
     ]
    },
    "test.utils.test_quadrature.torch": {
     "line number": [
      114,
      116,
      117,
      131,
      134,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_mvn_batch_cuda": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      138
     ]
    },
    "test.utils.test_quadrature.torch": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_mvn_nonbatch": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "func": {
     "line number": [
      85,
      100,
      104
     ]
    },
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      97
     ]
    },
    "gpytorch.lazy.DiagLazyTensor": {
     "line number": [
      97
     ]
    },
    "gpytorch.utils.quadrature.GaussHermiteQuadrature1D": {
     "line number": [
      90
     ]
    },
    "quadrature": {
     "line number": [
      90,
      95,
      100
     ]
    },
    "quadrature.cuda": {
     "line number": [
      95
     ]
    },
    "test.utils.test_quadrature.torch": {
     "line number": [
      85,
      87,
      88,
      103,
      106,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_mvn_nonbatch_cuda": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      110
     ]
    },
    "test.utils.test_quadrature.torch": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_normal_batch": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "func": {
     "line number": [
      57,
      71,
      75
     ]
    },
    "gpytorch.utils.quadrature.GaussHermiteQuadrature1D": {
     "line number": [
      61
     ]
    },
    "quadrature": {
     "line number": [
      61,
      66,
      71
     ]
    },
    "quadrature.cuda": {
     "line number": [
      66
     ]
    },
    "test.utils.test_quadrature.torch": {
     "line number": [
      57,
      59,
      60,
      68,
      74,
      77,
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_normal_batch_cuda": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      81
     ]
    },
    "test.utils.test_quadrature.torch": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_normal_nonbatch": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "func": {
     "line number": [
      47
     ]
    },
    "gpytorch.utils.quadrature.GaussHermiteQuadrature1D": {
     "line number": [
      33
     ]
    },
    "quadrature": {
     "line number": [
      43
     ]
    },
    "test.utils.test_quadrature.torch": {
     "line number": [
      29,
      31,
      32,
      40,
      46,
      49,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_quadrature.TestQuadrature.test_gauss_hermite_quadrature_1D_normal_nonbatch_cuda": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "gpytorch.test.utils.least_used_cuda_device": {
     "line number": [
      53
     ]
    },
    "test.utils.test_quadrature.torch": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_quadrature.least_used_cuda_device": {
  "data": {
   "shadows": "gpytorch.test.utils.least_used_cuda_device"
  },
  "type": "import"
 },
 "test.utils.test_quadrature.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "test.utils.test_quadrature.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "test.utils.test_quadrature.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_quadrature.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_sparse": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      57
     ]
    },
    "test.utils.test_sparse.unittest": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "module"
 },
 "test.utils.test_sparse.TestSparse": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "test.utils.test_sparse.unittest": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "test.utils.test_sparse.TestSparse.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.utils.test_sparse.torch": {
     "line number": [
      12,
      12,
      13,
      13,
      14,
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_sparse.TestSparse.test_sparse_eye": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "gpytorch.utils.sparse.sparse_eye": {
     "line number": [
      18
     ]
    },
    "test.utils.test_sparse.torch": {
     "line number": [
      19,
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_sparse.TestSparse.test_sparse_getitem_one_dim_int": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "gpytorch.utils.sparse.sparse_getitem": {
     "line number": [
      24
     ]
    },
    "test.utils.test_sparse.torch": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_sparse.TestSparse.test_sparse_getitem_one_dim_slice": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "gpytorch.utils.sparse.sparse_getitem": {
     "line number": [
      29
     ]
    },
    "slice": {
     "line number": [
      29
     ]
    },
    "test.utils.test_sparse.torch": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_sparse.TestSparse.test_sparse_getitem_two_dim_int": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "gpytorch.utils.sparse.sparse_getitem": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_sparse.TestSparse.test_sparse_getitem_two_dim_int_slice": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "gpytorch.utils.sparse.sparse_getitem": {
     "line number": [
      39,
      43
     ]
    },
    "slice": {
     "line number": [
      39,
      43
     ]
    },
    "test.utils.test_sparse.torch": {
     "line number": [
      40,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_sparse.TestSparse.test_sparse_getitem_two_dim_slice": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "gpytorch.utils.sparse.sparse_getitem": {
     "line number": [
      48
     ]
    },
    "slice": {
     "line number": [
      48,
      48
     ]
    },
    "test.utils.test_sparse.torch": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_sparse.TestSparse.test_to_sparse": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "gpytorch.utils.sparse.to_sparse": {
     "line number": [
      53
     ]
    },
    "test.utils.test_sparse.torch": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_sparse.sparse_eye": {
  "data": {
   "shadows": "gpytorch.utils.sparse.sparse_eye"
  },
  "type": "import"
 },
 "test.utils.test_sparse.sparse_getitem": {
  "data": {
   "shadows": "gpytorch.utils.sparse.sparse_getitem"
  },
  "type": "import"
 },
 "test.utils.test_sparse.to_sparse": {
  "data": {
   "shadows": "gpytorch.utils.sparse.to_sparse"
  },
  "type": "import"
 },
 "test.utils.test_sparse.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_sparse.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_toeplitz": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      63
     ]
    },
    "test.utils.test_toeplitz.unittest": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "module"
 },
 "test.utils.test_toeplitz.TestToeplitz": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.utils.test_toeplitz.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.utils.test_toeplitz.TestToeplitz.test_sym_toeplitz_constructs_tensor_from_vector": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "gpytorch.utils.toeplitz.sym_toeplitz": {
     "line number": [
      15
     ]
    },
    "test.utils.test_toeplitz.torch": {
     "line number": [
      13,
      13,
      16,
      16,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_toeplitz.TestToeplitz.test_toeplitz_matmul": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      31
     ]
    },
    "gpytorch.utils.toeplitz.toeplitz": {
     "line number": [
      26
     ]
    },
    "gpytorch.utils.toeplitz.toeplitz_matmul": {
     "line number": [
      30
     ]
    },
    "test.utils.test_toeplitz.torch": {
     "line number": [
      21,
      21,
      22,
      22,
      23,
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_toeplitz.TestToeplitz.test_toeplitz_matmul_batch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      41
     ]
    },
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      47
     ]
    },
    "gpytorch.utils.toeplitz.toeplitz": {
     "line number": [
      42
     ]
    },
    "gpytorch.utils.toeplitz.toeplitz_matmul": {
     "line number": [
      46
     ]
    },
    "test.utils.test_toeplitz.torch": {
     "line number": [
      34,
      34,
      35,
      35,
      37,
      40,
      43
     ]
    },
    "zip": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_toeplitz.TestToeplitz.test_toeplitz_matmul_batchmat": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "gpytorch.test.utils.approx_equal": {
     "line number": [
      60
     ]
    },
    "gpytorch.utils.toeplitz.toeplitz": {
     "line number": [
      55
     ]
    },
    "gpytorch.utils.toeplitz.toeplitz_matmul": {
     "line number": [
      59
     ]
    },
    "test.utils.test_toeplitz.torch": {
     "line number": [
      50,
      50,
      51,
      51,
      52,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "test.utils.test_toeplitz.approx_equal": {
  "data": {
   "shadows": "gpytorch.test.utils.approx_equal"
  },
  "type": "import"
 },
 "test.utils.test_toeplitz.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.utils.test_toeplitz.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.utils.test_toeplitz.utils": {
  "data": {
   "shadows": "gpytorch.utils"
  },
  "type": "import"
 },
 "test.variational": {
  "data": {},
  "type": "module"
 },
 "test.variational.test_batch_decoupled_variational_strategy": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      194
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.unittest": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "module"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledPredictiveGP": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGP": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledPredictiveGP.mll_cls": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "property": {
     "line number": [
      62
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledRobustVGP": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGP": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledRobustVGP.mll_cls": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "property": {
     "line number": [
      68
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGP": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.VariationalTestCase": {
     "line number": [
      27
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGP.batch_shape": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "property": {
     "line number": [
      28
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.torch": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGP.distribution_cls": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "property": {
     "line number": [
      32
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGP.likelihood_cls": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "property": {
     "line number": [
      36
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.likelihood_cls": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGP.mll_cls": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "property": {
     "line number": [
      40
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGP.strategy_cls": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "property": {
     "line number": [
      44
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.strategy_cls": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "super": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "super": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPBatchDim": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGP": {
     "line number": [
      91
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.unittest": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPBatchDim._make_model_and_likelihood": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "_SVGPRegressionModel": {
     "line number": [
      125
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      97,
      98
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.torch": {
     "line number": [
      95,
      96,
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPBatchDim._make_model_and_likelihood._SVGPRegressionModel": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPBatchDim._make_model_and_likelihood._SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "distribution_cls": {
     "line number": [
      103
     ]
    },
    "super": {
     "line number": [
      107
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      109,
      112,
      113,
      114
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.strategy_cls": {
     "line number": [
      104
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.torch": {
     "line number": [
      109,
      114,
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPBatchDim._make_model_and_likelihood._SVGPRegressionModel.forward": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPBatchDim.distribution_cls": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "property": {
     "line number": [
      127
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPBatchDim.mll_cls": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "property": {
     "line number": [
      131
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPOtherBatchDim": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGP": {
     "line number": [
      142
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.unittest": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPOtherBatchDim._make_model_and_likelihood": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "_SVGPRegressionModel": {
     "line number": [
      178
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      148,
      149
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.torch": {
     "line number": [
      146,
      147,
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPOtherBatchDim._make_model_and_likelihood._SVGPRegressionModel": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPOtherBatchDim._make_model_and_likelihood._SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "distribution_cls": {
     "line number": [
      154
     ]
    },
    "super": {
     "line number": [
      158
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      160,
      165,
      166,
      167
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.strategy_cls": {
     "line number": [
      155
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.torch": {
     "line number": [
      161,
      167,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPOtherBatchDim._make_model_and_likelihood._SVGPRegressionModel.forward": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPOtherBatchDim.batch_shape": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "property": {
     "line number": [
      189
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.torch": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPOtherBatchDim.strategy_cls": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "property": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPOtherBatchDim.strategy_cls._batch_dim_strategy_cls": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestMeanFieldBatchDecoupledPredictiveGP": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledPredictiveGP": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestMeanFieldBatchDecoupledPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "property": {
     "line number": [
      80
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestMeanFieldBatchDecoupledRobustVGP": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledRobustVGP": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestMeanFieldBatchDecoupledRobustVGP.distribution_cls": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "property": {
     "line number": [
      86
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestMeanFieldBatchDecoupledVariationalGP": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGP": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestMeanFieldBatchDecoupledVariationalGP.distribution_cls": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "property": {
     "line number": [
      74
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestMeanFieldBatchDecoupledVariationalGPBatchDim": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.TestBatchDecoupledVariationalGPBatchDim": {
     "line number": [
      136
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.unittest": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_batch_decoupled_variational_strategy.TestMeanFieldBatchDecoupledVariationalGPBatchDim.distribution_cls": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "property": {
     "line number": [
      137
     ]
    },
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.VariationalTestCase": {
  "data": {
   "shadows": "gpytorch.test.variational_test_case.VariationalTestCase"
  },
  "type": "import"
 },
 "test.variational.test_batch_decoupled_variational_strategy.batch_dim_strategy_cls": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_batch_decoupled_variational_strategy.likelihood_cls": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.strategy_cls": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "test.variational.test_batch_decoupled_variational_strategy.gpytorch": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_batch_decoupled_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_batch_decoupled_variational_strategy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.variational.test_ciq_variational_strategy": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      59
     ]
    },
    "test.variational.test_ciq_variational_strategy.unittest": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "module"
 },
 "test.variational.test_ciq_variational_strategy.TestCiqVariationalGP": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.VariationalTestCase": {
     "line number": [
      11
     ]
    },
    "test.variational.test_ciq_variational_strategy.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_ciq_variational_strategy.TestCiqVariationalGP.batch_shape": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "property": {
     "line number": [
      12
     ]
    },
    "test.variational.test_ciq_variational_strategy.torch": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_ciq_variational_strategy.TestCiqVariationalGP.distribution_cls": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "property": {
     "line number": [
      16
     ]
    },
    "test.variational.test_ciq_variational_strategy.gpytorch": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_ciq_variational_strategy.TestCiqVariationalGP.mll_cls": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "property": {
     "line number": [
      20
     ]
    },
    "test.variational.test_ciq_variational_strategy.gpytorch": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_ciq_variational_strategy.TestCiqVariationalGP.strategy_cls": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "property": {
     "line number": [
      24
     ]
    },
    "test.variational.test_ciq_variational_strategy.gpytorch": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_ciq_variational_strategy.TestCiqVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "super": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_ciq_variational_strategy.TestCiqVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "super": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_ciq_variational_strategy.TestDeltaCiqVariationalGP": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "test.variational.test_ciq_variational_strategy.TestCiqVariationalGP": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_ciq_variational_strategy.TestDeltaCiqVariationalGP.distribution_cls": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "property": {
     "line number": [
      48
     ]
    },
    "test.variational.test_ciq_variational_strategy.gpytorch": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_ciq_variational_strategy.TestMeanFieldCiqVariationalGP": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "test.variational.test_ciq_variational_strategy.TestCiqVariationalGP": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_ciq_variational_strategy.TestMeanFieldCiqVariationalGP.distribution_cls": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "property": {
     "line number": [
      42
     ]
    },
    "test.variational.test_ciq_variational_strategy.gpytorch": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_ciq_variational_strategy.TestNgdCiqVariationalGP": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "test.variational.test_ciq_variational_strategy.TestCiqVariationalGP": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_ciq_variational_strategy.TestNgdCiqVariationalGP.distribution_cls": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "property": {
     "line number": [
      54
     ]
    },
    "test.variational.test_ciq_variational_strategy.gpytorch": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_ciq_variational_strategy.VariationalTestCase": {
  "data": {
   "shadows": "gpytorch.test.variational_test_case.VariationalTestCase"
  },
  "type": "import"
 },
 "test.variational.test_ciq_variational_strategy.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_ciq_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_ciq_variational_strategy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.variational.test_grid_interpolation_variational_strategy": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      109
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.unittest": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "module"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridMeanFieldPredictiveGP": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "test.variational.test_grid_interpolation_variational_strategy.TestGridPredictiveGP": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridMeanFieldPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "property": {
     "line number": [
      98
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridMeanFieldRobustVGP": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "test.variational.test_grid_interpolation_variational_strategy.TestGridRobustVGP": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridMeanFieldRobustVGP.distribution_cls": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "property": {
     "line number": [
      104
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridMeanFieldVariationalGP": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridMeanFieldVariationalGP.distribution_cls": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "property": {
     "line number": [
      92
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridPredictiveGP": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridPredictiveGP.mll_cls": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "property": {
     "line number": [
      80
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridRobustVGP": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridRobustVGP.mll_cls": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "property": {
     "line number": [
      86
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.VariationalTestCase": {
     "line number": [
      11
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP._make_model_and_likelihood": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "_SVGPRegressionModel": {
     "line number": [
      39
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
     "line number": [
      17,
      18
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.torch": {
     "line number": [
      15,
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP._make_model_and_likelihood._SVGPRegressionModel": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP._make_model_and_likelihood._SVGPRegressionModel.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "distribution_cls": {
     "line number": [
      23
     ]
    },
    "strategy_cls": {
     "line number": [
      24
     ]
    },
    "super": {
     "line number": [
      25
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
     "line number": [
      27,
      30,
      31,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP._make_model_and_likelihood._SVGPRegressionModel.forward": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP.batch_shape": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "property": {
     "line number": [
      41
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.torch": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP.distribution_cls": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "property": {
     "line number": [
      45
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP.learn_inducing_locations": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "property": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP.mll_cls": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "property": {
     "line number": [
      53
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP.strategy_cls": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "property": {
     "line number": [
      57
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "super": {
     "line number": [
      73
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.TestGridVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "super": {
     "line number": [
      63
     ]
    },
    "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
     "line number": [
      62,
      62,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_grid_interpolation_variational_strategy.VariationalTestCase": {
  "data": {
   "shadows": "gpytorch.test.variational_test_case.VariationalTestCase"
  },
  "type": "import"
 },
 "test.variational.test_grid_interpolation_variational_strategy.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_grid_interpolation_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_grid_interpolation_variational_strategy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.variational.test_independent_multitask_variational_strategy": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      118
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.unittest": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "module"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestDeltaMultitaskPredictiveGP": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "test.variational.test_independent_multitask_variational_strategy.TestMultitaskPredictiveGP": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestDeltaMultitaskPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "property": {
     "line number": [
      107
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.gpytorch": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestDeltaMultitaskRobustVGP": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "test.variational.test_independent_multitask_variational_strategy.TestMultitaskRobustVGP": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestDeltaMultitaskRobustVGP.distribution_cls": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "property": {
     "line number": [
      113
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.gpytorch": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestDeltaMultitaskVariationalGP": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "test.variational.test_independent_multitask_variational_strategy.TestMultitaskVariationalGP": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestDeltaMultitaskVariationalGP.distribution_cls": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "property": {
     "line number": [
      101
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.gpytorch": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMeanFieldMultitaskPredictiveGP": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "test.variational.test_independent_multitask_variational_strategy.TestMultitaskPredictiveGP": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMeanFieldMultitaskPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "property": {
     "line number": [
      89
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.gpytorch": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMeanFieldMultitaskRobustVGP": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "test.variational.test_independent_multitask_variational_strategy.TestMultitaskRobustVGP": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMeanFieldMultitaskRobustVGP.distribution_cls": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "property": {
     "line number": [
      95
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.gpytorch": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMeanFieldMultitaskVariationalGP": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "test.variational.test_independent_multitask_variational_strategy.TestMultitaskVariationalGP": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMeanFieldMultitaskVariationalGP.distribution_cls": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "property": {
     "line number": [
      83
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.gpytorch": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMultitaskPredictiveGP": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "test.variational.test_independent_multitask_variational_strategy.TestMultitaskVariationalGP": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMultitaskPredictiveGP.mll_cls": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "property": {
     "line number": [
      71
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.gpytorch": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMultitaskRobustVGP": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "test.variational.test_independent_multitask_variational_strategy.TestMultitaskVariationalGP": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMultitaskRobustVGP.mll_cls": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "property": {
     "line number": [
      77
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.gpytorch": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMultitaskVariationalGP": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.VariationalTestCase": {
     "line number": [
      24
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.unittest": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMultitaskVariationalGP.batch_shape": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "property": {
     "line number": [
      25
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.torch": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMultitaskVariationalGP.distribution_cls": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "property": {
     "line number": [
      33
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.gpytorch": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMultitaskVariationalGP.event_shape": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "property": {
     "line number": [
      29
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.torch": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMultitaskVariationalGP.likelihood_cls": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "property": {
     "line number": [
      37
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.likelihood_cls": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMultitaskVariationalGP.mll_cls": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "property": {
     "line number": [
      41
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.gpytorch": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMultitaskVariationalGP.strategy_cls": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "property": {
     "line number": [
      45
     ]
    },
    "test.variational.test_independent_multitask_variational_strategy.strategy_cls": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMultitaskVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "super": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.TestMultitaskVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "super": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.VariationalTestCase": {
  "data": {
   "shadows": "gpytorch.test.variational_test_case.VariationalTestCase"
  },
  "type": "import"
 },
 "test.variational.test_independent_multitask_variational_strategy.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_independent_multitask_variational_strategy.likelihood_cls": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.variational.test_independent_multitask_variational_strategy.gpytorch": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.strategy_cls": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "test.variational.test_independent_multitask_variational_strategy.gpytorch": {
     "line number": [
      16,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_independent_multitask_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_independent_multitask_variational_strategy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.variational.test_lmc_variational_strategy": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      170
     ]
    },
    "test.variational.test_lmc_variational_strategy.unittest": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "module"
 },
 "test.variational.test_lmc_variational_strategy.TestDeltaLMCPredictiveGP": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCPredictiveGP": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestDeltaLMCPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "property": {
     "line number": [
      105
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestDeltaLMCPredictiveGPSharedVariational": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCPredictiveGPSharedVariational": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestDeltaLMCPredictiveGPSharedVariational.distribution_cls": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "property": {
     "line number": [
      159
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestDeltaLMCRobustVGP": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCRobustVGP": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestDeltaLMCRobustVGP.distribution_cls": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "property": {
     "line number": [
      111
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestDeltaLMCRobustVGPSharedVariational": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCRobustVGPSharedVariational": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestDeltaLMCRobustVGPSharedVariational.distribution_cls": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "property": {
     "line number": [
      165
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestDeltaLMCVariationalGP": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCVariationalGP": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestDeltaLMCVariationalGP.distribution_cls": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "property": {
     "line number": [
      99
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestDeltaLMCVariationalGPSharedVariational": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCVariationalGPSharedVariational": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestDeltaLMCVariationalGPSharedVariational.distribution_cls": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "property": {
     "line number": [
      153
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCPredictiveGP": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCVariationalGP": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCPredictiveGP.mll_cls": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "property": {
     "line number": [
      69
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCPredictiveGPSharedVariational": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCVariationalGPSharedVariational": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCPredictiveGPSharedVariational.mll_cls": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "property": {
     "line number": [
      123
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCRobustVGP": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCVariationalGP": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCRobustVGP.mll_cls": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "property": {
     "line number": [
      75
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCRobustVGPSharedVariational": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCVariationalGPSharedVariational": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCRobustVGPSharedVariational.mll_cls": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "property": {
     "line number": [
      129
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCVariationalGP": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.VariationalTestCase": {
     "line number": [
      26
     ]
    },
    "test.variational.test_lmc_variational_strategy.unittest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCVariationalGP.batch_shape": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "property": {
     "line number": [
      27
     ]
    },
    "test.variational.test_lmc_variational_strategy.torch": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCVariationalGP.distribution_cls": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "property": {
     "line number": [
      35
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCVariationalGP.event_shape": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "property": {
     "line number": [
      31
     ]
    },
    "test.variational.test_lmc_variational_strategy.torch": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCVariationalGP.likelihood_cls": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "property": {
     "line number": [
      39
     ]
    },
    "test.variational.test_lmc_variational_strategy.likelihood_cls": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCVariationalGP.mll_cls": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "property": {
     "line number": [
      43
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCVariationalGP.strategy_cls": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "property": {
     "line number": [
      47
     ]
    },
    "test.variational.test_lmc_variational_strategy.strategy_cls": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "super": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "super": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCVariationalGPSharedVariational": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCVariationalGP": {
     "line number": [
      116
     ]
    },
    "test.variational.test_lmc_variational_strategy.unittest": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestLMCVariationalGPSharedVariational.batch_shape": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "property": {
     "line number": [
      117
     ]
    },
    "test.variational.test_lmc_variational_strategy.torch": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestMeanFieldLMCPredictiveGP": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCPredictiveGP": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestMeanFieldLMCPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "property": {
     "line number": [
      87
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestMeanFieldLMCPredictiveGPSharedVariational": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCPredictiveGPSharedVariational": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestMeanFieldLMCPredictiveGPSharedVariational.distribution_cls": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "property": {
     "line number": [
      141
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestMeanFieldLMCRobustVGP": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCRobustVGP": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestMeanFieldLMCRobustVGP.distribution_cls": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "property": {
     "line number": [
      93
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestMeanFieldLMCRobustVGPSharedVariational": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCRobustVGPSharedVariational": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestMeanFieldLMCRobustVGPSharedVariational.distribution_cls": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "property": {
     "line number": [
      147
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestMeanFieldLMCVariationalGP": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCVariationalGP": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestMeanFieldLMCVariationalGP.distribution_cls": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "property": {
     "line number": [
      81
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.TestMeanFieldLMCVariationalGPSharedVariational": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.TestLMCVariationalGPSharedVariational": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_lmc_variational_strategy.TestMeanFieldLMCVariationalGPSharedVariational.distribution_cls": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "property": {
     "line number": [
      135
     ]
    },
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.VariationalTestCase": {
  "data": {
   "shadows": "gpytorch.test.variational_test_case.VariationalTestCase"
  },
  "type": "import"
 },
 "test.variational.test_lmc_variational_strategy.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_lmc_variational_strategy.likelihood_cls": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.strategy_cls": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "test.variational.test_lmc_variational_strategy.gpytorch": {
     "line number": [
      16,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_lmc_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_lmc_variational_strategy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.variational.test_natural_variational_distribution": {
  "data": {},
  "type": "module"
 },
 "test.variational.test_natural_variational_distribution.CholLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.CholLazyTensor"
  },
  "type": "import"
 },
 "test.variational.test_natural_variational_distribution.Float64Test": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.variational.test_natural_variational_distribution.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_natural_variational_distribution.Float64Test.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "test.variational.test_natural_variational_distribution.torch": {
     "line number": [
      13,
      14,
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_natural_variational_distribution.Float64Test.tearDown": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "test.variational.test_natural_variational_distribution.torch": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_natural_variational_distribution.MultivariateNormal": {
  "data": {
   "shadows": "gpytorch.distributions.MultivariateNormal"
  },
  "type": "import"
 },
 "test.variational.test_natural_variational_distribution.NaturalVariationalDistribution": {
  "data": {
   "shadows": "gpytorch.variational.NaturalVariationalDistribution"
  },
  "type": "import"
 },
 "test.variational.test_natural_variational_distribution.TestNatVariational": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "test.variational.test_natural_variational_distribution.Float64Test": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_natural_variational_distribution.TestNatVariational.test_invertible_init": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      24
     ]
    },
    "gpytorch.lazy.CholLazyTensor": {
     "line number": [
      24
     ]
    },
    "gpytorch.lazy.TriangularLazyTensor": {
     "line number": [
      24
     ]
    },
    "gpytorch.variational.NaturalVariationalDistribution": {
     "line number": [
      26
     ]
    },
    "test.variational.test_natural_variational_distribution.torch": {
     "line number": [
      22,
      23,
      31,
      32
     ]
    },
    "v_dist": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_natural_variational_distribution.TestNatVariational.test_natgrad": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      37,
      49
     ]
    },
    "gpytorch.lazy.CholLazyTensor": {
     "line number": [
      37,
      49
     ]
    },
    "gpytorch.lazy.TriangularLazyTensor": {
     "line number": [
      37,
      49
     ]
    },
    "gpytorch.variational.NaturalVariationalDistribution": {
     "line number": [
      40
     ]
    },
    "test.variational.test_natural_variational_distribution.torch": {
     "line number": [
      35,
      36,
      48,
      52,
      53
     ]
    },
    "v_dist": {
     "line number": [
      40,
      42,
      44
     ]
    },
    "v_dist.initialize_variational_distribution": {
     "line number": [
      41
     ]
    },
    "v_dist.natural_mat.grad": {
     "line number": [
      53
     ]
    },
    "v_dist.natural_vec.grad": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_natural_variational_distribution.TestNatVariational.test_optimization_optimal_error": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "SVGP": {
     "line number": [
      69
     ]
    },
    "float": {
     "line number": [
      79
     ]
    },
    "loss": {
     "line number": [
      83,
      87
     ]
    },
    "model.variational_strategy._variational_distribution.natural_mat.grad.clone": {
     "line number": [
      90
     ]
    },
    "model.variational_strategy._variational_distribution.natural_vec.grad.clone": {
     "line number": [
      89
     ]
    },
    "model.variational_strategy._variational_distribution.parameters": {
     "line number": [
      79
     ]
    },
    "test.variational.test_natural_variational_distribution.gpytorch": {
     "line number": [
      70,
      71
     ]
    },
    "test.variational.test_natural_variational_distribution.torch": {
     "line number": [
      56,
      72,
      73,
      78,
      93,
      93,
      94,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_natural_variational_distribution.TestNatVariational.test_optimization_optimal_error.SVGP": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "test.variational.test_natural_variational_distribution.gpytorch": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_natural_variational_distribution.TestNatVariational.test_optimization_optimal_error.SVGP.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "gpytorch.variational.NaturalVariationalDistribution": {
     "line number": [
      60
     ]
    },
    "super": {
     "line number": [
      62
     ]
    },
    "test.variational.test_natural_variational_distribution.gpytorch": {
     "line number": [
      61,
      63,
      64
     ]
    },
    "v_dist": {
     "line number": [
      60,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_natural_variational_distribution.TestNatVariational.test_optimization_optimal_error.SVGP.forward": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_natural_variational_distribution.TestNatVariational.test_optimization_optimal_error.loss": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "mll": {
     "line number": [
      76
     ]
    },
    "model": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_natural_variational_distribution.TestTrilNatVariational": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "test.variational.test_natural_variational_distribution.Float64Test": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_natural_variational_distribution.TestTrilNatVariational.test_invertible_init": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      101
     ]
    },
    "gpytorch.lazy.CholLazyTensor": {
     "line number": [
      101
     ]
    },
    "gpytorch.lazy.TriangularLazyTensor": {
     "line number": [
      101
     ]
    },
    "gpytorch.variational.TrilNaturalVariationalDistribution": {
     "line number": [
      103
     ]
    },
    "test.variational.test_natural_variational_distribution.torch": {
     "line number": [
      99,
      100,
      108,
      109
     ]
    },
    "v_dist": {
     "line number": [
      103,
      106
     ]
    },
    "v_dist.initialize_variational_distribution": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_natural_variational_distribution.TestTrilNatVariational.test_natgrad": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "gpytorch.distributions.MultivariateNormal": {
     "line number": [
      115
     ]
    },
    "gpytorch.lazy.CholLazyTensor": {
     "line number": [
      115
     ]
    },
    "gpytorch.lazy.TriangularLazyTensor": {
     "line number": [
      115
     ]
    },
    "gpytorch.variational.NaturalVariationalDistribution": {
     "line number": [
      125
     ]
    },
    "gpytorch.variational.TrilNaturalVariationalDistribution": {
     "line number": [
      118
     ]
    },
    "test.variational.test_natural_variational_distribution.jvp": {
     "line number": [
      137
     ]
    },
    "test.variational.test_natural_variational_distribution.torch": {
     "line number": [
      112,
      113,
      143,
      144,
      146,
      147
     ]
    },
    "v_dist": {
     "line number": [
      118,
      120
     ]
    },
    "v_dist.initialize_variational_distribution": {
     "line number": [
      119
     ]
    },
    "v_dist.natural_tril_mat": {
     "line number": [
      143
     ]
    },
    "v_dist.natural_tril_mat.grad": {
     "line number": [
      122
     ]
    },
    "v_dist.natural_vec": {
     "line number": [
      146
     ]
    },
    "v_dist.natural_vec.grad": {
     "line number": [
      121
     ]
    },
    "v_dist_ref": {
     "line number": [
      127
     ]
    },
    "v_dist_ref.natural_mat.detach": {
     "line number": [
      139
     ]
    },
    "v_dist_ref.natural_mat.grad": {
     "line number": [
      129
     ]
    },
    "v_dist_ref.natural_vec.detach": {
     "line number": [
      139
     ]
    },
    "v_dist_ref.natural_vec.grad": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_natural_variational_distribution.TestTrilNatVariational.test_natgrad.f": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "test.variational.test_natural_variational_distribution.torch": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_natural_variational_distribution.TriangularLazyTensor": {
  "data": {
   "shadows": "gpytorch.lazy.TriangularLazyTensor"
  },
  "type": "import"
 },
 "test.variational.test_natural_variational_distribution.TrilNaturalVariationalDistribution": {
  "data": {
   "shadows": "gpytorch.variational.TrilNaturalVariationalDistribution"
  },
  "type": "import"
 },
 "test.variational.test_natural_variational_distribution.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_natural_variational_distribution.jvp": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "f": {
     "line number": [
      154
     ]
    },
    "test.variational.test_natural_variational_distribution.torch": {
     "line number": [
      155,
      156
     ]
    },
    "tuple": {
     "line number": [
      152,
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_natural_variational_distribution.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_natural_variational_distribution.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      73
     ]
    },
    "test.variational.test_orthogonally_decoupled_variational_strategy.unittest": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "module"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledPredictiveGP": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledPredictiveGP.mll_cls": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "property": {
     "line number": [
      62
     ]
    },
    "test.variational.test_orthogonally_decoupled_variational_strategy.gpytorch": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledRobustVGP": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledRobustVGP.mll_cls": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "property": {
     "line number": [
      68
     ]
    },
    "test.variational.test_orthogonally_decoupled_variational_strategy.gpytorch": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.VariationalTestCase": {
     "line number": [
      27
     ]
    },
    "test.variational.test_orthogonally_decoupled_variational_strategy.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP.batch_shape": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "property": {
     "line number": [
      28
     ]
    },
    "test.variational.test_orthogonally_decoupled_variational_strategy.torch": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP.distribution_cls": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "property": {
     "line number": [
      32
     ]
    },
    "test.variational.test_orthogonally_decoupled_variational_strategy.gpytorch": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP.likelihood_cls": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "property": {
     "line number": [
      36
     ]
    },
    "test.variational.test_orthogonally_decoupled_variational_strategy.likelihood_cls": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP.mll_cls": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "property": {
     "line number": [
      40
     ]
    },
    "test.variational.test_orthogonally_decoupled_variational_strategy.gpytorch": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP.strategy_cls": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "property": {
     "line number": [
      44
     ]
    },
    "test.variational.test_orthogonally_decoupled_variational_strategy.strategy_cls": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "super": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.TestOrthogonallyDecoupledVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "super": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.VariationalTestCase": {
  "data": {
   "shadows": "gpytorch.test.variational_test_case.VariationalTestCase"
  },
  "type": "import"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.likelihood_cls": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "test.variational.test_orthogonally_decoupled_variational_strategy.gpytorch": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.strategy_cls": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "test.variational.test_orthogonally_decoupled_variational_strategy.gpytorch": {
     "line number": [
      17,
      18,
      19
     ]
    },
    "test.variational.test_orthogonally_decoupled_variational_strategy.torch": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_orthogonally_decoupled_variational_strategy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.variational.test_unwhitened_variational_strategy": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      92
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.unittest": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "module"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedDeltaPredictiveGP": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedPredictiveGP": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedDeltaPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "property": {
     "line number": [
      81
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.gpytorch": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedDeltaRobustVGP": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedRobustVGP": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedDeltaRobustVGP.distribution_cls": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "property": {
     "line number": [
      87
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.gpytorch": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedDeltaVariationalGP": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedDeltaVariationalGP.distribution_cls": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "property": {
     "line number": [
      75
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.gpytorch": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedMeanFieldPredictiveGP": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedPredictiveGP": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedMeanFieldPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "property": {
     "line number": [
      63
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.gpytorch": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedMeanFieldRobustVGP": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedRobustVGP": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedMeanFieldRobustVGP.distribution_cls": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "property": {
     "line number": [
      69
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.gpytorch": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedMeanFieldVariationalGP": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedMeanFieldVariationalGP.distribution_cls": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "property": {
     "line number": [
      57
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.gpytorch": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedPredictiveGP": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedPredictiveGP.mll_cls": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "property": {
     "line number": [
      45
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.gpytorch": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedRobustVGP": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedRobustVGP.mll_cls": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "property": {
     "line number": [
      51
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.gpytorch": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.VariationalTestCase": {
     "line number": [
      11
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP.batch_shape": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "property": {
     "line number": [
      12
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.torch": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP.distribution_cls": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "property": {
     "line number": [
      16
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.gpytorch": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP.mll_cls": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "property": {
     "line number": [
      20
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.gpytorch": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP.strategy_cls": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "property": {
     "line number": [
      24
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.gpytorch": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "super": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.TestUnwhitenedVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "super": {
     "line number": [
      29
     ]
    },
    "test.variational.test_unwhitened_variational_strategy.gpytorch": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_unwhitened_variational_strategy.VariationalTestCase": {
  "data": {
   "shadows": "gpytorch.test.variational_test_case.VariationalTestCase"
  },
  "type": "import"
 },
 "test.variational.test_unwhitened_variational_strategy.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_unwhitened_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_unwhitened_variational_strategy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "test.variational.test_variational_strategy": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      107
     ]
    },
    "test.variational.test_variational_strategy.unittest": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "module"
 },
 "test.variational.test_variational_strategy.TestDeltaPredictiveGP": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "test.variational.test_variational_strategy.TestPredictiveGP": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestDeltaPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "property": {
     "line number": [
      78
     ]
    },
    "test.variational.test_variational_strategy.gpytorch": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestDeltaRobustVGP": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "test.variational.test_variational_strategy.TestRobustVGP": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestDeltaRobustVGP.distribution_cls": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "property": {
     "line number": [
      84
     ]
    },
    "test.variational.test_variational_strategy.gpytorch": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestDeltaVariationalGP": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "test.variational.test_variational_strategy.TestVariationalGP": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestDeltaVariationalGP.distribution_cls": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "property": {
     "line number": [
      72
     ]
    },
    "test.variational.test_variational_strategy.gpytorch": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestMeanFieldPredictiveGP": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "test.variational.test_variational_strategy.TestPredictiveGP": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestMeanFieldPredictiveGP.distribution_cls": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "property": {
     "line number": [
      60
     ]
    },
    "test.variational.test_variational_strategy.gpytorch": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestMeanFieldRobustVGP": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "test.variational.test_variational_strategy.TestRobustVGP": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestMeanFieldRobustVGP.distribution_cls": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "property": {
     "line number": [
      66
     ]
    },
    "test.variational.test_variational_strategy.gpytorch": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestMeanFieldVariationalGP": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "test.variational.test_variational_strategy.TestVariationalGP": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestMeanFieldVariationalGP.distribution_cls": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "property": {
     "line number": [
      54
     ]
    },
    "test.variational.test_variational_strategy.gpytorch": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestNGDVariationalGP": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "test.variational.test_variational_strategy.TestVariationalGP": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestNGDVariationalGP.distribution_cls": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "property": {
     "line number": [
      90
     ]
    },
    "test.variational.test_variational_strategy.gpytorch": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestNGDVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.VariationalTestCase.test_eval_iteration": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestNGDVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.VariationalTestCase.test_training_iteration": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestPredictiveGP": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "test.variational.test_variational_strategy.TestVariationalGP": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestPredictiveGP.mll_cls": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "property": {
     "line number": [
      42
     ]
    },
    "test.variational.test_variational_strategy.gpytorch": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestRobustVGP": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "test.variational.test_variational_strategy.TestVariationalGP": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestRobustVGP.mll_cls": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "property": {
     "line number": [
      48
     ]
    },
    "test.variational.test_variational_strategy.gpytorch": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestVariationalGP": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gpytorch.test.variational_test_case.VariationalTestCase": {
     "line number": [
      11
     ]
    },
    "test.variational.test_variational_strategy.unittest": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "test.variational.test_variational_strategy.TestVariationalGP.batch_shape": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "property": {
     "line number": [
      12
     ]
    },
    "test.variational.test_variational_strategy.torch": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestVariationalGP.distribution_cls": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "property": {
     "line number": [
      16
     ]
    },
    "test.variational.test_variational_strategy.gpytorch": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestVariationalGP.mll_cls": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "property": {
     "line number": [
      20
     ]
    },
    "test.variational.test_variational_strategy.gpytorch": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestVariationalGP.strategy_cls": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "property": {
     "line number": [
      24
     ]
    },
    "test.variational.test_variational_strategy.gpytorch": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestVariationalGP.test_eval_iteration": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "super": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.TestVariationalGP.test_training_iteration": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "super": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "test.variational.test_variational_strategy.VariationalTestCase": {
  "data": {
   "shadows": "gpytorch.test.variational_test_case.VariationalTestCase"
  },
  "type": "import"
 },
 "test.variational.test_variational_strategy.gpytorch": {
  "data": {
   "shadows": "gpytorch"
  },
  "type": "import"
 },
 "test.variational.test_variational_strategy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "test.variational.test_variational_strategy.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 }
}